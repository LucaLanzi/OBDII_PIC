

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat May 03 16:34:35 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=4
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=4
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=4
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=4
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=4
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=4
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=4
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=4
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=4
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=4
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=4
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=4
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=4
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81   000000                     
    82                           ; Generated 12/10/2023 GMT
    83                           ; 
    84                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F46K22 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116   000FE0                     bsr             equ	4064
   117   000FE9                     fsr0            equ	4073
   118   000FEA                     fsr0h           equ	4074
   119   000FE9                     fsr0l           equ	4073
   120   000FE1                     fsr1            equ	4065
   121   000FE2                     fsr1h           equ	4066
   122   000FE1                     fsr1l           equ	4065
   123   000FD9                     fsr2            equ	4057
   124   000FDA                     fsr2h           equ	4058
   125   000FD9                     fsr2l           equ	4057
   126   000FEF                     indf0           equ	4079
   127   000FE7                     indf1           equ	4071
   128   000FDF                     indf2           equ	4063
   129   000FF2                     intcon          equ	4082
   130   000000                     nvmcon          equ	0
   131   000FF9                     pcl             equ	4089
   132   000FFA                     pclath          equ	4090
   133   000FFB                     pclatu          equ	4091
   134   000FEB                     plusw0          equ	4075
   135   000FE3                     plusw1          equ	4067
   136   000FDB                     plusw2          equ	4059
   137   000FED                     postdec0        equ	4077
   138   000FE5                     postdec1        equ	4069
   139   000FDD                     postdec2        equ	4061
   140   000FEE                     postinc0        equ	4078
   141   000FE6                     postinc1        equ	4070
   142   000FDE                     postinc2        equ	4062
   143   000FEC                     preinc0         equ	4076
   144   000FE4                     preinc1         equ	4068
   145   000FDC                     preinc2         equ	4060
   146   000FF3                     prod            equ	4083
   147   000FF4                     prodh           equ	4084
   148   000FF3                     prodl           equ	4083
   149   000FD8                     status          equ	4056
   150   000FF5                     tablat          equ	4085
   151   000FF6                     tblptr          equ	4086
   152   000FF7                     tblptrh         equ	4087
   153   000FF6                     tblptrl         equ	4086
   154   000FF8                     tblptru         equ	4088
   155   000FFD                     tosl            equ	4093
   156   000FE8                     wreg            equ	4072
   157   000F38                     ANSELA          equ	3896	;# 
   158   000F39                     ANSELB          equ	3897	;# 
   159   000F3A                     ANSELC          equ	3898	;# 
   160   000F3B                     ANSELD          equ	3899	;# 
   161   000F3C                     ANSELE          equ	3900	;# 
   162   000F3D                     PMD2            equ	3901	;# 
   163   000F3E                     PMD1            equ	3902	;# 
   164   000F3F                     PMD0            equ	3903	;# 
   165   000F40                     VREFCON2        equ	3904	;# 
   166   000F40                     DACCON1         equ	3904	;# 
   167   000F41                     VREFCON1        equ	3905	;# 
   168   000F41                     DACCON0         equ	3905	;# 
   169   000F42                     VREFCON0        equ	3906	;# 
   170   000F42                     FVRCON          equ	3906	;# 
   171   000F43                     CTMUICON        equ	3907	;# 
   172   000F43                     CTMUICONH       equ	3907	;# 
   173   000F44                     CTMUCONL        equ	3908	;# 
   174   000F44                     CTMUCON1        equ	3908	;# 
   175   000F45                     CTMUCONH        equ	3909	;# 
   176   000F45                     CTMUCON0        equ	3909	;# 
   177   000F46                     SRCON1          equ	3910	;# 
   178   000F47                     SRCON0          equ	3911	;# 
   179   000F48                     CCPTMRS1        equ	3912	;# 
   180   000F49                     CCPTMRS0        equ	3913	;# 
   181   000F4A                     T6CON           equ	3914	;# 
   182   000F4B                     PR6             equ	3915	;# 
   183   000F4C                     TMR6            equ	3916	;# 
   184   000F4D                     T5GCON          equ	3917	;# 
   185   000F4E                     T5CON           equ	3918	;# 
   186   000F4F                     TMR5            equ	3919	;# 
   187   000F4F                     TMR5L           equ	3919	;# 
   188   000F50                     TMR5H           equ	3920	;# 
   189   000F51                     T4CON           equ	3921	;# 
   190   000F52                     PR4             equ	3922	;# 
   191   000F53                     TMR4            equ	3923	;# 
   192   000F54                     CCP5CON         equ	3924	;# 
   193   000F55                     CCPR5           equ	3925	;# 
   194   000F55                     CCPR5L          equ	3925	;# 
   195   000F56                     CCPR5H          equ	3926	;# 
   196   000F57                     CCP4CON         equ	3927	;# 
   197   000F58                     CCPR4           equ	3928	;# 
   198   000F58                     CCPR4L          equ	3928	;# 
   199   000F59                     CCPR4H          equ	3929	;# 
   200   000F5A                     PSTR3CON        equ	3930	;# 
   201   000F5B                     ECCP3AS         equ	3931	;# 
   202   000F5B                     CCP3AS          equ	3931	;# 
   203   000F5C                     PWM3CON         equ	3932	;# 
   204   000F5D                     CCP3CON         equ	3933	;# 
   205   000F5E                     CCPR3           equ	3934	;# 
   206   000F5E                     CCPR3L          equ	3934	;# 
   207   000F5F                     CCPR3H          equ	3935	;# 
   208   000F60                     SLRCON          equ	3936	;# 
   209   000F61                     WPUB            equ	3937	;# 
   210   000F62                     IOCB            equ	3938	;# 
   211   000F63                     PSTR2CON        equ	3939	;# 
   212   000F64                     ECCP2AS         equ	3940	;# 
   213   000F64                     CCP2AS          equ	3940	;# 
   214   000F65                     PWM2CON         equ	3941	;# 
   215   000F66                     CCP2CON         equ	3942	;# 
   216   000F67                     CCPR2           equ	3943	;# 
   217   000F67                     CCPR2L          equ	3943	;# 
   218   000F68                     CCPR2H          equ	3944	;# 
   219   000F69                     SSP2CON3        equ	3945	;# 
   220   000F6A                     SSP2MSK         equ	3946	;# 
   221   000F6B                     SSP2CON2        equ	3947	;# 
   222   000F6C                     SSP2CON1        equ	3948	;# 
   223   000F6D                     SSP2STAT        equ	3949	;# 
   224   000F6E                     SSP2ADD         equ	3950	;# 
   225   000F6F                     SSP2BUF         equ	3951	;# 
   226   000F70                     BAUDCON2        equ	3952	;# 
   227   000F70                     BAUD2CON        equ	3952	;# 
   228   000F71                     RCSTA2          equ	3953	;# 
   229   000F71                     RC2STA          equ	3953	;# 
   230   000F72                     TXSTA2          equ	3954	;# 
   231   000F72                     TX2STA          equ	3954	;# 
   232   000F73                     TXREG2          equ	3955	;# 
   233   000F73                     TX2REG          equ	3955	;# 
   234   000F74                     RCREG2          equ	3956	;# 
   235   000F74                     RC2REG          equ	3956	;# 
   236   000F75                     SPBRG2          equ	3957	;# 
   237   000F75                     SP2BRG          equ	3957	;# 
   238   000F76                     SPBRGH2         equ	3958	;# 
   239   000F76                     SP2BRGH         equ	3958	;# 
   240   000F77                     CM2CON1         equ	3959	;# 
   241   000F77                     CM12CON         equ	3959	;# 
   242   000F78                     CM2CON0         equ	3960	;# 
   243   000F78                     CM2CON          equ	3960	;# 
   244   000F79                     CM1CON0         equ	3961	;# 
   245   000F79                     CM1CON          equ	3961	;# 
   246   000F7A                     PIE4            equ	3962	;# 
   247   000F7B                     PIR4            equ	3963	;# 
   248   000F7C                     IPR4            equ	3964	;# 
   249   000F7D                     PIE5            equ	3965	;# 
   250   000F7E                     PIR5            equ	3966	;# 
   251   000F7F                     IPR5            equ	3967	;# 
   252   000F80                     PORTA           equ	3968	;# 
   253   000F81                     PORTB           equ	3969	;# 
   254   000F82                     PORTC           equ	3970	;# 
   255   000F83                     PORTD           equ	3971	;# 
   256   000F84                     PORTE           equ	3972	;# 
   257   000F89                     LATA            equ	3977	;# 
   258   000F8A                     LATB            equ	3978	;# 
   259   000F8B                     LATC            equ	3979	;# 
   260   000F8C                     LATD            equ	3980	;# 
   261   000F8D                     LATE            equ	3981	;# 
   262   000F92                     TRISA           equ	3986	;# 
   263   000F92                     DDRA            equ	3986	;# 
   264   000F93                     TRISB           equ	3987	;# 
   265   000F93                     DDRB            equ	3987	;# 
   266   000F94                     TRISC           equ	3988	;# 
   267   000F94                     DDRC            equ	3988	;# 
   268   000F95                     TRISD           equ	3989	;# 
   269   000F95                     DDRD            equ	3989	;# 
   270   000F96                     TRISE           equ	3990	;# 
   271   000F96                     DDRE            equ	3990	;# 
   272   000F9B                     OSCTUNE         equ	3995	;# 
   273   000F9C                     HLVDCON         equ	3996	;# 
   274   000F9C                     LVDCON          equ	3996	;# 
   275   000F9D                     PIE1            equ	3997	;# 
   276   000F9E                     PIR1            equ	3998	;# 
   277   000F9F                     IPR1            equ	3999	;# 
   278   000FA0                     PIE2            equ	4000	;# 
   279   000FA1                     PIR2            equ	4001	;# 
   280   000FA2                     IPR2            equ	4002	;# 
   281   000FA3                     PIE3            equ	4003	;# 
   282   000FA4                     PIR3            equ	4004	;# 
   283   000FA5                     IPR3            equ	4005	;# 
   284   000FA6                     EECON1          equ	4006	;# 
   285   000FA7                     EECON2          equ	4007	;# 
   286   000FA8                     EEDATA          equ	4008	;# 
   287   000FA9                     EEADR           equ	4009	;# 
   288   000FAA                     EEADRH          equ	4010	;# 
   289   000FAB                     RCSTA1          equ	4011	;# 
   290   000FAB                     RCSTA           equ	4011	;# 
   291   000FAB                     RC1STA          equ	4011	;# 
   292   000FAC                     TXSTA1          equ	4012	;# 
   293   000FAC                     TXSTA           equ	4012	;# 
   294   000FAC                     TX1STA          equ	4012	;# 
   295   000FAD                     TXREG1          equ	4013	;# 
   296   000FAD                     TXREG           equ	4013	;# 
   297   000FAD                     TX1REG          equ	4013	;# 
   298   000FAE                     RCREG1          equ	4014	;# 
   299   000FAE                     RCREG           equ	4014	;# 
   300   000FAE                     RC1REG          equ	4014	;# 
   301   000FAF                     SPBRG1          equ	4015	;# 
   302   000FAF                     SPBRG           equ	4015	;# 
   303   000FAF                     SP1BRG          equ	4015	;# 
   304   000FB0                     SPBRGH1         equ	4016	;# 
   305   000FB0                     SPBRGH          equ	4016	;# 
   306   000FB0                     SP1BRGH         equ	4016	;# 
   307   000FB1                     T3CON           equ	4017	;# 
   308   000FB2                     TMR3            equ	4018	;# 
   309   000FB2                     TMR3L           equ	4018	;# 
   310   000FB3                     TMR3H           equ	4019	;# 
   311   000FB4                     T3GCON          equ	4020	;# 
   312   000FB6                     ECCP1AS         equ	4022	;# 
   313   000FB6                     ECCPAS          equ	4022	;# 
   314   000FB7                     PWM1CON         equ	4023	;# 
   315   000FB7                     PWMCON          equ	4023	;# 
   316   000FB8                     BAUDCON1        equ	4024	;# 
   317   000FB8                     BAUDCON         equ	4024	;# 
   318   000FB8                     BAUDCTL         equ	4024	;# 
   319   000FB8                     BAUD1CON        equ	4024	;# 
   320   000FB9                     PSTR1CON        equ	4025	;# 
   321   000FB9                     PSTRCON         equ	4025	;# 
   322   000FBA                     T2CON           equ	4026	;# 
   323   000FBB                     PR2             equ	4027	;# 
   324   000FBC                     TMR2            equ	4028	;# 
   325   000FBD                     CCP1CON         equ	4029	;# 
   326   000FBE                     CCPR1           equ	4030	;# 
   327   000FBE                     CCPR1L          equ	4030	;# 
   328   000FBF                     CCPR1H          equ	4031	;# 
   329   000FC0                     ADCON2          equ	4032	;# 
   330   000FC1                     ADCON1          equ	4033	;# 
   331   000FC2                     ADCON0          equ	4034	;# 
   332   000FC3                     ADRES           equ	4035	;# 
   333   000FC3                     ADRESL          equ	4035	;# 
   334   000FC4                     ADRESH          equ	4036	;# 
   335   000FC5                     SSP1CON2        equ	4037	;# 
   336   000FC5                     SSPCON2         equ	4037	;# 
   337   000FC6                     SSP1CON1        equ	4038	;# 
   338   000FC6                     SSPCON1         equ	4038	;# 
   339   000FC7                     SSP1STAT        equ	4039	;# 
   340   000FC7                     SSPSTAT         equ	4039	;# 
   341   000FC8                     SSP1ADD         equ	4040	;# 
   342   000FC8                     SSPADD          equ	4040	;# 
   343   000FC9                     SSP1BUF         equ	4041	;# 
   344   000FC9                     SSPBUF          equ	4041	;# 
   345   000FCA                     SSP1MSK         equ	4042	;# 
   346   000FCA                     SSPMSK          equ	4042	;# 
   347   000FCB                     SSP1CON3        equ	4043	;# 
   348   000FCB                     SSPCON3         equ	4043	;# 
   349   000FCC                     T1GCON          equ	4044	;# 
   350   000FCD                     T1CON           equ	4045	;# 
   351   000FCE                     TMR1            equ	4046	;# 
   352   000FCE                     TMR1L           equ	4046	;# 
   353   000FCF                     TMR1H           equ	4047	;# 
   354   000FD0                     RCON            equ	4048	;# 
   355   000FD1                     WDTCON          equ	4049	;# 
   356   000FD2                     OSCCON2         equ	4050	;# 
   357   000FD3                     OSCCON          equ	4051	;# 
   358   000FD5                     T0CON           equ	4053	;# 
   359   000FD6                     TMR0            equ	4054	;# 
   360   000FD6                     TMR0L           equ	4054	;# 
   361   000FD7                     TMR0H           equ	4055	;# 
   362   000FD8                     STATUS          equ	4056	;# 
   363   000FD9                     FSR2            equ	4057	;# 
   364   000FD9                     FSR2L           equ	4057	;# 
   365   000FDA                     FSR2H           equ	4058	;# 
   366   000FDB                     PLUSW2          equ	4059	;# 
   367   000FDC                     PREINC2         equ	4060	;# 
   368   000FDD                     POSTDEC2        equ	4061	;# 
   369   000FDE                     POSTINC2        equ	4062	;# 
   370   000FDF                     INDF2           equ	4063	;# 
   371   000FE0                     BSR             equ	4064	;# 
   372   000FE1                     FSR1            equ	4065	;# 
   373   000FE1                     FSR1L           equ	4065	;# 
   374   000FE2                     FSR1H           equ	4066	;# 
   375   000FE3                     PLUSW1          equ	4067	;# 
   376   000FE4                     PREINC1         equ	4068	;# 
   377   000FE5                     POSTDEC1        equ	4069	;# 
   378   000FE6                     POSTINC1        equ	4070	;# 
   379   000FE7                     INDF1           equ	4071	;# 
   380   000FE8                     WREG            equ	4072	;# 
   381   000FE9                     FSR0            equ	4073	;# 
   382   000FE9                     FSR0L           equ	4073	;# 
   383   000FEA                     FSR0H           equ	4074	;# 
   384   000FEB                     PLUSW0          equ	4075	;# 
   385   000FEC                     PREINC0         equ	4076	;# 
   386   000FED                     POSTDEC0        equ	4077	;# 
   387   000FEE                     POSTINC0        equ	4078	;# 
   388   000FEF                     INDF0           equ	4079	;# 
   389   000FF0                     INTCON3         equ	4080	;# 
   390   000FF1                     INTCON2         equ	4081	;# 
   391   000FF2                     INTCON          equ	4082	;# 
   392   000FF3                     PROD            equ	4083	;# 
   393   000FF3                     PRODL           equ	4083	;# 
   394   000FF4                     PRODH           equ	4084	;# 
   395   000FF5                     TABLAT          equ	4085	;# 
   396   000FF6                     TBLPTR          equ	4086	;# 
   397   000FF6                     TBLPTRL         equ	4086	;# 
   398   000FF7                     TBLPTRH         equ	4087	;# 
   399   000FF8                     TBLPTRU         equ	4088	;# 
   400   000FF9                     PCLAT           equ	4089	;# 
   401   000FF9                     PC              equ	4089	;# 
   402   000FF9                     PCL             equ	4089	;# 
   403   000FFA                     PCLATH          equ	4090	;# 
   404   000FFB                     PCLATU          equ	4091	;# 
   405   000FFC                     STKPTR          equ	4092	;# 
   406   000FFD                     TOS             equ	4093	;# 
   407   000FFD                     TOSL            equ	4093	;# 
   408   000FFE                     TOSH            equ	4094	;# 
   409   000FFF                     TOSU            equ	4095	;# 
   410   000F38                     ANSELA          equ	3896	;# 
   411   000F39                     ANSELB          equ	3897	;# 
   412   000F3A                     ANSELC          equ	3898	;# 
   413   000F3B                     ANSELD          equ	3899	;# 
   414   000F3C                     ANSELE          equ	3900	;# 
   415   000F3D                     PMD2            equ	3901	;# 
   416   000F3E                     PMD1            equ	3902	;# 
   417   000F3F                     PMD0            equ	3903	;# 
   418   000F40                     VREFCON2        equ	3904	;# 
   419   000F40                     DACCON1         equ	3904	;# 
   420   000F41                     VREFCON1        equ	3905	;# 
   421   000F41                     DACCON0         equ	3905	;# 
   422   000F42                     VREFCON0        equ	3906	;# 
   423   000F42                     FVRCON          equ	3906	;# 
   424   000F43                     CTMUICON        equ	3907	;# 
   425   000F43                     CTMUICONH       equ	3907	;# 
   426   000F44                     CTMUCONL        equ	3908	;# 
   427   000F44                     CTMUCON1        equ	3908	;# 
   428   000F45                     CTMUCONH        equ	3909	;# 
   429   000F45                     CTMUCON0        equ	3909	;# 
   430   000F46                     SRCON1          equ	3910	;# 
   431   000F47                     SRCON0          equ	3911	;# 
   432   000F48                     CCPTMRS1        equ	3912	;# 
   433   000F49                     CCPTMRS0        equ	3913	;# 
   434   000F4A                     T6CON           equ	3914	;# 
   435   000F4B                     PR6             equ	3915	;# 
   436   000F4C                     TMR6            equ	3916	;# 
   437   000F4D                     T5GCON          equ	3917	;# 
   438   000F4E                     T5CON           equ	3918	;# 
   439   000F4F                     TMR5            equ	3919	;# 
   440   000F4F                     TMR5L           equ	3919	;# 
   441   000F50                     TMR5H           equ	3920	;# 
   442   000F51                     T4CON           equ	3921	;# 
   443   000F52                     PR4             equ	3922	;# 
   444   000F53                     TMR4            equ	3923	;# 
   445   000F54                     CCP5CON         equ	3924	;# 
   446   000F55                     CCPR5           equ	3925	;# 
   447   000F55                     CCPR5L          equ	3925	;# 
   448   000F56                     CCPR5H          equ	3926	;# 
   449   000F57                     CCP4CON         equ	3927	;# 
   450   000F58                     CCPR4           equ	3928	;# 
   451   000F58                     CCPR4L          equ	3928	;# 
   452   000F59                     CCPR4H          equ	3929	;# 
   453   000F5A                     PSTR3CON        equ	3930	;# 
   454   000F5B                     ECCP3AS         equ	3931	;# 
   455   000F5B                     CCP3AS          equ	3931	;# 
   456   000F5C                     PWM3CON         equ	3932	;# 
   457   000F5D                     CCP3CON         equ	3933	;# 
   458   000F5E                     CCPR3           equ	3934	;# 
   459   000F5E                     CCPR3L          equ	3934	;# 
   460   000F5F                     CCPR3H          equ	3935	;# 
   461   000F60                     SLRCON          equ	3936	;# 
   462   000F61                     WPUB            equ	3937	;# 
   463   000F62                     IOCB            equ	3938	;# 
   464   000F63                     PSTR2CON        equ	3939	;# 
   465   000F64                     ECCP2AS         equ	3940	;# 
   466   000F64                     CCP2AS          equ	3940	;# 
   467   000F65                     PWM2CON         equ	3941	;# 
   468   000F66                     CCP2CON         equ	3942	;# 
   469   000F67                     CCPR2           equ	3943	;# 
   470   000F67                     CCPR2L          equ	3943	;# 
   471   000F68                     CCPR2H          equ	3944	;# 
   472   000F69                     SSP2CON3        equ	3945	;# 
   473   000F6A                     SSP2MSK         equ	3946	;# 
   474   000F6B                     SSP2CON2        equ	3947	;# 
   475   000F6C                     SSP2CON1        equ	3948	;# 
   476   000F6D                     SSP2STAT        equ	3949	;# 
   477   000F6E                     SSP2ADD         equ	3950	;# 
   478   000F6F                     SSP2BUF         equ	3951	;# 
   479   000F70                     BAUDCON2        equ	3952	;# 
   480   000F70                     BAUD2CON        equ	3952	;# 
   481   000F71                     RCSTA2          equ	3953	;# 
   482   000F71                     RC2STA          equ	3953	;# 
   483   000F72                     TXSTA2          equ	3954	;# 
   484   000F72                     TX2STA          equ	3954	;# 
   485   000F73                     TXREG2          equ	3955	;# 
   486   000F73                     TX2REG          equ	3955	;# 
   487   000F74                     RCREG2          equ	3956	;# 
   488   000F74                     RC2REG          equ	3956	;# 
   489   000F75                     SPBRG2          equ	3957	;# 
   490   000F75                     SP2BRG          equ	3957	;# 
   491   000F76                     SPBRGH2         equ	3958	;# 
   492   000F76                     SP2BRGH         equ	3958	;# 
   493   000F77                     CM2CON1         equ	3959	;# 
   494   000F77                     CM12CON         equ	3959	;# 
   495   000F78                     CM2CON0         equ	3960	;# 
   496   000F78                     CM2CON          equ	3960	;# 
   497   000F79                     CM1CON0         equ	3961	;# 
   498   000F79                     CM1CON          equ	3961	;# 
   499   000F7A                     PIE4            equ	3962	;# 
   500   000F7B                     PIR4            equ	3963	;# 
   501   000F7C                     IPR4            equ	3964	;# 
   502   000F7D                     PIE5            equ	3965	;# 
   503   000F7E                     PIR5            equ	3966	;# 
   504   000F7F                     IPR5            equ	3967	;# 
   505   000F80                     PORTA           equ	3968	;# 
   506   000F81                     PORTB           equ	3969	;# 
   507   000F82                     PORTC           equ	3970	;# 
   508   000F83                     PORTD           equ	3971	;# 
   509   000F84                     PORTE           equ	3972	;# 
   510   000F89                     LATA            equ	3977	;# 
   511   000F8A                     LATB            equ	3978	;# 
   512   000F8B                     LATC            equ	3979	;# 
   513   000F8C                     LATD            equ	3980	;# 
   514   000F8D                     LATE            equ	3981	;# 
   515   000F92                     TRISA           equ	3986	;# 
   516   000F92                     DDRA            equ	3986	;# 
   517   000F93                     TRISB           equ	3987	;# 
   518   000F93                     DDRB            equ	3987	;# 
   519   000F94                     TRISC           equ	3988	;# 
   520   000F94                     DDRC            equ	3988	;# 
   521   000F95                     TRISD           equ	3989	;# 
   522   000F95                     DDRD            equ	3989	;# 
   523   000F96                     TRISE           equ	3990	;# 
   524   000F96                     DDRE            equ	3990	;# 
   525   000F9B                     OSCTUNE         equ	3995	;# 
   526   000F9C                     HLVDCON         equ	3996	;# 
   527   000F9C                     LVDCON          equ	3996	;# 
   528   000F9D                     PIE1            equ	3997	;# 
   529   000F9E                     PIR1            equ	3998	;# 
   530   000F9F                     IPR1            equ	3999	;# 
   531   000FA0                     PIE2            equ	4000	;# 
   532   000FA1                     PIR2            equ	4001	;# 
   533   000FA2                     IPR2            equ	4002	;# 
   534   000FA3                     PIE3            equ	4003	;# 
   535   000FA4                     PIR3            equ	4004	;# 
   536   000FA5                     IPR3            equ	4005	;# 
   537   000FA6                     EECON1          equ	4006	;# 
   538   000FA7                     EECON2          equ	4007	;# 
   539   000FA8                     EEDATA          equ	4008	;# 
   540   000FA9                     EEADR           equ	4009	;# 
   541   000FAA                     EEADRH          equ	4010	;# 
   542   000FAB                     RCSTA1          equ	4011	;# 
   543   000FAB                     RCSTA           equ	4011	;# 
   544   000FAB                     RC1STA          equ	4011	;# 
   545   000FAC                     TXSTA1          equ	4012	;# 
   546   000FAC                     TXSTA           equ	4012	;# 
   547   000FAC                     TX1STA          equ	4012	;# 
   548   000FAD                     TXREG1          equ	4013	;# 
   549   000FAD                     TXREG           equ	4013	;# 
   550   000FAD                     TX1REG          equ	4013	;# 
   551   000FAE                     RCREG1          equ	4014	;# 
   552   000FAE                     RCREG           equ	4014	;# 
   553   000FAE                     RC1REG          equ	4014	;# 
   554   000FAF                     SPBRG1          equ	4015	;# 
   555   000FAF                     SPBRG           equ	4015	;# 
   556   000FAF                     SP1BRG          equ	4015	;# 
   557   000FB0                     SPBRGH1         equ	4016	;# 
   558   000FB0                     SPBRGH          equ	4016	;# 
   559   000FB0                     SP1BRGH         equ	4016	;# 
   560   000FB1                     T3CON           equ	4017	;# 
   561   000FB2                     TMR3            equ	4018	;# 
   562   000FB2                     TMR3L           equ	4018	;# 
   563   000FB3                     TMR3H           equ	4019	;# 
   564   000FB4                     T3GCON          equ	4020	;# 
   565   000FB6                     ECCP1AS         equ	4022	;# 
   566   000FB6                     ECCPAS          equ	4022	;# 
   567   000FB7                     PWM1CON         equ	4023	;# 
   568   000FB7                     PWMCON          equ	4023	;# 
   569   000FB8                     BAUDCON1        equ	4024	;# 
   570   000FB8                     BAUDCON         equ	4024	;# 
   571   000FB8                     BAUDCTL         equ	4024	;# 
   572   000FB8                     BAUD1CON        equ	4024	;# 
   573   000FB9                     PSTR1CON        equ	4025	;# 
   574   000FB9                     PSTRCON         equ	4025	;# 
   575   000FBA                     T2CON           equ	4026	;# 
   576   000FBB                     PR2             equ	4027	;# 
   577   000FBC                     TMR2            equ	4028	;# 
   578   000FBD                     CCP1CON         equ	4029	;# 
   579   000FBE                     CCPR1           equ	4030	;# 
   580   000FBE                     CCPR1L          equ	4030	;# 
   581   000FBF                     CCPR1H          equ	4031	;# 
   582   000FC0                     ADCON2          equ	4032	;# 
   583   000FC1                     ADCON1          equ	4033	;# 
   584   000FC2                     ADCON0          equ	4034	;# 
   585   000FC3                     ADRES           equ	4035	;# 
   586   000FC3                     ADRESL          equ	4035	;# 
   587   000FC4                     ADRESH          equ	4036	;# 
   588   000FC5                     SSP1CON2        equ	4037	;# 
   589   000FC5                     SSPCON2         equ	4037	;# 
   590   000FC6                     SSP1CON1        equ	4038	;# 
   591   000FC6                     SSPCON1         equ	4038	;# 
   592   000FC7                     SSP1STAT        equ	4039	;# 
   593   000FC7                     SSPSTAT         equ	4039	;# 
   594   000FC8                     SSP1ADD         equ	4040	;# 
   595   000FC8                     SSPADD          equ	4040	;# 
   596   000FC9                     SSP1BUF         equ	4041	;# 
   597   000FC9                     SSPBUF          equ	4041	;# 
   598   000FCA                     SSP1MSK         equ	4042	;# 
   599   000FCA                     SSPMSK          equ	4042	;# 
   600   000FCB                     SSP1CON3        equ	4043	;# 
   601   000FCB                     SSPCON3         equ	4043	;# 
   602   000FCC                     T1GCON          equ	4044	;# 
   603   000FCD                     T1CON           equ	4045	;# 
   604   000FCE                     TMR1            equ	4046	;# 
   605   000FCE                     TMR1L           equ	4046	;# 
   606   000FCF                     TMR1H           equ	4047	;# 
   607   000FD0                     RCON            equ	4048	;# 
   608   000FD1                     WDTCON          equ	4049	;# 
   609   000FD2                     OSCCON2         equ	4050	;# 
   610   000FD3                     OSCCON          equ	4051	;# 
   611   000FD5                     T0CON           equ	4053	;# 
   612   000FD6                     TMR0            equ	4054	;# 
   613   000FD6                     TMR0L           equ	4054	;# 
   614   000FD7                     TMR0H           equ	4055	;# 
   615   000FD8                     STATUS          equ	4056	;# 
   616   000FD9                     FSR2            equ	4057	;# 
   617   000FD9                     FSR2L           equ	4057	;# 
   618   000FDA                     FSR2H           equ	4058	;# 
   619   000FDB                     PLUSW2          equ	4059	;# 
   620   000FDC                     PREINC2         equ	4060	;# 
   621   000FDD                     POSTDEC2        equ	4061	;# 
   622   000FDE                     POSTINC2        equ	4062	;# 
   623   000FDF                     INDF2           equ	4063	;# 
   624   000FE0                     BSR             equ	4064	;# 
   625   000FE1                     FSR1            equ	4065	;# 
   626   000FE1                     FSR1L           equ	4065	;# 
   627   000FE2                     FSR1H           equ	4066	;# 
   628   000FE3                     PLUSW1          equ	4067	;# 
   629   000FE4                     PREINC1         equ	4068	;# 
   630   000FE5                     POSTDEC1        equ	4069	;# 
   631   000FE6                     POSTINC1        equ	4070	;# 
   632   000FE7                     INDF1           equ	4071	;# 
   633   000FE8                     WREG            equ	4072	;# 
   634   000FE9                     FSR0            equ	4073	;# 
   635   000FE9                     FSR0L           equ	4073	;# 
   636   000FEA                     FSR0H           equ	4074	;# 
   637   000FEB                     PLUSW0          equ	4075	;# 
   638   000FEC                     PREINC0         equ	4076	;# 
   639   000FED                     POSTDEC0        equ	4077	;# 
   640   000FEE                     POSTINC0        equ	4078	;# 
   641   000FEF                     INDF0           equ	4079	;# 
   642   000FF0                     INTCON3         equ	4080	;# 
   643   000FF1                     INTCON2         equ	4081	;# 
   644   000FF2                     INTCON          equ	4082	;# 
   645   000FF3                     PROD            equ	4083	;# 
   646   000FF3                     PRODL           equ	4083	;# 
   647   000FF4                     PRODH           equ	4084	;# 
   648   000FF5                     TABLAT          equ	4085	;# 
   649   000FF6                     TBLPTR          equ	4086	;# 
   650   000FF6                     TBLPTRL         equ	4086	;# 
   651   000FF7                     TBLPTRH         equ	4087	;# 
   652   000FF8                     TBLPTRU         equ	4088	;# 
   653   000FF9                     PCLAT           equ	4089	;# 
   654   000FF9                     PC              equ	4089	;# 
   655   000FF9                     PCL             equ	4089	;# 
   656   000FFA                     PCLATH          equ	4090	;# 
   657   000FFB                     PCLATU          equ	4091	;# 
   658   000FFC                     STKPTR          equ	4092	;# 
   659   000FFD                     TOS             equ	4093	;# 
   660   000FFD                     TOSL            equ	4093	;# 
   661   000FFE                     TOSH            equ	4094	;# 
   662   000FFF                     TOSU            equ	4095	;# 
   663                           
   664                           	psect	idataBANK0
   665   002DEC                     __pidataBANK0:
   666                           	callstack 0
   667                           
   668                           ;initializer for _menu_sel
   669   002DEC  FFFF               	dw	65535
   670                           
   671                           ;initializer for _LCD_entry_mode
   672   002DEE  06                 	db	6
   673                           
   674                           ;initializer for _LCD_display_control
   675   002DEF  0C                 	db	12
   676   000F3A                     _ANSELC         set	3898
   677   000F38                     _ANSELAbits     set	3896
   678   000F3A                     _ANSELCbits     set	3898
   679   000F39                     _ANSELBbits     set	3897
   680   000F95                     _TRISDbits      set	3989
   681   000F8C                     _LATDbits       set	3980
   682   000F82                     _PORTCbits      set	3970
   683   000F81                     _PORTBbits      set	3969
   684   000FC3                     _ADRESL         set	4035
   685   000FC4                     _ADRESH         set	4036
   686   000FC2                     _ADCON0bits     set	4034
   687   000FCD                     _T1CONbits      set	4045
   688   000FBE                     _CCPR1L         set	4030
   689   000FBF                     _CCPR1H         set	4031
   690   000FBD                     _CCP1CONbits    set	4029
   691   000FAD                     _TXREG          set	4013
   692   000FAC                     _TXSTAbits      set	4012
   693   000FAB                     _RCSTAbits      set	4011
   694   000FAE                     _RCREG1         set	4014
   695   000F9E                     _PIR1bits       set	3998
   696   000FF2                     _INTCONbits     set	4082
   697   000F9D                     _PIE1bits       set	3997
   698   000FAB                     _RCSTA1bits     set	4011
   699   000FAF                     _SPBRG1         set	4015
   700   000FB0                     _SPBRGH1        set	4016
   701   000FB8                     _BAUDCON1bits   set	4024
   702   000FAC                     _TXSTA1bits     set	4012
   703   000FC0                     _ADCON2         set	4032
   704   000FC1                     _ADCON1         set	4033
   705   000FC2                     _ADCON0         set	4034
   706   000F92                     _TRISAbits      set	3986
   707   000F94                     _TRISCbits      set	3988
   708   000F93                     _TRISBbits      set	3987
   709   000FD3                     _OSCCON         set	4051
   710                           
   711                           	psect	mediumconst
   712   00FECC                     __pmediumconst:
   713                           	callstack 0
   714   00FECC  00                 	db	0
   715   00FECD                     STR_6:
   716   00FECD  4F                 	db	79	;'O'
   717   00FECE  42                 	db	66	;'B'
   718   00FECF  44                 	db	68	;'D'
   719   00FED0  49                 	db	73	;'I'
   720   00FED1  49                 	db	73	;'I'
   721   00FED2  20                 	db	32
   722   00FED3  4E                 	db	78	;'N'
   723   00FED4  6F                 	db	111	;'o'
   724   00FED5  74                 	db	116	;'t'
   725   00FED6  20                 	db	32
   726   00FED7  46                 	db	70	;'F'
   727   00FED8  6F                 	db	111	;'o'
   728   00FED9  75                 	db	117	;'u'
   729   00FEDA  6E                 	db	110	;'n'
   730   00FEDB  64                 	db	100	;'d'
   731   00FEDC  20                 	db	32
   732   00FEDD  00                 	db	0
   733   00FEDE                     STR_2:
   734   00FEDE  3E                 	db	62	;'>'
   735   00FEDF  3E                 	db	62	;'>'
   736   00FEE0  3E                 	db	62	;'>'
   737   00FEE1  20                 	db	32
   738   00FEE2  4F                 	db	79	;'O'
   739   00FEE3  42                 	db	66	;'B'
   740   00FEE4  44                 	db	68	;'D'
   741   00FEE5  49                 	db	73	;'I'
   742   00FEE6  49                 	db	73	;'I'
   743   00FEE7  50                 	db	80	;'P'
   744   00FEE8  49                 	db	73	;'I'
   745   00FEE9  43                 	db	67	;'C'
   746   00FEEA  20                 	db	32
   747   00FEEB  3C                 	db	60	;'<'
   748   00FEEC  3C                 	db	60	;'<'
   749   00FEED  3C                 	db	60	;'<'
   750   00FEEE  00                 	db	0
   751   00FEEF                     STR_41:
   752   00FEEF  59                 	db	89	;'Y'
   753   00FEF0  2F                 	db	47
   754   00FEF1  4E                 	db	78	;'N'
   755   00FEF2  20                 	db	32
   756   00FEF3  3C                 	db	60	;'<'
   757   00FEF4  3C                 	db	60	;'<'
   758   00FEF5  3C                 	db	60	;'<'
   759   00FEF6  3C                 	db	60	;'<'
   760   00FEF7  3C                 	db	60	;'<'
   761   00FEF8  3C                 	db	60	;'<'
   762   00FEF9  3C                 	db	60	;'<'
   763   00FEFA  3C                 	db	60	;'<'
   764   00FEFB  3C                 	db	60	;'<'
   765   00FEFC  3C                 	db	60	;'<'
   766   00FEFD  3C                 	db	60	;'<'
   767   00FEFE  3C                 	db	60	;'<'
   768   00FEFF  00                 	db	0
   769   00FF00                     STR_9:
   770   00FF00  3D                 	db	61	;'='
   771   00FF01  3D                 	db	61	;'='
   772   00FF02  3D                 	db	61	;'='
   773   00FF03  3D                 	db	61	;'='
   774   00FF04  3D                 	db	61	;'='
   775   00FF05  3D                 	db	61	;'='
   776   00FF06  3D                 	db	61	;'='
   777   00FF07  3D                 	db	61	;'='
   778   00FF08  3D                 	db	61	;'='
   779   00FF09  3D                 	db	61	;'='
   780   00FF0A  3D                 	db	61	;'='
   781   00FF0B  3D                 	db	61	;'='
   782   00FF0C  3D                 	db	61	;'='
   783   00FF0D  3D                 	db	61	;'='
   784   00FF0E  3D                 	db	61	;'='
   785   00FF0F  3D                 	db	61	;'='
   786   00FF10  00                 	db	0
   787   00FF11                     STR_11:
   788   00FF11  4D                 	db	77	;'M'
   789   00FF12  45                 	db	69	;'E'
   790   00FF13  4E                 	db	78	;'N'
   791   00FF14  55                 	db	85	;'U'
   792   00FF15  20                 	db	32
   793   00FF16  20                 	db	32
   794   00FF17  3C                 	db	60	;'<'
   795   00FF18  4F                 	db	79	;'O'
   796   00FF19  42                 	db	66	;'B'
   797   00FF1A  44                 	db	68	;'D'
   798   00FF1B  49                 	db	73	;'I'
   799   00FF1C  49                 	db	73	;'I'
   800   00FF1D  50                 	db	80	;'P'
   801   00FF1E  49                 	db	73	;'I'
   802   00FF1F  43                 	db	67	;'C'
   803   00FF20  3E                 	db	62	;'>'
   804   00FF21  00                 	db	0
   805   00FF22                     STR_8:
   806   00FF22  3C                 	db	60	;'<'
   807   00FF23  4F                 	db	79	;'O'
   808   00FF24  42                 	db	66	;'B'
   809   00FF25  44                 	db	68	;'D'
   810   00FF26  49                 	db	73	;'I'
   811   00FF27  49                 	db	73	;'I'
   812   00FF28  20                 	db	32
   813   00FF29  44                 	db	68	;'D'
   814   00FF2A  65                 	db	101	;'e'
   815   00FF2B  74                 	db	116	;'t'
   816   00FF2C  65                 	db	101	;'e'
   817   00FF2D  63                 	db	99	;'c'
   818   00FF2E  74                 	db	116	;'t'
   819   00FF2F  65                 	db	101	;'e'
   820   00FF30  64                 	db	100	;'d'
   821   00FF31  3E                 	db	62	;'>'
   822   00FF32  00                 	db	0
   823   00FF33                     STR_12:
   824   00FF33  4C                 	db	76	;'L'
   825   00FF34  52                 	db	82	;'R'
   826   00FF35  4D                 	db	77	;'M'
   827   00FF36  20                 	db	32
   828   00FF37  44                 	db	68	;'D'
   829   00FF38  54                 	db	84	;'T'
   830   00FF39  43                 	db	67	;'C'
   831   00FF3A  20                 	db	32
   832   00FF3B  43                 	db	67	;'C'
   833   00FF3C  44                 	db	68	;'D'
   834   00FF3D  43                 	db	67	;'C'
   835   00FF3E  20                 	db	32
   836   00FF3F  44                 	db	68	;'D'
   837   00FF40  53                 	db	83	;'S'
   838   00FF41  49                 	db	73	;'I'
   839   00FF42  00                 	db	0
   840   00FF43                     STR_45:
   841   00FF43  4E                 	db	78	;'N'
   842   00FF44  6F                 	db	111	;'o'
   843   00FF45  74                 	db	116	;'t'
   844   00FF46  68                 	db	104	;'h'
   845   00FF47  69                 	db	105	;'i'
   846   00FF48  6E                 	db	110	;'n'
   847   00FF49  67                 	db	103	;'g'
   848   00FF4A  20                 	db	32
   849   00FF4B  43                 	db	67	;'C'
   850   00FF4C  6C                 	db	108	;'l'
   851   00FF4D  65                 	db	101	;'e'
   852   00FF4E  61                 	db	97	;'a'
   853   00FF4F  72                 	db	114	;'r'
   854   00FF50  65                 	db	101	;'e'
   855   00FF51  64                 	db	100	;'d'
   856   00FF52  00                 	db	0
   857   00FF53                     STR_3:
   858   00FF53  3E                 	db	62	;'>'
   859   00FF54  3E                 	db	62	;'>'
   860   00FF55  3E                 	db	62	;'>'
   861   00FF56  3E                 	db	62	;'>'
   862   00FF57  20                 	db	32
   863   00FF58  56                 	db	86	;'V'
   864   00FF59  31                 	db	49	;'1'
   865   00FF5A  2E                 	db	46
   866   00FF5B  30                 	db	48	;'0'
   867   00FF5C  20                 	db	32
   868   00FF5D  3C                 	db	60	;'<'
   869   00FF5E  3C                 	db	60	;'<'
   870   00FF5F  3C                 	db	60	;'<'
   871   00FF60  3C                 	db	60	;'<'
   872   00FF61  00                 	db	0
   873   00FF62                     STR_40:
   874   00FF62  43                 	db	67	;'C'
   875   00FF63  6C                 	db	108	;'l'
   876   00FF64  65                 	db	101	;'e'
   877   00FF65  61                 	db	97	;'a'
   878   00FF66  72                 	db	114	;'r'
   879   00FF67  20                 	db	32
   880   00FF68  43                 	db	67	;'C'
   881   00FF69  6F                 	db	111	;'o'
   882   00FF6A  64                 	db	100	;'d'
   883   00FF6B  65                 	db	101	;'e'
   884   00FF6C  28                 	db	40
   885   00FF6D  73                 	db	115	;'s'
   886   00FF6E  29                 	db	41
   887   00FF6F  3F                 	db	63	;'?'
   888   00FF70  00                 	db	0
   889   00FF71                     STR_43:
   890   00FF71  43                 	db	67	;'C'
   891   00FF72  6F                 	db	111	;'o'
   892   00FF73  64                 	db	100	;'d'
   893   00FF74  65                 	db	101	;'e'
   894   00FF75  73                 	db	115	;'s'
   895   00FF76  20                 	db	32
   896   00FF77  43                 	db	67	;'C'
   897   00FF78  6C                 	db	108	;'l'
   898   00FF79  65                 	db	101	;'e'
   899   00FF7A  61                 	db	97	;'a'
   900   00FF7B  72                 	db	114	;'r'
   901   00FF7C  65                 	db	101	;'e'
   902   00FF7D  64                 	db	100	;'d'
   903   00FF7E  00                 	db	0
   904   00FF7F                     STR_44:
   905   00FF7F  54                 	db	84	;'T'
   906   00FF80  6F                 	db	111	;'o'
   907   00FF81  20                 	db	32
   908   00FF82  4D                 	db	77	;'M'
   909   00FF83  65                 	db	101	;'e'
   910   00FF84  6E                 	db	110	;'n'
   911   00FF85  75                 	db	117	;'u'
   912   00FF86  2E                 	db	46
   913   00FF87  2E                 	db	46
   914   00FF88  2E                 	db	46
   915   00FF89  00                 	db	0
   916   00FF8A                     STR_39:
   917   00FF8A  52                 	db	82	;'R'
   918   00FF8B  61                 	db	97	;'a'
   919   00FF8C  77                 	db	119	;'w'
   920   00FF8D  20                 	db	32
   921   00FF8E  44                 	db	68	;'D'
   922   00FF8F  54                 	db	84	;'T'
   923   00FF90  43                 	db	67	;'C'
   924   00FF91  27                 	db	39
   925   00FF92  73                 	db	115	;'s'
   926   00FF93  3A                 	db	58	;':'
   927   00FF94  00                 	db	0
   928   00FF95                     STR_1:
   929   00FF95  41                 	db	65	;'A'
   930   00FF96  54                 	db	84	;'T'
   931   00FF97  45                 	db	69	;'E'
   932   00FF98  30                 	db	48	;'0'
   933   00FF99  0D                 	db	13
   934   00FF9A  00                 	db	0
   935   00FF9B                     STR_4:
   936   00FF9B  41                 	db	65	;'A'
   937   00FF9C  54                 	db	84	;'T'
   938   00FF9D  4C                 	db	76	;'L'
   939   00FF9E  30                 	db	48	;'0'
   940   00FF9F  0D                 	db	13
   941   00FFA0  00                 	db	0
   942   00FFA1                     STR_16:
   943   00FFA1  30                 	db	48	;'0'
   944   00FFA2  31                 	db	49	;'1'
   945   00FFA3  30                 	db	48	;'0'
   946   00FFA4  43                 	db	67	;'C'
   947   00FFA5  0D                 	db	13
   948   00FFA6  00                 	db	0
   949   00FFA7                     STR_27:
   950   00FFA7  30                 	db	48	;'0'
   951   00FFA8  31                 	db	49	;'1'
   952   00FFA9  30                 	db	48	;'0'
   953   00FFAA  46                 	db	70	;'F'
   954   00FFAB  0D                 	db	13
   955   00FFAC  00                 	db	0
   956   00FFAD                     STR_36:
   957   00FFAD  41                 	db	65	;'A'
   958   00FFAE  54                 	db	84	;'T'
   959   00FFAF  44                 	db	68	;'D'
   960   00FFB0  50                 	db	80	;'P'
   961   00FFB1  0D                 	db	13
   962   00FFB2  00                 	db	0
   963   00FFB3                     STR_22:
   964   00FFB3  41                 	db	65	;'A'
   965   00FFB4  54                 	db	84	;'T'
   966   00FFB5  52                 	db	82	;'R'
   967   00FFB6  56                 	db	86	;'V'
   968   00FFB7  0D                 	db	13
   969   00FFB8  00                 	db	0
   970   00FFB9                     STR_20:
   971   00FFB9  20                 	db	32
   972   00FFBA  20                 	db	32
   973   00FFBB  20                 	db	32
   974   00FFBC  20                 	db	32
   975   00FFBD  20                 	db	32
   976   00FFBE  00                 	db	0
   977   00FFBF                     STR_17:
   978   00FFBF  34                 	db	52	;'4'
   979   00FFC0  31                 	db	49	;'1'
   980   00FFC1  20                 	db	32
   981   00FFC2  30                 	db	48	;'0'
   982   00FFC3  43                 	db	67	;'C'
   983   00FFC4  00                 	db	0
   984   00FFC5                     STR_28:
   985   00FFC5  34                 	db	52	;'4'
   986   00FFC6  31                 	db	49	;'1'
   987   00FFC7  20                 	db	32
   988   00FFC8  30                 	db	48	;'0'
   989   00FFC9  46                 	db	70	;'F'
   990   00FFCA  00                 	db	0
   991   00FFCB                     STR_24:
   992   00FFCB  56                 	db	86	;'V'
   993   00FFCC  42                 	db	66	;'B'
   994   00FFCD  61                 	db	97	;'a'
   995   00FFCE  74                 	db	116	;'t'
   996   00FFCF  74                 	db	116	;'t'
   997   00FFD0  00                 	db	0
   998   00FFD1                     STR_15:
   999   00FFD1  25                 	db	37
  1000   00FFD2  78                 	db	120	;'x'
  1001   00FFD3  20                 	db	32
  1002   00FFD4  25                 	db	37
  1003   00FFD5  78                 	db	120	;'x'
  1004   00FFD6  00                 	db	0
  1005   00FFD7                     STR_5:
  1006   00FFD7  41                 	db	65	;'A'
  1007   00FFD8  54                 	db	84	;'T'
  1008   00FFD9  49                 	db	73	;'I'
  1009   00FFDA  0D                 	db	13
  1010   00FFDB  00                 	db	0
  1011   00FFDC                     STR_38:
  1012   00FFDC  30                 	db	48	;'0'
  1013   00FFDD  33                 	db	51	;'3'
  1014   00FFDE  0D                 	db	13
  1015   00FFDF  00                 	db	0
  1016   00FFE0                     STR_42:
  1017   00FFE0  30                 	db	48	;'0'
  1018   00FFE1  34                 	db	52	;'4'
  1019   00FFE2  0D                 	db	13
  1020   00FFE3  00                 	db	0
  1021   00FFE4                     STR_35:
  1022   00FFE4  4F                 	db	79	;'O'
  1023   00FFE5  53                 	db	83	;'S'
  1024   00FFE6  3A                 	db	58	;':'
  1025   00FFE7  00                 	db	0
  1026   00FFE8                     STR_25:
  1027   00FFE8  4E                 	db	78	;'N'
  1028   00FFE9  2F                 	db	47
  1029   00FFEA  41                 	db	65	;'A'
  1030   00FFEB  00                 	db	0
  1031   00FFEC                     STR_21:
  1032   00FFEC  52                 	db	82	;'R'
  1033   00FFED  50                 	db	80	;'P'
  1034   00FFEE  4D                 	db	77	;'M'
  1035   00FFEF  00                 	db	0
  1036   00FFF0                     STR_32:
  1037   00FFF0  41                 	db	65	;'A'
  1038   00FFF1  49                 	db	73	;'I'
  1039   00FFF2  54                 	db	84	;'T'
  1040   00FFF3  00                 	db	0
  1041   00FFF4                     STR_37:
  1042   00FFF4  50                 	db	80	;'P'
  1043   00FFF5  3A                 	db	58	;':'
  1044   00FFF6  00                 	db	0
  1045   00FFF7                     STR_19:
  1046   00FFF7  25                 	db	37
  1047   00FFF8  75                 	db	117	;'u'
  1048   00FFF9  00                 	db	0
  1049   00FFFA                     STR_14:
  1050   00FFFA  5E                 	db	94	;'^'
  1051   00FFFB  00                 	db	0
  1052   00FFFC                     STR_13:
  1053   00FFFC  7E                 	db	126
  1054   00FFFD  00                 	db	0
  1055   00FFD4                     STR_26          equ	STR_15+3
  1056   00FFF7                     STR_30          equ	STR_19
  1057   00FFC5                     STR_29          equ	STR_28
  1058   00FFBF                     STR_18          equ	STR_17
  1059   00FFC3                     STR_33          equ	STR_17+4
  1060   00FF7F                     STR_46          equ	STR_44
  1061   00FFB9                     STR_23          equ	STR_20
  1062   00FFBB                     STR_31          equ	STR_20+2
  1063   00FFD7                     STR_7           equ	STR_5
  1064   00FFD7                     STR_34          equ	STR_5
  1065   00FF95                     STR_10          equ	STR_1
  1066   00FFFE  00                 	db	0	; dummy byte at the end
  1067   00FECC                     __smallconst    set	__pmediumconst
  1068   00FECC                     __mediumconst   set	__pmediumconst
  1069   000002                     __activetblptr  equ	2
  1070                           
  1071                           ; #config settings
  1072                           
  1073                           	psect	cinit
  1074   002A1A                     __pcinit:
  1075                           	callstack 0
  1076   002A1A                     start_initialization:
  1077                           	callstack 0
  1078   002A1A                     __initialization:
  1079                           	callstack 0
  1080                           
  1081                           ; Initialize objects allocated to BANK0 (4 bytes)
  1082                           ; load TBLPTR registers with __pidataBANK0
  1083   002A1A  0EEC               	movlw	low __pidataBANK0
  1084   002A1C  6EF6               	movwf	tblptrl,c
  1085   002A1E  0E2D               	movlw	high __pidataBANK0
  1086   002A20  6EF7               	movwf	tblptrh,c
  1087   002A22  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1088   002A24  6EF8               	movwf	tblptru,c
  1089   002A26  EE00  F0EC         	lfsr	0,__pdataBANK0
  1090   002A2A  EE10 F004          	lfsr	1,4
  1091   002A2E                     copy_data0:
  1092   002A2E  0009               	tblrd		*+
  1093   002A30  CFF5 FFEE          	movff	tablat,postinc0
  1094   002A34  50E5               	movf	postdec1,w,c
  1095   002A36  50E1               	movf	fsr1l,w,c
  1096   002A38  E1FA               	bnz	copy_data0
  1097                           
  1098                           ; Clear objects allocated to BANK2 (256 bytes)
  1099   002A3A  EE02  F000         	lfsr	0,__pbssBANK2
  1100   002A3E  EE11 F000          	lfsr	1,256
  1101   002A42                     clear_0:
  1102   002A42  6AEE               	clrf	postinc0,c
  1103   002A44  50E5               	movf	postdec1,w,c
  1104   002A46  50E1               	movf	fsr1l,w,c
  1105   002A48  E1FC               	bnz	clear_0
  1106   002A4A  50E2               	movf	fsr1h,w,c
  1107   002A4C  E1FA               	bnz	clear_0
  1108                           
  1109                           ; Clear objects allocated to BANK1 (124 bytes)
  1110   002A4E  EE01  F000         	lfsr	0,__pbssBANK1
  1111   002A52  0E7C               	movlw	124
  1112   002A54                     clear_1:
  1113   002A54  6AEE               	clrf	postinc0,c
  1114   002A56  06E8               	decf	wreg,f,c
  1115   002A58  E1FD               	bnz	clear_1
  1116                           
  1117                           ; Clear objects allocated to BANK0 (67 bytes)
  1118   002A5A  EE00  F0A9         	lfsr	0,__pbssBANK0
  1119   002A5E  0E43               	movlw	67
  1120   002A60                     clear_2:
  1121   002A60  6AEE               	clrf	postinc0,c
  1122   002A62  06E8               	decf	wreg,f,c
  1123   002A64  E1FD               	bnz	clear_2
  1124                           
  1125                           ; Clear objects allocated to COMRAM (2 bytes)
  1126   002A66  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1127   002A68  6A5B               	clrf	__pbssCOMRAM& (0+255),c
  1128   002A6A                     end_of_initialization:
  1129                           	callstack 0
  1130   002A6A                     __end_of__initialization:
  1131                           	callstack 0
  1132   002A6A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1133   002A6C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1134   002A6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1135   002A70  6EF8               	movwf	tblptru,c
  1136   002A72  0100               	movlb	0
  1137   002A74  EF78  F014         	goto	_main	;jump to C main() function
  1138                           
  1139                           	psect	bssCOMRAM
  1140   00005B                     __pbssCOMRAM:
  1141                           	callstack 0
  1142   00005B                     _message_complete:
  1143                           	callstack 0
  1144   00005B                     	ds	1
  1145   00005C                     _RX_char:
  1146                           	callstack 0
  1147   00005C                     	ds	1
  1148                           
  1149                           	psect	bssBANK0
  1150   0000A9                     __pbssBANK0:
  1151                           	callstack 0
  1152   0000A9                     modff@F522:
  1153                           	callstack 0
  1154   0000A9                     	ds	4
  1155   0000AD                     ___ungetbuf:
  1156                           	callstack 0
  1157   0000AD                     	ds	3
  1158   0000B0                     _nmatch:
  1159                           	callstack 0
  1160   0000B0                     	ds	2
  1161   0000B2                     _ncnv:
  1162                           	callstack 0
  1163   0000B2                     	ds	2
  1164   0000B4                     _width@doscan$F2229:
  1165                           	callstack 0
  1166   0000B4                     	ds	2
  1167   0000B6                     _errno:
  1168                           	callstack 0
  1169   0000B6                     	ds	2
  1170   0000B8                     _width:
  1171                           	callstack 0
  1172   0000B8                     	ds	2
  1173   0000BA                     _prec:
  1174                           	callstack 0
  1175   0000BA                     	ds	2
  1176   0000BC                     _air_intake_temp:
  1177                           	callstack 0
  1178   0000BC                     	ds	2
  1179   0000BE                     _A_air_intake:
  1180                           	callstack 0
  1181   0000BE                     	ds	2
  1182   0000C0                     _RPM:
  1183                           	callstack 0
  1184   0000C0                     	ds	2
  1185   0000C2                     _B_rpm:
  1186                           	callstack 0
  1187   0000C2                     	ds	2
  1188   0000C4                     _A_rpm:
  1189                           	callstack 0
  1190   0000C4                     	ds	2
  1191   0000C6                     _result:
  1192                           	callstack 0
  1193   0000C6                     	ds	2
  1194   0000C8                     ___ungetcnt:
  1195                           	callstack 0
  1196   0000C8                     	ds	1
  1197   0000C9                     _asup:
  1198                           	callstack 0
  1199   0000C9                     	ds	1
  1200   0000CA                     _flags:
  1201                           	callstack 0
  1202   0000CA                     	ds	1
  1203   0000CB                     _buffer_count:
  1204                           	callstack 0
  1205   0000CB                     	ds	1
  1206   0000CC                     _air_intake_string:
  1207                           	callstack 0
  1208   0000CC                     	ds	16
  1209   0000DC                     _rpm_string:
  1210                           	callstack 0
  1211   0000DC                     	ds	16
  1212                           
  1213                           	psect	dataBANK0
  1214   0000EC                     __pdataBANK0:
  1215                           	callstack 0
  1216   0000EC                     _menu_sel:
  1217                           	callstack 0
  1218   0000EC                     	ds	2
  1219   0000EE                     _LCD_entry_mode:
  1220                           	callstack 0
  1221   0000EE                     	ds	1
  1222   0000EF                     _LCD_display_control:
  1223                           	callstack 0
  1224   0000EF                     	ds	1
  1225                           
  1226                           	psect	bssBANK1
  1227   000100                     __pbssBANK1:
  1228                           	callstack 0
  1229   000100                     _dtc_codes:
  1230                           	callstack 0
  1231   000100                     	ds	60
  1232   00013C                     _dbuf:
  1233                           	callstack 0
  1234   00013C                     	ds	32
  1235   00015C                     _dbuf@doscan$F2232:
  1236                           	callstack 0
  1237   00015C                     	ds	32
  1238                           
  1239                           	psect	bssBANK2
  1240   000200                     __pbssBANK2:
  1241                           	callstack 0
  1242   000200                     _buffer:
  1243                           	callstack 0
  1244   000200                     	ds	256
  1245                           
  1246                           	psect	cstackBANK0
  1247   000060                     __pcstackBANK0:
  1248                           	callstack 0
  1249   000060                     atox@w:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x0
  1253   000060                     	ds	2
  1254   000062                     atox@ep:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x2
  1258   000062                     	ds	2
  1259   000064                     atox@seen_0x:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x4
  1263   000064                     	ds	2
  1264   000066                     atox@i:
  1265                           	callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x6
  1268   000066                     	ds	2
  1269   000068                     atox@c:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x8
  1273   000068                     	ds	2
  1274   00006A                     ?_vfsfcnvrt:
  1275                           	callstack 0
  1276   00006A                     vfsfcnvrt@fp:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0xA
  1280   00006A                     	ds	1
  1281   00006B                     vfsfcnvrt@fmt:
  1282                           	callstack 0
  1283                           
  1284                           ; 1 bytes @ 0xB
  1285   00006B                     	ds	1
  1286   00006C                     vfsfcnvrt@ap:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0xC
  1290   00006C                     	ds	2
  1291   00006E                     vfsfcnvrt@vp:
  1292                           	callstack 0
  1293                           
  1294                           ; 1 bytes @ 0xE
  1295   00006E                     	ds	1
  1296   00006F                     vfsfcnvrt@i:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0xF
  1300   00006F                     	ds	2
  1301   000071                     vfsfcnvrt@llu:
  1302                           	callstack 0
  1303                           
  1304                           ; 8 bytes @ 0x11
  1305   000071                     	ds	8
  1306   000079                     vfsfcnvrt@c:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x19
  1310   000079                     	ds	2
  1311   00007B                     ?_vfscanf:
  1312                           	callstack 0
  1313   00007B                     vfscanf@fp:
  1314                           	callstack 0
  1315                           
  1316                           ; 1 bytes @ 0x1B
  1317   00007B                     	ds	1
  1318   00007C                     vfscanf@fmt:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x1C
  1322   00007C                     	ds	2
  1323   00007E                     vfscanf@ap:
  1324                           	callstack 0
  1325                           
  1326                           ; 1 bytes @ 0x1E
  1327   00007E                     	ds	1
  1328   00007F                     vfscanf@saved_errno:
  1329                           	callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x1F
  1332   00007F                     	ds	2
  1333   000081                     vfscanf@n:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x21
  1337   000081                     	ds	2
  1338   000083                     vfscanf@cfmt:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x23
  1342   000083                     	ds	2
  1343   000085                     ?_sscanf:
  1344                           	callstack 0
  1345   000085                     sscanf@s:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x25
  1349   000085                     	ds	2
  1350   000087                     sscanf@fmt:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x27
  1354   000087                     	ds	6
  1355   00008D                     sscanf@ret:
  1356                           	callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x2D
  1359   00008D                     	ds	2
  1360   00008F                     sscanf@ap:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x2F
  1364   00008F                     	ds	1
  1365   000090                     sscanf@f:
  1366                           	callstack 0
  1367                           
  1368                           ; 11 bytes @ 0x30
  1369   000090                     	ds	11
  1370   00009B                     extract_two_pid_bytes@pid:
  1371                           	callstack 0
  1372   00009B                     extract_single_pid_byte@pid:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x3B
  1376   00009B                     	ds	2
  1377   00009D                     extract_two_pid_bytes@A:
  1378                           	callstack 0
  1379   00009D                     extract_single_pid_byte@A:
  1380                           	callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x3D
  1383   00009D                     	ds	1
  1384   00009E                     extract_two_pid_bytes@B:
  1385                           	callstack 0
  1386   00009E                     ??_print_AI_Temp:
  1387                           
  1388                           ; 1 bytes @ 0x3E
  1389   00009E                     	ds	1
  1390   00009F                     print_AI_Temp@A:
  1391                           	callstack 0
  1392   00009F                     extract_two_pid_bytes@ptr:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x3F
  1396   00009F                     	ds	2
  1397   0000A1                     extract_two_pid_bytes@a:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x41
  1401   0000A1                     	ds	2
  1402   0000A3                     extract_two_pid_bytes@b:
  1403                           	callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x43
  1406   0000A3                     	ds	2
  1407   0000A5                     ??_main_menu:
  1408                           
  1409                           ; 1 bytes @ 0x45
  1410   0000A5                     	ds	2
  1411   0000A7                     ??_main:
  1412                           
  1413                           ; 1 bytes @ 0x47
  1414   0000A7                     	ds	2
  1415                           
  1416                           	psect	cstackCOMRAM
  1417   000001                     __pcstackCOMRAM:
  1418                           	callstack 0
  1419   000001                     ??_UART_ISR:
  1420                           
  1421                           ; 1 bytes @ 0x0
  1422   000001                     	ds	2
  1423   000003                     ?_strlen:
  1424                           	callstack 0
  1425   000003                     ?_strchr:
  1426                           	callstack 0
  1427   000003                     ?_getch:
  1428                           	callstack 0
  1429   000003                     ?_strncmp:
  1430                           	callstack 0
  1431   000003                     ?_readADC:
  1432                           	callstack 0
  1433   000003                     ?___awdiv:
  1434                           	callstack 0
  1435   000003                     ?___lwdiv:
  1436                           	callstack 0
  1437   000003                     ?___lwmod:
  1438                           	callstack 0
  1439   000003                     ?___lmul:
  1440                           	callstack 0
  1441   000003                     ?___aldiv:
  1442                           	callstack 0
  1443   000003                     ?___almod:
  1444                           	callstack 0
  1445   000003                     ?___omul:
  1446                           	callstack 0
  1447   000003                     UART1_SendChar@c:
  1448                           	callstack 0
  1449   000003                     ___awdiv@dividend:
  1450                           	callstack 0
  1451   000003                     ___lwdiv@dividend:
  1452                           	callstack 0
  1453   000003                     ___lwmod@dividend:
  1454                           	callstack 0
  1455   000003                     memset@dest:
  1456                           	callstack 0
  1457   000003                     fputc@c:
  1458                           	callstack 0
  1459   000003                     ungetc@c:
  1460                           	callstack 0
  1461   000003                     strchr@s:
  1462                           	callstack 0
  1463   000003                     strlen@s:
  1464                           	callstack 0
  1465   000003                     strncmp@l:
  1466                           	callstack 0
  1467   000003                     ___lmul@multiplier:
  1468                           	callstack 0
  1469   000003                     ___aldiv@dividend:
  1470                           	callstack 0
  1471   000003                     ___almod@dividend:
  1472                           	callstack 0
  1473   000003                     ___omul@multiplier:
  1474                           	callstack 0
  1475   000003                     ??_LCD_write_command:
  1476   000003                     ??_LCD_write_data:
  1477                           
  1478                           ; 1 bytes @ 0x2
  1479   000003                     	ds	1
  1480   000004                     UART1_SendString@string:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x3
  1484   000004                     	ds	1
  1485   000005                     ?_fgetc:
  1486                           	callstack 0
  1487   000005                     LCD_write_command@command:
  1488                           	callstack 0
  1489   000005                     LCD_write_data@data:
  1490                           	callstack 0
  1491   000005                     fputc@fp:
  1492                           	callstack 0
  1493   000005                     fgetc@fp:
  1494                           	callstack 0
  1495   000005                     ungetc@fp:
  1496                           	callstack 0
  1497   000005                     ___awdiv@divisor:
  1498                           	callstack 0
  1499   000005                     ___lwdiv@divisor:
  1500                           	callstack 0
  1501   000005                     ___lwmod@divisor:
  1502                           	callstack 0
  1503   000005                     memset@c:
  1504                           	callstack 0
  1505   000005                     strchr@c:
  1506                           	callstack 0
  1507   000005                     strlen@a:
  1508                           	callstack 0
  1509   000005                     strncmp@r:
  1510                           	callstack 0
  1511   000005                     ??_readADC:
  1512                           
  1513                           ; 1 bytes @ 0x4
  1514   000005                     	ds	1
  1515   000006                     LCD_cursor_set@column:
  1516                           	callstack 0
  1517   000006                     LCD_configure_cursor_blink@state:
  1518                           	callstack 0
  1519   000006                     LCD_write_char@character:
  1520                           	callstack 0
  1521   000006                     LCD_write_string@string:
  1522                           	callstack 0
  1523   000006                     ??_LCD_clear:
  1524   000006                     ??_UART1_SendString:
  1525   000006                     ??_fputc:
  1526   000006                     ??_ungetc:
  1527                           
  1528                           ; 1 bytes @ 0x5
  1529   000006                     	ds	1
  1530   000007                     LCD_cursor_set@row:
  1531                           	callstack 0
  1532   000007                     ___awdiv@counter:
  1533                           	callstack 0
  1534   000007                     ___lwdiv@counter:
  1535                           	callstack 0
  1536   000007                     ___lwmod@counter:
  1537                           	callstack 0
  1538   000007                     memset@n:
  1539                           	callstack 0
  1540   000007                     strncmp@n:
  1541                           	callstack 0
  1542   000007                     ___lmul@multiplicand:
  1543                           	callstack 0
  1544   000007                     ___aldiv@divisor:
  1545                           	callstack 0
  1546   000007                     ___almod@divisor:
  1547                           	callstack 0
  1548   000007                     ??_LCD_init:
  1549   000007                     ??_fgetc:
  1550   000007                     
  1551                           ; 1 bytes @ 0x6
  1552   000007                     	ds	1
  1553   000008                     ___awdiv@sign:
  1554                           	callstack 0
  1555   000008                     UART1_SendString@i:
  1556                           	callstack 0
  1557   000008                     ___lwdiv@quotient:
  1558                           	callstack 0
  1559   000008                     ??_LCD_write_string:
  1560                           
  1561                           ; 1 bytes @ 0x7
  1562   000008                     	ds	1
  1563   000009                     ___awdiv@quotient:
  1564                           	callstack 0
  1565   000009                     memset@p:
  1566                           	callstack 0
  1567   000009                     ??_strncmp:
  1568                           
  1569                           ; 1 bytes @ 0x8
  1570   000009                     	ds	1
  1571   00000A                     ?_strstr:
  1572                           	callstack 0
  1573   00000A                     LCD_write_string@i:
  1574                           	callstack 0
  1575   00000A                     strstr@h:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x9
  1579   00000A                     	ds	1
  1580   00000B                     ___aldiv@counter:
  1581                           	callstack 0
  1582   00000B                     ___almod@counter:
  1583                           	callstack 0
  1584   00000B                     vfpfcnvrt@fp:
  1585                           	callstack 0
  1586   00000B                     ___lmul@product:
  1587                           	callstack 0
  1588   00000B                     ___omul@multiplicand:
  1589                           	callstack 0
  1590   00000B                     ??_clear_diagnostic_codes:
  1591   00000B                     ??_print_Vbatt:
  1592   00000B                     ??_print_ELMVer:
  1593   00000B                     ??_print_SAEVer:
  1594   00000B                     
  1595                           ; 1 bytes @ 0xA
  1596   00000B                     	ds	1
  1597   00000C                     ___aldiv@sign:
  1598                           	callstack 0
  1599   00000C                     ___almod@sign:
  1600                           	callstack 0
  1601   00000C                     vfpfcnvrt@fmt:
  1602                           	callstack 0
  1603   00000C                     diagnostic_trouble_codes@i:
  1604                           	callstack 0
  1605   00000C                     fgetc@c:
  1606                           	callstack 0
  1607   00000C                     strstr@n:
  1608                           	callstack 0
  1609   00000C                     
  1610                           ; 1 bytes @ 0xB
  1611   00000C                     	ds	1
  1612   00000D                     vfpfcnvrt@ap:
  1613                           	callstack 0
  1614   00000D                     clear_diagnostic_codes@opt_sel:
  1615                           	callstack 0
  1616   00000D                     ___aldiv@quotient:
  1617                           	callstack 0
  1618                           
  1619                           ; 4 bytes @ 0xC
  1620   00000D                     	ds	1
  1621   00000E                     skipws@fp:
  1622                           	callstack 0
  1623   00000E                     strstr@nl:
  1624                           	callstack 0
  1625   00000E                     ??_vfpfcnvrt:
  1626                           
  1627                           ; 1 bytes @ 0xD
  1628   00000E                     	ds	1
  1629   00000F                     ??_skipws:
  1630                           
  1631                           ; 1 bytes @ 0xE
  1632   00000F                     	ds	1
  1633   000010                     vfpfcnvrt@cp:
  1634                           	callstack 0
  1635   000010                     skipws@c:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0xF
  1639   000010                     	ds	1
  1640   000011                     LCD_write_variable@variable:
  1641                           	callstack 0
  1642                           
  1643                           ; 4 bytes @ 0x10
  1644   000011                     	ds	1
  1645   000012                     vfpfcnvrt@convarg:
  1646                           	callstack 0
  1647                           
  1648                           ; 4 bytes @ 0x11
  1649   000012                     	ds	1
  1650   000013                     ___omul@product:
  1651                           	callstack 0
  1652   000013                     
  1653                           ; 1 bytes @ 0x12
  1654   000013                     	ds	2
  1655   000015                     LCD_write_variable@left_offset:
  1656                           	callstack 0
  1657                           
  1658                           ; 1 bytes @ 0x14
  1659   000015                     	ds	1
  1660   000016                     LCD_write_variable@i:
  1661                           	callstack 0
  1662   000016                     vfpfcnvrt@c:
  1663                           	callstack 0
  1664   000016                     
  1665                           ; 1 bytes @ 0x15
  1666   000016                     	ds	1
  1667   000017                     ?_vfprintf:
  1668                           	callstack 0
  1669   000017                     LCD_write_variable@digits:
  1670                           	callstack 0
  1671   000017                     vfprintf@fp:
  1672                           	callstack 0
  1673                           
  1674                           ; 1 bytes @ 0x16
  1675   000017                     	ds	1
  1676   000018                     vfprintf@fmt:
  1677                           	callstack 0
  1678   000018                     LCD_write_variable@temp_variable:
  1679                           	callstack 0
  1680                           
  1681                           ; 4 bytes @ 0x17
  1682   000018                     	ds	2
  1683   00001A                     vfprintf@ap:
  1684                           	callstack 0
  1685                           
  1686                           ; 1 bytes @ 0x19
  1687   00001A                     	ds	1
  1688   00001B                     ?___strtoxll:
  1689                           	callstack 0
  1690   00001B                     vfprintf@cfmt:
  1691                           	callstack 0
  1692   00001B                     ___strtoxll@s:
  1693                           	callstack 0
  1694   00001B                     
  1695                           ; 1 bytes @ 0x1A
  1696   00001B                     	ds	1
  1697   00001C                     ??_welcome_splash:
  1698                           
  1699                           ; 1 bytes @ 0x1B
  1700   00001C                     	ds	1
  1701   00001D                     ?_sprintf:
  1702                           	callstack 0
  1703   00001D                     sprintf@s:
  1704                           	callstack 0
  1705   00001D                     ___strtoxll@endptr:
  1706                           	callstack 0
  1707                           
  1708                           ; 1 bytes @ 0x1C
  1709   00001D                     	ds	1
  1710   00001E                     welcome_splash@plug_flag:
  1711                           	callstack 0
  1712   00001E                     sprintf@fmt:
  1713                           	callstack 0
  1714   00001E                     ___strtoxll@base:
  1715                           	callstack 0
  1716                           
  1717                           ; 2 bytes @ 0x1D
  1718   00001E                     	ds	2
  1719   000020                     ___strtoxll@is_signed:
  1720                           	callstack 0
  1721   000020                     welcome_splash@CCP1IF_counter:
  1722                           	callstack 0
  1723                           
  1724                           ; 2 bytes @ 0x1F
  1725   000020                     	ds	2
  1726   000022                     sprintf@ap:
  1727                           	callstack 0
  1728   000022                     
  1729                           ; 1 bytes @ 0x21
  1730   000022                     	ds	1
  1731   000023                     sprintf@f:
  1732                           	callstack 0
  1733   000023                     ??___strtoxll:
  1734                           
  1735                           ; 1 bytes @ 0x22
  1736   000023                     	ds	8
  1737   00002B                     ___strtoxll@prev_a:
  1738                           	callstack 0
  1739                           
  1740                           ; 8 bytes @ 0x2A
  1741   00002B                     	ds	8
  1742   000033                     ___strtoxll$2282:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x32
  1746   000033                     	ds	2
  1747   000035                     ___strtoxll$2283:
  1748                           	callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x34
  1751   000035                     	ds	2
  1752   000037                     ___strtoxll@limit:
  1753                           	callstack 0
  1754                           
  1755                           ; 8 bytes @ 0x36
  1756   000037                     	ds	8
  1757   00003F                     ___strtoxll@flags:
  1758                           	callstack 0
  1759                           
  1760                           ; 1 bytes @ 0x3E
  1761   00003F                     	ds	1
  1762   000040                     ___strtoxll@a:
  1763                           	callstack 0
  1764                           
  1765                           ; 8 bytes @ 0x3F
  1766   000040                     	ds	8
  1767   000048                     ___strtoxll@cp:
  1768                           	callstack 0
  1769                           
  1770                           ; 2 bytes @ 0x47
  1771   000048                     	ds	2
  1772   00004A                     ___strtoxll@c:
  1773                           	callstack 0
  1774                           
  1775                           ; 1 bytes @ 0x49
  1776   00004A                     	ds	1
  1777   00004B                     ?_atox:
  1778                           	callstack 0
  1779   00004B                     atox@fp:
  1780                           	callstack 0
  1781                           
  1782                           ; 1 bytes @ 0x4A
  1783   00004B                     	ds	1
  1784   00004C                     atox@pll:
  1785                           	callstack 0
  1786                           
  1787                           ; 1 bytes @ 0x4B
  1788   00004C                     	ds	1
  1789   00004D                     ??_atox:
  1790                           
  1791                           ; 1 bytes @ 0x4C
  1792   00004D                     	ds	8
  1793   000055                     ??_vfsfcnvrt:
  1794                           
  1795                           ; 1 bytes @ 0x54
  1796   000055                     	ds	2
  1797   000057                     extract_single_pid_byte@ptr:
  1798                           	callstack 0
  1799   000057                     ??_print_RPM:
  1800   000057                     
  1801                           ; 1 bytes @ 0x56
  1802   000057                     	ds	2
  1803   000059                     print_RPM@A:
  1804                           	callstack 0
  1805   000059                     extract_single_pid_byte@a:
  1806                           	callstack 0
  1807                           
  1808                           ; 2 bytes @ 0x58
  1809   000059                     	ds	1
  1810   00005A                     print_RPM@B:
  1811                           	callstack 0
  1812                           
  1813                           ; 1 bytes @ 0x59
  1814   00005A                     	ds	1
  1815   00005B                     
  1816                           ; 1 bytes @ 0x5A
  1817 ;;
  1818 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1819 ;;
  1820 ;; *************** function _main *****************
  1821 ;; Defined at:
  1822 ;;		line 74 in file "OBCII_PIC18F46K22.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;Total ram usage:        2 bytes
  1841 ;; Hardware stack levels required when called: 12
  1842 ;; This function calls:
  1843 ;;		_ADC_init
  1844 ;;		_LCD_clear
  1845 ;;		_LCD_init
  1846 ;;		_UART1_Init
  1847 ;;		_UART1_SendString
  1848 ;;		_input_init
  1849 ;;		_main_menu
  1850 ;;		_welcome_splash
  1851 ;; This function is called by:
  1852 ;;		Startup code after reset
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text0
  1857   0028F0                     __ptext0:
  1858                           	callstack 0
  1859   0028F0                     _main:
  1860                           	callstack 19
  1861   0028F0                     
  1862                           ;OBCII_PIC18F46K22.c: 77:     OSCCON = 0b01110000;
  1863   0028F0  0E70               	movlw	112
  1864   0028F2  6ED3               	movwf	211,c	;volatile
  1865   0028F4                     
  1866                           ;OBCII_PIC18F46K22.c: 81:     LCD_init();
  1867   0028F4  EC57  F013         	call	_LCD_init	;wreg free
  1868   0028F8                     
  1869                           ;OBCII_PIC18F46K22.c: 82:     LCD_clear();
  1870   0028F8  EC90  F016         	call	_LCD_clear	;wreg free
  1871   0028FC                     
  1872                           ;OBCII_PIC18F46K22.c: 83:     input_init();
  1873   0028FC  ECD3  F016         	call	_input_init	;wreg free
  1874                           
  1875                           ;OBCII_PIC18F46K22.c: 84:     ADC_init();
  1876   002900  ECE8  F016         	call	_ADC_init	;wreg free
  1877                           
  1878                           ;OBCII_PIC18F46K22.c: 85:     UART1_Init();
  1879   002904  EC58  F016         	call	_UART1_Init	;wreg free
  1880   002908                     
  1881                           ;OBCII_PIC18F46K22.c: 87:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  1882   002908  0E29               	movlw	41
  1883   00290A  0100               	movlb	0	; () banked
  1884   00290C  6FA8               	movwf	(??_main+1)& (0+255),b
  1885   00290E  0E96               	movlw	150
  1886   002910  6FA7               	movwf	??_main& (0+255),b
  1887   002912  0E7F               	movlw	127
  1888   002914                     u7037:
  1889   002914  2EE8               	decfsz	wreg,f,c
  1890   002916  D7FE               	bra	u7037
  1891   002918  2FA7               	decfsz	??_main& (0+255),f,b
  1892   00291A  D7FC               	bra	u7037
  1893   00291C  2FA8               	decfsz	(??_main+1)& (0+255),f,b
  1894   00291E  D7FA               	bra	u7037
  1895   002920                     
  1896                           ;OBCII_PIC18F46K22.c: 88:     UART1_SendString("ATE0\r");
  1897   002920  0E95               	movlw	low STR_1
  1898   002922  6E04               	movwf	UART1_SendString@string^0,c
  1899   002924  0EFF               	movlw	high STR_1
  1900   002926  6E05               	movwf	(UART1_SendString@string+1)^0,c
  1901   002928  EC3C  F015         	call	_UART1_SendString	;wreg free
  1902   00292C                     
  1903                           ;OBCII_PIC18F46K22.c: 89:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1904   00292C  0E02               	movlw	2
  1905   00292E  0100               	movlb	0	; () banked
  1906   002930  6FA8               	movwf	(??_main+1)& (0+255),b
  1907   002932  0E04               	movlw	4
  1908   002934  6FA7               	movwf	??_main& (0+255),b
  1909   002936  0EBA               	movlw	186
  1910   002938                     u7047:
  1911   002938  2EE8               	decfsz	wreg,f,c
  1912   00293A  D7FE               	bra	u7047
  1913   00293C  2FA7               	decfsz	??_main& (0+255),f,b
  1914   00293E  D7FC               	bra	u7047
  1915   002940  2FA8               	decfsz	(??_main+1)& (0+255),f,b
  1916   002942  D7FA               	bra	u7047
  1917   002944  0000               	nop	
  1918   002946                     l6230:
  1919                           
  1920                           ;OBCII_PIC18F46K22.c: 92:                 welcome_splash();
  1921   002946  EC8A  F008         	call	_welcome_splash	;wreg free
  1922   00294A                     
  1923                           ;OBCII_PIC18F46K22.c: 93:                 main_menu();
  1924   00294A  EC68  F006         	call	_main_menu	;wreg free
  1925   00294E  EFA3  F014         	goto	l6230
  1926   002952  EF70  F000         	goto	start
  1927   002956                     __end_of_main:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _welcome_splash *****************
  1931 ;; Defined at:
  1932 ;;		line 219 in file "OBCII_PIC18F46K22.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  CCP1IF_count    2   31[COMRAM] volatile unsigned int 
  1937 ;;  plug_flag       2   29[COMRAM] volatile int 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;Total ram usage:        6 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; Hardware stack levels required when called: 4
  1954 ;; This function calls:
  1955 ;;		_LCD_clear
  1956 ;;		_LCD_cursor_set
  1957 ;;		_LCD_write_string
  1958 ;;		_LCD_write_variable
  1959 ;;		_UART1_SendString
  1960 ;;		___lwdiv
  1961 ;;		___lwmod
  1962 ;;		_ccp1_init
  1963 ;;		_tmr1_init
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text1
  1970   001114                     __ptext1:
  1971                           	callstack 0
  1972   001114                     _welcome_splash:
  1973                           	callstack 26
  1974   001114                     
  1975                           ;OBCII_PIC18F46K22.c: 220:     volatile int plug_flag = 0;
  1976   001114  0E00               	movlw	0
  1977   001116  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  1978   001118  0E00               	movlw	0
  1979   00111A  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  1980                           
  1981                           ;OBCII_PIC18F46K22.c: 221:     volatile unsigned int CCP1IF_counter = 0;
  1982   00111C  0E00               	movlw	0
  1983   00111E  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  1984   001120  0E00               	movlw	0
  1985   001122  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  1986   001124                     
  1987                           ;OBCII_PIC18F46K22.c: 224:     LCD_clear();
  1988   001124  EC90  F016         	call	_LCD_clear	;wreg free
  1989   001128                     
  1990                           ;OBCII_PIC18F46K22.c: 225:     LCD_cursor_set(1, 1);
  1991   001128  0E01               	movlw	1
  1992   00112A  6E06               	movwf	LCD_cursor_set@column^0,c
  1993   00112C  0E01               	movlw	1
  1994   00112E  ECDD  F014         	call	_LCD_cursor_set
  1995   001132                     
  1996                           ;OBCII_PIC18F46K22.c: 226:     LCD_write_string(">>> OBDIIPIC <<<");
  1997   001132  0EDE               	movlw	low STR_2
  1998   001134  6E06               	movwf	LCD_write_string@string^0,c
  1999   001136  0EFE               	movlw	high STR_2
  2000   001138  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2001   00113A  EC97  F013         	call	_LCD_write_string	;wreg free
  2002   00113E                     
  2003                           ;OBCII_PIC18F46K22.c: 227:     LCD_cursor_set(2, 1);
  2004   00113E  0E01               	movlw	1
  2005   001140  6E06               	movwf	LCD_cursor_set@column^0,c
  2006   001142  0E02               	movlw	2
  2007   001144  ECDD  F014         	call	_LCD_cursor_set
  2008   001148                     
  2009                           ;OBCII_PIC18F46K22.c: 228:     LCD_write_string(">>>> V1.0 <<<<");
  2010   001148  0E53               	movlw	low STR_3
  2011   00114A  6E06               	movwf	LCD_write_string@string^0,c
  2012   00114C  0EFF               	movlw	high STR_3
  2013   00114E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2014   001150  EC97  F013         	call	_LCD_write_string	;wreg free
  2015   001154                     
  2016                           ;OBCII_PIC18F46K22.c: 230:     UART1_SendString("ATL0\r");
  2017   001154  0E9B               	movlw	low STR_4
  2018   001156  6E04               	movwf	UART1_SendString@string^0,c
  2019   001158  0EFF               	movlw	high STR_4
  2020   00115A  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2021   00115C  EC3C  F015         	call	_UART1_SendString	;wreg free
  2022   001160                     
  2023                           ;OBCII_PIC18F46K22.c: 232:     ccp1_init();
  2024   001160  ECC2  F016         	call	_ccp1_init	;wreg free
  2025   001164                     
  2026                           ;OBCII_PIC18F46K22.c: 233:     tmr1_init();
  2027   001164  ECCB  F016         	call	_tmr1_init	;wreg free
  2028   001168                     
  2029                           ;OBCII_PIC18F46K22.c: 235:     CCP1IF_counter = 0;
  2030   001168  0E00               	movlw	0
  2031   00116A  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2032   00116C  0E00               	movlw	0
  2033   00116E  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2034   001170                     
  2035                           ;OBCII_PIC18F46K22.c: 236:     plug_flag = 0;
  2036   001170  0E00               	movlw	0
  2037   001172  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2038   001174  0E00               	movlw	0
  2039   001176  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2040   001178                     l6050:
  2041                           
  2042                           ;OBCII_PIC18F46K22.c: 239:         if (PIR1bits.CCP1IF) {
  2043   001178  A49E               	btfss	158,2,c	;volatile
  2044   00117A  EFC1  F008         	goto	u6751
  2045   00117E  EFC3  F008         	goto	u6750
  2046   001182                     u6751:
  2047   001182  EFF9  F008         	goto	l6064
  2048   001186                     u6750:
  2049   001186                     
  2050                           ;OBCII_PIC18F46K22.c: 240:             PIR1bits.CCP1IF = 0;
  2051   001186  949E               	bcf	158,2,c	;volatile
  2052                           
  2053                           ;OBCII_PIC18F46K22.c: 241:             T1CONbits.TMR1ON = 1;
  2054   001188  80CD               	bsf	205,0,c	;volatile
  2055   00118A                     
  2056                           ;OBCII_PIC18F46K22.c: 242:             CCP1IF_counter++;
  2057   00118A  4A20               	infsnz	welcome_splash@CCP1IF_counter^0,f,c	;volatile
  2058   00118C  2A21               	incf	(welcome_splash@CCP1IF_counter+1)^0,f,c	;volatile
  2059   00118E                     
  2060                           ;OBCII_PIC18F46K22.c: 244:             LCD_cursor_set(2, 16);
  2061   00118E  0E10               	movlw	16
  2062   001190  6E06               	movwf	LCD_cursor_set@column^0,c
  2063   001192  0E02               	movlw	2
  2064   001194  ECDD  F014         	call	_LCD_cursor_set
  2065   001198                     
  2066                           ;OBCII_PIC18F46K22.c: 245:             LCD_write_variable((CCP1IF_counter) / 10, 1);
  2067   001198  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwdiv@dividend	;volatile
  2068   00119C  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwdiv@dividend+1	;volatile
  2069   0011A0  0E00               	movlw	0
  2070   0011A2  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  2071   0011A4  0E0A               	movlw	10
  2072   0011A6  6E05               	movwf	___lwdiv@divisor^0,c
  2073   0011A8  ECD4  F013         	call	___lwdiv	;wreg free
  2074   0011AC  C003  F011         	movff	?___lwdiv,LCD_write_variable@variable
  2075   0011B0  C004  F012         	movff	?___lwdiv+1,LCD_write_variable@variable+1
  2076   0011B4  6A13               	clrf	(LCD_write_variable@variable+2)^0,c
  2077   0011B6  6A14               	clrf	(LCD_write_variable@variable+3)^0,c
  2078   0011B8  0E01               	movlw	1
  2079   0011BA  6E15               	movwf	LCD_write_variable@left_offset^0,c
  2080   0011BC  EC40  F00A         	call	_LCD_write_variable	;wreg free
  2081   0011C0                     
  2082                           ;OBCII_PIC18F46K22.c: 248:             if (CCP1IF_counter % 10 == 0) {
  2083   0011C0  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwmod@dividend	;volatile
  2084   0011C4  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwmod@dividend+1	;volatile
  2085   0011C8  0E00               	movlw	0
  2086   0011CA  6E06               	movwf	(___lwmod@divisor+1)^0,c
  2087   0011CC  0E0A               	movlw	10
  2088   0011CE  6E05               	movwf	___lwmod@divisor^0,c
  2089   0011D0  ECAB  F014         	call	___lwmod	;wreg free
  2090   0011D4  5003               	movf	?___lwmod^0,w,c
  2091   0011D6  1004               	iorwf	(?___lwmod+1)^0,w,c
  2092   0011D8  A4D8               	btfss	status,2,c
  2093   0011DA  EFF1  F008         	goto	u6761
  2094   0011DE  EFF3  F008         	goto	u6760
  2095   0011E2                     u6761:
  2096   0011E2  EFF9  F008         	goto	l6064
  2097   0011E6                     u6760:
  2098   0011E6                     
  2099                           ;OBCII_PIC18F46K22.c: 249:                 UART1_SendString("ATI\r");
  2100   0011E6  0ED7               	movlw	low STR_5
  2101   0011E8  6E04               	movwf	UART1_SendString@string^0,c
  2102   0011EA  0EFF               	movlw	high STR_5
  2103   0011EC  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2104   0011EE  EC3C  F015         	call	_UART1_SendString	;wreg free
  2105   0011F2                     l6064:
  2106                           
  2107                           ;OBCII_PIC18F46K22.c: 254:         if (message_complete) {
  2108   0011F2  505B               	movf	_message_complete^0,w,c	;volatile
  2109   0011F4  B4D8               	btfsc	status,2,c
  2110   0011F6  EFFF  F008         	goto	u6771
  2111   0011FA  EF01  F009         	goto	u6770
  2112   0011FE                     u6771:
  2113   0011FE  EF08  F009         	goto	l6072
  2114   001202                     u6770:
  2115   001202                     
  2116                           ;OBCII_PIC18F46K22.c: 255:             plug_flag = 1;
  2117   001202  0E00               	movlw	0
  2118   001204  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2119   001206  0E01               	movlw	1
  2120   001208  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2121   00120A                     
  2122                           ;OBCII_PIC18F46K22.c: 256:             buffer_count = 0;
  2123   00120A  0100               	movlb	0	; () banked
  2124   00120C  6BCB               	clrf	_buffer_count& (0+255),b
  2125   00120E                     
  2126                           ; BSR set to: 0
  2127                           ;OBCII_PIC18F46K22.c: 257:             message_complete = 0;
  2128   00120E  6A5B               	clrf	_message_complete^0,c	;volatile
  2129   001210                     l6072:
  2130                           
  2131                           ;OBCII_PIC18F46K22.c: 261:         if (plug_flag) {
  2132   001210  501E               	movf	welcome_splash@plug_flag^0,w,c	;volatile
  2133   001212  101F               	iorwf	(welcome_splash@plug_flag+1)^0,w,c	;volatile
  2134   001214  B4D8               	btfsc	status,2,c
  2135   001216  EF0F  F009         	goto	u6781
  2136   00121A  EF11  F009         	goto	u6780
  2137   00121E                     u6781:
  2138   00121E  EF1E  F009         	goto	l6078
  2139   001222                     u6780:
  2140   001222                     
  2141                           ;OBCII_PIC18F46K22.c: 262:             if (CCP1IF_counter >= 4 * 10) {
  2142   001222  5021               	movf	(welcome_splash@CCP1IF_counter+1)^0,w,c	;volatile
  2143   001224  E109               	bnz	u6790
  2144   001226  0E28               	movlw	40
  2145   001228  5C20               	subwf	welcome_splash@CCP1IF_counter^0,w,c	;volatile
  2146   00122A  A0D8               	btfss	status,0,c
  2147   00122C  EF1A  F009         	goto	u6791
  2148   001230  EF1C  F009         	goto	u6790
  2149   001234                     u6791:
  2150   001234  EFBC  F008         	goto	l6050
  2151   001238                     u6790:
  2152   001238  EF41  F009         	goto	l6088
  2153   00123C                     l6078:
  2154                           
  2155                           ;OBCII_PIC18F46K22.c: 268:             CCP1IF_counter = 0;
  2156   00123C  0E00               	movlw	0
  2157   00123E  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2158   001240  0E00               	movlw	0
  2159   001242  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2160   001244                     
  2161                           ;OBCII_PIC18F46K22.c: 269:             LCD_cursor_set(2, 1);
  2162   001244  0E01               	movlw	1
  2163   001246  6E06               	movwf	LCD_cursor_set@column^0,c
  2164   001248  0E02               	movlw	2
  2165   00124A  ECDD  F014         	call	_LCD_cursor_set
  2166   00124E                     
  2167                           ;OBCII_PIC18F46K22.c: 270:             LCD_write_string("OBDII Not Found ");
  2168   00124E  0ECD               	movlw	low STR_6
  2169   001250  6E06               	movwf	LCD_write_string@string^0,c
  2170   001252  0EFE               	movlw	high STR_6
  2171   001254  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2172   001256  EC97  F013         	call	_LCD_write_string	;wreg free
  2173   00125A                     
  2174                           ;OBCII_PIC18F46K22.c: 271:             UART1_SendString("ATI\r");
  2175   00125A  0ED7               	movlw	low STR_5
  2176   00125C  6E04               	movwf	UART1_SendString@string^0,c
  2177   00125E  0EFF               	movlw	high STR_5
  2178   001260  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2179   001262  EC3C  F015         	call	_UART1_SendString	;wreg free
  2180   001266                     
  2181                           ;OBCII_PIC18F46K22.c: 272:             _delay((unsigned long)((50)*(16000000/4000.0)));
  2182   001266  0E02               	movlw	2
  2183   001268  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2184   00126A  0E04               	movlw	4
  2185   00126C  6E1C               	movwf	??_welcome_splash^0,c
  2186   00126E  0EBA               	movlw	186
  2187   001270                     u7057:
  2188   001270  2EE8               	decfsz	wreg,f,c
  2189   001272  D7FE               	bra	u7057
  2190   001274  2E1C               	decfsz	??_welcome_splash^0,f,c
  2191   001276  D7FC               	bra	u7057
  2192   001278  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2193   00127A  D7FA               	bra	u7057
  2194   00127C  D000               	nop2	
  2195   00127E  EFBC  F008         	goto	l6050
  2196   001282                     l6088:
  2197                           
  2198                           ;OBCII_PIC18F46K22.c: 277:     LCD_clear();
  2199   001282  EC90  F016         	call	_LCD_clear	;wreg free
  2200                           
  2201                           ;OBCII_PIC18F46K22.c: 278:     LCD_cursor_set(1, 1);
  2202   001286  0E01               	movlw	1
  2203   001288  6E06               	movwf	LCD_cursor_set@column^0,c
  2204   00128A  0E01               	movlw	1
  2205   00128C  ECDD  F014         	call	_LCD_cursor_set
  2206   001290                     
  2207                           ;OBCII_PIC18F46K22.c: 279:     LCD_write_string("<OBDII Detected>");
  2208   001290  0E22               	movlw	low STR_8
  2209   001292  6E06               	movwf	LCD_write_string@string^0,c
  2210   001294  0EFF               	movlw	high STR_8
  2211   001296  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2212   001298  EC97  F013         	call	_LCD_write_string	;wreg free
  2213   00129C                     
  2214                           ;OBCII_PIC18F46K22.c: 280:     LCD_cursor_set(2,1);
  2215   00129C  0E01               	movlw	1
  2216   00129E  6E06               	movwf	LCD_cursor_set@column^0,c
  2217   0012A0  0E02               	movlw	2
  2218   0012A2  ECDD  F014         	call	_LCD_cursor_set
  2219                           
  2220                           ;OBCII_PIC18F46K22.c: 281:     LCD_write_string("================");
  2221   0012A6  0E00               	movlw	low STR_9
  2222   0012A8  6E06               	movwf	LCD_write_string@string^0,c
  2223   0012AA  0EFF               	movlw	high STR_9
  2224   0012AC  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2225   0012AE  EC97  F013         	call	_LCD_write_string	;wreg free
  2226   0012B2                     
  2227                           ;OBCII_PIC18F46K22.c: 282:     _delay((unsigned long)((2 * 2000)*(16000000/4000.0)));
  2228   0012B2  0E52               	movlw	82
  2229   0012B4  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2230   0012B6  0E2B               	movlw	43
  2231   0012B8  6E1C               	movwf	??_welcome_splash^0,c
  2232   0012BA  0E00               	movlw	0
  2233   0012BC                     u7067:
  2234   0012BC  2EE8               	decfsz	wreg,f,c
  2235   0012BE  D7FE               	bra	u7067
  2236   0012C0  2E1C               	decfsz	??_welcome_splash^0,f,c
  2237   0012C2  D7FC               	bra	u7067
  2238   0012C4  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2239   0012C6  D7FA               	bra	u7067
  2240   0012C8  D000               	nop2	
  2241   0012CA                     
  2242                           ;OBCII_PIC18F46K22.c: 284:     UART1_SendString("ATE0\r");
  2243   0012CA  0E95               	movlw	low STR_1
  2244   0012CC  6E04               	movwf	UART1_SendString@string^0,c
  2245   0012CE  0EFF               	movlw	high STR_1
  2246   0012D0  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2247   0012D2  EC3C  F015         	call	_UART1_SendString	;wreg free
  2248   0012D6                     
  2249                           ;OBCII_PIC18F46K22.c: 285:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2250   0012D6  0E02               	movlw	2
  2251   0012D8  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2252   0012DA  0E04               	movlw	4
  2253   0012DC  6E1C               	movwf	??_welcome_splash^0,c
  2254   0012DE  0EBA               	movlw	186
  2255   0012E0                     u7077:
  2256   0012E0  2EE8               	decfsz	wreg,f,c
  2257   0012E2  D7FE               	bra	u7077
  2258   0012E4  2E1C               	decfsz	??_welcome_splash^0,f,c
  2259   0012E6  D7FC               	bra	u7077
  2260   0012E8  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2261   0012EA  D7FA               	bra	u7077
  2262   0012EC  D000               	nop2	
  2263   0012EE  0012               	return		;funcret
  2264   0012F0                     __end_of_welcome_splash:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _tmr1_init *****************
  2268 ;; Defined at:
  2269 ;;		line 208 in file "OBCII_PIC18F46K22.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		None
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;Total ram usage:        0 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_welcome_splash
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text2
  2298   002D96                     __ptext2:
  2299                           	callstack 0
  2300   002D96                     _tmr1_init:
  2301                           	callstack 28
  2302   002D96                     
  2303                           ;OBCII_PIC18F46K22.c: 210:     T1CONbits.T1CKPS1 = 1;
  2304   002D96  8ACD               	bsf	205,5,c	;volatile
  2305                           
  2306                           ;OBCII_PIC18F46K22.c: 211:     T1CONbits.T1CKPS0 = 1;
  2307   002D98  88CD               	bsf	205,4,c	;volatile
  2308                           
  2309                           ;OBCII_PIC18F46K22.c: 212:     T1CONbits.T1OSCEN = 0;
  2310   002D9A  96CD               	bcf	205,3,c	;volatile
  2311                           
  2312                           ;OBCII_PIC18F46K22.c: 213:     T1CONbits.T1SYNC = 1;
  2313   002D9C  84CD               	bsf	205,2,c	;volatile
  2314                           
  2315                           ;OBCII_PIC18F46K22.c: 214:     T1CONbits.TMR1CS1 = 0;
  2316   002D9E  9ECD               	bcf	205,7,c	;volatile
  2317                           
  2318                           ;OBCII_PIC18F46K22.c: 215:     T1CONbits.TMR1CS0 = 0;
  2319   002DA0  9CCD               	bcf	205,6,c	;volatile
  2320                           
  2321                           ;OBCII_PIC18F46K22.c: 216:     T1CONbits.TMR1ON = 1;
  2322   002DA2  80CD               	bsf	205,0,c	;volatile
  2323   002DA4  0012               	return		;funcret
  2324   002DA6                     __end_of_tmr1_init:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function _ccp1_init *****************
  2328 ;; Defined at:
  2329 ;;		line 195 in file "OBCII_PIC18F46K22.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;Total ram usage:        0 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_welcome_splash
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text3
  2358   002D84                     __ptext3:
  2359                           	callstack 0
  2360   002D84                     _ccp1_init:
  2361                           	callstack 28
  2362   002D84                     
  2363                           ;OBCII_PIC18F46K22.c: 196:     CCP1CONbits.CCP1M3 = 1;
  2364   002D84  86BD               	bsf	189,3,c	;volatile
  2365                           
  2366                           ;OBCII_PIC18F46K22.c: 197:     CCP1CONbits.CCP1M2 = 0;
  2367   002D86  94BD               	bcf	189,2,c	;volatile
  2368                           
  2369                           ;OBCII_PIC18F46K22.c: 198:     CCP1CONbits.CCP1M1 = 1;
  2370   002D88  82BD               	bsf	189,1,c	;volatile
  2371                           
  2372                           ;OBCII_PIC18F46K22.c: 199:     CCP1CONbits.CCP1M0 = 1;
  2373   002D8A  80BD               	bsf	189,0,c	;volatile
  2374   002D8C                     
  2375                           ;OBCII_PIC18F46K22.c: 203:     CCPR1H = 195;
  2376   002D8C  0EC3               	movlw	195
  2377   002D8E  6EBF               	movwf	191,c	;volatile
  2378                           
  2379                           ;OBCII_PIC18F46K22.c: 204:     CCPR1L = 80;
  2380   002D90  0E50               	movlw	80
  2381   002D92  6EBE               	movwf	190,c	;volatile
  2382   002D94  0012               	return		;funcret
  2383   002D96                     __end_of_ccp1_init:
  2384                           	callstack 0
  2385                           
  2386 ;; *************** function _LCD_write_variable *****************
  2387 ;; Defined at:
  2388 ;;		line 392 in file "LCD.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  variable        4   16[COMRAM] long 
  2391 ;;  left_offset     1   20[COMRAM] unsigned char 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  i               1   21[COMRAM] unsigned char 
  2394 ;;  temp_variabl    4   23[COMRAM] long 
  2395 ;;  digits          1   22[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2405 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;Total ram usage:       11 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 3
  2412 ;; This function calls:
  2413 ;;		_LCD_write_data
  2414 ;;		___aldiv
  2415 ;;		___almod
  2416 ;;		___lmul
  2417 ;; This function is called by:
  2418 ;;		_welcome_splash
  2419 ;;		_LCD_write_float
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text4
  2424   001480                     __ptext4:
  2425                           	callstack 0
  2426   001480                     _LCD_write_variable:
  2427                           	callstack 26
  2428   001480                     
  2429                           ;LCD.c: 394:     int32_t temp_variable;;LCD.c: 395:     uint8_t digits = 0;
  2430   001480  6A17               	clrf	LCD_write_variable@digits^0,c
  2431   001482                     
  2432                           ;LCD.c: 398:     if(variable < 0) variable *= -1;
  2433   001482  BE14               	btfsc	(LCD_write_variable@variable+3)^0,7,c
  2434   001484  EF48  F00A         	goto	u6560
  2435   001488  EF46  F00A         	goto	u6561
  2436   00148C                     u6561:
  2437   00148C  EF62  F00A         	goto	l5824
  2438   001490                     u6560:
  2439   001490  C011  F003         	movff	LCD_write_variable@variable,___lmul@multiplier
  2440   001494  C012  F004         	movff	LCD_write_variable@variable+1,___lmul@multiplier+1
  2441   001498  C013  F005         	movff	LCD_write_variable@variable+2,___lmul@multiplier+2
  2442   00149C  C014  F006         	movff	LCD_write_variable@variable+3,___lmul@multiplier+3
  2443   0014A0  0EFF               	movlw	255
  2444   0014A2  6E07               	movwf	___lmul@multiplicand^0,c
  2445   0014A4  0EFF               	movlw	255
  2446   0014A6  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  2447   0014A8  0EFF               	movlw	255
  2448   0014AA  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  2449   0014AC  0EFF               	movlw	255
  2450   0014AE  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  2451   0014B0  EC0E  F014         	call	___lmul	;wreg free
  2452   0014B4  C003  F011         	movff	?___lmul,LCD_write_variable@variable
  2453   0014B8  C004  F012         	movff	?___lmul+1,LCD_write_variable@variable+1
  2454   0014BC  C005  F013         	movff	?___lmul+2,LCD_write_variable@variable+2
  2455   0014C0  C006  F014         	movff	?___lmul+3,LCD_write_variable@variable+3
  2456   0014C4                     l5824:
  2457                           
  2458                           ;LCD.c: 401:     temp_variable = variable;
  2459   0014C4  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2460   0014C8  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2461   0014CC  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2462   0014D0  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2463   0014D4                     l5826:
  2464                           
  2465                           ;LCD.c: 403:         digits++;
  2466   0014D4  2A17               	incf	LCD_write_variable@digits^0,f,c
  2467   0014D6                     
  2468                           ;LCD.c: 404:         if(temp_variable < 10) break;
  2469   0014D6  BE1B               	btfsc	(LCD_write_variable@temp_variable+3)^0,7,c
  2470   0014D8  EF7B  F00A         	goto	u6570
  2471   0014DC  501B               	movf	(LCD_write_variable@temp_variable+3)^0,w,c
  2472   0014DE  101A               	iorwf	(LCD_write_variable@temp_variable+2)^0,w,c
  2473   0014E0  1019               	iorwf	(LCD_write_variable@temp_variable+1)^0,w,c
  2474   0014E2  E107               	bnz	u6571
  2475   0014E4  0E0A               	movlw	10
  2476   0014E6  5C18               	subwf	LCD_write_variable@temp_variable^0,w,c
  2477   0014E8  B0D8               	btfsc	status,0,c
  2478   0014EA  EF79  F00A         	goto	u6571
  2479   0014EE  EF7B  F00A         	goto	u6570
  2480   0014F2                     u6571:
  2481   0014F2  EF7D  F00A         	goto	l5832
  2482   0014F6                     u6570:
  2483   0014F6  EF99  F00A         	goto	l5834
  2484   0014FA                     l5832:
  2485                           
  2486                           ;LCD.c: 405:         temp_variable /= 10;
  2487   0014FA  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2488   0014FE  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2489   001502  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2490   001506  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2491   00150A  0E0A               	movlw	10
  2492   00150C  6E07               	movwf	___aldiv@divisor^0,c
  2493   00150E  0E00               	movlw	0
  2494   001510  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2495   001512  0E00               	movlw	0
  2496   001514  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2497   001516  0E00               	movlw	0
  2498   001518  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2499   00151A  ECC5  F00C         	call	___aldiv	;wreg free
  2500   00151E  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2501   001522  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2502   001526  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2503   00152A  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2504   00152E  EF6A  F00A         	goto	l5826
  2505   001532                     l5834:
  2506                           
  2507                           ;LCD.c: 410:         if(left_offset <= digits) break;
  2508   001532  5015               	movf	LCD_write_variable@left_offset^0,w,c
  2509   001534  5C17               	subwf	LCD_write_variable@digits^0,w,c
  2510   001536  A0D8               	btfss	status,0,c
  2511   001538  EFA0  F00A         	goto	u6581
  2512   00153C  EFA2  F00A         	goto	u6580
  2513   001540                     u6581:
  2514   001540  EFA4  F00A         	goto	l5838
  2515   001544                     u6580:
  2516   001544  EFAA  F00A         	goto	l458
  2517   001548                     l5838:
  2518                           
  2519                           ;LCD.c: 411:         LCD_write_data(' ');
  2520   001548  0E20               	movlw	32
  2521   00154A  ECCB  F00D         	call	_LCD_write_data
  2522   00154E                     
  2523                           ;LCD.c: 412:         left_offset--;
  2524   00154E  0615               	decf	LCD_write_variable@left_offset^0,f,c
  2525   001550  EF99  F00A         	goto	l5834
  2526   001554                     l458:
  2527                           
  2528                           ;LCD.c: 417:         temp_variable = variable;
  2529   001554  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2530   001558  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2531   00155C  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2532   001560  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2533   001564                     
  2534                           ;LCD.c: 418:         for(uint8_t i = 1 ; i < digits ; i++){
  2535   001564  0E01               	movlw	1
  2536   001566  6E16               	movwf	LCD_write_variable@i^0,c
  2537   001568  EFD1  F00A         	goto	l5848
  2538   00156C                     l5844:
  2539                           
  2540                           ;LCD.c: 419:             temp_variable /= 10;
  2541   00156C  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2542   001570  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2543   001574  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2544   001578  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2545   00157C  0E0A               	movlw	10
  2546   00157E  6E07               	movwf	___aldiv@divisor^0,c
  2547   001580  0E00               	movlw	0
  2548   001582  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2549   001584  0E00               	movlw	0
  2550   001586  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2551   001588  0E00               	movlw	0
  2552   00158A  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2553   00158C  ECC5  F00C         	call	___aldiv	;wreg free
  2554   001590  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2555   001594  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2556   001598  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2557   00159C  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2558   0015A0                     
  2559                           ;LCD.c: 420:         }
  2560   0015A0  2A16               	incf	LCD_write_variable@i^0,f,c
  2561   0015A2                     l5848:
  2562   0015A2  5017               	movf	LCD_write_variable@digits^0,w,c
  2563   0015A4  5C16               	subwf	LCD_write_variable@i^0,w,c
  2564   0015A6  A0D8               	btfss	status,0,c
  2565   0015A8  EFD8  F00A         	goto	u6591
  2566   0015AC  EFDA  F00A         	goto	u6590
  2567   0015B0                     u6591:
  2568   0015B0  EFB6  F00A         	goto	l5844
  2569   0015B4                     u6590:
  2570   0015B4                     
  2571                           ;LCD.c: 421:         LCD_write_data( (temp_variable%10) + '0' );
  2572   0015B4  C018  F003         	movff	LCD_write_variable@temp_variable,___almod@dividend
  2573   0015B8  C019  F004         	movff	LCD_write_variable@temp_variable+1,___almod@dividend+1
  2574   0015BC  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___almod@dividend+2
  2575   0015C0  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___almod@dividend+3
  2576   0015C4  0E0A               	movlw	10
  2577   0015C6  6E07               	movwf	___almod@divisor^0,c
  2578   0015C8  0E00               	movlw	0
  2579   0015CA  6E08               	movwf	(___almod@divisor+1)^0,c
  2580   0015CC  0E00               	movlw	0
  2581   0015CE  6E09               	movwf	(___almod@divisor+2)^0,c
  2582   0015D0  0E00               	movlw	0
  2583   0015D2  6E0A               	movwf	(___almod@divisor+3)^0,c
  2584   0015D4  ECC7  F00E         	call	___almod	;wreg free
  2585   0015D8  5003               	movf	?___almod^0,w,c
  2586   0015DA  0F30               	addlw	48
  2587   0015DC  ECCB  F00D         	call	_LCD_write_data
  2588   0015E0                     
  2589                           ;LCD.c: 422:         digits --;
  2590   0015E0  0617               	decf	LCD_write_variable@digits^0,f,c
  2591   0015E2                     
  2592                           ;LCD.c: 423:         if(digits == 0) break;
  2593   0015E2  5017               	movf	LCD_write_variable@digits^0,w,c
  2594   0015E4  A4D8               	btfss	status,2,c
  2595   0015E6  EFF7  F00A         	goto	u6601
  2596   0015EA  EFF9  F00A         	goto	u6600
  2597   0015EE                     u6601:
  2598   0015EE  EFAA  F00A         	goto	l458
  2599   0015F2                     u6600:
  2600   0015F2  0012               	return		;funcret
  2601   0015F4                     __end_of_LCD_write_variable:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function ___lmul *****************
  2605 ;; Defined at:
  2606 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  multiplier      4    2[COMRAM] unsigned long 
  2609 ;;  multiplicand    4    6[COMRAM] unsigned long 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  product         4   10[COMRAM] unsigned long 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  4    2[COMRAM] unsigned long 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2621 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;Total ram usage:       12 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_LCD_write_variable
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text5
  2636   00281C                     __ptext5:
  2637                           	callstack 0
  2638   00281C                     ___lmul:
  2639                           	callstack 27
  2640   00281C  0E00               	movlw	0
  2641   00281E  6E0B               	movwf	___lmul@product^0,c
  2642   002820  0E00               	movlw	0
  2643   002822  6E0C               	movwf	(___lmul@product+1)^0,c
  2644   002824  0E00               	movlw	0
  2645   002826  6E0D               	movwf	(___lmul@product+2)^0,c
  2646   002828  0E00               	movlw	0
  2647   00282A  6E0E               	movwf	(___lmul@product+3)^0,c
  2648   00282C                     l4138:
  2649   00282C  A003               	btfss	___lmul@multiplier^0,0,c
  2650   00282E  EF1B  F014         	goto	u4111
  2651   002832  EF1D  F014         	goto	u4110
  2652   002836                     u4111:
  2653   002836  EF25  F014         	goto	l4142
  2654   00283A                     u4110:
  2655   00283A  5007               	movf	___lmul@multiplicand^0,w,c
  2656   00283C  260B               	addwf	___lmul@product^0,f,c
  2657   00283E  5008               	movf	(___lmul@multiplicand+1)^0,w,c
  2658   002840  220C               	addwfc	(___lmul@product+1)^0,f,c
  2659   002842  5009               	movf	(___lmul@multiplicand+2)^0,w,c
  2660   002844  220D               	addwfc	(___lmul@product+2)^0,f,c
  2661   002846  500A               	movf	(___lmul@multiplicand+3)^0,w,c
  2662   002848  220E               	addwfc	(___lmul@product+3)^0,f,c
  2663   00284A                     l4142:
  2664   00284A  90D8               	bcf	status,0,c
  2665   00284C  3607               	rlcf	___lmul@multiplicand^0,f,c
  2666   00284E  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2667   002850  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2668   002852  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2669   002854  90D8               	bcf	status,0,c
  2670   002856  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
  2671   002858  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
  2672   00285A  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
  2673   00285C  3203               	rrcf	___lmul@multiplier^0,f,c
  2674   00285E  5003               	movf	___lmul@multiplier^0,w,c
  2675   002860  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
  2676   002862  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
  2677   002864  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
  2678   002866  A4D8               	btfss	status,2,c
  2679   002868  EF38  F014         	goto	u4121
  2680   00286C  EF3A  F014         	goto	u4120
  2681   002870                     u4121:
  2682   002870  EF16  F014         	goto	l4138
  2683   002874                     u4120:
  2684   002874  C00B  F003         	movff	___lmul@product,?___lmul
  2685   002878  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  2686   00287C  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  2687   002880  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  2688   002884  0012               	return		;funcret
  2689   002886                     __end_of___lmul:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function ___almod *****************
  2693 ;; Defined at:
  2694 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  dividend        4    2[COMRAM] long 
  2697 ;;  divisor         4    6[COMRAM] long 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  sign            1   11[COMRAM] unsigned char 
  2700 ;;  counter         1   10[COMRAM] unsigned char 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  4    2[COMRAM] long 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2710 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;Total ram usage:       10 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 1
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_LCD_write_variable
  2721 ;;		_LCD_write_float
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text6
  2726   001D8E                     __ptext6:
  2727                           	callstack 0
  2728   001D8E                     ___almod:
  2729                           	callstack 27
  2730   001D8E  6A0C               	clrf	___almod@sign^0,c
  2731   001D90  BE06               	btfsc	(___almod@dividend+3)^0,7,c
  2732   001D92  EFCF  F00E         	goto	u4190
  2733   001D96  EFCD  F00E         	goto	u4191
  2734   001D9A                     u4191:
  2735   001D9A  EFD9  F00E         	goto	l4198
  2736   001D9E                     u4190:
  2737   001D9E  1E06               	comf	(___almod@dividend+3)^0,f,c
  2738   001DA0  1E05               	comf	(___almod@dividend+2)^0,f,c
  2739   001DA2  1E04               	comf	(___almod@dividend+1)^0,f,c
  2740   001DA4  6C03               	negf	___almod@dividend^0,c
  2741   001DA6  0E00               	movlw	0
  2742   001DA8  2204               	addwfc	(___almod@dividend+1)^0,f,c
  2743   001DAA  2205               	addwfc	(___almod@dividend+2)^0,f,c
  2744   001DAC  2206               	addwfc	(___almod@dividend+3)^0,f,c
  2745   001DAE  0E01               	movlw	1
  2746   001DB0  6E0C               	movwf	___almod@sign^0,c
  2747   001DB2                     l4198:
  2748   001DB2  BE0A               	btfsc	(___almod@divisor+3)^0,7,c
  2749   001DB4  EFE0  F00E         	goto	u4200
  2750   001DB8  EFDE  F00E         	goto	u4201
  2751   001DBC                     u4201:
  2752   001DBC  EFE8  F00E         	goto	l4202
  2753   001DC0                     u4200:
  2754   001DC0  1E0A               	comf	(___almod@divisor+3)^0,f,c
  2755   001DC2  1E09               	comf	(___almod@divisor+2)^0,f,c
  2756   001DC4  1E08               	comf	(___almod@divisor+1)^0,f,c
  2757   001DC6  6C07               	negf	___almod@divisor^0,c
  2758   001DC8  0E00               	movlw	0
  2759   001DCA  2208               	addwfc	(___almod@divisor+1)^0,f,c
  2760   001DCC  2209               	addwfc	(___almod@divisor+2)^0,f,c
  2761   001DCE  220A               	addwfc	(___almod@divisor+3)^0,f,c
  2762   001DD0                     l4202:
  2763   001DD0  5007               	movf	___almod@divisor^0,w,c
  2764   001DD2  1008               	iorwf	(___almod@divisor+1)^0,w,c
  2765   001DD4  1009               	iorwf	(___almod@divisor+2)^0,w,c
  2766   001DD6  100A               	iorwf	(___almod@divisor+3)^0,w,c
  2767   001DD8  B4D8               	btfsc	status,2,c
  2768   001DDA  EFF1  F00E         	goto	u4211
  2769   001DDE  EFF3  F00E         	goto	u4210
  2770   001DE2                     u4211:
  2771   001DE2  EF23  F00F         	goto	l4218
  2772   001DE6                     u4210:
  2773   001DE6  0E01               	movlw	1
  2774   001DE8  6E0B               	movwf	___almod@counter^0,c
  2775   001DEA  EFFD  F00E         	goto	l4208
  2776   001DEE                     l4206:
  2777   001DEE  90D8               	bcf	status,0,c
  2778   001DF0  3607               	rlcf	___almod@divisor^0,f,c
  2779   001DF2  3608               	rlcf	(___almod@divisor+1)^0,f,c
  2780   001DF4  3609               	rlcf	(___almod@divisor+2)^0,f,c
  2781   001DF6  360A               	rlcf	(___almod@divisor+3)^0,f,c
  2782   001DF8  2A0B               	incf	___almod@counter^0,f,c
  2783   001DFA                     l4208:
  2784   001DFA  AE0A               	btfss	(___almod@divisor+3)^0,7,c
  2785   001DFC  EF02  F00F         	goto	u4221
  2786   001E00  EF04  F00F         	goto	u4220
  2787   001E04                     u4221:
  2788   001E04  EFF7  F00E         	goto	l4206
  2789   001E08                     u4220:
  2790   001E08                     l4210:
  2791   001E08  5007               	movf	___almod@divisor^0,w,c
  2792   001E0A  5C03               	subwf	___almod@dividend^0,w,c
  2793   001E0C  5008               	movf	(___almod@divisor+1)^0,w,c
  2794   001E0E  5804               	subwfb	(___almod@dividend+1)^0,w,c
  2795   001E10  5009               	movf	(___almod@divisor+2)^0,w,c
  2796   001E12  5805               	subwfb	(___almod@dividend+2)^0,w,c
  2797   001E14  500A               	movf	(___almod@divisor+3)^0,w,c
  2798   001E16  5806               	subwfb	(___almod@dividend+3)^0,w,c
  2799   001E18  A0D8               	btfss	status,0,c
  2800   001E1A  EF11  F00F         	goto	u4231
  2801   001E1E  EF13  F00F         	goto	u4230
  2802   001E22                     u4231:
  2803   001E22  EF1B  F00F         	goto	l4214
  2804   001E26                     u4230:
  2805   001E26  5007               	movf	___almod@divisor^0,w,c
  2806   001E28  5E03               	subwf	___almod@dividend^0,f,c
  2807   001E2A  5008               	movf	(___almod@divisor+1)^0,w,c
  2808   001E2C  5A04               	subwfb	(___almod@dividend+1)^0,f,c
  2809   001E2E  5009               	movf	(___almod@divisor+2)^0,w,c
  2810   001E30  5A05               	subwfb	(___almod@dividend+2)^0,f,c
  2811   001E32  500A               	movf	(___almod@divisor+3)^0,w,c
  2812   001E34  5A06               	subwfb	(___almod@dividend+3)^0,f,c
  2813   001E36                     l4214:
  2814   001E36  90D8               	bcf	status,0,c
  2815   001E38  320A               	rrcf	(___almod@divisor+3)^0,f,c
  2816   001E3A  3209               	rrcf	(___almod@divisor+2)^0,f,c
  2817   001E3C  3208               	rrcf	(___almod@divisor+1)^0,f,c
  2818   001E3E  3207               	rrcf	___almod@divisor^0,f,c
  2819   001E40  2E0B               	decfsz	___almod@counter^0,f,c
  2820   001E42  EF04  F00F         	goto	l4210
  2821   001E46                     l4218:
  2822   001E46  500C               	movf	___almod@sign^0,w,c
  2823   001E48  B4D8               	btfsc	status,2,c
  2824   001E4A  EF29  F00F         	goto	u4241
  2825   001E4E  EF2B  F00F         	goto	u4240
  2826   001E52                     u4241:
  2827   001E52  EF33  F00F         	goto	l4222
  2828   001E56                     u4240:
  2829   001E56  1E06               	comf	(___almod@dividend+3)^0,f,c
  2830   001E58  1E05               	comf	(___almod@dividend+2)^0,f,c
  2831   001E5A  1E04               	comf	(___almod@dividend+1)^0,f,c
  2832   001E5C  6C03               	negf	___almod@dividend^0,c
  2833   001E5E  0E00               	movlw	0
  2834   001E60  2204               	addwfc	(___almod@dividend+1)^0,f,c
  2835   001E62  2205               	addwfc	(___almod@dividend+2)^0,f,c
  2836   001E64  2206               	addwfc	(___almod@dividend+3)^0,f,c
  2837   001E66                     l4222:
  2838   001E66  C003  F003         	movff	___almod@dividend,?___almod
  2839   001E6A  C004  F004         	movff	___almod@dividend+1,?___almod+1
  2840   001E6E  C005  F005         	movff	___almod@dividend+2,?___almod+2
  2841   001E72  C006  F006         	movff	___almod@dividend+3,?___almod+3
  2842   001E76  0012               	return		;funcret
  2843   001E78                     __end_of___almod:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function ___aldiv *****************
  2847 ;; Defined at:
  2848 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  dividend        4    2[COMRAM] long 
  2851 ;;  divisor         4    6[COMRAM] long 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  quotient        4   12[COMRAM] long 
  2854 ;;  sign            1   11[COMRAM] unsigned char 
  2855 ;;  counter         1   10[COMRAM] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  4    2[COMRAM] long 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2865 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;Total ram usage:       14 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_LCD_write_variable
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text7
  2880   00198A                     __ptext7:
  2881                           	callstack 0
  2882   00198A                     ___aldiv:
  2883                           	callstack 27
  2884   00198A  6A0C               	clrf	___aldiv@sign^0,c
  2885   00198C  BE0A               	btfsc	(___aldiv@divisor+3)^0,7,c
  2886   00198E  EFCD  F00C         	goto	u4130
  2887   001992  EFCB  F00C         	goto	u4131
  2888   001996                     u4131:
  2889   001996  EFD7  F00C         	goto	l4154
  2890   00199A                     u4130:
  2891   00199A  1E0A               	comf	(___aldiv@divisor+3)^0,f,c
  2892   00199C  1E09               	comf	(___aldiv@divisor+2)^0,f,c
  2893   00199E  1E08               	comf	(___aldiv@divisor+1)^0,f,c
  2894   0019A0  6C07               	negf	___aldiv@divisor^0,c
  2895   0019A2  0E00               	movlw	0
  2896   0019A4  2208               	addwfc	(___aldiv@divisor+1)^0,f,c
  2897   0019A6  2209               	addwfc	(___aldiv@divisor+2)^0,f,c
  2898   0019A8  220A               	addwfc	(___aldiv@divisor+3)^0,f,c
  2899   0019AA  0E01               	movlw	1
  2900   0019AC  6E0C               	movwf	___aldiv@sign^0,c
  2901   0019AE                     l4154:
  2902   0019AE  BE06               	btfsc	(___aldiv@dividend+3)^0,7,c
  2903   0019B0  EFDE  F00C         	goto	u4140
  2904   0019B4  EFDC  F00C         	goto	u4141
  2905   0019B8                     u4141:
  2906   0019B8  EFE8  F00C         	goto	l4160
  2907   0019BC                     u4140:
  2908   0019BC  1E06               	comf	(___aldiv@dividend+3)^0,f,c
  2909   0019BE  1E05               	comf	(___aldiv@dividend+2)^0,f,c
  2910   0019C0  1E04               	comf	(___aldiv@dividend+1)^0,f,c
  2911   0019C2  6C03               	negf	___aldiv@dividend^0,c
  2912   0019C4  0E00               	movlw	0
  2913   0019C6  2204               	addwfc	(___aldiv@dividend+1)^0,f,c
  2914   0019C8  2205               	addwfc	(___aldiv@dividend+2)^0,f,c
  2915   0019CA  2206               	addwfc	(___aldiv@dividend+3)^0,f,c
  2916   0019CC  0E01               	movlw	1
  2917   0019CE  1A0C               	xorwf	___aldiv@sign^0,f,c
  2918   0019D0                     l4160:
  2919   0019D0  0E00               	movlw	0
  2920   0019D2  6E0D               	movwf	___aldiv@quotient^0,c
  2921   0019D4  0E00               	movlw	0
  2922   0019D6  6E0E               	movwf	(___aldiv@quotient+1)^0,c
  2923   0019D8  0E00               	movlw	0
  2924   0019DA  6E0F               	movwf	(___aldiv@quotient+2)^0,c
  2925   0019DC  0E00               	movlw	0
  2926   0019DE  6E10               	movwf	(___aldiv@quotient+3)^0,c
  2927   0019E0  5007               	movf	___aldiv@divisor^0,w,c
  2928   0019E2  1008               	iorwf	(___aldiv@divisor+1)^0,w,c
  2929   0019E4  1009               	iorwf	(___aldiv@divisor+2)^0,w,c
  2930   0019E6  100A               	iorwf	(___aldiv@divisor+3)^0,w,c
  2931   0019E8  B4D8               	btfsc	status,2,c
  2932   0019EA  EFF9  F00C         	goto	u4151
  2933   0019EE  EFFB  F00C         	goto	u4150
  2934   0019F2                     u4151:
  2935   0019F2  EF31  F00D         	goto	l4182
  2936   0019F6                     u4150:
  2937   0019F6  0E01               	movlw	1
  2938   0019F8  6E0B               	movwf	___aldiv@counter^0,c
  2939   0019FA  EF05  F00D         	goto	l4168
  2940   0019FE                     l4166:
  2941   0019FE  90D8               	bcf	status,0,c
  2942   001A00  3607               	rlcf	___aldiv@divisor^0,f,c
  2943   001A02  3608               	rlcf	(___aldiv@divisor+1)^0,f,c
  2944   001A04  3609               	rlcf	(___aldiv@divisor+2)^0,f,c
  2945   001A06  360A               	rlcf	(___aldiv@divisor+3)^0,f,c
  2946   001A08  2A0B               	incf	___aldiv@counter^0,f,c
  2947   001A0A                     l4168:
  2948   001A0A  AE0A               	btfss	(___aldiv@divisor+3)^0,7,c
  2949   001A0C  EF0A  F00D         	goto	u4161
  2950   001A10  EF0C  F00D         	goto	u4160
  2951   001A14                     u4161:
  2952   001A14  EFFF  F00C         	goto	l4166
  2953   001A18                     u4160:
  2954   001A18                     l4170:
  2955   001A18  90D8               	bcf	status,0,c
  2956   001A1A  360D               	rlcf	___aldiv@quotient^0,f,c
  2957   001A1C  360E               	rlcf	(___aldiv@quotient+1)^0,f,c
  2958   001A1E  360F               	rlcf	(___aldiv@quotient+2)^0,f,c
  2959   001A20  3610               	rlcf	(___aldiv@quotient+3)^0,f,c
  2960   001A22  5007               	movf	___aldiv@divisor^0,w,c
  2961   001A24  5C03               	subwf	___aldiv@dividend^0,w,c
  2962   001A26  5008               	movf	(___aldiv@divisor+1)^0,w,c
  2963   001A28  5804               	subwfb	(___aldiv@dividend+1)^0,w,c
  2964   001A2A  5009               	movf	(___aldiv@divisor+2)^0,w,c
  2965   001A2C  5805               	subwfb	(___aldiv@dividend+2)^0,w,c
  2966   001A2E  500A               	movf	(___aldiv@divisor+3)^0,w,c
  2967   001A30  5806               	subwfb	(___aldiv@dividend+3)^0,w,c
  2968   001A32  A0D8               	btfss	status,0,c
  2969   001A34  EF1E  F00D         	goto	u4171
  2970   001A38  EF20  F00D         	goto	u4170
  2971   001A3C                     u4171:
  2972   001A3C  EF29  F00D         	goto	l4178
  2973   001A40                     u4170:
  2974   001A40  5007               	movf	___aldiv@divisor^0,w,c
  2975   001A42  5E03               	subwf	___aldiv@dividend^0,f,c
  2976   001A44  5008               	movf	(___aldiv@divisor+1)^0,w,c
  2977   001A46  5A04               	subwfb	(___aldiv@dividend+1)^0,f,c
  2978   001A48  5009               	movf	(___aldiv@divisor+2)^0,w,c
  2979   001A4A  5A05               	subwfb	(___aldiv@dividend+2)^0,f,c
  2980   001A4C  500A               	movf	(___aldiv@divisor+3)^0,w,c
  2981   001A4E  5A06               	subwfb	(___aldiv@dividend+3)^0,f,c
  2982   001A50  800D               	bsf	___aldiv@quotient^0,0,c
  2983   001A52                     l4178:
  2984   001A52  90D8               	bcf	status,0,c
  2985   001A54  320A               	rrcf	(___aldiv@divisor+3)^0,f,c
  2986   001A56  3209               	rrcf	(___aldiv@divisor+2)^0,f,c
  2987   001A58  3208               	rrcf	(___aldiv@divisor+1)^0,f,c
  2988   001A5A  3207               	rrcf	___aldiv@divisor^0,f,c
  2989   001A5C  2E0B               	decfsz	___aldiv@counter^0,f,c
  2990   001A5E  EF0C  F00D         	goto	l4170
  2991   001A62                     l4182:
  2992   001A62  500C               	movf	___aldiv@sign^0,w,c
  2993   001A64  B4D8               	btfsc	status,2,c
  2994   001A66  EF37  F00D         	goto	u4181
  2995   001A6A  EF39  F00D         	goto	u4180
  2996   001A6E                     u4181:
  2997   001A6E  EF41  F00D         	goto	l4186
  2998   001A72                     u4180:
  2999   001A72  1E10               	comf	(___aldiv@quotient+3)^0,f,c
  3000   001A74  1E0F               	comf	(___aldiv@quotient+2)^0,f,c
  3001   001A76  1E0E               	comf	(___aldiv@quotient+1)^0,f,c
  3002   001A78  6C0D               	negf	___aldiv@quotient^0,c
  3003   001A7A  0E00               	movlw	0
  3004   001A7C  220E               	addwfc	(___aldiv@quotient+1)^0,f,c
  3005   001A7E  220F               	addwfc	(___aldiv@quotient+2)^0,f,c
  3006   001A80  2210               	addwfc	(___aldiv@quotient+3)^0,f,c
  3007   001A82                     l4186:
  3008   001A82  C00D  F003         	movff	___aldiv@quotient,?___aldiv
  3009   001A86  C00E  F004         	movff	___aldiv@quotient+1,?___aldiv+1
  3010   001A8A  C00F  F005         	movff	___aldiv@quotient+2,?___aldiv+2
  3011   001A8E  C010  F006         	movff	___aldiv@quotient+3,?___aldiv+3
  3012   001A92  0012               	return		;funcret
  3013   001A94                     __end_of___aldiv:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function _main_menu *****************
  3017 ;; Defined at:
  3018 ;;		line 314 in file "OBCII_PIC18F46K22.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;Total ram usage:        2 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 11
  3039 ;; This function calls:
  3040 ;;		_LCD_clear
  3041 ;;		_LCD_configure_cursor_blink
  3042 ;;		_LCD_cursor_set
  3043 ;;		_clear_diagnostic_codes
  3044 ;;		_diagnostic_trouble_codes
  3045 ;;		_display_mm
  3046 ;;		_display_system_info
  3047 ;;		_live_reading_mode
  3048 ;;		_readADC
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text8
  3055   000CD0                     __ptext8:
  3056                           	callstack 0
  3057   000CD0                     _main_menu:
  3058                           	callstack 19
  3059   000CD0                     
  3060                           ;OBCII_PIC18F46K22.c: 316:     LCD_clear();
  3061   000CD0  EC90  F016         	call	_LCD_clear	;wreg free
  3062   000CD4                     
  3063                           ;OBCII_PIC18F46K22.c: 317:     display_mm();
  3064   000CD4  EC41  F016         	call	_display_mm	;wreg free
  3065   000CD8                     l6104:
  3066                           
  3067                           ;OBCII_PIC18F46K22.c: 320:         display_mm();
  3068   000CD8  EC41  F016         	call	_display_mm	;wreg free
  3069                           
  3070                           ;OBCII_PIC18F46K22.c: 321:         result = readADC();
  3071   000CDC  EC26  F016         	call	_readADC	;wreg free
  3072   000CE0  C003  F0C6         	movff	?_readADC,_result
  3073   000CE4  C004  F0C7         	movff	?_readADC+1,_result+1
  3074   000CE8                     
  3075                           ;OBCII_PIC18F46K22.c: 322:         if(result >= 0 && result <= 255){
  3076   000CE8  0100               	movlb	0	; () banked
  3077   000CEA  05C7               	decf	(_result+1)& (0+255),w,b
  3078   000CEC  B0D8               	btfsc	status,0,c
  3079   000CEE  EF7B  F006         	goto	u6801
  3080   000CF2  EF7D  F006         	goto	u6800
  3081   000CF6                     u6801:
  3082   000CF6  EF86  F006         	goto	l6112
  3083   000CFA                     u6800:
  3084   000CFA                     
  3085                           ; BSR set to: 0
  3086                           ;OBCII_PIC18F46K22.c: 323:             menu_sel = 0;
  3087   000CFA  0E00               	movlw	0
  3088   000CFC  6FED               	movwf	(_menu_sel+1)& (0+255),b
  3089   000CFE  0E00               	movlw	0
  3090   000D00  6FEC               	movwf	_menu_sel& (0+255),b
  3091   000D02                     
  3092                           ; BSR set to: 0
  3093                           ;OBCII_PIC18F46K22.c: 324:             LCD_cursor_set(2,1);
  3094   000D02  0E01               	movlw	1
  3095   000D04  6E06               	movwf	LCD_cursor_set@column^0,c
  3096   000D06  0E02               	movlw	2
  3097   000D08  ECDD  F014         	call	_LCD_cursor_set
  3098   000D0C                     l6112:
  3099                           
  3100                           ;OBCII_PIC18F46K22.c: 327:         if(result >= 256 && result <=511){
  3101   000D0C  0100               	movlb	0	; () banked
  3102   000D0E  05C7               	decf	(_result+1)& (0+255),w,b
  3103   000D10  A0D8               	btfss	status,0,c
  3104   000D12  EF8D  F006         	goto	u6811
  3105   000D16  EF8F  F006         	goto	u6810
  3106   000D1A                     u6811:
  3107   000D1A  EFA1  F006         	goto	l6120
  3108   000D1E                     u6810:
  3109   000D1E                     
  3110                           ; BSR set to: 0
  3111   000D1E  0E02               	movlw	2
  3112   000D20  5DC7               	subwf	(_result+1)& (0+255),w,b
  3113   000D22  B0D8               	btfsc	status,0,c
  3114   000D24  EF96  F006         	goto	u6821
  3115   000D28  EF98  F006         	goto	u6820
  3116   000D2C                     u6821:
  3117   000D2C  EFA1  F006         	goto	l6120
  3118   000D30                     u6820:
  3119   000D30                     
  3120                           ; BSR set to: 0
  3121                           ;OBCII_PIC18F46K22.c: 328:             menu_sel = 1;
  3122   000D30  0E00               	movlw	0
  3123   000D32  6FED               	movwf	(_menu_sel+1)& (0+255),b
  3124   000D34  0E01               	movlw	1
  3125   000D36  6FEC               	movwf	_menu_sel& (0+255),b
  3126   000D38                     
  3127                           ; BSR set to: 0
  3128                           ;OBCII_PIC18F46K22.c: 329:             LCD_cursor_set(2,5);
  3129   000D38  0E05               	movlw	5
  3130   000D3A  6E06               	movwf	LCD_cursor_set@column^0,c
  3131   000D3C  0E02               	movlw	2
  3132   000D3E  ECDD  F014         	call	_LCD_cursor_set
  3133   000D42                     l6120:
  3134                           
  3135                           ;OBCII_PIC18F46K22.c: 332:         if(result >=512 && result <=767){
  3136   000D42  0E02               	movlw	2
  3137   000D44  0100               	movlb	0	; () banked
  3138   000D46  5DC7               	subwf	(_result+1)& (0+255),w,b
  3139   000D48  A0D8               	btfss	status,0,c
  3140   000D4A  EFA9  F006         	goto	u6831
  3141   000D4E  EFAB  F006         	goto	u6830
  3142   000D52                     u6831:
  3143   000D52  EFBD  F006         	goto	l6128
  3144   000D56                     u6830:
  3145   000D56                     
  3146                           ; BSR set to: 0
  3147   000D56  0E03               	movlw	3
  3148   000D58  5DC7               	subwf	(_result+1)& (0+255),w,b
  3149   000D5A  B0D8               	btfsc	status,0,c
  3150   000D5C  EFB2  F006         	goto	u6841
  3151   000D60  EFB4  F006         	goto	u6840
  3152   000D64                     u6841:
  3153   000D64  EFBD  F006         	goto	l6128
  3154   000D68                     u6840:
  3155   000D68                     
  3156                           ; BSR set to: 0
  3157                           ;OBCII_PIC18F46K22.c: 333:             menu_sel = 2;
  3158   000D68  0E00               	movlw	0
  3159   000D6A  6FED               	movwf	(_menu_sel+1)& (0+255),b
  3160   000D6C  0E02               	movlw	2
  3161   000D6E  6FEC               	movwf	_menu_sel& (0+255),b
  3162   000D70                     
  3163                           ; BSR set to: 0
  3164                           ;OBCII_PIC18F46K22.c: 334:             LCD_cursor_set(2,9);
  3165   000D70  0E09               	movlw	9
  3166   000D72  6E06               	movwf	LCD_cursor_set@column^0,c
  3167   000D74  0E02               	movlw	2
  3168   000D76  ECDD  F014         	call	_LCD_cursor_set
  3169   000D7A                     l6128:
  3170                           
  3171                           ;OBCII_PIC18F46K22.c: 336:         if(result >= 768 && result <=1023 ){
  3172   000D7A  0E03               	movlw	3
  3173   000D7C  0100               	movlb	0	; () banked
  3174   000D7E  5DC7               	subwf	(_result+1)& (0+255),w,b
  3175   000D80  A0D8               	btfss	status,0,c
  3176   000D82  EFC5  F006         	goto	u6851
  3177   000D86  EFC7  F006         	goto	u6850
  3178   000D8A                     u6851:
  3179   000D8A  EFD9  F006         	goto	l6136
  3180   000D8E                     u6850:
  3181   000D8E                     
  3182                           ; BSR set to: 0
  3183   000D8E  0E04               	movlw	4
  3184   000D90  5DC7               	subwf	(_result+1)& (0+255),w,b
  3185   000D92  B0D8               	btfsc	status,0,c
  3186   000D94  EFCE  F006         	goto	u6861
  3187   000D98  EFD0  F006         	goto	u6860
  3188   000D9C                     u6861:
  3189   000D9C  EFD9  F006         	goto	l6136
  3190   000DA0                     u6860:
  3191   000DA0                     
  3192                           ; BSR set to: 0
  3193                           ;OBCII_PIC18F46K22.c: 337:             menu_sel = 3;
  3194   000DA0  0E00               	movlw	0
  3195   000DA2  6FED               	movwf	(_menu_sel+1)& (0+255),b
  3196   000DA4  0E03               	movlw	3
  3197   000DA6  6FEC               	movwf	_menu_sel& (0+255),b
  3198   000DA8                     
  3199                           ; BSR set to: 0
  3200                           ;OBCII_PIC18F46K22.c: 338:             LCD_cursor_set(2,13);
  3201   000DA8  0E0D               	movlw	13
  3202   000DAA  6E06               	movwf	LCD_cursor_set@column^0,c
  3203   000DAC  0E02               	movlw	2
  3204   000DAE  ECDD  F014         	call	_LCD_cursor_set
  3205   000DB2                     l6136:
  3206                           
  3207                           ;OBCII_PIC18F46K22.c: 340:         LCD_configure_cursor_blink(1);
  3208   000DB2  0E01               	movlw	1
  3209   000DB4  EC6E  F016         	call	_LCD_configure_cursor_blink
  3210   000DB8                     
  3211                           ;OBCII_PIC18F46K22.c: 342:         if (PORTBbits.RB4 == 0) {
  3212   000DB8  B881               	btfsc	129,4,c	;volatile
  3213   000DBA  EFE1  F006         	goto	u6871
  3214   000DBE  EFE3  F006         	goto	u6870
  3215   000DC2                     u6871:
  3216   000DC2  EF81  F007         	goto	l6210
  3217   000DC6                     u6870:
  3218   000DC6                     
  3219                           ;OBCII_PIC18F46K22.c: 343:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3220   000DC6  0E68               	movlw	104
  3221   000DC8  0100               	movlb	0	; () banked
  3222   000DCA  6FA5               	movwf	??_main_menu& (0+255),b
  3223   000DCC  0EE4               	movlw	228
  3224   000DCE                     u7087:
  3225   000DCE  2EE8               	decfsz	wreg,f,c
  3226   000DD0  D7FE               	bra	u7087
  3227   000DD2  2FA5               	decfsz	??_main_menu& (0+255),f,b
  3228   000DD4  D7FC               	bra	u7087
  3229   000DD6  0000               	nop	
  3230   000DD8                     
  3231                           ;OBCII_PIC18F46K22.c: 344:             if (PORTBbits.RB4 == 0) {
  3232   000DD8  B881               	btfsc	129,4,c	;volatile
  3233   000DDA  EFF1  F006         	goto	u6881
  3234   000DDE  EFF3  F006         	goto	u6880
  3235   000DE2                     u6881:
  3236   000DE2  EF81  F007         	goto	l6210
  3237   000DE6                     u6880:
  3238   000DE6                     
  3239                           ;OBCII_PIC18F46K22.c: 345:                 LCD_configure_cursor_blink(0);
  3240   000DE6  0E00               	movlw	0
  3241   000DE8  EC6E  F016         	call	_LCD_configure_cursor_blink
  3242                           
  3243                           ;OBCII_PIC18F46K22.c: 346:                 LCD_clear();
  3244   000DEC  EC90  F016         	call	_LCD_clear	;wreg free
  3245                           
  3246                           ;OBCII_PIC18F46K22.c: 349:                 switch (menu_sel) {
  3247   000DF0  EF62  F007         	goto	l6208
  3248   000DF4                     l6146:
  3249                           
  3250                           ;OBCII_PIC18F46K22.c: 352:                             live_reading_mode();
  3251   000DF4  ECDB  F016         	call	_live_reading_mode	;wreg free
  3252   000DF8                     
  3253                           ;OBCII_PIC18F46K22.c: 354:                             if (PORTCbits.RC5 == 0) {
  3254   000DF8  BA82               	btfsc	130,5,c	;volatile
  3255   000DFA  EF01  F007         	goto	u6891
  3256   000DFE  EF03  F007         	goto	u6890
  3257   000E02                     u6891:
  3258   000E02  EFFA  F006         	goto	l6146
  3259   000E06                     u6890:
  3260   000E06                     
  3261                           ;OBCII_PIC18F46K22.c: 355:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  3262   000E06  0E68               	movlw	104
  3263   000E08  0100               	movlb	0	; () banked
  3264   000E0A  6FA5               	movwf	??_main_menu& (0+255),b
  3265   000E0C  0EE4               	movlw	228
  3266   000E0E                     u7097:
  3267   000E0E  2EE8               	decfsz	wreg,f,c
  3268   000E10  D7FE               	bra	u7097
  3269   000E12  2FA5               	decfsz	??_main_menu& (0+255),f,b
  3270   000E14  D7FC               	bra	u7097
  3271   000E16  0000               	nop	
  3272   000E18                     
  3273                           ;OBCII_PIC18F46K22.c: 356:                                 if (PORTCbits.RC5 == 0) {
  3274   000E18  BA82               	btfsc	130,5,c	;volatile
  3275   000E1A  EF11  F007         	goto	u6901
  3276   000E1E  EF13  F007         	goto	u6900
  3277   000E22                     u6901:
  3278   000E22  EFFA  F006         	goto	l6146
  3279   000E26                     u6900:
  3280   000E26                     l6154:
  3281                           
  3282                           ;OBCII_PIC18F46K22.c: 357:                                     LCD_clear();
  3283   000E26  EC90  F016         	call	_LCD_clear	;wreg free
  3284   000E2A                     
  3285                           ;OBCII_PIC18F46K22.c: 358:                                     display_mm();
  3286   000E2A  EC41  F016         	call	_display_mm	;wreg free
  3287   000E2E                     l6158:
  3288                           
  3289                           ;OBCII_PIC18F46K22.c: 359:                                     menu_sel = -1;
  3290   000E2E  0100               	movlb	0	; () banked
  3291   000E30  69EC               	setf	_menu_sel& (0+255),b
  3292   000E32  69ED               	setf	(_menu_sel+1)& (0+255),b
  3293                           
  3294                           ;OBCII_PIC18F46K22.c: 360:                                     break;
  3295   000E34  EF81  F007         	goto	l6210
  3296   000E38                     l6160:
  3297                           
  3298                           ;OBCII_PIC18F46K22.c: 369:                             diagnostic_trouble_codes();
  3299   000E38  EC9F  F00B         	call	_diagnostic_trouble_codes	;wreg free
  3300   000E3C                     
  3301                           ;OBCII_PIC18F46K22.c: 371:                             if (PORTCbits.RC5 == 0) {
  3302   000E3C  BA82               	btfsc	130,5,c	;volatile
  3303   000E3E  EF23  F007         	goto	u6911
  3304   000E42  EF25  F007         	goto	u6910
  3305   000E46                     u6911:
  3306   000E46  EF1C  F007         	goto	l6160
  3307   000E4A                     u6910:
  3308   000E4A                     
  3309                           ;OBCII_PIC18F46K22.c: 372:                                     _delay((unsigned long)((2
      +                          0)*(16000000/4000.0)));
  3310   000E4A  0E68               	movlw	104
  3311   000E4C  0100               	movlb	0	; () banked
  3312   000E4E  6FA5               	movwf	??_main_menu& (0+255),b
  3313   000E50  0EE4               	movlw	228
  3314   000E52                     u7107:
  3315   000E52  2EE8               	decfsz	wreg,f,c
  3316   000E54  D7FE               	bra	u7107
  3317   000E56  2FA5               	decfsz	??_main_menu& (0+255),f,b
  3318   000E58  D7FC               	bra	u7107
  3319   000E5A  0000               	nop	
  3320   000E5C                     
  3321                           ;OBCII_PIC18F46K22.c: 373:                                 if (PORTCbits.RC5 == 0) {
  3322   000E5C  BA82               	btfsc	130,5,c	;volatile
  3323   000E5E  EF33  F007         	goto	u6921
  3324   000E62  EF35  F007         	goto	u6920
  3325   000E66                     u6921:
  3326   000E66  EF1C  F007         	goto	l6160
  3327   000E6A                     u6920:
  3328   000E6A  EF13  F007         	goto	l6154
  3329   000E6E                     l6174:
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;OBCII_PIC18F46K22.c: 385:                                 _delay((unsigned long)((200)*
      +                          (16000000/4000.0)));
  3333   000E6E  0E05               	movlw	5
  3334   000E70  0100               	movlb	0	; () banked
  3335   000E72  6FA6               	movwf	(??_main_menu+1)& (0+255),b
  3336   000E74  0E0F               	movlw	15
  3337   000E76  6FA5               	movwf	??_main_menu& (0+255),b
  3338   000E78  0EF1               	movlw	241
  3339   000E7A                     u7117:
  3340   000E7A  2EE8               	decfsz	wreg,f,c
  3341   000E7C  D7FE               	bra	u7117
  3342   000E7E  2FA5               	decfsz	??_main_menu& (0+255),f,b
  3343   000E80  D7FC               	bra	u7117
  3344   000E82  2FA6               	decfsz	(??_main_menu+1)& (0+255),f,b
  3345   000E84  D7FA               	bra	u7117
  3346   000E86                     
  3347                           ;OBCII_PIC18F46K22.c: 386:                                 clear_diagnostic_codes();
  3348   000E86  EC91  F007         	call	_clear_diagnostic_codes	;wreg free
  3349   000E8A  EF17  F007         	goto	l6158
  3350   000E8E                     l6192:
  3351                           
  3352                           ;OBCII_PIC18F46K22.c: 403:                             display_system_info();
  3353   000E8E  EC81  F016         	call	_display_system_info	;wreg free
  3354   000E92                     
  3355                           ;OBCII_PIC18F46K22.c: 405:                             if (PORTCbits.RC5 == 0) {
  3356   000E92  BA82               	btfsc	130,5,c	;volatile
  3357   000E94  EF4E  F007         	goto	u6931
  3358   000E98  EF50  F007         	goto	u6930
  3359   000E9C                     u6931:
  3360   000E9C  EF47  F007         	goto	l6192
  3361   000EA0                     u6930:
  3362   000EA0                     
  3363                           ;OBCII_PIC18F46K22.c: 406:                                _delay((unsigned long)((20)*(1
      +                          6000000/4000.0)));
  3364   000EA0  0E68               	movlw	104
  3365   000EA2  0100               	movlb	0	; () banked
  3366   000EA4  6FA5               	movwf	??_main_menu& (0+255),b
  3367   000EA6  0EE4               	movlw	228
  3368   000EA8                     u7127:
  3369   000EA8  2EE8               	decfsz	wreg,f,c
  3370   000EAA  D7FE               	bra	u7127
  3371   000EAC  2FA5               	decfsz	??_main_menu& (0+255),f,b
  3372   000EAE  D7FC               	bra	u7127
  3373   000EB0  0000               	nop	
  3374   000EB2                     
  3375                           ;OBCII_PIC18F46K22.c: 407:                                 if (PORTCbits.RC5 == 0) {
  3376   000EB2  BA82               	btfsc	130,5,c	;volatile
  3377   000EB4  EF5E  F007         	goto	u6941
  3378   000EB8  EF60  F007         	goto	u6940
  3379   000EBC                     u6941:
  3380   000EBC  EF47  F007         	goto	l6192
  3381   000EC0                     u6940:
  3382   000EC0  EF13  F007         	goto	l6154
  3383   000EC4                     l6208:
  3384   000EC4  C0EC  F0A5         	movff	_menu_sel,??_main_menu
  3385   000EC8  C0ED  F0A6         	movff	_menu_sel+1,??_main_menu+1
  3386                           
  3387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3388                           ; Switch size 1, requested type "simple"
  3389                           ; Number of cases is 1, Range of values is 0 to 0
  3390                           ; switch strategies available:
  3391                           ; Name         Instructions Cycles
  3392                           ; simple_byte            4     3 (average)
  3393                           ;	Chosen strategy is simple_byte
  3394   000ECC  0100               	movlb	0	; () banked
  3395   000ECE  51A6               	movf	(??_main_menu+1)& (0+255),w,b
  3396   000ED0  0A00               	xorlw	0	; case 0
  3397   000ED2  B4D8               	btfsc	status,2,c
  3398   000ED4  EF6E  F007         	goto	l6352
  3399   000ED8  EF81  F007         	goto	l224
  3400   000EDC                     l6352:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ; Switch size 1, requested type "simple"
  3404                           ; Number of cases is 4, Range of values is 0 to 3
  3405                           ; switch strategies available:
  3406                           ; Name         Instructions Cycles
  3407                           ; simple_byte           13     7 (average)
  3408                           ;	Chosen strategy is simple_byte
  3409   000EDC  51A5               	movf	??_main_menu& (0+255),w,b
  3410   000EDE  0A00               	xorlw	0	; case 0
  3411   000EE0  B4D8               	btfsc	status,2,c
  3412   000EE2  EFFA  F006         	goto	l6146
  3413   000EE6  0A01               	xorlw	1	; case 1
  3414   000EE8  B4D8               	btfsc	status,2,c
  3415   000EEA  EF1C  F007         	goto	l6160
  3416   000EEE  0A03               	xorlw	3	; case 2
  3417   000EF0  B4D8               	btfsc	status,2,c
  3418   000EF2  EF37  F007         	goto	l6174
  3419   000EF6  0A01               	xorlw	1	; case 3
  3420   000EF8  B4D8               	btfsc	status,2,c
  3421   000EFA  EF47  F007         	goto	l6192
  3422   000EFE  EF81  F007         	goto	l224
  3423   000F02                     l224:
  3424   000F02                     l6210:
  3425                           
  3426                           ;OBCII_PIC18F46K22.c: 423:         _delay((unsigned long)((50)*(16000000/4000.0)));
  3427   000F02  0E02               	movlw	2
  3428   000F04  0100               	movlb	0	; () banked
  3429   000F06  6FA6               	movwf	(??_main_menu+1)& (0+255),b
  3430   000F08  0E04               	movlw	4
  3431   000F0A  6FA5               	movwf	??_main_menu& (0+255),b
  3432   000F0C  0EBA               	movlw	186
  3433   000F0E                     u7137:
  3434   000F0E  2EE8               	decfsz	wreg,f,c
  3435   000F10  D7FE               	bra	u7137
  3436   000F12  2FA5               	decfsz	??_main_menu& (0+255),f,b
  3437   000F14  D7FC               	bra	u7137
  3438   000F16  2FA6               	decfsz	(??_main_menu+1)& (0+255),f,b
  3439   000F18  D7FA               	bra	u7137
  3440   000F1A  0000               	nop	
  3441   000F1C  EF6C  F006         	goto	l6104
  3442   000F20  0012               	return		;funcret
  3443   000F22                     __end_of_main_menu:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function _live_reading_mode *****************
  3447 ;; Defined at:
  3448 ;;		line 585 in file "OBCII_PIC18F46K22.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used: 1
  3468 ;; Hardware stack levels required when called: 10
  3469 ;; This function calls:
  3470 ;;		_print_AI_Temp
  3471 ;;		_print_RPM
  3472 ;;		_print_Vbatt
  3473 ;; This function is called by:
  3474 ;;		_main_menu
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text9
  3479   002DB6                     __ptext9:
  3480                           	callstack 0
  3481   002DB6                     _live_reading_mode:
  3482                           	callstack 19
  3483   002DB6                     
  3484                           ;OBCII_PIC18F46K22.c: 586:             print_RPM();
  3485   002DB6  ECFA  F00A         	call	_print_RPM	;wreg free
  3486   002DBA                     
  3487                           ;OBCII_PIC18F46K22.c: 587:             print_Vbatt();
  3488   002DBA  EC3C  F00F         	call	_print_Vbatt	;wreg free
  3489   002DBE                     
  3490                           ;OBCII_PIC18F46K22.c: 588:             print_AI_Temp();
  3491   002DBE  EC36  F00C         	call	_print_AI_Temp	;wreg free
  3492   002DC2  0012               	return		;funcret
  3493   002DC4                     __end_of_live_reading_mode:
  3494                           	callstack 0
  3495                           
  3496 ;; *************** function _print_Vbatt *****************
  3497 ;; Defined at:
  3498 ;;		line 498 in file "OBCII_PIC18F46K22.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;Total ram usage:        1 bytes
  3517 ;; Hardware stack levels used: 1
  3518 ;; Hardware stack levels required when called: 5
  3519 ;; This function calls:
  3520 ;;		_LCD_clear
  3521 ;;		_LCD_cursor_set
  3522 ;;		_LCD_write_string
  3523 ;;		_UART1_SendString
  3524 ;;		_clear_parsing_notif
  3525 ;;		_display_mm
  3526 ;;		_parsing_notif
  3527 ;;		_strchr
  3528 ;; This function is called by:
  3529 ;;		_live_reading_mode
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text10
  3534   001E78                     __ptext10:
  3535                           	callstack 0
  3536   001E78                     _print_Vbatt:
  3537                           	callstack 23
  3538   001E78                     
  3539                           ;OBCII_PIC18F46K22.c: 500:     UART1_SendString("ATRV\r");
  3540   001E78  0EB3               	movlw	low STR_22
  3541   001E7A  6E04               	movwf	UART1_SendString@string^0,c
  3542   001E7C  0EFF               	movlw	high STR_22
  3543   001E7E  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3544   001E80  EC3C  F015         	call	_UART1_SendString	;wreg free
  3545                           
  3546                           ;OBCII_PIC18F46K22.c: 501:     while(!message_complete) {
  3547   001E84  EF65  F00F         	goto	l5688
  3548   001E88                     l279:
  3549                           
  3550                           ;OBCII_PIC18F46K22.c: 503:         if (PORTCbits.RC5 == 0) {
  3551   001E88  BA82               	btfsc	130,5,c	;volatile
  3552   001E8A  EF49  F00F         	goto	u6421
  3553   001E8E  EF4B  F00F         	goto	u6420
  3554   001E92                     u6421:
  3555   001E92  EF63  F00F         	goto	l5686
  3556   001E96                     u6420:
  3557   001E96                     
  3558                           ;OBCII_PIC18F46K22.c: 504:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3559   001E96  0E68               	movlw	104
  3560   001E98  6E0B               	movwf	??_print_Vbatt^0,c
  3561   001E9A  0EE4               	movlw	228
  3562   001E9C                     u7147:
  3563   001E9C  2EE8               	decfsz	wreg,f,c
  3564   001E9E  D7FE               	bra	u7147
  3565   001EA0  2E0B               	decfsz	??_print_Vbatt^0,f,c
  3566   001EA2  D7FC               	bra	u7147
  3567   001EA4  D000               	nop2	
  3568   001EA6                     
  3569                           ;OBCII_PIC18F46K22.c: 505:             if (PORTCbits.RC5 == 0) {
  3570   001EA6  BA82               	btfsc	130,5,c	;volatile
  3571   001EA8  EF58  F00F         	goto	u6431
  3572   001EAC  EF5A  F00F         	goto	u6430
  3573   001EB0                     u6431:
  3574   001EB0  EF63  F00F         	goto	l5686
  3575   001EB4                     u6430:
  3576   001EB4                     
  3577                           ;OBCII_PIC18F46K22.c: 506:                 LCD_clear();
  3578   001EB4  EC90  F016         	call	_LCD_clear	;wreg free
  3579   001EB8                     
  3580                           ;OBCII_PIC18F46K22.c: 507:                 display_mm();
  3581   001EB8  EC41  F016         	call	_display_mm	;wreg free
  3582   001EBC                     
  3583                           ;OBCII_PIC18F46K22.c: 508:                 menu_sel = -1;
  3584   001EBC  0100               	movlb	0	; () banked
  3585   001EBE  69EC               	setf	_menu_sel& (0+255),b
  3586   001EC0  69ED               	setf	(_menu_sel+1)& (0+255),b
  3587                           
  3588                           ;OBCII_PIC18F46K22.c: 509:                 break;
  3589   001EC2  EF6D  F00F         	goto	l5690
  3590   001EC6                     l5686:
  3591                           
  3592                           ;OBCII_PIC18F46K22.c: 512:         parsing_notif();
  3593   001EC6  EC9F  F016         	call	_parsing_notif	;wreg free
  3594   001ECA                     l5688:
  3595                           
  3596                           ;OBCII_PIC18F46K22.c: 501:     while(!message_complete) {
  3597   001ECA  505B               	movf	_message_complete^0,w,c	;volatile
  3598   001ECC  B4D8               	btfsc	status,2,c
  3599   001ECE  EF6B  F00F         	goto	u6441
  3600   001ED2  EF6D  F00F         	goto	u6440
  3601   001ED6                     u6441:
  3602   001ED6  EF44  F00F         	goto	l279
  3603   001EDA                     u6440:
  3604   001EDA                     l5690:
  3605                           
  3606                           ;OBCII_PIC18F46K22.c: 514:     clear_parsing_notif();
  3607   001EDA  ECAB  F016         	call	_clear_parsing_notif	;wreg free
  3608   001EDE                     
  3609                           ;OBCII_PIC18F46K22.c: 516:     LCD_cursor_set(2,7);
  3610   001EDE  0E07               	movlw	7
  3611   001EE0  6E06               	movwf	LCD_cursor_set@column^0,c
  3612   001EE2  0E02               	movlw	2
  3613   001EE4  ECDD  F014         	call	_LCD_cursor_set
  3614   001EE8                     
  3615                           ;OBCII_PIC18F46K22.c: 517:     LCD_write_string("     ");
  3616   001EE8  0EB9               	movlw	low STR_20
  3617   001EEA  6E06               	movwf	LCD_write_string@string^0,c
  3618   001EEC  0EFF               	movlw	high STR_20
  3619   001EEE  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3620   001EF0  EC97  F013         	call	_LCD_write_string	;wreg free
  3621                           
  3622                           ;OBCII_PIC18F46K22.c: 519:     LCD_cursor_set(1,7);
  3623   001EF4  0E07               	movlw	7
  3624   001EF6  6E06               	movwf	LCD_cursor_set@column^0,c
  3625   001EF8  0E01               	movlw	1
  3626   001EFA  ECDD  F014         	call	_LCD_cursor_set
  3627   001EFE                     
  3628                           ;OBCII_PIC18F46K22.c: 520:     LCD_write_string("VBatt");
  3629   001EFE  0ECB               	movlw	low STR_24
  3630   001F00  6E06               	movwf	LCD_write_string@string^0,c
  3631   001F02  0EFF               	movlw	high STR_24
  3632   001F04  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3633   001F06  EC97  F013         	call	_LCD_write_string	;wreg free
  3634   001F0A                     
  3635                           ;OBCII_PIC18F46K22.c: 521:     LCD_cursor_set(2,7);
  3636   001F0A  0E07               	movlw	7
  3637   001F0C  6E06               	movwf	LCD_cursor_set@column^0,c
  3638   001F0E  0E02               	movlw	2
  3639   001F10  ECDD  F014         	call	_LCD_cursor_set
  3640   001F14                     
  3641                           ;OBCII_PIC18F46K22.c: 523:     if (!strchr(buffer, 'V')) {
  3642   001F14  0E00               	movlw	low _buffer
  3643   001F16  6E03               	movwf	strchr@s^0,c
  3644   001F18  0E02               	movlw	high _buffer
  3645   001F1A  6E04               	movwf	(strchr@s+1)^0,c
  3646   001F1C  0E00               	movlw	0
  3647   001F1E  6E06               	movwf	(strchr@c+1)^0,c
  3648   001F20  0E56               	movlw	86
  3649   001F22  6E05               	movwf	strchr@c^0,c
  3650   001F24  EC67  F015         	call	_strchr	;wreg free
  3651   001F28  5003               	movf	?_strchr^0,w,c
  3652   001F2A  1004               	iorwf	(?_strchr+1)^0,w,c
  3653   001F2C  A4D8               	btfss	status,2,c
  3654   001F2E  EF9B  F00F         	goto	u6451
  3655   001F32  EF9D  F00F         	goto	u6450
  3656   001F36                     u6451:
  3657   001F36  EFA5  F00F         	goto	l5704
  3658   001F3A                     u6450:
  3659   001F3A                     
  3660                           ;OBCII_PIC18F46K22.c: 524:         LCD_write_string("N/A");
  3661   001F3A  0EE8               	movlw	low STR_25
  3662   001F3C  6E06               	movwf	LCD_write_string@string^0,c
  3663   001F3E  0EFF               	movlw	high STR_25
  3664   001F40  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3665   001F42  EC97  F013         	call	_LCD_write_string	;wreg free
  3666                           
  3667                           ;OBCII_PIC18F46K22.c: 525:     }
  3668   001F46  EFAB  F00F         	goto	l5706
  3669   001F4A                     l5704:
  3670                           
  3671                           ;OBCII_PIC18F46K22.c: 527:     LCD_write_string(buffer);
  3672   001F4A  0E00               	movlw	low _buffer
  3673   001F4C  6E06               	movwf	LCD_write_string@string^0,c
  3674   001F4E  0E02               	movlw	high _buffer
  3675   001F50  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3676   001F52  EC97  F013         	call	_LCD_write_string	;wreg free
  3677   001F56                     l5706:
  3678                           
  3679                           ;OBCII_PIC18F46K22.c: 530:     buffer_count = 0;
  3680   001F56  0100               	movlb	0	; () banked
  3681   001F58  6BCB               	clrf	_buffer_count& (0+255),b
  3682   001F5A                     
  3683                           ; BSR set to: 0
  3684                           ;OBCII_PIC18F46K22.c: 531:     message_complete = 0;
  3685   001F5A  6A5B               	clrf	_message_complete^0,c	;volatile
  3686   001F5C                     
  3687                           ; BSR set to: 0
  3688   001F5C  0012               	return		;funcret
  3689   001F5E                     __end_of_print_Vbatt:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function _print_RPM *****************
  3693 ;; Defined at:
  3694 ;;		line 456 in file "OBCII_PIC18F46K22.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  B               1   89[COMRAM] unsigned char 
  3699 ;;  A               1   88[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;Total ram usage:        4 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 9
  3716 ;; This function calls:
  3717 ;;		_LCD_clear
  3718 ;;		_LCD_cursor_set
  3719 ;;		_LCD_write_string
  3720 ;;		_UART1_SendString
  3721 ;;		___awdiv
  3722 ;;		_clear_parsing_notif
  3723 ;;		_display_mm
  3724 ;;		_extract_two_pid_bytes
  3725 ;;		_memset
  3726 ;;		_parsing_notif
  3727 ;;		_sprintf
  3728 ;; This function is called by:
  3729 ;;		_live_reading_mode
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text11
  3734   0015F4                     __ptext11:
  3735                           	callstack 0
  3736   0015F4                     _print_RPM:
  3737                           	callstack 19
  3738   0015F4                     
  3739                           ;OBCII_PIC18F46K22.c: 458:     memset(buffer, 0, sizeof(buffer));
  3740   0015F4  0E00               	movlw	low _buffer
  3741   0015F6  6E03               	movwf	memset@dest^0,c
  3742   0015F8  0E02               	movlw	high _buffer
  3743   0015FA  6E04               	movwf	(memset@dest+1)^0,c
  3744   0015FC  0E00               	movlw	0
  3745   0015FE  6E06               	movwf	(memset@c+1)^0,c
  3746   001600  0E00               	movlw	0
  3747   001602  6E05               	movwf	memset@c^0,c
  3748   001604  0E01               	movlw	1
  3749   001606  6E08               	movwf	(memset@n+1)^0,c
  3750   001608  0E00               	movlw	0
  3751   00160A  6E07               	movwf	memset@n^0,c
  3752   00160C  EC0A  F016         	call	_memset	;wreg free
  3753   001610                     
  3754                           ;OBCII_PIC18F46K22.c: 459:     buffer_count = 0;
  3755   001610  0100               	movlb	0	; () banked
  3756   001612  6BCB               	clrf	_buffer_count& (0+255),b
  3757   001614                     
  3758                           ; BSR set to: 0
  3759                           ;OBCII_PIC18F46K22.c: 460:     message_complete = 0;
  3760   001614  6A5B               	clrf	_message_complete^0,c	;volatile
  3761   001616                     
  3762                           ; BSR set to: 0
  3763                           ;OBCII_PIC18F46K22.c: 462:     UART1_SendString("010C\r");
  3764   001616  0EA1               	movlw	low STR_16
  3765   001618  6E04               	movwf	UART1_SendString@string^0,c
  3766   00161A  0EFF               	movlw	high STR_16
  3767   00161C  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3768   00161E  EC3C  F015         	call	_UART1_SendString	;wreg free
  3769                           
  3770                           ;OBCII_PIC18F46K22.c: 464:     while(!message_complete) {
  3771   001622  EF34  F00B         	goto	l5642
  3772   001626                     l269:
  3773                           
  3774                           ;OBCII_PIC18F46K22.c: 465:         if (PORTCbits.RC5 == 0) {
  3775   001626  BA82               	btfsc	130,5,c	;volatile
  3776   001628  EF18  F00B         	goto	u6381
  3777   00162C  EF1A  F00B         	goto	u6380
  3778   001630                     u6381:
  3779   001630  EF32  F00B         	goto	l5640
  3780   001634                     u6380:
  3781   001634                     
  3782                           ;OBCII_PIC18F46K22.c: 466:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3783   001634  0E68               	movlw	104
  3784   001636  6E57               	movwf	??_print_RPM^0,c
  3785   001638  0EE4               	movlw	228
  3786   00163A                     u7157:
  3787   00163A  2EE8               	decfsz	wreg,f,c
  3788   00163C  D7FE               	bra	u7157
  3789   00163E  2E57               	decfsz	??_print_RPM^0,f,c
  3790   001640  D7FC               	bra	u7157
  3791   001642  D000               	nop2	
  3792   001644                     
  3793                           ;OBCII_PIC18F46K22.c: 467:             if (PORTCbits.RC5 == 0) {
  3794   001644  BA82               	btfsc	130,5,c	;volatile
  3795   001646  EF27  F00B         	goto	u6391
  3796   00164A  EF29  F00B         	goto	u6390
  3797   00164E                     u6391:
  3798   00164E  EF32  F00B         	goto	l5640
  3799   001652                     u6390:
  3800   001652                     
  3801                           ;OBCII_PIC18F46K22.c: 468:                 LCD_clear();
  3802   001652  EC90  F016         	call	_LCD_clear	;wreg free
  3803   001656                     
  3804                           ;OBCII_PIC18F46K22.c: 469:                 display_mm();
  3805   001656  EC41  F016         	call	_display_mm	;wreg free
  3806   00165A                     
  3807                           ;OBCII_PIC18F46K22.c: 470:                 menu_sel = -1;
  3808   00165A  0100               	movlb	0	; () banked
  3809   00165C  69EC               	setf	_menu_sel& (0+255),b
  3810   00165E  69ED               	setf	(_menu_sel+1)& (0+255),b
  3811   001660  EF9E  F00B         	goto	l272
  3812   001664                     l5640:
  3813                           
  3814                           ;OBCII_PIC18F46K22.c: 474:         parsing_notif();
  3815   001664  EC9F  F016         	call	_parsing_notif	;wreg free
  3816   001668                     l5642:
  3817                           
  3818                           ;OBCII_PIC18F46K22.c: 464:     while(!message_complete) {
  3819   001668  505B               	movf	_message_complete^0,w,c	;volatile
  3820   00166A  B4D8               	btfsc	status,2,c
  3821   00166C  EF3A  F00B         	goto	u6401
  3822   001670  EF3C  F00B         	goto	u6400
  3823   001674                     u6401:
  3824   001674  EF13  F00B         	goto	l269
  3825   001678                     u6400:
  3826   001678                     
  3827                           ;OBCII_PIC18F46K22.c: 476:     clear_parsing_notif();
  3828   001678  ECAB  F016         	call	_clear_parsing_notif	;wreg free
  3829   00167C                     
  3830                           ;OBCII_PIC18F46K22.c: 478:     uint8_t A = 0, B = 0;
  3831   00167C  6A59               	clrf	print_RPM@A^0,c
  3832   00167E  6A5A               	clrf	print_RPM@B^0,c
  3833   001680                     
  3834                           ;OBCII_PIC18F46K22.c: 479:     if (extract_two_pid_bytes("41 0C", &A, &B)) {
  3835   001680  0EBF               	movlw	low STR_17
  3836   001682  0100               	movlb	0	; () banked
  3837   001684  6F9B               	movwf	extract_two_pid_bytes@pid& (0+255),b
  3838   001686  0EFF               	movlw	high STR_17
  3839   001688  6F9C               	movwf	(extract_two_pid_bytes@pid+1)& (0+255),b
  3840   00168A  0E59               	movlw	low print_RPM@A
  3841   00168C  6F9D               	movwf	extract_two_pid_bytes@A& (0+255),b
  3842   00168E  0E5A               	movlw	low print_RPM@B
  3843   001690  6F9E               	movwf	extract_two_pid_bytes@B& (0+255),b
  3844   001692  EC92  F011         	call	_extract_two_pid_bytes	;wreg free
  3845   001696  0900               	iorlw	0
  3846   001698  B4D8               	btfsc	status,2,c
  3847   00169A  EF51  F00B         	goto	u6411
  3848   00169E  EF53  F00B         	goto	u6410
  3849   0016A2                     u6411:
  3850   0016A2  EF6A  F00B         	goto	l5654
  3851   0016A6                     u6410:
  3852   0016A6                     
  3853                           ;OBCII_PIC18F46K22.c: 480:         RPM = ((A << 8) | B) / 4;
  3854   0016A6  505A               	movf	print_RPM@B^0,w,c
  3855   0016A8  C059  F057         	movff	print_RPM@A,??_print_RPM
  3856   0016AC  6A58               	clrf	(??_print_RPM+1)^0,c
  3857   0016AE  C057  F058         	movff	??_print_RPM,??_print_RPM+1
  3858   0016B2  6A57               	clrf	??_print_RPM^0,c
  3859   0016B4  1057               	iorwf	??_print_RPM^0,w,c
  3860   0016B6  6E03               	movwf	___awdiv@dividend^0,c
  3861   0016B8  5058               	movf	(??_print_RPM+1)^0,w,c
  3862   0016BA  6E04               	movwf	(___awdiv@dividend+1)^0,c
  3863   0016BC  0E00               	movlw	0
  3864   0016BE  6E06               	movwf	(___awdiv@divisor+1)^0,c
  3865   0016C0  0E04               	movlw	4
  3866   0016C2  6E05               	movwf	___awdiv@divisor^0,c
  3867   0016C4  EC74  F010         	call	___awdiv	;wreg free
  3868   0016C8  C003  F0C0         	movff	?___awdiv,_RPM
  3869   0016CC  C004  F0C1         	movff	?___awdiv+1,_RPM+1
  3870                           
  3871                           ;OBCII_PIC18F46K22.c: 481:     } else {
  3872   0016D0  EF6F  F00B         	goto	l5656
  3873   0016D4                     l5654:
  3874                           
  3875                           ;OBCII_PIC18F46K22.c: 482:         RPM = 0;
  3876   0016D4  0E00               	movlw	0
  3877   0016D6  0100               	movlb	0	; () banked
  3878   0016D8  6FC1               	movwf	(_RPM+1)& (0+255),b
  3879   0016DA  0E00               	movlw	0
  3880   0016DC  6FC0               	movwf	_RPM& (0+255),b
  3881   0016DE                     l5656:
  3882                           
  3883                           ;OBCII_PIC18F46K22.c: 485:     sprintf(rpm_string, "%u", RPM);
  3884   0016DE  0EDC               	movlw	low _rpm_string
  3885   0016E0  6E1D               	movwf	sprintf@s^0,c
  3886   0016E2  0EF7               	movlw	low STR_19
  3887   0016E4  6E1E               	movwf	sprintf@fmt^0,c
  3888   0016E6  0EFF               	movlw	high STR_19
  3889   0016E8  6E1F               	movwf	(sprintf@fmt+1)^0,c
  3890   0016EA  C0C0  F020         	movff	_RPM,?_sprintf+3
  3891   0016EE  C0C1  F021         	movff	_RPM+1,?_sprintf+4
  3892   0016F2  ECD0  F015         	call	_sprintf	;wreg free
  3893   0016F6                     
  3894                           ;OBCII_PIC18F46K22.c: 486:     LCD_cursor_set(2,1);
  3895   0016F6  0E01               	movlw	1
  3896   0016F8  6E06               	movwf	LCD_cursor_set@column^0,c
  3897   0016FA  0E02               	movlw	2
  3898   0016FC  ECDD  F014         	call	_LCD_cursor_set
  3899   001700                     
  3900                           ;OBCII_PIC18F46K22.c: 487:     LCD_write_string("     ");
  3901   001700  0EB9               	movlw	low STR_20
  3902   001702  6E06               	movwf	LCD_write_string@string^0,c
  3903   001704  0EFF               	movlw	high STR_20
  3904   001706  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3905   001708  EC97  F013         	call	_LCD_write_string	;wreg free
  3906   00170C                     
  3907                           ;OBCII_PIC18F46K22.c: 488:     LCD_cursor_set(1,1);
  3908   00170C  0E01               	movlw	1
  3909   00170E  6E06               	movwf	LCD_cursor_set@column^0,c
  3910   001710  0E01               	movlw	1
  3911   001712  ECDD  F014         	call	_LCD_cursor_set
  3912   001716                     
  3913                           ;OBCII_PIC18F46K22.c: 489:     LCD_write_string("RPM");
  3914   001716  0EEC               	movlw	low STR_21
  3915   001718  6E06               	movwf	LCD_write_string@string^0,c
  3916   00171A  0EFF               	movlw	high STR_21
  3917   00171C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3918   00171E  EC97  F013         	call	_LCD_write_string	;wreg free
  3919   001722                     
  3920                           ;OBCII_PIC18F46K22.c: 490:     LCD_cursor_set(2,1);
  3921   001722  0E01               	movlw	1
  3922   001724  6E06               	movwf	LCD_cursor_set@column^0,c
  3923   001726  0E02               	movlw	2
  3924   001728  ECDD  F014         	call	_LCD_cursor_set
  3925   00172C                     
  3926                           ;OBCII_PIC18F46K22.c: 491:     LCD_write_string(rpm_string);
  3927   00172C  0EDC               	movlw	low _rpm_string
  3928   00172E  6E06               	movwf	LCD_write_string@string^0,c
  3929   001730  6A07               	clrf	(LCD_write_string@string+1)^0,c
  3930   001732  EC97  F013         	call	_LCD_write_string	;wreg free
  3931   001736                     
  3932                           ;OBCII_PIC18F46K22.c: 493:     buffer_count = 0;
  3933   001736  0100               	movlb	0	; () banked
  3934   001738  6BCB               	clrf	_buffer_count& (0+255),b
  3935   00173A                     
  3936                           ; BSR set to: 0
  3937                           ;OBCII_PIC18F46K22.c: 494:     message_complete = 0;
  3938   00173A  6A5B               	clrf	_message_complete^0,c	;volatile
  3939   00173C                     l272:
  3940                           
  3941                           ; BSR set to: 0
  3942   00173C  0012               	return		;funcret
  3943   00173E                     __end_of_print_RPM:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _extract_two_pid_bytes *****************
  3947 ;; Defined at:
  3948 ;;		line 442 in file "OBCII_PIC18F46K22.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  pid             2   59[BANK0 ] PTR const unsigned char 
  3951 ;;		 -> STR_18(6), 
  3952 ;;  A               1   61[BANK0 ] PTR unsigned char 
  3953 ;;		 -> print_RPM@A(1), 
  3954 ;;  B               1   62[BANK0 ] PTR unsigned char 
  3955 ;;		 -> print_RPM@B(1), 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  b               2   67[BANK0 ] unsigned int 
  3958 ;;  a               2   65[BANK0 ] unsigned int 
  3959 ;;  ptr             2   63[BANK0 ] PTR unsigned char 
  3960 ;;		 -> NULL(0), buffer(256), 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      unsigned char 
  3963 ;; Registers used:
  3964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3970 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;Total ram usage:       10 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 8
  3977 ;; This function calls:
  3978 ;;		_sscanf
  3979 ;;		_strlen
  3980 ;;		_strstr
  3981 ;; This function is called by:
  3982 ;;		_print_RPM
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text12
  3987   002324                     __ptext12:
  3988                           	callstack 0
  3989   002324                     _extract_two_pid_bytes:
  3990                           	callstack 19
  3991   002324                     
  3992                           ;OBCII_PIC18F46K22.c: 443:     char* ptr = strstr(buffer, pid);
  3993   002324  0E00               	movlw	low _buffer
  3994   002326  6E0A               	movwf	strstr@h^0,c
  3995   002328  0E02               	movlw	high _buffer
  3996   00232A  6E0B               	movwf	(strstr@h+1)^0,c
  3997   00232C  C09B  F00C         	movff	extract_two_pid_bytes@pid,strstr@n
  3998   002330  C09C  F00D         	movff	extract_two_pid_bytes@pid+1,strstr@n+1
  3999   002334  ECD5  F010         	call	_strstr	;wreg free
  4000   002338  C00A  F09F         	movff	?_strstr,extract_two_pid_bytes@ptr
  4001   00233C  C00B  F0A0         	movff	?_strstr+1,extract_two_pid_bytes@ptr+1
  4002   002340                     
  4003                           ;OBCII_PIC18F46K22.c: 444:     if (ptr) {
  4004   002340  0100               	movlb	0	; () banked
  4005   002342  519F               	movf	extract_two_pid_bytes@ptr& (0+255),w,b
  4006   002344  11A0               	iorwf	(extract_two_pid_bytes@ptr+1)& (0+255),w,b
  4007   002346  B4D8               	btfsc	status,2,c
  4008   002348  EFA8  F011         	goto	u6261
  4009   00234C  EFAA  F011         	goto	u6260
  4010   002350                     u6261:
  4011   002350  EFE3  F011         	goto	l5526
  4012   002354                     u6260:
  4013   002354                     
  4014                           ; BSR set to: 0
  4015                           ;OBCII_PIC18F46K22.c: 445:         unsigned int a = 0, b = 0;
  4016   002354  0E00               	movlw	0
  4017   002356  6FA2               	movwf	(extract_two_pid_bytes@a+1)& (0+255),b
  4018   002358  0E00               	movlw	0
  4019   00235A  6FA1               	movwf	extract_two_pid_bytes@a& (0+255),b
  4020   00235C  0E00               	movlw	0
  4021   00235E  6FA4               	movwf	(extract_two_pid_bytes@b+1)& (0+255),b
  4022   002360  0E00               	movlw	0
  4023   002362  6FA3               	movwf	extract_two_pid_bytes@b& (0+255),b
  4024   002364                     
  4025                           ; BSR set to: 0
  4026                           ;OBCII_PIC18F46K22.c: 446:         if (sscanf(ptr + strlen(pid), "%x %x", &a, &b) == 2) 
      +                          {
  4027   002364  C09B  F003         	movff	extract_two_pid_bytes@pid,strlen@s
  4028   002368  C09C  F004         	movff	extract_two_pid_bytes@pid+1,strlen@s+1
  4029   00236C  ECED  F015         	call	_strlen	;wreg free
  4030   002370  5003               	movf	?_strlen^0,w,c
  4031   002372  0100               	movlb	0	; () banked
  4032   002374  259F               	addwf	extract_two_pid_bytes@ptr& (0+255),w,b
  4033   002376  6F85               	movwf	sscanf@s& (0+255),b
  4034   002378  5004               	movf	(?_strlen+1)^0,w,c
  4035   00237A  21A0               	addwfc	(extract_two_pid_bytes@ptr+1)& (0+255),w,b
  4036   00237C  6F86               	movwf	(sscanf@s+1)& (0+255),b
  4037   00237E  0ED1               	movlw	low STR_15
  4038   002380  6F87               	movwf	sscanf@fmt& (0+255),b
  4039   002382  0EFF               	movlw	high STR_15
  4040   002384  6F88               	movwf	(sscanf@fmt+1)& (0+255),b
  4041   002386  0EA1               	movlw	low extract_two_pid_bytes@a
  4042   002388  6F89               	movwf	(?_sscanf+4)& (0+255),b
  4043   00238A  6B8A               	clrf	(?_sscanf+5)& (0+255),b
  4044   00238C  0EA3               	movlw	low extract_two_pid_bytes@b
  4045   00238E  6F8B               	movwf	(?_sscanf+6)& (0+255),b
  4046   002390  6B8C               	clrf	(?_sscanf+7)& (0+255),b
  4047   002392  EC8D  F015         	call	_sscanf	;wreg free
  4048   002396  0E02               	movlw	2
  4049   002398  0100               	movlb	0	; () banked
  4050   00239A  1985               	xorwf	?_sscanf& (0+255),w,b
  4051   00239C  1186               	iorwf	(?_sscanf+1)& (0+255),w,b
  4052   00239E  A4D8               	btfss	status,2,c
  4053   0023A0  EFD4  F011         	goto	u6271
  4054   0023A4  EFD6  F011         	goto	u6270
  4055   0023A8                     u6271:
  4056   0023A8  EFE3  F011         	goto	l5526
  4057   0023AC                     u6270:
  4058   0023AC                     
  4059                           ; BSR set to: 0
  4060                           ;OBCII_PIC18F46K22.c: 447:             *A = (uint8_t)a;
  4061   0023AC  519D               	movf	extract_two_pid_bytes@A& (0+255),w,b
  4062   0023AE  6ED9               	movwf	fsr2l,c
  4063   0023B0  6ADA               	clrf	fsr2h,c
  4064   0023B2  C0A1  FFDF         	movff	extract_two_pid_bytes@a,indf2
  4065                           
  4066                           ;OBCII_PIC18F46K22.c: 448:             *B = (uint8_t)b;
  4067   0023B6  519E               	movf	extract_two_pid_bytes@B& (0+255),w,b
  4068   0023B8  6ED9               	movwf	fsr2l,c
  4069   0023BA  6ADA               	clrf	fsr2h,c
  4070   0023BC  C0A3  FFDF         	movff	extract_two_pid_bytes@b,indf2
  4071   0023C0                     
  4072                           ; BSR set to: 0
  4073                           ;OBCII_PIC18F46K22.c: 449:             return 1;
  4074   0023C0  0E01               	movlw	1
  4075   0023C2  EFE4  F011         	goto	l265
  4076   0023C6                     l5526:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;OBCII_PIC18F46K22.c: 452:     return 0;
  4080   0023C6  0E00               	movlw	0
  4081   0023C8                     l265:
  4082                           
  4083                           ; BSR set to: 0
  4084   0023C8  0012               	return		;funcret
  4085   0023CA                     __end_of_extract_two_pid_bytes:
  4086                           	callstack 0
  4087                           
  4088 ;; *************** function ___awdiv *****************
  4089 ;; Defined at:
  4090 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  dividend        2    2[COMRAM] int 
  4093 ;;  divisor         2    4[COMRAM] int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  quotient        2    8[COMRAM] int 
  4096 ;;  sign            1    7[COMRAM] unsigned char 
  4097 ;;  counter         1    6[COMRAM] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2    2[COMRAM] int 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;Total ram usage:        8 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_print_RPM
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text13
  4122   0020E8                     __ptext13:
  4123                           	callstack 0
  4124   0020E8                     ___awdiv:
  4125                           	callstack 26
  4126   0020E8  6A08               	clrf	___awdiv@sign^0,c
  4127   0020EA  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  4128   0020EC  EF7C  F010         	goto	u6310
  4129   0020F0  EF7A  F010         	goto	u6311
  4130   0020F4                     u6311:
  4131   0020F4  EF82  F010         	goto	l5576
  4132   0020F8                     u6310:
  4133   0020F8  6C05               	negf	___awdiv@divisor^0,c
  4134   0020FA  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  4135   0020FC  B0D8               	btfsc	status,0,c
  4136   0020FE  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  4137   002100  0E01               	movlw	1
  4138   002102  6E08               	movwf	___awdiv@sign^0,c
  4139   002104                     l5576:
  4140   002104  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  4141   002106  EF89  F010         	goto	u6320
  4142   00210A  EF87  F010         	goto	u6321
  4143   00210E                     u6321:
  4144   00210E  EF8F  F010         	goto	l5582
  4145   002112                     u6320:
  4146   002112  6C03               	negf	___awdiv@dividend^0,c
  4147   002114  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  4148   002116  B0D8               	btfsc	status,0,c
  4149   002118  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  4150   00211A  0E01               	movlw	1
  4151   00211C  1A08               	xorwf	___awdiv@sign^0,f,c
  4152   00211E                     l5582:
  4153   00211E  0E00               	movlw	0
  4154   002120  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  4155   002122  0E00               	movlw	0
  4156   002124  6E09               	movwf	___awdiv@quotient^0,c
  4157   002126  5005               	movf	___awdiv@divisor^0,w,c
  4158   002128  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  4159   00212A  B4D8               	btfsc	status,2,c
  4160   00212C  EF9A  F010         	goto	u6331
  4161   002130  EF9C  F010         	goto	u6330
  4162   002134                     u6331:
  4163   002134  EFC4  F010         	goto	l5604
  4164   002138                     u6330:
  4165   002138  0E01               	movlw	1
  4166   00213A  6E07               	movwf	___awdiv@counter^0,c
  4167   00213C  EFA4  F010         	goto	l5590
  4168   002140                     l5588:
  4169   002140  90D8               	bcf	status,0,c
  4170   002142  3605               	rlcf	___awdiv@divisor^0,f,c
  4171   002144  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  4172   002146  2A07               	incf	___awdiv@counter^0,f,c
  4173   002148                     l5590:
  4174   002148  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  4175   00214A  EFA9  F010         	goto	u6341
  4176   00214E  EFAB  F010         	goto	u6340
  4177   002152                     u6341:
  4178   002152  EFA0  F010         	goto	l5588
  4179   002156                     u6340:
  4180   002156                     l5592:
  4181   002156  90D8               	bcf	status,0,c
  4182   002158  3609               	rlcf	___awdiv@quotient^0,f,c
  4183   00215A  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  4184   00215C  5005               	movf	___awdiv@divisor^0,w,c
  4185   00215E  5C03               	subwf	___awdiv@dividend^0,w,c
  4186   002160  5006               	movf	(___awdiv@divisor+1)^0,w,c
  4187   002162  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  4188   002164  A0D8               	btfss	status,0,c
  4189   002166  EFB7  F010         	goto	u6351
  4190   00216A  EFB9  F010         	goto	u6350
  4191   00216E                     u6351:
  4192   00216E  EFBE  F010         	goto	l5600
  4193   002172                     u6350:
  4194   002172  5005               	movf	___awdiv@divisor^0,w,c
  4195   002174  5E03               	subwf	___awdiv@dividend^0,f,c
  4196   002176  5006               	movf	(___awdiv@divisor+1)^0,w,c
  4197   002178  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  4198   00217A  8009               	bsf	___awdiv@quotient^0,0,c
  4199   00217C                     l5600:
  4200   00217C  90D8               	bcf	status,0,c
  4201   00217E  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  4202   002180  3205               	rrcf	___awdiv@divisor^0,f,c
  4203   002182  2E07               	decfsz	___awdiv@counter^0,f,c
  4204   002184  EFAB  F010         	goto	l5592
  4205   002188                     l5604:
  4206   002188  5008               	movf	___awdiv@sign^0,w,c
  4207   00218A  B4D8               	btfsc	status,2,c
  4208   00218C  EFCA  F010         	goto	u6361
  4209   002190  EFCC  F010         	goto	u6360
  4210   002194                     u6361:
  4211   002194  EFD0  F010         	goto	l5608
  4212   002198                     u6360:
  4213   002198  6C09               	negf	___awdiv@quotient^0,c
  4214   00219A  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  4215   00219C  B0D8               	btfsc	status,0,c
  4216   00219E  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  4217   0021A0                     l5608:
  4218   0021A0  C009  F003         	movff	___awdiv@quotient,?___awdiv
  4219   0021A4  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  4220   0021A8  0012               	return		;funcret
  4221   0021AA                     __end_of___awdiv:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _print_AI_Temp *****************
  4225 ;; Defined at:
  4226 ;;		line 546 in file "OBCII_PIC18F46K22.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  A               1   63[BANK0 ] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;Total ram usage:        2 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 9
  4247 ;; This function calls:
  4248 ;;		_LCD_clear
  4249 ;;		_LCD_cursor_set
  4250 ;;		_LCD_write_string
  4251 ;;		_UART1_SendString
  4252 ;;		_clear_parsing_notif
  4253 ;;		_display_mm
  4254 ;;		_extract_single_pid_byte
  4255 ;;		_parsing_notif
  4256 ;;		_sprintf
  4257 ;; This function is called by:
  4258 ;;		_live_reading_mode
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text14
  4263   00186C                     __ptext14:
  4264                           	callstack 0
  4265   00186C                     _print_AI_Temp:
  4266                           	callstack 19
  4267   00186C                     
  4268                           ;OBCII_PIC18F46K22.c: 547:     UART1_SendString("010F\r");
  4269   00186C  0EA7               	movlw	low STR_27
  4270   00186E  6E04               	movwf	UART1_SendString@string^0,c
  4271   001870  0EFF               	movlw	high STR_27
  4272   001872  6E05               	movwf	(UART1_SendString@string+1)^0,c
  4273   001874  EC3C  F015         	call	_UART1_SendString	;wreg free
  4274                           
  4275                           ;OBCII_PIC18F46K22.c: 549:     while(!message_complete) {
  4276   001878  EF60  F00C         	goto	l5726
  4277   00187C                     l294:
  4278                           
  4279                           ;OBCII_PIC18F46K22.c: 550:         if (PORTCbits.RC5 == 0) {
  4280   00187C  BA82               	btfsc	130,5,c	;volatile
  4281   00187E  EF43  F00C         	goto	u6461
  4282   001882  EF45  F00C         	goto	u6460
  4283   001886                     u6461:
  4284   001886  EF5E  F00C         	goto	l5724
  4285   00188A                     u6460:
  4286   00188A                     
  4287                           ;OBCII_PIC18F46K22.c: 551:             _delay((unsigned long)((20)*(16000000/4000.0)));
  4288   00188A  0E68               	movlw	104
  4289   00188C  0100               	movlb	0	; () banked
  4290   00188E  6F9E               	movwf	??_print_AI_Temp& (0+255),b
  4291   001890  0EE4               	movlw	228
  4292   001892                     u7167:
  4293   001892  2EE8               	decfsz	wreg,f,c
  4294   001894  D7FE               	bra	u7167
  4295   001896  2F9E               	decfsz	??_print_AI_Temp& (0+255),f,b
  4296   001898  D7FC               	bra	u7167
  4297   00189A  0000               	nop	
  4298   00189C                     
  4299                           ;OBCII_PIC18F46K22.c: 552:             if (PORTCbits.RC5 == 0) {
  4300   00189C  BA82               	btfsc	130,5,c	;volatile
  4301   00189E  EF53  F00C         	goto	u6471
  4302   0018A2  EF55  F00C         	goto	u6470
  4303   0018A6                     u6471:
  4304   0018A6  EF5E  F00C         	goto	l5724
  4305   0018AA                     u6470:
  4306   0018AA                     
  4307                           ;OBCII_PIC18F46K22.c: 553:                 LCD_clear();
  4308   0018AA  EC90  F016         	call	_LCD_clear	;wreg free
  4309   0018AE                     
  4310                           ;OBCII_PIC18F46K22.c: 554:                 display_mm();
  4311   0018AE  EC41  F016         	call	_display_mm	;wreg free
  4312   0018B2                     
  4313                           ;OBCII_PIC18F46K22.c: 555:                 menu_sel = -1;
  4314   0018B2  0100               	movlb	0	; () banked
  4315   0018B4  69EC               	setf	_menu_sel& (0+255),b
  4316   0018B6  69ED               	setf	(_menu_sel+1)& (0+255),b
  4317   0018B8  EFC4  F00C         	goto	l297
  4318   0018BC                     l5724:
  4319                           
  4320                           ;OBCII_PIC18F46K22.c: 559:         parsing_notif();
  4321   0018BC  EC9F  F016         	call	_parsing_notif	;wreg free
  4322   0018C0                     l5726:
  4323                           
  4324                           ;OBCII_PIC18F46K22.c: 549:     while(!message_complete) {
  4325   0018C0  505B               	movf	_message_complete^0,w,c	;volatile
  4326   0018C2  B4D8               	btfsc	status,2,c
  4327   0018C4  EF66  F00C         	goto	u6481
  4328   0018C8  EF68  F00C         	goto	u6480
  4329   0018CC                     u6481:
  4330   0018CC  EF3E  F00C         	goto	l294
  4331   0018D0                     u6480:
  4332   0018D0                     
  4333                           ;OBCII_PIC18F46K22.c: 561:     clear_parsing_notif();
  4334   0018D0  ECAB  F016         	call	_clear_parsing_notif	;wreg free
  4335   0018D4                     
  4336                           ;OBCII_PIC18F46K22.c: 563:     uint8_t A = 0;
  4337   0018D4  0100               	movlb	0	; () banked
  4338   0018D6  6B9F               	clrf	print_AI_Temp@A& (0+255),b
  4339   0018D8                     
  4340                           ; BSR set to: 0
  4341                           ;OBCII_PIC18F46K22.c: 564:     if (extract_single_pid_byte("41 0F", &A)) {
  4342   0018D8  0EC5               	movlw	low STR_28
  4343   0018DA  6F9B               	movwf	extract_single_pid_byte@pid& (0+255),b
  4344   0018DC  0EFF               	movlw	high STR_28
  4345   0018DE  6F9C               	movwf	(extract_single_pid_byte@pid+1)& (0+255),b
  4346   0018E0  0E9F               	movlw	low print_AI_Temp@A
  4347   0018E2  6F9D               	movwf	extract_single_pid_byte@A& (0+255),b
  4348   0018E4  EC12  F013         	call	_extract_single_pid_byte	;wreg free
  4349   0018E8  0900               	iorlw	0
  4350   0018EA  B4D8               	btfsc	status,2,c
  4351   0018EC  EF7A  F00C         	goto	u6491
  4352   0018F0  EF7C  F00C         	goto	u6490
  4353   0018F4                     u6491:
  4354   0018F4  EF85  F00C         	goto	l5736
  4355   0018F8                     u6490:
  4356   0018F8                     
  4357                           ;OBCII_PIC18F46K22.c: 565:         air_intake_temp = A - 40;
  4358   0018F8  0ED8               	movlw	216
  4359   0018FA  0100               	movlb	0	; () banked
  4360   0018FC  259F               	addwf	print_AI_Temp@A& (0+255),w,b
  4361   0018FE  6FBC               	movwf	_air_intake_temp& (0+255),b
  4362   001900  6BBD               	clrf	(_air_intake_temp+1)& (0+255),b
  4363   001902  0EFF               	movlw	255
  4364   001904  23BD               	addwfc	(_air_intake_temp+1)& (0+255),f,b
  4365                           
  4366                           ;OBCII_PIC18F46K22.c: 566:     } else {
  4367   001906  EF8A  F00C         	goto	l5738
  4368   00190A                     l5736:
  4369                           
  4370                           ;OBCII_PIC18F46K22.c: 567:         air_intake_temp = 0;
  4371   00190A  0E00               	movlw	0
  4372   00190C  0100               	movlb	0	; () banked
  4373   00190E  6FBD               	movwf	(_air_intake_temp+1)& (0+255),b
  4374   001910  0E00               	movlw	0
  4375   001912  6FBC               	movwf	_air_intake_temp& (0+255),b
  4376   001914                     l5738:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;OBCII_PIC18F46K22.c: 570:     sprintf(air_intake_string, "%u", air_intake_temp);
  4380   001914  0ECC               	movlw	low _air_intake_string
  4381   001916  6E1D               	movwf	sprintf@s^0,c
  4382   001918  0EF7               	movlw	low STR_19
  4383   00191A  6E1E               	movwf	sprintf@fmt^0,c
  4384   00191C  0EFF               	movlw	high STR_19
  4385   00191E  6E1F               	movwf	(sprintf@fmt+1)^0,c
  4386   001920  C0BC  F020         	movff	_air_intake_temp,?_sprintf+3
  4387   001924  C0BD  F021         	movff	_air_intake_temp+1,?_sprintf+4
  4388   001928  ECD0  F015         	call	_sprintf	;wreg free
  4389   00192C                     
  4390                           ;OBCII_PIC18F46K22.c: 571:     LCD_cursor_set(2,13);
  4391   00192C  0E0D               	movlw	13
  4392   00192E  6E06               	movwf	LCD_cursor_set@column^0,c
  4393   001930  0E02               	movlw	2
  4394   001932  ECDD  F014         	call	_LCD_cursor_set
  4395   001936                     
  4396                           ;OBCII_PIC18F46K22.c: 572:     LCD_write_string("   ");
  4397   001936  0EBB               	movlw	low (STR_20+2)
  4398   001938  6E06               	movwf	LCD_write_string@string^0,c
  4399   00193A  0EFF               	movlw	high (STR_20+2)
  4400   00193C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4401   00193E  EC97  F013         	call	_LCD_write_string	;wreg free
  4402   001942                     
  4403                           ;OBCII_PIC18F46K22.c: 573:     LCD_cursor_set(1,13);
  4404   001942  0E0D               	movlw	13
  4405   001944  6E06               	movwf	LCD_cursor_set@column^0,c
  4406   001946  0E01               	movlw	1
  4407   001948  ECDD  F014         	call	_LCD_cursor_set
  4408   00194C                     
  4409                           ;OBCII_PIC18F46K22.c: 574:     LCD_write_string("AIT");
  4410   00194C  0EF0               	movlw	low STR_32
  4411   00194E  6E06               	movwf	LCD_write_string@string^0,c
  4412   001950  0EFF               	movlw	high STR_32
  4413   001952  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4414   001954  EC97  F013         	call	_LCD_write_string	;wreg free
  4415   001958                     
  4416                           ;OBCII_PIC18F46K22.c: 575:     LCD_cursor_set(2,13);
  4417   001958  0E0D               	movlw	13
  4418   00195A  6E06               	movwf	LCD_cursor_set@column^0,c
  4419   00195C  0E02               	movlw	2
  4420   00195E  ECDD  F014         	call	_LCD_cursor_set
  4421   001962                     
  4422                           ;OBCII_PIC18F46K22.c: 576:     LCD_write_string(air_intake_string);
  4423   001962  0ECC               	movlw	low _air_intake_string
  4424   001964  6E06               	movwf	LCD_write_string@string^0,c
  4425   001966  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4426   001968  EC97  F013         	call	_LCD_write_string	;wreg free
  4427   00196C                     
  4428                           ;OBCII_PIC18F46K22.c: 577:     LCD_cursor_set(2,15);
  4429   00196C  0E0F               	movlw	15
  4430   00196E  6E06               	movwf	LCD_cursor_set@column^0,c
  4431   001970  0E02               	movlw	2
  4432   001972  ECDD  F014         	call	_LCD_cursor_set
  4433   001976                     
  4434                           ;OBCII_PIC18F46K22.c: 578:     LCD_write_string("C");
  4435   001976  0EC3               	movlw	low (STR_17+4)
  4436   001978  6E06               	movwf	LCD_write_string@string^0,c
  4437   00197A  0EFF               	movlw	high (STR_17+4)
  4438   00197C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4439   00197E  EC97  F013         	call	_LCD_write_string	;wreg free
  4440   001982                     
  4441                           ;OBCII_PIC18F46K22.c: 580:     buffer_count = 0;
  4442   001982  0100               	movlb	0	; () banked
  4443   001984  6BCB               	clrf	_buffer_count& (0+255),b
  4444   001986                     
  4445                           ; BSR set to: 0
  4446                           ;OBCII_PIC18F46K22.c: 581:     message_complete = 0;
  4447   001986  6A5B               	clrf	_message_complete^0,c	;volatile
  4448   001988                     l297:
  4449                           
  4450                           ; BSR set to: 0
  4451   001988  0012               	return		;funcret
  4452   00198A                     __end_of_print_AI_Temp:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _sprintf *****************
  4456 ;; Defined at:
  4457 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  s               1   28[COMRAM] PTR unsigned char 
  4460 ;;		 -> air_intake_string(16), rpm_string(16), 
  4461 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
  4462 ;;		 -> STR_30(3), STR_19(3), 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  f              11   34[COMRAM] struct _IO_FILE
  4465 ;;  ret             2    0        int 
  4466 ;;  ap              1   33[COMRAM] PTR void [1]
  4467 ;;		 -> ?_sprintf(2), 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  2   28[COMRAM] int 
  4470 ;; Registers used:
  4471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4477 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;Total ram usage:       17 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; Hardware stack levels required when called: 5
  4484 ;; This function calls:
  4485 ;;		_vfprintf
  4486 ;; This function is called by:
  4487 ;;		_print_RPM
  4488 ;;		_print_AI_Temp
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text15
  4493   002BA0                     __ptext15:
  4494                           	callstack 0
  4495   002BA0                     _sprintf:
  4496                           	callstack 22
  4497   002BA0  0E20               	movlw	low (?_sprintf+3)
  4498   002BA2  6E22               	movwf	sprintf@ap^0,c
  4499   002BA4  C01D  F023         	movff	sprintf@s,sprintf@f
  4500   002BA8  6A24               	clrf	(sprintf@f+1)^0,c
  4501   002BAA  0E00               	movlw	0
  4502   002BAC  6E26               	movwf	(sprintf@f+3)^0,c
  4503   002BAE  0E00               	movlw	0
  4504   002BB0  6E25               	movwf	(sprintf@f+2)^0,c
  4505   002BB2  0E00               	movlw	0
  4506   002BB4  6E2D               	movwf	(sprintf@f+10)^0,c
  4507   002BB6  0E00               	movlw	0
  4508   002BB8  6E2C               	movwf	(sprintf@f+9)^0,c
  4509   002BBA  0E23               	movlw	low sprintf@f
  4510   002BBC  6E17               	movwf	vfprintf@fp^0,c
  4511   002BBE  C01E  F018         	movff	sprintf@fmt,vfprintf@fmt
  4512   002BC2  C01F  F019         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4513   002BC6  0E22               	movlw	low sprintf@ap
  4514   002BC8  6E1A               	movwf	vfprintf@ap^0,c
  4515   002BCA  ECAF  F015         	call	_vfprintf	;wreg free
  4516   002BCE  501D               	movf	sprintf@s^0,w,c
  4517   002BD0  2425               	addwf	(sprintf@f+2)^0,w,c
  4518   002BD2  6ED9               	movwf	fsr2l,c
  4519   002BD4  6ADA               	clrf	fsr2h,c
  4520   002BD6  6ADF               	clrf	indf2,c
  4521   002BD8  0012               	return		;funcret
  4522   002BDA                     __end_of_sprintf:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _vfprintf *****************
  4526 ;; Defined at:
  4527 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  4530 ;;		 -> sprintf@f(11), 
  4531 ;;  fmt             2   23[COMRAM] PTR const unsigned char 
  4532 ;;		 -> STR_30(3), STR_19(3), 
  4533 ;;  ap              1   25[COMRAM] PTR PTR void 
  4534 ;;		 -> sprintf@ap(1), 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  cfmt            2   26[COMRAM] PTR unsigned char 
  4537 ;;		 -> STR_30(3), STR_19(3), 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2   22[COMRAM] int 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;Total ram usage:        6 bytes
  4552 ;; Hardware stack levels used: 1
  4553 ;; Hardware stack levels required when called: 4
  4554 ;; This function calls:
  4555 ;;		_vfpfcnvrt
  4556 ;; This function is called by:
  4557 ;;		_sprintf
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text16
  4562   002B5E                     __ptext16:
  4563                           	callstack 0
  4564   002B5E                     _vfprintf:
  4565                           	callstack 22
  4566   002B5E                     
  4567                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4568   002B5E  C018  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  4569   002B62  C019  F01C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4570                           
  4571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4572   002B66  EFBD  F015         	goto	l5478
  4573   002B6A                     l5476:
  4574                           
  4575                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4576   002B6A  C017  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  4577   002B6E  0E1B               	movlw	low vfprintf@cfmt
  4578   002B70  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  4579   002B72  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  4580   002B76  EC78  F009         	call	_vfpfcnvrt	;wreg free
  4581   002B7A                     l5478:
  4582                           
  4583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4584   002B7A  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  4585   002B7E  C01C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4586   002B82                     	if	0	;tblptru may be non-zero
  4587   002B82                     	endif
  4588   002B82                     	if	0	;tblptru may be non-zero
  4589   002B82                     	endif
  4590   002B82  0008               	tblrd		*
  4591   002B84  50F5               	movf	tablat,w,c
  4592   002B86  0900               	iorlw	0
  4593   002B88  A4D8               	btfss	status,2,c
  4594   002B8A  EFC9  F015         	goto	u6241
  4595   002B8E  EFCB  F015         	goto	u6240
  4596   002B92                     u6241:
  4597   002B92  EFB5  F015         	goto	l5476
  4598   002B96                     u6240:
  4599   002B96                     
  4600                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4601   002B96  0E00               	movlw	0
  4602   002B98  6E18               	movwf	(?_vfprintf+1)^0,c
  4603   002B9A  0E00               	movlw	0
  4604   002B9C  6E17               	movwf	?_vfprintf^0,c
  4605   002B9E  0012               	return		;funcret
  4606   002BA0                     __end_of_vfprintf:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _vfpfcnvrt *****************
  4610 ;; Defined at:
  4611 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  4614 ;;		 -> sprintf@f(11), 
  4615 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  4616 ;;		 -> vfprintf@cfmt(2), 
  4617 ;;  ap              1   12[COMRAM] PTR PTR void 
  4618 ;;		 -> sprintf@ap(1), 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  convarg         4   17[COMRAM] struct .
  4621 ;;  cp              2   15[COMRAM] PTR unsigned char 
  4622 ;;		 -> STR_30(3), STR_19(3), 
  4623 ;;  c               1   21[COMRAM] unsigned char 
  4624 ;;  done            1    0        _Bool 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1    wreg      void 
  4627 ;; Registers used:
  4628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4634 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;Total ram usage:       12 bytes
  4639 ;; Hardware stack levels used: 1
  4640 ;; Hardware stack levels required when called: 3
  4641 ;; This function calls:
  4642 ;;		___lwdiv
  4643 ;;		___lwmod
  4644 ;;		_fputc
  4645 ;; This function is called by:
  4646 ;;		_vfprintf
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text17
  4651   0012F0                     __ptext17:
  4652                           	callstack 0
  4653   0012F0                     _vfpfcnvrt:
  4654                           	callstack 22
  4655   0012F0                     
  4656                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4657   0012F0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4658   0012F2  6ED9               	movwf	fsr2l,c
  4659   0012F4  6ADA               	clrf	fsr2h,c
  4660   0012F6  CFDE FFF6          	movff	postinc2,tblptrl
  4661   0012FA  CFDD FFF7          	movff	postdec2,tblptrh
  4662   0012FE                     	if	0	;tblptru may be non-zero
  4663   0012FE                     	endif
  4664   0012FE                     	if	0	;tblptru may be non-zero
  4665   0012FE                     	endif
  4666   0012FE  0008               	tblrd		*
  4667   001300  50F5               	movf	tablat,w,c
  4668   001302  0A25               	xorlw	37
  4669   001304  A4D8               	btfss	status,2,c
  4670   001306  EF87  F009         	goto	u5981
  4671   00130A  EF89  F009         	goto	u5980
  4672   00130E                     u5981:
  4673   00130E  EF2E  F00A         	goto	l5368
  4674   001312                     u5980:
  4675   001312                     
  4676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4677   001312  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4678   001314  6ED9               	movwf	fsr2l,c
  4679   001316  6ADA               	clrf	fsr2h,c
  4680   001318  2ADE               	incf	postinc2,f,c
  4681   00131A  0E00               	movlw	0
  4682   00131C  22DD               	addwfc	postdec2,f,c
  4683   00131E                     
  4684                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4685   00131E  0E00               	movlw	0
  4686   001320  0100               	movlb	0	; () banked
  4687   001322  6FB9               	movwf	(_width+1)& (0+255),b
  4688   001324  0E00               	movlw	0
  4689   001326  6FB8               	movwf	_width& (0+255),b
  4690   001328  C0B8  F0CA         	movff	_width,_flags
  4691   00132C                     
  4692                           ; BSR set to: 0
  4693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4694   00132C  69BA               	setf	_prec& (0+255),b
  4695   00132E  69BB               	setf	(_prec+1)& (0+255),b
  4696   001330                     
  4697                           ; BSR set to: 0
  4698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  4699   001330  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4700   001332  6ED9               	movwf	fsr2l,c
  4701   001334  6ADA               	clrf	fsr2h,c
  4702   001336  CFDE F010          	movff	postinc2,vfpfcnvrt@cp
  4703   00133A  CFDD F011          	movff	postdec2,vfpfcnvrt@cp+1
  4704   00133E                     
  4705                           ; BSR set to: 0
  4706   00133E  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4707   001342  C011  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4708   001346                     	if	0	;tblptru may be non-zero
  4709   001346                     	endif
  4710   001346                     	if	0	;tblptru may be non-zero
  4711   001346                     	endif
  4712   001346  0008               	tblrd		*
  4713   001348  50F5               	movf	tablat,w,c
  4714   00134A  0A75               	xorlw	117
  4715   00134C  A4D8               	btfss	status,2,c
  4716   00134E  EFAB  F009         	goto	u5991
  4717   001352  EFAD  F009         	goto	u5990
  4718   001356                     u5991:
  4719   001356  EF26  F00A         	goto	l5364
  4720   00135A                     u5990:
  4721   00135A                     
  4722                           ; BSR set to: 0
  4723                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  4724   00135A  500D               	movf	vfpfcnvrt@ap^0,w,c
  4725   00135C  6ED9               	movwf	fsr2l,c
  4726   00135E  6ADA               	clrf	fsr2h,c
  4727   001360  0E02               	movlw	2
  4728   001362  26DF               	addwf	indf2,f,c
  4729   001364  5CDF               	subwf	indf2,w,c
  4730   001366  6ED9               	movwf	fsr2l,c
  4731   001368  6ADA               	clrf	fsr2h,c
  4732   00136A  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  4733   00136E  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  4734   001372                     
  4735                           ; BSR set to: 0
  4736                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  4737   001372  0E01               	movlw	1
  4738   001374  2410               	addwf	vfpfcnvrt@cp^0,w,c
  4739   001376  6E0E               	movwf	??_vfpfcnvrt^0,c
  4740   001378  0E00               	movlw	0
  4741   00137A  2011               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  4742   00137C  6E0F               	movwf	(??_vfpfcnvrt+1)^0,c
  4743   00137E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4744   001380  6ED9               	movwf	fsr2l,c
  4745   001382  6ADA               	clrf	fsr2h,c
  4746   001384  C00E  FFDE         	movff	??_vfpfcnvrt,postinc2
  4747   001388  C00F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4748                           
  4749                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  4750   00138C  EF1A  F00A         	goto	l5362
  4751   001390                     l5344:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  4755   001390  0E20               	movlw	32
  4756   001392  6E16               	movwf	vfpfcnvrt@c^0,c
  4757   001394                     l5346:
  4758                           
  4759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  4760   001394  0616               	decf	vfpfcnvrt@c^0,f,c
  4761   001396  0E3C               	movlw	low _dbuf
  4762   001398  2416               	addwf	vfpfcnvrt@c^0,w,c
  4763   00139A  6ED9               	movwf	fsr2l,c
  4764   00139C  6ADA               	clrf	fsr2h,c
  4765   00139E  0E01               	movlw	high _dbuf
  4766   0013A0  22DA               	addwfc	fsr2h,f,c
  4767   0013A2  C012  F003         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  4768   0013A6  C013  F004         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  4769   0013AA  0E00               	movlw	0
  4770   0013AC  6E06               	movwf	(___lwmod@divisor+1)^0,c
  4771   0013AE  0E0A               	movlw	10
  4772   0013B0  6E05               	movwf	___lwmod@divisor^0,c
  4773   0013B2  ECAB  F014         	call	___lwmod	;wreg free
  4774   0013B6  5003               	movf	?___lwmod^0,w,c
  4775   0013B8  0F30               	addlw	48
  4776   0013BA  6EDF               	movwf	indf2,c
  4777   0013BC                     
  4778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  4779   0013BC  C012  F003         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  4780   0013C0  C013  F004         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  4781   0013C4  0E00               	movlw	0
  4782   0013C6  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  4783   0013C8  0E0A               	movlw	10
  4784   0013CA  6E05               	movwf	___lwdiv@divisor^0,c
  4785   0013CC  ECD4  F013         	call	___lwdiv	;wreg free
  4786   0013D0  C003  F012         	movff	?___lwdiv,vfpfcnvrt@convarg
  4787   0013D4  C004  F013         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  4788   0013D8                     
  4789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  4790   0013D8  5012               	movf	vfpfcnvrt@convarg^0,w,c
  4791   0013DA  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  4792   0013DC  B4D8               	btfsc	status,2,c
  4793   0013DE  EFF3  F009         	goto	u6001
  4794   0013E2  EFF5  F009         	goto	u6000
  4795   0013E6                     u6001:
  4796   0013E6  EF0F  F00A         	goto	l5358
  4797   0013EA                     u6000:
  4798   0013EA  5016               	movf	vfpfcnvrt@c^0,w,c
  4799   0013EC  A4D8               	btfss	status,2,c
  4800   0013EE  EFFB  F009         	goto	u6011
  4801   0013F2  EFFD  F009         	goto	u6010
  4802   0013F6                     u6011:
  4803   0013F6  EFCA  F009         	goto	l5346
  4804   0013FA                     u6010:
  4805   0013FA  EF0F  F00A         	goto	l5358
  4806   0013FE                     l5354:
  4807                           
  4808                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  4809   0013FE  0E3C               	movlw	low _dbuf
  4810   001400  2416               	addwf	vfpfcnvrt@c^0,w,c
  4811   001402  6ED9               	movwf	fsr2l,c
  4812   001404  6ADA               	clrf	fsr2h,c
  4813   001406  0E01               	movlw	high _dbuf
  4814   001408  22DA               	addwfc	fsr2h,f,c
  4815   00140A  50DF               	movf	indf2,w,c
  4816   00140C  6E0E               	movwf	??_vfpfcnvrt^0,c
  4817   00140E  500E               	movf	??_vfpfcnvrt^0,w,c
  4818   001410  6E03               	movwf	fputc@c^0,c
  4819   001412  6A04               	clrf	(fputc@c+1)^0,c
  4820   001414  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4821   001418  EC35  F011         	call	_fputc	;wreg free
  4822   00141C  2A16               	incf	vfpfcnvrt@c^0,f,c
  4823   00141E                     l5358:
  4824                           
  4825                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  4826   00141E  0E20               	movlw	32
  4827   001420  1816               	xorwf	vfpfcnvrt@c^0,w,c
  4828   001422  A4D8               	btfss	status,2,c
  4829   001424  EF16  F00A         	goto	u6021
  4830   001428  EF18  F00A         	goto	u6020
  4831   00142C                     u6021:
  4832   00142C  EFFF  F009         	goto	l5354
  4833   001430                     u6020:
  4834   001430  EF3F  F00A         	goto	l1207
  4835   001434                     l5362:
  4836                           
  4837                           ; BSR set to: 0
  4838   001434  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4839   001438  C011  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4840   00143C                     	if	0	;tblptru may be non-zero
  4841   00143C                     	endif
  4842   00143C                     	if	0	;tblptru may be non-zero
  4843   00143C                     	endif
  4844   00143C  0008               	tblrd		*
  4845   00143E  50F5               	movf	tablat,w,c
  4846                           
  4847                           ; Switch size 1, requested type "simple"
  4848                           ; Number of cases is 1, Range of values is 117 to 117
  4849                           ; switch strategies available:
  4850                           ; Name         Instructions Cycles
  4851                           ; simple_byte            4     3 (average)
  4852                           ;	Chosen strategy is simple_byte
  4853   001440  0A75               	xorlw	117	; case 117
  4854   001442  B4D8               	btfsc	status,2,c
  4855   001444  EFC8  F009         	goto	l5344
  4856   001448  EF26  F00A         	goto	l5364
  4857   00144C                     l5364:
  4858                           
  4859                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4860   00144C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4861   00144E  6ED9               	movwf	fsr2l,c
  4862   001450  6ADA               	clrf	fsr2h,c
  4863   001452  2ADE               	incf	postinc2,f,c
  4864   001454  0E00               	movlw	0
  4865   001456  22DD               	addwfc	postdec2,f,c
  4866   001458  EF3F  F00A         	goto	l1207
  4867   00145C                     l5368:
  4868                           
  4869                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4870   00145C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4871   00145E  6ED9               	movwf	fsr2l,c
  4872   001460  6ADA               	clrf	fsr2h,c
  4873   001462  CFDE FFF6          	movff	postinc2,tblptrl
  4874   001466  CFDD FFF7          	movff	postdec2,tblptrh
  4875   00146A                     	if	0	;tblptru may be non-zero
  4876   00146A                     	endif
  4877   00146A                     	if	0	;tblptru may be non-zero
  4878   00146A                     	endif
  4879   00146A  0008               	tblrd		*
  4880   00146C  50F5               	movf	tablat,w,c
  4881   00146E  6E03               	movwf	fputc@c^0,c
  4882   001470  6A04               	clrf	(fputc@c+1)^0,c
  4883   001472  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4884   001476  EC35  F011         	call	_fputc	;wreg free
  4885   00147A  EF26  F00A         	goto	l5364
  4886   00147E                     l1207:
  4887   00147E  0012               	return		;funcret
  4888   001480                     __end_of_vfpfcnvrt:
  4889                           	callstack 0
  4890                           
  4891 ;; *************** function _fputc *****************
  4892 ;; Defined at:
  4893 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  c               2    2[COMRAM] int 
  4896 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  4897 ;;		 -> sprintf@f(11), 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  2    2[COMRAM] int 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4909 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;Total ram usage:        8 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 2
  4916 ;; This function calls:
  4917 ;;		_putch
  4918 ;; This function is called by:
  4919 ;;		_vfpfcnvrt
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text18
  4924   00226A                     __ptext18:
  4925                           	callstack 0
  4926   00226A                     _fputc:
  4927                           	callstack 22
  4928   00226A  5005               	movf	fputc@fp^0,w,c
  4929   00226C  B4D8               	btfsc	status,2,c
  4930   00226E  EF3B  F011         	goto	u5671
  4931   002272  EF3D  F011         	goto	u5670
  4932   002276                     u5671:
  4933   002276  EF45  F011         	goto	l5166
  4934   00227A                     u5670:
  4935   00227A  5005               	movf	fputc@fp^0,w,c
  4936   00227C  A4D8               	btfss	status,2,c
  4937   00227E  EF43  F011         	goto	u5681
  4938   002282  EF45  F011         	goto	u5680
  4939   002286                     u5681:
  4940   002286  EF4A  F011         	goto	l5168
  4941   00228A                     u5680:
  4942   00228A                     l5166:
  4943   00228A  5003               	movf	fputc@c^0,w,c
  4944   00228C  ECF8  F016         	call	_putch
  4945   002290  EF91  F011         	goto	l1226
  4946   002294                     l5168:
  4947   002294  5005               	movf	fputc@fp^0,w,c
  4948   002296  6ED9               	movwf	fsr2l,c
  4949   002298  6ADA               	clrf	fsr2h,c
  4950   00229A  0E09               	movlw	9
  4951   00229C  26D9               	addwf	fsr2l,f,c
  4952   00229E  50DE               	movf	postinc2,w,c
  4953   0022A0  10DE               	iorwf	postinc2,w,c
  4954   0022A2  B4D8               	btfsc	status,2,c
  4955   0022A4  EF56  F011         	goto	u5691
  4956   0022A8  EF58  F011         	goto	u5690
  4957   0022AC                     u5691:
  4958   0022AC  EF71  F011         	goto	l5172
  4959   0022B0                     u5690:
  4960   0022B0  5005               	movf	fputc@fp^0,w,c
  4961   0022B2  6ED9               	movwf	fsr2l,c
  4962   0022B4  6ADA               	clrf	fsr2h,c
  4963   0022B6  0E09               	movlw	9
  4964   0022B8  26D9               	addwf	fsr2l,f,c
  4965   0022BA  5005               	movf	fputc@fp^0,w,c
  4966   0022BC  6EE1               	movwf	fsr1l,c
  4967   0022BE  6AE2               	clrf	fsr1h,c
  4968   0022C0  0E02               	movlw	2
  4969   0022C2  26E1               	addwf	fsr1l,f,c
  4970   0022C4  50DE               	movf	postinc2,w,c
  4971   0022C6  5CE6               	subwf	postinc1,w,c
  4972   0022C8  50E6               	movf	postinc1,w,c
  4973   0022CA  0A80               	xorlw	128
  4974   0022CC  6E0A               	movwf	(??_fputc+4)^0,c
  4975   0022CE  50DE               	movf	postinc2,w,c
  4976   0022D0  0A80               	xorlw	128
  4977   0022D2  580A               	subwfb	(??_fputc+4)^0,w,c
  4978   0022D4  B0D8               	btfsc	status,0,c
  4979   0022D6  EF6F  F011         	goto	u5701
  4980   0022DA  EF71  F011         	goto	u5700
  4981   0022DE                     u5701:
  4982   0022DE  EF91  F011         	goto	l1226
  4983   0022E2                     u5700:
  4984   0022E2                     l5172:
  4985   0022E2  5005               	movf	fputc@fp^0,w,c
  4986   0022E4  6ED9               	movwf	fsr2l,c
  4987   0022E6  6ADA               	clrf	fsr2h,c
  4988   0022E8  0E02               	movlw	2
  4989   0022EA  26D9               	addwf	fsr2l,f,c
  4990   0022EC  CFDE F006          	movff	postinc2,??_fputc
  4991   0022F0  CFDD F007          	movff	postdec2,??_fputc+1
  4992   0022F4  5005               	movf	fputc@fp^0,w,c
  4993   0022F6  6ED9               	movwf	fsr2l,c
  4994   0022F8  6ADA               	clrf	fsr2h,c
  4995   0022FA  CFDE F008          	movff	postinc2,??_fputc+2
  4996   0022FE  CFDD F009          	movff	postdec2,??_fputc+3
  4997   002302  5006               	movf	??_fputc^0,w,c
  4998   002304  2408               	addwf	(??_fputc+2)^0,w,c
  4999   002306  6ED9               	movwf	fsr2l,c
  5000   002308  5007               	movf	(??_fputc+1)^0,w,c
  5001   00230A  2009               	addwfc	(??_fputc+3)^0,w,c
  5002   00230C  6EDA               	movwf	fsr2h,c
  5003   00230E  C003  FFDF         	movff	fputc@c,indf2
  5004   002312  5005               	movf	fputc@fp^0,w,c
  5005   002314  6ED9               	movwf	fsr2l,c
  5006   002316  6ADA               	clrf	fsr2h,c
  5007   002318  0E02               	movlw	2
  5008   00231A  26D9               	addwf	fsr2l,f,c
  5009   00231C  2ADE               	incf	postinc2,f,c
  5010   00231E  0E00               	movlw	0
  5011   002320  22DD               	addwfc	postdec2,f,c
  5012   002322                     l1226:
  5013   002322  0012               	return		;funcret
  5014   002324                     __end_of_fputc:
  5015                           	callstack 0
  5016                           
  5017 ;; *************** function _putch *****************
  5018 ;; Defined at:
  5019 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  c               1    wreg     unsigned char 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  c               1    0[COMRAM] unsigned char 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;Total ram usage:        0 bytes
  5038 ;; Hardware stack levels used: 1
  5039 ;; Hardware stack levels required when called: 1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_fputc
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text19
  5048   002DF0                     __ptext19:
  5049                           	callstack 0
  5050   002DF0                     _putch:
  5051                           	callstack 22
  5052   002DF0  0012               	return		;funcret
  5053   002DF2                     __end_of_putch:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function ___lwmod *****************
  5057 ;; Defined at:
  5058 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  dividend        2    2[COMRAM] unsigned int 
  5061 ;;  divisor         2    4[COMRAM] unsigned int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  counter         1    6[COMRAM] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  2    2[COMRAM] unsigned int 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;Total ram usage:        5 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 1
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_welcome_splash
  5084 ;;		_vfpfcnvrt
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text20
  5089   002956                     __ptext20:
  5090                           	callstack 0
  5091   002956                     ___lwmod:
  5092                           	callstack 28
  5093   002956  5005               	movf	___lwmod@divisor^0,w,c
  5094   002958  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  5095   00295A  B4D8               	btfsc	status,2,c
  5096   00295C  EFB2  F014         	goto	u5641
  5097   002960  EFB4  F014         	goto	u5640
  5098   002964                     u5641:
  5099   002964  EFD8  F014         	goto	l978
  5100   002968                     u5640:
  5101   002968  0E01               	movlw	1
  5102   00296A  6E07               	movwf	___lwmod@counter^0,c
  5103   00296C  EFBC  F014         	goto	l5152
  5104   002970                     l5150:
  5105   002970  90D8               	bcf	status,0,c
  5106   002972  3605               	rlcf	___lwmod@divisor^0,f,c
  5107   002974  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  5108   002976  2A07               	incf	___lwmod@counter^0,f,c
  5109   002978                     l5152:
  5110   002978  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  5111   00297A  EFC1  F014         	goto	u5651
  5112   00297E  EFC3  F014         	goto	u5650
  5113   002982                     u5651:
  5114   002982  EFB8  F014         	goto	l5150
  5115   002986                     u5650:
  5116   002986                     l5154:
  5117   002986  5005               	movf	___lwmod@divisor^0,w,c
  5118   002988  5C03               	subwf	___lwmod@dividend^0,w,c
  5119   00298A  5006               	movf	(___lwmod@divisor+1)^0,w,c
  5120   00298C  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  5121   00298E  A0D8               	btfss	status,0,c
  5122   002990  EFCC  F014         	goto	u5661
  5123   002994  EFCE  F014         	goto	u5660
  5124   002998                     u5661:
  5125   002998  EFD2  F014         	goto	l5158
  5126   00299C                     u5660:
  5127   00299C  5005               	movf	___lwmod@divisor^0,w,c
  5128   00299E  5E03               	subwf	___lwmod@dividend^0,f,c
  5129   0029A0  5006               	movf	(___lwmod@divisor+1)^0,w,c
  5130   0029A2  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  5131   0029A4                     l5158:
  5132   0029A4  90D8               	bcf	status,0,c
  5133   0029A6  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  5134   0029A8  3205               	rrcf	___lwmod@divisor^0,f,c
  5135   0029AA  2E07               	decfsz	___lwmod@counter^0,f,c
  5136   0029AC  EFC3  F014         	goto	l5154
  5137   0029B0                     l978:
  5138   0029B0  C003  F003         	movff	___lwmod@dividend,?___lwmod
  5139   0029B4  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  5140   0029B8  0012               	return		;funcret
  5141   0029BA                     __end_of___lwmod:
  5142                           	callstack 0
  5143                           
  5144 ;; *************** function ___lwdiv *****************
  5145 ;; Defined at:
  5146 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  dividend        2    2[COMRAM] unsigned int 
  5149 ;;  divisor         2    4[COMRAM] unsigned int 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  quotient        2    7[COMRAM] unsigned int 
  5152 ;;  counter         1    6[COMRAM] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  2    2[COMRAM] unsigned int 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;Total ram usage:        7 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_welcome_splash
  5173 ;;		_vfpfcnvrt
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text21
  5178   0027A8                     __ptext21:
  5179                           	callstack 0
  5180   0027A8                     ___lwdiv:
  5181                           	callstack 28
  5182   0027A8  0E00               	movlw	0
  5183   0027AA  6E09               	movwf	(___lwdiv@quotient+1)^0,c
  5184   0027AC  0E00               	movlw	0
  5185   0027AE  6E08               	movwf	___lwdiv@quotient^0,c
  5186   0027B0  5005               	movf	___lwdiv@divisor^0,w,c
  5187   0027B2  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5188   0027B4  B4D8               	btfsc	status,2,c
  5189   0027B6  EFDF  F013         	goto	u5611
  5190   0027BA  EFE1  F013         	goto	u5610
  5191   0027BE                     u5611:
  5192   0027BE  EF09  F014         	goto	l968
  5193   0027C2                     u5610:
  5194   0027C2  0E01               	movlw	1
  5195   0027C4  6E07               	movwf	___lwdiv@counter^0,c
  5196   0027C6  EFE9  F013         	goto	l5132
  5197   0027CA                     l5130:
  5198   0027CA  90D8               	bcf	status,0,c
  5199   0027CC  3605               	rlcf	___lwdiv@divisor^0,f,c
  5200   0027CE  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5201   0027D0  2A07               	incf	___lwdiv@counter^0,f,c
  5202   0027D2                     l5132:
  5203   0027D2  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  5204   0027D4  EFEE  F013         	goto	u5621
  5205   0027D8  EFF0  F013         	goto	u5620
  5206   0027DC                     u5621:
  5207   0027DC  EFE5  F013         	goto	l5130
  5208   0027E0                     u5620:
  5209   0027E0                     l5134:
  5210   0027E0  90D8               	bcf	status,0,c
  5211   0027E2  3608               	rlcf	___lwdiv@quotient^0,f,c
  5212   0027E4  3609               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5213   0027E6  5005               	movf	___lwdiv@divisor^0,w,c
  5214   0027E8  5C03               	subwf	___lwdiv@dividend^0,w,c
  5215   0027EA  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  5216   0027EC  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5217   0027EE  A0D8               	btfss	status,0,c
  5218   0027F0  EFFC  F013         	goto	u5631
  5219   0027F4  EFFE  F013         	goto	u5630
  5220   0027F8                     u5631:
  5221   0027F8  EF03  F014         	goto	l5142
  5222   0027FC                     u5630:
  5223   0027FC  5005               	movf	___lwdiv@divisor^0,w,c
  5224   0027FE  5E03               	subwf	___lwdiv@dividend^0,f,c
  5225   002800  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  5226   002802  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5227   002804  8008               	bsf	___lwdiv@quotient^0,0,c
  5228   002806                     l5142:
  5229   002806  90D8               	bcf	status,0,c
  5230   002808  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5231   00280A  3205               	rrcf	___lwdiv@divisor^0,f,c
  5232   00280C  2E07               	decfsz	___lwdiv@counter^0,f,c
  5233   00280E  EFF0  F013         	goto	l5134
  5234   002812                     l968:
  5235   002812  C008  F003         	movff	___lwdiv@quotient,?___lwdiv
  5236   002816  C009  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5237   00281A  0012               	return		;funcret
  5238   00281C                     __end_of___lwdiv:
  5239                           	callstack 0
  5240                           
  5241 ;; *************** function _extract_single_pid_byte *****************
  5242 ;; Defined at:
  5243 ;;		line 534 in file "OBCII_PIC18F46K22.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  pid             2   59[BANK0 ] PTR const unsigned char 
  5246 ;;		 -> STR_29(6), 
  5247 ;;  A               1   61[BANK0 ] PTR unsigned char 
  5248 ;;		 -> print_AI_Temp@A(1), 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  a               2   88[COMRAM] unsigned int 
  5251 ;;  ptr             2   86[COMRAM] PTR unsigned char 
  5252 ;;		 -> NULL(0), buffer(256), 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      unsigned char 
  5255 ;; Registers used:
  5256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5262 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;Total ram usage:        7 bytes
  5267 ;; Hardware stack levels used: 1
  5268 ;; Hardware stack levels required when called: 8
  5269 ;; This function calls:
  5270 ;;		_sscanf
  5271 ;;		_strlen
  5272 ;;		_strstr
  5273 ;; This function is called by:
  5274 ;;		_print_AI_Temp
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text22
  5279   002624                     __ptext22:
  5280                           	callstack 0
  5281   002624                     _extract_single_pid_byte:
  5282                           	callstack 19
  5283   002624                     
  5284                           ;OBCII_PIC18F46K22.c: 535:     char* ptr = strstr(buffer, pid);
  5285   002624  0E00               	movlw	low _buffer
  5286   002626  6E0A               	movwf	strstr@h^0,c
  5287   002628  0E02               	movlw	high _buffer
  5288   00262A  6E0B               	movwf	(strstr@h+1)^0,c
  5289   00262C  C09B  F00C         	movff	extract_single_pid_byte@pid,strstr@n
  5290   002630  C09C  F00D         	movff	extract_single_pid_byte@pid+1,strstr@n+1
  5291   002634  ECD5  F010         	call	_strstr	;wreg free
  5292   002638  C00A  F057         	movff	?_strstr,extract_single_pid_byte@ptr
  5293   00263C  C00B  F058         	movff	?_strstr+1,extract_single_pid_byte@ptr+1
  5294   002640                     
  5295                           ;OBCII_PIC18F46K22.c: 536:     if (ptr) {
  5296   002640  5057               	movf	extract_single_pid_byte@ptr^0,w,c
  5297   002642  1058               	iorwf	(extract_single_pid_byte@ptr+1)^0,w,c
  5298   002644  B4D8               	btfsc	status,2,c
  5299   002646  EF27  F013         	goto	u6291
  5300   00264A  EF29  F013         	goto	u6290
  5301   00264E                     u6291:
  5302   00264E  EF55  F013         	goto	l5564
  5303   002652                     u6290:
  5304   002652                     
  5305                           ;OBCII_PIC18F46K22.c: 537:         unsigned int a = 0;
  5306   002652  0E00               	movlw	0
  5307   002654  6E5A               	movwf	(extract_single_pid_byte@a+1)^0,c
  5308   002656  0E00               	movlw	0
  5309   002658  6E59               	movwf	extract_single_pid_byte@a^0,c
  5310   00265A                     
  5311                           ;OBCII_PIC18F46K22.c: 538:         if (sscanf(ptr + strlen(pid), "%x", &a) == 1) {
  5312   00265A  C09B  F003         	movff	extract_single_pid_byte@pid,strlen@s
  5313   00265E  C09C  F004         	movff	extract_single_pid_byte@pid+1,strlen@s+1
  5314   002662  ECED  F015         	call	_strlen	;wreg free
  5315   002666  5003               	movf	?_strlen^0,w,c
  5316   002668  2457               	addwf	extract_single_pid_byte@ptr^0,w,c
  5317   00266A  0100               	movlb	0	; () banked
  5318   00266C  6F85               	movwf	sscanf@s& (0+255),b
  5319   00266E  5004               	movf	(?_strlen+1)^0,w,c
  5320   002670  2058               	addwfc	(extract_single_pid_byte@ptr+1)^0,w,c
  5321   002672  6F86               	movwf	(sscanf@s+1)& (0+255),b
  5322   002674  0ED4               	movlw	low (STR_15+3)
  5323   002676  6F87               	movwf	sscanf@fmt& (0+255),b
  5324   002678  0EFF               	movlw	high (STR_15+3)
  5325   00267A  6F88               	movwf	(sscanf@fmt+1)& (0+255),b
  5326   00267C  0E59               	movlw	low extract_single_pid_byte@a
  5327   00267E  6F89               	movwf	(?_sscanf+4)& (0+255),b
  5328   002680  6B8A               	clrf	(?_sscanf+5)& (0+255),b
  5329   002682  EC8D  F015         	call	_sscanf	;wreg free
  5330   002686  0100               	movlb	0	; () banked
  5331   002688  0585               	decf	?_sscanf& (0+255),w,b
  5332   00268A  1186               	iorwf	(?_sscanf+1)& (0+255),w,b
  5333   00268C  A4D8               	btfss	status,2,c
  5334   00268E  EF4B  F013         	goto	u6301
  5335   002692  EF4D  F013         	goto	u6300
  5336   002696                     u6301:
  5337   002696  EF55  F013         	goto	l5564
  5338   00269A                     u6300:
  5339   00269A                     
  5340                           ; BSR set to: 0
  5341                           ;OBCII_PIC18F46K22.c: 539:             *A = (uint8_t)a;
  5342   00269A  519D               	movf	extract_single_pid_byte@A& (0+255),w,b
  5343   00269C  6ED9               	movwf	fsr2l,c
  5344   00269E  6ADA               	clrf	fsr2h,c
  5345   0026A0  C059  FFDF         	movff	extract_single_pid_byte@a,indf2
  5346   0026A4                     
  5347                           ; BSR set to: 0
  5348                           ;OBCII_PIC18F46K22.c: 540:             return 1;
  5349   0026A4  0E01               	movlw	1
  5350   0026A6  EF56  F013         	goto	l290
  5351   0026AA                     l5564:
  5352                           
  5353                           ;OBCII_PIC18F46K22.c: 543:     return 0;
  5354   0026AA  0E00               	movlw	0
  5355   0026AC                     l290:
  5356   0026AC  0012               	return		;funcret
  5357   0026AE                     __end_of_extract_single_pid_byte:
  5358                           	callstack 0
  5359                           
  5360 ;; *************** function _strstr *****************
  5361 ;; Defined at:
  5362 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  h               2    9[COMRAM] PTR const unsigned char 
  5365 ;;		 -> NULL(0), buffer(256), 
  5366 ;;  n               2   11[COMRAM] PTR const unsigned char 
  5367 ;;		 -> STR_29(6), STR_18(6), 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  nl              2   13[COMRAM] unsigned int 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  2    9[COMRAM] PTR unsigned char 
  5372 ;; Registers used:
  5373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;Total ram usage:        6 bytes
  5384 ;; Hardware stack levels used: 1
  5385 ;; Hardware stack levels required when called: 2
  5386 ;; This function calls:
  5387 ;;		_strchr
  5388 ;;		_strlen
  5389 ;;		_strncmp
  5390 ;; This function is called by:
  5391 ;;		_extract_two_pid_bytes
  5392 ;;		_extract_single_pid_byte
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text23
  5397   0021AA                     __ptext23:
  5398                           	callstack 0
  5399   0021AA                     _strstr:
  5400                           	callstack 24
  5401   0021AA  500C               	movf	strstr@n^0,w,c
  5402   0021AC  100D               	iorwf	(strstr@n+1)^0,w,c
  5403   0021AE  B4D8               	btfsc	status,2,c
  5404   0021B0  EFDC  F010         	goto	u6201
  5405   0021B4  EFDE  F010         	goto	u6200
  5406   0021B8                     u6201:
  5407   0021B8  EF30  F011         	goto	l5458
  5408   0021BC                     u6200:
  5409   0021BC  C00C  F003         	movff	strstr@n,strlen@s
  5410   0021C0  C00D  F004         	movff	strstr@n+1,strlen@s+1
  5411   0021C4  ECED  F015         	call	_strlen	;wreg free
  5412   0021C8  C003  F00E         	movff	?_strlen,strstr@nl
  5413   0021CC  C004  F00F         	movff	?_strlen+1,strstr@nl+1
  5414   0021D0  EF1B  F011         	goto	l5454
  5415   0021D4                     l5446:
  5416   0021D4  C00A  F003         	movff	strstr@h,strncmp@l
  5417   0021D8  C00B  F004         	movff	strstr@h+1,strncmp@l+1
  5418   0021DC  C00C  F005         	movff	strstr@n,strncmp@r
  5419   0021E0  C00D  F006         	movff	strstr@n+1,strncmp@r+1
  5420   0021E4  C00E  F007         	movff	strstr@nl,strncmp@n
  5421   0021E8  C00F  F008         	movff	strstr@nl+1,strncmp@n+1
  5422   0021EC  ECAF  F00F         	call	_strncmp	;wreg free
  5423   0021F0  5003               	movf	?_strncmp^0,w,c
  5424   0021F2  1004               	iorwf	(?_strncmp+1)^0,w,c
  5425   0021F4  A4D8               	btfss	status,2,c
  5426   0021F6  EFFF  F010         	goto	u6211
  5427   0021FA  EF01  F011         	goto	u6210
  5428   0021FE                     u6211:
  5429   0021FE  EF07  F011         	goto	l5452
  5430   002202                     u6210:
  5431   002202  C00A  F00A         	movff	strstr@h,?_strstr
  5432   002206  C00B  F00B         	movff	strstr@h+1,?_strstr+1
  5433   00220A  EF34  F011         	goto	l1458
  5434   00220E                     l5452:
  5435   00220E  0E01               	movlw	1
  5436   002210  240A               	addwf	strstr@h^0,w,c
  5437   002212  6E03               	movwf	strchr@s^0,c
  5438   002214  0E00               	movlw	0
  5439   002216  200B               	addwfc	(strstr@h+1)^0,w,c
  5440   002218  6E04               	movwf	(strchr@s+1)^0,c
  5441   00221A  C00C  FFF6         	movff	strstr@n,tblptrl
  5442   00221E  C00D  FFF7         	movff	strstr@n+1,tblptrh
  5443   002222                     	if	0	;tblptru may be non-zero
  5444   002222                     	endif
  5445   002222                     	if	0	;tblptru may be non-zero
  5446   002222                     	endif
  5447   002222  0008               	tblrd		*
  5448   002224  50F5               	movf	tablat,w,c
  5449   002226  6E05               	movwf	strchr@c^0,c
  5450   002228  6A06               	clrf	(strchr@c+1)^0,c
  5451   00222A  EC67  F015         	call	_strchr	;wreg free
  5452   00222E  C003  F00A         	movff	?_strchr,strstr@h
  5453   002232  C004  F00B         	movff	?_strchr+1,strstr@h+1
  5454   002236                     l5454:
  5455   002236  500A               	movf	strstr@h^0,w,c
  5456   002238  100B               	iorwf	(strstr@h+1)^0,w,c
  5457   00223A  B4D8               	btfsc	status,2,c
  5458   00223C  EF22  F011         	goto	u6221
  5459   002240  EF24  F011         	goto	u6220
  5460   002244                     u6221:
  5461   002244  EF30  F011         	goto	l5458
  5462   002248                     u6220:
  5463   002248  C00A  FFD9         	movff	strstr@h,fsr2l
  5464   00224C  C00B  FFDA         	movff	strstr@h+1,fsr2h
  5465   002250  50DF               	movf	indf2,w,c
  5466   002252  A4D8               	btfss	status,2,c
  5467   002254  EF2E  F011         	goto	u6231
  5468   002258  EF30  F011         	goto	u6230
  5469   00225C                     u6231:
  5470   00225C  EFEA  F010         	goto	l5446
  5471   002260                     u6230:
  5472   002260                     l5458:
  5473   002260  0E00               	movlw	0
  5474   002262  6E0A               	movwf	?_strstr^0,c
  5475   002264  0E00               	movlw	0
  5476   002266  6E0B               	movwf	(?_strstr+1)^0,c
  5477   002268                     l1458:
  5478   002268  0012               	return		;funcret
  5479   00226A                     __end_of_strstr:
  5480                           	callstack 0
  5481                           
  5482 ;; *************** function _strncmp *****************
  5483 ;; Defined at:
  5484 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  l               2    2[COMRAM] PTR const unsigned char 
  5487 ;;		 -> NULL(0), buffer(256), 
  5488 ;;  r               2    4[COMRAM] PTR const unsigned char 
  5489 ;;		 -> STR_29(6), STR_18(6), 
  5490 ;;  n               2    6[COMRAM] unsigned int 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  2    2[COMRAM] int 
  5495 ;; Registers used:
  5496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5502 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;Total ram usage:        7 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; Hardware stack levels required when called: 1
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_strstr
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text24
  5517   001F5E                     __ptext24:
  5518                           	callstack 0
  5519   001F5E                     _strncmp:
  5520                           	callstack 24
  5521   001F5E  0607               	decf	strncmp@n^0,f,c
  5522   001F60  A0D8               	btfss	status,0,c
  5523   001F62  0608               	decf	(strncmp@n+1)^0,f,c
  5524   001F64  2807               	incf	strncmp@n^0,w,c
  5525   001F66  E106               	bnz	u6071
  5526   001F68  2808               	incf	(strncmp@n+1)^0,w,c
  5527   001F6A  A4D8               	btfss	status,2,c
  5528   001F6C  EFBA  F00F         	goto	u6071
  5529   001F70  EFBC  F00F         	goto	u6070
  5530   001F74                     u6071:
  5531   001F74  EFC9  F00F         	goto	l5406
  5532   001F78                     u6070:
  5533   001F78  0E00               	movlw	0
  5534   001F7A  6E04               	movwf	(?_strncmp+1)^0,c
  5535   001F7C  0E00               	movlw	0
  5536   001F7E  6E03               	movwf	?_strncmp^0,c
  5537   001F80  EF11  F010         	goto	l1465
  5538   001F84                     l5404:
  5539   001F84  4A03               	infsnz	strncmp@l^0,f,c
  5540   001F86  2A04               	incf	(strncmp@l+1)^0,f,c
  5541   001F88  4A05               	infsnz	strncmp@r^0,f,c
  5542   001F8A  2A06               	incf	(strncmp@r+1)^0,f,c
  5543   001F8C  0607               	decf	strncmp@n^0,f,c
  5544   001F8E  A0D8               	btfss	status,0,c
  5545   001F90  0608               	decf	(strncmp@n+1)^0,f,c
  5546   001F92                     l5406:
  5547   001F92  C003  FFD9         	movff	strncmp@l,fsr2l
  5548   001F96  C004  FFDA         	movff	strncmp@l+1,fsr2h
  5549   001F9A  50DF               	movf	indf2,w,c
  5550   001F9C  B4D8               	btfsc	status,2,c
  5551   001F9E  EFD3  F00F         	goto	u6081
  5552   001FA2  EFD5  F00F         	goto	u6080
  5553   001FA6                     u6081:
  5554   001FA6  EF00  F010         	goto	l5414
  5555   001FAA                     u6080:
  5556   001FAA  C005  FFF6         	movff	strncmp@r,tblptrl
  5557   001FAE  C006  FFF7         	movff	strncmp@r+1,tblptrh
  5558   001FB2                     	if	0	;tblptru may be non-zero
  5559   001FB2                     	endif
  5560   001FB2                     	if	0	;tblptru may be non-zero
  5561   001FB2                     	endif
  5562   001FB2  0008               	tblrd		*
  5563   001FB4  50F5               	movf	tablat,w,c
  5564   001FB6  0900               	iorlw	0
  5565   001FB8  B4D8               	btfsc	status,2,c
  5566   001FBA  EFE1  F00F         	goto	u6091
  5567   001FBE  EFE3  F00F         	goto	u6090
  5568   001FC2                     u6091:
  5569   001FC2  EF00  F010         	goto	l5414
  5570   001FC6                     u6090:
  5571   001FC6  5007               	movf	strncmp@n^0,w,c
  5572   001FC8  1008               	iorwf	(strncmp@n+1)^0,w,c
  5573   001FCA  B4D8               	btfsc	status,2,c
  5574   001FCC  EFEA  F00F         	goto	u6101
  5575   001FD0  EFEC  F00F         	goto	u6100
  5576   001FD4                     u6101:
  5577   001FD4  EF00  F010         	goto	l5414
  5578   001FD8                     u6100:
  5579   001FD8  C003  FFD9         	movff	strncmp@l,fsr2l
  5580   001FDC  C004  FFDA         	movff	strncmp@l+1,fsr2h
  5581   001FE0  50DF               	movf	indf2,w,c
  5582   001FE2  6E09               	movwf	??_strncmp^0,c
  5583   001FE4  C005  FFF6         	movff	strncmp@r,tblptrl
  5584   001FE8  C006  FFF7         	movff	strncmp@r+1,tblptrh
  5585   001FEC                     	if	0	;tblptru may be non-zero
  5586   001FEC                     	endif
  5587   001FEC                     	if	0	;tblptru may be non-zero
  5588   001FEC                     	endif
  5589   001FEC  0008               	tblrd		*
  5590   001FEE  50F5               	movf	tablat,w,c
  5591   001FF0  1809               	xorwf	??_strncmp^0,w,c
  5592   001FF2  B4D8               	btfsc	status,2,c
  5593   001FF4  EFFE  F00F         	goto	u6111
  5594   001FF8  EF00  F010         	goto	u6110
  5595   001FFC                     u6111:
  5596   001FFC  EFC2  F00F         	goto	l5404
  5597   002000                     u6110:
  5598   002000                     l5414:
  5599   002000  C003  FFD9         	movff	strncmp@l,fsr2l
  5600   002004  C004  FFDA         	movff	strncmp@l+1,fsr2h
  5601   002008  50DF               	movf	indf2,w,c
  5602   00200A  6E09               	movwf	??_strncmp^0,c
  5603   00200C  C005  FFF6         	movff	strncmp@r,tblptrl
  5604   002010  C006  FFF7         	movff	strncmp@r+1,tblptrh
  5605   002014                     	if	0	;tblptru may be non-zero
  5606   002014                     	endif
  5607   002014                     	if	0	;tblptru may be non-zero
  5608   002014                     	endif
  5609   002014  0008               	tblrd		*
  5610   002016  50F5               	movf	tablat,w,c
  5611   002018  5C09               	subwf	??_strncmp^0,w,c
  5612   00201A  6E03               	movwf	?_strncmp^0,c
  5613   00201C  6A04               	clrf	(?_strncmp+1)^0,c
  5614   00201E  A0D8               	btfss	status,0,c
  5615   002020  0604               	decf	(?_strncmp+1)^0,f,c
  5616   002022                     l1465:
  5617   002022  0012               	return		;funcret
  5618   002024                     __end_of_strncmp:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _strlen *****************
  5622 ;; Defined at:
  5623 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5626 ;;		 -> STR_29(6), STR_18(6), 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  a               2    4[COMRAM] PTR const unsigned char 
  5629 ;;		 -> STR_29(6), STR_18(6), 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  2    2[COMRAM] unsigned int 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:        4 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; Hardware stack levels required when called: 1
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_extract_two_pid_bytes
  5650 ;;		_extract_single_pid_byte
  5651 ;;		_strstr
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text25
  5656   002BDA                     __ptext25:
  5657                           	callstack 0
  5658   002BDA                     _strlen:
  5659                           	callstack 24
  5660   002BDA  C003  F005         	movff	strlen@s,strlen@a
  5661   002BDE  C004  F006         	movff	strlen@s+1,strlen@a+1
  5662   002BE2  EFF5  F015         	goto	l5278
  5663   002BE6                     l5276:
  5664   002BE6  4A03               	infsnz	strlen@s^0,f,c
  5665   002BE8  2A04               	incf	(strlen@s+1)^0,f,c
  5666   002BEA                     l5278:
  5667   002BEA  C003  FFF6         	movff	strlen@s,tblptrl
  5668   002BEE  C004  FFF7         	movff	strlen@s+1,tblptrh
  5669   002BF2                     	if	0	;tblptru may be non-zero
  5670   002BF2                     	endif
  5671   002BF2                     	if	0	;tblptru may be non-zero
  5672   002BF2                     	endif
  5673   002BF2  0008               	tblrd		*
  5674   002BF4  50F5               	movf	tablat,w,c
  5675   002BF6  0900               	iorlw	0
  5676   002BF8  A4D8               	btfss	status,2,c
  5677   002BFA  EF01  F016         	goto	u5891
  5678   002BFE  EF03  F016         	goto	u5890
  5679   002C02                     u5891:
  5680   002C02  EFF3  F015         	goto	l5276
  5681   002C06                     u5890:
  5682   002C06  5005               	movf	strlen@a^0,w,c
  5683   002C08  5C03               	subwf	strlen@s^0,w,c
  5684   002C0A  6E03               	movwf	?_strlen^0,c
  5685   002C0C  5006               	movf	(strlen@a+1)^0,w,c
  5686   002C0E  5804               	subwfb	(strlen@s+1)^0,w,c
  5687   002C10  6E04               	movwf	(?_strlen+1)^0,c
  5688   002C12  0012               	return		;funcret
  5689   002C14                     __end_of_strlen:
  5690                           	callstack 0
  5691                           
  5692 ;; *************** function _strchr *****************
  5693 ;; Defined at:
  5694 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5697 ;;		 -> NULL(0), buffer(256), 
  5698 ;;  c               2    4[COMRAM] int 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  2    2[COMRAM] PTR unsigned char 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;Total ram usage:        5 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 1
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_print_Vbatt
  5721 ;;		_strstr
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text26
  5726   002ACE                     __ptext26:
  5727                           	callstack 0
  5728   002ACE                     _strchr:
  5729                           	callstack 26
  5730   002ACE                     l1436:
  5731   002ACE  C003  FFD9         	movff	strchr@s,fsr2l
  5732   002AD2  C004  FFDA         	movff	strchr@s+1,fsr2h
  5733   002AD6  5005               	movf	strchr@c^0,w,c
  5734   002AD8  18DE               	xorwf	postinc2,w,c
  5735   002ADA  A4D8               	btfss	status,2,c
  5736   002ADC  EF72  F015         	goto	u5901
  5737   002AE0  EF74  F015         	goto	u5900
  5738   002AE4                     u5901:
  5739   002AE4  EF7A  F015         	goto	l5290
  5740   002AE8                     u5900:
  5741   002AE8  C003  F003         	movff	strchr@s,?_strchr
  5742   002AEC  C004  F004         	movff	strchr@s+1,?_strchr+1
  5743   002AF0  EF8C  F015         	goto	l1438
  5744   002AF4                     l5290:
  5745   002AF4  C003  FFD9         	movff	strchr@s,fsr2l
  5746   002AF8  C004  FFDA         	movff	strchr@s+1,fsr2h
  5747   002AFC  4A03               	infsnz	strchr@s^0,f,c
  5748   002AFE  2A04               	incf	(strchr@s+1)^0,f,c
  5749   002B00  50DF               	movf	indf2,w,c
  5750   002B02  A4D8               	btfss	status,2,c
  5751   002B04  EF86  F015         	goto	u5911
  5752   002B08  EF88  F015         	goto	u5910
  5753   002B0C                     u5911:
  5754   002B0C  EF67  F015         	goto	l1436
  5755   002B10                     u5910:
  5756   002B10  0E00               	movlw	0
  5757   002B12  6E03               	movwf	?_strchr^0,c
  5758   002B14  0E00               	movlw	0
  5759   002B16  6E04               	movwf	(?_strchr+1)^0,c
  5760   002B18                     l1438:
  5761   002B18  0012               	return		;funcret
  5762   002B1A                     __end_of_strchr:
  5763                           	callstack 0
  5764                           
  5765 ;; *************** function _sscanf *****************
  5766 ;; Defined at:
  5767 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sscanf.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  5770 ;;		 -> NULL(0), buffer(256), 
  5771 ;;  fmt             2   39[BANK0 ] PTR const unsigned char 
  5772 ;;		 -> STR_26(3), STR_15(6), 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  f              11   48[BANK0 ] struct _IO_FILE
  5775 ;;  ret             2   45[BANK0 ] int 
  5776 ;;  ap              1   47[BANK0 ] PTR void [1]
  5777 ;;		 -> ?_sscanf(2), 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  2   37[BANK0 ] int 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5787 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;Total ram usage:       22 bytes
  5792 ;; Hardware stack levels used: 1
  5793 ;; Hardware stack levels required when called: 7
  5794 ;; This function calls:
  5795 ;;		_vfscanf
  5796 ;; This function is called by:
  5797 ;;		_extract_two_pid_bytes
  5798 ;;		_extract_single_pid_byte
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text27
  5803   002B1A                     __ptext27:
  5804                           	callstack 0
  5805   002B1A                     _sscanf:
  5806                           	callstack 19
  5807   002B1A  0E89               	movlw	low (?_sscanf+4)
  5808   002B1C  0100               	movlb	0	; () banked
  5809   002B1E  6F8F               	movwf	sscanf@ap& (0+255),b
  5810   002B20  C085  F090         	movff	sscanf@s,sscanf@f
  5811   002B24  C086  F091         	movff	sscanf@s+1,sscanf@f+1
  5812   002B28                     
  5813                           ; BSR set to: 0
  5814   002B28  0E00               	movlw	0
  5815   002B2A  6F93               	movwf	(sscanf@f+3)& (0+255),b
  5816   002B2C  0E00               	movlw	0
  5817   002B2E  6F92               	movwf	(sscanf@f+2)& (0+255),b
  5818   002B30                     
  5819                           ; BSR set to: 0
  5820   002B30  0E00               	movlw	0
  5821   002B32  6F98               	movwf	(sscanf@f+8)& (0+255),b
  5822   002B34  0E00               	movlw	0
  5823   002B36  6F97               	movwf	(sscanf@f+7)& (0+255),b
  5824   002B38                     
  5825                           ; BSR set to: 0
  5826   002B38  0E90               	movlw	low sscanf@f
  5827   002B3A  6F7B               	movwf	vfscanf@fp& (0+255),b
  5828   002B3C  C087  F07C         	movff	sscanf@fmt,vfscanf@fmt
  5829   002B40  C088  F07D         	movff	sscanf@fmt+1,vfscanf@fmt+1
  5830   002B44  0E8F               	movlw	low sscanf@ap
  5831   002B46  6F7E               	movwf	vfscanf@ap& (0+255),b
  5832   002B48  EC12  F010         	call	_vfscanf	;wreg free
  5833   002B4C  C07B  F08D         	movff	?_vfscanf,sscanf@ret
  5834   002B50  C07C  F08E         	movff	?_vfscanf+1,sscanf@ret+1
  5835   002B54  C08D  F085         	movff	sscanf@ret,?_sscanf
  5836   002B58  C08E  F086         	movff	sscanf@ret+1,?_sscanf+1
  5837   002B5C  0012               	return		;funcret
  5838   002B5E                     __end_of_sscanf:
  5839                           	callstack 0
  5840                           
  5841 ;; *************** function _vfscanf *****************
  5842 ;; Defined at:
  5843 ;;		line 1497 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  5846 ;;		 -> sscanf@f(11), 
  5847 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  5848 ;;		 -> STR_26(3), STR_15(6), 
  5849 ;;  ap              1   30[BANK0 ] PTR PTR void 
  5850 ;;		 -> sscanf@ap(1), 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  cfmt            2   35[BANK0 ] PTR unsigned char 
  5853 ;;		 -> STR_26(3), STR_15(6), 
  5854 ;;  n               2   33[BANK0 ] int 
  5855 ;;  saved_errno     2   31[BANK0 ] int 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  2   27[BANK0 ] int 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5865 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;Total ram usage:       10 bytes
  5870 ;; Hardware stack levels used: 1
  5871 ;; Hardware stack levels required when called: 6
  5872 ;; This function calls:
  5873 ;;		_vfsfcnvrt
  5874 ;; This function is called by:
  5875 ;;		_sscanf
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text28
  5880   002024                     __ptext28:
  5881                           	callstack 0
  5882   002024                     _vfscanf:
  5883                           	callstack 19
  5884   002024                     
  5885                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1497: int vfscanf
      +                          (FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doscan.c: 1498: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doscan.c: 1499:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doscan.c: 1500:     int n, saved_errno;;C:\Program Files\Microchip\xc8\v3.00\pic\s
      +                          ources\c99\common\doscan.c: 1502:     cfmt = (char *)fmt;
  5886   002024  C07C  F083         	movff	vfscanf@fmt,vfscanf@cfmt
  5887   002028  C07D  F084         	movff	vfscanf@fmt+1,vfscanf@cfmt+1
  5888   00202C                     
  5889                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1503:     ncnv = 
      +                          nmatch = 0;
  5890   00202C  0E00               	movlw	0
  5891   00202E  0100               	movlb	0	; () banked
  5892   002030  6FB1               	movwf	(_nmatch+1)& (0+255),b
  5893   002032  0E00               	movlw	0
  5894   002034  6FB0               	movwf	_nmatch& (0+255),b
  5895   002036  C0B0  F0B2         	movff	_nmatch,_ncnv
  5896   00203A  C0B1  F0B3         	movff	_nmatch+1,_ncnv+1
  5897   00203E                     
  5898                           ; BSR set to: 0
  5899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1504:  saved_errn
      +                          o = errno;
  5900   00203E  C0B6  F07F         	movff	_errno,vfscanf@saved_errno
  5901   002042  C0B7  F080         	movff	_errno+1,vfscanf@saved_errno+1
  5902                           
  5903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1505:     while (
      +                          *cfmt) {
  5904   002046  EF44  F010         	goto	l5390
  5905   00204A                     l5380:
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1506:   errno = 0
      +                          ;
  5909   00204A  0E00               	movlw	0
  5910   00204C  6FB7               	movwf	(_errno+1)& (0+255),b
  5911   00204E  0E00               	movlw	0
  5912   002050  6FB6               	movwf	_errno& (0+255),b
  5913   002052                     
  5914                           ; BSR set to: 0
  5915                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1507:         n =
      +                           vfsfcnvrt(fp, &cfmt, ap);
  5916   002052  C07B  F06A         	movff	vfscanf@fp,vfsfcnvrt@fp
  5917   002056  0E83               	movlw	low vfscanf@cfmt
  5918   002058  6F6B               	movwf	vfsfcnvrt@fmt& (0+255),b
  5919   00205A  C07E  F06C         	movff	vfscanf@ap,vfsfcnvrt@ap
  5920   00205E  6B6D               	clrf	(vfsfcnvrt@ap+1)& (0+255),b
  5921   002060  ECDA  F004         	call	_vfsfcnvrt	;wreg free
  5922   002064  C06A  F081         	movff	?_vfsfcnvrt,vfscanf@n
  5923   002068  C06B  F082         	movff	?_vfsfcnvrt+1,vfscanf@n+1
  5924   00206C                     
  5925                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1508:         if 
      +                          (n < 0) {
  5926   00206C  0100               	movlb	0	; () banked
  5927   00206E  BF82               	btfsc	(vfscanf@n+1)& (0+255),7,b
  5928   002070  EF3E  F010         	goto	u6030
  5929   002074  EF3C  F010         	goto	u6031
  5930   002078                     u6031:
  5931   002078  EF40  F010         	goto	l5388
  5932   00207C                     u6030:
  5933   00207C  EF52  F010         	goto	l1334
  5934   002080                     l5388:
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1511:         ncn
      +                          v += n;
  5938   002080  5181               	movf	vfscanf@n& (0+255),w,b
  5939   002082  27B2               	addwf	_ncnv& (0+255),f,b
  5940   002084  5182               	movf	(vfscanf@n+1)& (0+255),w,b
  5941   002086  23B3               	addwfc	(_ncnv+1)& (0+255),f,b
  5942   002088                     l5390:
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1505:     while (
      +                          *cfmt) {
  5946   002088  C083  FFF6         	movff	vfscanf@cfmt,tblptrl
  5947   00208C  C084  FFF7         	movff	vfscanf@cfmt+1,tblptrh
  5948   002090                     	if	0	;tblptru may be non-zero
  5949   002090                     	endif
  5950   002090                     	if	0	;tblptru may be non-zero
  5951   002090                     	endif
  5952   002090  0008               	tblrd		*
  5953   002092  50F5               	movf	tablat,w,c
  5954   002094  0900               	iorlw	0
  5955   002096  A4D8               	btfss	status,2,c
  5956   002098  EF50  F010         	goto	u6041
  5957   00209C  EF52  F010         	goto	u6040
  5958   0020A0                     u6041:
  5959   0020A0  EF25  F010         	goto	l5380
  5960   0020A4                     u6040:
  5961   0020A4                     l1334:
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1513:  errno = sa
      +                          ved_errno;
  5965   0020A4  C07F  F0B6         	movff	vfscanf@saved_errno,_errno
  5966   0020A8  C080  F0B7         	movff	vfscanf@saved_errno+1,_errno+1
  5967   0020AC                     
  5968                           ; BSR set to: 0
  5969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1514:     if (n =
      +                          = (-1) && ncnv == 0) {
  5970   0020AC  2981               	incf	vfscanf@n& (0+255),w,b
  5971   0020AE  E106               	bnz	u6051
  5972   0020B0  2982               	incf	(vfscanf@n+1)& (0+255),w,b
  5973   0020B2  A4D8               	btfss	status,2,c
  5974   0020B4  EF5E  F010         	goto	u6051
  5975   0020B8  EF60  F010         	goto	u6050
  5976   0020BC                     u6051:
  5977   0020BC  EF6F  F010         	goto	l1335
  5978   0020C0                     u6050:
  5979   0020C0                     
  5980                           ; BSR set to: 0
  5981   0020C0  51B2               	movf	_ncnv& (0+255),w,b
  5982   0020C2  11B3               	iorwf	(_ncnv+1)& (0+255),w,b
  5983   0020C4  A4D8               	btfss	status,2,c
  5984   0020C6  EF67  F010         	goto	u6061
  5985   0020CA  EF69  F010         	goto	u6060
  5986   0020CE                     u6061:
  5987   0020CE  EF6F  F010         	goto	l1335
  5988   0020D2                     u6060:
  5989   0020D2                     
  5990                           ; BSR set to: 0
  5991                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1515:         ret
      +                          urn n;
  5992   0020D2  C081  F07B         	movff	vfscanf@n,?_vfscanf
  5993   0020D6  C082  F07C         	movff	vfscanf@n+1,?_vfscanf+1
  5994   0020DA  EF73  F010         	goto	l1336
  5995   0020DE                     l1335:
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1518:     return 
      +                          ncnv;
  5999   0020DE  C0B2  F07B         	movff	_ncnv,?_vfscanf
  6000   0020E2  C0B3  F07C         	movff	_ncnv+1,?_vfscanf+1
  6001   0020E6                     l1336:
  6002                           
  6003                           ; BSR set to: 0
  6004   0020E6  0012               	return		;funcret
  6005   0020E8                     __end_of_vfscanf:
  6006                           	callstack 0
  6007                           
  6008 ;; *************** function _vfsfcnvrt *****************
  6009 ;; Defined at:
  6010 ;;		line 672 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  6013 ;;		 -> sscanf@f(11), 
  6014 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  6015 ;;		 -> vfscanf@cfmt(2), 
  6016 ;;  ap              2   12[BANK0 ] PTR PTR void 
  6017 ;;		 -> sscanf@ap(1), 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  llu             8   17[BANK0 ] unsigned long long 
  6020 ;;  ll              8    0        long long 
  6021 ;;  f               4    0        long long 
  6022 ;;  ct              3    0        unsigned char [3]
  6023 ;;  c               2   25[BANK0 ] int 
  6024 ;;  i               2   15[BANK0 ] int 
  6025 ;;  cp              2    0        PTR unsigned char 
  6026 ;;  vp              1   14[BANK0 ] PTR void 
  6027 ;;		 -> ?_sscanf(2), ?_sprintf(2), extract_single_pid_byte@a(2), extract_two_pid_bytes@b(2), 
  6028 ;;		 -> extract_two_pid_bytes@a(2), 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  2   10[BANK0 ] int 
  6031 ;; Registers used:
  6032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6038 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;Total ram usage:       19 bytes
  6043 ;; Hardware stack levels used: 1
  6044 ;; Hardware stack levels required when called: 5
  6045 ;; This function calls:
  6046 ;;		_atox
  6047 ;;		_fgetc
  6048 ;;		_skipws
  6049 ;;		_ungetc
  6050 ;; This function is called by:
  6051 ;;		_vfscanf
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text29
  6056   0009B4                     __ptext29:
  6057                           	callstack 0
  6058   0009B4                     _vfsfcnvrt:
  6059                           	callstack 19
  6060   0009B4                     
  6061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 672: static int v
      +                          fsfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sou
      +                          rces\c99\common\doscan.c: 673: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doscan.c: 674:     char *cp, ct[3];;C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doscan.c: 675:     int c, i;;C:\Program Files\Microchip\xc8\v3.00\pic\sourc
      +                          es\c99\common\doscan.c: 676:     long long ll;;C:\Program Files\Microchip\xc8\v3.00\pic\
      +                          sources\c99\common\doscan.c: 677:     unsigned long long llu;
  6062   0009B4  0100               	movlb	0	; () banked
  6063   0009B6  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6064   0009B8  6ED9               	movwf	fsr2l,c
  6065   0009BA  6ADA               	clrf	fsr2h,c
  6066   0009BC  CFDE FFF6          	movff	postinc2,tblptrl
  6067   0009C0  CFDD FFF7          	movff	postdec2,tblptrh
  6068   0009C4                     	if	0	;tblptru may be non-zero
  6069   0009C4                     	endif
  6070   0009C4                     	if	0	;tblptru may be non-zero
  6071   0009C4                     	endif
  6072   0009C4  0008               	tblrd		*
  6073   0009C6  50F5               	movf	tablat,w,c
  6074   0009C8  0A25               	xorlw	37
  6075   0009CA  A4D8               	btfss	status,2,c
  6076   0009CC  EFEA  F004         	goto	u5711
  6077   0009D0  EFEC  F004         	goto	u5710
  6078   0009D4                     u5711:
  6079   0009D4  EFB2  F005         	goto	l5230
  6080   0009D8                     u5710:
  6081   0009D8                     
  6082                           ; BSR set to: 0
  6083                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 683:         ++*f
      +                          mt;
  6084   0009D8  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6085   0009DA  6ED9               	movwf	fsr2l,c
  6086   0009DC  6ADA               	clrf	fsr2h,c
  6087   0009DE  2ADE               	incf	postinc2,f,c
  6088   0009E0  0E00               	movlw	0
  6089   0009E2  22DD               	addwfc	postdec2,f,c
  6090   0009E4                     
  6091                           ; BSR set to: 0
  6092                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 685:         asup
      +                           = width = 0;
  6093   0009E4  0E00               	movlw	0
  6094   0009E6  6FB5               	movwf	(_width@doscan$F2229+1)& (0+255),b
  6095   0009E8  0E00               	movlw	0
  6096   0009EA  6FB4               	movwf	_width@doscan$F2229& (0+255),b
  6097   0009EC  51B4               	movf	_width@doscan$F2229& (0+255),w,b
  6098   0009EE  11B5               	iorwf	(_width@doscan$F2229+1)& (0+255),w,b
  6099   0009F0  A4D8               	btfss	status,2,c
  6100   0009F2  EFFD  F004         	goto	u5721
  6101   0009F6  EF00  F005         	goto	u5720
  6102   0009FA                     u5721:
  6103   0009FA  0E01               	movlw	1
  6104   0009FC  EF01  F005         	goto	u5730
  6105   000A00                     u5720:
  6106   000A00  0E00               	movlw	0
  6107   000A02                     u5730:
  6108   000A02  6FC9               	movwf	_asup& (0+255),b
  6109   000A04                     
  6110                           ; BSR set to: 0
  6111                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1353:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6112   000A04  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6113   000A06  6ED9               	movwf	fsr2l,c
  6114   000A08  6ADA               	clrf	fsr2h,c
  6115   000A0A  CFDE FFF6          	movff	postinc2,tblptrl
  6116   000A0E  CFDD FFF7          	movff	postdec2,tblptrh
  6117   000A12                     	if	0	;tblptru may be non-zero
  6118   000A12                     	endif
  6119   000A12                     	if	0	;tblptru may be non-zero
  6120   000A12                     	endif
  6121   000A12  0008               	tblrd		*
  6122   000A14  50F5               	movf	tablat,w,c
  6123   000A16  0A78               	xorlw	120
  6124   000A18  B4D8               	btfsc	status,2,c
  6125   000A1A  EF11  F005         	goto	u5741
  6126   000A1E  EF13  F005         	goto	u5740
  6127   000A22                     u5741:
  6128   000A22  EF24  F005         	goto	l5186
  6129   000A26                     u5740:
  6130   000A26                     
  6131                           ; BSR set to: 0
  6132   000A26  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6133   000A28  6ED9               	movwf	fsr2l,c
  6134   000A2A  6ADA               	clrf	fsr2h,c
  6135   000A2C  CFDE FFF6          	movff	postinc2,tblptrl
  6136   000A30  CFDD FFF7          	movff	postdec2,tblptrh
  6137   000A34                     	if	0	;tblptru may be non-zero
  6138   000A34                     	endif
  6139   000A34                     	if	0	;tblptru may be non-zero
  6140   000A34                     	endif
  6141   000A34  0008               	tblrd		*
  6142   000A36  50F5               	movf	tablat,w,c
  6143   000A38  0A58               	xorlw	88
  6144   000A3A  A4D8               	btfss	status,2,c
  6145   000A3C  EF22  F005         	goto	u5751
  6146   000A40  EF24  F005         	goto	u5750
  6147   000A44                     u5751:
  6148   000A44  EF5A  F005         	goto	l5200
  6149   000A48                     u5750:
  6150   000A48                     l5186:
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1354:            
      +                           ++*fmt;
  6154   000A48  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6155   000A4A  6ED9               	movwf	fsr2l,c
  6156   000A4C  6ADA               	clrf	fsr2h,c
  6157   000A4E  2ADE               	incf	postinc2,f,c
  6158   000A50  0E00               	movlw	0
  6159   000A52  22DD               	addwfc	postdec2,f,c
  6160   000A54                     
  6161                           ; BSR set to: 0
  6162                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1355:            
      +                           i = atox(fp, &llu);
  6163   000A54  C06A  F04B         	movff	vfsfcnvrt@fp,atox@fp
  6164   000A58  0E71               	movlw	low vfsfcnvrt@llu
  6165   000A5A  6E4C               	movwf	atox@pll^0,c
  6166   000A5C  EC27  F003         	call	_atox	;wreg free
  6167   000A60  C04B  F06F         	movff	?_atox,vfsfcnvrt@i
  6168   000A64  C04C  F070         	movff	?_atox+1,vfsfcnvrt@i+1
  6169   000A68                     
  6170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1356:            
      +                           if (!(i < 1)) {
  6171   000A68  0100               	movlb	0	; () banked
  6172   000A6A  BF70               	btfsc	(vfsfcnvrt@i+1)& (0+255),7,b
  6173   000A6C  EF40  F005         	goto	u5761
  6174   000A70  5170               	movf	(vfsfcnvrt@i+1)& (0+255),w,b
  6175   000A72  E108               	bnz	u5760
  6176   000A74  056F               	decf	vfsfcnvrt@i& (0+255),w,b
  6177   000A76  A0D8               	btfss	status,0,c
  6178   000A78  EF40  F005         	goto	u5761
  6179   000A7C  EF42  F005         	goto	u5760
  6180   000A80                     u5761:
  6181   000A80  EF54  F005         	goto	l5196
  6182   000A84                     u5760:
  6183   000A84                     
  6184                           ; BSR set to: 0
  6185                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1357:            
      +                               vp = (void *)(*(unsigned int * *)__va_arg(*(unsigned int * **)ap, (unsigned int *)0
      +                          ));
  6186   000A84  C06C  FFD9         	movff	vfsfcnvrt@ap,fsr2l
  6187   000A88  C06D  FFDA         	movff	vfsfcnvrt@ap+1,fsr2h
  6188   000A8C  0E02               	movlw	2
  6189   000A8E  26DF               	addwf	indf2,f,c
  6190   000A90  5CDF               	subwf	indf2,w,c
  6191   000A92  6ED9               	movwf	fsr2l,c
  6192   000A94  6ADA               	clrf	fsr2h,c
  6193   000A96  CFDE F06E          	movff	postinc2,vfsfcnvrt@vp
  6194   000A9A                     
  6195                           ; BSR set to: 0
  6196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1358:            
      +                               *(unsigned int *)vp = (unsigned int)llu;
  6197   000A9A  516E               	movf	vfsfcnvrt@vp& (0+255),w,b
  6198   000A9C  6ED9               	movwf	fsr2l,c
  6199   000A9E  6ADA               	clrf	fsr2h,c
  6200   000AA0  C071  FFDE         	movff	vfsfcnvrt@llu,postinc2
  6201   000AA4  C072  FFDD         	movff	vfsfcnvrt@llu+1,postdec2
  6202   000AA8                     l5196:
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1360:            
      +                           return i;
  6206   000AA8  C06F  F06A         	movff	vfsfcnvrt@i,?_vfsfcnvrt
  6207   000AAC  C070  F06B         	movff	vfsfcnvrt@i+1,?_vfsfcnvrt+1
  6208   000AB0  EF67  F006         	goto	l1311
  6209   000AB4                     l5200:
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1448:         if 
      +                          ((*fmt)[0] == '%') {
  6213   000AB4  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6214   000AB6  6ED9               	movwf	fsr2l,c
  6215   000AB8  6ADA               	clrf	fsr2h,c
  6216   000ABA  CFDE FFF6          	movff	postinc2,tblptrl
  6217   000ABE  CFDD FFF7          	movff	postdec2,tblptrh
  6218   000AC2                     	if	0	;tblptru may be non-zero
  6219   000AC2                     	endif
  6220   000AC2                     	if	0	;tblptru may be non-zero
  6221   000AC2                     	endif
  6222   000AC2  0008               	tblrd		*
  6223   000AC4  50F5               	movf	tablat,w,c
  6224   000AC6  0A25               	xorlw	37
  6225   000AC8  A4D8               	btfss	status,2,c
  6226   000ACA  EF69  F005         	goto	u5771
  6227   000ACE  EF6B  F005         	goto	u5770
  6228   000AD2                     u5771:
  6229   000AD2  EFAA  F005         	goto	l5224
  6230   000AD6                     u5770:
  6231   000AD6                     
  6232                           ; BSR set to: 0
  6233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1449:    skipws(f
      +                          p);
  6234   000AD6  C06A  F00E         	movff	vfsfcnvrt@fp,skipws@fp
  6235   000ADA  EC43  F014         	call	_skipws	;wreg free
  6236                           
  6237                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1450:    c = fget
      +                          c(fp);
  6238   000ADE  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6239   000AE2  EC4A  F00D         	call	_fgetc	;wreg free
  6240   000AE6  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6241   000AEA  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6242   000AEE                     
  6243                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1451:    if (c ==
      +                           '%') {
  6244   000AEE  0E25               	movlw	37
  6245   000AF0  0100               	movlb	0	; () banked
  6246   000AF2  1979               	xorwf	vfsfcnvrt@c& (0+255),w,b
  6247   000AF4  117A               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
  6248   000AF6  A4D8               	btfss	status,2,c
  6249   000AF8  EF80  F005         	goto	u5781
  6250   000AFC  EF82  F005         	goto	u5780
  6251   000B00                     u5781:
  6252   000B00  EF91  F005         	goto	l5216
  6253   000B04                     u5780:
  6254   000B04                     l5206:
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1452:     ++*fmt;
  6258   000B04  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6259   000B06  6ED9               	movwf	fsr2l,c
  6260   000B08  6ADA               	clrf	fsr2h,c
  6261   000B0A  2ADE               	incf	postinc2,f,c
  6262   000B0C  0E00               	movlw	0
  6263   000B0E  22DD               	addwfc	postdec2,f,c
  6264   000B10                     
  6265                           ; BSR set to: 0
  6266                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1453:     ++nmatc
      +                          h;
  6267   000B10  4BB0               	infsnz	_nmatch& (0+255),f,b
  6268   000B12  2BB1               	incf	(_nmatch+1)& (0+255),f,b
  6269   000B14                     l5210:
  6270                           
  6271                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1454:     return 
      +                          0;
  6272   000B14  0E00               	movlw	0
  6273   000B16  0100               	movlb	0	; () banked
  6274   000B18  6F6B               	movwf	(?_vfsfcnvrt+1)& (0+255),b
  6275   000B1A  0E00               	movlw	0
  6276   000B1C  6F6A               	movwf	?_vfsfcnvrt& (0+255),b
  6277   000B1E  EF67  F006         	goto	l1311
  6278   000B22                     l5216:
  6279                           
  6280                           ; BSR set to: 0
  6281   000B22  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6282   000B24  E108               	bnz	u5790
  6283   000B26  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6284   000B28  B4D8               	btfsc	status,2,c
  6285   000B2A  EF99  F005         	goto	u5791
  6286   000B2E  EF9B  F005         	goto	u5790
  6287   000B32                     u5791:
  6288   000B32  EFA3  F005         	goto	l5220
  6289   000B36                     u5790:
  6290   000B36                     l5218:
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1457:     ungetc(
      +                          c, fp);
  6294   000B36  C079  F003         	movff	vfsfcnvrt@c,ungetc@c
  6295   000B3A  C07A  F004         	movff	vfsfcnvrt@c+1,ungetc@c+1
  6296   000B3E  C06A  F005         	movff	vfsfcnvrt@fp,ungetc@fp
  6297   000B42  EC34  F012         	call	_ungetc	;wreg free
  6298   000B46                     l5220:
  6299                           
  6300                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1459:    return (
      +                          -1) - 1;
  6301   000B46  0EFF               	movlw	255
  6302   000B48  0100               	movlb	0	; () banked
  6303   000B4A  6F6B               	movwf	(?_vfsfcnvrt+1)& (0+255),b
  6304   000B4C  0EFE               	movlw	254
  6305   000B4E  6F6A               	movwf	?_vfsfcnvrt& (0+255),b
  6306   000B50  EF67  F006         	goto	l1311
  6307   000B54                     l5224:
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1463:         ++*
      +                          fmt;
  6311   000B54  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6312   000B56  6ED9               	movwf	fsr2l,c
  6313   000B58  6ADA               	clrf	fsr2h,c
  6314   000B5A  2ADE               	incf	postinc2,f,c
  6315   000B5C  0E00               	movlw	0
  6316   000B5E  22DD               	addwfc	postdec2,f,c
  6317   000B60  EF8A  F005         	goto	l5210
  6318   000B64                     l5230:
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1468:     c = fge
      +                          tc(fp);
  6322   000B64  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6323   000B68  EC4A  F00D         	call	_fgetc	;wreg free
  6324   000B6C  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6325   000B70  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6326   000B74                     
  6327                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1469:  if ((((*fm
      +                          t[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5)))) {
  6328   000B74  0100               	movlb	0	; () banked
  6329   000B76  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6330   000B78  6ED9               	movwf	fsr2l,c
  6331   000B7A  6ADA               	clrf	fsr2h,c
  6332   000B7C  CFDE FFF6          	movff	postinc2,tblptrl
  6333   000B80  CFDD FFF7          	movff	postdec2,tblptrh
  6334   000B84                     	if	0	;tblptru may be non-zero
  6335   000B84                     	endif
  6336   000B84                     	if	0	;tblptru may be non-zero
  6337   000B84                     	endif
  6338   000B84  0008               	tblrd		*
  6339   000B86  50F5               	movf	tablat,w,c
  6340   000B88  0A20               	xorlw	32
  6341   000B8A  B4D8               	btfsc	status,2,c
  6342   000B8C  EFCA  F005         	goto	u5801
  6343   000B90  EFCC  F005         	goto	u5800
  6344   000B94                     u5801:
  6345   000B94  EFE0  F005         	goto	l5236
  6346   000B98                     u5800:
  6347   000B98                     
  6348                           ; BSR set to: 0
  6349   000B98  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6350   000B9A  6ED9               	movwf	fsr2l,c
  6351   000B9C  6ADA               	clrf	fsr2h,c
  6352   000B9E  CFDE FFF6          	movff	postinc2,tblptrl
  6353   000BA2  CFDD FFF7          	movff	postdec2,tblptrh
  6354   000BA6                     	if	0	;tblptru may be non-zero
  6355   000BA6                     	endif
  6356   000BA6                     	if	0	;tblptru may be non-zero
  6357   000BA6                     	endif
  6358   000BA6  0008               	tblrd		*
  6359   000BA8  CFF5 F055          	movff	tablat,??_vfsfcnvrt
  6360   000BAC  0EF7               	movlw	247
  6361   000BAE  2655               	addwf	??_vfsfcnvrt^0,f,c
  6362   000BB0  0E05               	movlw	5
  6363   000BB2  6055               	cpfslt	??_vfsfcnvrt^0,c
  6364   000BB4  EFDE  F005         	goto	u5811
  6365   000BB8  EFE0  F005         	goto	u5810
  6366   000BBC                     u5811:
  6367   000BBC  EF42  F006         	goto	l5254
  6368   000BC0                     u5810:
  6369   000BC0                     l5236:
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1472:    ++*fmt;
  6373   000BC0  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6374   000BC2  6ED9               	movwf	fsr2l,c
  6375   000BC4  6ADA               	clrf	fsr2h,c
  6376   000BC6  2ADE               	incf	postinc2,f,c
  6377   000BC8  0E00               	movlw	0
  6378   000BCA  22DD               	addwfc	postdec2,f,c
  6379   000BCC                     
  6380                           ; BSR set to: 0
  6381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1473:   } while((
      +                          ((*fmt[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5))));
  6382   000BCC  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6383   000BCE  6ED9               	movwf	fsr2l,c
  6384   000BD0  6ADA               	clrf	fsr2h,c
  6385   000BD2  CFDE FFF6          	movff	postinc2,tblptrl
  6386   000BD6  CFDD FFF7          	movff	postdec2,tblptrh
  6387   000BDA                     	if	0	;tblptru may be non-zero
  6388   000BDA                     	endif
  6389   000BDA                     	if	0	;tblptru may be non-zero
  6390   000BDA                     	endif
  6391   000BDA  0008               	tblrd		*
  6392   000BDC  50F5               	movf	tablat,w,c
  6393   000BDE  0A20               	xorlw	32
  6394   000BE0  B4D8               	btfsc	status,2,c
  6395   000BE2  EFF5  F005         	goto	u5821
  6396   000BE6  EFF7  F005         	goto	u5820
  6397   000BEA                     u5821:
  6398   000BEA  EFE0  F005         	goto	l5236
  6399   000BEE                     u5820:
  6400   000BEE                     
  6401                           ; BSR set to: 0
  6402   000BEE  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6403   000BF0  6ED9               	movwf	fsr2l,c
  6404   000BF2  6ADA               	clrf	fsr2h,c
  6405   000BF4  CFDE FFF6          	movff	postinc2,tblptrl
  6406   000BF8  CFDD FFF7          	movff	postdec2,tblptrh
  6407   000BFC                     	if	0	;tblptru may be non-zero
  6408   000BFC                     	endif
  6409   000BFC                     	if	0	;tblptru may be non-zero
  6410   000BFC                     	endif
  6411   000BFC  0008               	tblrd		*
  6412   000BFE  CFF5 F055          	movff	tablat,??_vfsfcnvrt
  6413   000C02  0EF7               	movlw	247
  6414   000C04  2655               	addwf	??_vfsfcnvrt^0,f,c
  6415   000C06  0E04               	movlw	4
  6416   000C08  6455               	cpfsgt	??_vfsfcnvrt^0,c
  6417   000C0A  EF09  F006         	goto	u5831
  6418   000C0E  EF0B  F006         	goto	u5830
  6419   000C12                     u5831:
  6420   000C12  EFE0  F005         	goto	l5236
  6421   000C16                     u5830:
  6422   000C16  EF17  F006         	goto	l5246
  6423   000C1A                     l5242:
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1476:    ++nmatch
      +                          ;
  6427   000C1A  4BB0               	infsnz	_nmatch& (0+255),f,b
  6428   000C1C  2BB1               	incf	(_nmatch+1)& (0+255),f,b
  6429   000C1E                     
  6430                           ; BSR set to: 0
  6431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1477:    c = fget
      +                          c(fp);
  6432   000C1E  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6433   000C22  EC4A  F00D         	call	_fgetc	;wreg free
  6434   000C26  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6435   000C2A  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6436   000C2E                     l5246:
  6437                           
  6438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1475:   while (((
      +                          (c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
  6439   000C2E  0E20               	movlw	32
  6440   000C30  0100               	movlb	0	; () banked
  6441   000C32  1979               	xorwf	vfsfcnvrt@c& (0+255),w,b
  6442   000C34  117A               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
  6443   000C36  B4D8               	btfsc	status,2,c
  6444   000C38  EF20  F006         	goto	u5841
  6445   000C3C  EF22  F006         	goto	u5840
  6446   000C40                     u5841:
  6447   000C40  EF0D  F006         	goto	l5242
  6448   000C44                     u5840:
  6449   000C44                     
  6450                           ; BSR set to: 0
  6451   000C44  C079  F055         	movff	vfsfcnvrt@c,??_vfsfcnvrt
  6452   000C48  0EF7               	movlw	247
  6453   000C4A  2655               	addwf	??_vfsfcnvrt^0,f,c
  6454   000C4C  0E04               	movlw	4
  6455   000C4E  6455               	cpfsgt	??_vfsfcnvrt^0,c
  6456   000C50  EF2C  F006         	goto	u5851
  6457   000C54  EF2E  F006         	goto	u5850
  6458   000C58                     u5851:
  6459   000C58  EF0D  F006         	goto	l5242
  6460   000C5C                     u5850:
  6461   000C5C                     
  6462                           ; BSR set to: 0
  6463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1479:   if (c != 
      +                          (-1)) {
  6464   000C5C  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6465   000C5E  E108               	bnz	u5860
  6466   000C60  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6467   000C62  B4D8               	btfsc	status,2,c
  6468   000C64  EF36  F006         	goto	u5861
  6469   000C68  EF38  F006         	goto	u5860
  6470   000C6C                     u5861:
  6471   000C6C  EF8A  F005         	goto	l5210
  6472   000C70                     u5860:
  6473   000C70                     
  6474                           ; BSR set to: 0
  6475                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1480:    ungetc(c
      +                          , fp);
  6476   000C70  C079  F003         	movff	vfsfcnvrt@c,ungetc@c
  6477   000C74  C07A  F004         	movff	vfsfcnvrt@c+1,ungetc@c+1
  6478   000C78  C06A  F005         	movff	vfsfcnvrt@fp,ungetc@fp
  6479   000C7C  EC34  F012         	call	_ungetc	;wreg free
  6480   000C80  EF8A  F005         	goto	l5210
  6481   000C84                     l5254:
  6482                           
  6483                           ; BSR set to: 0
  6484   000C84  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6485   000C86  6ED9               	movwf	fsr2l,c
  6486   000C88  6ADA               	clrf	fsr2h,c
  6487   000C8A  CFDE FFF6          	movff	postinc2,tblptrl
  6488   000C8E  CFDD FFF7          	movff	postdec2,tblptrh
  6489   000C92                     	if	0	;tblptru may be non-zero
  6490   000C92                     	endif
  6491   000C92                     	if	0	;tblptru may be non-zero
  6492   000C92                     	endif
  6493   000C92  0008               	tblrd		*
  6494   000C94  50F5               	movf	tablat,w,c
  6495   000C96  6E55               	movwf	??_vfsfcnvrt^0,c
  6496   000C98  6A56               	clrf	(??_vfsfcnvrt+1)^0,c
  6497   000C9A  5179               	movf	vfsfcnvrt@c& (0+255),w,b
  6498   000C9C  1855               	xorwf	??_vfsfcnvrt^0,w,c
  6499   000C9E  E107               	bnz	u5871
  6500   000CA0  517A               	movf	(vfsfcnvrt@c+1)& (0+255),w,b
  6501   000CA2  1856               	xorwf	(??_vfsfcnvrt+1)^0,w,c
  6502   000CA4  A4D8               	btfss	status,2,c
  6503   000CA6  EF57  F006         	goto	u5871
  6504   000CAA  EF59  F006         	goto	u5870
  6505   000CAE                     u5871:
  6506   000CAE  EF5B  F006         	goto	l5260
  6507   000CB2                     u5870:
  6508   000CB2  EF82  F005         	goto	l5206
  6509   000CB6                     l5260:
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1487:   if (c == 
      +                          (-1)) {
  6513   000CB6  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6514   000CB8  E106               	bnz	u5881
  6515   000CBA  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6516   000CBC  A4D8               	btfss	status,2,c
  6517   000CBE  EF63  F006         	goto	u5881
  6518   000CC2  EF65  F006         	goto	u5880
  6519   000CC6                     u5881:
  6520   000CC6  EF9B  F005         	goto	l5218
  6521   000CCA                     u5880:
  6522   000CCA                     
  6523                           ; BSR set to: 0
  6524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1488:    return (
      +                          -1);
  6525   000CCA  696A               	setf	?_vfsfcnvrt& (0+255),b
  6526   000CCC  696B               	setf	(?_vfsfcnvrt+1)& (0+255),b
  6527   000CCE                     l1311:
  6528                           
  6529                           ; BSR set to: 0
  6530   000CCE  0012               	return		;funcret
  6531   000CD0                     __end_of_vfsfcnvrt:
  6532                           	callstack 0
  6533                           
  6534 ;; *************** function _atox *****************
  6535 ;; Defined at:
  6536 ;;		line 528 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  fp              1   74[COMRAM] PTR struct _IO_FILE
  6539 ;;		 -> sscanf@f(11), 
  6540 ;;  pll             1   75[COMRAM] PTR unsigned long long 
  6541 ;;		 -> vfsfcnvrt@llu(8), 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  c               2    8[BANK0 ] int 
  6544 ;;  i               2    6[BANK0 ] int 
  6545 ;;  seen_0x         2    4[BANK0 ] int 
  6546 ;;  ep              2    2[BANK0 ] PTR unsigned char 
  6547 ;;		 -> dbuf@doscan$F2232(32), 
  6548 ;;  w               2    0[BANK0 ] int 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  2   74[COMRAM] int 
  6551 ;; Registers used:
  6552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;Total ram usage:       20 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 4
  6565 ;; This function calls:
  6566 ;;		___strtoxll
  6567 ;;		_fgetc
  6568 ;;		_skipws
  6569 ;;		_ungetc
  6570 ;; This function is called by:
  6571 ;;		_vfsfcnvrt
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text30
  6576   00064E                     __ptext30:
  6577                           	callstack 0
  6578   00064E                     _atox:
  6579                           	callstack 19
  6580   00064E                     
  6581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 528: static int a
      +                          tox(FILE *fp, unsigned long long *pll);C:\Program Files\Microchip\xc8\v3.00\pic\sources\
      +                          c99\common\doscan.c: 529: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\
      +                          doscan.c: 530:     char *ep;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doscan.c: 531:     int c, i, w, seen_0x = 0;
  6582   00064E  0E00               	movlw	0
  6583   000650  0100               	movlb	0	; () banked
  6584   000652  6F65               	movwf	(atox@seen_0x+1)& (0+255),b
  6585   000654  0E00               	movlw	0
  6586   000656  6F64               	movwf	atox@seen_0x& (0+255),b
  6587   000658                     
  6588                           ; BSR set to: 0
  6589                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 534:     skipws(f
      +                          p);
  6590   000658  C04B  F00E         	movff	atox@fp,skipws@fp
  6591   00065C  EC43  F014         	call	_skipws	;wreg free
  6592   000660                     
  6593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 537:     w = widt
      +                          h ? width : sizeof(dbuf) - 1;
  6594   000660  0100               	movlb	0	; () banked
  6595   000662  51B4               	movf	_width@doscan$F2229& (0+255),w,b
  6596   000664  11B5               	iorwf	(_width@doscan$F2229+1)& (0+255),w,b
  6597   000666  A4D8               	btfss	status,2,c
  6598   000668  EF38  F003         	goto	u5371
  6599   00066C  EF3A  F003         	goto	u5370
  6600   000670                     u5371:
  6601   000670  EF40  F003         	goto	l1272
  6602   000674                     u5370:
  6603   000674                     
  6604                           ; BSR set to: 0
  6605   000674  0E00               	movlw	0
  6606   000676  6F61               	movwf	(atox@w+1)& (0+255),b
  6607   000678  0E1F               	movlw	31
  6608   00067A  6F60               	movwf	atox@w& (0+255),b
  6609   00067C  EF44  F003         	goto	l5038
  6610   000680                     l1272:
  6611                           
  6612                           ; BSR set to: 0
  6613   000680  C0B4  F060         	movff	_width@doscan$F2229,atox@w
  6614   000684  C0B5  F061         	movff	_width@doscan$F2229+1,atox@w+1
  6615   000688                     l5038:
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 538:     i = 0;
  6619   000688  0E00               	movlw	0
  6620   00068A  6F67               	movwf	(atox@i+1)& (0+255),b
  6621   00068C  0E00               	movlw	0
  6622   00068E  6F66               	movwf	atox@i& (0+255),b
  6623                           
  6624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 539:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
  6625   000690  EF54  F004         	goto	l5098
  6626   000694                     l5040:
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 540:         c = 
      +                          fgetc(fp);
  6630   000694  C04B  F005         	movff	atox@fp,fgetc@fp
  6631   000698  EC4A  F00D         	call	_fgetc	;wreg free
  6632   00069C  C005  F068         	movff	?_fgetc,atox@c
  6633   0006A0  C006  F069         	movff	?_fgetc+1,atox@c+1
  6634   0006A4                     
  6635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 541:         if (
      +                          c == (-1) && (width || i==0)) {
  6636   0006A4  0100               	movlb	0	; () banked
  6637   0006A6  2968               	incf	atox@c& (0+255),w,b
  6638   0006A8  E106               	bnz	u5381
  6639   0006AA  2969               	incf	(atox@c+1)& (0+255),w,b
  6640   0006AC  A4D8               	btfss	status,2,c
  6641   0006AE  EF5B  F003         	goto	u5381
  6642   0006B2  EF5D  F003         	goto	u5380
  6643   0006B6                     u5381:
  6644   0006B6  EF75  F003         	goto	l5048
  6645   0006BA                     u5380:
  6646   0006BA                     
  6647                           ; BSR set to: 0
  6648   0006BA  51B4               	movf	_width@doscan$F2229& (0+255),w,b
  6649   0006BC  11B5               	iorwf	(_width@doscan$F2229+1)& (0+255),w,b
  6650   0006BE  A4D8               	btfss	status,2,c
  6651   0006C0  EF64  F003         	goto	u5391
  6652   0006C4  EF66  F003         	goto	u5390
  6653   0006C8                     u5391:
  6654   0006C8  EF6F  F003         	goto	l1279
  6655   0006CC                     u5390:
  6656   0006CC                     
  6657                           ; BSR set to: 0
  6658   0006CC  5166               	movf	atox@i& (0+255),w,b
  6659   0006CE  1167               	iorwf	(atox@i+1)& (0+255),w,b
  6660   0006D0  A4D8               	btfss	status,2,c
  6661   0006D2  EF6D  F003         	goto	u5401
  6662   0006D6  EF6F  F003         	goto	u5400
  6663   0006DA                     u5401:
  6664   0006DA  EF75  F003         	goto	l5048
  6665   0006DE                     u5400:
  6666   0006DE                     l1279:
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 542:             
      +                          return c;
  6670   0006DE  C068  F04B         	movff	atox@c,?_atox
  6671   0006E2  C069  F04C         	movff	atox@c+1,?_atox+1
  6672   0006E6  EFD9  F004         	goto	l1280
  6673   0006EA                     l5048:
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 544:   if (c == '
      +                          -' || c == '+') {
  6677   0006EA  0E2D               	movlw	45
  6678   0006EC  1968               	xorwf	atox@c& (0+255),w,b
  6679   0006EE  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6680   0006F0  B4D8               	btfsc	status,2,c
  6681   0006F2  EF7D  F003         	goto	u5411
  6682   0006F6  EF7F  F003         	goto	u5410
  6683   0006FA                     u5411:
  6684   0006FA  EF89  F003         	goto	l5052
  6685   0006FE                     u5410:
  6686   0006FE                     
  6687                           ; BSR set to: 0
  6688   0006FE  0E2B               	movlw	43
  6689   000700  1968               	xorwf	atox@c& (0+255),w,b
  6690   000702  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6691   000704  A4D8               	btfss	status,2,c
  6692   000706  EF87  F003         	goto	u5421
  6693   00070A  EF89  F003         	goto	u5420
  6694   00070E                     u5421:
  6695   00070E  EFA0  F003         	goto	l5056
  6696   000712                     u5420:
  6697   000712                     l5052:
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 545:    if (i > 0
      +                          ) {
  6701   000712  BF67               	btfsc	(atox@i+1)& (0+255),7,b
  6702   000714  EF94  F003         	goto	u5431
  6703   000718  5167               	movf	(atox@i+1)& (0+255),w,b
  6704   00071A  E108               	bnz	u5430
  6705   00071C  0566               	decf	atox@i& (0+255),w,b
  6706   00071E  A0D8               	btfss	status,0,c
  6707   000720  EF94  F003         	goto	u5431
  6708   000724  EF96  F003         	goto	u5430
  6709   000728                     u5431:
  6710   000728  EF48  F004         	goto	l5092
  6711   00072C                     u5430:
  6712   00072C                     l5054:
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 546:     ungetc(c
      +                          , fp);
  6716   00072C  C068  F003         	movff	atox@c,ungetc@c
  6717   000730  C069  F004         	movff	atox@c+1,ungetc@c+1
  6718   000734  C04B  F005         	movff	atox@fp,ungetc@fp
  6719   000738  EC34  F012         	call	_ungetc	;wreg free
  6720                           
  6721                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 547:     break;
  6722   00073C  EF6F  F004         	goto	l5102
  6723   000740                     l5056:
  6724                           
  6725                           ; BSR set to: 0
  6726   000740  0E30               	movlw	48
  6727   000742  1968               	xorwf	atox@c& (0+255),w,b
  6728   000744  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6729   000746  A4D8               	btfss	status,2,c
  6730   000748  EFA8  F003         	goto	u5441
  6731   00074C  EFAA  F003         	goto	u5440
  6732   000750                     u5441:
  6733   000750  EFF8  F003         	goto	l5078
  6734   000754                     u5440:
  6735   000754                     
  6736                           ; BSR set to: 0
  6737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 551:    dbuf[i] =
      +                           (char)c;
  6738   000754  0E5C               	movlw	low _dbuf@doscan$F2232
  6739   000756  2566               	addwf	atox@i& (0+255),w,b
  6740   000758  6ED9               	movwf	fsr2l,c
  6741   00075A  0E01               	movlw	high _dbuf@doscan$F2232
  6742   00075C  2167               	addwfc	(atox@i+1)& (0+255),w,b
  6743   00075E  6EDA               	movwf	fsr2h,c
  6744   000760  C068  FFDF         	movff	atox@c,indf2
  6745   000764                     
  6746                           ; BSR set to: 0
  6747                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 552:    ++i;
  6748   000764  4B66               	infsnz	atox@i& (0+255),f,b
  6749   000766  2B67               	incf	(atox@i+1)& (0+255),f,b
  6750   000768                     
  6751                           ; BSR set to: 0
  6752                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 553:    ++nmatch;
  6753   000768  4BB0               	infsnz	_nmatch& (0+255),f,b
  6754   00076A  2BB1               	incf	(_nmatch+1)& (0+255),f,b
  6755   00076C                     
  6756                           ; BSR set to: 0
  6757                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 554:    c = fgetc
      +                          (fp);
  6758   00076C  C04B  F005         	movff	atox@fp,fgetc@fp
  6759   000770  EC4A  F00D         	call	_fgetc	;wreg free
  6760   000774  C005  F068         	movff	?_fgetc,atox@c
  6761   000778  C006  F069         	movff	?_fgetc+1,atox@c+1
  6762   00077C                     
  6763                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 555:    if (c == 
      +                          'X' || c == 'x') {
  6764   00077C  0E58               	movlw	88
  6765   00077E  0100               	movlb	0	; () banked
  6766   000780  1968               	xorwf	atox@c& (0+255),w,b
  6767   000782  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6768   000784  B4D8               	btfsc	status,2,c
  6769   000786  EFC7  F003         	goto	u5451
  6770   00078A  EFC9  F003         	goto	u5450
  6771   00078E                     u5451:
  6772   00078E  EFD3  F003         	goto	l5070
  6773   000792                     u5450:
  6774   000792                     
  6775                           ; BSR set to: 0
  6776   000792  0E78               	movlw	120
  6777   000794  1968               	xorwf	atox@c& (0+255),w,b
  6778   000796  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6779   000798  A4D8               	btfss	status,2,c
  6780   00079A  EFD1  F003         	goto	u5461
  6781   00079E  EFD3  F003         	goto	u5460
  6782   0007A2                     u5461:
  6783   0007A2  EFE4  F003         	goto	l5074
  6784   0007A6                     u5460:
  6785   0007A6                     l5070:
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 556:     if (seen
      +                          _0x) {
  6789   0007A6  5164               	movf	atox@seen_0x& (0+255),w,b
  6790   0007A8  1165               	iorwf	(atox@seen_0x+1)& (0+255),w,b
  6791   0007AA  B4D8               	btfsc	status,2,c
  6792   0007AC  EFDA  F003         	goto	u5471
  6793   0007B0  EFDC  F003         	goto	u5470
  6794   0007B4                     u5471:
  6795   0007B4  EFDE  F003         	goto	l1291
  6796   0007B8                     u5470:
  6797   0007B8  EF96  F003         	goto	l5054
  6798   0007BC                     l1291:
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 560:     seen_0x 
      +                          = i;
  6802   0007BC  C066  F064         	movff	atox@i,atox@seen_0x
  6803   0007C0  C067  F065         	movff	atox@i+1,atox@seen_0x+1
  6804                           
  6805                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 561:    }
  6806   0007C4  EF48  F004         	goto	l5092
  6807   0007C8                     l5074:
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 563:     if (c !=
      +                           (-1)) {
  6811   0007C8  2968               	incf	atox@c& (0+255),w,b
  6812   0007CA  E108               	bnz	u5480
  6813   0007CC  2969               	incf	(atox@c+1)& (0+255),w,b
  6814   0007CE  B4D8               	btfsc	status,2,c
  6815   0007D0  EFEC  F003         	goto	u5481
  6816   0007D4  EFEE  F003         	goto	u5480
  6817   0007D8                     u5481:
  6818   0007D8  EF54  F004         	goto	l5098
  6819   0007DC                     u5480:
  6820   0007DC                     
  6821                           ; BSR set to: 0
  6822                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 564:      ungetc(
      +                          c, fp);
  6823   0007DC  C068  F003         	movff	atox@c,ungetc@c
  6824   0007E0  C069  F004         	movff	atox@c+1,ungetc@c+1
  6825   0007E4  C04B  F005         	movff	atox@fp,ungetc@fp
  6826   0007E8  EC34  F012         	call	_ungetc	;wreg free
  6827   0007EC  EF54  F004         	goto	l5098
  6828   0007F0                     l5078:
  6829                           
  6830                           ; BSR set to: 0
  6831   0007F0  C068  F04D         	movff	atox@c,??_atox
  6832   0007F4  0ED0               	movlw	208
  6833   0007F6  264D               	addwf	??_atox^0,f,c
  6834   0007F8  0E09               	movlw	9
  6835   0007FA  644D               	cpfsgt	??_atox^0,c
  6836   0007FC  EF02  F004         	goto	u5491
  6837   000800  EF04  F004         	goto	u5490
  6838   000804                     u5491:
  6839   000804  EF48  F004         	goto	l5092
  6840   000808                     u5490:
  6841   000808                     
  6842                           ; BSR set to: 0
  6843   000808  C068  F04D         	movff	atox@c,??_atox
  6844   00080C  0E20               	movlw	32
  6845   00080E  124D               	iorwf	??_atox^0,f,c
  6846   000810  0E9F               	movlw	159
  6847   000812  264D               	addwf	??_atox^0,f,c
  6848   000814  0E05               	movlw	5
  6849   000816  644D               	cpfsgt	??_atox^0,c
  6850   000818  EF10  F004         	goto	u5501
  6851   00081C  EF12  F004         	goto	u5500
  6852   000820                     u5501:
  6853   000820  EF48  F004         	goto	l5092
  6854   000824                     u5500:
  6855   000824                     
  6856                           ; BSR set to: 0
  6857                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 570:    if (c != 
      +                          (-1)) {
  6858   000824  2968               	incf	atox@c& (0+255),w,b
  6859   000826  E108               	bnz	u5510
  6860   000828  2969               	incf	(atox@c+1)& (0+255),w,b
  6861   00082A  B4D8               	btfsc	status,2,c
  6862   00082C  EF1A  F004         	goto	u5511
  6863   000830  EF1C  F004         	goto	u5510
  6864   000834                     u5511:
  6865   000834  EF24  F004         	goto	l5086
  6866   000838                     u5510:
  6867   000838                     
  6868                           ; BSR set to: 0
  6869                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 571:     ungetc(c
      +                          , fp);
  6870   000838  C068  F003         	movff	atox@c,ungetc@c
  6871   00083C  C069  F004         	movff	atox@c+1,ungetc@c+1
  6872   000840  C04B  F005         	movff	atox@fp,ungetc@fp
  6873   000844  EC34  F012         	call	_ungetc	;wreg free
  6874   000848                     l5086:
  6875                           
  6876                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 573:    if (seen_
      +                          0x && seen_0x == (i-1)) {
  6877   000848  0100               	movlb	0	; () banked
  6878   00084A  5164               	movf	atox@seen_0x& (0+255),w,b
  6879   00084C  1165               	iorwf	(atox@seen_0x+1)& (0+255),w,b
  6880   00084E  B4D8               	btfsc	status,2,c
  6881   000850  EF2C  F004         	goto	u5521
  6882   000854  EF2E  F004         	goto	u5520
  6883   000858                     u5521:
  6884   000858  EF6F  F004         	goto	l5102
  6885   00085C                     u5520:
  6886   00085C                     
  6887                           ; BSR set to: 0
  6888   00085C  0EFF               	movlw	255
  6889   00085E  2566               	addwf	atox@i& (0+255),w,b
  6890   000860  6E4D               	movwf	??_atox^0,c
  6891   000862  0EFF               	movlw	255
  6892   000864  2167               	addwfc	(atox@i+1)& (0+255),w,b
  6893   000866  6E4E               	movwf	(??_atox+1)^0,c
  6894   000868  5164               	movf	atox@seen_0x& (0+255),w,b
  6895   00086A  184D               	xorwf	??_atox^0,w,c
  6896   00086C  E107               	bnz	u5531
  6897   00086E  5165               	movf	(atox@seen_0x+1)& (0+255),w,b
  6898   000870  184E               	xorwf	(??_atox+1)^0,w,c
  6899   000872  A4D8               	btfss	status,2,c
  6900   000874  EF3E  F004         	goto	u5531
  6901   000878  EF40  F004         	goto	u5530
  6902   00087C                     u5531:
  6903   00087C  EF6F  F004         	goto	l5102
  6904   000880                     u5530:
  6905   000880                     
  6906                           ; BSR set to: 0
  6907                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 574:     i--;
  6908   000880  0766               	decf	atox@i& (0+255),f,b
  6909   000882  A0D8               	btfss	status,0,c
  6910   000884  0767               	decf	(atox@i+1)& (0+255),f,b
  6911                           
  6912                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 575:     nmatch--
      +                          ;
  6913   000886  07B0               	decf	_nmatch& (0+255),f,b
  6914   000888  A0D8               	btfss	status,0,c
  6915   00088A  07B1               	decf	(_nmatch+1)& (0+255),f,b
  6916   00088C  EF6F  F004         	goto	l5102
  6917   000890                     l5092:
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 579:         dbuf
      +                          [i] = (char)c;
  6921   000890  0E5C               	movlw	low _dbuf@doscan$F2232
  6922   000892  2566               	addwf	atox@i& (0+255),w,b
  6923   000894  6ED9               	movwf	fsr2l,c
  6924   000896  0E01               	movlw	high _dbuf@doscan$F2232
  6925   000898  2167               	addwfc	(atox@i+1)& (0+255),w,b
  6926   00089A  6EDA               	movwf	fsr2h,c
  6927   00089C  C068  FFDF         	movff	atox@c,indf2
  6928   0008A0                     
  6929                           ; BSR set to: 0
  6930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 580:         ++i;
  6931   0008A0  4B66               	infsnz	atox@i& (0+255),f,b
  6932   0008A2  2B67               	incf	(atox@i+1)& (0+255),f,b
  6933   0008A4                     
  6934                           ; BSR set to: 0
  6935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 581:         ++nm
      +                          atch;
  6936   0008A4  4BB0               	infsnz	_nmatch& (0+255),f,b
  6937   0008A6  2BB1               	incf	(_nmatch+1)& (0+255),f,b
  6938   0008A8                     l5098:
  6939                           
  6940                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 539:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
  6941   0008A8  0100               	movlb	0	; () banked
  6942   0008AA  5160               	movf	atox@w& (0+255),w,b
  6943   0008AC  5D66               	subwf	atox@i& (0+255),w,b
  6944   0008AE  5167               	movf	(atox@i+1)& (0+255),w,b
  6945   0008B0  0A80               	xorlw	128
  6946   0008B2  6E4D               	movwf	??_atox^0,c
  6947   0008B4  5161               	movf	(atox@w+1)& (0+255),w,b
  6948   0008B6  0A80               	xorlw	128
  6949   0008B8  584D               	subwfb	??_atox^0,w,c
  6950   0008BA  B0D8               	btfsc	status,0,c
  6951   0008BC  EF62  F004         	goto	u5541
  6952   0008C0  EF64  F004         	goto	u5540
  6953   0008C4                     u5541:
  6954   0008C4  EF6F  F004         	goto	l5102
  6955   0008C8                     u5540:
  6956   0008C8                     
  6957                           ; BSR set to: 0
  6958   0008C8  5167               	movf	(atox@i+1)& (0+255),w,b
  6959   0008CA  E109               	bnz	u5550
  6960   0008CC  0E1F               	movlw	31
  6961   0008CE  5D66               	subwf	atox@i& (0+255),w,b
  6962   0008D0  A0D8               	btfss	status,0,c
  6963   0008D2  EF6D  F004         	goto	u5551
  6964   0008D6  EF6F  F004         	goto	u5550
  6965   0008DA                     u5551:
  6966   0008DA  EF4A  F003         	goto	l5040
  6967   0008DE                     u5550:
  6968   0008DE                     l5102:
  6969                           
  6970                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 583:     dbuf[i] 
      +                          = '\0';
  6971   0008DE  0E5C               	movlw	low _dbuf@doscan$F2232
  6972   0008E0  0100               	movlb	0	; () banked
  6973   0008E2  2566               	addwf	atox@i& (0+255),w,b
  6974   0008E4  6ED9               	movwf	fsr2l,c
  6975   0008E6  0E01               	movlw	high _dbuf@doscan$F2232
  6976   0008E8  2167               	addwfc	(atox@i+1)& (0+255),w,b
  6977   0008EA  6EDA               	movwf	fsr2h,c
  6978   0008EC  6ADF               	clrf	indf2,c
  6979   0008EE                     
  6980                           ; BSR set to: 0
  6981                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 587:     *pll = _
      +                          _strtoxll(&dbuf[0],&ep,16,0);
  6982   0008EE  0E5C               	movlw	low _dbuf@doscan$F2232
  6983   0008F0  6E1B               	movwf	___strtoxll@s^0,c
  6984   0008F2  0E01               	movlw	high _dbuf@doscan$F2232
  6985   0008F4  6E1C               	movwf	(___strtoxll@s+1)^0,c
  6986   0008F6  0E62               	movlw	low atox@ep
  6987   0008F8  6E1D               	movwf	___strtoxll@endptr^0,c
  6988   0008FA  0E00               	movlw	0
  6989   0008FC  6E1F               	movwf	(___strtoxll@base+1)^0,c
  6990   0008FE  0E10               	movlw	16
  6991   000900  6E1E               	movwf	___strtoxll@base^0,c
  6992   000902  0E00               	movlw	0
  6993   000904  6E20               	movwf	___strtoxll@is_signed^0,c
  6994   000906  EC72  F000         	call	___strtoxll	;wreg free
  6995   00090A  C01B  F04D         	movff	?___strtoxll,??_atox
  6996   00090E  C01C  F04E         	movff	?___strtoxll+1,??_atox+1
  6997   000912  C01D  F04F         	movff	?___strtoxll+2,??_atox+2
  6998   000916  C01E  F050         	movff	?___strtoxll+3,??_atox+3
  6999   00091A  C01F  F051         	movff	?___strtoxll+4,??_atox+4
  7000   00091E  C020  F052         	movff	?___strtoxll+5,??_atox+5
  7001   000922  C021  F053         	movff	?___strtoxll+6,??_atox+6
  7002   000926  C022  F054         	movff	?___strtoxll+7,??_atox+7
  7003   00092A  504C               	movf	atox@pll^0,w,c
  7004   00092C  6ED9               	movwf	fsr2l,c
  7005   00092E  6ADA               	clrf	fsr2h,c
  7006   000930  C04D  FFDE         	movff	??_atox,postinc2
  7007   000934  C04E  FFDE         	movff	??_atox+1,postinc2
  7008   000938  C04F  FFDE         	movff	??_atox+2,postinc2
  7009   00093C  C050  FFDE         	movff	??_atox+3,postinc2
  7010   000940  C051  FFDE         	movff	??_atox+4,postinc2
  7011   000944  C052  FFDE         	movff	??_atox+5,postinc2
  7012   000948  C053  FFDE         	movff	??_atox+6,postinc2
  7013   00094C  C054  FFDE         	movff	??_atox+7,postinc2
  7014   000950                     
  7015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 592:     return (
      +                          errno || !i || ep == &dbuf[0]) ? (-1) - 1 : !asup;
  7016   000950  0100               	movlb	0	; () banked
  7017   000952  51B6               	movf	_errno& (0+255),w,b
  7018   000954  11B7               	iorwf	(_errno+1)& (0+255),w,b
  7019   000956  A4D8               	btfss	status,2,c
  7020   000958  EFB0  F004         	goto	u5561
  7021   00095C  EFB2  F004         	goto	u5560
  7022   000960                     u5561:
  7023   000960  EFD5  F004         	goto	l5114
  7024   000964                     u5560:
  7025   000964                     
  7026                           ; BSR set to: 0
  7027   000964  5166               	movf	atox@i& (0+255),w,b
  7028   000966  1167               	iorwf	(atox@i+1)& (0+255),w,b
  7029   000968  B4D8               	btfsc	status,2,c
  7030   00096A  EFB9  F004         	goto	u5571
  7031   00096E  EFBB  F004         	goto	u5570
  7032   000972                     u5571:
  7033   000972  EFD5  F004         	goto	l5114
  7034   000976                     u5570:
  7035   000976                     
  7036                           ; BSR set to: 0
  7037   000976  0E5C               	movlw	low _dbuf@doscan$F2232
  7038   000978  1962               	xorwf	atox@ep& (0+255),w,b
  7039   00097A  E109               	bnz	u5580
  7040   00097C  0E01               	movlw	high _dbuf@doscan$F2232
  7041   00097E  1963               	xorwf	(atox@ep+1)& (0+255),w,b
  7042   000980  B4D8               	btfsc	status,2,c
  7043   000982  EFC5  F004         	goto	u5581
  7044   000986  EFC7  F004         	goto	u5580
  7045   00098A                     u5581:
  7046   00098A  EFD5  F004         	goto	l5114
  7047   00098E                     u5580:
  7048   00098E                     
  7049                           ; BSR set to: 0
  7050   00098E  51C9               	movf	_asup& (0+255),w,b
  7051   000990  B4D8               	btfsc	status,2,c
  7052   000992  EFCD  F004         	goto	u5591
  7053   000996  EFD0  F004         	goto	u5590
  7054   00099A                     u5591:
  7055   00099A  0E01               	movlw	1
  7056   00099C  EFD1  F004         	goto	u5600
  7057   0009A0                     u5590:
  7058   0009A0  0E00               	movlw	0
  7059   0009A2                     u5600:
  7060   0009A2  6E4B               	movwf	?_atox^0,c
  7061   0009A4  6A4C               	clrf	(?_atox+1)^0,c
  7062   0009A6  EFD9  F004         	goto	l1280
  7063   0009AA                     l5114:
  7064                           
  7065                           ; BSR set to: 0
  7066   0009AA  0EFF               	movlw	255
  7067   0009AC  6E4C               	movwf	(?_atox+1)^0,c
  7068   0009AE  0EFE               	movlw	254
  7069   0009B0  6E4B               	movwf	?_atox^0,c
  7070   0009B2                     l1280:
  7071                           
  7072                           ; BSR set to: 0
  7073   0009B2  0012               	return		;funcret
  7074   0009B4                     __end_of_atox:
  7075                           	callstack 0
  7076                           
  7077 ;; *************** function _skipws *****************
  7078 ;; Defined at:
  7079 ;;		line 74 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  7082 ;;		 -> sscanf@f(11), 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  c               2   15[COMRAM] int 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7094 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;Total ram usage:        4 bytes
  7099 ;; Hardware stack levels used: 1
  7100 ;; Hardware stack levels required when called: 3
  7101 ;; This function calls:
  7102 ;;		_fgetc
  7103 ;;		_ungetc
  7104 ;; This function is called by:
  7105 ;;		_atox
  7106 ;;		_vfsfcnvrt
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text31
  7111   002886                     __ptext31:
  7112                           	callstack 0
  7113   002886                     _skipws:
  7114                           	callstack 20
  7115   002886                     
  7116                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 74: static void s
      +                          kipws(FILE *fp);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 75
      +                          : {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 76:     int c;
      +                          ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
  7117   002886  EF65  F014         	goto	l4900
  7118   00288A                     l4894:
  7119                           
  7120                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 79:         if (!
      +                          (((c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
  7121   00288A  0E20               	movlw	32
  7122   00288C  1810               	xorwf	skipws@c^0,w,c
  7123   00288E  1011               	iorwf	(skipws@c+1)^0,w,c
  7124   002890  B4D8               	btfsc	status,2,c
  7125   002892  EF4D  F014         	goto	u5001
  7126   002896  EF4F  F014         	goto	u5000
  7127   00289A                     u5001:
  7128   00289A  EF65  F014         	goto	l4900
  7129   00289E                     u5000:
  7130   00289E  C010  F00F         	movff	skipws@c,??_skipws
  7131   0028A2  0EF7               	movlw	247
  7132   0028A4  260F               	addwf	??_skipws^0,f,c
  7133   0028A6  0E04               	movlw	4
  7134   0028A8  640F               	cpfsgt	??_skipws^0,c
  7135   0028AA  EF59  F014         	goto	u5011
  7136   0028AE  EF5B  F014         	goto	u5010
  7137   0028B2                     u5011:
  7138   0028B2  EF65  F014         	goto	l4900
  7139   0028B6                     u5010:
  7140   0028B6                     
  7141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 80:             u
      +                          ngetc(c, fp);
  7142   0028B6  C010  F003         	movff	skipws@c,ungetc@c
  7143   0028BA  C011  F004         	movff	skipws@c+1,ungetc@c+1
  7144   0028BE  C00E  F005         	movff	skipws@fp,ungetc@fp
  7145   0028C2  EC34  F012         	call	_ungetc	;wreg free
  7146                           
  7147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 81:             b
      +                          reak;
  7148   0028C6  EF77  F014         	goto	l1268
  7149   0028CA                     l4900:
  7150                           
  7151                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
  7152   0028CA  C00E  F005         	movff	skipws@fp,fgetc@fp
  7153   0028CE  EC4A  F00D         	call	_fgetc	;wreg free
  7154   0028D2  C005  F010         	movff	?_fgetc,skipws@c
  7155   0028D6  C006  F011         	movff	?_fgetc+1,skipws@c+1
  7156   0028DA  2810               	incf	skipws@c^0,w,c
  7157   0028DC  E106               	bnz	u5021
  7158   0028DE  2811               	incf	(skipws@c+1)^0,w,c
  7159   0028E0  A4D8               	btfss	status,2,c
  7160   0028E2  EF75  F014         	goto	u5021
  7161   0028E6  EF77  F014         	goto	u5020
  7162   0028EA                     u5021:
  7163   0028EA  EF45  F014         	goto	l4894
  7164   0028EE                     u5020:
  7165   0028EE                     l1268:
  7166   0028EE  0012               	return		;funcret
  7167   0028F0                     __end_of_skipws:
  7168                           	callstack 0
  7169                           
  7170 ;; *************** function _ungetc *****************
  7171 ;; Defined at:
  7172 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_getc.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  c               2    2[COMRAM] int 
  7175 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7176 ;;		 -> sscanf@f(11), 
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;		None
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  2    2[COMRAM] int 
  7181 ;; Registers used:
  7182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7188 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7192 ;;Total ram usage:        5 bytes
  7193 ;; Hardware stack levels used: 1
  7194 ;; Hardware stack levels required when called: 1
  7195 ;; This function calls:
  7196 ;;		Nothing
  7197 ;; This function is called by:
  7198 ;;		_skipws
  7199 ;;		_atox
  7200 ;;		_vfsfcnvrt
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text32
  7205   002468                     __ptext32:
  7206                           	callstack 0
  7207   002468                     _ungetc:
  7208                           	callstack 22
  7209   002468  2803               	incf	ungetc@c^0,w,c
  7210   00246A  E106               	bnz	u4921
  7211   00246C  2804               	incf	(ungetc@c+1)^0,w,c
  7212   00246E  A4D8               	btfss	status,2,c
  7213   002470  EF3C  F012         	goto	u4921
  7214   002474  EF3E  F012         	goto	u4920
  7215   002478                     u4921:
  7216   002478  EF40  F012         	goto	l4856
  7217   00247C                     u4920:
  7218   00247C  EF81  F012         	goto	l1421
  7219   002480                     l4856:
  7220   002480  5005               	movf	ungetc@fp^0,w,c
  7221   002482  A4D8               	btfss	status,2,c
  7222   002484  EF46  F012         	goto	u4931
  7223   002488  EF48  F012         	goto	u4930
  7224   00248C                     u4931:
  7225   00248C  EF5B  F012         	goto	l4864
  7226   002490                     u4930:
  7227   002490  0E03               	movlw	3
  7228   002492  0100               	movlb	0	; () banked
  7229   002494  19C8               	xorwf	___ungetcnt& (0+255),w,b
  7230   002496  B4D8               	btfsc	status,2,c
  7231   002498  EF50  F012         	goto	u4941
  7232   00249C  EF52  F012         	goto	u4940
  7233   0024A0                     u4941:
  7234   0024A0  EF81  F012         	goto	l1421
  7235   0024A4                     u4940:
  7236   0024A4                     
  7237                           ; BSR set to: 0
  7238   0024A4  51C8               	movf	___ungetcnt& (0+255),w,b
  7239   0024A6  0FAD               	addlw	low ___ungetbuf
  7240   0024A8  6ED9               	movwf	fsr2l,c
  7241   0024AA  6ADA               	clrf	fsr2h,c
  7242   0024AC  C003  FFDF         	movff	ungetc@c,indf2
  7243   0024B0                     
  7244                           ; BSR set to: 0
  7245   0024B0  2BC8               	incf	___ungetcnt& (0+255),f,b
  7246   0024B2  EF81  F012         	goto	l1421
  7247   0024B6                     l4864:
  7248   0024B6  5005               	movf	ungetc@fp^0,w,c
  7249   0024B8  6ED9               	movwf	fsr2l,c
  7250   0024BA  6ADA               	clrf	fsr2h,c
  7251   0024BC  0E07               	movlw	7
  7252   0024BE  26D9               	addwf	fsr2l,f,c
  7253   0024C0  0E03               	movlw	3
  7254   0024C2  18DE               	xorwf	postinc2,w,c
  7255   0024C4  10DE               	iorwf	postinc2,w,c
  7256   0024C6  B4D8               	btfsc	status,2,c
  7257   0024C8  EF68  F012         	goto	u4951
  7258   0024CC  EF6A  F012         	goto	u4950
  7259   0024D0                     u4951:
  7260   0024D0  EF81  F012         	goto	l1421
  7261   0024D4                     u4950:
  7262   0024D4  5005               	movf	ungetc@fp^0,w,c
  7263   0024D6  6ED9               	movwf	fsr2l,c
  7264   0024D8  6ADA               	clrf	fsr2h,c
  7265   0024DA  0E07               	movlw	7
  7266   0024DC  26D9               	addwf	fsr2l,f,c
  7267   0024DE  50DF               	movf	indf2,w,c
  7268   0024E0  6E06               	movwf	??_ungetc^0,c
  7269   0024E2  5005               	movf	ungetc@fp^0,w,c
  7270   0024E4  2406               	addwf	??_ungetc^0,w,c
  7271   0024E6  6ED9               	movwf	fsr2l,c
  7272   0024E8  6ADA               	clrf	fsr2h,c
  7273   0024EA  0E04               	movlw	4
  7274   0024EC  26D9               	addwf	fsr2l,f,c
  7275   0024EE  C003  FFDF         	movff	ungetc@c,indf2
  7276   0024F2  5005               	movf	ungetc@fp^0,w,c
  7277   0024F4  6ED9               	movwf	fsr2l,c
  7278   0024F6  6ADA               	clrf	fsr2h,c
  7279   0024F8  0E07               	movlw	7
  7280   0024FA  26D9               	addwf	fsr2l,f,c
  7281   0024FC  2ADE               	incf	postinc2,f,c
  7282   0024FE  0E00               	movlw	0
  7283   002500  22DD               	addwfc	postdec2,f,c
  7284   002502                     l1421:
  7285   002502  0012               	return		;funcret
  7286   002504                     __end_of_ungetc:
  7287                           	callstack 0
  7288                           
  7289 ;; *************** function _fgetc *****************
  7290 ;; Defined at:
  7291 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_getc.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7294 ;;		 -> sscanf@f(11), 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  c               2   11[COMRAM] int 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  2    4[COMRAM] int 
  7299 ;; Registers used:
  7300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7308 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7309 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7310 ;;Total ram usage:        9 bytes
  7311 ;; Hardware stack levels used: 1
  7312 ;; Hardware stack levels required when called: 2
  7313 ;; This function calls:
  7314 ;;		_getch
  7315 ;; This function is called by:
  7316 ;;		_skipws
  7317 ;;		_atox
  7318 ;;		_vfsfcnvrt
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text33
  7323   001A94                     __ptext33:
  7324                           	callstack 0
  7325   001A94                     _fgetc:
  7326                           	callstack 20
  7327   001A94  5005               	movf	fgetc@fp^0,w,c
  7328   001A96  A4D8               	btfss	status,2,c
  7329   001A98  EF50  F00D         	goto	u4961
  7330   001A9C  EF52  F00D         	goto	u4960
  7331   001AA0                     u4961:
  7332   001AA0  EF6F  F00D         	goto	l4876
  7333   001AA4                     u4960:
  7334   001AA4  0100               	movlb	0	; () banked
  7335   001AA6  51C8               	movf	___ungetcnt& (0+255),w,b
  7336   001AA8  A4D8               	btfss	status,2,c
  7337   001AAA  EF59  F00D         	goto	u4971
  7338   001AAE  EF5B  F00D         	goto	u4970
  7339   001AB2                     u4971:
  7340   001AB2  EF63  F00D         	goto	l4874
  7341   001AB6                     u4970:
  7342   001AB6                     
  7343                           ; BSR set to: 0
  7344   001AB6  ECF3  F016         	call	_getch	;wreg free
  7345   001ABA  C003  F00C         	movff	?_getch,fgetc@c
  7346   001ABE  C004  F00D         	movff	?_getch+1,fgetc@c+1
  7347   001AC2  EFC6  F00D         	goto	l4888
  7348   001AC6                     l4874:
  7349                           
  7350                           ; BSR set to: 0
  7351   001AC6  07C8               	decf	___ungetcnt& (0+255),f,b
  7352   001AC8  51C8               	movf	___ungetcnt& (0+255),w,b
  7353   001ACA  0FAD               	addlw	low ___ungetbuf
  7354   001ACC  6ED9               	movwf	fsr2l,c
  7355   001ACE  6ADA               	clrf	fsr2h,c
  7356   001AD0  50DF               	movf	indf2,w,c
  7357   001AD2  6E07               	movwf	??_fgetc^0,c
  7358   001AD4  5007               	movf	??_fgetc^0,w,c
  7359   001AD6  6E0C               	movwf	fgetc@c^0,c
  7360   001AD8  6A0D               	clrf	(fgetc@c+1)^0,c
  7361   001ADA  EFC6  F00D         	goto	l4888
  7362   001ADE                     l4876:
  7363   001ADE  5005               	movf	fgetc@fp^0,w,c
  7364   001AE0  6ED9               	movwf	fsr2l,c
  7365   001AE2  6ADA               	clrf	fsr2h,c
  7366   001AE4  0E07               	movlw	7
  7367   001AE6  26D9               	addwf	fsr2l,f,c
  7368   001AE8  50DE               	movf	postinc2,w,c
  7369   001AEA  10DE               	iorwf	postinc2,w,c
  7370   001AEC  B4D8               	btfsc	status,2,c
  7371   001AEE  EF7B  F00D         	goto	u4981
  7372   001AF2  EF7D  F00D         	goto	u4980
  7373   001AF6                     u4981:
  7374   001AF6  EF96  F00D         	goto	l4880
  7375   001AFA                     u4980:
  7376   001AFA  5005               	movf	fgetc@fp^0,w,c
  7377   001AFC  6ED9               	movwf	fsr2l,c
  7378   001AFE  6ADA               	clrf	fsr2h,c
  7379   001B00  0E07               	movlw	7
  7380   001B02  26D9               	addwf	fsr2l,f,c
  7381   001B04  06DE               	decf	postinc2,f,c
  7382   001B06  0E00               	movlw	0
  7383   001B08  5ADD               	subwfb	postdec2,f,c
  7384   001B0A  CFDE F007          	movff	postinc2,??_fgetc
  7385   001B0E  CFDD F008          	movff	postdec2,??_fgetc+1
  7386   001B12  5005               	movf	fgetc@fp^0,w,c
  7387   001B14  2407               	addwf	??_fgetc^0,w,c
  7388   001B16  6ED9               	movwf	fsr2l,c
  7389   001B18  6ADA               	clrf	fsr2h,c
  7390   001B1A  0E04               	movlw	4
  7391   001B1C  26D9               	addwf	fsr2l,f,c
  7392   001B1E  50DF               	movf	indf2,w,c
  7393   001B20  6E09               	movwf	(??_fgetc+2)^0,c
  7394   001B22  5009               	movf	(??_fgetc+2)^0,w,c
  7395   001B24  6E0C               	movwf	fgetc@c^0,c
  7396   001B26  6A0D               	clrf	(fgetc@c+1)^0,c
  7397   001B28  EFC6  F00D         	goto	l4888
  7398   001B2C                     l4880:
  7399   001B2C  5005               	movf	fgetc@fp^0,w,c
  7400   001B2E  6ED9               	movwf	fsr2l,c
  7401   001B30  6ADA               	clrf	fsr2h,c
  7402   001B32  0E02               	movlw	2
  7403   001B34  26D9               	addwf	fsr2l,f,c
  7404   001B36  CFDE F007          	movff	postinc2,??_fgetc
  7405   001B3A  CFDD F008          	movff	postdec2,??_fgetc+1
  7406   001B3E  5005               	movf	fgetc@fp^0,w,c
  7407   001B40  6ED9               	movwf	fsr2l,c
  7408   001B42  6ADA               	clrf	fsr2h,c
  7409   001B44  CFDE F009          	movff	postinc2,??_fgetc+2
  7410   001B48  CFDD F00A          	movff	postdec2,??_fgetc+3
  7411   001B4C  5007               	movf	??_fgetc^0,w,c
  7412   001B4E  2409               	addwf	(??_fgetc+2)^0,w,c
  7413   001B50  6ED9               	movwf	fsr2l,c
  7414   001B52  5008               	movf	(??_fgetc+1)^0,w,c
  7415   001B54  200A               	addwfc	(??_fgetc+3)^0,w,c
  7416   001B56  6EDA               	movwf	fsr2h,c
  7417   001B58  50DF               	movf	indf2,w,c
  7418   001B5A  6E0B               	movwf	(??_fgetc+4)^0,c
  7419   001B5C  500B               	movf	(??_fgetc+4)^0,w,c
  7420   001B5E  6E0C               	movwf	fgetc@c^0,c
  7421   001B60  6A0D               	clrf	(fgetc@c+1)^0,c
  7422   001B62  500C               	movf	fgetc@c^0,w,c
  7423   001B64  100D               	iorwf	(fgetc@c+1)^0,w,c
  7424   001B66  A4D8               	btfss	status,2,c
  7425   001B68  EFB8  F00D         	goto	u4991
  7426   001B6C  EFBA  F00D         	goto	u4990
  7427   001B70                     u4991:
  7428   001B70  EFBE  F00D         	goto	l4886
  7429   001B74                     u4990:
  7430   001B74  680C               	setf	fgetc@c^0,c
  7431   001B76  680D               	setf	(fgetc@c+1)^0,c
  7432   001B78  EFC6  F00D         	goto	l4888
  7433   001B7C                     l4886:
  7434   001B7C  5005               	movf	fgetc@fp^0,w,c
  7435   001B7E  6ED9               	movwf	fsr2l,c
  7436   001B80  6ADA               	clrf	fsr2h,c
  7437   001B82  0E02               	movlw	2
  7438   001B84  26D9               	addwf	fsr2l,f,c
  7439   001B86  2ADE               	incf	postinc2,f,c
  7440   001B88  0E00               	movlw	0
  7441   001B8A  22DD               	addwfc	postdec2,f,c
  7442   001B8C                     l4888:
  7443   001B8C  C00C  F005         	movff	fgetc@c,?_fgetc
  7444   001B90  C00D  F006         	movff	fgetc@c+1,?_fgetc+1
  7445   001B94  0012               	return		;funcret
  7446   001B96                     __end_of_fgetc:
  7447                           	callstack 0
  7448                           
  7449 ;; *************** function _getch *****************
  7450 ;; Defined at:
  7451 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\getch.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;		None
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  2    2[COMRAM] int 
  7458 ;; Registers used:
  7459 ;;		None
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;Total ram usage:        2 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; Hardware stack levels required when called: 1
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		_fgetc
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text34
  7480   002DE6                     __ptext34:
  7481                           	callstack 0
  7482   002DE6                     _getch:
  7483                           	callstack 20
  7484   002DE6  6803               	setf	?_getch^0,c
  7485   002DE8  6804               	setf	(?_getch+1)^0,c
  7486   002DEA  0012               	return		;funcret
  7487   002DEC                     __end_of_getch:
  7488                           	callstack 0
  7489                           
  7490 ;; *************** function ___strtoxll *****************
  7491 ;; Defined at:
  7492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__strtoxll.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  s               2   26[COMRAM] PTR const unsigned char 
  7495 ;;		 -> dbuf@doscan$F2232(32), 
  7496 ;;  endptr          1   28[COMRAM] PTR PTR unsigned char 
  7497 ;;		 -> atox@ep(2), 
  7498 ;;  base            2   29[COMRAM] int 
  7499 ;;  is_signed       1   31[COMRAM] unsigned char 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  a               8   63[COMRAM] unsigned long long 
  7502 ;;  limit           8   54[COMRAM] unsigned long long 
  7503 ;;  prev_a          8   42[COMRAM] unsigned long long 
  7504 ;;  cp              2   71[COMRAM] PTR const unsigned char 
  7505 ;;		 -> dbuf@doscan$F2232(32), 
  7506 ;;  c               1   73[COMRAM] unsigned char 
  7507 ;;  flags           1   62[COMRAM] enum E246
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  8   26[COMRAM] unsigned long long 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7517 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;      Locals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;Total ram usage:       48 bytes
  7522 ;; Hardware stack levels used: 1
  7523 ;; Hardware stack levels required when called: 2
  7524 ;; This function calls:
  7525 ;;		___omul
  7526 ;; This function is called by:
  7527 ;;		_atox
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text35
  7532   0000E4                     __ptext35:
  7533                           	callstack 0
  7534   0000E4                     ___strtoxll:
  7535                           	callstack 20
  7536   0000E4  6A3F               	clrf	___strtoxll@flags^0,c
  7537   0000E6  EE20  F040         	lfsr	2,___strtoxll@a
  7538   0000EA  0E07               	movlw	7
  7539   0000EC                     u5031:
  7540   0000EC  6ADE               	clrf	postinc2,c
  7541   0000EE  06E8               	decf	wreg,f,c
  7542   0000F0  E2FD               	bc	u5031
  7543   0000F2  C01B  F048         	movff	___strtoxll@s,___strtoxll@cp
  7544   0000F6  C01C  F049         	movff	___strtoxll@s+1,___strtoxll@cp+1
  7545   0000FA  BE1F               	btfsc	(___strtoxll@base+1)^0,7,c
  7546   0000FC  EF8B  F000         	goto	u5040
  7547   000100  501F               	movf	(___strtoxll@base+1)^0,w,c
  7548   000102  E107               	bnz	u5041
  7549   000104  0E25               	movlw	37
  7550   000106  5C1E               	subwf	___strtoxll@base^0,w,c
  7551   000108  B0D8               	btfsc	status,0,c
  7552   00010A  EF89  F000         	goto	u5041
  7553   00010E  EF8B  F000         	goto	u5040
  7554   000112                     u5041:
  7555   000112  EF94  F000         	goto	l4912
  7556   000116                     u5040:
  7557   000116  041E               	decf	___strtoxll@base^0,w,c
  7558   000118  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7559   00011A  A4D8               	btfss	status,2,c
  7560   00011C  EF92  F000         	goto	u5051
  7561   000120  EF94  F000         	goto	u5050
  7562   000124                     u5051:
  7563   000124  EF9B  F000         	goto	l4914
  7564   000128                     u5050:
  7565   000128                     l4912:
  7566   000128  0E00               	movlw	0
  7567   00012A  0100               	movlb	0	; () banked
  7568   00012C  6FB7               	movwf	(_errno+1)& (0+255),b
  7569   00012E  0E16               	movlw	22
  7570   000130  6FB6               	movwf	_errno& (0+255),b
  7571   000132  EFFC  F002         	goto	l5018
  7572   000136                     l4914:
  7573   000136  5048               	movf	___strtoxll@cp^0,w,c
  7574   000138  1049               	iorwf	(___strtoxll@cp+1)^0,w,c
  7575   00013A  B4D8               	btfsc	status,2,c
  7576   00013C  EFA2  F000         	goto	u5061
  7577   000140  EFA4  F000         	goto	u5060
  7578   000144                     u5061:
  7579   000144  EFFC  F002         	goto	l5018
  7580   000148                     u5060:
  7581   000148  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7582   00014C  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7583   000150  50DF               	movf	indf2,w,c
  7584   000152  A4D8               	btfss	status,2,c
  7585   000154  EFAE  F000         	goto	u5071
  7586   000158  EFB0  F000         	goto	u5070
  7587   00015C                     u5071:
  7588   00015C  EFB2  F000         	goto	l4918
  7589   000160                     u5070:
  7590   000160  EFFC  F002         	goto	l5018
  7591   000164                     l4918:
  7592   000164  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7593   000168  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7594   00016C  50DF               	movf	indf2,w,c
  7595   00016E  6E4A               	movwf	___strtoxll@c^0,c
  7596   000170  EFC2  F000         	goto	l4922
  7597   000174                     l4920:
  7598   000174  4A48               	infsnz	___strtoxll@cp^0,f,c
  7599   000176  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7600   000178  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7601   00017C  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7602   000180  50DF               	movf	indf2,w,c
  7603   000182  6E4A               	movwf	___strtoxll@c^0,c
  7604   000184                     l4922:
  7605   000184  0E20               	movlw	32
  7606   000186  184A               	xorwf	___strtoxll@c^0,w,c
  7607   000188  B4D8               	btfsc	status,2,c
  7608   00018A  EFC9  F000         	goto	u5081
  7609   00018E  EFCB  F000         	goto	u5080
  7610   000192                     u5081:
  7611   000192  EFBA  F000         	goto	l4920
  7612   000196                     u5080:
  7613   000196  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7614   00019A  0EF7               	movlw	247
  7615   00019C  2623               	addwf	??___strtoxll^0,f,c
  7616   00019E  0E04               	movlw	4
  7617   0001A0  6423               	cpfsgt	??___strtoxll^0,c
  7618   0001A2  EFD5  F000         	goto	u5091
  7619   0001A6  EFD7  F000         	goto	u5090
  7620   0001AA                     u5091:
  7621   0001AA  EFBA  F000         	goto	l4920
  7622   0001AE                     u5090:
  7623   0001AE  0E2D               	movlw	45
  7624   0001B0  184A               	xorwf	___strtoxll@c^0,w,c
  7625   0001B2  A4D8               	btfss	status,2,c
  7626   0001B4  EFDE  F000         	goto	u5101
  7627   0001B8  EFE0  F000         	goto	u5100
  7628   0001BC                     u5101:
  7629   0001BC  EFEB  F000         	goto	l4932
  7630   0001C0                     u5100:
  7631   0001C0  803F               	bsf	___strtoxll@flags^0,0,c
  7632   0001C2                     l4930:
  7633   0001C2  4A48               	infsnz	___strtoxll@cp^0,f,c
  7634   0001C4  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7635   0001C6  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7636   0001CA  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7637   0001CE  50DF               	movf	indf2,w,c
  7638   0001D0  6E4A               	movwf	___strtoxll@c^0,c
  7639   0001D2  EFF6  F000         	goto	l4936
  7640   0001D6                     l4932:
  7641   0001D6  0E2B               	movlw	43
  7642   0001D8  184A               	xorwf	___strtoxll@c^0,w,c
  7643   0001DA  A4D8               	btfss	status,2,c
  7644   0001DC  EFF2  F000         	goto	u5111
  7645   0001E0  EFF4  F000         	goto	u5110
  7646   0001E4                     u5111:
  7647   0001E4  EFF6  F000         	goto	l4936
  7648   0001E8                     u5110:
  7649   0001E8  EFE1  F000         	goto	l4930
  7650   0001EC                     l4936:
  7651   0001EC  0E30               	movlw	48
  7652   0001EE  184A               	xorwf	___strtoxll@c^0,w,c
  7653   0001F0  A4D8               	btfss	status,2,c
  7654   0001F2  EFFD  F000         	goto	u5121
  7655   0001F6  EFFF  F000         	goto	u5120
  7656   0001FA                     u5121:
  7657   0001FA  EF98  F001         	goto	l4972
  7658   0001FE                     u5120:
  7659   0001FE  4A48               	infsnz	___strtoxll@cp^0,f,c
  7660   000200  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7661   000202  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7662   000206  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7663   00020A  50DF               	movf	indf2,w,c
  7664   00020C  6E4A               	movwf	___strtoxll@c^0,c
  7665   00020E  501E               	movf	___strtoxll@base^0,w,c
  7666   000210  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7667   000212  B4D8               	btfsc	status,2,c
  7668   000214  EF0E  F001         	goto	u5131
  7669   000218  EF10  F001         	goto	u5130
  7670   00021C                     u5131:
  7671   00021C  EF1A  F001         	goto	l4944
  7672   000220                     u5130:
  7673   000220  0E10               	movlw	16
  7674   000222  181E               	xorwf	___strtoxll@base^0,w,c
  7675   000224  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7676   000226  A4D8               	btfss	status,2,c
  7677   000228  EF18  F001         	goto	u5141
  7678   00022C  EF1A  F001         	goto	u5140
  7679   000230                     u5141:
  7680   000230  EF8A  F001         	goto	l4966
  7681   000234                     u5140:
  7682   000234                     l4944:
  7683   000234  0E78               	movlw	120
  7684   000236  184A               	xorwf	___strtoxll@c^0,w,c
  7685   000238  B4D8               	btfsc	status,2,c
  7686   00023A  EF21  F001         	goto	u5151
  7687   00023E  EF23  F001         	goto	u5150
  7688   000242                     u5151:
  7689   000242  EF2C  F001         	goto	l4948
  7690   000246                     u5150:
  7691   000246  0E58               	movlw	88
  7692   000248  184A               	xorwf	___strtoxll@c^0,w,c
  7693   00024A  A4D8               	btfss	status,2,c
  7694   00024C  EF2A  F001         	goto	u5161
  7695   000250  EF2C  F001         	goto	u5160
  7696   000254                     u5161:
  7697   000254  EF8A  F001         	goto	l4966
  7698   000258                     u5160:
  7699   000258                     l4948:
  7700   000258  0E00               	movlw	0
  7701   00025A  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7702   00025C  0E10               	movlw	16
  7703   00025E  6E1E               	movwf	___strtoxll@base^0,c
  7704   000260  4A48               	infsnz	___strtoxll@cp^0,f,c
  7705   000262  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7706   000264  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7707   000268  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7708   00026C  50DF               	movf	indf2,w,c
  7709   00026E  6E4A               	movwf	___strtoxll@c^0,c
  7710   000270  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7711   000274  0E20               	movlw	32
  7712   000276  1223               	iorwf	??___strtoxll^0,f,c
  7713   000278  0E9F               	movlw	159
  7714   00027A  2623               	addwf	??___strtoxll^0,f,c
  7715   00027C  0E1A               	movlw	26
  7716   00027E  6023               	cpfslt	??___strtoxll^0,c
  7717   000280  EF44  F001         	goto	u5171
  7718   000284  EF46  F001         	goto	u5170
  7719   000288                     u5171:
  7720   000288  EF6A  F001         	goto	l4960
  7721   00028C                     u5170:
  7722   00028C  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7723   000290  0E9F               	movlw	159
  7724   000292  2623               	addwf	??___strtoxll^0,f,c
  7725   000294  0E19               	movlw	25
  7726   000296  6423               	cpfsgt	??___strtoxll^0,c
  7727   000298  EF50  F001         	goto	u5181
  7728   00029C  EF52  F001         	goto	u5180
  7729   0002A0                     u5181:
  7730   0002A0  EF57  F001         	goto	l4958
  7731   0002A4                     u5180:
  7732   0002A4  C04A  F033         	movff	___strtoxll@c,___strtoxll$2282
  7733   0002A8  6A34               	clrf	(___strtoxll$2282+1)^0,c
  7734   0002AA  EF5E  F001         	goto	l1368
  7735   0002AE                     l4958:
  7736   0002AE  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7737   0002B2  0E5F               	movlw	95
  7738   0002B4  1623               	andwf	??___strtoxll^0,f,c
  7739   0002B6  5023               	movf	??___strtoxll^0,w,c
  7740   0002B8  6E33               	movwf	___strtoxll$2282^0,c
  7741   0002BA  6A34               	clrf	(___strtoxll$2282+1)^0,c
  7742   0002BC                     l1368:
  7743   0002BC  C033  F023         	movff	___strtoxll$2282,??___strtoxll
  7744   0002C0  0EC9               	movlw	201
  7745   0002C2  2623               	addwf	??___strtoxll^0,f,c
  7746   0002C4  0E10               	movlw	16
  7747   0002C6  6023               	cpfslt	??___strtoxll^0,c
  7748   0002C8  EF68  F001         	goto	u5191
  7749   0002CC  EF6A  F001         	goto	u5190
  7750   0002D0                     u5191:
  7751   0002D0  EF84  F001         	goto	l4964
  7752   0002D4                     u5190:
  7753   0002D4                     l4960:
  7754   0002D4  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7755   0002D8  0E20               	movlw	32
  7756   0002DA  1223               	iorwf	??___strtoxll^0,f,c
  7757   0002DC  0E9F               	movlw	159
  7758   0002DE  2623               	addwf	??___strtoxll^0,f,c
  7759   0002E0  0E19               	movlw	25
  7760   0002E2  6423               	cpfsgt	??___strtoxll^0,c
  7761   0002E4  EF76  F001         	goto	u5201
  7762   0002E8  EF78  F001         	goto	u5200
  7763   0002EC                     u5201:
  7764   0002EC  EF98  F001         	goto	l4972
  7765   0002F0                     u5200:
  7766   0002F0  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7767   0002F4  0ED0               	movlw	208
  7768   0002F6  2623               	addwf	??___strtoxll^0,f,c
  7769   0002F8  0E09               	movlw	9
  7770   0002FA  6423               	cpfsgt	??___strtoxll^0,c
  7771   0002FC  EF82  F001         	goto	u5211
  7772   000300  EF84  F001         	goto	u5210
  7773   000304                     u5211:
  7774   000304  EF98  F001         	goto	l4972
  7775   000308                     u5210:
  7776   000308                     l4964:
  7777   000308  843F               	bsf	___strtoxll@flags^0,2,c
  7778   00030A  0648               	decf	___strtoxll@cp^0,f,c
  7779   00030C  A0D8               	btfss	status,0,c
  7780   00030E  0649               	decf	(___strtoxll@cp+1)^0,f,c
  7781   000310  EFFC  F002         	goto	l5018
  7782   000314                     l4966:
  7783   000314  843F               	bsf	___strtoxll@flags^0,2,c
  7784   000316  501E               	movf	___strtoxll@base^0,w,c
  7785   000318  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7786   00031A  A4D8               	btfss	status,2,c
  7787   00031C  EF92  F001         	goto	u5221
  7788   000320  EF94  F001         	goto	u5220
  7789   000324                     u5221:
  7790   000324  EF98  F001         	goto	l4972
  7791   000328                     u5220:
  7792   000328  0E00               	movlw	0
  7793   00032A  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7794   00032C  0E08               	movlw	8
  7795   00032E  6E1E               	movwf	___strtoxll@base^0,c
  7796   000330                     l4972:
  7797   000330  501E               	movf	___strtoxll@base^0,w,c
  7798   000332  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7799   000334  A4D8               	btfss	status,2,c
  7800   000336  EF9F  F001         	goto	u5231
  7801   00033A  EFA1  F001         	goto	u5230
  7802   00033E                     u5231:
  7803   00033E  EFA5  F001         	goto	l1371
  7804   000342                     u5230:
  7805   000342  0E00               	movlw	0
  7806   000344  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7807   000346  0E0A               	movlw	10
  7808   000348  6E1E               	movwf	___strtoxll@base^0,c
  7809   00034A                     l1371:
  7810   00034A  5020               	movf	___strtoxll@is_signed^0,w,c
  7811   00034C  B4D8               	btfsc	status,2,c
  7812   00034E  EFAB  F001         	goto	u5241
  7813   000352  EFAD  F001         	goto	u5240
  7814   000356                     u5241:
  7815   000356  EFD8  F001         	goto	l1372
  7816   00035A                     u5240:
  7817   00035A  B03F               	btfsc	___strtoxll@flags^0,0,c
  7818   00035C  EFB2  F001         	goto	u5251
  7819   000360  EFB4  F001         	goto	u5250
  7820   000364                     u5251:
  7821   000364  EFC6  F001         	goto	l4980
  7822   000368                     u5250:
  7823   000368  0EFF               	movlw	255
  7824   00036A  6E37               	movwf	___strtoxll@limit^0,c
  7825   00036C  0EFF               	movlw	255
  7826   00036E  6E38               	movwf	(___strtoxll@limit+1)^0,c
  7827   000370  0EFF               	movlw	255
  7828   000372  6E39               	movwf	(___strtoxll@limit+2)^0,c
  7829   000374  0EFF               	movlw	255
  7830   000376  6E3A               	movwf	(___strtoxll@limit+3)^0,c
  7831   000378  0EFF               	movlw	255
  7832   00037A  6E3B               	movwf	(___strtoxll@limit+4)^0,c
  7833   00037C  0EFF               	movlw	255
  7834   00037E  6E3C               	movwf	(___strtoxll@limit+5)^0,c
  7835   000380  0EFF               	movlw	255
  7836   000382  6E3D               	movwf	(___strtoxll@limit+6)^0,c
  7837   000384  0E7F               	movlw	127
  7838   000386  6E3E               	movwf	(___strtoxll@limit+7)^0,c
  7839   000388  EFE0  F001         	goto	l1378
  7840   00038C                     l4980:
  7841   00038C  0E00               	movlw	0
  7842   00038E  6E37               	movwf	___strtoxll@limit^0,c
  7843   000390  0E00               	movlw	0
  7844   000392  6E38               	movwf	(___strtoxll@limit+1)^0,c
  7845   000394  0E00               	movlw	0
  7846   000396  6E39               	movwf	(___strtoxll@limit+2)^0,c
  7847   000398  0E00               	movlw	0
  7848   00039A  6E3A               	movwf	(___strtoxll@limit+3)^0,c
  7849   00039C  0E00               	movlw	0
  7850   00039E  6E3B               	movwf	(___strtoxll@limit+4)^0,c
  7851   0003A0  0E00               	movlw	0
  7852   0003A2  6E3C               	movwf	(___strtoxll@limit+5)^0,c
  7853   0003A4  0E00               	movlw	0
  7854   0003A6  6E3D               	movwf	(___strtoxll@limit+6)^0,c
  7855   0003A8  0E80               	movlw	128
  7856   0003AA  6E3E               	movwf	(___strtoxll@limit+7)^0,c
  7857   0003AC  EFE0  F001         	goto	l1378
  7858   0003B0                     l1372:
  7859   0003B0  6837               	setf	___strtoxll@limit^0,c
  7860   0003B2  6838               	setf	(___strtoxll@limit+1)^0,c
  7861   0003B4  6839               	setf	(___strtoxll@limit+2)^0,c
  7862   0003B6  683A               	setf	(___strtoxll@limit+3)^0,c
  7863   0003B8  683B               	setf	(___strtoxll@limit+4)^0,c
  7864   0003BA  683C               	setf	(___strtoxll@limit+5)^0,c
  7865   0003BC  683D               	setf	(___strtoxll@limit+6)^0,c
  7866   0003BE  683E               	setf	(___strtoxll@limit+7)^0,c
  7867   0003C0                     l1378:
  7868   0003C0  C040  F02B         	movff	___strtoxll@a,___strtoxll@prev_a
  7869   0003C4  C041  F02C         	movff	___strtoxll@a+1,___strtoxll@prev_a+1
  7870   0003C8  C042  F02D         	movff	___strtoxll@a+2,___strtoxll@prev_a+2
  7871   0003CC  C043  F02E         	movff	___strtoxll@a+3,___strtoxll@prev_a+3
  7872   0003D0  C044  F02F         	movff	___strtoxll@a+4,___strtoxll@prev_a+4
  7873   0003D4  C045  F030         	movff	___strtoxll@a+5,___strtoxll@prev_a+5
  7874   0003D8  C046  F031         	movff	___strtoxll@a+6,___strtoxll@prev_a+6
  7875   0003DC  C047  F032         	movff	___strtoxll@a+7,___strtoxll@prev_a+7
  7876   0003E0  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7877   0003E4  0E20               	movlw	32
  7878   0003E6  1223               	iorwf	??___strtoxll^0,f,c
  7879   0003E8  0E9F               	movlw	159
  7880   0003EA  2623               	addwf	??___strtoxll^0,f,c
  7881   0003EC  0E1A               	movlw	26
  7882   0003EE  6023               	cpfslt	??___strtoxll^0,c
  7883   0003F0  EFFC  F001         	goto	u5261
  7884   0003F4  EFFE  F001         	goto	u5260
  7885   0003F8                     u5261:
  7886   0003F8  EF1B  F002         	goto	l4990
  7887   0003FC                     u5260:
  7888   0003FC  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7889   000400  0E9F               	movlw	159
  7890   000402  2623               	addwf	??___strtoxll^0,f,c
  7891   000404  0E19               	movlw	25
  7892   000406  6423               	cpfsgt	??___strtoxll^0,c
  7893   000408  EF08  F002         	goto	u5271
  7894   00040C  EF0A  F002         	goto	u5270
  7895   000410                     u5271:
  7896   000410  EF0F  F002         	goto	l4988
  7897   000414                     u5270:
  7898   000414  C04A  F035         	movff	___strtoxll@c,___strtoxll$2283
  7899   000418  6A36               	clrf	(___strtoxll$2283+1)^0,c
  7900   00041A  EF16  F002         	goto	l1383
  7901   00041E                     l4988:
  7902   00041E  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7903   000422  0E5F               	movlw	95
  7904   000424  1623               	andwf	??___strtoxll^0,f,c
  7905   000426  5023               	movf	??___strtoxll^0,w,c
  7906   000428  6E35               	movwf	___strtoxll$2283^0,c
  7907   00042A  6A36               	clrf	(___strtoxll$2283+1)^0,c
  7908   00042C                     l1383:
  7909   00042C  5035               	movf	___strtoxll$2283^0,w,c
  7910   00042E  0FC9               	addlw	201
  7911   000430  6E4A               	movwf	___strtoxll@c^0,c
  7912   000432  EF29  F002         	goto	l4994
  7913   000436                     l4990:
  7914   000436  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7915   00043A  0ED0               	movlw	208
  7916   00043C  2623               	addwf	??___strtoxll^0,f,c
  7917   00043E  0E0A               	movlw	10
  7918   000440  6023               	cpfslt	??___strtoxll^0,c
  7919   000442  EF25  F002         	goto	u5281
  7920   000446  EF27  F002         	goto	u5280
  7921   00044A                     u5281:
  7922   00044A  EFE2  F002         	goto	l5014
  7923   00044E                     u5280:
  7924   00044E  0E30               	movlw	48
  7925   000450  5E4A               	subwf	___strtoxll@c^0,f,c
  7926   000452                     l4994:
  7927   000452  504A               	movf	___strtoxll@c^0,w,c
  7928   000454  6E23               	movwf	??___strtoxll^0,c
  7929   000456  6A24               	clrf	(??___strtoxll+1)^0,c
  7930   000458  501E               	movf	___strtoxll@base^0,w,c
  7931   00045A  5C23               	subwf	??___strtoxll^0,w,c
  7932   00045C  5024               	movf	(??___strtoxll+1)^0,w,c
  7933   00045E  0A80               	xorlw	128
  7934   000460  6E25               	movwf	(??___strtoxll+2)^0,c
  7935   000462  501F               	movf	(___strtoxll@base+1)^0,w,c
  7936   000464  0A80               	xorlw	128
  7937   000466  5825               	subwfb	(??___strtoxll+2)^0,w,c
  7938   000468  A0D8               	btfss	status,0,c
  7939   00046A  EF39  F002         	goto	u5291
  7940   00046E  EF3B  F002         	goto	u5290
  7941   000472                     u5291:
  7942   000472  EF3D  F002         	goto	l1388
  7943   000476                     u5290:
  7944   000476  EFE2  F002         	goto	l5014
  7945   00047A                     l1388:
  7946   00047A  B23F               	btfsc	___strtoxll@flags^0,1,c
  7947   00047C  EF42  F002         	goto	u5301
  7948   000480  EF44  F002         	goto	u5300
  7949   000484                     u5301:
  7950   000484  EFD7  F002         	goto	l5010
  7951   000488                     u5300:
  7952   000488  C01E  F003         	movff	___strtoxll@base,___omul@multiplier
  7953   00048C  C01F  F004         	movff	___strtoxll@base+1,___omul@multiplier+1
  7954   000490  0E00               	movlw	0
  7955   000492  BE04               	btfsc	(___omul@multiplier+1)^0,7,c
  7956   000494  0EFF               	movlw	-1
  7957   000496  6E05               	movwf	(___omul@multiplier+2)^0,c
  7958   000498  6E06               	movwf	(___omul@multiplier+3)^0,c
  7959   00049A  6E07               	movwf	(___omul@multiplier+4)^0,c
  7960   00049C  6E08               	movwf	(___omul@multiplier+5)^0,c
  7961   00049E  6E09               	movwf	(___omul@multiplier+6)^0,c
  7962   0004A0  6E0A               	movwf	(___omul@multiplier+7)^0,c
  7963   0004A2  C040  F00B         	movff	___strtoxll@a,___omul@multiplicand
  7964   0004A6  C041  F00C         	movff	___strtoxll@a+1,___omul@multiplicand+1
  7965   0004AA  C042  F00D         	movff	___strtoxll@a+2,___omul@multiplicand+2
  7966   0004AE  C043  F00E         	movff	___strtoxll@a+3,___omul@multiplicand+3
  7967   0004B2  C044  F00F         	movff	___strtoxll@a+4,___omul@multiplicand+4
  7968   0004B6  C045  F010         	movff	___strtoxll@a+5,___omul@multiplicand+5
  7969   0004BA  C046  F011         	movff	___strtoxll@a+6,___omul@multiplicand+6
  7970   0004BE  C047  F012         	movff	___strtoxll@a+7,___omul@multiplicand+7
  7971   0004C2  ECE5  F011         	call	___omul	;wreg free
  7972   0004C6  C003  F023         	movff	?___omul,??___strtoxll
  7973   0004CA  C004  F024         	movff	?___omul+1,??___strtoxll+1
  7974   0004CE  C005  F025         	movff	?___omul+2,??___strtoxll+2
  7975   0004D2  C006  F026         	movff	?___omul+3,??___strtoxll+3
  7976   0004D6  C007  F027         	movff	?___omul+4,??___strtoxll+4
  7977   0004DA  C008  F028         	movff	?___omul+5,??___strtoxll+5
  7978   0004DE  C009  F029         	movff	?___omul+6,??___strtoxll+6
  7979   0004E2  C00A  F02A         	movff	?___omul+7,??___strtoxll+7
  7980   0004E6  504A               	movf	___strtoxll@c^0,w,c
  7981   0004E8  2423               	addwf	??___strtoxll^0,w,c
  7982   0004EA  6E40               	movwf	___strtoxll@a^0,c
  7983   0004EC  0E00               	movlw	0
  7984   0004EE  2024               	addwfc	(??___strtoxll+1)^0,w,c
  7985   0004F0  6E41               	movwf	(___strtoxll@a+1)^0,c
  7986   0004F2  0E00               	movlw	0
  7987   0004F4  2025               	addwfc	(??___strtoxll+2)^0,w,c
  7988   0004F6  6E42               	movwf	(___strtoxll@a+2)^0,c
  7989   0004F8  0E00               	movlw	0
  7990   0004FA  2026               	addwfc	(??___strtoxll+3)^0,w,c
  7991   0004FC  6E43               	movwf	(___strtoxll@a+3)^0,c
  7992   0004FE  0E00               	movlw	0
  7993   000500  2027               	addwfc	(??___strtoxll+4)^0,w,c
  7994   000502  6E44               	movwf	(___strtoxll@a+4)^0,c
  7995   000504  0E00               	movlw	0
  7996   000506  2028               	addwfc	(??___strtoxll+5)^0,w,c
  7997   000508  6E45               	movwf	(___strtoxll@a+5)^0,c
  7998   00050A  0E00               	movlw	0
  7999   00050C  2029               	addwfc	(??___strtoxll+6)^0,w,c
  8000   00050E  6E46               	movwf	(___strtoxll@a+6)^0,c
  8001   000510  0E00               	movlw	0
  8002   000512  202A               	addwfc	(??___strtoxll+7)^0,w,c
  8003   000514  6E47               	movwf	(___strtoxll@a+7)^0,c
  8004   000516  502B               	movf	___strtoxll@prev_a^0,w,c
  8005   000518  5C40               	subwf	___strtoxll@a^0,w,c
  8006   00051A  502C               	movf	(___strtoxll@prev_a+1)^0,w,c
  8007   00051C  5841               	subwfb	(___strtoxll@a+1)^0,w,c
  8008   00051E  502D               	movf	(___strtoxll@prev_a+2)^0,w,c
  8009   000520  5842               	subwfb	(___strtoxll@a+2)^0,w,c
  8010   000522  502E               	movf	(___strtoxll@prev_a+3)^0,w,c
  8011   000524  5843               	subwfb	(___strtoxll@a+3)^0,w,c
  8012   000526  502F               	movf	(___strtoxll@prev_a+4)^0,w,c
  8013   000528  5844               	subwfb	(___strtoxll@a+4)^0,w,c
  8014   00052A  5030               	movf	(___strtoxll@prev_a+5)^0,w,c
  8015   00052C  5845               	subwfb	(___strtoxll@a+5)^0,w,c
  8016   00052E  5031               	movf	(___strtoxll@prev_a+6)^0,w,c
  8017   000530  5846               	subwfb	(___strtoxll@a+6)^0,w,c
  8018   000532  5032               	movf	(___strtoxll@prev_a+7)^0,w,c
  8019   000534  5847               	subwfb	(___strtoxll@a+7)^0,w,c
  8020   000536  A0D8               	btfss	status,0,c
  8021   000538  EFA0  F002         	goto	u5311
  8022   00053C  EFA2  F002         	goto	u5310
  8023   000540                     u5311:
  8024   000540  EFC1  F002         	goto	l1392
  8025   000544                     u5310:
  8026   000544  5020               	movf	___strtoxll@is_signed^0,w,c
  8027   000546  B4D8               	btfsc	status,2,c
  8028   000548  EFA8  F002         	goto	u5321
  8029   00054C  EFAA  F002         	goto	u5320
  8030   000550                     u5321:
  8031   000550  EFD7  F002         	goto	l5010
  8032   000554                     u5320:
  8033   000554  5040               	movf	___strtoxll@a^0,w,c
  8034   000556  5C37               	subwf	___strtoxll@limit^0,w,c
  8035   000558  5041               	movf	(___strtoxll@a+1)^0,w,c
  8036   00055A  5838               	subwfb	(___strtoxll@limit+1)^0,w,c
  8037   00055C  5042               	movf	(___strtoxll@a+2)^0,w,c
  8038   00055E  5839               	subwfb	(___strtoxll@limit+2)^0,w,c
  8039   000560  5043               	movf	(___strtoxll@a+3)^0,w,c
  8040   000562  583A               	subwfb	(___strtoxll@limit+3)^0,w,c
  8041   000564  5044               	movf	(___strtoxll@a+4)^0,w,c
  8042   000566  583B               	subwfb	(___strtoxll@limit+4)^0,w,c
  8043   000568  5045               	movf	(___strtoxll@a+5)^0,w,c
  8044   00056A  583C               	subwfb	(___strtoxll@limit+5)^0,w,c
  8045   00056C  5046               	movf	(___strtoxll@a+6)^0,w,c
  8046   00056E  583D               	subwfb	(___strtoxll@limit+6)^0,w,c
  8047   000570  5047               	movf	(___strtoxll@a+7)^0,w,c
  8048   000572  583E               	subwfb	(___strtoxll@limit+7)^0,w,c
  8049   000574  B0D8               	btfsc	status,0,c
  8050   000576  EFBF  F002         	goto	u5331
  8051   00057A  EFC1  F002         	goto	u5330
  8052   00057E                     u5331:
  8053   00057E  EFD7  F002         	goto	l5010
  8054   000582                     u5330:
  8055   000582                     l1392:
  8056   000582  C037  F040         	movff	___strtoxll@limit,___strtoxll@a
  8057   000586  C038  F041         	movff	___strtoxll@limit+1,___strtoxll@a+1
  8058   00058A  C039  F042         	movff	___strtoxll@limit+2,___strtoxll@a+2
  8059   00058E  C03A  F043         	movff	___strtoxll@limit+3,___strtoxll@a+3
  8060   000592  C03B  F044         	movff	___strtoxll@limit+4,___strtoxll@a+4
  8061   000596  C03C  F045         	movff	___strtoxll@limit+5,___strtoxll@a+5
  8062   00059A  C03D  F046         	movff	___strtoxll@limit+6,___strtoxll@a+6
  8063   00059E  C03E  F047         	movff	___strtoxll@limit+7,___strtoxll@a+7
  8064   0005A2  0E00               	movlw	0
  8065   0005A4  0100               	movlb	0	; () banked
  8066   0005A6  6FB7               	movwf	(_errno+1)& (0+255),b
  8067   0005A8  0E22               	movlw	34
  8068   0005AA  6FB6               	movwf	_errno& (0+255),b
  8069   0005AC                     
  8070                           ; BSR set to: 0
  8071   0005AC  823F               	bsf	___strtoxll@flags^0,1,c
  8072   0005AE                     l5010:
  8073   0005AE  4A48               	infsnz	___strtoxll@cp^0,f,c
  8074   0005B0  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  8075   0005B2  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8076   0005B6  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8077   0005BA  50DF               	movf	indf2,w,c
  8078   0005BC  6E4A               	movwf	___strtoxll@c^0,c
  8079   0005BE  843F               	bsf	___strtoxll@flags^0,2,c
  8080   0005C0  EFE0  F001         	goto	l1378
  8081   0005C4                     l5014:
  8082   0005C4  503F               	movf	___strtoxll@flags^0,w,c
  8083   0005C6  0B03               	andlw	3
  8084   0005C8  06E8               	decf	wreg,f,c
  8085   0005CA  A4D8               	btfss	status,2,c
  8086   0005CC  EFEA  F002         	goto	u5341
  8087   0005D0  EFEC  F002         	goto	u5340
  8088   0005D4                     u5341:
  8089   0005D4  EFFC  F002         	goto	l5018
  8090   0005D8                     u5340:
  8091   0005D8  1E47               	comf	(___strtoxll@a+7)^0,f,c
  8092   0005DA  1E46               	comf	(___strtoxll@a+6)^0,f,c
  8093   0005DC  1E45               	comf	(___strtoxll@a+5)^0,f,c
  8094   0005DE  1E44               	comf	(___strtoxll@a+4)^0,f,c
  8095   0005E0  1E43               	comf	(___strtoxll@a+3)^0,f,c
  8096   0005E2  1E42               	comf	(___strtoxll@a+2)^0,f,c
  8097   0005E4  1E41               	comf	(___strtoxll@a+1)^0,f,c
  8098   0005E6  6C40               	negf	___strtoxll@a^0,c
  8099   0005E8  0E00               	movlw	0
  8100   0005EA  2241               	addwfc	(___strtoxll@a+1)^0,f,c
  8101   0005EC  2242               	addwfc	(___strtoxll@a+2)^0,f,c
  8102   0005EE  2243               	addwfc	(___strtoxll@a+3)^0,f,c
  8103   0005F0  2244               	addwfc	(___strtoxll@a+4)^0,f,c
  8104   0005F2  2245               	addwfc	(___strtoxll@a+5)^0,f,c
  8105   0005F4  2246               	addwfc	(___strtoxll@a+6)^0,f,c
  8106   0005F6  2247               	addwfc	(___strtoxll@a+7)^0,f,c
  8107   0005F8                     l5018:
  8108   0005F8  501D               	movf	___strtoxll@endptr^0,w,c
  8109   0005FA  B4D8               	btfsc	status,2,c
  8110   0005FC  EF02  F003         	goto	u5351
  8111   000600  EF04  F003         	goto	u5350
  8112   000604                     u5351:
  8113   000604  EF16  F003         	goto	l5026
  8114   000608                     u5350:
  8115   000608  B43F               	btfsc	___strtoxll@flags^0,2,c
  8116   00060A  EF09  F003         	goto	u5361
  8117   00060E  EF0B  F003         	goto	u5360
  8118   000612                     u5361:
  8119   000612  EF0F  F003         	goto	l5024
  8120   000616                     u5360:
  8121   000616  C01B  F048         	movff	___strtoxll@s,___strtoxll@cp
  8122   00061A  C01C  F049         	movff	___strtoxll@s+1,___strtoxll@cp+1
  8123   00061E                     l5024:
  8124   00061E  501D               	movf	___strtoxll@endptr^0,w,c
  8125   000620  6ED9               	movwf	fsr2l,c
  8126   000622  6ADA               	clrf	fsr2h,c
  8127   000624  C048  FFDE         	movff	___strtoxll@cp,postinc2
  8128   000628  C049  FFDD         	movff	___strtoxll@cp+1,postdec2
  8129   00062C                     l5026:
  8130   00062C  C040  F01B         	movff	___strtoxll@a,?___strtoxll
  8131   000630  C041  F01C         	movff	___strtoxll@a+1,?___strtoxll+1
  8132   000634  C042  F01D         	movff	___strtoxll@a+2,?___strtoxll+2
  8133   000638  C043  F01E         	movff	___strtoxll@a+3,?___strtoxll+3
  8134   00063C  C044  F01F         	movff	___strtoxll@a+4,?___strtoxll+4
  8135   000640  C045  F020         	movff	___strtoxll@a+5,?___strtoxll+5
  8136   000644  C046  F021         	movff	___strtoxll@a+6,?___strtoxll+6
  8137   000648  C047  F022         	movff	___strtoxll@a+7,?___strtoxll+7
  8138   00064C  0012               	return		;funcret
  8139   00064E                     __end_of___strtoxll:
  8140                           	callstack 0
  8141                           
  8142 ;; *************** function ___omul *****************
  8143 ;; Defined at:
  8144 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul64.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;  multiplier      8    2[COMRAM] unsigned long long 
  8147 ;;  multiplicand    8   10[COMRAM] unsigned long long 
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;  product         8   18[COMRAM] unsigned long long 
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  8    2[COMRAM] unsigned long long 
  8152 ;; Registers used:
  8153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8159 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8162 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;Total ram usage:       24 bytes
  8164 ;; Hardware stack levels used: 1
  8165 ;; Hardware stack levels required when called: 1
  8166 ;; This function calls:
  8167 ;;		Nothing
  8168 ;; This function is called by:
  8169 ;;		___strtoxll
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text36
  8174   0023CA                     __ptext36:
  8175                           	callstack 0
  8176   0023CA                     ___omul:
  8177                           	callstack 20
  8178   0023CA  EE20  F013         	lfsr	2,___omul@product
  8179   0023CE  0E07               	movlw	7
  8180   0023D0                     u4891:
  8181   0023D0  6ADE               	clrf	postinc2,c
  8182   0023D2  06E8               	decf	wreg,f,c
  8183   0023D4  E2FD               	bc	u4891
  8184   0023D6                     l4844:
  8185   0023D6  A003               	btfss	___omul@multiplier^0,0,c
  8186   0023D8  EFF0  F011         	goto	u4901
  8187   0023DC  EFF2  F011         	goto	u4900
  8188   0023E0                     u4901:
  8189   0023E0  EF02  F012         	goto	l4848
  8190   0023E4                     u4900:
  8191   0023E4  500B               	movf	___omul@multiplicand^0,w,c
  8192   0023E6  2613               	addwf	___omul@product^0,f,c
  8193   0023E8  500C               	movf	(___omul@multiplicand+1)^0,w,c
  8194   0023EA  2214               	addwfc	(___omul@product+1)^0,f,c
  8195   0023EC  500D               	movf	(___omul@multiplicand+2)^0,w,c
  8196   0023EE  2215               	addwfc	(___omul@product+2)^0,f,c
  8197   0023F0  500E               	movf	(___omul@multiplicand+3)^0,w,c
  8198   0023F2  2216               	addwfc	(___omul@product+3)^0,f,c
  8199   0023F4  500F               	movf	(___omul@multiplicand+4)^0,w,c
  8200   0023F6  2217               	addwfc	(___omul@product+4)^0,f,c
  8201   0023F8  5010               	movf	(___omul@multiplicand+5)^0,w,c
  8202   0023FA  2218               	addwfc	(___omul@product+5)^0,f,c
  8203   0023FC  5011               	movf	(___omul@multiplicand+6)^0,w,c
  8204   0023FE  2219               	addwfc	(___omul@product+6)^0,f,c
  8205   002400  5012               	movf	(___omul@multiplicand+7)^0,w,c
  8206   002402  221A               	addwfc	(___omul@product+7)^0,f,c
  8207   002404                     l4848:
  8208   002404  90D8               	bcf	status,0,c
  8209   002406  360B               	rlcf	___omul@multiplicand^0,f,c
  8210   002408  360C               	rlcf	(___omul@multiplicand+1)^0,f,c
  8211   00240A  360D               	rlcf	(___omul@multiplicand+2)^0,f,c
  8212   00240C  360E               	rlcf	(___omul@multiplicand+3)^0,f,c
  8213   00240E  360F               	rlcf	(___omul@multiplicand+4)^0,f,c
  8214   002410  3610               	rlcf	(___omul@multiplicand+5)^0,f,c
  8215   002412  3611               	rlcf	(___omul@multiplicand+6)^0,f,c
  8216   002414  3612               	rlcf	(___omul@multiplicand+7)^0,f,c
  8217   002416  90D8               	bcf	status,0,c
  8218   002418  320A               	rrcf	(___omul@multiplier+7)^0,f,c
  8219   00241A  3209               	rrcf	(___omul@multiplier+6)^0,f,c
  8220   00241C  3208               	rrcf	(___omul@multiplier+5)^0,f,c
  8221   00241E  3207               	rrcf	(___omul@multiplier+4)^0,f,c
  8222   002420  3206               	rrcf	(___omul@multiplier+3)^0,f,c
  8223   002422  3205               	rrcf	(___omul@multiplier+2)^0,f,c
  8224   002424  3204               	rrcf	(___omul@multiplier+1)^0,f,c
  8225   002426  3203               	rrcf	___omul@multiplier^0,f,c
  8226   002428  5003               	movf	___omul@multiplier^0,w,c
  8227   00242A  1004               	iorwf	(___omul@multiplier+1)^0,w,c
  8228   00242C  1005               	iorwf	(___omul@multiplier+2)^0,w,c
  8229   00242E  1006               	iorwf	(___omul@multiplier+3)^0,w,c
  8230   002430  1007               	iorwf	(___omul@multiplier+4)^0,w,c
  8231   002432  1008               	iorwf	(___omul@multiplier+5)^0,w,c
  8232   002434  1009               	iorwf	(___omul@multiplier+6)^0,w,c
  8233   002436  100A               	iorwf	(___omul@multiplier+7)^0,w,c
  8234   002438  A4D8               	btfss	status,2,c
  8235   00243A  EF21  F012         	goto	u4911
  8236   00243E  EF23  F012         	goto	u4910
  8237   002442                     u4911:
  8238   002442  EFEB  F011         	goto	l4844
  8239   002446                     u4910:
  8240   002446  C013  F003         	movff	___omul@product,?___omul
  8241   00244A  C014  F004         	movff	___omul@product+1,?___omul+1
  8242   00244E  C015  F005         	movff	___omul@product+2,?___omul+2
  8243   002452  C016  F006         	movff	___omul@product+3,?___omul+3
  8244   002456  C017  F007         	movff	___omul@product+4,?___omul+4
  8245   00245A  C018  F008         	movff	___omul@product+5,?___omul+5
  8246   00245E  C019  F009         	movff	___omul@product+6,?___omul+6
  8247   002462  C01A  F00A         	movff	___omul@product+7,?___omul+7
  8248   002466  0012               	return		;funcret
  8249   002468                     __end_of___omul:
  8250                           	callstack 0
  8251                           
  8252 ;; *************** function _display_system_info *****************
  8253 ;; Defined at:
  8254 ;;		line 652 in file "OBCII_PIC18F46K22.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  1    wreg      void 
  8261 ;; Registers used:
  8262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;Total ram usage:        0 bytes
  8273 ;; Hardware stack levels used: 1
  8274 ;; Hardware stack levels required when called: 6
  8275 ;; This function calls:
  8276 ;;		_LCD_cursor_set
  8277 ;;		_print_ELMVer
  8278 ;;		_print_SAEVer
  8279 ;; This function is called by:
  8280 ;;		_main_menu
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text37
  8285   002D02                     __ptext37:
  8286                           	callstack 0
  8287   002D02                     _display_system_info:
  8288                           	callstack 23
  8289   002D02                     
  8290                           ;OBCII_PIC18F46K22.c: 653:     LCD_cursor_set(1,4);
  8291   002D02  0E04               	movlw	4
  8292   002D04  6E06               	movwf	LCD_cursor_set@column^0,c
  8293   002D06  0E01               	movlw	1
  8294   002D08  ECDD  F014         	call	_LCD_cursor_set
  8295                           
  8296                           ;OBCII_PIC18F46K22.c: 654:     LCD_cursor_set(2,5);
  8297   002D0C  0E05               	movlw	5
  8298   002D0E  6E06               	movwf	LCD_cursor_set@column^0,c
  8299   002D10  0E02               	movlw	2
  8300   002D12  ECDD  F014         	call	_LCD_cursor_set
  8301   002D16                     
  8302                           ;OBCII_PIC18F46K22.c: 655:     print_ELMVer();
  8303   002D16  ECCA  F012         	call	_print_ELMVer	;wreg free
  8304   002D1A                     
  8305                           ;OBCII_PIC18F46K22.c: 656:     print_SAEVer();
  8306   002D1A  EC82  F012         	call	_print_SAEVer	;wreg free
  8307   002D1E  0012               	return		;funcret
  8308   002D20                     __end_of_display_system_info:
  8309                           	callstack 0
  8310                           
  8311 ;; *************** function _print_SAEVer *****************
  8312 ;; Defined at:
  8313 ;;		line 625 in file "OBCII_PIC18F46K22.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;		None
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  1    wreg      void 
  8320 ;; Registers used:
  8321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;Total ram usage:        1 bytes
  8332 ;; Hardware stack levels used: 1
  8333 ;; Hardware stack levels required when called: 5
  8334 ;; This function calls:
  8335 ;;		_LCD_clear
  8336 ;;		_LCD_cursor_set
  8337 ;;		_LCD_write_string
  8338 ;;		_UART1_SendString
  8339 ;;		_clear_parsing_notif
  8340 ;;		_display_mm
  8341 ;;		_parsing_notif
  8342 ;; This function is called by:
  8343 ;;		_display_system_info
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           	psect	text38
  8348   002504                     __ptext38:
  8349                           	callstack 0
  8350   002504                     _print_SAEVer:
  8351                           	callstack 23
  8352   002504                     
  8353                           ;OBCII_PIC18F46K22.c: 626:     UART1_SendString("ATDP\r");
  8354   002504  0EAD               	movlw	low STR_36
  8355   002506  6E04               	movwf	UART1_SendString@string^0,c
  8356   002508  0EFF               	movlw	high STR_36
  8357   00250A  6E05               	movwf	(UART1_SendString@string+1)^0,c
  8358   00250C  EC3C  F015         	call	_UART1_SendString	;wreg free
  8359                           
  8360                           ;OBCII_PIC18F46K22.c: 628:     while(!message_complete) {
  8361   002510  EFAB  F012         	goto	l5802
  8362   002514                     l315:
  8363                           
  8364                           ;OBCII_PIC18F46K22.c: 630:         if (PORTCbits.RC5 == 0) {
  8365   002514  BA82               	btfsc	130,5,c	;volatile
  8366   002516  EF8F  F012         	goto	u6531
  8367   00251A  EF91  F012         	goto	u6530
  8368   00251E                     u6531:
  8369   00251E  EFA9  F012         	goto	l5800
  8370   002522                     u6530:
  8371   002522                     
  8372                           ;OBCII_PIC18F46K22.c: 631:             _delay((unsigned long)((20)*(16000000/4000.0)));
  8373   002522  0E68               	movlw	104
  8374   002524  6E0B               	movwf	??_print_SAEVer^0,c
  8375   002526  0EE4               	movlw	228
  8376   002528                     u7177:
  8377   002528  2EE8               	decfsz	wreg,f,c
  8378   00252A  D7FE               	bra	u7177
  8379   00252C  2E0B               	decfsz	??_print_SAEVer^0,f,c
  8380   00252E  D7FC               	bra	u7177
  8381   002530  D000               	nop2	
  8382   002532                     
  8383                           ;OBCII_PIC18F46K22.c: 632:             if (PORTCbits.RC5 == 0) {
  8384   002532  BA82               	btfsc	130,5,c	;volatile
  8385   002534  EF9E  F012         	goto	u6541
  8386   002538  EFA0  F012         	goto	u6540
  8387   00253C                     u6541:
  8388   00253C  EFA9  F012         	goto	l5800
  8389   002540                     u6540:
  8390   002540                     
  8391                           ;OBCII_PIC18F46K22.c: 633:                 LCD_clear();
  8392   002540  EC90  F016         	call	_LCD_clear	;wreg free
  8393   002544                     
  8394                           ;OBCII_PIC18F46K22.c: 634:                 display_mm();
  8395   002544  EC41  F016         	call	_display_mm	;wreg free
  8396   002548                     
  8397                           ;OBCII_PIC18F46K22.c: 635:                 menu_sel = -1;
  8398   002548  0100               	movlb	0	; () banked
  8399   00254A  69EC               	setf	_menu_sel& (0+255),b
  8400   00254C  69ED               	setf	(_menu_sel+1)& (0+255),b
  8401                           
  8402                           ;OBCII_PIC18F46K22.c: 636:                 break;
  8403   00254E  EFB3  F012         	goto	l5804
  8404   002552                     l5800:
  8405                           
  8406                           ;OBCII_PIC18F46K22.c: 639:         parsing_notif();
  8407   002552  EC9F  F016         	call	_parsing_notif	;wreg free
  8408   002556                     l5802:
  8409                           
  8410                           ;OBCII_PIC18F46K22.c: 628:     while(!message_complete) {
  8411   002556  505B               	movf	_message_complete^0,w,c	;volatile
  8412   002558  B4D8               	btfsc	status,2,c
  8413   00255A  EFB1  F012         	goto	u6551
  8414   00255E  EFB3  F012         	goto	u6550
  8415   002562                     u6551:
  8416   002562  EF8A  F012         	goto	l315
  8417   002566                     u6550:
  8418   002566                     l5804:
  8419                           
  8420                           ;OBCII_PIC18F46K22.c: 641:     clear_parsing_notif();
  8421   002566  ECAB  F016         	call	_clear_parsing_notif	;wreg free
  8422   00256A                     
  8423                           ;OBCII_PIC18F46K22.c: 643:     LCD_cursor_set(2,1);
  8424   00256A  0E01               	movlw	1
  8425   00256C  6E06               	movwf	LCD_cursor_set@column^0,c
  8426   00256E  0E02               	movlw	2
  8427   002570  ECDD  F014         	call	_LCD_cursor_set
  8428   002574                     
  8429                           ;OBCII_PIC18F46K22.c: 644:     LCD_write_string("P:");
  8430   002574  0EF4               	movlw	low STR_37
  8431   002576  6E06               	movwf	LCD_write_string@string^0,c
  8432   002578  0EFF               	movlw	high STR_37
  8433   00257A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  8434   00257C  EC97  F013         	call	_LCD_write_string	;wreg free
  8435   002580                     
  8436                           ;OBCII_PIC18F46K22.c: 645:     LCD_write_string(buffer);
  8437   002580  0E00               	movlw	low _buffer
  8438   002582  6E06               	movwf	LCD_write_string@string^0,c
  8439   002584  0E02               	movlw	high _buffer
  8440   002586  6E07               	movwf	(LCD_write_string@string+1)^0,c
  8441   002588  EC97  F013         	call	_LCD_write_string	;wreg free
  8442   00258C                     
  8443                           ;OBCII_PIC18F46K22.c: 648:     buffer_count = 0;
  8444   00258C  0100               	movlb	0	; () banked
  8445   00258E  6BCB               	clrf	_buffer_count& (0+255),b
  8446   002590                     
  8447                           ; BSR set to: 0
  8448                           ;OBCII_PIC18F46K22.c: 649:     message_complete = 0;
  8449   002590  6A5B               	clrf	_message_complete^0,c	;volatile
  8450   002592                     
  8451                           ; BSR set to: 0
  8452   002592  0012               	return		;funcret
  8453   002594                     __end_of_print_SAEVer:
  8454                           	callstack 0
  8455                           
  8456 ;; *************** function _print_ELMVer *****************
  8457 ;; Defined at:
  8458 ;;		line 597 in file "OBCII_PIC18F46K22.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;		None
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1    wreg      void 
  8465 ;; Registers used:
  8466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8476 ;;Total ram usage:        1 bytes
  8477 ;; Hardware stack levels used: 1
  8478 ;; Hardware stack levels required when called: 5
  8479 ;; This function calls:
  8480 ;;		_LCD_clear
  8481 ;;		_LCD_cursor_set
  8482 ;;		_LCD_write_string
  8483 ;;		_UART1_SendString
  8484 ;;		_clear_parsing_notif
  8485 ;;		_display_mm
  8486 ;;		_parsing_notif
  8487 ;; This function is called by:
  8488 ;;		_display_system_info
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           	psect	text39
  8493   002594                     __ptext39:
  8494                           	callstack 0
  8495   002594                     _print_ELMVer:
  8496                           	callstack 23
  8497   002594                     
  8498                           ;OBCII_PIC18F46K22.c: 599:     UART1_SendString("ATI\r");
  8499   002594  0ED7               	movlw	low STR_5
  8500   002596  6E04               	movwf	UART1_SendString@string^0,c
  8501   002598  0EFF               	movlw	high STR_5
  8502   00259A  6E05               	movwf	(UART1_SendString@string+1)^0,c
  8503   00259C  EC3C  F015         	call	_UART1_SendString	;wreg free
  8504                           
  8505                           ;OBCII_PIC18F46K22.c: 601:     while(!message_complete) {
  8506   0025A0  EFF3  F012         	goto	l5774
  8507   0025A4                     l307:
  8508                           
  8509                           ;OBCII_PIC18F46K22.c: 603:         if (PORTCbits.RC5 == 0) {
  8510   0025A4  BA82               	btfsc	130,5,c	;volatile
  8511   0025A6  EFD7  F012         	goto	u6501
  8512   0025AA  EFD9  F012         	goto	u6500
  8513   0025AE                     u6501:
  8514   0025AE  EFF1  F012         	goto	l5772
  8515   0025B2                     u6500:
  8516   0025B2                     
  8517                           ;OBCII_PIC18F46K22.c: 604:             _delay((unsigned long)((20)*(16000000/4000.0)));
  8518   0025B2  0E68               	movlw	104
  8519   0025B4  6E0B               	movwf	??_print_ELMVer^0,c
  8520   0025B6  0EE4               	movlw	228
  8521   0025B8                     u7187:
  8522   0025B8  2EE8               	decfsz	wreg,f,c
  8523   0025BA  D7FE               	bra	u7187
  8524   0025BC  2E0B               	decfsz	??_print_ELMVer^0,f,c
  8525   0025BE  D7FC               	bra	u7187
  8526   0025C0  D000               	nop2	
  8527   0025C2                     
  8528                           ;OBCII_PIC18F46K22.c: 605:             if (PORTCbits.RC5 == 0) {
  8529   0025C2  BA82               	btfsc	130,5,c	;volatile
  8530   0025C4  EFE6  F012         	goto	u6511
  8531   0025C8  EFE8  F012         	goto	u6510
  8532   0025CC                     u6511:
  8533   0025CC  EFF1  F012         	goto	l5772
  8534   0025D0                     u6510:
  8535   0025D0                     
  8536                           ;OBCII_PIC18F46K22.c: 606:                 LCD_clear();
  8537   0025D0  EC90  F016         	call	_LCD_clear	;wreg free
  8538   0025D4                     
  8539                           ;OBCII_PIC18F46K22.c: 607:                 display_mm();
  8540   0025D4  EC41  F016         	call	_display_mm	;wreg free
  8541   0025D8                     
  8542                           ;OBCII_PIC18F46K22.c: 608:                 menu_sel = -1;
  8543   0025D8  0100               	movlb	0	; () banked
  8544   0025DA  69EC               	setf	_menu_sel& (0+255),b
  8545   0025DC  69ED               	setf	(_menu_sel+1)& (0+255),b
  8546                           
  8547                           ;OBCII_PIC18F46K22.c: 609:                 break;
  8548   0025DE  EFFB  F012         	goto	l5776
  8549   0025E2                     l5772:
  8550                           
  8551                           ;OBCII_PIC18F46K22.c: 612:         parsing_notif();
  8552   0025E2  EC9F  F016         	call	_parsing_notif	;wreg free
  8553   0025E6                     l5774:
  8554                           
  8555                           ;OBCII_PIC18F46K22.c: 601:     while(!message_complete) {
  8556   0025E6  505B               	movf	_message_complete^0,w,c	;volatile
  8557   0025E8  B4D8               	btfsc	status,2,c
  8558   0025EA  EFF9  F012         	goto	u6521
  8559   0025EE  EFFB  F012         	goto	u6520
  8560   0025F2                     u6521:
  8561   0025F2  EFD2  F012         	goto	l307
  8562   0025F6                     u6520:
  8563   0025F6                     l5776:
  8564                           
  8565                           ;OBCII_PIC18F46K22.c: 614:     clear_parsing_notif();
  8566   0025F6  ECAB  F016         	call	_clear_parsing_notif	;wreg free
  8567   0025FA                     
  8568                           ;OBCII_PIC18F46K22.c: 616:     LCD_cursor_set(1,1);
  8569   0025FA  0E01               	movlw	1
  8570   0025FC  6E06               	movwf	LCD_cursor_set@column^0,c
  8571   0025FE  0E01               	movlw	1
  8572   002600  ECDD  F014         	call	_LCD_cursor_set
  8573   002604                     
  8574                           ;OBCII_PIC18F46K22.c: 617:     LCD_write_string("OS:");
  8575   002604  0EE4               	movlw	low STR_35
  8576   002606  6E06               	movwf	LCD_write_string@string^0,c
  8577   002608  0EFF               	movlw	high STR_35
  8578   00260A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  8579   00260C  EC97  F013         	call	_LCD_write_string	;wreg free
  8580   002610                     
  8581                           ;OBCII_PIC18F46K22.c: 618:     LCD_write_string(buffer);
  8582   002610  0E00               	movlw	low _buffer
  8583   002612  6E06               	movwf	LCD_write_string@string^0,c
  8584   002614  0E02               	movlw	high _buffer
  8585   002616  6E07               	movwf	(LCD_write_string@string+1)^0,c
  8586   002618  EC97  F013         	call	_LCD_write_string	;wreg free
  8587   00261C                     
  8588                           ;OBCII_PIC18F46K22.c: 621:     buffer_count = 0;
  8589   00261C  0100               	movlb	0	; () banked
  8590   00261E  6BCB               	clrf	_buffer_count& (0+255),b
  8591   002620                     
  8592                           ; BSR set to: 0
  8593                           ;OBCII_PIC18F46K22.c: 622:     message_complete = 0;
  8594   002620  6A5B               	clrf	_message_complete^0,c	;volatile
  8595   002622                     
  8596                           ; BSR set to: 0
  8597   002622  0012               	return		;funcret
  8598   002624                     __end_of_print_ELMVer:
  8599                           	callstack 0
  8600                           
  8601 ;; *************** function _diagnostic_trouble_codes *****************
  8602 ;; Defined at:
  8603 ;;		line 660 in file "OBCII_PIC18F46K22.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;		None
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;  i               2   11[COMRAM] int 
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  1    wreg      void 
  8610 ;; Registers used:
  8611 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8621 ;;Total ram usage:        3 bytes
  8622 ;; Hardware stack levels used: 1
  8623 ;; Hardware stack levels required when called: 5
  8624 ;; This function calls:
  8625 ;;		_LCD_clear
  8626 ;;		_LCD_cursor_set
  8627 ;;		_LCD_write_char
  8628 ;;		_LCD_write_string
  8629 ;;		_UART1_SendString
  8630 ;;		_clear_parsing_notif
  8631 ;;		_memset
  8632 ;;		_parsing_notif
  8633 ;; This function is called by:
  8634 ;;		_main_menu
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text40
  8639   00173E                     __ptext40:
  8640                           	callstack 0
  8641   00173E                     _diagnostic_trouble_codes:
  8642                           	callstack 24
  8643   00173E                     
  8644                           ;OBCII_PIC18F46K22.c: 662:     buffer_count = 0;
  8645   00173E  0100               	movlb	0	; () banked
  8646   001740  6BCB               	clrf	_buffer_count& (0+255),b
  8647                           
  8648                           ;OBCII_PIC18F46K22.c: 663:     message_complete = 0;
  8649   001742  6A5B               	clrf	_message_complete^0,c	;volatile
  8650   001744                     
  8651                           ; BSR set to: 0
  8652                           ;OBCII_PIC18F46K22.c: 664:     memset(buffer, 0, sizeof(buffer));
  8653   001744  0E00               	movlw	low _buffer
  8654   001746  6E03               	movwf	memset@dest^0,c
  8655   001748  0E02               	movlw	high _buffer
  8656   00174A  6E04               	movwf	(memset@dest+1)^0,c
  8657   00174C  0E00               	movlw	0
  8658   00174E  6E06               	movwf	(memset@c+1)^0,c
  8659   001750  0E00               	movlw	0
  8660   001752  6E05               	movwf	memset@c^0,c
  8661   001754  0E01               	movlw	1
  8662   001756  6E08               	movwf	(memset@n+1)^0,c
  8663   001758  0E00               	movlw	0
  8664   00175A  6E07               	movwf	memset@n^0,c
  8665   00175C  EC0A  F016         	call	_memset	;wreg free
  8666   001760                     
  8667                           ;OBCII_PIC18F46K22.c: 666:     UART1_SendString("03\r");
  8668   001760  0EDC               	movlw	low STR_38
  8669   001762  6E04               	movwf	UART1_SendString@string^0,c
  8670   001764  0EFF               	movlw	high STR_38
  8671   001766  6E05               	movwf	(UART1_SendString@string+1)^0,c
  8672   001768  EC3C  F015         	call	_UART1_SendString	;wreg free
  8673                           
  8674                           ;OBCII_PIC18F46K22.c: 668:     while (!message_complete) {
  8675   00176C  EFBA  F00B         	goto	l5872
  8676   001770                     l5870:
  8677                           
  8678                           ;OBCII_PIC18F46K22.c: 669:         parsing_notif();
  8679   001770  EC9F  F016         	call	_parsing_notif	;wreg free
  8680   001774                     l5872:
  8681                           
  8682                           ;OBCII_PIC18F46K22.c: 668:     while (!message_complete) {
  8683   001774  505B               	movf	_message_complete^0,w,c	;volatile
  8684   001776  B4D8               	btfsc	status,2,c
  8685   001778  EFC0  F00B         	goto	u6611
  8686   00177C  EFC2  F00B         	goto	u6610
  8687   001780                     u6611:
  8688   001780  EFB8  F00B         	goto	l5870
  8689   001784                     u6610:
  8690   001784                     
  8691                           ;OBCII_PIC18F46K22.c: 671:     clear_parsing_notif();
  8692   001784  ECAB  F016         	call	_clear_parsing_notif	;wreg free
  8693   001788                     
  8694                           ;OBCII_PIC18F46K22.c: 673:     LCD_clear();
  8695   001788  EC90  F016         	call	_LCD_clear	;wreg free
  8696   00178C                     
  8697                           ;OBCII_PIC18F46K22.c: 674:     LCD_cursor_set(1, 1);
  8698   00178C  0E01               	movlw	1
  8699   00178E  6E06               	movwf	LCD_cursor_set@column^0,c
  8700   001790  0E01               	movlw	1
  8701   001792  ECDD  F014         	call	_LCD_cursor_set
  8702                           
  8703                           ;OBCII_PIC18F46K22.c: 675:     LCD_write_string("Raw DTC's:");
  8704   001796  0E8A               	movlw	low STR_39
  8705   001798  6E06               	movwf	LCD_write_string@string^0,c
  8706   00179A  0EFF               	movlw	high STR_39
  8707   00179C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  8708   00179E  EC97  F013         	call	_LCD_write_string	;wreg free
  8709   0017A2                     
  8710                           ;OBCII_PIC18F46K22.c: 677:     LCD_cursor_set(2, 1);
  8711   0017A2  0E01               	movlw	1
  8712   0017A4  6E06               	movwf	LCD_cursor_set@column^0,c
  8713   0017A6  0E02               	movlw	2
  8714   0017A8  ECDD  F014         	call	_LCD_cursor_set
  8715   0017AC                     
  8716                           ;OBCII_PIC18F46K22.c: 678:     for (int i = 0; i < 16 && buffer[i] != '\0'; i++) {
  8717   0017AC  0E00               	movlw	0
  8718   0017AE  6E0D               	movwf	(diagnostic_trouble_codes@i+1)^0,c
  8719   0017B0  0E00               	movlw	0
  8720   0017B2  6E0C               	movwf	diagnostic_trouble_codes@i^0,c
  8721   0017B4  EF16  F00C         	goto	l5894
  8722   0017B8                     l5884:
  8723                           
  8724                           ;OBCII_PIC18F46K22.c: 679:         if (buffer[i] == '\r' || buffer[i] == '\n' || buffer[
      +                          i] == '>') break;
  8725   0017B8  0E00               	movlw	low _buffer
  8726   0017BA  240C               	addwf	diagnostic_trouble_codes@i^0,w,c
  8727   0017BC  6ED9               	movwf	fsr2l,c
  8728   0017BE  0E02               	movlw	high _buffer
  8729   0017C0  200D               	addwfc	(diagnostic_trouble_codes@i+1)^0,w,c
  8730   0017C2  6EDA               	movwf	fsr2h,c
  8731   0017C4  0E0D               	movlw	13
  8732   0017C6  18DE               	xorwf	postinc2,w,c
  8733   0017C8  B4D8               	btfsc	status,2,c
  8734   0017CA  EFE9  F00B         	goto	u6621
  8735   0017CE  EFEB  F00B         	goto	u6620
  8736   0017D2                     u6621:
  8737   0017D2  EF32  F00C         	goto	l333
  8738   0017D6                     u6620:
  8739   0017D6  0E00               	movlw	low _buffer
  8740   0017D8  240C               	addwf	diagnostic_trouble_codes@i^0,w,c
  8741   0017DA  6ED9               	movwf	fsr2l,c
  8742   0017DC  0E02               	movlw	high _buffer
  8743   0017DE  200D               	addwfc	(diagnostic_trouble_codes@i+1)^0,w,c
  8744   0017E0  6EDA               	movwf	fsr2h,c
  8745   0017E2  0E0A               	movlw	10
  8746   0017E4  18DE               	xorwf	postinc2,w,c
  8747   0017E6  B4D8               	btfsc	status,2,c
  8748   0017E8  EFF8  F00B         	goto	u6631
  8749   0017EC  EFFA  F00B         	goto	u6630
  8750   0017F0                     u6631:
  8751   0017F0  EF32  F00C         	goto	l333
  8752   0017F4                     u6630:
  8753   0017F4  0E00               	movlw	low _buffer
  8754   0017F6  240C               	addwf	diagnostic_trouble_codes@i^0,w,c
  8755   0017F8  6ED9               	movwf	fsr2l,c
  8756   0017FA  0E02               	movlw	high _buffer
  8757   0017FC  200D               	addwfc	(diagnostic_trouble_codes@i+1)^0,w,c
  8758   0017FE  6EDA               	movwf	fsr2h,c
  8759   001800  0E3E               	movlw	62
  8760   001802  18DE               	xorwf	postinc2,w,c
  8761   001804  A4D8               	btfss	status,2,c
  8762   001806  EF07  F00C         	goto	u6641
  8763   00180A  EF09  F00C         	goto	u6640
  8764   00180E                     u6641:
  8765   00180E  EF0B  F00C         	goto	l5890
  8766   001812                     u6640:
  8767   001812  EF32  F00C         	goto	l333
  8768   001816                     l5890:
  8769                           
  8770                           ;OBCII_PIC18F46K22.c: 680:         LCD_write_char(buffer[i]);
  8771   001816  0E00               	movlw	low _buffer
  8772   001818  240C               	addwf	diagnostic_trouble_codes@i^0,w,c
  8773   00181A  6ED9               	movwf	fsr2l,c
  8774   00181C  0E02               	movlw	high _buffer
  8775   00181E  200D               	addwfc	(diagnostic_trouble_codes@i+1)^0,w,c
  8776   001820  6EDA               	movwf	fsr2h,c
  8777   001822  50DF               	movf	indf2,w,c
  8778   001824  ECEE  F016         	call	_LCD_write_char
  8779   001828                     
  8780                           ;OBCII_PIC18F46K22.c: 681:     }
  8781   001828  4A0C               	infsnz	diagnostic_trouble_codes@i^0,f,c
  8782   00182A  2A0D               	incf	(diagnostic_trouble_codes@i+1)^0,f,c
  8783   00182C                     l5894:
  8784   00182C  BE0D               	btfsc	(diagnostic_trouble_codes@i+1)^0,7,c
  8785   00182E  EF24  F00C         	goto	u6650
  8786   001832  500D               	movf	(diagnostic_trouble_codes@i+1)^0,w,c
  8787   001834  E107               	bnz	u6651
  8788   001836  0E10               	movlw	16
  8789   001838  5C0C               	subwf	diagnostic_trouble_codes@i^0,w,c
  8790   00183A  B0D8               	btfsc	status,0,c
  8791   00183C  EF22  F00C         	goto	u6651
  8792   001840  EF24  F00C         	goto	u6650
  8793   001844                     u6651:
  8794   001844  EF32  F00C         	goto	l333
  8795   001848                     u6650:
  8796   001848  0E00               	movlw	low _buffer
  8797   00184A  240C               	addwf	diagnostic_trouble_codes@i^0,w,c
  8798   00184C  6ED9               	movwf	fsr2l,c
  8799   00184E  0E02               	movlw	high _buffer
  8800   001850  200D               	addwfc	(diagnostic_trouble_codes@i+1)^0,w,c
  8801   001852  6EDA               	movwf	fsr2h,c
  8802   001854  50DF               	movf	indf2,w,c
  8803   001856  A4D8               	btfss	status,2,c
  8804   001858  EF30  F00C         	goto	u6661
  8805   00185C  EF32  F00C         	goto	u6660
  8806   001860                     u6661:
  8807   001860  EFDC  F00B         	goto	l5884
  8808   001864                     u6660:
  8809   001864                     l333:
  8810                           
  8811                           ;OBCII_PIC18F46K22.c: 683:     buffer_count = 0;
  8812   001864  0100               	movlb	0	; () banked
  8813   001866  6BCB               	clrf	_buffer_count& (0+255),b
  8814                           
  8815                           ;OBCII_PIC18F46K22.c: 684:     message_complete = 0;
  8816   001868  6A5B               	clrf	_message_complete^0,c	;volatile
  8817   00186A                     
  8818                           ; BSR set to: 0
  8819   00186A  0012               	return		;funcret
  8820   00186C                     __end_of_diagnostic_trouble_codes:
  8821                           	callstack 0
  8822                           
  8823 ;; *************** function _memset *****************
  8824 ;; Defined at:
  8825 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;  dest            2    2[COMRAM] PTR void 
  8828 ;;		 -> buffer(256), 
  8829 ;;  c               2    4[COMRAM] int 
  8830 ;;  n               2    6[COMRAM] unsigned int 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  p               2    8[COMRAM] PTR unsigned char 
  8833 ;;		 -> buffer(256), 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  2    2[COMRAM] PTR void 
  8836 ;; Registers used:
  8837 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8843 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8846 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8847 ;;Total ram usage:        8 bytes
  8848 ;; Hardware stack levels used: 1
  8849 ;; Hardware stack levels required when called: 1
  8850 ;; This function calls:
  8851 ;;		Nothing
  8852 ;; This function is called by:
  8853 ;;		_print_RPM
  8854 ;;		_diagnostic_trouble_codes
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text41
  8859   002C14                     __ptext41:
  8860                           	callstack 0
  8861   002C14                     _memset:
  8862                           	callstack 26
  8863   002C14  C003  F009         	movff	memset@dest,memset@p
  8864   002C18  C004  F00A         	movff	memset@dest+1,memset@p+1
  8865   002C1C  EF18  F016         	goto	l5536
  8866   002C20                     l5532:
  8867   002C20  C009  FFD9         	movff	memset@p,fsr2l
  8868   002C24  C00A  FFDA         	movff	memset@p+1,fsr2h
  8869   002C28  C005  FFDF         	movff	memset@c,indf2
  8870   002C2C  4A09               	infsnz	memset@p^0,f,c
  8871   002C2E  2A0A               	incf	(memset@p+1)^0,f,c
  8872   002C30                     l5536:
  8873   002C30  0607               	decf	memset@n^0,f,c
  8874   002C32  A0D8               	btfss	status,0,c
  8875   002C34  0608               	decf	(memset@n+1)^0,f,c
  8876   002C36  2807               	incf	memset@n^0,w,c
  8877   002C38  E106               	bnz	u6281
  8878   002C3A  2808               	incf	(memset@n+1)^0,w,c
  8879   002C3C  A4D8               	btfss	status,2,c
  8880   002C3E  EF23  F016         	goto	u6281
  8881   002C42  EF25  F016         	goto	u6280
  8882   002C46                     u6281:
  8883   002C46  EF10  F016         	goto	l5532
  8884   002C4A                     u6280:
  8885   002C4A  0012               	return		;funcret
  8886   002C4C                     __end_of_memset:
  8887                           	callstack 0
  8888                           
  8889 ;; *************** function _LCD_write_char *****************
  8890 ;; Defined at:
  8891 ;;		line 374 in file "LCD.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;  character       1    wreg     unsigned char 
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;  character       1    5[COMRAM] unsigned char 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      void 
  8898 ;; Registers used:
  8899 ;;		wreg, status,2, status,0, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;Total ram usage:        1 bytes
  8910 ;; Hardware stack levels used: 1
  8911 ;; Hardware stack levels required when called: 3
  8912 ;; This function calls:
  8913 ;;		_LCD_write_data
  8914 ;; This function is called by:
  8915 ;;		_diagnostic_trouble_codes
  8916 ;;		_LCD_write_float
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text42
  8921   002DDC                     __ptext42:
  8922                           	callstack 0
  8923   002DDC                     _LCD_write_char:
  8924                           	callstack 25
  8925                           
  8926                           ;incstack = 0
  8927                           ;LCD_write_char@character stored from wreg
  8928   002DDC  6E06               	movwf	LCD_write_char@character^0,c
  8929   002DDE                     
  8930                           ;LCD.c: 377:     LCD_write_data(character);
  8931   002DDE  5006               	movf	LCD_write_char@character^0,w,c
  8932   002DE0  ECCB  F00D         	call	_LCD_write_data
  8933   002DE4  0012               	return		;funcret
  8934   002DE6                     __end_of_LCD_write_char:
  8935                           	callstack 0
  8936                           
  8937 ;; *************** function _clear_diagnostic_codes *****************
  8938 ;; Defined at:
  8939 ;;		line 693 in file "OBCII_PIC18F46K22.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;		None
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;  opt_sel         2   12[COMRAM] int 
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  1    wreg      void 
  8946 ;; Registers used:
  8947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;Total ram usage:        4 bytes
  8958 ;; Hardware stack levels used: 1
  8959 ;; Hardware stack levels required when called: 5
  8960 ;; This function calls:
  8961 ;;		_LCD_clear
  8962 ;;		_LCD_configure_cursor_blink
  8963 ;;		_LCD_cursor_set
  8964 ;;		_LCD_write_string
  8965 ;;		_UART1_SendString
  8966 ;;		_clear_parsing_notif
  8967 ;;		_display_mm
  8968 ;;		_parsing_notif
  8969 ;;		_readADC
  8970 ;; This function is called by:
  8971 ;;		_main_menu
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           	psect	text43
  8976   000F22                     __ptext43:
  8977                           	callstack 0
  8978   000F22                     _clear_diagnostic_codes:
  8979                           	callstack 24
  8980   000F22                     
  8981                           ;OBCII_PIC18F46K22.c: 695:     int opt_sel = 0;
  8982   000F22  0E00               	movlw	0
  8983   000F24  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
  8984   000F26  0E00               	movlw	0
  8985   000F28  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
  8986   000F2A                     
  8987                           ;OBCII_PIC18F46K22.c: 696:     LCD_clear();
  8988   000F2A  EC90  F016         	call	_LCD_clear	;wreg free
  8989   000F2E                     
  8990                           ;OBCII_PIC18F46K22.c: 697:     LCD_cursor_set(1,1);
  8991   000F2E  0E01               	movlw	1
  8992   000F30  6E06               	movwf	LCD_cursor_set@column^0,c
  8993   000F32  0E01               	movlw	1
  8994   000F34  ECDD  F014         	call	_LCD_cursor_set
  8995   000F38                     
  8996                           ;OBCII_PIC18F46K22.c: 698:     LCD_write_string("Clear Code(s)?");
  8997   000F38  0E62               	movlw	low STR_40
  8998   000F3A  6E06               	movwf	LCD_write_string@string^0,c
  8999   000F3C  0EFF               	movlw	high STR_40
  9000   000F3E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9001   000F40  EC97  F013         	call	_LCD_write_string	;wreg free
  9002   000F44                     
  9003                           ;OBCII_PIC18F46K22.c: 699:     LCD_cursor_set(2,1);
  9004   000F44  0E01               	movlw	1
  9005   000F46  6E06               	movwf	LCD_cursor_set@column^0,c
  9006   000F48  0E02               	movlw	2
  9007   000F4A  ECDD  F014         	call	_LCD_cursor_set
  9008   000F4E                     
  9009                           ;OBCII_PIC18F46K22.c: 700:     LCD_write_string("Y/N <<<<<<<<<<<<");
  9010   000F4E  0EEF               	movlw	low STR_41
  9011   000F50  6E06               	movwf	LCD_write_string@string^0,c
  9012   000F52  0EFE               	movlw	high STR_41
  9013   000F54  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9014   000F56  EC97  F013         	call	_LCD_write_string	;wreg free
  9015   000F5A                     
  9016                           ;OBCII_PIC18F46K22.c: 701:     LCD_configure_cursor_blink(1);
  9017   000F5A  0E01               	movlw	1
  9018   000F5C  EC6E  F016         	call	_LCD_configure_cursor_blink
  9019   000F60                     l5912:
  9020                           
  9021                           ;OBCII_PIC18F46K22.c: 704:         result = readADC();
  9022   000F60  EC26  F016         	call	_readADC	;wreg free
  9023   000F64  C003  F0C6         	movff	?_readADC,_result
  9024   000F68  C004  F0C7         	movff	?_readADC+1,_result+1
  9025   000F6C                     
  9026                           ;OBCII_PIC18F46K22.c: 705:         if(result >= 0 && result <= 511){
  9027   000F6C  0E02               	movlw	2
  9028   000F6E  0100               	movlb	0	; () banked
  9029   000F70  5DC7               	subwf	(_result+1)& (0+255),w,b
  9030   000F72  B0D8               	btfsc	status,0,c
  9031   000F74  EFBE  F007         	goto	u6671
  9032   000F78  EFC0  F007         	goto	u6670
  9033   000F7C                     u6671:
  9034   000F7C  EFC9  F007         	goto	l5920
  9035   000F80                     u6670:
  9036   000F80                     
  9037                           ; BSR set to: 0
  9038                           ;OBCII_PIC18F46K22.c: 706:             opt_sel = 0;
  9039   000F80  0E00               	movlw	0
  9040   000F82  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
  9041   000F84  0E00               	movlw	0
  9042   000F86  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
  9043   000F88                     
  9044                           ; BSR set to: 0
  9045                           ;OBCII_PIC18F46K22.c: 707:             LCD_cursor_set(2,1);
  9046   000F88  0E01               	movlw	1
  9047   000F8A  6E06               	movwf	LCD_cursor_set@column^0,c
  9048   000F8C  0E02               	movlw	2
  9049   000F8E  ECDD  F014         	call	_LCD_cursor_set
  9050   000F92                     l5920:
  9051                           
  9052                           ;OBCII_PIC18F46K22.c: 710:         if(result >= 512 && result <=1023){
  9053   000F92  0E02               	movlw	2
  9054   000F94  0100               	movlb	0	; () banked
  9055   000F96  5DC7               	subwf	(_result+1)& (0+255),w,b
  9056   000F98  A0D8               	btfss	status,0,c
  9057   000F9A  EFD1  F007         	goto	u6681
  9058   000F9E  EFD3  F007         	goto	u6680
  9059   000FA2                     u6681:
  9060   000FA2  EFE5  F007         	goto	l5928
  9061   000FA6                     u6680:
  9062   000FA6                     
  9063                           ; BSR set to: 0
  9064   000FA6  0E04               	movlw	4
  9065   000FA8  5DC7               	subwf	(_result+1)& (0+255),w,b
  9066   000FAA  B0D8               	btfsc	status,0,c
  9067   000FAC  EFDA  F007         	goto	u6691
  9068   000FB0  EFDC  F007         	goto	u6690
  9069   000FB4                     u6691:
  9070   000FB4  EFE5  F007         	goto	l5928
  9071   000FB8                     u6690:
  9072   000FB8                     
  9073                           ; BSR set to: 0
  9074                           ;OBCII_PIC18F46K22.c: 711:             opt_sel = 1;
  9075   000FB8  0E00               	movlw	0
  9076   000FBA  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
  9077   000FBC  0E01               	movlw	1
  9078   000FBE  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
  9079   000FC0                     
  9080                           ; BSR set to: 0
  9081                           ;OBCII_PIC18F46K22.c: 712:             LCD_cursor_set(2,3);
  9082   000FC0  0E03               	movlw	3
  9083   000FC2  6E06               	movwf	LCD_cursor_set@column^0,c
  9084   000FC4  0E02               	movlw	2
  9085   000FC6  ECDD  F014         	call	_LCD_cursor_set
  9086   000FCA                     l5928:
  9087                           
  9088                           ;OBCII_PIC18F46K22.c: 714:             if (PORTCbits.RC5 == 0) {
  9089   000FCA  BA82               	btfsc	130,5,c	;volatile
  9090   000FCC  EFEA  F007         	goto	u6701
  9091   000FD0  EFEC  F007         	goto	u6700
  9092   000FD4                     u6701:
  9093   000FD4  EF04  F008         	goto	l342
  9094   000FD8                     u6700:
  9095   000FD8                     
  9096                           ;OBCII_PIC18F46K22.c: 715:                 _delay((unsigned long)((20)*(16000000/4000.0)
      +                          ));
  9097   000FD8  0E68               	movlw	104
  9098   000FDA  6E0B               	movwf	??_clear_diagnostic_codes^0,c
  9099   000FDC  0EE4               	movlw	228
  9100   000FDE                     u7197:
  9101   000FDE  2EE8               	decfsz	wreg,f,c
  9102   000FE0  D7FE               	bra	u7197
  9103   000FE2  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
  9104   000FE4  D7FC               	bra	u7197
  9105   000FE6  D000               	nop2	
  9106   000FE8                     
  9107                           ;OBCII_PIC18F46K22.c: 716:                 if (PORTCbits.RC5 == 0) {
  9108   000FE8  BA82               	btfsc	130,5,c	;volatile
  9109   000FEA  EFF9  F007         	goto	u6711
  9110   000FEE  EFFB  F007         	goto	u6710
  9111   000FF2                     u6711:
  9112   000FF2  EF04  F008         	goto	l342
  9113   000FF6                     u6710:
  9114   000FF6                     
  9115                           ;OBCII_PIC18F46K22.c: 717:                     LCD_clear();
  9116   000FF6  EC90  F016         	call	_LCD_clear	;wreg free
  9117   000FFA                     
  9118                           ;OBCII_PIC18F46K22.c: 718:                     display_mm();
  9119   000FFA  EC41  F016         	call	_display_mm	;wreg free
  9120   000FFE                     
  9121                           ;OBCII_PIC18F46K22.c: 719:                     menu_sel = -1;
  9122   000FFE  0100               	movlb	0	; () banked
  9123   001000  69EC               	setf	_menu_sel& (0+255),b
  9124   001002  69ED               	setf	(_menu_sel+1)& (0+255),b
  9125                           
  9126                           ;OBCII_PIC18F46K22.c: 720:                     break;
  9127   001004  EF89  F008         	goto	l356
  9128   001008                     l342:
  9129                           
  9130                           ;OBCII_PIC18F46K22.c: 724:         if (PORTBbits.RB4 == 0) {
  9131   001008  B881               	btfsc	129,4,c	;volatile
  9132   00100A  EF09  F008         	goto	u6721
  9133   00100E  EF0B  F008         	goto	u6720
  9134   001012                     u6721:
  9135   001012  EFB0  F007         	goto	l5912
  9136   001016                     u6720:
  9137   001016                     
  9138                           ;OBCII_PIC18F46K22.c: 725:             _delay((unsigned long)((20)*(16000000/4000.0)));
  9139   001016  0E68               	movlw	104
  9140   001018  6E0B               	movwf	??_clear_diagnostic_codes^0,c
  9141   00101A  0EE4               	movlw	228
  9142   00101C                     u7207:
  9143   00101C  2EE8               	decfsz	wreg,f,c
  9144   00101E  D7FE               	bra	u7207
  9145   001020  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
  9146   001022  D7FC               	bra	u7207
  9147   001024  D000               	nop2	
  9148   001026                     
  9149                           ;OBCII_PIC18F46K22.c: 726:             if (PORTBbits.RB4 == 0) {
  9150   001026  B881               	btfsc	129,4,c	;volatile
  9151   001028  EF18  F008         	goto	u6731
  9152   00102C  EF1A  F008         	goto	u6730
  9153   001030                     u6731:
  9154   001030  EFB0  F007         	goto	l5912
  9155   001034                     u6730:
  9156   001034  EF73  F008         	goto	l5978
  9157   001038                     l5946:
  9158                           
  9159                           ;OBCII_PIC18F46K22.c: 730:                     UART1_SendString("04\r");
  9160   001038  0EE0               	movlw	low STR_42
  9161   00103A  6E04               	movwf	UART1_SendString@string^0,c
  9162   00103C  0EFF               	movlw	high STR_42
  9163   00103E  6E05               	movwf	(UART1_SendString@string+1)^0,c
  9164   001040  EC3C  F015         	call	_UART1_SendString	;wreg free
  9165                           
  9166                           ;OBCII_PIC18F46K22.c: 731:                     while(!message_complete){
  9167   001044  EF26  F008         	goto	l5950
  9168   001048                     l5948:
  9169                           
  9170                           ;OBCII_PIC18F46K22.c: 733:                         parsing_notif();
  9171   001048  EC9F  F016         	call	_parsing_notif	;wreg free
  9172   00104C                     l5950:
  9173                           
  9174                           ;OBCII_PIC18F46K22.c: 731:                     while(!message_complete){
  9175   00104C  505B               	movf	_message_complete^0,w,c	;volatile
  9176   00104E  B4D8               	btfsc	status,2,c
  9177   001050  EF2C  F008         	goto	u6741
  9178   001054  EF2E  F008         	goto	u6740
  9179   001058                     u6741:
  9180   001058  EF24  F008         	goto	l5948
  9181   00105C                     u6740:
  9182   00105C                     
  9183                           ;OBCII_PIC18F46K22.c: 735:                     clear_parsing_notif();
  9184   00105C  ECAB  F016         	call	_clear_parsing_notif	;wreg free
  9185   001060                     
  9186                           ;OBCII_PIC18F46K22.c: 737:                     LCD_clear();
  9187   001060  EC90  F016         	call	_LCD_clear	;wreg free
  9188   001064                     
  9189                           ;OBCII_PIC18F46K22.c: 738:                     LCD_cursor_set(1,1);
  9190   001064  0E01               	movlw	1
  9191   001066  6E06               	movwf	LCD_cursor_set@column^0,c
  9192   001068  0E01               	movlw	1
  9193   00106A  ECDD  F014         	call	_LCD_cursor_set
  9194                           
  9195                           ;OBCII_PIC18F46K22.c: 739:                     LCD_write_string("Codes Cleared");
  9196   00106E  0E71               	movlw	low STR_43
  9197   001070  6E06               	movwf	LCD_write_string@string^0,c
  9198   001072  0EFF               	movlw	high STR_43
  9199   001074  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9200   001076  EC97  F013         	call	_LCD_write_string	;wreg free
  9201   00107A                     
  9202                           ;OBCII_PIC18F46K22.c: 740:                     LCD_cursor_set(2,1);
  9203   00107A  0E01               	movlw	1
  9204   00107C  6E06               	movwf	LCD_cursor_set@column^0,c
  9205   00107E  0E02               	movlw	2
  9206   001080  ECDD  F014         	call	_LCD_cursor_set
  9207   001084                     
  9208                           ;OBCII_PIC18F46K22.c: 741:                     LCD_write_string("To Menu...");
  9209   001084  0E7F               	movlw	low STR_44
  9210   001086  6E06               	movwf	LCD_write_string@string^0,c
  9211   001088  0EFF               	movlw	high STR_44
  9212   00108A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9213   00108C  EC97  F013         	call	_LCD_write_string	;wreg free
  9214   001090                     l5962:
  9215                           
  9216                           ;OBCII_PIC18F46K22.c: 743:                     menu_sel = -1;
  9217   001090  0100               	movlb	0	; () banked
  9218   001092  69EC               	setf	_menu_sel& (0+255),b
  9219   001094  69ED               	setf	(_menu_sel+1)& (0+255),b
  9220   001096                     
  9221                           ; BSR set to: 0
  9222                           ;OBCII_PIC18F46K22.c: 744:                     _delay((unsigned long)((2000)*(16000000/4
      +                          000.0)));
  9223   001096  0E29               	movlw	41
  9224   001098  6E0C               	movwf	(??_clear_diagnostic_codes+1)^0,c
  9225   00109A  0E96               	movlw	150
  9226   00109C  6E0B               	movwf	??_clear_diagnostic_codes^0,c
  9227   00109E  0E7F               	movlw	127
  9228   0010A0                     u7217:
  9229   0010A0  2EE8               	decfsz	wreg,f,c
  9230   0010A2  D7FE               	bra	u7217
  9231   0010A4  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
  9232   0010A6  D7FC               	bra	u7217
  9233   0010A8  2E0C               	decfsz	(??_clear_diagnostic_codes+1)^0,f,c
  9234   0010AA  D7FA               	bra	u7217
  9235   0010AC  0000               	nop	
  9236                           
  9237                           ;OBCII_PIC18F46K22.c: 746:                         break;
  9238   0010AE  EF89  F008         	goto	l356
  9239   0010B2                     l5966:
  9240                           
  9241                           ;OBCII_PIC18F46K22.c: 750:                     LCD_clear();
  9242   0010B2  EC90  F016         	call	_LCD_clear	;wreg free
  9243                           
  9244                           ;OBCII_PIC18F46K22.c: 751:                     LCD_cursor_set(1,1);
  9245   0010B6  0E01               	movlw	1
  9246   0010B8  6E06               	movwf	LCD_cursor_set@column^0,c
  9247   0010BA  0E01               	movlw	1
  9248   0010BC  ECDD  F014         	call	_LCD_cursor_set
  9249   0010C0                     
  9250                           ;OBCII_PIC18F46K22.c: 752:                     LCD_write_string("Nothing Cleared");
  9251   0010C0  0E43               	movlw	low STR_45
  9252   0010C2  6E06               	movwf	LCD_write_string@string^0,c
  9253   0010C4  0EFF               	movlw	high STR_45
  9254   0010C6  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9255   0010C8  EC97  F013         	call	_LCD_write_string	;wreg free
  9256   0010CC                     
  9257                           ;OBCII_PIC18F46K22.c: 753:                     LCD_cursor_set(2,1);
  9258   0010CC  0E01               	movlw	1
  9259   0010CE  6E06               	movwf	LCD_cursor_set@column^0,c
  9260   0010D0  0E02               	movlw	2
  9261   0010D2  ECDD  F014         	call	_LCD_cursor_set
  9262                           
  9263                           ;OBCII_PIC18F46K22.c: 754:                     LCD_write_string("To Menu...");
  9264   0010D6  0E7F               	movlw	low STR_44
  9265   0010D8  6E06               	movwf	LCD_write_string@string^0,c
  9266   0010DA  0EFF               	movlw	high STR_44
  9267   0010DC  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9268   0010DE  EC97  F013         	call	_LCD_write_string	;wreg free
  9269   0010E2  EF48  F008         	goto	l5962
  9270   0010E6                     l5978:
  9271   0010E6  C00D  F00B         	movff	clear_diagnostic_codes@opt_sel,??_clear_diagnostic_codes
  9272   0010EA  C00E  F00C         	movff	clear_diagnostic_codes@opt_sel+1,??_clear_diagnostic_codes+1
  9273                           
  9274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9275                           ; Switch size 1, requested type "simple"
  9276                           ; Number of cases is 1, Range of values is 0 to 0
  9277                           ; switch strategies available:
  9278                           ; Name         Instructions Cycles
  9279                           ; simple_byte            4     3 (average)
  9280                           ;	Chosen strategy is simple_byte
  9281   0010EE  500C               	movf	(??_clear_diagnostic_codes+1)^0,w,c
  9282   0010F0  0A00               	xorlw	0	; case 0
  9283   0010F2  B4D8               	btfsc	status,2,c
  9284   0010F4  EF7E  F008         	goto	l6354
  9285   0010F8  EF89  F008         	goto	l356
  9286   0010FC                     l6354:
  9287                           
  9288                           ; Switch size 1, requested type "simple"
  9289                           ; Number of cases is 2, Range of values is 0 to 1
  9290                           ; switch strategies available:
  9291                           ; Name         Instructions Cycles
  9292                           ; simple_byte            7     4 (average)
  9293                           ;	Chosen strategy is simple_byte
  9294   0010FC  500B               	movf	??_clear_diagnostic_codes^0,w,c
  9295   0010FE  0A00               	xorlw	0	; case 0
  9296   001100  B4D8               	btfsc	status,2,c
  9297   001102  EF1C  F008         	goto	l5946
  9298   001106  0A01               	xorlw	1	; case 1
  9299   001108  B4D8               	btfsc	status,2,c
  9300   00110A  EF59  F008         	goto	l5966
  9301   00110E  EF89  F008         	goto	l356
  9302   001112                     l356:
  9303   001112  0012               	return		;funcret
  9304   001114                     __end_of_clear_diagnostic_codes:
  9305                           	callstack 0
  9306                           
  9307 ;; *************** function _readADC *****************
  9308 ;; Defined at:
  9309 ;;		line 291 in file "OBCII_PIC18F46K22.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;		None
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;		None
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  2    2[COMRAM] unsigned int 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;Total ram usage:        4 bytes
  9328 ;; Hardware stack levels used: 1
  9329 ;; Hardware stack levels required when called: 1
  9330 ;; This function calls:
  9331 ;;		Nothing
  9332 ;; This function is called by:
  9333 ;;		_main_menu
  9334 ;;		_clear_diagnostic_codes
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           	psect	text44
  9339   002C4C                     __ptext44:
  9340                           	callstack 0
  9341   002C4C                     _readADC:
  9342                           	callstack 28
  9343   002C4C                     
  9344                           ;OBCII_PIC18F46K22.c: 292:     ADCON0bits.GO = 1;
  9345   002C4C  82C2               	bsf	194,1,c	;volatile
  9346   002C4E                     l203:
  9347   002C4E  B2C2               	btfsc	194,1,c	;volatile
  9348   002C50  EF2C  F016         	goto	u3911
  9349   002C54  EF2E  F016         	goto	u3910
  9350   002C58                     u3911:
  9351   002C58  EF27  F016         	goto	l203
  9352   002C5C                     u3910:
  9353   002C5C                     
  9354                           ;OBCII_PIC18F46K22.c: 294:     _delay((unsigned long)((10)*(16000000/4000.0)));
  9355   002C5C  0E34               	movlw	52
  9356   002C5E  6E05               	movwf	??_readADC^0,c
  9357   002C60  0EF2               	movlw	242
  9358   002C62                     u7227:
  9359   002C62  2EE8               	decfsz	wreg,f,c
  9360   002C64  D7FE               	bra	u7227
  9361   002C66  2E05               	decfsz	??_readADC^0,f,c
  9362   002C68  D7FC               	bra	u7227
  9363   002C6A                     
  9364                           ;OBCII_PIC18F46K22.c: 295:     return ((ADRESH << 8) | ADRESL);
  9365   002C6A  50C3               	movf	195,w,c	;volatile
  9366   002C6C  CFC4 F005          	movff	4036,??_readADC	;volatile
  9367   002C70  6A06               	clrf	(??_readADC+1)^0,c
  9368   002C72  C005  F006         	movff	??_readADC,??_readADC+1
  9369   002C76  6A05               	clrf	??_readADC^0,c
  9370   002C78  1005               	iorwf	??_readADC^0,w,c
  9371   002C7A  6E03               	movwf	?_readADC^0,c
  9372   002C7C  5006               	movf	(??_readADC+1)^0,w,c
  9373   002C7E  6E04               	movwf	(?_readADC+1)^0,c
  9374   002C80  0012               	return		;funcret
  9375   002C82                     __end_of_readADC:
  9376                           	callstack 0
  9377                           
  9378 ;; *************** function _parsing_notif *****************
  9379 ;; Defined at:
  9380 ;;		line 305 in file "OBCII_PIC18F46K22.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;		None
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;		None
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  1    wreg      void 
  9387 ;; Registers used:
  9388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9398 ;;Total ram usage:        0 bytes
  9399 ;; Hardware stack levels used: 1
  9400 ;; Hardware stack levels required when called: 4
  9401 ;; This function calls:
  9402 ;;		_LCD_cursor_set
  9403 ;;		_LCD_write_string
  9404 ;; This function is called by:
  9405 ;;		_print_RPM
  9406 ;;		_print_Vbatt
  9407 ;;		_print_AI_Temp
  9408 ;;		_print_ELMVer
  9409 ;;		_print_SAEVer
  9410 ;;		_diagnostic_trouble_codes
  9411 ;;		_clear_diagnostic_codes
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           	psect	text45
  9416   002D3E                     __ptext45:
  9417                           	callstack 0
  9418   002D3E                     _parsing_notif:
  9419                           	callstack 23
  9420   002D3E                     
  9421                           ;OBCII_PIC18F46K22.c: 306:     LCD_cursor_set(1,16);
  9422   002D3E  0E10               	movlw	16
  9423   002D40  6E06               	movwf	LCD_cursor_set@column^0,c
  9424   002D42  0E01               	movlw	1
  9425   002D44  ECDD  F014         	call	_LCD_cursor_set
  9426   002D48                     
  9427                           ;OBCII_PIC18F46K22.c: 307:     LCD_write_string("~");
  9428   002D48  0EFC               	movlw	low STR_13
  9429   002D4A  6E06               	movwf	LCD_write_string@string^0,c
  9430   002D4C  0EFF               	movlw	high STR_13
  9431   002D4E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9432   002D50  EC97  F013         	call	_LCD_write_string	;wreg free
  9433   002D54  0012               	return		;funcret
  9434   002D56                     __end_of_parsing_notif:
  9435                           	callstack 0
  9436                           
  9437 ;; *************** function _display_mm *****************
  9438 ;; Defined at:
  9439 ;;		line 298 in file "OBCII_PIC18F46K22.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;		None
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;		None
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  1    wreg      void 
  9446 ;; Registers used:
  9447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9457 ;;Total ram usage:        0 bytes
  9458 ;; Hardware stack levels used: 1
  9459 ;; Hardware stack levels required when called: 4
  9460 ;; This function calls:
  9461 ;;		_LCD_cursor_set
  9462 ;;		_LCD_write_string
  9463 ;; This function is called by:
  9464 ;;		_main_menu
  9465 ;;		_print_RPM
  9466 ;;		_print_Vbatt
  9467 ;;		_print_AI_Temp
  9468 ;;		_print_ELMVer
  9469 ;;		_print_SAEVer
  9470 ;;		_clear_diagnostic_codes
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text46
  9475   002C82                     __ptext46:
  9476                           	callstack 0
  9477   002C82                     _display_mm:
  9478                           	callstack 23
  9479   002C82                     
  9480                           ;OBCII_PIC18F46K22.c: 299:     LCD_cursor_set(1,1);
  9481   002C82  0E01               	movlw	1
  9482   002C84  6E06               	movwf	LCD_cursor_set@column^0,c
  9483   002C86  0E01               	movlw	1
  9484   002C88  ECDD  F014         	call	_LCD_cursor_set
  9485   002C8C                     
  9486                           ;OBCII_PIC18F46K22.c: 300:     LCD_write_string("MENU  <OBDIIPIC>");
  9487   002C8C  0E11               	movlw	low STR_11
  9488   002C8E  6E06               	movwf	LCD_write_string@string^0,c
  9489   002C90  0EFF               	movlw	high STR_11
  9490   002C92  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9491   002C94  EC97  F013         	call	_LCD_write_string	;wreg free
  9492   002C98                     
  9493                           ;OBCII_PIC18F46K22.c: 301:     LCD_cursor_set(2,1);
  9494   002C98  0E01               	movlw	1
  9495   002C9A  6E06               	movwf	LCD_cursor_set@column^0,c
  9496   002C9C  0E02               	movlw	2
  9497   002C9E  ECDD  F014         	call	_LCD_cursor_set
  9498                           
  9499                           ;OBCII_PIC18F46K22.c: 302:     LCD_write_string("LRM DTC CDC DSI");
  9500   002CA2  0E33               	movlw	low STR_12
  9501   002CA4  6E06               	movwf	LCD_write_string@string^0,c
  9502   002CA6  0EFF               	movlw	high STR_12
  9503   002CA8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9504   002CAA  EC97  F013         	call	_LCD_write_string	;wreg free
  9505   002CAE  0012               	return		;funcret
  9506   002CB0                     __end_of_display_mm:
  9507                           	callstack 0
  9508                           
  9509 ;; *************** function _clear_parsing_notif *****************
  9510 ;; Defined at:
  9511 ;;		line 309 in file "OBCII_PIC18F46K22.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;		None
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;		None
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  1    wreg      void 
  9518 ;; Registers used:
  9519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;Total ram usage:        0 bytes
  9530 ;; Hardware stack levels used: 1
  9531 ;; Hardware stack levels required when called: 4
  9532 ;; This function calls:
  9533 ;;		_LCD_cursor_set
  9534 ;;		_LCD_write_string
  9535 ;; This function is called by:
  9536 ;;		_print_RPM
  9537 ;;		_print_Vbatt
  9538 ;;		_print_AI_Temp
  9539 ;;		_print_ELMVer
  9540 ;;		_print_SAEVer
  9541 ;;		_diagnostic_trouble_codes
  9542 ;;		_clear_diagnostic_codes
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           	psect	text47
  9547   002D56                     __ptext47:
  9548                           	callstack 0
  9549   002D56                     _clear_parsing_notif:
  9550                           	callstack 23
  9551   002D56                     
  9552                           ;OBCII_PIC18F46K22.c: 310:     LCD_cursor_set(1,16);
  9553   002D56  0E10               	movlw	16
  9554   002D58  6E06               	movwf	LCD_cursor_set@column^0,c
  9555   002D5A  0E01               	movlw	1
  9556   002D5C  ECDD  F014         	call	_LCD_cursor_set
  9557   002D60                     
  9558                           ;OBCII_PIC18F46K22.c: 311:     LCD_write_string("^");
  9559   002D60  0EFA               	movlw	low STR_14
  9560   002D62  6E06               	movwf	LCD_write_string@string^0,c
  9561   002D64  0EFF               	movlw	high STR_14
  9562   002D66  6E07               	movwf	(LCD_write_string@string+1)^0,c
  9563   002D68  EC97  F013         	call	_LCD_write_string	;wreg free
  9564   002D6C  0012               	return		;funcret
  9565   002D6E                     __end_of_clear_parsing_notif:
  9566                           	callstack 0
  9567                           
  9568 ;; *************** function _LCD_write_string *****************
  9569 ;; Defined at:
  9570 ;;		line 362 in file "LCD.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  string          2    5[COMRAM] PTR unsigned char 
  9573 ;;		 -> STR_46(11), STR_45(16), STR_44(11), STR_43(14), 
  9574 ;;		 -> STR_41(17), STR_40(15), STR_39(11), STR_37(3), 
  9575 ;;		 -> STR_35(4), STR_33(2), STR_32(4), STR_31(4), 
  9576 ;;		 -> air_intake_string(16), STR_25(4), STR_24(6), STR_23(6), 
  9577 ;;		 -> STR_21(4), STR_20(6), rpm_string(16), STR_14(2), 
  9578 ;;		 -> STR_13(2), STR_12(16), STR_11(17), STR_9(17), 
  9579 ;;		 -> STR_8(17), STR_6(17), STR_3(15), STR_2(17), 
  9580 ;;		 -> buffer(256), 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  i               1    9[COMRAM] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9596 ;;Total ram usage:        5 bytes
  9597 ;; Hardware stack levels used: 1
  9598 ;; Hardware stack levels required when called: 3
  9599 ;; This function calls:
  9600 ;;		_LCD_write_data
  9601 ;; This function is called by:
  9602 ;;		_welcome_splash
  9603 ;;		_display_mm
  9604 ;;		_parsing_notif
  9605 ;;		_clear_parsing_notif
  9606 ;;		_print_RPM
  9607 ;;		_print_Vbatt
  9608 ;;		_print_AI_Temp
  9609 ;;		_print_ELMVer
  9610 ;;		_print_SAEVer
  9611 ;;		_diagnostic_trouble_codes
  9612 ;;		_clear_diagnostic_codes
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text48
  9617   00272E                     __ptext48:
  9618                           	callstack 0
  9619   00272E                     _LCD_write_string:
  9620                           	callstack 26
  9621   00272E                     
  9622                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  9623   00272E  6A0A               	clrf	LCD_write_string@i^0,c
  9624   002730  EFB4  F013         	goto	l5440
  9625   002734                     l5436:
  9626                           
  9627                           ;LCD.c: 366:         LCD_write_data(string[i]);
  9628   002734  500A               	movf	LCD_write_string@i^0,w,c
  9629   002736  2406               	addwf	LCD_write_string@string^0,w,c
  9630   002738  6E08               	movwf	??_LCD_write_string^0,c
  9631   00273A  0E00               	movlw	0
  9632   00273C  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  9633   00273E  6E09               	movwf	(??_LCD_write_string+1)^0,c
  9634   002740  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  9635   002744  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  9636   002748  0E00               	movlw	low (__mediumconst shr (0+16))
  9637   00274A  6EF8               	movwf	tblptru,c
  9638   00274C  0E0F               	movlw	(high __ramtop+-1)
  9639   00274E  64F7               	cpfsgt	tblptrh,c
  9640   002750  D003               	bra	u6177
  9641   002752  0008               	tblrd		*
  9642   002754  50F5               	movf	tablat,w,c
  9643   002756  D005               	bra	u6170
  9644   002758                     u6177:
  9645   002758  CFF6 FFE9          	movff	tblptrl,fsr0l
  9646   00275C  CFF7 FFEA          	movff	tblptrh,fsr0h
  9647   002760  50EF               	movf	indf0,w,c
  9648   002762                     u6170:
  9649   002762  ECCB  F00D         	call	_LCD_write_data
  9650   002766                     
  9651                           ;LCD.c: 367:     }
  9652   002766  2A0A               	incf	LCD_write_string@i^0,f,c
  9653   002768                     l5440:
  9654   002768  500A               	movf	LCD_write_string@i^0,w,c
  9655   00276A  2406               	addwf	LCD_write_string@string^0,w,c
  9656   00276C  6E08               	movwf	??_LCD_write_string^0,c
  9657   00276E  0E00               	movlw	0
  9658   002770  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  9659   002772  6E09               	movwf	(??_LCD_write_string+1)^0,c
  9660   002774  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  9661   002778  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  9662   00277C  0E00               	movlw	low (__mediumconst shr (0+16))
  9663   00277E  6EF8               	movwf	tblptru,c
  9664   002780  0E0F               	movlw	(high __ramtop+-1)
  9665   002782  64F7               	cpfsgt	tblptrh,c
  9666   002784  D003               	bra	u6187
  9667   002786  0008               	tblrd		*
  9668   002788  50F5               	movf	tablat,w,c
  9669   00278A  D005               	bra	u6180
  9670   00278C                     u6187:
  9671   00278C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9672   002790  CFF7 FFEA          	movff	tblptrh,fsr0h
  9673   002794  50EF               	movf	indf0,w,c
  9674   002796                     u6180:
  9675   002796  0900               	iorlw	0
  9676   002798  A4D8               	btfss	status,2,c
  9677   00279A  EFD1  F013         	goto	u6191
  9678   00279E  EFD3  F013         	goto	u6190
  9679   0027A2                     u6191:
  9680   0027A2  EF9A  F013         	goto	l5436
  9681   0027A6                     u6190:
  9682   0027A6  0012               	return		;funcret
  9683   0027A8                     __end_of_LCD_write_string:
  9684                           	callstack 0
  9685                           
  9686 ;; *************** function _LCD_write_data *****************
  9687 ;; Defined at:
  9688 ;;		line 74 in file "LCD.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;  data            1    wreg     unsigned char 
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;  data            1    4[COMRAM] unsigned char 
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  1    wreg      void 
  9695 ;; Registers used:
  9696 ;;		wreg, status,2, status,0, cstack
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9705 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;Total ram usage:        3 bytes
  9707 ;; Hardware stack levels used: 1
  9708 ;; Hardware stack levels required when called: 2
  9709 ;; This function calls:
  9710 ;;		_LCD_pulse_clock
  9711 ;; This function is called by:
  9712 ;;		_LCD_write_string
  9713 ;;		_LCD_write_char
  9714 ;;		_LCD_write_variable
  9715 ;;		_LCD_add_character
  9716 ;;		_LCD_write_float
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text49
  9721   001B96                     __ptext49:
  9722                           	callstack 0
  9723   001B96                     _LCD_write_data:
  9724                           	callstack 26
  9725                           
  9726                           ;incstack = 0
  9727                           ;LCD_write_data@data stored from wreg
  9728   001B96  6E05               	movwf	LCD_write_data@data^0,c
  9729   001B98                     
  9730                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
  9731   001B98  848C               	bsf	140,2,c	;volatile
  9732   001B9A                     
  9733                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
  9734   001B9A  6A03               	clrf	??_LCD_write_data^0,c
  9735   001B9C  AE05               	btfss	LCD_write_data@data^0,7,c
  9736   001B9E  D001               	bra	u5955
  9737   001BA0  2A03               	incf	??_LCD_write_data^0,f,c
  9738   001BA2                     u5955:
  9739   001BA2  0E01               	movlw	1
  9740   001BA4  1603               	andwf	??_LCD_write_data^0,f,c
  9741   001BA6  3203               	rrcf	??_LCD_write_data^0,f,c
  9742   001BA8  3203               	rrcf	??_LCD_write_data^0,f,c
  9743   001BAA  508C               	movf	140,w,c	;volatile
  9744   001BAC  1803               	xorwf	??_LCD_write_data^0,w,c
  9745   001BAE  0B7F               	andlw	-129
  9746   001BB0  1803               	xorwf	??_LCD_write_data^0,w,c
  9747   001BB2  6E8C               	movwf	140,c	;volatile
  9748                           
  9749                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
  9750   001BB4  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  9751   001BB8  0E06               	movlw	6
  9752   001BBA  6E04               	movwf	(??_LCD_write_data+1)^0,c
  9753   001BBC                     u5965:
  9754   001BBC  90D8               	bcf	status,0,c
  9755   001BBE  3203               	rrcf	??_LCD_write_data^0,f,c
  9756   001BC0  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  9757   001BC2  EFDE  F00D         	goto	u5965
  9758   001BC6  0E01               	movlw	1
  9759   001BC8  1603               	andwf	??_LCD_write_data^0,f,c
  9760   001BCA  3A03               	swapf	??_LCD_write_data^0,f,c
  9761   001BCC  4603               	rlncf	??_LCD_write_data^0,f,c
  9762   001BCE  4603               	rlncf	??_LCD_write_data^0,f,c
  9763   001BD0  508C               	movf	140,w,c	;volatile
  9764   001BD2  1803               	xorwf	??_LCD_write_data^0,w,c
  9765   001BD4  0BBF               	andlw	-65
  9766   001BD6  1803               	xorwf	??_LCD_write_data^0,w,c
  9767   001BD8  6E8C               	movwf	140,c	;volatile
  9768                           
  9769                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
  9770   001BDA  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  9771   001BDE  0E05               	movlw	5
  9772   001BE0  6E04               	movwf	(??_LCD_write_data+1)^0,c
  9773   001BE2                     u5975:
  9774   001BE2  90D8               	bcf	status,0,c
  9775   001BE4  3203               	rrcf	??_LCD_write_data^0,f,c
  9776   001BE6  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  9777   001BE8  EFF1  F00D         	goto	u5975
  9778   001BEC  0E01               	movlw	1
  9779   001BEE  1603               	andwf	??_LCD_write_data^0,f,c
  9780   001BF0  3A03               	swapf	??_LCD_write_data^0,f,c
  9781   001BF2  4603               	rlncf	??_LCD_write_data^0,f,c
  9782   001BF4  508C               	movf	140,w,c	;volatile
  9783   001BF6  1803               	xorwf	??_LCD_write_data^0,w,c
  9784   001BF8  0BDF               	andlw	-33
  9785   001BFA  1803               	xorwf	??_LCD_write_data^0,w,c
  9786   001BFC  6E8C               	movwf	140,c	;volatile
  9787                           
  9788                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
  9789   001BFE  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  9790   001C02  3A03               	swapf	??_LCD_write_data^0,f,c
  9791   001C04  0E0F               	movlw	15
  9792   001C06  1603               	andwf	??_LCD_write_data^0,f,c
  9793   001C08  0E01               	movlw	1
  9794   001C0A  1603               	andwf	??_LCD_write_data^0,f,c
  9795   001C0C  3A03               	swapf	??_LCD_write_data^0,f,c
  9796   001C0E  508C               	movf	140,w,c	;volatile
  9797   001C10  1803               	xorwf	??_LCD_write_data^0,w,c
  9798   001C12  0BEF               	andlw	-17
  9799   001C14  1803               	xorwf	??_LCD_write_data^0,w,c
  9800   001C16  6E8C               	movwf	140,c	;volatile
  9801   001C18                     
  9802                           ;LCD.c: 85:     LCD_pulse_clock();
  9803   001C18  ECE2  F016         	call	_LCD_pulse_clock	;wreg free
  9804   001C1C                     
  9805                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
  9806   001C1C  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  9807   001C20  90D8               	bcf	status,0,c
  9808   001C22  3203               	rrcf	??_LCD_write_data^0,f,c
  9809   001C24  90D8               	bcf	status,0,c
  9810   001C26  3203               	rrcf	??_LCD_write_data^0,f,c
  9811   001C28  90D8               	bcf	status,0,c
  9812   001C2A  3203               	rrcf	??_LCD_write_data^0,f,c
  9813   001C2C  0E01               	movlw	1
  9814   001C2E  1603               	andwf	??_LCD_write_data^0,f,c
  9815   001C30  3203               	rrcf	??_LCD_write_data^0,f,c
  9816   001C32  3203               	rrcf	??_LCD_write_data^0,f,c
  9817   001C34  508C               	movf	140,w,c	;volatile
  9818   001C36  1803               	xorwf	??_LCD_write_data^0,w,c
  9819   001C38  0B7F               	andlw	-129
  9820   001C3A  1803               	xorwf	??_LCD_write_data^0,w,c
  9821   001C3C  6E8C               	movwf	140,c	;volatile
  9822   001C3E                     
  9823                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
  9824   001C3E  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  9825   001C42  90D8               	bcf	status,0,c
  9826   001C44  3203               	rrcf	??_LCD_write_data^0,f,c
  9827   001C46  90D8               	bcf	status,0,c
  9828   001C48  3203               	rrcf	??_LCD_write_data^0,f,c
  9829   001C4A  0E01               	movlw	1
  9830   001C4C  1603               	andwf	??_LCD_write_data^0,f,c
  9831   001C4E  3A03               	swapf	??_LCD_write_data^0,f,c
  9832   001C50  4603               	rlncf	??_LCD_write_data^0,f,c
  9833   001C52  4603               	rlncf	??_LCD_write_data^0,f,c
  9834   001C54  508C               	movf	140,w,c	;volatile
  9835   001C56  1803               	xorwf	??_LCD_write_data^0,w,c
  9836   001C58  0BBF               	andlw	-65
  9837   001C5A  1803               	xorwf	??_LCD_write_data^0,w,c
  9838   001C5C  6E8C               	movwf	140,c	;volatile
  9839   001C5E                     
  9840                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
  9841   001C5E  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  9842   001C62  90D8               	bcf	status,0,c
  9843   001C64  3203               	rrcf	??_LCD_write_data^0,f,c
  9844   001C66  0E01               	movlw	1
  9845   001C68  1603               	andwf	??_LCD_write_data^0,f,c
  9846   001C6A  3A03               	swapf	??_LCD_write_data^0,f,c
  9847   001C6C  4603               	rlncf	??_LCD_write_data^0,f,c
  9848   001C6E  508C               	movf	140,w,c	;volatile
  9849   001C70  1803               	xorwf	??_LCD_write_data^0,w,c
  9850   001C72  0BDF               	andlw	-33
  9851   001C74  1803               	xorwf	??_LCD_write_data^0,w,c
  9852   001C76  6E8C               	movwf	140,c	;volatile
  9853   001C78                     
  9854                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
  9855   001C78  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  9856   001C7C  0E01               	movlw	1
  9857   001C7E  1603               	andwf	??_LCD_write_data^0,f,c
  9858   001C80  3A03               	swapf	??_LCD_write_data^0,f,c
  9859   001C82  508C               	movf	140,w,c	;volatile
  9860   001C84  1803               	xorwf	??_LCD_write_data^0,w,c
  9861   001C86  0BEF               	andlw	-17
  9862   001C88  1803               	xorwf	??_LCD_write_data^0,w,c
  9863   001C8A  6E8C               	movwf	140,c	;volatile
  9864   001C8C                     
  9865                           ;LCD.c: 94:     LCD_pulse_clock();
  9866   001C8C  ECE2  F016         	call	_LCD_pulse_clock	;wreg free
  9867   001C90  0012               	return		;funcret
  9868   001C92                     __end_of_LCD_write_data:
  9869                           	callstack 0
  9870                           
  9871 ;; *************** function _LCD_cursor_set *****************
  9872 ;; Defined at:
  9873 ;;		line 159 in file "LCD.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;  row             1    wreg     unsigned char 
  9876 ;;  column          1    5[COMRAM] unsigned char 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  row             1    6[COMRAM] unsigned char 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  1    wreg      void 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0, cstack
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9888 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9892 ;;Total ram usage:        2 bytes
  9893 ;; Hardware stack levels used: 1
  9894 ;; Hardware stack levels required when called: 3
  9895 ;; This function calls:
  9896 ;;		_LCD_write_command
  9897 ;; This function is called by:
  9898 ;;		_welcome_splash
  9899 ;;		_display_mm
  9900 ;;		_parsing_notif
  9901 ;;		_clear_parsing_notif
  9902 ;;		_main_menu
  9903 ;;		_print_RPM
  9904 ;;		_print_Vbatt
  9905 ;;		_print_AI_Temp
  9906 ;;		_print_ELMVer
  9907 ;;		_print_SAEVer
  9908 ;;		_display_system_info
  9909 ;;		_diagnostic_trouble_codes
  9910 ;;		_clear_diagnostic_codes
  9911 ;;		_LCD_add_character
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text50
  9916   0029BA                     __ptext50:
  9917                           	callstack 0
  9918   0029BA                     _LCD_cursor_set:
  9919                           	callstack 26
  9920                           
  9921                           ;incstack = 0
  9922                           ;LCD_cursor_set@row stored from wreg
  9923   0029BA  6E07               	movwf	LCD_cursor_set@row^0,c
  9924   0029BC                     
  9925                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
  9926   0029BC  0407               	decf	LCD_cursor_set@row^0,w,c
  9927   0029BE  A4D8               	btfss	status,2,c
  9928   0029C0  EFE4  F014         	goto	u6131
  9929   0029C4  EFE6  F014         	goto	u6130
  9930   0029C8                     u6131:
  9931   0029C8  EFE8  F014         	goto	l385
  9932   0029CC                     u6130:
  9933   0029CC  0E7F               	movlw	127
  9934   0029CE  2606               	addwf	LCD_cursor_set@column^0,f,c
  9935   0029D0                     l385:
  9936                           
  9937                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
  9938   0029D0  0E02               	movlw	2
  9939   0029D2  1807               	xorwf	LCD_cursor_set@row^0,w,c
  9940   0029D4  A4D8               	btfss	status,2,c
  9941   0029D6  EFEF  F014         	goto	u6141
  9942   0029DA  EFF1  F014         	goto	u6140
  9943   0029DE                     u6141:
  9944   0029DE  EFF3  F014         	goto	l386
  9945   0029E2                     u6140:
  9946   0029E2  0EBF               	movlw	191
  9947   0029E4  2606               	addwf	LCD_cursor_set@column^0,f,c
  9948   0029E6                     l386:
  9949                           
  9950                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
  9951   0029E6  0E03               	movlw	3
  9952   0029E8  1807               	xorwf	LCD_cursor_set@row^0,w,c
  9953   0029EA  A4D8               	btfss	status,2,c
  9954   0029EC  EFFA  F014         	goto	u6151
  9955   0029F0  EFFC  F014         	goto	u6150
  9956   0029F4                     u6151:
  9957   0029F4  EFFE  F014         	goto	l387
  9958   0029F8                     u6150:
  9959   0029F8  0E93               	movlw	147
  9960   0029FA  2606               	addwf	LCD_cursor_set@column^0,f,c
  9961   0029FC                     l387:
  9962                           
  9963                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
  9964   0029FC  0E04               	movlw	4
  9965   0029FE  1807               	xorwf	LCD_cursor_set@row^0,w,c
  9966   002A00  A4D8               	btfss	status,2,c
  9967   002A02  EF05  F015         	goto	u6161
  9968   002A06  EF07  F015         	goto	u6160
  9969   002A0A                     u6161:
  9970   002A0A  EF09  F015         	goto	l5432
  9971   002A0E                     u6160:
  9972   002A0E  0ED3               	movlw	211
  9973   002A10  2606               	addwf	LCD_cursor_set@column^0,f,c
  9974   002A12                     l5432:
  9975                           
  9976                           ;LCD.c: 168:    LCD_write_command(column);
  9977   002A12  5006               	movf	LCD_cursor_set@column^0,w,c
  9978   002A14  EC49  F00E         	call	_LCD_write_command
  9979   002A18  0012               	return		;funcret
  9980   002A1A                     __end_of_LCD_cursor_set:
  9981                           	callstack 0
  9982                           
  9983 ;; *************** function _UART1_SendString *****************
  9984 ;; Defined at:
  9985 ;;		line 183 in file "OBCII_PIC18F46K22.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;  string          2    3[COMRAM] PTR unsigned char 
  9988 ;;		 -> STR_42(4), STR_38(4), STR_36(6), STR_34(5), 
  9989 ;;		 -> STR_27(6), STR_22(6), STR_16(6), STR_10(6), 
  9990 ;;		 -> STR_7(5), STR_5(5), STR_4(6), STR_1(6), 
  9991 ;; Auto vars:     Size  Location     Type
  9992 ;;  i               2    7[COMRAM] unsigned int 
  9993 ;; Return value:  Size  Location     Type
  9994 ;;                  1    wreg      void 
  9995 ;; Registers used:
  9996 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9997 ;; Tracked objects:
  9998 ;;		On entry : 0/0
  9999 ;;		On exit  : 0/0
 10000 ;;		Unchanged: 0/0
 10001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10005 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;Total ram usage:        6 bytes
 10007 ;; Hardware stack levels used: 1
 10008 ;; Hardware stack levels required when called: 2
 10009 ;; This function calls:
 10010 ;;		_UART1_SendChar
 10011 ;; This function is called by:
 10012 ;;		_main
 10013 ;;		_welcome_splash
 10014 ;;		_print_RPM
 10015 ;;		_print_Vbatt
 10016 ;;		_print_AI_Temp
 10017 ;;		_print_ELMVer
 10018 ;;		_print_SAEVer
 10019 ;;		_diagnostic_trouble_codes
 10020 ;;		_clear_diagnostic_codes
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text51
 10025   002A78                     __ptext51:
 10026                           	callstack 0
 10027   002A78                     _UART1_SendString:
 10028                           	callstack 27
 10029   002A78                     
 10030                           ;OBCII_PIC18F46K22.c: 184:     for (unsigned int i = 0; string[i] != '\0'; i++){
 10031   002A78  0E00               	movlw	0
 10032   002A7A  6E09               	movwf	(UART1_SendString@i+1)^0,c
 10033   002A7C  0E00               	movlw	0
 10034   002A7E  6E08               	movwf	UART1_SendString@i^0,c
 10035   002A80  EF52  F015         	goto	l5496
 10036   002A84                     l5492:
 10037                           
 10038                           ;OBCII_PIC18F46K22.c: 185:         UART1_SendChar(string[i]);
 10039   002A84  5008               	movf	UART1_SendString@i^0,w,c
 10040   002A86  2404               	addwf	UART1_SendString@string^0,w,c
 10041   002A88  6E06               	movwf	??_UART1_SendString^0,c
 10042   002A8A  5009               	movf	(UART1_SendString@i+1)^0,w,c
 10043   002A8C  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
 10044   002A8E  6E07               	movwf	(??_UART1_SendString+1)^0,c
 10045   002A90  C006  FFF6         	movff	??_UART1_SendString,tblptrl
 10046   002A94  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
 10047   002A98                     	if	0	;tblptru may be non-zero
 10048   002A98                     	endif
 10049   002A98                     	if	0	;tblptru may be non-zero
 10050   002A98                     	endif
 10051   002A98  0008               	tblrd		*
 10052   002A9A  50F5               	movf	tablat,w,c
 10053   002A9C  ECB7  F016         	call	_UART1_SendChar
 10054   002AA0                     
 10055                           ;OBCII_PIC18F46K22.c: 186:     }
 10056   002AA0  4A08               	infsnz	UART1_SendString@i^0,f,c
 10057   002AA2  2A09               	incf	(UART1_SendString@i+1)^0,f,c
 10058   002AA4                     l5496:
 10059   002AA4  5008               	movf	UART1_SendString@i^0,w,c
 10060   002AA6  2404               	addwf	UART1_SendString@string^0,w,c
 10061   002AA8  6E06               	movwf	??_UART1_SendString^0,c
 10062   002AAA  5009               	movf	(UART1_SendString@i+1)^0,w,c
 10063   002AAC  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
 10064   002AAE  6E07               	movwf	(??_UART1_SendString+1)^0,c
 10065   002AB0  C006  FFF6         	movff	??_UART1_SendString,tblptrl
 10066   002AB4  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
 10067   002AB8                     	if	0	;tblptru may be non-zero
 10068   002AB8                     	endif
 10069   002AB8                     	if	0	;tblptru may be non-zero
 10070   002AB8                     	endif
 10071   002AB8  0008               	tblrd		*
 10072   002ABA  50F5               	movf	tablat,w,c
 10073   002ABC  0900               	iorlw	0
 10074   002ABE  A4D8               	btfss	status,2,c
 10075   002AC0  EF64  F015         	goto	u6251
 10076   002AC4  EF66  F015         	goto	u6250
 10077   002AC8                     u6251:
 10078   002AC8  EF42  F015         	goto	l5492
 10079   002ACC                     u6250:
 10080   002ACC  0012               	return		;funcret
 10081   002ACE                     __end_of_UART1_SendString:
 10082                           	callstack 0
 10083                           
 10084 ;; *************** function _UART1_SendChar *****************
 10085 ;; Defined at:
 10086 ;;		line 189 in file "OBCII_PIC18F46K22.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  c               1    wreg     unsigned char 
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;  c               1    2[COMRAM] unsigned char 
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      void 
 10093 ;; Registers used:
 10094 ;;		wreg
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10104 ;;Total ram usage:        1 bytes
 10105 ;; Hardware stack levels used: 1
 10106 ;; Hardware stack levels required when called: 1
 10107 ;; This function calls:
 10108 ;;		Nothing
 10109 ;; This function is called by:
 10110 ;;		_UART1_SendString
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text52
 10115   002D6E                     __ptext52:
 10116                           	callstack 0
 10117   002D6E                     _UART1_SendChar:
 10118                           	callstack 27
 10119                           
 10120                           ;incstack = 0
 10121                           ;UART1_SendChar@c stored from wreg
 10122   002D6E  6E03               	movwf	UART1_SendChar@c^0,c
 10123   002D70                     l179:
 10124   002D70  A2AC               	btfss	172,1,c	;volatile
 10125   002D72  EFBD  F016         	goto	u6121
 10126   002D76  EFBF  F016         	goto	u6120
 10127   002D7A                     u6121:
 10128   002D7A  EFB8  F016         	goto	l179
 10129   002D7E                     u6120:
 10130   002D7E                     
 10131                           ;OBCII_PIC18F46K22.c: 191:         TXREG = c;
 10132   002D7E  C003  FFAD         	movff	UART1_SendChar@c,4013	;volatile
 10133   002D82  0012               	return		;funcret
 10134   002D84                     __end_of_UART1_SendChar:
 10135                           	callstack 0
 10136                           
 10137 ;; *************** function _LCD_configure_cursor_blink *****************
 10138 ;; Defined at:
 10139 ;;		line 231 in file "LCD.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;  state           1    wreg     unsigned char 
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;  state           1    5[COMRAM] unsigned char 
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      void 
 10146 ;; Registers used:
 10147 ;;		wreg, status,2, status,0, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10157 ;;Total ram usage:        1 bytes
 10158 ;; Hardware stack levels used: 1
 10159 ;; Hardware stack levels required when called: 3
 10160 ;; This function calls:
 10161 ;;		_LCD_write_command
 10162 ;; This function is called by:
 10163 ;;		_main_menu
 10164 ;;		_clear_diagnostic_codes
 10165 ;; This function uses a non-reentrant model
 10166 ;;
 10167                           
 10168                           	psect	text53
 10169   002CDC                     __ptext53:
 10170                           	callstack 0
 10171   002CDC                     _LCD_configure_cursor_blink:
 10172                           	callstack 25
 10173                           
 10174                           ;incstack = 0
 10175                           ;LCD_configure_cursor_blink@state stored from wreg
 10176   002CDC  6E06               	movwf	LCD_configure_cursor_blink@state^0,c
 10177   002CDE                     
 10178                           ;LCD.c: 234:     if(state){
 10179   002CDE  5006               	movf	LCD_configure_cursor_blink@state^0,w,c
 10180   002CE0  B4D8               	btfsc	status,2,c
 10181   002CE2  EF75  F016         	goto	u6371
 10182   002CE6  EF77  F016         	goto	u6370
 10183   002CEA                     u6371:
 10184   002CEA  EF7B  F016         	goto	l5616
 10185   002CEE                     u6370:
 10186   002CEE                     
 10187                           ;LCD.c: 235:         LCD_display_control |= 0b00000001;
 10188   002CEE  0100               	movlb	0	; () banked
 10189   002CF0  81EF               	bsf	_LCD_display_control& (0+255),0,b
 10190                           
 10191                           ;LCD.c: 236:     }
 10192   002CF2  EF7D  F016         	goto	l5618
 10193   002CF6                     l5616:
 10194                           
 10195                           ;LCD.c: 238:         LCD_display_control &= 0b11111110;
 10196   002CF6  0100               	movlb	0	; () banked
 10197   002CF8  91EF               	bcf	_LCD_display_control& (0+255),0,b
 10198   002CFA                     l5618:
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;LCD.c: 242:     LCD_write_command(LCD_display_control);
 10202   002CFA  51EF               	movf	_LCD_display_control& (0+255),w,b
 10203   002CFC  EC49  F00E         	call	_LCD_write_command
 10204   002D00  0012               	return		;funcret
 10205   002D02                     __end_of_LCD_configure_cursor_blink:
 10206                           	callstack 0
 10207                           
 10208 ;; *************** function _input_init *****************
 10209 ;; Defined at:
 10210 ;;		line 99 in file "OBCII_PIC18F46K22.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;		None
 10213 ;; Auto vars:     Size  Location     Type
 10214 ;;		None
 10215 ;; Return value:  Size  Location     Type
 10216 ;;                  1    wreg      void 
 10217 ;; Registers used:
 10218 ;;		None
 10219 ;; Tracked objects:
 10220 ;;		On entry : 0/0
 10221 ;;		On exit  : 0/0
 10222 ;;		Unchanged: 0/0
 10223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10228 ;;Total ram usage:        0 bytes
 10229 ;; Hardware stack levels used: 1
 10230 ;; Hardware stack levels required when called: 1
 10231 ;; This function calls:
 10232 ;;		Nothing
 10233 ;; This function is called by:
 10234 ;;		_main
 10235 ;; This function uses a non-reentrant model
 10236 ;;
 10237                           
 10238                           	psect	text54
 10239   002DA6                     __ptext54:
 10240                           	callstack 0
 10241   002DA6                     _input_init:
 10242                           	callstack 29
 10243   002DA6                     
 10244                           ;OBCII_PIC18F46K22.c: 102:     TRISBbits.TRISB4 = 1;
 10245   002DA6  8893               	bsf	147,4,c	;volatile
 10246                           
 10247                           ;OBCII_PIC18F46K22.c: 103:     ANSELBbits.ANSB4 = 0;
 10248   002DA8  010F               	movlb	15	; () banked
 10249   002DAA  9939               	bcf	57,4,b	;volatile
 10250                           
 10251                           ;OBCII_PIC18F46K22.c: 105:     TRISCbits.TRISC5 = 1;
 10252   002DAC  8A94               	bsf	148,5,c	;volatile
 10253                           
 10254                           ;OBCII_PIC18F46K22.c: 106:     ANSELCbits.ANSC5 = 0;
 10255   002DAE  9B3A               	bcf	58,5,b	;volatile
 10256                           
 10257                           ;OBCII_PIC18F46K22.c: 108:     TRISAbits.TRISA0 = 1;
 10258   002DB0  8092               	bsf	146,0,c	;volatile
 10259                           
 10260                           ;OBCII_PIC18F46K22.c: 109:     ANSELAbits.ANSA0 = 1;
 10261   002DB2  8138               	bsf	56,0,b	;volatile
 10262   002DB4                     
 10263                           ; BSR set to: 15
 10264   002DB4  0012               	return		;funcret
 10265   002DB6                     __end_of_input_init:
 10266                           	callstack 0
 10267                           
 10268 ;; *************** function _UART1_Init *****************
 10269 ;; Defined at:
 10270 ;;		line 121 in file "OBCII_PIC18F46K22.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;		None
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;		None
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		wreg, status,2
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;Total ram usage:        0 bytes
 10289 ;; Hardware stack levels used: 1
 10290 ;; Hardware stack levels required when called: 1
 10291 ;; This function calls:
 10292 ;;		Nothing
 10293 ;; This function is called by:
 10294 ;;		_main
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           	psect	text55
 10299   002CB0                     __ptext55:
 10300                           	callstack 0
 10301   002CB0                     _UART1_Init:
 10302                           	callstack 29
 10303   002CB0                     
 10304                           ;OBCII_PIC18F46K22.c: 122:     ANSELC = 0;
 10305   002CB0  010F               	movlb	15	; () banked
 10306   002CB2  6B3A               	clrf	58,b	;volatile
 10307                           
 10308                           ;OBCII_PIC18F46K22.c: 125:     TRISCbits.TRISC6 = 0;
 10309   002CB4  9C94               	bcf	148,6,c	;volatile
 10310                           
 10311                           ;OBCII_PIC18F46K22.c: 126:     TRISCbits.TRISC7 = 1;
 10312   002CB6  8E94               	bsf	148,7,c	;volatile
 10313                           
 10314                           ;OBCII_PIC18F46K22.c: 130:     TXSTA1bits.TXEN = 1;
 10315   002CB8  8AAC               	bsf	172,5,c	;volatile
 10316                           
 10317                           ;OBCII_PIC18F46K22.c: 131:     TXSTA1bits.TX9 = 0;
 10318   002CBA  9CAC               	bcf	172,6,c	;volatile
 10319                           
 10320                           ;OBCII_PIC18F46K22.c: 132:     TXSTA1bits.SYNC = 0;
 10321   002CBC  98AC               	bcf	172,4,c	;volatile
 10322                           
 10323                           ;OBCII_PIC18F46K22.c: 135:     TXSTA1bits.BRGH = 1;
 10324   002CBE  84AC               	bsf	172,2,c	;volatile
 10325                           
 10326                           ;OBCII_PIC18F46K22.c: 136:     BAUDCON1bits.BRG16 = 1;
 10327   002CC0  86B8               	bsf	184,3,c	;volatile
 10328   002CC2                     
 10329                           ; BSR set to: 15
 10330                           ;OBCII_PIC18F46K22.c: 139:     SPBRGH1 = 0b00000001;
 10331   002CC2  0E01               	movlw	1
 10332   002CC4  6EB0               	movwf	176,c	;volatile
 10333                           
 10334                           ;OBCII_PIC18F46K22.c: 140:     SPBRG1 = 0b10100000;
 10335   002CC6  0EA0               	movlw	160
 10336   002CC8  6EAF               	movwf	175,c	;volatile
 10337   002CCA                     
 10338                           ; BSR set to: 15
 10339                           ;OBCII_PIC18F46K22.c: 143:     BAUDCON1bits.CKTXP = 0;
 10340   002CCA  98B8               	bcf	184,4,c	;volatile
 10341   002CCC                     
 10342                           ; BSR set to: 15
 10343                           ;OBCII_PIC18F46K22.c: 144:     BAUDCON1bits.DTRXP = 0;
 10344   002CCC  9AB8               	bcf	184,5,c	;volatile
 10345   002CCE                     
 10346                           ; BSR set to: 15
 10347                           ;OBCII_PIC18F46K22.c: 147:     RCSTA1bits.SPEN = 1;
 10348   002CCE  8EAB               	bsf	171,7,c	;volatile
 10349   002CD0                     
 10350                           ; BSR set to: 15
 10351                           ;OBCII_PIC18F46K22.c: 148:     RCSTA1bits.CREN = 1;
 10352   002CD0  88AB               	bsf	171,4,c	;volatile
 10353   002CD2                     
 10354                           ; BSR set to: 15
 10355                           ;OBCII_PIC18F46K22.c: 149:     RCSTA1bits.RX9 = 0;
 10356   002CD2  9CAB               	bcf	171,6,c	;volatile
 10357   002CD4                     
 10358                           ; BSR set to: 15
 10359                           ;OBCII_PIC18F46K22.c: 152:     PIE1bits.RC1IE = 1;
 10360   002CD4  8A9D               	bsf	157,5,c	;volatile
 10361   002CD6                     
 10362                           ; BSR set to: 15
 10363                           ;OBCII_PIC18F46K22.c: 153:     INTCONbits.PEIE = 1;
 10364   002CD6  8CF2               	bsf	242,6,c	;volatile
 10365   002CD8                     
 10366                           ; BSR set to: 15
 10367                           ;OBCII_PIC18F46K22.c: 154:     INTCONbits.GIE = 1;
 10368   002CD8  8EF2               	bsf	242,7,c	;volatile
 10369   002CDA                     
 10370                           ; BSR set to: 15
 10371   002CDA  0012               	return		;funcret
 10372   002CDC                     __end_of_UART1_Init:
 10373                           	callstack 0
 10374                           
 10375 ;; *************** function _LCD_init *****************
 10376 ;; Defined at:
 10377 ;;		line 106 in file "LCD.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;		None
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;		None
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      void 
 10384 ;; Registers used:
 10385 ;;		wreg, status,2, status,0, cstack
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;Total ram usage:        2 bytes
 10396 ;; Hardware stack levels used: 1
 10397 ;; Hardware stack levels required when called: 4
 10398 ;; This function calls:
 10399 ;;		_LCD_clear
 10400 ;;		_LCD_pulse_clock
 10401 ;;		_LCD_write_command
 10402 ;; This function is called by:
 10403 ;;		_main
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text56
 10408   0026AE                     __ptext56:
 10409                           	callstack 0
 10410   0026AE                     _LCD_init:
 10411                           	callstack 26
 10412   0026AE                     
 10413                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
 10414   0026AE  9495               	bcf	149,2,c	;volatile
 10415   0026B0  948C               	bcf	140,2,c	;volatile
 10416                           
 10417                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
 10418   0026B2  9695               	bcf	149,3,c	;volatile
 10419   0026B4  968C               	bcf	140,3,c	;volatile
 10420                           
 10421                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
 10422   0026B6  9895               	bcf	149,4,c	;volatile
 10423   0026B8  988C               	bcf	140,4,c	;volatile
 10424                           
 10425                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
 10426   0026BA  9A95               	bcf	149,5,c	;volatile
 10427   0026BC  9A8C               	bcf	140,5,c	;volatile
 10428                           
 10429                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
 10430   0026BE  9C95               	bcf	149,6,c	;volatile
 10431   0026C0  9C8C               	bcf	140,6,c	;volatile
 10432                           
 10433                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
 10434   0026C2  9E95               	bcf	149,7,c	;volatile
 10435   0026C4  9E8C               	bcf	140,7,c	;volatile
 10436   0026C6                     
 10437                           ;LCD.c: 121:     _delay((unsigned long)((60)*(16000000/4000.0)));
 10438   0026C6  0E02               	movlw	2
 10439   0026C8  6E08               	movwf	(??_LCD_init+1)^0,c
 10440   0026CA  0E38               	movlw	56
 10441   0026CC  6E07               	movwf	??_LCD_init^0,c
 10442   0026CE  0EAD               	movlw	173
 10443   0026D0                     u7237:
 10444   0026D0  2EE8               	decfsz	wreg,f,c
 10445   0026D2  D7FE               	bra	u7237
 10446   0026D4  2E07               	decfsz	??_LCD_init^0,f,c
 10447   0026D6  D7FC               	bra	u7237
 10448   0026D8  2E08               	decfsz	(??_LCD_init+1)^0,f,c
 10449   0026DA  D7FA               	bra	u7237
 10450   0026DC  0000               	nop	
 10451   0026DE                     
 10452                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
 10453   0026DE  9E8C               	bcf	140,7,c	;volatile
 10454   0026E0  9C8C               	bcf	140,6,c	;volatile
 10455   0026E2  8A8C               	bsf	140,5,c	;volatile
 10456   0026E4  888C               	bsf	140,4,c	;volatile
 10457   0026E6                     
 10458                           ;LCD.c: 127:     LCD_pulse_clock();
 10459   0026E6  ECE2  F016         	call	_LCD_pulse_clock	;wreg free
 10460   0026EA                     
 10461                           ;LCD.c: 130:     _delay((unsigned long)((6)*(16000000/4000.0)));
 10462   0026EA  0E20               	movlw	32
 10463   0026EC  6E07               	movwf	??_LCD_init^0,c
 10464   0026EE  0E2A               	movlw	42
 10465   0026F0                     u7247:
 10466   0026F0  2EE8               	decfsz	wreg,f,c
 10467   0026F2  D7FE               	bra	u7247
 10468   0026F4  2E07               	decfsz	??_LCD_init^0,f,c
 10469   0026F6  D7FC               	bra	u7247
 10470                           
 10471                           ;LCD.c: 133:     LCD_pulse_clock();
 10472   0026F8  ECE2  F016         	call	_LCD_pulse_clock	;wreg free
 10473   0026FC                     
 10474                           ;LCD.c: 136:     _delay((unsigned long)((150)*(16000000/4000000.0)));
 10475   0026FC  0EC8               	movlw	200
 10476   0026FE                     u7257:
 10477   0026FE  2EE8               	decfsz	wreg,f,c
 10478   002700  D7FE               	bra	u7257
 10479   002702                     
 10480                           ;LCD.c: 139:     LCD_pulse_clock();
 10481   002702  ECE2  F016         	call	_LCD_pulse_clock	;wreg free
 10482   002706                     
 10483                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
 10484   002706  9E8C               	bcf	140,7,c	;volatile
 10485   002708  9C8C               	bcf	140,6,c	;volatile
 10486   00270A  8A8C               	bsf	140,5,c	;volatile
 10487   00270C  988C               	bcf	140,4,c	;volatile
 10488   00270E                     
 10489                           ;LCD.c: 145:     LCD_pulse_clock();
 10490   00270E  ECE2  F016         	call	_LCD_pulse_clock	;wreg free
 10491   002712                     
 10492                           ;LCD.c: 148:     LCD_write_command(0x28);
 10493   002712  0E28               	movlw	40
 10494   002714  EC49  F00E         	call	_LCD_write_command
 10495   002718                     
 10496                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
 10497   002718  0100               	movlb	0	; () banked
 10498   00271A  51EF               	movf	_LCD_display_control& (0+255),w,b
 10499   00271C  EC49  F00E         	call	_LCD_write_command
 10500   002720                     
 10501                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
 10502   002720  0100               	movlb	0	; () banked
 10503   002722  51EE               	movf	_LCD_entry_mode& (0+255),w,b
 10504   002724  EC49  F00E         	call	_LCD_write_command
 10505   002728                     
 10506                           ;LCD.c: 151:     LCD_clear();
 10507   002728  EC90  F016         	call	_LCD_clear	;wreg free
 10508   00272C  0012               	return		;funcret
 10509   00272E                     __end_of_LCD_init:
 10510                           	callstack 0
 10511                           
 10512 ;; *************** function _LCD_clear *****************
 10513 ;; Defined at:
 10514 ;;		line 248 in file "LCD.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;		None
 10517 ;; Auto vars:     Size  Location     Type
 10518 ;;		None
 10519 ;; Return value:  Size  Location     Type
 10520 ;;                  1    wreg      void 
 10521 ;; Registers used:
 10522 ;;		wreg, status,2, status,0, cstack
 10523 ;; Tracked objects:
 10524 ;;		On entry : 0/0
 10525 ;;		On exit  : 0/0
 10526 ;;		Unchanged: 0/0
 10527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;Total ram usage:        1 bytes
 10533 ;; Hardware stack levels used: 1
 10534 ;; Hardware stack levels required when called: 3
 10535 ;; This function calls:
 10536 ;;		_LCD_write_command
 10537 ;; This function is called by:
 10538 ;;		_main
 10539 ;;		_welcome_splash
 10540 ;;		_main_menu
 10541 ;;		_print_RPM
 10542 ;;		_print_Vbatt
 10543 ;;		_print_AI_Temp
 10544 ;;		_print_ELMVer
 10545 ;;		_print_SAEVer
 10546 ;;		_diagnostic_trouble_codes
 10547 ;;		_clear_diagnostic_codes
 10548 ;;		_LCD_init
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551                           
 10552                           	psect	text57
 10553   002D20                     __ptext57:
 10554                           	callstack 0
 10555   002D20                     _LCD_clear:
 10556                           	callstack 26
 10557   002D20                     
 10558                           ;LCD.c: 251:     LCD_write_command(0x01);
 10559   002D20  0E01               	movlw	1
 10560   002D22  EC49  F00E         	call	_LCD_write_command
 10561   002D26                     
 10562                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(16000000/4000000.0)));
 10563   002D26  0E0C               	movlw	12
 10564   002D28  6E06               	movwf	??_LCD_clear^0,c
 10565   002D2A  0EA2               	movlw	162
 10566   002D2C                     u7267:
 10567   002D2C  2EE8               	decfsz	wreg,f,c
 10568   002D2E  D7FE               	bra	u7267
 10569   002D30  2E06               	decfsz	??_LCD_clear^0,f,c
 10570   002D32  D7FC               	bra	u7267
 10571   002D34                     
 10572                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
 10573   002D34  0100               	movlb	0	; () banked
 10574   002D36  51EE               	movf	_LCD_entry_mode& (0+255),w,b
 10575   002D38  EC49  F00E         	call	_LCD_write_command
 10576   002D3C  0012               	return		;funcret
 10577   002D3E                     __end_of_LCD_clear:
 10578                           	callstack 0
 10579                           
 10580 ;; *************** function _LCD_write_command *****************
 10581 ;; Defined at:
 10582 ;;		line 46 in file "LCD.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  command         1    wreg     unsigned char 
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  command         1    4[COMRAM] unsigned char 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		wreg, status,2, status,0, cstack
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10599 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;Total ram usage:        3 bytes
 10601 ;; Hardware stack levels used: 1
 10602 ;; Hardware stack levels required when called: 2
 10603 ;; This function calls:
 10604 ;;		_LCD_pulse_clock
 10605 ;; This function is called by:
 10606 ;;		_LCD_init
 10607 ;;		_LCD_cursor_set
 10608 ;;		_LCD_configure_cursor_blink
 10609 ;;		_LCD_clear
 10610 ;;		_LCD_cursor_increment
 10611 ;;		_LCD_cursor_decrement
 10612 ;;		_LCD_configure_lcd_display
 10613 ;;		_LCD_configure_cursor_display
 10614 ;;		_LCD_shift_reset
 10615 ;;		_LCD_shift_left
 10616 ;;		_LCD_shift_right
 10617 ;;		_LCD_configure_entry_id
 10618 ;;		_LCD_configure_entry_shift
 10619 ;;		_LCD_add_character
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           	psect	text58
 10624   001C92                     __ptext58:
 10625                           	callstack 0
 10626   001C92                     _LCD_write_command:
 10627                           	callstack 26
 10628                           
 10629                           ;incstack = 0
 10630                           ;LCD_write_command@command stored from wreg
 10631   001C92  6E05               	movwf	LCD_write_command@command^0,c
 10632   001C94                     
 10633                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
 10634   001C94  948C               	bcf	140,2,c	;volatile
 10635   001C96                     
 10636                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
 10637   001C96  6A03               	clrf	??_LCD_write_command^0,c
 10638   001C98  AE05               	btfss	LCD_write_command@command^0,7,c
 10639   001C9A  D001               	bra	u5925
 10640   001C9C  2A03               	incf	??_LCD_write_command^0,f,c
 10641   001C9E                     u5925:
 10642   001C9E  0E01               	movlw	1
 10643   001CA0  1603               	andwf	??_LCD_write_command^0,f,c
 10644   001CA2  3203               	rrcf	??_LCD_write_command^0,f,c
 10645   001CA4  3203               	rrcf	??_LCD_write_command^0,f,c
 10646   001CA6  508C               	movf	140,w,c	;volatile
 10647   001CA8  1803               	xorwf	??_LCD_write_command^0,w,c
 10648   001CAA  0B7F               	andlw	-129
 10649   001CAC  1803               	xorwf	??_LCD_write_command^0,w,c
 10650   001CAE  6E8C               	movwf	140,c	;volatile
 10651                           
 10652                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
 10653   001CB0  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 10654   001CB4  0E06               	movlw	6
 10655   001CB6  6E04               	movwf	(??_LCD_write_command+1)^0,c
 10656   001CB8                     u5935:
 10657   001CB8  90D8               	bcf	status,0,c
 10658   001CBA  3203               	rrcf	??_LCD_write_command^0,f,c
 10659   001CBC  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
 10660   001CBE  EF5C  F00E         	goto	u5935
 10661   001CC2  0E01               	movlw	1
 10662   001CC4  1603               	andwf	??_LCD_write_command^0,f,c
 10663   001CC6  3A03               	swapf	??_LCD_write_command^0,f,c
 10664   001CC8  4603               	rlncf	??_LCD_write_command^0,f,c
 10665   001CCA  4603               	rlncf	??_LCD_write_command^0,f,c
 10666   001CCC  508C               	movf	140,w,c	;volatile
 10667   001CCE  1803               	xorwf	??_LCD_write_command^0,w,c
 10668   001CD0  0BBF               	andlw	-65
 10669   001CD2  1803               	xorwf	??_LCD_write_command^0,w,c
 10670   001CD4  6E8C               	movwf	140,c	;volatile
 10671                           
 10672                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
 10673   001CD6  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 10674   001CDA  0E05               	movlw	5
 10675   001CDC  6E04               	movwf	(??_LCD_write_command+1)^0,c
 10676   001CDE                     u5945:
 10677   001CDE  90D8               	bcf	status,0,c
 10678   001CE0  3203               	rrcf	??_LCD_write_command^0,f,c
 10679   001CE2  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
 10680   001CE4  EF6F  F00E         	goto	u5945
 10681   001CE8  0E01               	movlw	1
 10682   001CEA  1603               	andwf	??_LCD_write_command^0,f,c
 10683   001CEC  3A03               	swapf	??_LCD_write_command^0,f,c
 10684   001CEE  4603               	rlncf	??_LCD_write_command^0,f,c
 10685   001CF0  508C               	movf	140,w,c	;volatile
 10686   001CF2  1803               	xorwf	??_LCD_write_command^0,w,c
 10687   001CF4  0BDF               	andlw	-33
 10688   001CF6  1803               	xorwf	??_LCD_write_command^0,w,c
 10689   001CF8  6E8C               	movwf	140,c	;volatile
 10690                           
 10691                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
 10692   001CFA  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 10693   001CFE  3A03               	swapf	??_LCD_write_command^0,f,c
 10694   001D00  0E0F               	movlw	15
 10695   001D02  1603               	andwf	??_LCD_write_command^0,f,c
 10696   001D04  0E01               	movlw	1
 10697   001D06  1603               	andwf	??_LCD_write_command^0,f,c
 10698   001D08  3A03               	swapf	??_LCD_write_command^0,f,c
 10699   001D0A  508C               	movf	140,w,c	;volatile
 10700   001D0C  1803               	xorwf	??_LCD_write_command^0,w,c
 10701   001D0E  0BEF               	andlw	-17
 10702   001D10  1803               	xorwf	??_LCD_write_command^0,w,c
 10703   001D12  6E8C               	movwf	140,c	;volatile
 10704   001D14                     
 10705                           ;LCD.c: 57:     LCD_pulse_clock();
 10706   001D14  ECE2  F016         	call	_LCD_pulse_clock	;wreg free
 10707   001D18                     
 10708                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
 10709   001D18  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 10710   001D1C  90D8               	bcf	status,0,c
 10711   001D1E  3203               	rrcf	??_LCD_write_command^0,f,c
 10712   001D20  90D8               	bcf	status,0,c
 10713   001D22  3203               	rrcf	??_LCD_write_command^0,f,c
 10714   001D24  90D8               	bcf	status,0,c
 10715   001D26  3203               	rrcf	??_LCD_write_command^0,f,c
 10716   001D28  0E01               	movlw	1
 10717   001D2A  1603               	andwf	??_LCD_write_command^0,f,c
 10718   001D2C  3203               	rrcf	??_LCD_write_command^0,f,c
 10719   001D2E  3203               	rrcf	??_LCD_write_command^0,f,c
 10720   001D30  508C               	movf	140,w,c	;volatile
 10721   001D32  1803               	xorwf	??_LCD_write_command^0,w,c
 10722   001D34  0B7F               	andlw	-129
 10723   001D36  1803               	xorwf	??_LCD_write_command^0,w,c
 10724   001D38  6E8C               	movwf	140,c	;volatile
 10725   001D3A                     
 10726                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
 10727   001D3A  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 10728   001D3E  90D8               	bcf	status,0,c
 10729   001D40  3203               	rrcf	??_LCD_write_command^0,f,c
 10730   001D42  90D8               	bcf	status,0,c
 10731   001D44  3203               	rrcf	??_LCD_write_command^0,f,c
 10732   001D46  0E01               	movlw	1
 10733   001D48  1603               	andwf	??_LCD_write_command^0,f,c
 10734   001D4A  3A03               	swapf	??_LCD_write_command^0,f,c
 10735   001D4C  4603               	rlncf	??_LCD_write_command^0,f,c
 10736   001D4E  4603               	rlncf	??_LCD_write_command^0,f,c
 10737   001D50  508C               	movf	140,w,c	;volatile
 10738   001D52  1803               	xorwf	??_LCD_write_command^0,w,c
 10739   001D54  0BBF               	andlw	-65
 10740   001D56  1803               	xorwf	??_LCD_write_command^0,w,c
 10741   001D58  6E8C               	movwf	140,c	;volatile
 10742   001D5A                     
 10743                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
 10744   001D5A  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 10745   001D5E  90D8               	bcf	status,0,c
 10746   001D60  3203               	rrcf	??_LCD_write_command^0,f,c
 10747   001D62  0E01               	movlw	1
 10748   001D64  1603               	andwf	??_LCD_write_command^0,f,c
 10749   001D66  3A03               	swapf	??_LCD_write_command^0,f,c
 10750   001D68  4603               	rlncf	??_LCD_write_command^0,f,c
 10751   001D6A  508C               	movf	140,w,c	;volatile
 10752   001D6C  1803               	xorwf	??_LCD_write_command^0,w,c
 10753   001D6E  0BDF               	andlw	-33
 10754   001D70  1803               	xorwf	??_LCD_write_command^0,w,c
 10755   001D72  6E8C               	movwf	140,c	;volatile
 10756   001D74                     
 10757                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
 10758   001D74  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 10759   001D78  0E01               	movlw	1
 10760   001D7A  1603               	andwf	??_LCD_write_command^0,f,c
 10761   001D7C  3A03               	swapf	??_LCD_write_command^0,f,c
 10762   001D7E  508C               	movf	140,w,c	;volatile
 10763   001D80  1803               	xorwf	??_LCD_write_command^0,w,c
 10764   001D82  0BEF               	andlw	-17
 10765   001D84  1803               	xorwf	??_LCD_write_command^0,w,c
 10766   001D86  6E8C               	movwf	140,c	;volatile
 10767   001D88                     
 10768                           ;LCD.c: 66:     LCD_pulse_clock();
 10769   001D88  ECE2  F016         	call	_LCD_pulse_clock	;wreg free
 10770   001D8C  0012               	return		;funcret
 10771   001D8E                     __end_of_LCD_write_command:
 10772                           	callstack 0
 10773                           
 10774 ;; *************** function _LCD_pulse_clock *****************
 10775 ;; Defined at:
 10776 ;;		line 34 in file "LCD.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;		None
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10794 ;;Total ram usage:        0 bytes
 10795 ;; Hardware stack levels used: 1
 10796 ;; Hardware stack levels required when called: 1
 10797 ;; This function calls:
 10798 ;;		Nothing
 10799 ;; This function is called by:
 10800 ;;		_LCD_write_command
 10801 ;;		_LCD_write_data
 10802 ;;		_LCD_init
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text59
 10807   002DC4                     __ptext59:
 10808                           	callstack 0
 10809   002DC4                     _LCD_pulse_clock:
 10810                           	callstack 26
 10811   002DC4                     
 10812                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
 10813   002DC4  868C               	bsf	140,3,c	;volatile
 10814   002DC6                     
 10815                           ;LCD.c: 37:   _delay((unsigned long)((60)*(16000000/4000000.0)));
 10816   002DC6  0E50               	movlw	80
 10817   002DC8                     u7277:
 10818   002DC8  2EE8               	decfsz	wreg,f,c
 10819   002DCA  D7FE               	bra	u7277
 10820   002DCC                     
 10821                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
 10822   002DCC  968C               	bcf	140,3,c	;volatile
 10823   002DCE  0012               	return		;funcret
 10824   002DD0                     __end_of_LCD_pulse_clock:
 10825                           	callstack 0
 10826                           
 10827 ;; *************** function _ADC_init *****************
 10828 ;; Defined at:
 10829 ;;		line 113 in file "OBCII_PIC18F46K22.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;		None
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;		None
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  1    wreg      void 
 10836 ;; Registers used:
 10837 ;;		wreg, status,2
 10838 ;; Tracked objects:
 10839 ;;		On entry : 0/0
 10840 ;;		On exit  : 0/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;Total ram usage:        0 bytes
 10848 ;; Hardware stack levels used: 1
 10849 ;; Hardware stack levels required when called: 1
 10850 ;; This function calls:
 10851 ;;		Nothing
 10852 ;; This function is called by:
 10853 ;;		_main
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text60
 10858   002DD0                     __ptext60:
 10859                           	callstack 0
 10860   002DD0                     _ADC_init:
 10861                           	callstack 29
 10862   002DD0                     
 10863                           ;OBCII_PIC18F46K22.c: 115:     ADCON0 = 0b00000001;
 10864   002DD0  0E01               	movlw	1
 10865   002DD2  6EC2               	movwf	194,c	;volatile
 10866   002DD4                     
 10867                           ;OBCII_PIC18F46K22.c: 116:     ADCON1 = 0b00000000;
 10868   002DD4  6AC1               	clrf	193,c	;volatile
 10869                           
 10870                           ;OBCII_PIC18F46K22.c: 117:     ADCON2 = 0b10101010;
 10871   002DD6  0EAA               	movlw	170
 10872   002DD8  6EC0               	movwf	192,c	;volatile
 10873   002DDA  0012               	return		;funcret
 10874   002DDC                     __end_of_ADC_init:
 10875                           	callstack 0
 10876                           
 10877 ;; *************** function _UART_ISR *****************
 10878 ;; Defined at:
 10879 ;;		line 159 in file "OBCII_PIC18F46K22.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;		None
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;		None
 10884 ;; Return value:  Size  Location     Type
 10885 ;;                  1    wreg      void 
 10886 ;; Registers used:
 10887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10888 ;; Tracked objects:
 10889 ;;		On entry : 0/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10895 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10897 ;;Total ram usage:        2 bytes
 10898 ;; Hardware stack levels used: 1
 10899 ;; This function calls:
 10900 ;;		Nothing
 10901 ;; This function is called by:
 10902 ;;		Interrupt level 2
 10903 ;; This function uses a non-reentrant model
 10904 ;;
 10905                           
 10906                           	psect	intcode
 10907   000008                     __pintcode:
 10908                           	callstack 0
 10909   000008                     _UART_ISR:
 10910                           	callstack 19
 10911                           
 10912                           ;incstack = 0
 10913   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10914   00000A  CFD9 F001          	movff	fsr2l,??_UART_ISR
 10915   00000E  CFDA F002          	movff	fsr2h,??_UART_ISR+1
 10916   000012                     
 10917                           ;OBCII_PIC18F46K22.c: 160:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
 10918   000012  AA9D               	btfss	157,5,c	;volatile
 10919   000014  EF0E  F000         	goto	i2u464_41
 10920   000018  EF10  F000         	goto	i2u464_40
 10921   00001C                     i2u464_41:
 10922   00001C  EF6A  F000         	goto	i2l170
 10923   000020                     i2u464_40:
 10924   000020  AA9E               	btfss	158,5,c	;volatile
 10925   000022  EF15  F000         	goto	i2u465_41
 10926   000026  EF17  F000         	goto	i2u465_40
 10927   00002A                     i2u465_41:
 10928   00002A  EF6A  F000         	goto	i2l170
 10929   00002E                     i2u465_40:
 10930   00002E                     
 10931                           ;OBCII_PIC18F46K22.c: 161:         RX_char = RCREG1;
 10932   00002E  CFAE F05C          	movff	4014,_RX_char	;volatile
 10933                           
 10934                           ;OBCII_PIC18F46K22.c: 164:         if (RCSTAbits.OERR) {
 10935   000032  A2AB               	btfss	171,1,c	;volatile
 10936   000034  EF1E  F000         	goto	i2u466_41
 10937   000038  EF20  F000         	goto	i2u466_40
 10938   00003C                     i2u466_41:
 10939   00003C  EF22  F000         	goto	i2l4656
 10940   000040                     i2u466_40:
 10941   000040                     
 10942                           ;OBCII_PIC18F46K22.c: 165:             RCSTAbits.CREN = 0;
 10943   000040  98AB               	bcf	171,4,c	;volatile
 10944                           
 10945                           ;OBCII_PIC18F46K22.c: 166:             RCSTAbits.CREN = 1;
 10946   000042  88AB               	bsf	171,4,c	;volatile
 10947   000044                     i2l4656:
 10948                           
 10949                           ;OBCII_PIC18F46K22.c: 170:         if ((RX_char >= 32 && RX_char <= 126) && RX_char != '
      +                          >') {
 10950   000044  0E1F               	movlw	31
 10951   000046  645C               	cpfsgt	_RX_char^0,c
 10952   000048  EF28  F000         	goto	i2u467_41
 10953   00004C  EF2A  F000         	goto	i2u467_40
 10954   000050                     i2u467_41:
 10955   000050  EF45  F000         	goto	i2l4666
 10956   000054                     i2u467_40:
 10957   000054  0E7F               	movlw	127
 10958   000056  605C               	cpfslt	_RX_char^0,c
 10959   000058  EF30  F000         	goto	i2u468_41
 10960   00005C  EF32  F000         	goto	i2u468_40
 10961   000060                     i2u468_41:
 10962   000060  EF45  F000         	goto	i2l4666
 10963   000064                     i2u468_40:
 10964   000064  0E3E               	movlw	62
 10965   000066  185C               	xorwf	_RX_char^0,w,c
 10966   000068  B4D8               	btfsc	status,2,c
 10967   00006A  EF39  F000         	goto	i2u469_41
 10968   00006E  EF3B  F000         	goto	i2u469_40
 10969   000072                     i2u469_41:
 10970   000072  EF45  F000         	goto	i2l4666
 10971   000076                     i2u469_40:
 10972   000076                     
 10973                           ;OBCII_PIC18F46K22.c: 171:             buffer[buffer_count] = RX_char;
 10974   000076  0E00               	movlw	low _buffer
 10975   000078  0100               	movlb	0	; () banked
 10976   00007A  25CB               	addwf	_buffer_count& (0+255),w,b
 10977   00007C  6ED9               	movwf	fsr2l,c
 10978   00007E  6ADA               	clrf	fsr2h,c
 10979   000080  0E02               	movlw	high _buffer
 10980   000082  22DA               	addwfc	fsr2h,f,c
 10981   000084  C05C  FFDF         	movff	_RX_char,indf2
 10982   000088                     
 10983                           ; BSR set to: 0
 10984                           ;OBCII_PIC18F46K22.c: 172:             buffer_count++;
 10985   000088  2BCB               	incf	_buffer_count& (0+255),f,b
 10986   00008A                     i2l4666:
 10987                           
 10988                           ;OBCII_PIC18F46K22.c: 175:         if (RX_char == '>' || RX_char == '\n' || buffer_count
      +                           >= 256 -1) {
 10989   00008A  0E3E               	movlw	62
 10990   00008C  185C               	xorwf	_RX_char^0,w,c
 10991   00008E  B4D8               	btfsc	status,2,c
 10992   000090  EF4C  F000         	goto	i2u470_41
 10993   000094  EF4E  F000         	goto	i2u470_40
 10994   000098                     i2u470_41:
 10995   000098  EF60  F000         	goto	i2l4672
 10996   00009C                     i2u470_40:
 10997   00009C  0E0A               	movlw	10
 10998   00009E  185C               	xorwf	_RX_char^0,w,c
 10999   0000A0  B4D8               	btfsc	status,2,c
 11000   0000A2  EF55  F000         	goto	i2u471_41
 11001   0000A6  EF57  F000         	goto	i2u471_40
 11002   0000AA                     i2u471_41:
 11003   0000AA  EF60  F000         	goto	i2l4672
 11004   0000AE                     i2u471_40:
 11005   0000AE  0100               	movlb	0	; () banked
 11006   0000B0  29CB               	incf	_buffer_count& (0+255),w,b
 11007   0000B2  A4D8               	btfss	status,2,c
 11008   0000B4  EF5E  F000         	goto	i2u472_41
 11009   0000B8  EF60  F000         	goto	i2u472_40
 11010   0000BC                     i2u472_41:
 11011   0000BC  EF6A  F000         	goto	i2l170
 11012   0000C0                     i2u472_40:
 11013   0000C0                     i2l4672:
 11014                           
 11015                           ;OBCII_PIC18F46K22.c: 176:             buffer[buffer_count] = '\0';
 11016   0000C0  0E00               	movlw	low _buffer
 11017   0000C2  0100               	movlb	0	; () banked
 11018   0000C4  25CB               	addwf	_buffer_count& (0+255),w,b
 11019   0000C6  6ED9               	movwf	fsr2l,c
 11020   0000C8  6ADA               	clrf	fsr2h,c
 11021   0000CA  0E02               	movlw	high _buffer
 11022   0000CC  22DA               	addwfc	fsr2h,f,c
 11023   0000CE  6ADF               	clrf	indf2,c
 11024   0000D0                     
 11025                           ; BSR set to: 0
 11026                           ;OBCII_PIC18F46K22.c: 177:             message_complete = 1;
 11027   0000D0  0E01               	movlw	1
 11028   0000D2  6E5B               	movwf	_message_complete^0,c	;volatile
 11029   0000D4                     i2l170:
 11030   0000D4  C002  FFDA         	movff	??_UART_ISR+1,fsr2h
 11031   0000D8  C001  FFD9         	movff	??_UART_ISR,fsr2l
 11032   0000DC  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11033   0000DE  0011               	retfie		f
 11034   0000E0                     __end_of_UART_ISR:
 11035                           	callstack 0
 11036                           
 11037                           	psect	rparam
 11038   000001                     ___rparam_used  equ	1
 11039   000000                     ___param_bank   equ	0
 11040   000000                     __Lparam        equ	__Lrparam
 11041   000000                     __Hparam        equ	__Hrparam
 11042                           
 11043                           	psect	temp
 11044   00005D                     btemp:
 11045                           	callstack 0
 11046   00005D                     	ds	1
 11047   00005D                     int$flags       set	btemp
 11048   00005E                     wtemp8          set	btemp+1
 11049   00005E                     ttemp5          set	btemp+1
 11050   000061                     ttemp6          set	btemp+4
 11051   000065                     ttemp7          set	btemp+8
 11052                           
 11053                           	psect	config
 11054                           
 11055                           ; Padding undefined space
 11056   300000                     	org	3145728
 11057   300000  FF                 	db	255
 11058                           
 11059                           ;Config register CONFIG1H @ 0x300001
 11060                           ;	Oscillator Selection bits
 11061                           ;	FOSC = INTIO67, Internal oscillator block
 11062                           ;	4X PLL Enable
 11063                           ;	PLLCFG = ON, Oscillator multiplied by 4
 11064                           ;	Primary clock enable bit
 11065                           ;	PRICLKEN = ON, Primary clock is always enabled
 11066                           ;	Fail-Safe Clock Monitor Enable bit
 11067                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11068                           ;	Internal/External Oscillator Switchover bit
 11069                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11070   300001                     	org	3145729
 11071   300001  38                 	db	56
 11072                           
 11073                           ;Config register CONFIG2L @ 0x300002
 11074                           ;	Power-up Timer Enable bit
 11075                           ;	PWRTEN = ON, Power up timer enabled
 11076                           ;	Brown-out Reset Enable bits
 11077                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11078                           ;	Brown Out Reset Voltage bits
 11079                           ;	BORV = 250, VBOR set to 2.50 V nominal
 11080   300002                     	org	3145730
 11081   300002  0E                 	db	14
 11082                           
 11083                           ;Config register CONFIG2H @ 0x300003
 11084                           ;	Watchdog Timer Enable bits
 11085                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 11086                           ;	Watchdog Timer Postscale Select bits
 11087                           ;	WDTPS = 32768, 1:32768
 11088   300003                     	org	3145731
 11089   300003  3C                 	db	60
 11090                           
 11091                           ; Padding undefined space
 11092   300004                     	org	3145732
 11093   300004  FF                 	db	255
 11094                           
 11095                           ;Config register CONFIG3H @ 0x300005
 11096                           ;	CCP2 MUX bit
 11097                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 11098                           ;	PORTB A/D Enable bit
 11099                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 11100                           ;	P3A/CCP3 Mux bit
 11101                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 11102                           ;	HFINTOSC Fast Start-up
 11103                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 11104                           ;	Timer3 Clock input mux bit
 11105                           ;	T3CMX = PORTC0, T3CKI is on RC0
 11106                           ;	ECCP2 B output mux bit
 11107                           ;	P2BMX = PORTD2, P2B is on RD2
 11108                           ;	MCLR Pin Enable bit
 11109                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 11110   300005                     	org	3145733
 11111   300005  BF                 	db	191
 11112                           
 11113                           ;Config register CONFIG4L @ 0x300006
 11114                           ;	Stack Full/Underflow Reset Enable bit
 11115                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11116                           ;	Single-Supply ICSP Enable bit
 11117                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 11118                           ;	Extended Instruction Set Enable bit
 11119                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11120                           ;	Background Debug
 11121                           ;	DEBUG = 0x1, unprogrammed default
 11122   300006                     	org	3145734
 11123   300006  85                 	db	133
 11124                           
 11125                           ; Padding undefined space
 11126   300007                     	org	3145735
 11127   300007  FF                 	db	255
 11128                           
 11129                           ;Config register CONFIG5L @ 0x300008
 11130                           ;	Code Protection Block 0
 11131                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11132                           ;	Code Protection Block 1
 11133                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11134                           ;	Code Protection Block 2
 11135                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11136                           ;	Code Protection Block 3
 11137                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11138   300008                     	org	3145736
 11139   300008  0F                 	db	15
 11140                           
 11141                           ;Config register CONFIG5H @ 0x300009
 11142                           ;	Boot Block Code Protection bit
 11143                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11144                           ;	Data EEPROM Code Protection bit
 11145                           ;	CPD = OFF, Data EEPROM not code-protected
 11146   300009                     	org	3145737
 11147   300009  C0                 	db	192
 11148                           
 11149                           ;Config register CONFIG6L @ 0x30000A
 11150                           ;	Write Protection Block 0
 11151                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11152                           ;	Write Protection Block 1
 11153                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11154                           ;	Write Protection Block 2
 11155                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11156                           ;	Write Protection Block 3
 11157                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11158   30000A                     	org	3145738
 11159   30000A  0F                 	db	15
 11160                           
 11161                           ;Config register CONFIG6H @ 0x30000B
 11162                           ;	Configuration Register Write Protection bit
 11163                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11164                           ;	Boot Block Write Protection bit
 11165                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11166                           ;	Data EEPROM Write Protection bit
 11167                           ;	WRTD = OFF, Data EEPROM not write-protected
 11168   30000B                     	org	3145739
 11169   30000B  E0                 	db	224
 11170                           
 11171                           ;Config register CONFIG7L @ 0x30000C
 11172                           ;	Table Read Protection Block 0
 11173                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11174                           ;	Table Read Protection Block 1
 11175                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11176                           ;	Table Read Protection Block 2
 11177                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11178                           ;	Table Read Protection Block 3
 11179                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11180   30000C                     	org	3145740
 11181   30000C  0F                 	db	15
 11182                           
 11183                           ;Config register CONFIG7H @ 0x30000D
 11184                           ;	Boot Block Table Read Protection bit
 11185                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11186   30000D                     	org	3145741
 11187   30000D  40                 	db	64
 11188                           tosu	equ	0xFFF
 11189                           tosh	equ	0xFFE
 11190                           tosl	equ	0xFFD
 11191                           stkptr	equ	0xFFC
 11192                           pclatu	equ	0xFFB
 11193                           pclath	equ	0xFFA
 11194                           pcl	equ	0xFF9
 11195                           tblptru	equ	0xFF8
 11196                           tblptrh	equ	0xFF7
 11197                           tblptrl	equ	0xFF6
 11198                           tablat	equ	0xFF5
 11199                           prodh	equ	0xFF4
 11200                           prodl	equ	0xFF3
 11201                           indf0	equ	0xFEF
 11202                           postinc0	equ	0xFEE
 11203                           postdec0	equ	0xFED
 11204                           preinc0	equ	0xFEC
 11205                           plusw0	equ	0xFEB
 11206                           fsr0h	equ	0xFEA
 11207                           fsr0l	equ	0xFE9
 11208                           wreg	equ	0xFE8
 11209                           indf1	equ	0xFE7
 11210                           postinc1	equ	0xFE6
 11211                           postdec1	equ	0xFE5
 11212                           preinc1	equ	0xFE4
 11213                           plusw1	equ	0xFE3
 11214                           fsr1h	equ	0xFE2
 11215                           fsr1l	equ	0xFE1
 11216                           bsr	equ	0xFE0
 11217                           indf2	equ	0xFDF
 11218                           postinc2	equ	0xFDE
 11219                           postdec2	equ	0xFDD
 11220                           preinc2	equ	0xFDC
 11221                           plusw2	equ	0xFDB
 11222                           fsr2h	equ	0xFDA
 11223                           fsr2l	equ	0xFD9
 11224                           status	equ	0xFD8

Data Sizes:
    Strings     305
    Constant    0
    Data        4
    BSS         449
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     73     144
    BANK1           256      0     124
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    atox@ep	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2232(BANK1[32]), 

    atox@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    atox@pll	PTR unsigned long long  size(1) Largest target is 8
		 -> vfsfcnvrt@llu(BANK0[8]), 

    extract_single_pid_byte@A	PTR unsigned char  size(1) Largest target is 1
		 -> print_AI_Temp@A(BANK0[1]), 

    extract_single_pid_byte@pid	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[6]), 

    extract_single_pid_byte@ptr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    extract_two_pid_bytes@A	PTR unsigned char  size(1) Largest target is 1
		 -> print_RPM@A(COMRAM[1]), 

    extract_two_pid_bytes@B	PTR unsigned char  size(1) Largest target is 1
		 -> print_RPM@B(COMRAM[1]), 

    extract_two_pid_bytes@pid	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), 

    extract_two_pid_bytes@ptr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fgetc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    fgetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    fgetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), rpm_string(BANK0[16]), STR_11(CODE[17]), 
		 -> STR_12(CODE[16]), STR_13(CODE[2]), STR_14(CODE[2]), STR_2(CODE[17]), 
		 -> STR_20(CODE[6]), STR_21(CODE[4]), STR_23(CODE[6]), STR_24(CODE[6]), 
		 -> STR_25(CODE[4]), STR_3(CODE[15]), STR_31(CODE[4]), STR_32(CODE[4]), 
		 -> STR_33(CODE[2]), STR_35(CODE[4]), STR_37(CODE[3]), STR_39(CODE[11]), 
		 -> STR_40(CODE[15]), STR_41(CODE[17]), STR_43(CODE[14]), STR_44(CODE[11]), 
		 -> STR_45(CODE[16]), STR_46(CODE[11]), STR_6(CODE[17]), STR_8(CODE[17]), 
		 -> STR_9(CODE[17]), 

    memset@dest	PTR void  size(2) Largest target is 256
		 -> buffer(BANK2[256]), 

    memset@p	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), 

    S2052$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    S2052$source	PTR const unsigned char  size(2) Largest target is 0

    skipws@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    sp__memset	PTR void  size(2) Largest target is 256
		 -> buffer(BANK2[256]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_30(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(BANK0[16]), 

    sscanf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sscanf(BANK0[2]), 

    sscanf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_15(CODE[6]), STR_26(CODE[3]), 

    sscanf@s	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), STR_29(CODE[6]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), STR_29(CODE[6]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), STR_29(CODE[6]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), STR_29(CODE[6]), 

    __strtoxll@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2232(BANK1[32]), 

    __strtoxll@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> atox@ep(BANK0[2]), 

    __strtoxll@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2232(BANK1[32]), 

    UART1_SendString@string	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), STR_10(CODE[6]), STR_16(CODE[6]), STR_22(CODE[6]), 
		 -> STR_27(CODE[6]), STR_34(CODE[5]), STR_36(CODE[6]), STR_38(CODE[4]), 
		 -> STR_4(CODE[6]), STR_42(CODE[4]), STR_5(CODE[5]), STR_7(CODE[5]), 

    ungetc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    ungetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    ungetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_30(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_30(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_30(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfscanf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfscanf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_15(CODE[6]), STR_26(CODE[3]), 

    vfscanf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_15(CODE[6]), STR_26(CODE[3]), 

    vfscanf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    vfsfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfsfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfscanf@cfmt(BANK0[2]), 

    vfsfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    vfsfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> extract_single_pid_byte@a(COMRAM[2]), extract_two_pid_bytes@a(BANK0[2]), extract_two_pid_bytes@b(BANK0[2]), ?_sprintf(COMRAM[2]), 
		 -> ?_sscanf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _welcome_splash->_LCD_write_variable
    _LCD_write_variable->___aldiv
    _live_reading_mode->_print_RPM
    _print_Vbatt->_LCD_write_string
    _print_AI_Temp->_extract_single_pid_byte
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _strstr->_strncmp
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atox
    _atox->___strtoxll
    _skipws->_fgetc
    _fgetc->_getch
    ___strtoxll->___omul
    _display_system_info->_print_ELMVer
    _display_system_info->_print_SAEVer
    _print_SAEVer->_LCD_write_string
    _print_ELMVer->_LCD_write_string
    _diagnostic_trouble_codes->_LCD_write_string
    _diagnostic_trouble_codes->_memset
    _LCD_write_char->_LCD_write_data
    _clear_diagnostic_codes->_LCD_write_string
    _parsing_notif->_LCD_write_string
    _display_mm->_LCD_write_string
    _clear_parsing_notif->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _UART1_SendString->_UART1_SendChar
    _LCD_configure_cursor_blink->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_menu
    _print_RPM->_extract_two_pid_bytes
    _extract_two_pid_bytes->_sscanf
    _print_AI_Temp->_extract_single_pid_byte
    _extract_single_pid_byte->_sscanf
    _sscanf->_vfscanf
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atox

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   73870
                                             71 BANK0      2     2      0
                           _ADC_init
                          _LCD_clear
                           _LCD_init
                         _UART1_Init
                   _UART1_SendString
                         _input_init
                          _main_menu
                     _welcome_splash
 ---------------------------------------------------------------------------------
 (1) _welcome_splash                                       6     6      0    4076
                                             27 COMRAM     6     6      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                 _LCD_write_variable
                   _UART1_SendString
                            ___lwdiv
                            ___lwmod
                          _ccp1_init
                          _tmr1_init
 ---------------------------------------------------------------------------------
 (2) _tmr1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ccp1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_write_variable                                  11     6      5    1522
                                             16 COMRAM    11     6      5
                     _LCD_write_data
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8      94
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     300
                                              2 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            2     2      0   68453
                                             69 BANK0      2     2      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
             _clear_diagnostic_codes
           _diagnostic_trouble_codes
                         _display_mm
                _display_system_info
                  _live_reading_mode
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _live_reading_mode                                    0     0      0   41449
                      _print_AI_Temp
                          _print_RPM
                        _print_Vbatt
 ---------------------------------------------------------------------------------
 (3) _print_Vbatt                                          1     1      0    6017
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _print_RPM                                            4     4      0   18107
                                             86 COMRAM     4     4      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                            ___awdiv
                _clear_parsing_notif
                         _display_mm
              _extract_two_pid_bytes
                             _memset
                      _parsing_notif
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _extract_two_pid_bytes                               10     6      4    9490
                                             59 BANK0     10     6      4
                             _sscanf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     451
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_AI_Temp                                        2     2      0   17325
                                             62 BANK0      2     2      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
            _extract_single_pid_byte
                      _parsing_notif
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             19    14      5    1988
                                             28 COMRAM    17    12      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             6     2      4    1670
                                             22 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           13    10      3    1470
                                             10 COMRAM    12     9      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     329
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     244
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     253
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _extract_single_pid_byte                              7     4      3    9385
                                             86 COMRAM     4     4      0
                                             59 BANK0      3     0      3
                             _sscanf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               6     2      4     869
                                              9 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     266
                                              2 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     139
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     136
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) _sscanf                                              22    14      8    8142
                                             37 BANK0     22    14      8
                             _strlen (ARG)
                            _vfscanf
 ---------------------------------------------------------------------------------
 (6) _vfscanf                                             10     6      4    7844
                                             27 BANK0     10     6      4
                          _vfsfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfsfcnvrt                                           36    32      4    7453
                                             84 COMRAM     2     2      0
                                             10 BANK0     17    13      4
                               _atox
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (8) _atox                                                20    18      2    4820
                                             74 COMRAM    10     8      2
                                              0 BANK0     10    10      0
                         ___strtoxll
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (8) _skipws                                               4     3      1     779
                                             13 COMRAM     4     3      1
                              _fgetc
                             _ungetc
 ---------------------------------------------------------------------------------
 (8) _ungetc                                               5     2      3     303
                                              2 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (9) _fgetc                                                9     7      2     312
                                              4 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (10) _getch                                               2     0      2       0
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) ___strtoxll                                          48    40      8    2113
                                             26 COMRAM    48    40      8
                             ___omul
 ---------------------------------------------------------------------------------
 (10) ___omul                                             24     8     16     142
                                              2 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (2) _display_system_info                                  0     0      0   12486
                     _LCD_cursor_set
                       _print_ELMVer
                       _print_SAEVer
 ---------------------------------------------------------------------------------
 (3) _print_SAEVer                                         1     1      0    5881
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (3) _print_ELMVer                                         1     1      0    5881
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (2) _diagnostic_trouble_codes                             3     3      0    5328
                                             10 COMRAM     3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                     _LCD_write_char
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                             _memset
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     155
                                              2 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       1     1      0     423
                                              5 COMRAM     1     1      0
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (2) _clear_diagnostic_codes                               4     4      0    6344
                                             10 COMRAM     4     4      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _parsing_notif                                        0     0      0    1323
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _display_mm                                           0     0      0    1323
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _clear_parsing_notif                                  0     0      0    1323
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     5     3      2     599
                                              5 COMRAM     5     3      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (3) _LCD_write_data                                       3     3      0     376
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_set                                       2     1      1     724
                                              5 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _UART1_SendString                                     6     4      2     213
                                              3 COMRAM     6     4      2
                     _UART1_SendChar
 ---------------------------------------------------------------------------------
 (3) _UART1_SendChar                                       1     1      0      47
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_configure_cursor_blink                           1     1      0     423
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _input_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     752
                                              6 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     376
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_write_command                                    3     3      0     376
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART_ISR                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _UART1_Init
   _UART1_SendString
     _UART1_SendChar
   _input_init
   _main_menu
     _LCD_clear
     _LCD_configure_cursor_blink
       _LCD_write_command
     _LCD_cursor_set
       _LCD_write_command
     _clear_diagnostic_codes
       _LCD_clear
       _LCD_configure_cursor_blink
       _LCD_cursor_set
       _LCD_write_string
         _LCD_write_data
           _LCD_pulse_clock
       _UART1_SendString
       _clear_parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _display_mm
         _LCD_cursor_set
         _LCD_write_string
       _parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _readADC
     _diagnostic_trouble_codes
       _LCD_clear
       _LCD_cursor_set
       _LCD_write_char
         _LCD_write_data
       _LCD_write_string
       _UART1_SendString
       _clear_parsing_notif
       _memset
       _parsing_notif
     _display_mm
     _display_system_info
       _LCD_cursor_set
       _print_ELMVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
       _print_SAEVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
     _live_reading_mode
       _print_AI_Temp
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _extract_single_pid_byte
           _sscanf
             _strlen (ARG)
             _vfscanf (ARG)
               _vfsfcnvrt
                 _atox
                   ___strtoxll
                     ___omul
                   _fgetc
                     _getch
                   _skipws
                     _fgetc
                     _ungetc
                   _ungetc
                 _fgetc
                 _skipws
                 _ungetc
           _strlen
           _strstr
             _strchr
             _strlen
             _strncmp
         _parsing_notif
         _sprintf
           _vfprintf
             _vfpfcnvrt
               ___lwdiv
               ___lwmod
               _fputc
                 _putch
       _print_RPM
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         ___awdiv
         _clear_parsing_notif
         _display_mm
         _extract_two_pid_bytes
           _sscanf
           _strlen
           _strstr
         _memset
         _parsing_notif
         _sprintf
       _print_Vbatt
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
         _strchr
     _readADC
   _welcome_splash
     _LCD_clear
     _LCD_cursor_set
     _LCD_write_string
     _LCD_write_variable
       _LCD_write_data
       ___aldiv
       ___almod
       ___lmul
       ___lwdiv (ARG)
     _UART1_SendString
     ___lwdiv
     ___lwmod
     _ccp1_init
     _tmr1_init

 _UART_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     124     48.4%
BITBANK0           160      0       0      0.0%
BANK0              160     73     144     90.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     90      92     97.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        70      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     614      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat May 03 16:34:35 2025

                      ___awdiv@sign 0008                                 l200 12EE  
                               l203 2C4E                                 l212 2D54  
                               l206 2C80                                 l215 2D6C  
                               l311 2622                                 l303 2DC2  
                               l224 0F02                                 l153 2DB4  
                               l209 2CAE                                 l410 2D00  
                               l322 2D1E                                 l307 25A4  
                               l315 2514                                 l156 2DDA  
                               l413 2D3C                                 l333 1864  
                               l182 2D82                                 l342 1008  
                               l159 2CDA                                 l319 2592  
                               l176 2ACC                                 l336 186A  
                               l272 173C                                 l265 23C8  
                               l185 2D94                                 l290 26AC  
                               l179 2D70                                 l443 27A6  
                               l356 1112                                 l188 2DA4  
                               l373 2DCE                                 l269 1626  
                               l285 1F5C                                 l382 272C  
                               l446 2DE4                                 l294 187C  
                               l279 1E88                                 l376 1D8C  
                               l385 29D0                                 l297 1988  
                               l465 15F2                                 l386 29E6  
                               l458 1554                                 l387 29FC  
                               l379 1C90                                 l708 21A8  
                               l556 1A92                                 l389 2A18  
                               l494 2446                                 l495 2466  
                               l488 2874                                 l569 1E76  
                               l489 2884                                 l975 281A  
                               l968 2812                                 l985 29B8  
                               l978 29B0                                 _RPM 00C0  
                               wreg 0FE8                          _TXSTA1bits 0FAC  
                              l1214 2B9E                                l1311 0CCE  
                              l1207 147E                                l1241 2B5C  
                              l1154 2C4A                                l1226 2322  
                              l1170 2BD8                                l1421 2502  
                              l1430 2DEA                                l1334 20A4  
                              l1335 20DE                                l1280 09B2  
                              l1272 0680                                l1336 20E6  
                              l1417 1B94                                l1433 2DF0  
                              l1371 034A                                l1291 07BC  
                              l1372 03B0                                l1268 28EE  
                              l1436 2ACE                                l1445 2C12  
                              l1438 2B18                                l1383 042C  
                              l1279 06DE                                l1392 0582  
                              l5000 0516                                l1368 02BC  
                              l4200 1DC0                                l1465 2022  
                              l5002 0544                                l5010 05AE  
                              l1378 03C0                                l1458 2268  
                              l4210 1E08                                l4202 1DD0  
                              l1396 064C                                l5020 0608  
                              l5012 05BE                                l5004 0554  
                              l1388 047A                                l5100 08C8  
                              l4220 1E56                                l4212 1E26  
                              l4204 1DE6                                l4140 283A  
                              l5022 0616                                l5006 05A2  
                              l5014 05C4                                l5110 0976  
                              l5102 08DE                                l5030 064E  
                              l4150 199A                                l4222 1E66  
                              l4214 1E36                                l4206 1DEE  
                              l4142 284A                                l4230 2D96  
                              l5120 2DC6                                l6000 26E4  
                              l5024 061E                                l5016 05D8  
                              l5008 05AC                                l5112 098E  
                              l5104 08EE                                l5040 0694  
                              l5032 0658                                l5200 0AB4  
                              l4160 19D0                                l4152 19AA  
                              l4216 1E40                                l4208 1DFA  
                              l4144 2854                                l4136 281C  
                              l5122 2DCC                                l6010 2706  
                              l6002 26E6                                l5026 062C  
                              l5018 05F8                                l5114 09AA  
                              l5106 0950                                l5050 06FE  
                              l5042 06A4                                l5034 0660  
                              l5210 0B14                                l5202 0AD6  
                              l5130 27CA                                l4170 1A18  
                              l4162 19E0                                l4154 19AE  
                              l4146 198A                                l4218 1E46  
                              l4138 282C                                l4226 2D84  
                              l5300 1D14                                l6020 2712  
                              l6012 2708                                l6004 26EA  
                              l5108 0964                                l5060 0764  
                              l5052 0712                                l5044 06BA  
                              l5036 0674                                l5220 0B46  
                              l5204 0AEE                                l5140 2804  
                              l5132 27D2                                l5124 27A8  
                              l6100 0CD0                                l4180 1A5C  
                              l4172 1A22                                l4164 19F6  
                              l4156 19BC                                l4148 198C  
                              l4228 2D8C                                l5118 2DC4  
                              l5310 1D88                                l5302 1D18  
                              l6022 2718                                l6014 270A  
                              l6006 26FC                                l5070 07A6  
                              l5062 0768                                l5054 072C  
                              l5046 06CC                                l5038 0688  
                              l5206 0B04                                l5230 0B64  
                              l5142 2806                                l5134 27E0  
                              l5126 27B0                                l5150 2970  
                              l6110 0D02                                l6102 0CD4  
                              l4174 1A40                                l4166 19FE  
                              l4182 1A62                                l4158 19CC  
                              l4190 1D8E                                l6030 1124  
                              l5304 1D3A                                l6024 2720  
                              l6016 270C                                l6008 2702  
                              l2760 2CB0                                l5320 1C3E  
                              l5312 1B98                                l5080 0808  
                              l5064 076C                                l5056 0740  
                              l5048 06EA                                l5240 0BEE  
                              l5232 0B74                                l5208 0B10  
                              l5216 0B22                                l5224 0B54  
                              l5400 1F78                                l5144 280C  
                              l5136 27E6                                l5128 27C2  
                              l5160 29AA                                l5152 2978  
                              l6120 0D42                                l6112 0D0C  
                              l6104 0CD8                                l4184 1A72  
                              l4176 1A50                                l4168 1A0A  
                              l4192 1D90                                l6040 1154  
                              l6032 1128                                l5306 1D5A  
                              l6026 2728                                l6018 270E  
                              l2770 2CD0                                l2762 2CC2  
                              l2754 2DA6                                l5322 1C5E  
                              l5314 1B9A                                l5090 0880  
                              l5082 0824                                l5074 07C8  
                              l5066 077C                                l5058 0754  
                              l5250 0C5C                                l5242 0C1A  
                              l5234 0B98                                l5218 0B36  
                              l5410 1FC6                                l5138 27FC  
                              l5154 2986                                l5146 2956  
                              l5170 22B0                                l5162 226A  
                              l5330 1312                                l6210 0F02  
                              l6130 0D8E                                l6122 0D56  
                              l6114 0D1E                                l6106 0CE8  
                              l4186 1A82                                l4178 1A52  
                              l4194 1D9E                                l6050 1178  
                              l6042 1160                                l6034 1132  
                              l2756 2DD0                                l5308 1D74  
                              l2772 2CD2                                l2764 2CCA  
                              l5420 2D7E                                l5324 1C78  
                              l5316 1C18                                l5500 2C8C  
                              l5084 0838                                l5076 07DC  
                              l5068 0792                                l5092 0890  
                              l5260 0CB6                                l5252 0C70  
                              l5244 0C1E                                l5236 0BC0  
                              l5180 09E4                                l5412 1FD8  
                              l5404 1F84                                l5156 299C  
                              l5148 2968                                l5172 22E2  
                              l5164 227A                                l5340 135A  
                              l5332 131E                                l6140 0DC6  
                              l6132 0DA0                                l6124 0D68  
                              l6116 0D30                                l6108 0CFA  
                              l4196 1DAE                                l6060 11C0  
                              l6052 1186                                l6044 1164  
                              l6036 113E                                l6028 1114  
                              l6220 28F8                                l2758 2DD4  
                              l2774 2CD4                                l2766 2CCC  
                              l5430 2A0E                                l5422 29BC  
                              l5326 1C8C                                l5318 1C1C  
                              l5510 2D60                                l5502 2C98  
                              l5094 08A0                                l5086 0848  
                              l5078 07F0                                l5262 0CCA  
                              l5246 0C2E                                l5238 0BCC  
                              l5254 0C84                                l5190 0A68  
                              l5182 0A04                                l5414 2000  
                              l5406 1F92                                l5158 29A4  
                              l5166 228A                                l5350 13D8  
                              l5342 1372                                l5334 132C  
                              l6150 0E06                                l6142 0DD8  
                              l6134 0DA8                                l6126 0D70  
                              l6118 0D38                                l4198 1DB2  
                              l6070 120E                                l6062 11E6  
                              l6054 118A                                l6046 1168  
                              l6038 1148                                l6230 2946  
                              l6222 28FC                                l2776 2CD6  
                              l2768 2CCE                                l5432 2A12  
                              l5424 29CC                                l5440 2768  
                              l5504 2D3E                                l5096 08A4  
                              l5088 085C                                l5248 0C44  
                              l5192 0A84                                l5184 0A26  
                              l5176 09B4                                l5280 2C06  
                              l5408 1FAA                                l5168 2294  
                              l5352 13EA                                l5344 1390  
                              l5336 1330                                l5328 12F0  
                              l5600 217C                                l5520 23AC  
                              l5512 2324                                l6160 0E38  
                              l6152 0E18                                l6208 0EC4  
                              l6144 0DE6                                l6136 0DB2  
                              l6128 0D7A                                l6080 1244  
                              l6072 1210                                l6056 118E  
                              l6064 11F2                                l6048 1170  
                              l6232 294A                                l6224 2908  
                              l6216 28F0                                l2778 2CD8  
                              l5418 2D70                                l5426 29E2  
                              l5434 272E                                l5506 2D48  
                              l3922 2C4C                                l5530 2C14  
                              l5098 08A8                                l5194 0A9A  
                              l5186 0A48                                l5178 09D8  
                              l5290 2AF4                                l5274 2BDA  
                              l5442 21AA                                l5354 13FE  
                              l5346 1394                                l5362 1434  
                              l5338 133E                                l5602 2182  
                              l5522 23C0                                l5514 2340  
                              l6162 0E3C                                l6154 0E26  
                              l6146 0DF4                                l6138 0DB8  
                              l6090 1290                                l6082 124E  
                              l6074 1222                                l6066 1202  
                              l6058 1198                                l6226 2920  
                              l6218 28F4                                l5612 2CDE  
                              l5428 29F8                                l5436 2734  
                              l5508 2D56                                l3924 2C5C  
                              l5532 2C20                                l4900 28CA  
                              l5196 0AA8                                l5188 0A54  
                              l5380 204A                                l5292 2B10  
                              l5284 2ACE                                l5276 2BE6  
                              l5452 220E                                l5444 21BC  
                              l5356 141C                                l5348 13BC  
                              l5364 144C                                l5540 2BAA  
                              l5604 2188                                l5516 2354  
                              l5620 15F4                                l5700 1F14  
                              l6164 0E4A                                l6156 0E2A  
                              l6148 0DF8                                l6092 129C  
                              l6084 125A                                l6068 120A  
                              l6228 292C                                l5614 2CEE  
                              l5438 2766                                l3926 2C6A  
                              l5534 2C2C                                l4910 0116  
                              l4902 00E4                                l5382 2052  
                              l5390 2088                                l5374 2024  
                              l5470 2B54                                l5462 2B1A  
                              l5286 2AE8                                l5278 2BEA  
                              l5446 21D4                                l5454 2236  
                              l5550 2624                                l5358 141E  
                              l5542 2BB2                                l5710 186C  
                              l5606 2198                                l5518 2364  
                              l5526 23C6                                l5630 1644  
                              l5622 1610                                l5702 1F3A  
                              l6174 0E6E                                l6166 0E5C  
                              l6158 0E2E                                l6094 12B2  
                              l6086 1266                                l6078 123C  
                              l5296 1C94                                l5616 2CF6  
                              l5536 2C30                                l5800 2552  
                              l4920 0174                                l4912 0128  
                              l4904 00E6                                l4840 2DE6  
                              l5392 20AC                                l5384 206C  
                              l5376 202C                                l5464 2B28  
                              l5456 2248                                l5448 2202  
                              l5560 26A4                                l5552 2640  
                              l5368 145C                                l5480 2B96  
                              l5544 2BBA                                l5720 18B2  
                              l5712 188A                                l5608 21A0  
                              l5632 1652                                l5640 1664  
                              l5624 1614                                l5704 1F4A  
                              l6352 0EDC                                l6192 0E8E  
                              l6176 0E86                                l6096 12CA  
                              l6088 1282                                l5298 1C96  
                              l5618 2CFA                                l5490 2A78  
                              l6354 10FC                                l5810 2580  
                              l5802 2556                                l4850 2416  
                              l4842 23CA                                l4930 01C2  
                              l4922 0184                                l4914 0136  
                              l4906 00F2                                l5394 20C0  
                              l5378 203E                                l5466 2B30  
                              l5458 2260                                l5554 2652  
                              l5474 2B5E                                l5546 2BCE  
                              l5538 2BA0                                l5730 18D4  
                              l5714 189C                                l5570 20EA  
                              l5650 1680                                l5634 1656  
                              l5642 1668                                l5626 1616  
                              l5706 1F56                                l6194 0E92  
                              l6098 12D6                                l5484 2D20  
                              l5492 2A84                                l5900 0F2A  
                              l5812 258C                                l5804 2566  
                              l4844 23D6                                l4940 020E  
                              l4932 01D6                                l4924 0196  
                              l4916 0148                                l4908 00FA  
                              l4860 24A4                                l4852 2468  
                              l5396 20D2                                l5388 2080  
                              l5468 2B38                                l5556 265A  
                              l5564 26AA                                l5476 2B6A  
                              l5740 192C                                l5732 18D8  
                              l5716 18AA                                l5724 18BC  
                              l5580 211A                                l5572 20F8  
                              l5660 1700                                l5652 16A6  
                              l5644 1678                                l5636 165A  
                              l5628 1634                                l5708 1F5A  
                              l6196 0EA0                                l5820 1482  
                              l5486 2D26                                l5494 2AA0  
                              l5910 0F5A                                l5902 0F2E  
                              l5814 2590                                l5806 256A  
                              l4846 23E4                                l4950 0260  
                              l4942 0220                                l4926 01AE  
                              l4918 0164                                l4870 1AA4  
                              l4862 24B0                                l5398 1F5E  
                              l5558 269A                                l5478 2B7A  
                              l5750 1962                                l5742 1936  
                              l5734 18F8                                l5718 18AE  
                              l5726 18C0                                l5590 2148  
                              l5582 211E                                l5574 2100  
                              l5670 1736                                l5662 170C  
                              l5654 16D4                                l5646 167C  
                              l6198 0EB2                                l5822 1490  
                              l5488 2D34                                l5496 2AA4  
                              l5920 0F92                                l5912 0F60  
                              l5904 0F38                                l5816 2DDE  
                              l5760 2594                                l5808 2574  
                              l4848 2404                                l4960 02D4  
                              l4952 0270                                l4944 0234  
                              l4936 01EC                                l4928 01C0  
                              l4880 1B2C                                l4872 1AB6  
                              l4864 24B6                                l4856 2480  
                              l5752 196C                                l5744 1942  
                              l5736 190A                                l5728 18D0  
                              l5592 2156                                l5584 2126  
                              l5576 2104                                l5568 20E8  
                              l5672 173A                                l5664 1716  
                              l5656 16DE                                l5648 167E  
                              l5680 1EB4                                l5840 154E  
                              l5832 14FA                                l5824 14C4  
                              l5498 2C82                                l5930 0FD8  
                              l5922 0FA6                                l5914 0F6C  
                              l5906 0F44                                l5770 25D8  
                              l5762 25B2                                l4970 0328  
                              l4962 02F0                                l4954 028C  
                              l4946 0246                                l4938 01FE  
                              l4882 1B62                                l4874 1AC6  
                              l4866 24D4                                l4858 2490  
                              l5754 1976                                l5746 194C  
                              l5738 1914                                l5594 215C  
                              l5586 2138                                l5578 2112  
                              l5666 1722                                l5658 16F6  
                              l5690 1EDA                                l5682 1EB8  
                              l5674 1E78                                l5850 15B4  
                              l5842 1564                                l5834 1532  
                              l5826 14D4                                l5818 1480  
                              l5940 1016                                l5932 0FE8  
                              l5924 0FB8                                l5916 0F80  
                              l5908 0F4E                                l5780 2604  
                              l5764 25C2                                l5772 25E2  
                              l4980 038C                                l4964 0308  
                              l4956 02A4                                l4948 0258  
                              l4972 0330                                l4884 1B74  
                              l4876 1ADE                                l4868 1A94  
                              l4892 2886                                l5756 1982  
                              l5748 1958                                l5596 2172  
                              l5588 2140                                l5668 172C  
                              l5692 1EDE                                l5684 1EBC  
                              l5676 1E96                                l5860 2DBA  
                              l5852 15E0                                l5844 156C  
                              l5828 14D6                                l5950 104C  
                              l5942 1026                                l5934 0FF6  
                              l5926 0FC0                                l5918 0F88  
                              l5870 1770                                l5782 2610  
                              l5766 25D0                                l5774 25E6  
                              l5790 2522                                l4990 0436  
                              l4982 03E0                                l4974 0342  
                              l4958 02AE                                l4966 0314  
                              l4886 1B7C                                l4878 1AFA  
                              l4894 288A                                l5758 1986  
                              l5598 217A                                l5694 1EE8  
                              l5678 1EA6                                l5686 1EC6  
                              l5862 2DBE                                l5854 15E2  
                              l5846 15A0                                l5838 1548  
                              l5960 1084                                l5952 105C  
                              l5936 0FFA                                l5928 0FCA  
                              l5880 17A2                                l5872 1774  
                              l5864 173E                                l5784 261C  
                              l5776 25F6                                l5768 25D4  
                              l5792 2532                                l4992 044E  
                              l4984 03FC                                l4976 035A  
                              l4968 0316                                l4888 1B8C  
                              l4896 289E                                l5696 1EFE  
                              l5688 1ECA                                l5848 15A2  
                              l5970 10CC                                l5962 1090  
                              l5954 1060                                l5946 1038  
                              l5938 0FFE                                l5890 1816  
                              l5882 17AC                                l5874 1784  
                              l5866 1744                                l5786 2620  
                              l5778 25FA                                l5794 2540  
                              l4994 0452                                l4986 0414  
                              l4978 0368                                l4898 28B6  
                              l5698 1F0A                                l5858 2DB6  
                              l5964 1096                                l5956 1064  
                              l5948 1048                                l5892 1828  
                              l5884 17B8                                l5876 1788  
                              l5868 1760                                l5796 2544  
                              l5788 2504                                l4988 041E  
                              l5990 26AE                                l5966 10B2  
                              l5958 107A                                l5886 17D6  
                              l5894 182C                                l5878 178C  
                              l5798 2548                                l4998 0488  
                              l5992 26C6                                l5968 10C0  
                              l5896 1848                                l5888 17F4  
                              l5984 2D02                                l5994 26DE  
                              l5978 10E6                                l5898 0F22  
                              l5986 2D16                                l5996 26E0  
                              l5988 2D1A                                l5998 26E2  
                              STR_1 FF95                                STR_2 FEDE  
                              STR_3 FF53                                STR_4 FF9B  
                              STR_5 FFD7                                STR_6 FECD  
                              STR_7 FFD7                                STR_8 FF22  
                              STR_9 FF00                                u4110 283A  
                              u4111 2836                                u5000 289E  
                              u4200 1DC0                                u4120 2874  
                              u5001 289A                                u4201 1DBC  
                              u4121 2870                                u5010 28B6  
                              u4130 199A                                u4210 1DE6  
                              u5011 28B2                                u4131 1996  
                              u4211 1DE2                                u5100 01C0  
                              u5020 28EE                                u4140 19BC  
                              u4220 1E08                                u5101 01BC  
                              u5021 28EA                                u4141 19B8  
                              u4221 1E04                                u5110 01E8  
                              u4150 19F6                                u4230 1E26  
                              u5111 01E4                                u5031 00EC  
                              u4151 19F2                                u4231 1E22  
                              u5200 02F0                                u5120 01FE  
                              u5040 0116                                u6000 13EA  
                              u4160 1A18                                u4240 1E56  
                              u5201 02EC                                u5121 01FA  
                              u5041 0112                                u6001 13E6  
                              u4161 1A14                                u4241 1E52  
                              u5210 0308                                u5130 0220  
                              u5050 0128                                u6010 13FA  
                              u4170 1A40                                u5211 0304  
                              u5131 021C                                u5051 0124  
                              u6011 13F6                                u4171 1A3C  
                              u5300 0488                                u5220 0328  
                              u5140 0234                                u5060 0148  
                              u6100 1FD8                                u6020 1430  
                              u4180 1A72                                u5301 0484  
                              u5221 0324                                u5141 0230  
                              u5061 0144                                u6101 1FD4  
                              u6021 142C                                u4181 1A6E  
                              u5310 0544                                u5230 0342  
                              u5150 0246                                u5070 0160  
                              u6030 207C                                u6110 2000  
                              u4190 1D9E                                u5311 0540  
                              u5231 033E                                u5151 0242  
                              u5071 015C                                u6031 2078  
                              u6111 1FFC                                u4191 1D9A  
                              u6120 2D7E                                u5320 0554  
                              u5240 035A                                u5160 0258  
                              u5080 0196                                u5400 06DE  
                              u6040 20A4                                u6200 21BC  
                              u6121 2D7A                                u5321 0550  
                              u5241 0356                                u5161 0254  
                              u5081 0192                                u5401 06DA  
                              u6041 20A0                                u6201 21B8  
                              u6130 29CC                                u5330 0582  
                              u5250 0368                                u5170 028C  
                              u5090 01AE                                u5410 06FE  
                              u6050 20C0                                u6210 2202  
                              u6131 29C8                                u5331 057E  
                              u5251 0364                                u5171 0288  
                              u5091 01AA                                u5411 06FA  
                              u6051 20BC                                u6211 21FE  
                              u6140 29E2                                u5340 05D8  
                              u5260 03FC                                u5180 02A4  
                              u5500 0824                                u5420 0712  
                              u6060 20D2                                u6220 2248  
                              u6300 269A                                u6141 29DE  
                              u5341 05D4                                u5261 03F8  
                              u5181 02A0                                u5501 0820  
                              u5421 070E                                u6061 20CE  
                              u6221 2244                                u6301 2696  
                              u6150 29F8                                u3910 2C5C  
                              u5350 0608                                u5270 0414  
                              u5190 02D4                                u5510 0838  
                              u5430 072C                                u6070 1F78  
                              u6230 2260                                u6310 20F8  
                              u6151 29F4                                u3911 2C58  
                              u5351 0604                                u5271 0410  
                              u5191 02D0                                u5511 0834  
                              u5431 0728                                u6071 1F74  
                              u6231 225C                                u6311 20F4  
                              u6160 2A0E                                u5360 0616  
                              u5280 044E                                u5600 09A2  
                              u5520 085C                                u5440 0754  
                              u6080 1FAA                                u6240 2B96  
                              u6320 2112                                u6400 1678  
                              u6161 2A0A                                u5361 0612  
                              u5281 044A                                u5521 0858  
                              u5441 0750                                u6081 1FA6  
                              u6241 2B92                                u6321 210E  
                              u6401 1674                                u6250 2ACC  
                              u6170 2762                                u5290 0476  
                              u5530 0880                                u5450 0792  
                              u5370 0674                                u6090 1FC6  
                              u5610 27C2                                u6330 2138  
                              u6410 16A6                                u6251 2AC8  
                              u5291 0472                                u5531 087C  
                              u5451 078E                                u5371 0670  
                              u6091 1FC2                                u5611 27BE  
                              u6331 2134                                u6411 16A2  
                              u7107 0E52                                u6180 2796  
                              u6500 25B2                                u4900 23E4  
                              u5540 08C8                                u5460 07A6  
                              u5380 06BA                                u5620 27E0  
                              u5700 22E2                                u6340 2156  
                              u6260 2354                                u6420 1E96  
                              u6501 25AE                                u4901 23E0  
                              u5541 08C4                                u5461 07A2  
                              u5381 06B6                                u5621 27DC  
                              u5701 22DE                                u6341 2152  
                              u6261 2350                                u6421 1E92  
                              u7117 0E7A                                u7037 2914  
                              u6190 27A6                                u6510 25D0  
                              u4910 2446                                u5550 08DE  
                              u5470 07B8                                u5390 06CC  
                              u5710 09D8                                u5630 27FC  
                              u6350 2172                                u6270 23AC  
                              u6430 1EB4                                u6191 27A2  
                              u7207 101C                                u6511 25CC  
                              u4911 2442                                u5551 08DA  
                              u5471 07B4                                u5391 06C8  
                              u5711 09D4                                u5631 27F8  
                              u6351 216E                                u6271 23A8  
                              u6431 1EB0                                u7127 0EA8  
                              u7047 2938                                u6280 2C4A  
                              u6520 25F6                                u4920 247C  
                              u5560 0964                                u5480 07DC  
                              u5800 0B98                                u5720 0A00  
                              u5640 2968                                u6360 2198  
                              u6440 1EDA                                u6600 15F2  
                              u6177 2758                                u7217 10A0  
                              u6281 2C46                                u6521 25F2  
                              u4921 2478                                u5561 0960  
                              u5481 07D8                                u5801 0B94  
                              u5721 09FA                                u5641 2964  
                              u6361 2194                                u6441 1ED6  
                              u7137 0F0E                                u6601 15EE  
                              u7057 1270                                u6370 2CEE  
                              u6610 1784                                u6530 2522  
                              u4930 2490                                u5570 0976  
                              u5490 0808                                u5810 0BC0  
                              u5730 0A02                                u6290 2652  
                              u5650 2986                                u6450 1F3A  
                              u6371 2CEA                                u6187 278C  
                              u7227 2C62                                u6611 1780  
                              u6531 251E                                u4931 248C  
                              u5571 0972                                u5491 0804  
                              u5811 0BBC                                u6291 264E  
                              u5651 2982                                u6451 1F36  
                              u7147 1E9C                                u7067 12BC  
                              u6700 0FD8                                u6620 17D6  
                              u6540 2540                                u4940 24A4  
                              u5580 098E                                u5820 0BEE  
                              u5740 0A26                                u5900 2AE8  
                              u5660 299C                                u6460 188A  
                              u6380 1634                                u7237 26D0  
                              u6701 0FD4                                u6621 17D2  
                              u6541 253C                                u4941 24A0  
                              u5581 098A                                u5821 0BEA  
                              u5741 0A22                                u5901 2AE4  
                              u5661 2998                                u6461 1886  
                              u7157 163A                                u6381 1630  
                              u7077 12E0                                u6710 0FF6  
                              u6630 17F4                                u6550 2566  
                              u4950 24D4                                u5590 09A0  
                              u5830 0C16                                u5750 0A48  
                              u5910 2B10                                u5670 227A  
                              u6470 18AA                                u6390 1652  
                              u7247 26F0                                u6711 0FF2  
                              u6631 17F0                                u6551 2562  
                              u4951 24D0                                u5591 099A  
                              u5831 0C12                                u5751 0A44  
                              u5911 2B0C                                u5671 2276  
                              u6471 18A6                                u7167 1892  
                              u6391 164E                                u7087 0DCE  
                              u6720 1016                                u6640 1812  
                              u4960 1AA4                                u5840 0C44  
                              u5760 0A84                                u5680 228A  
                              u6480 18D0                                u6800 0CFA  
                              u6560 1490                                u7257 26FE  
                              u6721 1012                                u6641 180E  
                              u7177 2528                                u4961 1AA0  
                              u5841 0C40                                u5761 0A80  
                              u5681 2286                                u6481 18CC  
                              u7097 0E0E                                u6801 0CF6  
                              u6561 148C                                u6730 1034  
                              u6650 1848                                u4970 1AB6  
                              u5850 0C5C                                u5770 0AD6  
                              u5690 22B0                                u6490 18F8  
                              u6810 0D1E                                u6570 14F6  
                              u7267 2D2C                                u6731 1030  
                              u6651 1844                                u7187 25B8  
                              u4891 23D0                                u4971 1AB2  
                              u5851 0C58                                u5771 0AD2  
                              u5691 22AC                                u6491 18F4  
                              u6811 0D1A                                u6571 14F2  
                              u6740 105C                                u6660 1864  
                              u4980 1AFA                                u5860 0C70  
                              u5780 0B04                                u6900 0E26  
                              u6820 0D30                                u6580 1544  
                              u7277 2DC8                                u5925 1C9E  
                              u6741 1058                                u7197 0FDE  
                              u6661 1860                                u4981 1AF6  
                              u5861 0C6C                                u5781 0B00  
                              u6901 0E22                                u6821 0D2C  
                              u6581 1540                                u6670 0F80  
                              u4990 1B74                                u5870 0CB2  
                              u5790 0B36                                u6910 0E4A  
                              u6830 0D56                                u6590 15B4  
                              u6750 1186                                u5935 1CB8  
                              u6671 0F7C                                u4991 1B70  
                              u5871 0CAE                                u5791 0B32  
                              u6911 0E46                                u6831 0D52  
                              u6591 15B0                                u6751 1182  
                              u6680 0FA6                                u5880 0CCA  
                              u6920 0E6A                                u6840 0D68  
                              u6760 11E6                                u5945 1CDE  
                              u6681 0FA2                                u5881 0CC6  
                              u6921 0E66                                u6841 0D64  
                              u6761 11E2                                u6690 0FB8  
                              u5890 2C06                                u6930 0EA0  
                              u6850 0D8E                                u6770 1202  
                              u5955 1BA2                                u6691 0FB4  
                              u5891 2C02                                u6931 0E9C  
                              u6851 0D8A                                u6771 11FE  
                              u5980 1312                                u6940 0EC0  
                              u6860 0DA0                                u6780 1222  
                              u5965 1BBC                                u5981 130E  
                              u6941 0EBC                                u6861 0D9C  
                              u6781 121E                                u5990 135A  
                              u6870 0DC6                                u6790 1238  
                              u5975 1BE2                                u5991 1356  
                              u6871 0DC2                                u6791 1234  
                              u6880 0DE6                                u6881 0DE2  
                              u6890 0E06                                u6891 0E02  
                    _UART1_SendChar 2D6E                   _live_reading_mode 2DB6  
                 _air_intake_string 00CC                                _dbuf 013C  
                              _main 28F0                                _asup 00C9  
                              _atox 064E                                _ncnv 00B2  
                              _prec 00BA                                fsr0h 0FEA  
                              fsr1h 0FE2                     ??_print_AI_Temp 009E  
                              indf0 0FEF                                fsr2h 0FDA  
                              fsr0l 0FE9                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
                              btemp 005D                  ?_live_reading_mode 0001  
                       atox@seen_0x 0064               __end_of_parsing_notif 2D56  
                              start 00E0                    __end_of_ADC_init 2DDC  
                      ___param_bank 0000                 ??_live_reading_mode 005B  
                       ?_UART1_Init 0001                        _BAUDCON1bits 0FB8  
                  __end_of_LCD_init 272E            _diagnostic_trouble_codes 173E  
                   __end_of___aldiv 1A94                     __end_of___almod 1E78  
                             ?_main 0001                               ?_atox 004B  
                   __end_of___awdiv 21AA                               STR_10 FF95  
                             STR_11 FF11                               STR_20 FFB9  
                             STR_12 FF33                               STR_13 FFFC  
                             STR_21 FFEC                               STR_30 FFF7  
                             STR_14 FFFA                               STR_22 FFB3  
                             STR_31 FFBB                               STR_23 FFB9  
                             STR_15 FFD1                               STR_32 FFF0  
                             STR_24 FFCB                               STR_16 FFA1  
                             STR_40 FF62                               STR_33 FFC3  
                             STR_25 FFE8                               STR_17 FFBF  
                             STR_41 FEEF                               STR_34 FFD7  
                             STR_18 FFBF                               STR_26 FFD4  
                             STR_42 FFE0                               STR_19 FFF7  
                             STR_35 FFE4                               STR_27 FFA7  
                             STR_43 FF71                               STR_28 FFC5  
                             STR_36 FFAD                               STR_44 FF7F  
                             STR_29 FFC5                               STR_37 FFF4  
                             STR_45 FF43                               STR_46 FF7F  
                             STR_38 FFDC                               STR_39 FF8A  
                   ___awdiv@divisor 0005                     __end_of___lwdiv 281C  
                   __end_of___lwmod 29BA                               i2l170 00D4  
                   ___awdiv@counter 0007                        vfpfcnvrt@fmt 000C  
                             _TXREG 0FAD                               _A_rpm 00C4  
                             _B_rpm 00C2                 ___lmul@multiplicand 0007  
                  __end_of_UART_ISR 00E0                     __end_of_readADC 2C82  
                             _fgetc 1A94              __end_of_UART1_SendChar 2D84  
                             _flags 00CA                               _getch 2DE6  
      welcome_splash@CCP1IF_counter 0020                               _errno 00B6  
                             _fputc 226A           __end_of_live_reading_mode 2DC4  
                             _width 00B8                               _putch 2DF0  
                             atox@c 0068                               atox@i 0066  
                             atox@w 0060                               tablat 0FF5  
                 UART1_SendString@i 0008             ?_clear_diagnostic_codes 0001  
                   __end_of_vfscanf 20E8                               ttemp5 005E  
                             ttemp6 0061                               ttemp7 0065  
                             status 0FD8                               wtemp8 005E  
                   __end_of_sprintf 2BDA                     __end_of_strncmp 2024  
                 _dbuf@doscan$F2232 015C                     __initialization 2A1A  
                      __end_of_main 2956                        __end_of_atox 09B4  
                      vfsfcnvrt@fmt 006B                        vfsfcnvrt@llu 0071  
                 ?_LCD_write_string 0006                              ??_main 00A7  
                            ??_atox 004D                       __activetblptr 0002  
                ??_LCD_write_string 0008         __end_of_clear_parsing_notif 2D6E  
                 __end_of_LCD_clear 2D3E                              ?_fgetc 0005  
                            ?_getch 0003                              _ADCON0 0FC2  
                            _ADCON1 0FC1                              _ADCON2 0FC0  
                   ?_UART1_SendChar 0001                              ?_fputc 0003  
                            _ADRESH 0FC4                              _ADRESL 0FC3  
                            _CCPR1H 0FBF                              _CCPR1L 0FBE  
                  ___awdiv@dividend 0003                              ?_putch 0001  
                            _ANSELC 0F3A      __end_of_clear_diagnostic_codes 1114  
                            i2l4650 0020                              i2l4660 0064  
                            i2l4652 002E                              i2l4670 00AE  
                            i2l4662 0076                              i2l4654 0040  
                            i2l4672 00C0                              i2l4664 0088  
                            i2l4656 0044                              i2l4648 0012  
                            i2l4674 00D0                              i2l4658 0054  
                            i2l4666 008A                              i2l4668 009C  
         diagnostic_trouble_codes@i 000C                              _RCREG1 0FAE  
               _display_system_info 2D02              LCD_write_string@string 0006  
                            _OSCCON 0FD3                              _SPBRG1 0FAF  
     clear_diagnostic_codes@opt_sel 000D                    _UART1_SendString 2A78  
   LCD_write_variable@temp_variable 0018                        vfprintf@cfmt 001B  
                      ___strtoxll@a 0040                        ___strtoxll@c 004A  
                      ___strtoxll@s 001B                              ___lmul 281C  
                            ___omul 23CA                           ??___aldiv 000B  
                         ??___almod 000B                           ??___awdiv 0007  
                         ??___lwdiv 0007        ??_LCD_configure_cursor_blink 0006  
                         ??___lwmod 0007                              _buffer 0200  
                            _memset 2C14                ?_display_system_info 0001  
                            clear_0 2A42                              clear_1 2A54  
                            clear_2 2A60                              _nmatch 00B0  
                  ___awdiv@quotient 0009                              fgetc@c 000C  
                            isa$std 0001                              _result 00C6  
                            _sscanf 2B1A                              _skipws 2886  
                            _ungetc 2468                              atox@ep 0062  
                            atox@fp 004B                              _strchr 2ACE  
                            _strlen 2BDA                              _strstr 21AA  
                         ??_readADC 0005                              fputc@c 0003  
                  ??_welcome_splash 001C                        __mediumconst FECC  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                           ?_ADC_init 0001  
                            putch@c 0001                           ??_vfscanf 0057  
                  __end_of_vfprintf 2BA0                    ___strtoxll@flags 003F  
                         ??_sprintf 0022                    ___strtoxll@limit 0037  
                         ??_strncmp 0009                        ?_print_Vbatt 0001  
                        __accesstop 0060             __end_of__initialization 2A6A  
                         ?_LCD_init 0001                       ___rparam_used 0001  
                   UART1_SendChar@c 0003                      __pcstackCOMRAM 0001  
                      __pidataBANK0 2DEC                           ?_UART_ISR 0001  
                    _LCD_entry_mode 00EE                       __end_of_fgetc 1B96  
                 _LCD_write_command 1C92                       __end_of_getch 2DEC  
                     __end_of_fputc 2324               ??_display_system_info 000C  
          extract_single_pid_byte@A 009D            extract_single_pid_byte@a 0059  
                     __end_of_putch 2DF2                      _LCD_cursor_set 29BA  
                ?_LCD_write_command 0001          __end_of_LCD_write_variable 15F4  
                        ___ungetbuf 00AD                          ___ungetcnt 00C8  
           _extract_single_pid_byte 2624                 ??_LCD_write_command 0003  
                        ??_ADC_init 0003                          ___strtoxll 00E4  
                           ??_fgetc 0007                             ??_getch 0005  
                _width@doscan$F2229 00B4                             ??_fputc 0006  
                           ??_putch 0003                          __pbssBANK0 00A9  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                        ??_LCD_init 0007          ??_diagnostic_trouble_codes 000B  
         __end_of_LCD_write_command 1D8E               _extract_two_pid_bytes 2324  
                           ?___lmul 0003                             ?___omul 0003  
                      ??_UART1_Init 0003                          ??_UART_ISR 0001  
            __end_of_LCD_cursor_set 2A1A                             ?_memset 0003  
               ___omul@multiplicand 000B                      ___lmul@product 000B  
                 __end_of_ccp1_init 2D96                             ?_sscanf 0085  
                           ?_skipws 000E                             ?_ungetc 0003  
                           ?_strchr 0003                             ?_strlen 0003  
                           ?_strstr 000A                             _SPBRGH1 0FB0  
                        _display_mm 2C82            LCD_write_command@command 0005  
                __end_of_UART1_Init 2CDC                             _RX_char 005C  
             __end_of_print_AI_Temp 198A                             __Hparam 0000  
                           __Lparam 0000  __end_of_LCD_configure_cursor_blink 2D02  
        _LCD_configure_cursor_blink 2CDC                    _message_complete 005B  
                     ___strtoxll@cp 0048                             ___aldiv 198A  
                           ___almod 1D8E                     ?_LCD_cursor_set 0006  
                           ___awdiv 20E8                      _LCD_write_char 2DDC  
                    _LCD_write_data 1B96                             ___lwdiv 27A8  
        LCD_write_variable@variable 0011                             ___lwmod 2956  
                         ?_vfprintf 0017           ??_extract_single_pid_byte 0057  
                 __end_of_main_menu 0F22                             __pcinit 2A1A  
                           __ramtop 1000                             __ptext0 28F0  
                           __ptext1 1114                             __ptext2 2D96  
                           __ptext3 2D84                             __ptext4 1480  
                           __ptext5 281C                             __ptext6 1D8E  
                           __ptext7 198A                             __ptext8 0CD0  
                           __ptext9 2DB6                             _readADC 2C4C  
                         _T1CONbits 0FCD                    ??_UART1_SendChar 0003  
                  ___aldiv@dividend 0003            __end_of_UART1_SendString 2ACE  
                           fgetc@fp 0005                         ?___strtoxll 001B  
                           _vfscanf 2024                          _input_init 2DA6  
                           _sprintf 2BA0                             atox@pll 004C  
                           _strncmp 1F5E                           _LCD_clear 2D20  
              end_of_initialization 2A6A                   __end_of_tmr1_init 2DA6  
                    ___omul@product 0013                             fputc@fp 0005  
                           memset@c 0005                             memset@n 0007  
                           memset@p 0009                       __Lmediumconst FECC  
              LCD_cursor_set@column 0006                   __end_of_print_RPM 173E  
            ?_extract_two_pid_bytes 009B                       ?_print_ELMVer 0001  
                      _buffer_count 00CB                 _LCD_display_control 00EF  
            __end_of_LCD_write_char 2DE6              __end_of_LCD_write_data 1C92  
                 __end_of_vfpfcnvrt 1480                       ?_print_SAEVer 0001  
                         _RCSTAbits 0FAB                             sscanf@f 0090  
                           sscanf@s 0085                             skipws@c 0010  
                  ___aldiv@quotient 000D                   __end_of_vfsfcnvrt 0CD0  
                           postdec1 0FE5                             postdec2 0FDD  
                           ungetc@c 0003                             postinc0 0FEE  
                           postinc1 0FE6                             postinc2 0FDE  
                  vfpfcnvrt@convarg 0012                          ??_vfprintf 001B  
                 ___strtoxll@endptr 001D                             strchr@c 0005  
                           strchr@s 0003                             strlen@a 0005  
                           strlen@s 0003                             strstr@h 000A  
                           strstr@n 000C                   ___strtoxll@prev_a 002B  
                         _PORTBbits 0F81                           _PORTCbits 0F82  
                 ??_LCD_pulse_clock 0003                          _rpm_string 00DC  
                         _TRISAbits 0F92                           _TRISBbits 0F93  
                         _TRISCbits 0F94                           _TRISDbits 0F95  
                vfscanf@saved_errno 007F                         ?_display_mm 0001  
   __end_of_extract_single_pid_byte 26AE                          ?_LCD_clear 0001  
                   _air_intake_temp 00BC            extract_two_pid_bytes@pid 009B  
          extract_two_pid_bytes@ptr 009F                         _CCP1CONbits 0FBD  
                         _TXSTAbits 0FAC    __end_of_diagnostic_trouble_codes 186C  
                    ??_print_ELMVer 000B                       _parsing_notif 2D3E  
                    ??_print_SAEVer 000B                         vfscanf@cfmt 0083  
                   ?_LCD_write_char 0001                     ?_LCD_write_data 0001  
                    __end_of___lmul 2886                      __end_of___omul 2468  
                       vfpfcnvrt@ap 000D                         vfpfcnvrt@cp 0010  
                       vfpfcnvrt@fp 000B                      __end_of_memset 2C4C  
                    __end_of_sscanf 2B5E                      __end_of_skipws 28F0  
                    __end_of_ungetc 2504                      __end_of_strchr 2B1A  
                    __end_of_strlen 2C14                      __end_of_strstr 226A  
               start_initialization 2A1A                         ?_input_init 0001  
                       vfsfcnvrt@ap 006C                         vfsfcnvrt@fp 006A  
                       vfsfcnvrt@vp 006E                  _LCD_write_variable 1480  
                 ___omul@multiplier 0003                 LCD_write_variable@i 0016  
               ?_LCD_write_variable 0011                      ?_parsing_notif 0001  
       __end_of_display_system_info 2D20                     ___strtoxll$2282 0033  
                   ___strtoxll$2283 0035                         vfprintf@fmt 0018  
                          ??___lmul 000B                            ??___omul 0013  
                       __pdataBANK0 00EC                            ??_memset 0009  
           LCD_write_char@character 0006                          memset@dest 0003  
                          ??_sscanf 0057                            ??_skipws 000F  
                   ___strtoxll@base 001E                            ??_ungetc 0006  
                          ??_strchr 0007                            ??_strlen 0005  
                          ??_strstr 000E                ??_LCD_write_variable 0016  
            extract_two_pid_bytes@A 009D              extract_two_pid_bytes@B 009E  
          ??_clear_diagnostic_codes 000B              extract_two_pid_bytes@a 00A1  
            extract_two_pid_bytes@b 00A3                         __pbssCOMRAM 005B  
                         _ccp1_init 2D84                       __pcstackBANK0 0060  
                       ??_LCD_clear 0006                    _LCD_write_string 272E  
                  ??_LCD_cursor_set 0007                    ___lwdiv@dividend 0003  
   LCD_configure_cursor_blink@state 0006                           __pintcode 0008  
                     __pmediumconst FECC                            ?___aldiv 0003  
                          ?___almod 0003         ?_LCD_configure_cursor_blink 0001  
                          ?___awdiv 0003                            ?___lwdiv 0003  
                          ?___lwmod 0003              UART1_SendString@string 0004  
                         _dtc_codes 0100                    ___almod@dividend 0003  
                          ?_readADC 0003                         __smallconst FECC  
                         _main_menu 0CD0                          ?_ccp1_init 0001  
         ?_diagnostic_trouble_codes 0001                __end_of_print_ELMVer 2624  
                      ??___strtoxll 0023                            _ADC_init 2DD0  
              __end_of_print_SAEVer 2594                   ?_UART1_SendString 0004  
                          ?_vfscanf 007B                    ___lwdiv@quotient 0008  
                          ?_sprintf 001D                  LCD_write_data@data 0005  
                          ?_strncmp 0003                  ??_UART1_SendString 0006  
                   ___aldiv@divisor 0007                     ___aldiv@counter 000B  
                   ??_parsing_notif 000B             ??_extract_two_pid_bytes 0057  
                          _LATDbits 0F8C                            _LCD_init 26AE  
                          _PIE1bits 0F9D                           _tmr1_init 2D96  
                          _PIR1bits 0F9E                            i2u470_40 009C  
                          i2u470_41 0098                            i2u471_40 00AE  
                          i2u471_41 00AA                            i2u472_40 00C0  
                          i2u464_40 0020                            i2u472_41 00BC  
                          i2u464_41 001C                            i2u465_40 002E  
                          i2u465_41 002A                            i2u466_40 0040  
                          i2u466_41 003C                            i2u467_40 0054  
                          i2u467_41 0050                            i2u468_40 0064  
                          i2u468_41 0060                            i2u469_40 0076  
                          i2u469_41 0072                     _LCD_pulse_clock 2DC4  
                          _UART_ISR 0008                  __end_of___strtoxll 064E  
                         _print_RPM 15F4                 _clear_parsing_notif 2D56  
                         _vfpfcnvrt 12F0                           _vfsfcnvrt 09B4  
                        _ADCON0bits 0FC2                          print_RPM@A 0059  
                        print_RPM@B 005A                          ?_main_menu 0001  
                        vfscanf@fmt 007C                        ??_display_mm 000B  
                        vfpfcnvrt@c 0016                       ??_print_Vbatt 000B  
                 ___lmul@multiplier 0003                           copy_data0 2A2E  
              ?_clear_parsing_notif 0001                          vfsfcnvrt@c 0079  
                        vfsfcnvrt@i 006F                    ??_LCD_write_char 0006  
                  ??_LCD_write_data 0003                          ?_tmr1_init 0001  
                          __Hrparam 0000            LCD_write_variable@digits 0017  
                         modff@F522 00A9            ?_extract_single_pid_byte 009B  
                        vfprintf@ap 001A                            __Lrparam 0000  
                        vfprintf@fp 0017                   LCD_cursor_set@row 0007  
                        ?_print_RPM 0001                  __end_of_display_mm 2CB0  
                        ?_vfpfcnvrt 000B                          ?_vfsfcnvrt 006A  
                        _ANSELAbits 0F38                          _ANSELBbits 0F39  
                        _ANSELCbits 0F3A                          sprintf@fmt 001E  
                       ??_ccp1_init 0003                     ___lwdiv@divisor 0005  
                   ___lwdiv@counter 0007                        ??_input_init 0003  
                          __ptext10 1E78                            __ptext11 15F4  
                          __ptext20 2956                            __ptext12 2324  
                          __ptext21 27A8                            __ptext13 20E8  
                          __ptext30 064E                            __ptext22 2624  
                          __ptext14 186C                            __ptext31 2886  
                          __ptext23 21AA                            __ptext15 2BA0  
                          __ptext40 173E                            __ptext32 2468  
                          __ptext24 1F5E                            __ptext16 2B5E  
                          __ptext41 2C14                            __ptext33 1A94  
                          __ptext25 2BDA                            __ptext17 12F0  
                          __ptext50 29BA                            __ptext42 2DDC  
                          __ptext34 2DE6                            __ptext26 2ACE  
                          __ptext18 226A                            __ptext51 2A78  
                          __ptext43 0F22                            __ptext35 00E4  
                          __ptext27 2B1A                            __ptext19 2DF0  
                          __ptext60 2DD0                            __ptext52 2D6E  
                          __ptext44 2C4C                            __ptext36 23CA  
                          __ptext28 2024                            __ptext53 2CDC  
                          __ptext45 2D3E                            __ptext37 2D02  
                          __ptext29 09B4                            __ptext54 2DA6  
                          __ptext46 2C82                            __ptext38 2504  
                          __ptext55 2CB0                            __ptext47 2D56  
                          __ptext39 2594                            __ptext56 26AE  
                          __ptext48 272E                            __ptext57 2D20  
                          __ptext49 1B96                            __ptext58 1C92  
                          __ptext59 2DC4               ??_clear_parsing_notif 000B  
                   ___almod@divisor 0007                     ___almod@counter 000B  
                    _welcome_splash 1114                ___strtoxll@is_signed 0020  
           __end_of_LCD_pulse_clock 2DD0                            _menu_sel 00EC  
               __end_of_print_Vbatt 1F5E              _clear_diagnostic_codes 0F22  
                     _print_AI_Temp 186C                            isa$xinst 0000  
                          int$flags 005D                            _vfprintf 2B5E  
                __end_of_input_init 2DB6                           sscanf@fmt 0087  
                         sscanf@ret 008D            __end_of_LCD_write_string 27A8  
                         vfscanf@ap 007E                           vfscanf@fp 007B  
        extract_single_pid_byte@pid 009B          extract_single_pid_byte@ptr 0057  
     LCD_write_variable@left_offset 0015                         ??_main_menu 00A5  
                        _INTCONbits 0FF2              __end_of_welcome_splash 12F0  
                 LCD_write_string@i 000A                            intlevel2 0000  
                         sprintf@ap 0022                    ___lwmod@dividend 0003  
                       ??_tmr1_init 0003                          _RCSTA1bits 0FAB  
                    ?_print_AI_Temp 0001             welcome_splash@plug_flag 001E  
                      _print_ELMVer 2594                        _print_SAEVer 2504  
                          sscanf@ap 008F                          _UART1_Init 2CB0  
                          skipws@fp 000E                            vfscanf@n 0081  
                       ??_print_RPM 0057                            ungetc@fp 0005  
                       ??_vfpfcnvrt 000E                         ??_vfsfcnvrt 0055  
                          sprintf@f 0023                            sprintf@s 001D  
                   ___lwmod@divisor 0005                        _A_air_intake 00BE  
                   ___lwmod@counter 0007                            strncmp@l 0003  
                          strncmp@n 0007                            strncmp@r 0005  
                      ___aldiv@sign 000C                            strstr@nl 000E  
                   ?_welcome_splash 0001                         _print_Vbatt 1E78  
                      ___almod@sign 000C                    ?_LCD_pulse_clock 0001  
     __end_of_extract_two_pid_bytes 23CA                      print_AI_Temp@A 009F  
