

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri May 02 19:22:21 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=4
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=4
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=4
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=4
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=4
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=4
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=4
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=4
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=4
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=4
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=4
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=3
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=4
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=4
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84   000000                     
    85                           ; Generated 12/10/2023 GMT
    86                           ; 
    87                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F46K22 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119   000FE0                     bsr             equ	4064
   120   000FE9                     fsr0            equ	4073
   121   000FEA                     fsr0h           equ	4074
   122   000FE9                     fsr0l           equ	4073
   123   000FE1                     fsr1            equ	4065
   124   000FE2                     fsr1h           equ	4066
   125   000FE1                     fsr1l           equ	4065
   126   000FD9                     fsr2            equ	4057
   127   000FDA                     fsr2h           equ	4058
   128   000FD9                     fsr2l           equ	4057
   129   000FEF                     indf0           equ	4079
   130   000FE7                     indf1           equ	4071
   131   000FDF                     indf2           equ	4063
   132   000FF2                     intcon          equ	4082
   133   000000                     nvmcon          equ	0
   134   000FF9                     pcl             equ	4089
   135   000FFA                     pclath          equ	4090
   136   000FFB                     pclatu          equ	4091
   137   000FEB                     plusw0          equ	4075
   138   000FE3                     plusw1          equ	4067
   139   000FDB                     plusw2          equ	4059
   140   000FED                     postdec0        equ	4077
   141   000FE5                     postdec1        equ	4069
   142   000FDD                     postdec2        equ	4061
   143   000FEE                     postinc0        equ	4078
   144   000FE6                     postinc1        equ	4070
   145   000FDE                     postinc2        equ	4062
   146   000FEC                     preinc0         equ	4076
   147   000FE4                     preinc1         equ	4068
   148   000FDC                     preinc2         equ	4060
   149   000FF3                     prod            equ	4083
   150   000FF4                     prodh           equ	4084
   151   000FF3                     prodl           equ	4083
   152   000FD8                     status          equ	4056
   153   000FF5                     tablat          equ	4085
   154   000FF6                     tblptr          equ	4086
   155   000FF7                     tblptrh         equ	4087
   156   000FF6                     tblptrl         equ	4086
   157   000FF8                     tblptru         equ	4088
   158   000FFD                     tosl            equ	4093
   159   000FE8                     wreg            equ	4072
   160   000F38                     ANSELA          equ	3896	;# 
   161   000F39                     ANSELB          equ	3897	;# 
   162   000F3A                     ANSELC          equ	3898	;# 
   163   000F3B                     ANSELD          equ	3899	;# 
   164   000F3C                     ANSELE          equ	3900	;# 
   165   000F3D                     PMD2            equ	3901	;# 
   166   000F3E                     PMD1            equ	3902	;# 
   167   000F3F                     PMD0            equ	3903	;# 
   168   000F40                     VREFCON2        equ	3904	;# 
   169   000F40                     DACCON1         equ	3904	;# 
   170   000F41                     VREFCON1        equ	3905	;# 
   171   000F41                     DACCON0         equ	3905	;# 
   172   000F42                     VREFCON0        equ	3906	;# 
   173   000F42                     FVRCON          equ	3906	;# 
   174   000F43                     CTMUICON        equ	3907	;# 
   175   000F43                     CTMUICONH       equ	3907	;# 
   176   000F44                     CTMUCONL        equ	3908	;# 
   177   000F44                     CTMUCON1        equ	3908	;# 
   178   000F45                     CTMUCONH        equ	3909	;# 
   179   000F45                     CTMUCON0        equ	3909	;# 
   180   000F46                     SRCON1          equ	3910	;# 
   181   000F47                     SRCON0          equ	3911	;# 
   182   000F48                     CCPTMRS1        equ	3912	;# 
   183   000F49                     CCPTMRS0        equ	3913	;# 
   184   000F4A                     T6CON           equ	3914	;# 
   185   000F4B                     PR6             equ	3915	;# 
   186   000F4C                     TMR6            equ	3916	;# 
   187   000F4D                     T5GCON          equ	3917	;# 
   188   000F4E                     T5CON           equ	3918	;# 
   189   000F4F                     TMR5            equ	3919	;# 
   190   000F4F                     TMR5L           equ	3919	;# 
   191   000F50                     TMR5H           equ	3920	;# 
   192   000F51                     T4CON           equ	3921	;# 
   193   000F52                     PR4             equ	3922	;# 
   194   000F53                     TMR4            equ	3923	;# 
   195   000F54                     CCP5CON         equ	3924	;# 
   196   000F55                     CCPR5           equ	3925	;# 
   197   000F55                     CCPR5L          equ	3925	;# 
   198   000F56                     CCPR5H          equ	3926	;# 
   199   000F57                     CCP4CON         equ	3927	;# 
   200   000F58                     CCPR4           equ	3928	;# 
   201   000F58                     CCPR4L          equ	3928	;# 
   202   000F59                     CCPR4H          equ	3929	;# 
   203   000F5A                     PSTR3CON        equ	3930	;# 
   204   000F5B                     ECCP3AS         equ	3931	;# 
   205   000F5B                     CCP3AS          equ	3931	;# 
   206   000F5C                     PWM3CON         equ	3932	;# 
   207   000F5D                     CCP3CON         equ	3933	;# 
   208   000F5E                     CCPR3           equ	3934	;# 
   209   000F5E                     CCPR3L          equ	3934	;# 
   210   000F5F                     CCPR3H          equ	3935	;# 
   211   000F60                     SLRCON          equ	3936	;# 
   212   000F61                     WPUB            equ	3937	;# 
   213   000F62                     IOCB            equ	3938	;# 
   214   000F63                     PSTR2CON        equ	3939	;# 
   215   000F64                     ECCP2AS         equ	3940	;# 
   216   000F64                     CCP2AS          equ	3940	;# 
   217   000F65                     PWM2CON         equ	3941	;# 
   218   000F66                     CCP2CON         equ	3942	;# 
   219   000F67                     CCPR2           equ	3943	;# 
   220   000F67                     CCPR2L          equ	3943	;# 
   221   000F68                     CCPR2H          equ	3944	;# 
   222   000F69                     SSP2CON3        equ	3945	;# 
   223   000F6A                     SSP2MSK         equ	3946	;# 
   224   000F6B                     SSP2CON2        equ	3947	;# 
   225   000F6C                     SSP2CON1        equ	3948	;# 
   226   000F6D                     SSP2STAT        equ	3949	;# 
   227   000F6E                     SSP2ADD         equ	3950	;# 
   228   000F6F                     SSP2BUF         equ	3951	;# 
   229   000F70                     BAUDCON2        equ	3952	;# 
   230   000F70                     BAUD2CON        equ	3952	;# 
   231   000F71                     RCSTA2          equ	3953	;# 
   232   000F71                     RC2STA          equ	3953	;# 
   233   000F72                     TXSTA2          equ	3954	;# 
   234   000F72                     TX2STA          equ	3954	;# 
   235   000F73                     TXREG2          equ	3955	;# 
   236   000F73                     TX2REG          equ	3955	;# 
   237   000F74                     RCREG2          equ	3956	;# 
   238   000F74                     RC2REG          equ	3956	;# 
   239   000F75                     SPBRG2          equ	3957	;# 
   240   000F75                     SP2BRG          equ	3957	;# 
   241   000F76                     SPBRGH2         equ	3958	;# 
   242   000F76                     SP2BRGH         equ	3958	;# 
   243   000F77                     CM2CON1         equ	3959	;# 
   244   000F77                     CM12CON         equ	3959	;# 
   245   000F78                     CM2CON0         equ	3960	;# 
   246   000F78                     CM2CON          equ	3960	;# 
   247   000F79                     CM1CON0         equ	3961	;# 
   248   000F79                     CM1CON          equ	3961	;# 
   249   000F7A                     PIE4            equ	3962	;# 
   250   000F7B                     PIR4            equ	3963	;# 
   251   000F7C                     IPR4            equ	3964	;# 
   252   000F7D                     PIE5            equ	3965	;# 
   253   000F7E                     PIR5            equ	3966	;# 
   254   000F7F                     IPR5            equ	3967	;# 
   255   000F80                     PORTA           equ	3968	;# 
   256   000F81                     PORTB           equ	3969	;# 
   257   000F82                     PORTC           equ	3970	;# 
   258   000F83                     PORTD           equ	3971	;# 
   259   000F84                     PORTE           equ	3972	;# 
   260   000F89                     LATA            equ	3977	;# 
   261   000F8A                     LATB            equ	3978	;# 
   262   000F8B                     LATC            equ	3979	;# 
   263   000F8C                     LATD            equ	3980	;# 
   264   000F8D                     LATE            equ	3981	;# 
   265   000F92                     TRISA           equ	3986	;# 
   266   000F92                     DDRA            equ	3986	;# 
   267   000F93                     TRISB           equ	3987	;# 
   268   000F93                     DDRB            equ	3987	;# 
   269   000F94                     TRISC           equ	3988	;# 
   270   000F94                     DDRC            equ	3988	;# 
   271   000F95                     TRISD           equ	3989	;# 
   272   000F95                     DDRD            equ	3989	;# 
   273   000F96                     TRISE           equ	3990	;# 
   274   000F96                     DDRE            equ	3990	;# 
   275   000F9B                     OSCTUNE         equ	3995	;# 
   276   000F9C                     HLVDCON         equ	3996	;# 
   277   000F9C                     LVDCON          equ	3996	;# 
   278   000F9D                     PIE1            equ	3997	;# 
   279   000F9E                     PIR1            equ	3998	;# 
   280   000F9F                     IPR1            equ	3999	;# 
   281   000FA0                     PIE2            equ	4000	;# 
   282   000FA1                     PIR2            equ	4001	;# 
   283   000FA2                     IPR2            equ	4002	;# 
   284   000FA3                     PIE3            equ	4003	;# 
   285   000FA4                     PIR3            equ	4004	;# 
   286   000FA5                     IPR3            equ	4005	;# 
   287   000FA6                     EECON1          equ	4006	;# 
   288   000FA7                     EECON2          equ	4007	;# 
   289   000FA8                     EEDATA          equ	4008	;# 
   290   000FA9                     EEADR           equ	4009	;# 
   291   000FAA                     EEADRH          equ	4010	;# 
   292   000FAB                     RCSTA1          equ	4011	;# 
   293   000FAB                     RCSTA           equ	4011	;# 
   294   000FAB                     RC1STA          equ	4011	;# 
   295   000FAC                     TXSTA1          equ	4012	;# 
   296   000FAC                     TXSTA           equ	4012	;# 
   297   000FAC                     TX1STA          equ	4012	;# 
   298   000FAD                     TXREG1          equ	4013	;# 
   299   000FAD                     TXREG           equ	4013	;# 
   300   000FAD                     TX1REG          equ	4013	;# 
   301   000FAE                     RCREG1          equ	4014	;# 
   302   000FAE                     RCREG           equ	4014	;# 
   303   000FAE                     RC1REG          equ	4014	;# 
   304   000FAF                     SPBRG1          equ	4015	;# 
   305   000FAF                     SPBRG           equ	4015	;# 
   306   000FAF                     SP1BRG          equ	4015	;# 
   307   000FB0                     SPBRGH1         equ	4016	;# 
   308   000FB0                     SPBRGH          equ	4016	;# 
   309   000FB0                     SP1BRGH         equ	4016	;# 
   310   000FB1                     T3CON           equ	4017	;# 
   311   000FB2                     TMR3            equ	4018	;# 
   312   000FB2                     TMR3L           equ	4018	;# 
   313   000FB3                     TMR3H           equ	4019	;# 
   314   000FB4                     T3GCON          equ	4020	;# 
   315   000FB6                     ECCP1AS         equ	4022	;# 
   316   000FB6                     ECCPAS          equ	4022	;# 
   317   000FB7                     PWM1CON         equ	4023	;# 
   318   000FB7                     PWMCON          equ	4023	;# 
   319   000FB8                     BAUDCON1        equ	4024	;# 
   320   000FB8                     BAUDCON         equ	4024	;# 
   321   000FB8                     BAUDCTL         equ	4024	;# 
   322   000FB8                     BAUD1CON        equ	4024	;# 
   323   000FB9                     PSTR1CON        equ	4025	;# 
   324   000FB9                     PSTRCON         equ	4025	;# 
   325   000FBA                     T2CON           equ	4026	;# 
   326   000FBB                     PR2             equ	4027	;# 
   327   000FBC                     TMR2            equ	4028	;# 
   328   000FBD                     CCP1CON         equ	4029	;# 
   329   000FBE                     CCPR1           equ	4030	;# 
   330   000FBE                     CCPR1L          equ	4030	;# 
   331   000FBF                     CCPR1H          equ	4031	;# 
   332   000FC0                     ADCON2          equ	4032	;# 
   333   000FC1                     ADCON1          equ	4033	;# 
   334   000FC2                     ADCON0          equ	4034	;# 
   335   000FC3                     ADRES           equ	4035	;# 
   336   000FC3                     ADRESL          equ	4035	;# 
   337   000FC4                     ADRESH          equ	4036	;# 
   338   000FC5                     SSP1CON2        equ	4037	;# 
   339   000FC5                     SSPCON2         equ	4037	;# 
   340   000FC6                     SSP1CON1        equ	4038	;# 
   341   000FC6                     SSPCON1         equ	4038	;# 
   342   000FC7                     SSP1STAT        equ	4039	;# 
   343   000FC7                     SSPSTAT         equ	4039	;# 
   344   000FC8                     SSP1ADD         equ	4040	;# 
   345   000FC8                     SSPADD          equ	4040	;# 
   346   000FC9                     SSP1BUF         equ	4041	;# 
   347   000FC9                     SSPBUF          equ	4041	;# 
   348   000FCA                     SSP1MSK         equ	4042	;# 
   349   000FCA                     SSPMSK          equ	4042	;# 
   350   000FCB                     SSP1CON3        equ	4043	;# 
   351   000FCB                     SSPCON3         equ	4043	;# 
   352   000FCC                     T1GCON          equ	4044	;# 
   353   000FCD                     T1CON           equ	4045	;# 
   354   000FCE                     TMR1            equ	4046	;# 
   355   000FCE                     TMR1L           equ	4046	;# 
   356   000FCF                     TMR1H           equ	4047	;# 
   357   000FD0                     RCON            equ	4048	;# 
   358   000FD1                     WDTCON          equ	4049	;# 
   359   000FD2                     OSCCON2         equ	4050	;# 
   360   000FD3                     OSCCON          equ	4051	;# 
   361   000FD5                     T0CON           equ	4053	;# 
   362   000FD6                     TMR0            equ	4054	;# 
   363   000FD6                     TMR0L           equ	4054	;# 
   364   000FD7                     TMR0H           equ	4055	;# 
   365   000FD8                     STATUS          equ	4056	;# 
   366   000FD9                     FSR2            equ	4057	;# 
   367   000FD9                     FSR2L           equ	4057	;# 
   368   000FDA                     FSR2H           equ	4058	;# 
   369   000FDB                     PLUSW2          equ	4059	;# 
   370   000FDC                     PREINC2         equ	4060	;# 
   371   000FDD                     POSTDEC2        equ	4061	;# 
   372   000FDE                     POSTINC2        equ	4062	;# 
   373   000FDF                     INDF2           equ	4063	;# 
   374   000FE0                     BSR             equ	4064	;# 
   375   000FE1                     FSR1            equ	4065	;# 
   376   000FE1                     FSR1L           equ	4065	;# 
   377   000FE2                     FSR1H           equ	4066	;# 
   378   000FE3                     PLUSW1          equ	4067	;# 
   379   000FE4                     PREINC1         equ	4068	;# 
   380   000FE5                     POSTDEC1        equ	4069	;# 
   381   000FE6                     POSTINC1        equ	4070	;# 
   382   000FE7                     INDF1           equ	4071	;# 
   383   000FE8                     WREG            equ	4072	;# 
   384   000FE9                     FSR0            equ	4073	;# 
   385   000FE9                     FSR0L           equ	4073	;# 
   386   000FEA                     FSR0H           equ	4074	;# 
   387   000FEB                     PLUSW0          equ	4075	;# 
   388   000FEC                     PREINC0         equ	4076	;# 
   389   000FED                     POSTDEC0        equ	4077	;# 
   390   000FEE                     POSTINC0        equ	4078	;# 
   391   000FEF                     INDF0           equ	4079	;# 
   392   000FF0                     INTCON3         equ	4080	;# 
   393   000FF1                     INTCON2         equ	4081	;# 
   394   000FF2                     INTCON          equ	4082	;# 
   395   000FF3                     PROD            equ	4083	;# 
   396   000FF3                     PRODL           equ	4083	;# 
   397   000FF4                     PRODH           equ	4084	;# 
   398   000FF5                     TABLAT          equ	4085	;# 
   399   000FF6                     TBLPTR          equ	4086	;# 
   400   000FF6                     TBLPTRL         equ	4086	;# 
   401   000FF7                     TBLPTRH         equ	4087	;# 
   402   000FF8                     TBLPTRU         equ	4088	;# 
   403   000FF9                     PCLAT           equ	4089	;# 
   404   000FF9                     PC              equ	4089	;# 
   405   000FF9                     PCL             equ	4089	;# 
   406   000FFA                     PCLATH          equ	4090	;# 
   407   000FFB                     PCLATU          equ	4091	;# 
   408   000FFC                     STKPTR          equ	4092	;# 
   409   000FFD                     TOS             equ	4093	;# 
   410   000FFD                     TOSL            equ	4093	;# 
   411   000FFE                     TOSH            equ	4094	;# 
   412   000FFF                     TOSU            equ	4095	;# 
   413   000F38                     ANSELA          equ	3896	;# 
   414   000F39                     ANSELB          equ	3897	;# 
   415   000F3A                     ANSELC          equ	3898	;# 
   416   000F3B                     ANSELD          equ	3899	;# 
   417   000F3C                     ANSELE          equ	3900	;# 
   418   000F3D                     PMD2            equ	3901	;# 
   419   000F3E                     PMD1            equ	3902	;# 
   420   000F3F                     PMD0            equ	3903	;# 
   421   000F40                     VREFCON2        equ	3904	;# 
   422   000F40                     DACCON1         equ	3904	;# 
   423   000F41                     VREFCON1        equ	3905	;# 
   424   000F41                     DACCON0         equ	3905	;# 
   425   000F42                     VREFCON0        equ	3906	;# 
   426   000F42                     FVRCON          equ	3906	;# 
   427   000F43                     CTMUICON        equ	3907	;# 
   428   000F43                     CTMUICONH       equ	3907	;# 
   429   000F44                     CTMUCONL        equ	3908	;# 
   430   000F44                     CTMUCON1        equ	3908	;# 
   431   000F45                     CTMUCONH        equ	3909	;# 
   432   000F45                     CTMUCON0        equ	3909	;# 
   433   000F46                     SRCON1          equ	3910	;# 
   434   000F47                     SRCON0          equ	3911	;# 
   435   000F48                     CCPTMRS1        equ	3912	;# 
   436   000F49                     CCPTMRS0        equ	3913	;# 
   437   000F4A                     T6CON           equ	3914	;# 
   438   000F4B                     PR6             equ	3915	;# 
   439   000F4C                     TMR6            equ	3916	;# 
   440   000F4D                     T5GCON          equ	3917	;# 
   441   000F4E                     T5CON           equ	3918	;# 
   442   000F4F                     TMR5            equ	3919	;# 
   443   000F4F                     TMR5L           equ	3919	;# 
   444   000F50                     TMR5H           equ	3920	;# 
   445   000F51                     T4CON           equ	3921	;# 
   446   000F52                     PR4             equ	3922	;# 
   447   000F53                     TMR4            equ	3923	;# 
   448   000F54                     CCP5CON         equ	3924	;# 
   449   000F55                     CCPR5           equ	3925	;# 
   450   000F55                     CCPR5L          equ	3925	;# 
   451   000F56                     CCPR5H          equ	3926	;# 
   452   000F57                     CCP4CON         equ	3927	;# 
   453   000F58                     CCPR4           equ	3928	;# 
   454   000F58                     CCPR4L          equ	3928	;# 
   455   000F59                     CCPR4H          equ	3929	;# 
   456   000F5A                     PSTR3CON        equ	3930	;# 
   457   000F5B                     ECCP3AS         equ	3931	;# 
   458   000F5B                     CCP3AS          equ	3931	;# 
   459   000F5C                     PWM3CON         equ	3932	;# 
   460   000F5D                     CCP3CON         equ	3933	;# 
   461   000F5E                     CCPR3           equ	3934	;# 
   462   000F5E                     CCPR3L          equ	3934	;# 
   463   000F5F                     CCPR3H          equ	3935	;# 
   464   000F60                     SLRCON          equ	3936	;# 
   465   000F61                     WPUB            equ	3937	;# 
   466   000F62                     IOCB            equ	3938	;# 
   467   000F63                     PSTR2CON        equ	3939	;# 
   468   000F64                     ECCP2AS         equ	3940	;# 
   469   000F64                     CCP2AS          equ	3940	;# 
   470   000F65                     PWM2CON         equ	3941	;# 
   471   000F66                     CCP2CON         equ	3942	;# 
   472   000F67                     CCPR2           equ	3943	;# 
   473   000F67                     CCPR2L          equ	3943	;# 
   474   000F68                     CCPR2H          equ	3944	;# 
   475   000F69                     SSP2CON3        equ	3945	;# 
   476   000F6A                     SSP2MSK         equ	3946	;# 
   477   000F6B                     SSP2CON2        equ	3947	;# 
   478   000F6C                     SSP2CON1        equ	3948	;# 
   479   000F6D                     SSP2STAT        equ	3949	;# 
   480   000F6E                     SSP2ADD         equ	3950	;# 
   481   000F6F                     SSP2BUF         equ	3951	;# 
   482   000F70                     BAUDCON2        equ	3952	;# 
   483   000F70                     BAUD2CON        equ	3952	;# 
   484   000F71                     RCSTA2          equ	3953	;# 
   485   000F71                     RC2STA          equ	3953	;# 
   486   000F72                     TXSTA2          equ	3954	;# 
   487   000F72                     TX2STA          equ	3954	;# 
   488   000F73                     TXREG2          equ	3955	;# 
   489   000F73                     TX2REG          equ	3955	;# 
   490   000F74                     RCREG2          equ	3956	;# 
   491   000F74                     RC2REG          equ	3956	;# 
   492   000F75                     SPBRG2          equ	3957	;# 
   493   000F75                     SP2BRG          equ	3957	;# 
   494   000F76                     SPBRGH2         equ	3958	;# 
   495   000F76                     SP2BRGH         equ	3958	;# 
   496   000F77                     CM2CON1         equ	3959	;# 
   497   000F77                     CM12CON         equ	3959	;# 
   498   000F78                     CM2CON0         equ	3960	;# 
   499   000F78                     CM2CON          equ	3960	;# 
   500   000F79                     CM1CON0         equ	3961	;# 
   501   000F79                     CM1CON          equ	3961	;# 
   502   000F7A                     PIE4            equ	3962	;# 
   503   000F7B                     PIR4            equ	3963	;# 
   504   000F7C                     IPR4            equ	3964	;# 
   505   000F7D                     PIE5            equ	3965	;# 
   506   000F7E                     PIR5            equ	3966	;# 
   507   000F7F                     IPR5            equ	3967	;# 
   508   000F80                     PORTA           equ	3968	;# 
   509   000F81                     PORTB           equ	3969	;# 
   510   000F82                     PORTC           equ	3970	;# 
   511   000F83                     PORTD           equ	3971	;# 
   512   000F84                     PORTE           equ	3972	;# 
   513   000F89                     LATA            equ	3977	;# 
   514   000F8A                     LATB            equ	3978	;# 
   515   000F8B                     LATC            equ	3979	;# 
   516   000F8C                     LATD            equ	3980	;# 
   517   000F8D                     LATE            equ	3981	;# 
   518   000F92                     TRISA           equ	3986	;# 
   519   000F92                     DDRA            equ	3986	;# 
   520   000F93                     TRISB           equ	3987	;# 
   521   000F93                     DDRB            equ	3987	;# 
   522   000F94                     TRISC           equ	3988	;# 
   523   000F94                     DDRC            equ	3988	;# 
   524   000F95                     TRISD           equ	3989	;# 
   525   000F95                     DDRD            equ	3989	;# 
   526   000F96                     TRISE           equ	3990	;# 
   527   000F96                     DDRE            equ	3990	;# 
   528   000F9B                     OSCTUNE         equ	3995	;# 
   529   000F9C                     HLVDCON         equ	3996	;# 
   530   000F9C                     LVDCON          equ	3996	;# 
   531   000F9D                     PIE1            equ	3997	;# 
   532   000F9E                     PIR1            equ	3998	;# 
   533   000F9F                     IPR1            equ	3999	;# 
   534   000FA0                     PIE2            equ	4000	;# 
   535   000FA1                     PIR2            equ	4001	;# 
   536   000FA2                     IPR2            equ	4002	;# 
   537   000FA3                     PIE3            equ	4003	;# 
   538   000FA4                     PIR3            equ	4004	;# 
   539   000FA5                     IPR3            equ	4005	;# 
   540   000FA6                     EECON1          equ	4006	;# 
   541   000FA7                     EECON2          equ	4007	;# 
   542   000FA8                     EEDATA          equ	4008	;# 
   543   000FA9                     EEADR           equ	4009	;# 
   544   000FAA                     EEADRH          equ	4010	;# 
   545   000FAB                     RCSTA1          equ	4011	;# 
   546   000FAB                     RCSTA           equ	4011	;# 
   547   000FAB                     RC1STA          equ	4011	;# 
   548   000FAC                     TXSTA1          equ	4012	;# 
   549   000FAC                     TXSTA           equ	4012	;# 
   550   000FAC                     TX1STA          equ	4012	;# 
   551   000FAD                     TXREG1          equ	4013	;# 
   552   000FAD                     TXREG           equ	4013	;# 
   553   000FAD                     TX1REG          equ	4013	;# 
   554   000FAE                     RCREG1          equ	4014	;# 
   555   000FAE                     RCREG           equ	4014	;# 
   556   000FAE                     RC1REG          equ	4014	;# 
   557   000FAF                     SPBRG1          equ	4015	;# 
   558   000FAF                     SPBRG           equ	4015	;# 
   559   000FAF                     SP1BRG          equ	4015	;# 
   560   000FB0                     SPBRGH1         equ	4016	;# 
   561   000FB0                     SPBRGH          equ	4016	;# 
   562   000FB0                     SP1BRGH         equ	4016	;# 
   563   000FB1                     T3CON           equ	4017	;# 
   564   000FB2                     TMR3            equ	4018	;# 
   565   000FB2                     TMR3L           equ	4018	;# 
   566   000FB3                     TMR3H           equ	4019	;# 
   567   000FB4                     T3GCON          equ	4020	;# 
   568   000FB6                     ECCP1AS         equ	4022	;# 
   569   000FB6                     ECCPAS          equ	4022	;# 
   570   000FB7                     PWM1CON         equ	4023	;# 
   571   000FB7                     PWMCON          equ	4023	;# 
   572   000FB8                     BAUDCON1        equ	4024	;# 
   573   000FB8                     BAUDCON         equ	4024	;# 
   574   000FB8                     BAUDCTL         equ	4024	;# 
   575   000FB8                     BAUD1CON        equ	4024	;# 
   576   000FB9                     PSTR1CON        equ	4025	;# 
   577   000FB9                     PSTRCON         equ	4025	;# 
   578   000FBA                     T2CON           equ	4026	;# 
   579   000FBB                     PR2             equ	4027	;# 
   580   000FBC                     TMR2            equ	4028	;# 
   581   000FBD                     CCP1CON         equ	4029	;# 
   582   000FBE                     CCPR1           equ	4030	;# 
   583   000FBE                     CCPR1L          equ	4030	;# 
   584   000FBF                     CCPR1H          equ	4031	;# 
   585   000FC0                     ADCON2          equ	4032	;# 
   586   000FC1                     ADCON1          equ	4033	;# 
   587   000FC2                     ADCON0          equ	4034	;# 
   588   000FC3                     ADRES           equ	4035	;# 
   589   000FC3                     ADRESL          equ	4035	;# 
   590   000FC4                     ADRESH          equ	4036	;# 
   591   000FC5                     SSP1CON2        equ	4037	;# 
   592   000FC5                     SSPCON2         equ	4037	;# 
   593   000FC6                     SSP1CON1        equ	4038	;# 
   594   000FC6                     SSPCON1         equ	4038	;# 
   595   000FC7                     SSP1STAT        equ	4039	;# 
   596   000FC7                     SSPSTAT         equ	4039	;# 
   597   000FC8                     SSP1ADD         equ	4040	;# 
   598   000FC8                     SSPADD          equ	4040	;# 
   599   000FC9                     SSP1BUF         equ	4041	;# 
   600   000FC9                     SSPBUF          equ	4041	;# 
   601   000FCA                     SSP1MSK         equ	4042	;# 
   602   000FCA                     SSPMSK          equ	4042	;# 
   603   000FCB                     SSP1CON3        equ	4043	;# 
   604   000FCB                     SSPCON3         equ	4043	;# 
   605   000FCC                     T1GCON          equ	4044	;# 
   606   000FCD                     T1CON           equ	4045	;# 
   607   000FCE                     TMR1            equ	4046	;# 
   608   000FCE                     TMR1L           equ	4046	;# 
   609   000FCF                     TMR1H           equ	4047	;# 
   610   000FD0                     RCON            equ	4048	;# 
   611   000FD1                     WDTCON          equ	4049	;# 
   612   000FD2                     OSCCON2         equ	4050	;# 
   613   000FD3                     OSCCON          equ	4051	;# 
   614   000FD5                     T0CON           equ	4053	;# 
   615   000FD6                     TMR0            equ	4054	;# 
   616   000FD6                     TMR0L           equ	4054	;# 
   617   000FD7                     TMR0H           equ	4055	;# 
   618   000FD8                     STATUS          equ	4056	;# 
   619   000FD9                     FSR2            equ	4057	;# 
   620   000FD9                     FSR2L           equ	4057	;# 
   621   000FDA                     FSR2H           equ	4058	;# 
   622   000FDB                     PLUSW2          equ	4059	;# 
   623   000FDC                     PREINC2         equ	4060	;# 
   624   000FDD                     POSTDEC2        equ	4061	;# 
   625   000FDE                     POSTINC2        equ	4062	;# 
   626   000FDF                     INDF2           equ	4063	;# 
   627   000FE0                     BSR             equ	4064	;# 
   628   000FE1                     FSR1            equ	4065	;# 
   629   000FE1                     FSR1L           equ	4065	;# 
   630   000FE2                     FSR1H           equ	4066	;# 
   631   000FE3                     PLUSW1          equ	4067	;# 
   632   000FE4                     PREINC1         equ	4068	;# 
   633   000FE5                     POSTDEC1        equ	4069	;# 
   634   000FE6                     POSTINC1        equ	4070	;# 
   635   000FE7                     INDF1           equ	4071	;# 
   636   000FE8                     WREG            equ	4072	;# 
   637   000FE9                     FSR0            equ	4073	;# 
   638   000FE9                     FSR0L           equ	4073	;# 
   639   000FEA                     FSR0H           equ	4074	;# 
   640   000FEB                     PLUSW0          equ	4075	;# 
   641   000FEC                     PREINC0         equ	4076	;# 
   642   000FED                     POSTDEC0        equ	4077	;# 
   643   000FEE                     POSTINC0        equ	4078	;# 
   644   000FEF                     INDF0           equ	4079	;# 
   645   000FF0                     INTCON3         equ	4080	;# 
   646   000FF1                     INTCON2         equ	4081	;# 
   647   000FF2                     INTCON          equ	4082	;# 
   648   000FF3                     PROD            equ	4083	;# 
   649   000FF3                     PRODL           equ	4083	;# 
   650   000FF4                     PRODH           equ	4084	;# 
   651   000FF5                     TABLAT          equ	4085	;# 
   652   000FF6                     TBLPTR          equ	4086	;# 
   653   000FF6                     TBLPTRL         equ	4086	;# 
   654   000FF7                     TBLPTRH         equ	4087	;# 
   655   000FF8                     TBLPTRU         equ	4088	;# 
   656   000FF9                     PCLAT           equ	4089	;# 
   657   000FF9                     PC              equ	4089	;# 
   658   000FF9                     PCL             equ	4089	;# 
   659   000FFA                     PCLATH          equ	4090	;# 
   660   000FFB                     PCLATU          equ	4091	;# 
   661   000FFC                     STKPTR          equ	4092	;# 
   662   000FFD                     TOS             equ	4093	;# 
   663   000FFD                     TOSL            equ	4093	;# 
   664   000FFE                     TOSH            equ	4094	;# 
   665   000FFF                     TOSU            equ	4095	;# 
   666                           
   667                           	psect	idataBANK0
   668   0036D6                     __pidataBANK0:
   669                           	callstack 0
   670                           
   671                           ;initializer for _menu_sel
   672   0036D6  FFFF               	dw	65535
   673                           
   674                           ;initializer for _LCD_entry_mode
   675   0036D8  06                 	db	6
   676                           
   677                           ;initializer for _LCD_display_control
   678   0036D9  0C                 	db	12
   679   000F3A                     _ANSELC         set	3898
   680   000F38                     _ANSELAbits     set	3896
   681   000F3A                     _ANSELCbits     set	3898
   682   000F39                     _ANSELBbits     set	3897
   683   000F95                     _TRISDbits      set	3989
   684   000F8C                     _LATDbits       set	3980
   685   000F82                     _PORTCbits      set	3970
   686   000F81                     _PORTBbits      set	3969
   687   000FC3                     _ADRESL         set	4035
   688   000FC4                     _ADRESH         set	4036
   689   000FC2                     _ADCON0bits     set	4034
   690   000FCD                     _T1CONbits      set	4045
   691   000FBE                     _CCPR1L         set	4030
   692   000FBF                     _CCPR1H         set	4031
   693   000FBD                     _CCP1CONbits    set	4029
   694   000FAD                     _TXREG          set	4013
   695   000FAC                     _TXSTAbits      set	4012
   696   000FAB                     _RCSTAbits      set	4011
   697   000FAE                     _RCREG1         set	4014
   698   000F9E                     _PIR1bits       set	3998
   699   000FF2                     _INTCONbits     set	4082
   700   000F9D                     _PIE1bits       set	3997
   701   000FAB                     _RCSTA1bits     set	4011
   702   000FAF                     _SPBRG1         set	4015
   703   000FB0                     _SPBRGH1        set	4016
   704   000FB8                     _BAUDCON1bits   set	4024
   705   000FAC                     _TXSTA1bits     set	4012
   706   000FC0                     _ADCON2         set	4032
   707   000FC1                     _ADCON1         set	4033
   708   000FC2                     _ADCON0         set	4034
   709   000F92                     _TRISAbits      set	3986
   710   000F94                     _TRISCbits      set	3988
   711   000F93                     _TRISBbits      set	3987
   712   000FD3                     _OSCCON         set	4051
   713                           
   714                           	psect	mediumconst
   715   00FE90                     __pmediumconst:
   716                           	callstack 0
   717   00FE90  00                 	db	0
   718   00FE91                     STR_6:
   719   00FE91  4F                 	db	79	;'O'
   720   00FE92  42                 	db	66	;'B'
   721   00FE93  44                 	db	68	;'D'
   722   00FE94  49                 	db	73	;'I'
   723   00FE95  49                 	db	73	;'I'
   724   00FE96  20                 	db	32
   725   00FE97  4E                 	db	78	;'N'
   726   00FE98  6F                 	db	111	;'o'
   727   00FE99  74                 	db	116	;'t'
   728   00FE9A  20                 	db	32
   729   00FE9B  46                 	db	70	;'F'
   730   00FE9C  6F                 	db	111	;'o'
   731   00FE9D  75                 	db	117	;'u'
   732   00FE9E  6E                 	db	110	;'n'
   733   00FE9F  64                 	db	100	;'d'
   734   00FEA0  20                 	db	32
   735   00FEA1  00                 	db	0
   736   00FEA2                     STR_2:
   737   00FEA2  3E                 	db	62	;'>'
   738   00FEA3  3E                 	db	62	;'>'
   739   00FEA4  3E                 	db	62	;'>'
   740   00FEA5  20                 	db	32
   741   00FEA6  4F                 	db	79	;'O'
   742   00FEA7  42                 	db	66	;'B'
   743   00FEA8  44                 	db	68	;'D'
   744   00FEA9  49                 	db	73	;'I'
   745   00FEAA  49                 	db	73	;'I'
   746   00FEAB  50                 	db	80	;'P'
   747   00FEAC  49                 	db	73	;'I'
   748   00FEAD  43                 	db	67	;'C'
   749   00FEAE  20                 	db	32
   750   00FEAF  3C                 	db	60	;'<'
   751   00FEB0  3C                 	db	60	;'<'
   752   00FEB1  3C                 	db	60	;'<'
   753   00FEB2  00                 	db	0
   754   00FEB3                     STR_45:
   755   00FEB3  59                 	db	89	;'Y'
   756   00FEB4  2F                 	db	47
   757   00FEB5  4E                 	db	78	;'N'
   758   00FEB6  20                 	db	32
   759   00FEB7  3C                 	db	60	;'<'
   760   00FEB8  3C                 	db	60	;'<'
   761   00FEB9  3C                 	db	60	;'<'
   762   00FEBA  3C                 	db	60	;'<'
   763   00FEBB  3C                 	db	60	;'<'
   764   00FEBC  3C                 	db	60	;'<'
   765   00FEBD  3C                 	db	60	;'<'
   766   00FEBE  3C                 	db	60	;'<'
   767   00FEBF  3C                 	db	60	;'<'
   768   00FEC0  3C                 	db	60	;'<'
   769   00FEC1  3C                 	db	60	;'<'
   770   00FEC2  3C                 	db	60	;'<'
   771   00FEC3  00                 	db	0
   772   00FEC4                     STR_9:
   773   00FEC4  3D                 	db	61	;'='
   774   00FEC5  3D                 	db	61	;'='
   775   00FEC6  3D                 	db	61	;'='
   776   00FEC7  3D                 	db	61	;'='
   777   00FEC8  3D                 	db	61	;'='
   778   00FEC9  3D                 	db	61	;'='
   779   00FECA  3D                 	db	61	;'='
   780   00FECB  3D                 	db	61	;'='
   781   00FECC  3D                 	db	61	;'='
   782   00FECD  3D                 	db	61	;'='
   783   00FECE  3D                 	db	61	;'='
   784   00FECF  3D                 	db	61	;'='
   785   00FED0  3D                 	db	61	;'='
   786   00FED1  3D                 	db	61	;'='
   787   00FED2  3D                 	db	61	;'='
   788   00FED3  3D                 	db	61	;'='
   789   00FED4  00                 	db	0
   790   00FED5                     STR_11:
   791   00FED5  4D                 	db	77	;'M'
   792   00FED6  45                 	db	69	;'E'
   793   00FED7  4E                 	db	78	;'N'
   794   00FED8  55                 	db	85	;'U'
   795   00FED9  20                 	db	32
   796   00FEDA  20                 	db	32
   797   00FEDB  3C                 	db	60	;'<'
   798   00FEDC  4F                 	db	79	;'O'
   799   00FEDD  42                 	db	66	;'B'
   800   00FEDE  44                 	db	68	;'D'
   801   00FEDF  49                 	db	73	;'I'
   802   00FEE0  49                 	db	73	;'I'
   803   00FEE1  50                 	db	80	;'P'
   804   00FEE2  49                 	db	73	;'I'
   805   00FEE3  43                 	db	67	;'C'
   806   00FEE4  3E                 	db	62	;'>'
   807   00FEE5  00                 	db	0
   808   00FEE6                     STR_8:
   809   00FEE6  3C                 	db	60	;'<'
   810   00FEE7  4F                 	db	79	;'O'
   811   00FEE8  42                 	db	66	;'B'
   812   00FEE9  44                 	db	68	;'D'
   813   00FEEA  49                 	db	73	;'I'
   814   00FEEB  49                 	db	73	;'I'
   815   00FEEC  20                 	db	32
   816   00FEED  44                 	db	68	;'D'
   817   00FEEE  65                 	db	101	;'e'
   818   00FEEF  74                 	db	116	;'t'
   819   00FEF0  65                 	db	101	;'e'
   820   00FEF1  63                 	db	99	;'c'
   821   00FEF2  74                 	db	116	;'t'
   822   00FEF3  65                 	db	101	;'e'
   823   00FEF4  64                 	db	100	;'d'
   824   00FEF5  3E                 	db	62	;'>'
   825   00FEF6  00                 	db	0
   826   00FEF7                     STR_12:
   827   00FEF7  4C                 	db	76	;'L'
   828   00FEF8  52                 	db	82	;'R'
   829   00FEF9  4D                 	db	77	;'M'
   830   00FEFA  20                 	db	32
   831   00FEFB  44                 	db	68	;'D'
   832   00FEFC  54                 	db	84	;'T'
   833   00FEFD  43                 	db	67	;'C'
   834   00FEFE  20                 	db	32
   835   00FEFF  43                 	db	67	;'C'
   836   00FF00  44                 	db	68	;'D'
   837   00FF01  43                 	db	67	;'C'
   838   00FF02  20                 	db	32
   839   00FF03  44                 	db	68	;'D'
   840   00FF04  53                 	db	83	;'S'
   841   00FF05  49                 	db	73	;'I'
   842   00FF06  00                 	db	0
   843   00FF07                     STR_49:
   844   00FF07  4E                 	db	78	;'N'
   845   00FF08  6F                 	db	111	;'o'
   846   00FF09  74                 	db	116	;'t'
   847   00FF0A  68                 	db	104	;'h'
   848   00FF0B  69                 	db	105	;'i'
   849   00FF0C  6E                 	db	110	;'n'
   850   00FF0D  67                 	db	103	;'g'
   851   00FF0E  20                 	db	32
   852   00FF0F  43                 	db	67	;'C'
   853   00FF10  6C                 	db	108	;'l'
   854   00FF11  65                 	db	101	;'e'
   855   00FF12  61                 	db	97	;'a'
   856   00FF13  72                 	db	114	;'r'
   857   00FF14  65                 	db	101	;'e'
   858   00FF15  64                 	db	100	;'d'
   859   00FF16  00                 	db	0
   860   00FF17                     STR_37:
   861   00FF17  44                 	db	68	;'D'
   862   00FF18  54                 	db	84	;'T'
   863   00FF19  43                 	db	67	;'C'
   864   00FF1A  27                 	db	39
   865   00FF1B  73                 	db	115	;'s'
   866   00FF1C  20                 	db	32
   867   00FF1D  52                 	db	82	;'R'
   868   00FF1E  65                 	db	101	;'e'
   869   00FF1F  71                 	db	113	;'q'
   870   00FF20  75                 	db	117	;'u'
   871   00FF21  65                 	db	101	;'e'
   872   00FF22  73                 	db	115	;'s'
   873   00FF23  74                 	db	116	;'t'
   874   00FF24  65                 	db	101	;'e'
   875   00FF25  64                 	db	100	;'d'
   876   00FF26  00                 	db	0
   877   00FF27                     STR_3:
   878   00FF27  3E                 	db	62	;'>'
   879   00FF28  3E                 	db	62	;'>'
   880   00FF29  3E                 	db	62	;'>'
   881   00FF2A  3E                 	db	62	;'>'
   882   00FF2B  20                 	db	32
   883   00FF2C  56                 	db	86	;'V'
   884   00FF2D  31                 	db	49	;'1'
   885   00FF2E  2E                 	db	46
   886   00FF2F  30                 	db	48	;'0'
   887   00FF30  20                 	db	32
   888   00FF31  3C                 	db	60	;'<'
   889   00FF32  3C                 	db	60	;'<'
   890   00FF33  3C                 	db	60	;'<'
   891   00FF34  3C                 	db	60	;'<'
   892   00FF35  00                 	db	0
   893   00FF36                     STR_44:
   894   00FF36  43                 	db	67	;'C'
   895   00FF37  6C                 	db	108	;'l'
   896   00FF38  65                 	db	101	;'e'
   897   00FF39  61                 	db	97	;'a'
   898   00FF3A  72                 	db	114	;'r'
   899   00FF3B  20                 	db	32
   900   00FF3C  43                 	db	67	;'C'
   901   00FF3D  6F                 	db	111	;'o'
   902   00FF3E  64                 	db	100	;'d'
   903   00FF3F  65                 	db	101	;'e'
   904   00FF40  28                 	db	40
   905   00FF41  73                 	db	115	;'s'
   906   00FF42  29                 	db	41
   907   00FF43  3F                 	db	63	;'?'
   908   00FF44  00                 	db	0
   909   00FF45                     STR_35:
   910   00FF45  20                 	db	32
   911   00FF46  20                 	db	32
   912   00FF47  20                 	db	32
   913   00FF48  20                 	db	32
   914   00FF49  20                 	db	32
   915   00FF4A  20                 	db	32
   916   00FF4B  20                 	db	32
   917   00FF4C  20                 	db	32
   918   00FF4D  20                 	db	32
   919   00FF4E  20                 	db	32
   920   00FF4F  20                 	db	32
   921   00FF50  20                 	db	32
   922   00FF51  20                 	db	32
   923   00FF52  00                 	db	0
   924   00FF53                     STR_43:
   925   00FF53  44                 	db	68	;'D'
   926   00FF54  54                 	db	84	;'T'
   927   00FF55  43                 	db	67	;'C'
   928   00FF56  28                 	db	40
   929   00FF57  73                 	db	115	;'s'
   930   00FF58  29                 	db	41
   931   00FF59  20                 	db	32
   932   00FF5A  46                 	db	70	;'F'
   933   00FF5B  6F                 	db	111	;'o'
   934   00FF5C  75                 	db	117	;'u'
   935   00FF5D  6E                 	db	110	;'n'
   936   00FF5E  64                 	db	100	;'d'
   937   00FF5F  3A                 	db	58	;':'
   938   00FF60  00                 	db	0
   939   00FF61                     STR_47:
   940   00FF61  43                 	db	67	;'C'
   941   00FF62  6F                 	db	111	;'o'
   942   00FF63  64                 	db	100	;'d'
   943   00FF64  65                 	db	101	;'e'
   944   00FF65  73                 	db	115	;'s'
   945   00FF66  20                 	db	32
   946   00FF67  43                 	db	67	;'C'
   947   00FF68  6C                 	db	108	;'l'
   948   00FF69  65                 	db	101	;'e'
   949   00FF6A  61                 	db	97	;'a'
   950   00FF6B  72                 	db	114	;'r'
   951   00FF6C  65                 	db	101	;'e'
   952   00FF6D  64                 	db	100	;'d'
   953   00FF6E  00                 	db	0
   954   00FF6F                     STR_42:
   955   00FF6F  4E                 	db	78	;'N'
   956   00FF70  6F                 	db	111	;'o'
   957   00FF71  20                 	db	32
   958   00FF72  44                 	db	68	;'D'
   959   00FF73  54                 	db	84	;'T'
   960   00FF74  43                 	db	67	;'C'
   961   00FF75  73                 	db	115	;'s'
   962   00FF76  20                 	db	32
   963   00FF77  46                 	db	70	;'F'
   964   00FF78  6F                 	db	111	;'o'
   965   00FF79  75                 	db	117	;'u'
   966   00FF7A  6E                 	db	110	;'n'
   967   00FF7B  64                 	db	100	;'d'
   968   00FF7C  00                 	db	0
   969   00FF7D                     STR_38:
   970   00FF7D  4C                 	db	76	;'L'
   971   00FF7E  6F                 	db	111	;'o'
   972   00FF7F  61                 	db	97	;'a'
   973   00FF80  64                 	db	100	;'d'
   974   00FF81  69                 	db	105	;'i'
   975   00FF82  6E                 	db	110	;'n'
   976   00FF83  67                 	db	103	;'g'
   977   00FF84  2E                 	db	46
   978   00FF85  2E                 	db	46
   979   00FF86  2E                 	db	46
   980   00FF87  00                 	db	0
   981   00FF88                     STR_48:
   982   00FF88  54                 	db	84	;'T'
   983   00FF89  6F                 	db	111	;'o'
   984   00FF8A  20                 	db	32
   985   00FF8B  4D                 	db	77	;'M'
   986   00FF8C  65                 	db	101	;'e'
   987   00FF8D  6E                 	db	110	;'n'
   988   00FF8E  75                 	db	117	;'u'
   989   00FF8F  2E                 	db	46
   990   00FF90  2E                 	db	46
   991   00FF91  2E                 	db	46
   992   00FF92  00                 	db	0
   993   00FF93                     STR_36:
   994   00FF93  25                 	db	37
   995   00FF94  63                 	db	99	;'c'
   996   00FF95  25                 	db	37
   997   00FF96  30                 	db	48	;'0'
   998   00FF97  31                 	db	49	;'1'
   999   00FF98  58                 	db	88	;'X'
  1000   00FF99  25                 	db	37
  1001   00FF9A  30                 	db	48	;'0'
  1002   00FF9B  32                 	db	50	;'2'
  1003   00FF9C  58                 	db	88	;'X'
  1004   00FF9D  00                 	db	0
  1005   00FF9E                     STR_1:
  1006   00FF9E  41                 	db	65	;'A'
  1007   00FF9F  54                 	db	84	;'T'
  1008   00FFA0  45                 	db	69	;'E'
  1009   00FFA1  30                 	db	48	;'0'
  1010   00FFA2  0D                 	db	13
  1011   00FFA3  00                 	db	0
  1012   00FFA4                     STR_4:
  1013   00FFA4  41                 	db	65	;'A'
  1014   00FFA5  54                 	db	84	;'T'
  1015   00FFA6  4C                 	db	76	;'L'
  1016   00FFA7  30                 	db	48	;'0'
  1017   00FFA8  0D                 	db	13
  1018   00FFA9  00                 	db	0
  1019   00FFAA                     STR_32:
  1020   00FFAA  30                 	db	48	;'0'
  1021   00FFAB  31                 	db	49	;'1'
  1022   00FFAC  30                 	db	48	;'0'
  1023   00FFAD  38                 	db	56	;'8'
  1024   00FFAE  0D                 	db	13
  1025   00FFAF  00                 	db	0
  1026   00FFB0                     STR_15:
  1027   00FFB0  30                 	db	48	;'0'
  1028   00FFB1  31                 	db	49	;'1'
  1029   00FFB2  30                 	db	48	;'0'
  1030   00FFB3  43                 	db	67	;'C'
  1031   00FFB4  0D                 	db	13
  1032   00FFB5  00                 	db	0
  1033   00FFB6                     STR_24:
  1034   00FFB6  30                 	db	48	;'0'
  1035   00FFB7  31                 	db	49	;'1'
  1036   00FFB8  30                 	db	48	;'0'
  1037   00FFB9  46                 	db	70	;'F'
  1038   00FFBA  0D                 	db	13
  1039   00FFBB  00                 	db	0
  1040   00FFBC                     STR_20:
  1041   00FFBC  41                 	db	65	;'A'
  1042   00FFBD  54                 	db	84	;'T'
  1043   00FFBE  52                 	db	82	;'R'
  1044   00FFBF  56                 	db	86	;'V'
  1045   00FFC0  0D                 	db	13
  1046   00FFC1  00                 	db	0
  1047   00FFC2                     STR_22:
  1048   00FFC2  56                 	db	86	;'V'
  1049   00FFC3  42                 	db	66	;'B'
  1050   00FFC4  61                 	db	97	;'a'
  1051   00FFC5  74                 	db	116	;'t'
  1052   00FFC6  74                 	db	116	;'t'
  1053   00FFC7  00                 	db	0
  1054   00FFC8                     STR_5:
  1055   00FFC8  41                 	db	65	;'A'
  1056   00FFC9  54                 	db	84	;'T'
  1057   00FFCA  49                 	db	73	;'I'
  1058   00FFCB  0D                 	db	13
  1059   00FFCC  00                 	db	0
  1060   00FFCD                     STR_33:
  1061   00FFCD  53                 	db	83	;'S'
  1062   00FFCE  41                 	db	65	;'A'
  1063   00FFCF  45                 	db	69	;'E'
  1064   00FFD0  3A                 	db	58	;':'
  1065   00FFD1  00                 	db	0
  1066   00FFD2                     STR_16:
  1067   00FFD2  34                 	db	52	;'4'
  1068   00FFD3  31                 	db	49	;'1'
  1069   00FFD4  30                 	db	48	;'0'
  1070   00FFD5  43                 	db	67	;'C'
  1071   00FFD6  00                 	db	0
  1072   00FFD7                     STR_25:
  1073   00FFD7  34                 	db	52	;'4'
  1074   00FFD8  31                 	db	49	;'1'
  1075   00FFD9  30                 	db	48	;'0'
  1076   00FFDA  46                 	db	70	;'F'
  1077   00FFDB  00                 	db	0
  1078   00FFDC                     STR_39:
  1079   00FFDC  30                 	db	48	;'0'
  1080   00FFDD  33                 	db	51	;'3'
  1081   00FFDE  0D                 	db	13
  1082   00FFDF  00                 	db	0
  1083   00FFE0                     STR_46:
  1084   00FFE0  30                 	db	48	;'0'
  1085   00FFE1  34                 	db	52	;'4'
  1086   00FFE2  0D                 	db	13
  1087   00FFE3  00                 	db	0
  1088   00FFE4                     STR_31:
  1089   00FFE4  4F                 	db	79	;'O'
  1090   00FFE5  53                 	db	83	;'S'
  1091   00FFE6  3A                 	db	58	;':'
  1092   00FFE7  00                 	db	0
  1093   00FFE8                     STR_23:
  1094   00FFE8  4E                 	db	78	;'N'
  1095   00FFE9  2F                 	db	47
  1096   00FFEA  41                 	db	65	;'A'
  1097   00FFEB  00                 	db	0
  1098   00FFEC                     STR_19:
  1099   00FFEC  52                 	db	82	;'R'
  1100   00FFED  50                 	db	80	;'P'
  1101   00FFEE  4D                 	db	77	;'M'
  1102   00FFEF  00                 	db	0
  1103   00FFF0                     STR_28:
  1104   00FFF0  41                 	db	65	;'A'
  1105   00FFF1  49                 	db	73	;'I'
  1106   00FFF2  54                 	db	84	;'T'
  1107   00FFF3  00                 	db	0
  1108   00FFF4                     STR_17:
  1109   00FFF4  25                 	db	37
  1110   00FFF5  75                 	db	117	;'u'
  1111   00FFF6  00                 	db	0
  1112   00FFF7                     STR_40:
  1113   00FFF7  25                 	db	37
  1114   00FFF8  78                 	db	120	;'x'
  1115   00FFF9  00                 	db	0
  1116   00FFFA                     STR_14:
  1117   00FFFA  5E                 	db	94	;'^'
  1118   00FFFB  00                 	db	0
  1119   00FFFC                     STR_13:
  1120   00FFFC  7E                 	db	126
  1121   00FFFD  00                 	db	0
  1122   00FFF7                     STR_41          equ	STR_40
  1123   00FFF4                     STR_26          equ	STR_17
  1124   00FFD5                     STR_29          equ	STR_16+3
  1125   00FF88                     STR_50          equ	STR_48
  1126   00FF46                     STR_34          equ	STR_35+1
  1127   00FF4D                     STR_18          equ	STR_35+8
  1128   00FF4D                     STR_21          equ	STR_35+8
  1129   00FF4F                     STR_27          equ	STR_35+10
  1130   00FFC8                     STR_7           equ	STR_5
  1131   00FFC8                     STR_30          equ	STR_5
  1132   00FF9E                     STR_10          equ	STR_1
  1133   00FFFE  00                 	db	0	; dummy byte at the end
  1134   00FE90                     __smallconst    set	__pmediumconst
  1135   00FE90                     __mediumconst   set	__pmediumconst
  1136   000002                     __activetblptr  equ	2
  1137                           
  1138                           ; #config settings
  1139                           
  1140                           	psect	cinit
  1141   0032E4                     __pcinit:
  1142                           	callstack 0
  1143   0032E4                     start_initialization:
  1144                           	callstack 0
  1145   0032E4                     __initialization:
  1146                           	callstack 0
  1147                           
  1148                           ; Initialize objects allocated to BANK0 (4 bytes)
  1149                           ; load TBLPTR registers with __pidataBANK0
  1150   0032E4  0ED6               	movlw	low __pidataBANK0
  1151   0032E6  6EF6               	movwf	tblptrl,c
  1152   0032E8  0E36               	movlw	high __pidataBANK0
  1153   0032EA  6EF7               	movwf	tblptrh,c
  1154   0032EC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1155   0032EE  6EF8               	movwf	tblptru,c
  1156   0032F0  EE00  F0F3         	lfsr	0,__pdataBANK0
  1157   0032F4  EE10 F004          	lfsr	1,4
  1158   0032F8                     copy_data0:
  1159   0032F8  0009               	tblrd		*+
  1160   0032FA  CFF5 FFEE          	movff	tablat,postinc0
  1161   0032FE  50E5               	movf	postdec1,w,c
  1162   003300  50E1               	movf	fsr1l,w,c
  1163   003302  E1FA               	bnz	copy_data0
  1164                           
  1165                           ; Clear objects allocated to BANK2 (256 bytes)
  1166   003304  EE02  F000         	lfsr	0,__pbssBANK2
  1167   003308  EE11 F000          	lfsr	1,256
  1168   00330C                     clear_0:
  1169   00330C  6AEE               	clrf	postinc0,c
  1170   00330E  50E5               	movf	postdec1,w,c
  1171   003310  50E1               	movf	fsr1l,w,c
  1172   003312  E1FC               	bnz	clear_0
  1173   003314  50E2               	movf	fsr1h,w,c
  1174   003316  E1FA               	bnz	clear_0
  1175                           
  1176                           ; Clear objects allocated to BANK1 (124 bytes)
  1177   003318  EE01  F000         	lfsr	0,__pbssBANK1
  1178   00331C  0E7C               	movlw	124
  1179   00331E                     clear_1:
  1180   00331E  6AEE               	clrf	postinc0,c
  1181   003320  06E8               	decf	wreg,f,c
  1182   003322  E1FD               	bnz	clear_1
  1183                           
  1184                           ; Clear objects allocated to BANK0 (73 bytes)
  1185   003324  EE00  F0AA         	lfsr	0,__pbssBANK0
  1186   003328  0E49               	movlw	73
  1187   00332A                     clear_2:
  1188   00332A  6AEE               	clrf	postinc0,c
  1189   00332C  06E8               	decf	wreg,f,c
  1190   00332E  E1FD               	bnz	clear_2
  1191                           
  1192                           ; Clear objects allocated to COMRAM (2 bytes)
  1193   003330  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1194   003332  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  1195   003334                     end_of_initialization:
  1196                           	callstack 0
  1197   003334                     __end_of__initialization:
  1198                           	callstack 0
  1199   003334  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1200   003336  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1201   003338  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1202   00333A  6EF8               	movwf	tblptru,c
  1203   00333C  0100               	movlb	0
  1204   00333E  EFDD  F018         	goto	_main	;jump to C main() function
  1205                           
  1206                           	psect	bssCOMRAM
  1207   00005A                     __pbssCOMRAM:
  1208                           	callstack 0
  1209   00005A                     _result:
  1210                           	callstack 0
  1211   00005A                     	ds	2
  1212                           
  1213                           	psect	bssBANK0
  1214   0000AA                     __pbssBANK0:
  1215                           	callstack 0
  1216   0000AA                     modff@F522:
  1217                           	callstack 0
  1218   0000AA                     	ds	4
  1219   0000AE                     ___ungetbuf:
  1220                           	callstack 0
  1221   0000AE                     	ds	3
  1222   0000B1                     	ds	3
  1223   0000B4                     	ds	3
  1224   0000B7                     _nmatch:
  1225                           	callstack 0
  1226   0000B7                     	ds	2
  1227   0000B9                     _ncnv:
  1228                           	callstack 0
  1229   0000B9                     	ds	2
  1230   0000BB                     _width@doscan$F2253:
  1231                           	callstack 0
  1232   0000BB                     	ds	2
  1233   0000BD                     _errno:
  1234                           	callstack 0
  1235   0000BD                     	ds	2
  1236   0000BF                     _width:
  1237                           	callstack 0
  1238   0000BF                     	ds	2
  1239   0000C1                     _prec:
  1240                           	callstack 0
  1241   0000C1                     	ds	2
  1242   0000C3                     _air_intake_temp:
  1243                           	callstack 0
  1244   0000C3                     	ds	2
  1245   0000C5                     _A_air_intake:
  1246                           	callstack 0
  1247   0000C5                     	ds	2
  1248   0000C7                     _RPM:
  1249                           	callstack 0
  1250   0000C7                     	ds	2
  1251   0000C9                     _B_rpm:
  1252                           	callstack 0
  1253   0000C9                     	ds	2
  1254   0000CB                     _A_rpm:
  1255                           	callstack 0
  1256   0000CB                     	ds	2
  1257   0000CD                     ___ungetcnt:
  1258                           	callstack 0
  1259   0000CD                     	ds	1
  1260   0000CE                     _asup:
  1261                           	callstack 0
  1262   0000CE                     	ds	1
  1263   0000CF                     _flags:
  1264                           	callstack 0
  1265   0000CF                     	ds	1
  1266   0000D0                     _message_complete:
  1267                           	callstack 0
  1268   0000D0                     	ds	1
  1269   0000D1                     _RX_char:
  1270                           	callstack 0
  1271   0000D1                     	ds	1
  1272   0000D2                     _buffer_count:
  1273                           	callstack 0
  1274   0000D2                     	ds	1
  1275   0000D3                     _air_intake_string:
  1276                           	callstack 0
  1277   0000D3                     	ds	16
  1278   0000E3                     _rpm_string:
  1279                           	callstack 0
  1280   0000E3                     	ds	16
  1281                           
  1282                           	psect	dataBANK0
  1283   0000F3                     __pdataBANK0:
  1284                           	callstack 0
  1285   0000F3                     _menu_sel:
  1286                           	callstack 0
  1287   0000F3                     	ds	2
  1288   0000F5                     _LCD_entry_mode:
  1289                           	callstack 0
  1290   0000F5                     	ds	1
  1291   0000F6                     _LCD_display_control:
  1292                           	callstack 0
  1293   0000F6                     	ds	1
  1294                           
  1295                           	psect	bssBANK1
  1296   000100                     __pbssBANK1:
  1297                           	callstack 0
  1298   000100                     _dtc_codes:
  1299                           	callstack 0
  1300   000100                     	ds	60
  1301   00013C                     _dbuf@doscan$F2256:
  1302                           	callstack 0
  1303   00013C                     	ds	32
  1304   00015C                     _dbuf:
  1305                           	callstack 0
  1306   00015C                     	ds	32
  1307                           
  1308                           	psect	bssBANK2
  1309   000200                     __pbssBANK2:
  1310                           	callstack 0
  1311   000200                     _buffer:
  1312                           	callstack 0
  1313   000200                     	ds	256
  1314                           
  1315                           	psect	cstackBANK0
  1316   000060                     __pcstackBANK0:
  1317                           	callstack 0
  1318   000060                     atox@w:
  1319                           	callstack 0
  1320   000060                     print_RPM@clean_buffer:
  1321                           	callstack 0
  1322   000060                     print_AI_Temp@clean_buffer:
  1323                           	callstack 0
  1324                           
  1325                           ; 32 bytes @ 0x0
  1326   000060                     	ds	2
  1327   000062                     atox@ep:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x2
  1331   000062                     	ds	2
  1332   000064                     atox@seen_0x:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x4
  1336   000064                     	ds	2
  1337   000066                     atox@i:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x6
  1341   000066                     	ds	2
  1342   000068                     atox@c:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x8
  1346   000068                     	ds	2
  1347   00006A                     ?_vfsfcnvrt:
  1348                           	callstack 0
  1349   00006A                     vfsfcnvrt@fp:
  1350                           	callstack 0
  1351                           
  1352                           ; 1 bytes @ 0xA
  1353   00006A                     	ds	1
  1354   00006B                     vfsfcnvrt@fmt:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0xB
  1358   00006B                     	ds	1
  1359   00006C                     vfsfcnvrt@ap:
  1360                           	callstack 0
  1361                           
  1362                           ; 2 bytes @ 0xC
  1363   00006C                     	ds	2
  1364   00006E                     vfsfcnvrt@vp:
  1365                           	callstack 0
  1366                           
  1367                           ; 1 bytes @ 0xE
  1368   00006E                     	ds	1
  1369   00006F                     vfsfcnvrt@i:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0xF
  1373   00006F                     	ds	2
  1374   000071                     vfsfcnvrt@llu:
  1375                           	callstack 0
  1376                           
  1377                           ; 8 bytes @ 0x11
  1378   000071                     	ds	8
  1379   000079                     vfsfcnvrt@c:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x19
  1383   000079                     	ds	2
  1384   00007B                     ?_vfscanf:
  1385                           	callstack 0
  1386   00007B                     vfscanf@fp:
  1387                           	callstack 0
  1388                           
  1389                           ; 1 bytes @ 0x1B
  1390   00007B                     	ds	1
  1391   00007C                     vfscanf@fmt:
  1392                           	callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x1C
  1395   00007C                     	ds	2
  1396   00007E                     vfscanf@ap:
  1397                           	callstack 0
  1398                           
  1399                           ; 1 bytes @ 0x1E
  1400   00007E                     	ds	1
  1401   00007F                     vfscanf@saved_errno:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x1F
  1405   00007F                     	ds	1
  1406   000080                     print_RPM@j:
  1407                           	callstack 0
  1408   000080                     print_AI_Temp@j:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x20
  1412   000080                     	ds	1
  1413   000081                     print_RPM@rpm_ptr:
  1414                           	callstack 0
  1415   000081                     print_AI_Temp@ait_ptr:
  1416                           	callstack 0
  1417   000081                     vfscanf@n:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x21
  1421   000081                     	ds	2
  1422   000083                     print_RPM@i:
  1423                           	callstack 0
  1424   000083                     print_AI_Temp@i:
  1425                           	callstack 0
  1426   000083                     vfscanf@cfmt:
  1427                           	callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x23
  1430   000083                     	ds	2
  1431   000085                     ?_sscanf:
  1432                           	callstack 0
  1433   000085                     sscanf@s:
  1434                           	callstack 0
  1435                           
  1436                           ; 1 bytes @ 0x25
  1437   000085                     	ds	1
  1438   000086                     sscanf@fmt:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x26
  1442   000086                     	ds	4
  1443   00008A                     sscanf@ap:
  1444                           	callstack 0
  1445                           
  1446                           ; 1 bytes @ 0x2A
  1447   00008A                     	ds	1
  1448   00008B                     sscanf@f:
  1449                           	callstack 0
  1450                           
  1451                           ; 11 bytes @ 0x2B
  1452   00008B                     	ds	11
  1453   000096                     ??_diagnostic_trouble_codes:
  1454                           
  1455                           ; 1 bytes @ 0x36
  1456   000096                     	ds	2
  1457   000098                     diagnostic_trouble_codes@byte1_str:
  1458                           	callstack 0
  1459                           
  1460                           ; 3 bytes @ 0x38
  1461   000098                     	ds	3
  1462   00009B                     diagnostic_trouble_codes@byte2_str:
  1463                           	callstack 0
  1464                           
  1465                           ; 3 bytes @ 0x3B
  1466   00009B                     	ds	3
  1467   00009E                     diagnostic_trouble_codes@byte1:
  1468                           	callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x3E
  1471   00009E                     	ds	2
  1472   0000A0                     diagnostic_trouble_codes@byte2:
  1473                           	callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x40
  1476   0000A0                     	ds	2
  1477   0000A2                     diagnostic_trouble_codes@dtc_index:
  1478                           	callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x42
  1481   0000A2                     	ds	2
  1482   0000A4                     diagnostic_trouble_codes@i:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x44
  1486   0000A4                     	ds	2
  1487   0000A6                     ??_main_menu:
  1488                           
  1489                           ; 1 bytes @ 0x46
  1490   0000A6                     	ds	2
  1491   0000A8                     ??_main:
  1492                           
  1493                           ; 1 bytes @ 0x48
  1494   0000A8                     	ds	2
  1495                           
  1496                           	psect	cstackCOMRAM
  1497   000001                     __pcstackCOMRAM:
  1498                           	callstack 0
  1499   000001                     ??_UART_ISR:
  1500                           
  1501                           ; 1 bytes @ 0x0
  1502   000001                     	ds	2
  1503   000003                     ?_strlen:
  1504                           	callstack 0
  1505   000003                     ?_strchr:
  1506                           	callstack 0
  1507   000003                     ?_getch:
  1508                           	callstack 0
  1509   000003                     ?_strncmp:
  1510                           	callstack 0
  1511   000003                     ?_readADC:
  1512                           	callstack 0
  1513   000003                     ?___lwdiv:
  1514                           	callstack 0
  1515   000003                     ?___lwmod:
  1516                           	callstack 0
  1517   000003                     ?_read_prec_or_width:
  1518                           	callstack 0
  1519   000003                     ?___lmul:
  1520                           	callstack 0
  1521   000003                     ?___aldiv:
  1522                           	callstack 0
  1523   000003                     ?___almod:
  1524                           	callstack 0
  1525   000003                     ?___omul:
  1526                           	callstack 0
  1527   000003                     UART1_SendChar@c:
  1528                           	callstack 0
  1529   000003                     hex_char_to_value@c:
  1530                           	callstack 0
  1531   000003                     read_prec_or_width@fmt:
  1532                           	callstack 0
  1533   000003                     ___lwdiv@dividend:
  1534                           	callstack 0
  1535   000003                     ___lwmod@dividend:
  1536                           	callstack 0
  1537   000003                     fputc@c:
  1538                           	callstack 0
  1539   000003                     ungetc@c:
  1540                           	callstack 0
  1541   000003                     strchr@s:
  1542                           	callstack 0
  1543   000003                     strlen@s:
  1544                           	callstack 0
  1545   000003                     strncmp@l:
  1546                           	callstack 0
  1547   000003                     ___lmul@multiplier:
  1548                           	callstack 0
  1549   000003                     ___aldiv@dividend:
  1550                           	callstack 0
  1551   000003                     ___almod@dividend:
  1552                           	callstack 0
  1553   000003                     ___omul@multiplier:
  1554                           	callstack 0
  1555   000003                     ??_LCD_write_command:
  1556   000003                     ??_LCD_write_data:
  1557                           
  1558                           ; 1 bytes @ 0x2
  1559   000003                     	ds	1
  1560   000004                     read_prec_or_width@ap:
  1561                           	callstack 0
  1562   000004                     UART1_SendString@string:
  1563                           	callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x3
  1566   000004                     	ds	1
  1567   000005                     ?_fgetc:
  1568                           	callstack 0
  1569   000005                     LCD_write_command@command:
  1570                           	callstack 0
  1571   000005                     LCD_write_data@data:
  1572                           	callstack 0
  1573   000005                     fputc@fp:
  1574                           	callstack 0
  1575   000005                     fgetc@fp:
  1576                           	callstack 0
  1577   000005                     ungetc@fp:
  1578                           	callstack 0
  1579   000005                     ___lwdiv@divisor:
  1580                           	callstack 0
  1581   000005                     ___lwmod@divisor:
  1582                           	callstack 0
  1583   000005                     strchr@c:
  1584                           	callstack 0
  1585   000005                     strlen@a:
  1586                           	callstack 0
  1587   000005                     strncmp@r:
  1588                           	callstack 0
  1589   000005                     ??_readADC:
  1590   000005                     ??_read_prec_or_width:
  1591                           
  1592                           ; 1 bytes @ 0x4
  1593   000005                     	ds	1
  1594   000006                     LCD_cursor_set@column:
  1595                           	callstack 0
  1596   000006                     LCD_configure_cursor_blink@state:
  1597                           	callstack 0
  1598   000006                     LCD_write_string@string:
  1599                           	callstack 0
  1600   000006                     ??_LCD_clear:
  1601   000006                     ??_UART1_SendString:
  1602   000006                     ??_fputc:
  1603   000006                     ??_ungetc:
  1604                           
  1605                           ; 1 bytes @ 0x5
  1606   000006                     	ds	1
  1607   000007                     LCD_cursor_set@row:
  1608                           	callstack 0
  1609   000007                     ___lwmod@counter:
  1610                           	callstack 0
  1611   000007                     read_prec_or_width@c:
  1612                           	callstack 0
  1613   000007                     ___lwdiv@quotient:
  1614                           	callstack 0
  1615   000007                     strncmp@n:
  1616                           	callstack 0
  1617   000007                     ___lmul@multiplicand:
  1618                           	callstack 0
  1619   000007                     ___aldiv@divisor:
  1620                           	callstack 0
  1621   000007                     ___almod@divisor:
  1622                           	callstack 0
  1623   000007                     ??_LCD_init:
  1624   000007                     ??_fgetc:
  1625   000007                     
  1626                           ; 1 bytes @ 0x6
  1627   000007                     	ds	1
  1628   000008                     UART1_SendString@i:
  1629                           	callstack 0
  1630   000008                     read_prec_or_width@n:
  1631                           	callstack 0
  1632   000008                     ??_LCD_write_string:
  1633                           
  1634                           ; 1 bytes @ 0x7
  1635   000008                     	ds	1
  1636   000009                     ___lwdiv@counter:
  1637                           	callstack 0
  1638   000009                     ??_strncmp:
  1639                           
  1640                           ; 1 bytes @ 0x8
  1641   000009                     	ds	1
  1642   00000A                     ?_strstr:
  1643                           	callstack 0
  1644   00000A                     LCD_write_string@i:
  1645                           	callstack 0
  1646   00000A                     strstr@h:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x9
  1650   00000A                     	ds	1
  1651   00000B                     ___aldiv@counter:
  1652                           	callstack 0
  1653   00000B                     ___almod@counter:
  1654                           	callstack 0
  1655   00000B                     ctoa@fp:
  1656                           	callstack 0
  1657   00000B                     fputs@s:
  1658                           	callstack 0
  1659   00000B                     ___lmul@product:
  1660                           	callstack 0
  1661   00000B                     ___omul@multiplicand:
  1662                           	callstack 0
  1663   00000B                     ??_clear_diagnostic_codes:
  1664   00000B                     ??_print_Vbatt:
  1665   00000B                     ??_print_ELMVer:
  1666   00000B                     ??_print_SAEVer:
  1667   00000B                     
  1668                           ; 1 bytes @ 0xA
  1669   00000B                     	ds	1
  1670   00000C                     ___aldiv@sign:
  1671                           	callstack 0
  1672   00000C                     ___almod@sign:
  1673                           	callstack 0
  1674   00000C                     ctoa@c:
  1675                           	callstack 0
  1676   00000C                     fgetc@c:
  1677                           	callstack 0
  1678   00000C                     strstr@n:
  1679                           	callstack 0
  1680   00000C                     
  1681                           ; 1 bytes @ 0xB
  1682   00000C                     	ds	1
  1683   00000D                     fputs@fp:
  1684                           	callstack 0
  1685   00000D                     clear_diagnostic_codes@opt_sel:
  1686                           	callstack 0
  1687   00000D                     ___aldiv@quotient:
  1688                           	callstack 0
  1689   00000D                     ??_ctoa:
  1690                           
  1691                           ; 1 bytes @ 0xC
  1692   00000D                     	ds	1
  1693   00000E                     fputs@c:
  1694                           	callstack 0
  1695   00000E                     skipws@fp:
  1696                           	callstack 0
  1697   00000E                     ctoa@l:
  1698                           	callstack 0
  1699   00000E                     strstr@nl:
  1700                           	callstack 0
  1701   00000E                     
  1702                           ; 1 bytes @ 0xD
  1703   00000E                     	ds	1
  1704   00000F                     fputs@i:
  1705                           	callstack 0
  1706   00000F                     ??_skipws:
  1707                           
  1708                           ; 1 bytes @ 0xE
  1709   00000F                     	ds	1
  1710   000010                     ctoa@w:
  1711                           	callstack 0
  1712   000010                     skipws@c:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0xF
  1716   000010                     	ds	1
  1717   000011                     pad@fp:
  1718                           	callstack 0
  1719   000011                     LCD_write_variable@variable:
  1720                           	callstack 0
  1721                           
  1722                           ; 4 bytes @ 0x10
  1723   000011                     	ds	1
  1724   000012                     pad@buf:
  1725                           	callstack 0
  1726                           
  1727                           ; 2 bytes @ 0x11
  1728   000012                     	ds	1
  1729   000013                     ___omul@product:
  1730                           	callstack 0
  1731   000013                     
  1732                           ; 1 bytes @ 0x12
  1733   000013                     	ds	1
  1734   000014                     pad@p:
  1735                           	callstack 0
  1736                           
  1737                           ; 2 bytes @ 0x13
  1738   000014                     	ds	1
  1739   000015                     LCD_write_variable@left_offset:
  1740                           	callstack 0
  1741                           
  1742                           ; 1 bytes @ 0x14
  1743   000015                     	ds	1
  1744   000016                     LCD_write_variable@i:
  1745                           	callstack 0
  1746   000016                     ??_pad:
  1747                           
  1748                           ; 1 bytes @ 0x15
  1749   000016                     	ds	1
  1750   000017                     LCD_write_variable@digits:
  1751                           	callstack 0
  1752   000017                     pad@i:
  1753                           	callstack 0
  1754                           
  1755                           ; 2 bytes @ 0x16
  1756   000017                     	ds	1
  1757   000018                     LCD_write_variable@temp_variable:
  1758                           	callstack 0
  1759                           
  1760                           ; 4 bytes @ 0x17
  1761   000018                     	ds	1
  1762   000019                     utoa@fp:
  1763                           	callstack 0
  1764   000019                     xtoa@fp:
  1765                           	callstack 0
  1766                           
  1767                           ; 1 bytes @ 0x18
  1768   000019                     	ds	1
  1769   00001A                     utoa@d:
  1770                           	callstack 0
  1771   00001A                     xtoa@d:
  1772                           	callstack 0
  1773                           
  1774                           ; 2 bytes @ 0x19
  1775   00001A                     	ds	1
  1776   00001B                     ?___strtoxll:
  1777                           	callstack 0
  1778   00001B                     ___strtoxll@s:
  1779                           	callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x1A
  1782   00001B                     	ds	1
  1783   00001C                     utoa@p:
  1784                           	callstack 0
  1785   00001C                     ??_welcome_splash:
  1786   00001C                     ??_xtoa:
  1787                           
  1788                           ; 1 bytes @ 0x1B
  1789   00001C                     	ds	1
  1790   00001D                     ___strtoxll@endptr:
  1791                           	callstack 0
  1792   00001D                     utoa@w:
  1793                           	callstack 0
  1794                           
  1795                           ; 2 bytes @ 0x1C
  1796   00001D                     	ds	1
  1797   00001E                     welcome_splash@plug_flag:
  1798                           	callstack 0
  1799   00001E                     ___strtoxll@base:
  1800                           	callstack 0
  1801                           
  1802                           ; 2 bytes @ 0x1D
  1803   00001E                     	ds	1
  1804   00001F                     xtoa@p:
  1805                           	callstack 0
  1806   00001F                     utoa@i:
  1807                           	callstack 0
  1808                           
  1809                           ; 2 bytes @ 0x1E
  1810   00001F                     	ds	1
  1811   000020                     ___strtoxll@is_signed:
  1812                           	callstack 0
  1813   000020                     welcome_splash@CCP1IF_counter:
  1814                           	callstack 0
  1815   000020                     xtoa@w:
  1816                           	callstack 0
  1817                           
  1818                           ; 2 bytes @ 0x1F
  1819   000020                     	ds	2
  1820   000022                     xtoa@c:
  1821                           	callstack 0
  1822                           
  1823                           ; 1 bytes @ 0x21
  1824   000022                     	ds	1
  1825   000023                     xtoa@i:
  1826                           	callstack 0
  1827   000023                     ??___strtoxll:
  1828                           
  1829                           ; 1 bytes @ 0x22
  1830   000023                     	ds	2
  1831   000025                     vfpfcnvrt@fp:
  1832                           	callstack 0
  1833                           
  1834                           ; 1 bytes @ 0x24
  1835   000025                     	ds	1
  1836   000026                     vfpfcnvrt@fmt:
  1837                           	callstack 0
  1838                           
  1839                           ; 1 bytes @ 0x25
  1840   000026                     	ds	1
  1841   000027                     vfpfcnvrt@ap:
  1842                           	callstack 0
  1843                           
  1844                           ; 1 bytes @ 0x26
  1845   000027                     	ds	1
  1846   000028                     ??_vfpfcnvrt:
  1847                           
  1848                           ; 1 bytes @ 0x27
  1849   000028                     	ds	2
  1850   00002A                     vfpfcnvrt@c:
  1851                           	callstack 0
  1852                           
  1853                           ; 1 bytes @ 0x29
  1854   00002A                     	ds	1
  1855   00002B                     vfpfcnvrt@done:
  1856                           	callstack 0
  1857   00002B                     ___strtoxll@prev_a:
  1858                           	callstack 0
  1859                           
  1860                           ; 8 bytes @ 0x2A
  1861   00002B                     	ds	1
  1862   00002C                     vfpfcnvrt@convarg:
  1863                           	callstack 0
  1864                           
  1865                           ; 4 bytes @ 0x2B
  1866   00002C                     	ds	4
  1867   000030                     vfpfcnvrt@cp:
  1868                           	callstack 0
  1869                           
  1870                           ; 2 bytes @ 0x2F
  1871   000030                     	ds	2
  1872   000032                     ?_vfprintf:
  1873                           	callstack 0
  1874   000032                     vfprintf@fp:
  1875                           	callstack 0
  1876                           
  1877                           ; 1 bytes @ 0x31
  1878   000032                     	ds	1
  1879   000033                     vfprintf@fmt:
  1880                           	callstack 0
  1881   000033                     ___strtoxll$2306:
  1882                           	callstack 0
  1883                           
  1884                           ; 2 bytes @ 0x32
  1885   000033                     	ds	2
  1886   000035                     vfprintf@ap:
  1887                           	callstack 0
  1888   000035                     ___strtoxll$2307:
  1889                           	callstack 0
  1890                           
  1891                           ; 2 bytes @ 0x34
  1892   000035                     	ds	1
  1893   000036                     vfprintf@cfmt:
  1894                           	callstack 0
  1895   000036                     
  1896                           ; 1 bytes @ 0x35
  1897   000036                     	ds	1
  1898   000037                     ___strtoxll@limit:
  1899                           	callstack 0
  1900                           
  1901                           ; 8 bytes @ 0x36
  1902   000037                     	ds	1
  1903   000038                     ?_sprintf:
  1904                           	callstack 0
  1905   000038                     sprintf@s:
  1906                           	callstack 0
  1907                           
  1908                           ; 2 bytes @ 0x37
  1909   000038                     	ds	2
  1910   00003A                     sprintf@fmt:
  1911                           	callstack 0
  1912                           
  1913                           ; 2 bytes @ 0x39
  1914   00003A                     	ds	5
  1915   00003F                     ___strtoxll@flags:
  1916                           	callstack 0
  1917                           
  1918                           ; 1 bytes @ 0x3E
  1919   00003F                     	ds	1
  1920   000040                     ___strtoxll@a:
  1921                           	callstack 0
  1922                           
  1923                           ; 8 bytes @ 0x3F
  1924   000040                     	ds	2
  1925   000042                     sprintf@ap:
  1926                           	callstack 0
  1927   000042                     
  1928                           ; 1 bytes @ 0x41
  1929   000042                     	ds	1
  1930   000043                     sprintf@f:
  1931                           	callstack 0
  1932                           
  1933                           ; 11 bytes @ 0x42
  1934   000043                     	ds	5
  1935   000048                     ___strtoxll@cp:
  1936                           	callstack 0
  1937                           
  1938                           ; 2 bytes @ 0x47
  1939   000048                     	ds	2
  1940   00004A                     ___strtoxll@c:
  1941                           	callstack 0
  1942                           
  1943                           ; 1 bytes @ 0x49
  1944   00004A                     	ds	1
  1945   00004B                     ?_atox:
  1946                           	callstack 0
  1947   00004B                     atox@fp:
  1948                           	callstack 0
  1949                           
  1950                           ; 1 bytes @ 0x4A
  1951   00004B                     	ds	1
  1952   00004C                     atox@pll:
  1953                           	callstack 0
  1954                           
  1955                           ; 1 bytes @ 0x4B
  1956   00004C                     	ds	1
  1957   00004D                     ??_atox:
  1958                           
  1959                           ; 1 bytes @ 0x4C
  1960   00004D                     	ds	1
  1961   00004E                     decode_dtc@b1:
  1962                           	callstack 0
  1963   00004E                     ??_print_RPM:
  1964   00004E                     ??_print_AI_Temp:
  1965                           
  1966                           ; 1 bytes @ 0x4D
  1967   00004E                     	ds	2
  1968   000050                     decode_dtc@b2:
  1969                           	callstack 0
  1970                           
  1971                           ; 2 bytes @ 0x4F
  1972   000050                     	ds	1
  1973   000051                     
  1974                           ; 1 bytes @ 0x50
  1975   000051                     	ds	1
  1976   000052                     decode_dtc@dtc:
  1977                           	callstack 0
  1978                           
  1979                           ; 2 bytes @ 0x51
  1980   000052                     	ds	2
  1981   000054                     ??_decode_dtc:
  1982                           
  1983                           ; 1 bytes @ 0x53
  1984   000054                     	ds	1
  1985   000055                     ??_vfsfcnvrt:
  1986                           
  1987                           ; 1 bytes @ 0x54
  1988   000055                     	ds	2
  1989   000057                     
  1990                           ; 1 bytes @ 0x56
  1991   000057                     	ds	2
  1992   000059                     decode_dtc@type:
  1993                           	callstack 0
  1994                           
  1995                           ; 1 bytes @ 0x58
  1996   000059                     	ds	1
  1997                           
  1998 ;;
  1999 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2000 ;;
  2001 ;; *************** function _main *****************
  2002 ;; Defined at:
  2003 ;;		line 72 in file "OBCII_PIC18F46K22.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;Total ram usage:        2 bytes
  2022 ;; Hardware stack levels required when called: 12
  2023 ;; This function calls:
  2024 ;;		_ADC_init
  2025 ;;		_LCD_clear
  2026 ;;		_LCD_init
  2027 ;;		_UART1_Init
  2028 ;;		_UART1_SendString
  2029 ;;		_input_init
  2030 ;;		_main_menu
  2031 ;;		_welcome_splash
  2032 ;; This function is called by:
  2033 ;;		Startup code after reset
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text0
  2038   0031BA                     __ptext0:
  2039                           	callstack 0
  2040   0031BA                     _main:
  2041                           	callstack 19
  2042   0031BA                     
  2043                           ;OBCII_PIC18F46K22.c: 75:     OSCCON = 0b01110000;
  2044   0031BA  0E70               	movlw	112
  2045   0031BC  6ED3               	movwf	211,c	;volatile
  2046   0031BE                     
  2047                           ;OBCII_PIC18F46K22.c: 79:     LCD_init();
  2048   0031BE  EC7D  F017         	call	_LCD_init	;wreg free
  2049   0031C2                     
  2050                           ;OBCII_PIC18F46K22.c: 80:     LCD_clear();
  2051   0031C2  EC0A  F01B         	call	_LCD_clear	;wreg free
  2052   0031C6                     
  2053                           ;OBCII_PIC18F46K22.c: 81:     input_init();
  2054   0031C6  EC4D  F01B         	call	_input_init	;wreg free
  2055                           
  2056                           ;OBCII_PIC18F46K22.c: 82:     ADC_init();
  2057   0031CA  EC62  F01B         	call	_ADC_init	;wreg free
  2058                           
  2059                           ;OBCII_PIC18F46K22.c: 83:     UART1_Init();
  2060   0031CE  ECE1  F01A         	call	_UART1_Init	;wreg free
  2061   0031D2                     
  2062                           ;OBCII_PIC18F46K22.c: 85:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  2063   0031D2  0E29               	movlw	41
  2064   0031D4  0100               	movlb	0	; () banked
  2065   0031D6  6FA9               	movwf	(??_main+1)& (0+255),b
  2066   0031D8  0E96               	movlw	150
  2067   0031DA  6FA8               	movwf	??_main& (0+255),b
  2068   0031DC  0E7F               	movlw	127
  2069   0031DE                     u7037:
  2070   0031DE  2EE8               	decfsz	wreg,f,c
  2071   0031E0  D7FE               	bra	u7037
  2072   0031E2  2FA8               	decfsz	??_main& (0+255),f,b
  2073   0031E4  D7FC               	bra	u7037
  2074   0031E6  2FA9               	decfsz	(??_main+1)& (0+255),f,b
  2075   0031E8  D7FA               	bra	u7037
  2076   0031EA                     
  2077                           ;OBCII_PIC18F46K22.c: 86:     UART1_SendString("ATE0\r");
  2078   0031EA  0E9E               	movlw	low STR_1
  2079   0031EC  6E04               	movwf	UART1_SendString@string^0,c
  2080   0031EE  0EFF               	movlw	high STR_1
  2081   0031F0  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2082   0031F2  ECA1  F019         	call	_UART1_SendString	;wreg free
  2083   0031F6                     
  2084                           ;OBCII_PIC18F46K22.c: 87:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2085   0031F6  0E02               	movlw	2
  2086   0031F8  0100               	movlb	0	; () banked
  2087   0031FA  6FA9               	movwf	(??_main+1)& (0+255),b
  2088   0031FC  0E04               	movlw	4
  2089   0031FE  6FA8               	movwf	??_main& (0+255),b
  2090   003200  0EBA               	movlw	186
  2091   003202                     u7047:
  2092   003202  2EE8               	decfsz	wreg,f,c
  2093   003204  D7FE               	bra	u7047
  2094   003206  2FA8               	decfsz	??_main& (0+255),f,b
  2095   003208  D7FC               	bra	u7047
  2096   00320A  2FA9               	decfsz	(??_main+1)& (0+255),f,b
  2097   00320C  D7FA               	bra	u7047
  2098   00320E  0000               	nop	
  2099   003210                     l6014:
  2100                           
  2101                           ;OBCII_PIC18F46K22.c: 90:                 welcome_splash();
  2102   003210  ECD6  F00D         	call	_welcome_splash	;wreg free
  2103   003214                     
  2104                           ;OBCII_PIC18F46K22.c: 91:                 main_menu();
  2105   003214  ECB1  F00A         	call	_main_menu	;wreg free
  2106   003218  EF08  F019         	goto	l6014
  2107   00321C  EF6E  F000         	goto	start
  2108   003220                     __end_of_main:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _welcome_splash *****************
  2112 ;; Defined at:
  2113 ;;		line 217 in file "OBCII_PIC18F46K22.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  CCP1IF_count    2   31[COMRAM] volatile unsigned int 
  2118 ;;  plug_flag       2   29[COMRAM] volatile int 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;Total ram usage:        6 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 4
  2135 ;; This function calls:
  2136 ;;		_LCD_clear
  2137 ;;		_LCD_cursor_set
  2138 ;;		_LCD_write_string
  2139 ;;		_LCD_write_variable
  2140 ;;		_UART1_SendString
  2141 ;;		___lwdiv
  2142 ;;		___lwmod
  2143 ;;		_ccp1_init
  2144 ;;		_tmr1_init
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text1
  2151   001BAC                     __ptext1:
  2152                           	callstack 0
  2153   001BAC                     _welcome_splash:
  2154                           	callstack 26
  2155   001BAC                     
  2156                           ;OBCII_PIC18F46K22.c: 218:     volatile int plug_flag = 0;
  2157   001BAC  0E00               	movlw	0
  2158   001BAE  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2159   001BB0  0E00               	movlw	0
  2160   001BB2  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2161                           
  2162                           ;OBCII_PIC18F46K22.c: 219:     volatile unsigned int CCP1IF_counter = 0;
  2163   001BB4  0E00               	movlw	0
  2164   001BB6  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2165   001BB8  0E00               	movlw	0
  2166   001BBA  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2167   001BBC                     
  2168                           ;OBCII_PIC18F46K22.c: 222:     LCD_clear();
  2169   001BBC  EC0A  F01B         	call	_LCD_clear	;wreg free
  2170   001BC0                     
  2171                           ;OBCII_PIC18F46K22.c: 223:     LCD_cursor_set(1, 1);
  2172   001BC0  0E01               	movlw	1
  2173   001BC2  6E06               	movwf	LCD_cursor_set@column^0,c
  2174   001BC4  0E01               	movlw	1
  2175   001BC6  EC42  F019         	call	_LCD_cursor_set
  2176   001BCA                     
  2177                           ;OBCII_PIC18F46K22.c: 224:     LCD_write_string(">>> OBDIIPIC <<<");
  2178   001BCA  0EA2               	movlw	low STR_2
  2179   001BCC  6E06               	movwf	LCD_write_string@string^0,c
  2180   001BCE  0EFE               	movlw	high STR_2
  2181   001BD0  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2182   001BD2  ECFC  F017         	call	_LCD_write_string	;wreg free
  2183   001BD6                     
  2184                           ;OBCII_PIC18F46K22.c: 225:     LCD_cursor_set(2, 1);
  2185   001BD6  0E01               	movlw	1
  2186   001BD8  6E06               	movwf	LCD_cursor_set@column^0,c
  2187   001BDA  0E02               	movlw	2
  2188   001BDC  EC42  F019         	call	_LCD_cursor_set
  2189   001BE0                     
  2190                           ;OBCII_PIC18F46K22.c: 226:     LCD_write_string(">>>> V1.0 <<<<");
  2191   001BE0  0E27               	movlw	low STR_3
  2192   001BE2  6E06               	movwf	LCD_write_string@string^0,c
  2193   001BE4  0EFF               	movlw	high STR_3
  2194   001BE6  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2195   001BE8  ECFC  F017         	call	_LCD_write_string	;wreg free
  2196   001BEC                     
  2197                           ;OBCII_PIC18F46K22.c: 228:     UART1_SendString("ATL0\r");
  2198   001BEC  0EA4               	movlw	low STR_4
  2199   001BEE  6E04               	movwf	UART1_SendString@string^0,c
  2200   001BF0  0EFF               	movlw	high STR_4
  2201   001BF2  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2202   001BF4  ECA1  F019         	call	_UART1_SendString	;wreg free
  2203   001BF8                     
  2204                           ;OBCII_PIC18F46K22.c: 230:     ccp1_init();
  2205   001BF8  EC3C  F01B         	call	_ccp1_init	;wreg free
  2206   001BFC                     
  2207                           ;OBCII_PIC18F46K22.c: 231:     tmr1_init();
  2208   001BFC  EC45  F01B         	call	_tmr1_init	;wreg free
  2209   001C00                     
  2210                           ;OBCII_PIC18F46K22.c: 233:     CCP1IF_counter = 0;
  2211   001C00  0E00               	movlw	0
  2212   001C02  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2213   001C04  0E00               	movlw	0
  2214   001C06  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2215   001C08                     
  2216                           ;OBCII_PIC18F46K22.c: 234:     plug_flag = 0;
  2217   001C08  0E00               	movlw	0
  2218   001C0A  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2219   001C0C  0E00               	movlw	0
  2220   001C0E  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2221   001C10                     l4990:
  2222                           
  2223                           ;OBCII_PIC18F46K22.c: 237:         if (PIR1bits.CCP1IF) {
  2224   001C10  A49E               	btfss	158,2,c	;volatile
  2225   001C12  EF0D  F00E         	goto	u5361
  2226   001C16  EF0F  F00E         	goto	u5360
  2227   001C1A                     u5361:
  2228   001C1A  EF45  F00E         	goto	l5004
  2229   001C1E                     u5360:
  2230   001C1E                     
  2231                           ;OBCII_PIC18F46K22.c: 238:             PIR1bits.CCP1IF = 0;
  2232   001C1E  949E               	bcf	158,2,c	;volatile
  2233                           
  2234                           ;OBCII_PIC18F46K22.c: 239:             T1CONbits.TMR1ON = 1;
  2235   001C20  80CD               	bsf	205,0,c	;volatile
  2236   001C22                     
  2237                           ;OBCII_PIC18F46K22.c: 240:             CCP1IF_counter++;
  2238   001C22  4A20               	infsnz	welcome_splash@CCP1IF_counter^0,f,c	;volatile
  2239   001C24  2A21               	incf	(welcome_splash@CCP1IF_counter+1)^0,f,c	;volatile
  2240   001C26                     
  2241                           ;OBCII_PIC18F46K22.c: 242:             LCD_cursor_set(2, 16);
  2242   001C26  0E10               	movlw	16
  2243   001C28  6E06               	movwf	LCD_cursor_set@column^0,c
  2244   001C2A  0E02               	movlw	2
  2245   001C2C  EC42  F019         	call	_LCD_cursor_set
  2246   001C30                     
  2247                           ;OBCII_PIC18F46K22.c: 243:             LCD_write_variable((CCP1IF_counter) / 10, 1);
  2248   001C30  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwdiv@dividend	;volatile
  2249   001C34  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwdiv@dividend+1	;volatile
  2250   001C38  0E00               	movlw	0
  2251   001C3A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  2252   001C3C  0E0A               	movlw	10
  2253   001C3E  6E05               	movwf	___lwdiv@divisor^0,c
  2254   001C40  EC39  F018         	call	___lwdiv	;wreg free
  2255   001C44  C003  F011         	movff	?___lwdiv,LCD_write_variable@variable
  2256   001C48  C004  F012         	movff	?___lwdiv+1,LCD_write_variable@variable+1
  2257   001C4C  6A13               	clrf	(LCD_write_variable@variable+2)^0,c
  2258   001C4E  6A14               	clrf	(LCD_write_variable@variable+3)^0,c
  2259   001C50  0E01               	movlw	1
  2260   001C52  6E15               	movwf	LCD_write_variable@left_offset^0,c
  2261   001C54  ECC4  F00E         	call	_LCD_write_variable	;wreg free
  2262   001C58                     
  2263                           ;OBCII_PIC18F46K22.c: 246:             if (CCP1IF_counter % 10 == 0) {
  2264   001C58  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwmod@dividend	;volatile
  2265   001C5C  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwmod@dividend+1	;volatile
  2266   001C60  0E00               	movlw	0
  2267   001C62  6E06               	movwf	(___lwmod@divisor+1)^0,c
  2268   001C64  0E0A               	movlw	10
  2269   001C66  6E05               	movwf	___lwmod@divisor^0,c
  2270   001C68  EC10  F019         	call	___lwmod	;wreg free
  2271   001C6C  5003               	movf	?___lwmod^0,w,c
  2272   001C6E  1004               	iorwf	(?___lwmod+1)^0,w,c
  2273   001C70  A4D8               	btfss	status,2,c
  2274   001C72  EF3D  F00E         	goto	u5371
  2275   001C76  EF3F  F00E         	goto	u5370
  2276   001C7A                     u5371:
  2277   001C7A  EF45  F00E         	goto	l5004
  2278   001C7E                     u5370:
  2279   001C7E                     
  2280                           ;OBCII_PIC18F46K22.c: 247:                 UART1_SendString("ATI\r");
  2281   001C7E  0EC8               	movlw	low STR_5
  2282   001C80  6E04               	movwf	UART1_SendString@string^0,c
  2283   001C82  0EFF               	movlw	high STR_5
  2284   001C84  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2285   001C86  ECA1  F019         	call	_UART1_SendString	;wreg free
  2286   001C8A                     l5004:
  2287                           
  2288                           ;OBCII_PIC18F46K22.c: 252:         if (message_complete) {
  2289   001C8A  0100               	movlb	0	; () banked
  2290   001C8C  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  2291   001C8E  B4D8               	btfsc	status,2,c
  2292   001C90  EF4C  F00E         	goto	u5381
  2293   001C94  EF4E  F00E         	goto	u5380
  2294   001C98                     u5381:
  2295   001C98  EF54  F00E         	goto	l5012
  2296   001C9C                     u5380:
  2297   001C9C                     
  2298                           ; BSR set to: 0
  2299                           ;OBCII_PIC18F46K22.c: 253:             plug_flag = 1;
  2300   001C9C  0E00               	movlw	0
  2301   001C9E  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2302   001CA0  0E01               	movlw	1
  2303   001CA2  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2304   001CA4                     
  2305                           ; BSR set to: 0
  2306                           ;OBCII_PIC18F46K22.c: 254:             buffer_count = 0;
  2307   001CA4  6BD2               	clrf	_buffer_count& (0+255),b
  2308   001CA6                     
  2309                           ; BSR set to: 0
  2310                           ;OBCII_PIC18F46K22.c: 255:             message_complete = 0;
  2311   001CA6  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  2312   001CA8                     l5012:
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;OBCII_PIC18F46K22.c: 259:         if (plug_flag) {
  2316   001CA8  501E               	movf	welcome_splash@plug_flag^0,w,c	;volatile
  2317   001CAA  101F               	iorwf	(welcome_splash@plug_flag+1)^0,w,c	;volatile
  2318   001CAC  B4D8               	btfsc	status,2,c
  2319   001CAE  EF5B  F00E         	goto	u5391
  2320   001CB2  EF5D  F00E         	goto	u5390
  2321   001CB6                     u5391:
  2322   001CB6  EF6A  F00E         	goto	l5018
  2323   001CBA                     u5390:
  2324   001CBA                     
  2325                           ; BSR set to: 0
  2326                           ;OBCII_PIC18F46K22.c: 260:             if (CCP1IF_counter >= 4 * 10) {
  2327   001CBA  5021               	movf	(welcome_splash@CCP1IF_counter+1)^0,w,c	;volatile
  2328   001CBC  E109               	bnz	u5400
  2329   001CBE  0E28               	movlw	40
  2330   001CC0  5C20               	subwf	welcome_splash@CCP1IF_counter^0,w,c	;volatile
  2331   001CC2  A0D8               	btfss	status,0,c
  2332   001CC4  EF66  F00E         	goto	u5401
  2333   001CC8  EF68  F00E         	goto	u5400
  2334   001CCC                     u5401:
  2335   001CCC  EF08  F00E         	goto	l4990
  2336   001CD0                     u5400:
  2337   001CD0  EF8D  F00E         	goto	l5028
  2338   001CD4                     l5018:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;OBCII_PIC18F46K22.c: 266:             CCP1IF_counter = 0;
  2342   001CD4  0E00               	movlw	0
  2343   001CD6  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2344   001CD8  0E00               	movlw	0
  2345   001CDA  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2346   001CDC                     
  2347                           ; BSR set to: 0
  2348                           ;OBCII_PIC18F46K22.c: 267:             LCD_cursor_set(2, 1);
  2349   001CDC  0E01               	movlw	1
  2350   001CDE  6E06               	movwf	LCD_cursor_set@column^0,c
  2351   001CE0  0E02               	movlw	2
  2352   001CE2  EC42  F019         	call	_LCD_cursor_set
  2353   001CE6                     
  2354                           ;OBCII_PIC18F46K22.c: 268:             LCD_write_string("OBDII Not Found ");
  2355   001CE6  0E91               	movlw	low STR_6
  2356   001CE8  6E06               	movwf	LCD_write_string@string^0,c
  2357   001CEA  0EFE               	movlw	high STR_6
  2358   001CEC  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2359   001CEE  ECFC  F017         	call	_LCD_write_string	;wreg free
  2360   001CF2                     
  2361                           ;OBCII_PIC18F46K22.c: 269:             UART1_SendString("ATI\r");
  2362   001CF2  0EC8               	movlw	low STR_5
  2363   001CF4  6E04               	movwf	UART1_SendString@string^0,c
  2364   001CF6  0EFF               	movlw	high STR_5
  2365   001CF8  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2366   001CFA  ECA1  F019         	call	_UART1_SendString	;wreg free
  2367   001CFE                     
  2368                           ;OBCII_PIC18F46K22.c: 270:             _delay((unsigned long)((50)*(16000000/4000.0)));
  2369   001CFE  0E02               	movlw	2
  2370   001D00  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2371   001D02  0E04               	movlw	4
  2372   001D04  6E1C               	movwf	??_welcome_splash^0,c
  2373   001D06  0EBA               	movlw	186
  2374   001D08                     u7057:
  2375   001D08  2EE8               	decfsz	wreg,f,c
  2376   001D0A  D7FE               	bra	u7057
  2377   001D0C  2E1C               	decfsz	??_welcome_splash^0,f,c
  2378   001D0E  D7FC               	bra	u7057
  2379   001D10  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2380   001D12  D7FA               	bra	u7057
  2381   001D14  D000               	nop2	
  2382   001D16  EF08  F00E         	goto	l4990
  2383   001D1A                     l5028:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;OBCII_PIC18F46K22.c: 275:     LCD_clear();
  2387   001D1A  EC0A  F01B         	call	_LCD_clear	;wreg free
  2388                           
  2389                           ;OBCII_PIC18F46K22.c: 276:     LCD_cursor_set(1, 1);
  2390   001D1E  0E01               	movlw	1
  2391   001D20  6E06               	movwf	LCD_cursor_set@column^0,c
  2392   001D22  0E01               	movlw	1
  2393   001D24  EC42  F019         	call	_LCD_cursor_set
  2394   001D28                     
  2395                           ;OBCII_PIC18F46K22.c: 277:     LCD_write_string("<OBDII Detected>");
  2396   001D28  0EE6               	movlw	low STR_8
  2397   001D2A  6E06               	movwf	LCD_write_string@string^0,c
  2398   001D2C  0EFE               	movlw	high STR_8
  2399   001D2E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2400   001D30  ECFC  F017         	call	_LCD_write_string	;wreg free
  2401   001D34                     
  2402                           ;OBCII_PIC18F46K22.c: 278:     LCD_cursor_set(2,1);
  2403   001D34  0E01               	movlw	1
  2404   001D36  6E06               	movwf	LCD_cursor_set@column^0,c
  2405   001D38  0E02               	movlw	2
  2406   001D3A  EC42  F019         	call	_LCD_cursor_set
  2407                           
  2408                           ;OBCII_PIC18F46K22.c: 279:     LCD_write_string("================");
  2409   001D3E  0EC4               	movlw	low STR_9
  2410   001D40  6E06               	movwf	LCD_write_string@string^0,c
  2411   001D42  0EFE               	movlw	high STR_9
  2412   001D44  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2413   001D46  ECFC  F017         	call	_LCD_write_string	;wreg free
  2414   001D4A                     
  2415                           ;OBCII_PIC18F46K22.c: 280:     _delay((unsigned long)((2 * 2000)*(16000000/4000.0)));
  2416   001D4A  0E52               	movlw	82
  2417   001D4C  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2418   001D4E  0E2B               	movlw	43
  2419   001D50  6E1C               	movwf	??_welcome_splash^0,c
  2420   001D52  0E00               	movlw	0
  2421   001D54                     u7067:
  2422   001D54  2EE8               	decfsz	wreg,f,c
  2423   001D56  D7FE               	bra	u7067
  2424   001D58  2E1C               	decfsz	??_welcome_splash^0,f,c
  2425   001D5A  D7FC               	bra	u7067
  2426   001D5C  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2427   001D5E  D7FA               	bra	u7067
  2428   001D60  D000               	nop2	
  2429   001D62                     
  2430                           ;OBCII_PIC18F46K22.c: 282:     UART1_SendString("ATE0\r");
  2431   001D62  0E9E               	movlw	low STR_1
  2432   001D64  6E04               	movwf	UART1_SendString@string^0,c
  2433   001D66  0EFF               	movlw	high STR_1
  2434   001D68  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2435   001D6A  ECA1  F019         	call	_UART1_SendString	;wreg free
  2436   001D6E                     
  2437                           ;OBCII_PIC18F46K22.c: 283:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2438   001D6E  0E02               	movlw	2
  2439   001D70  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2440   001D72  0E04               	movlw	4
  2441   001D74  6E1C               	movwf	??_welcome_splash^0,c
  2442   001D76  0EBA               	movlw	186
  2443   001D78                     u7077:
  2444   001D78  2EE8               	decfsz	wreg,f,c
  2445   001D7A  D7FE               	bra	u7077
  2446   001D7C  2E1C               	decfsz	??_welcome_splash^0,f,c
  2447   001D7E  D7FC               	bra	u7077
  2448   001D80  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2449   001D82  D7FA               	bra	u7077
  2450   001D84  D000               	nop2	
  2451   001D86  0012               	return		;funcret
  2452   001D88                     __end_of_welcome_splash:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _tmr1_init *****************
  2456 ;; Defined at:
  2457 ;;		line 206 in file "OBCII_PIC18F46K22.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		None
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_welcome_splash
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text2
  2486   00368A                     __ptext2:
  2487                           	callstack 0
  2488   00368A                     _tmr1_init:
  2489                           	callstack 28
  2490   00368A                     
  2491                           ;OBCII_PIC18F46K22.c: 208:     T1CONbits.T1CKPS1 = 1;
  2492   00368A  8ACD               	bsf	205,5,c	;volatile
  2493                           
  2494                           ;OBCII_PIC18F46K22.c: 209:     T1CONbits.T1CKPS0 = 1;
  2495   00368C  88CD               	bsf	205,4,c	;volatile
  2496                           
  2497                           ;OBCII_PIC18F46K22.c: 210:     T1CONbits.T1OSCEN = 0;
  2498   00368E  96CD               	bcf	205,3,c	;volatile
  2499                           
  2500                           ;OBCII_PIC18F46K22.c: 211:     T1CONbits.T1SYNC = 1;
  2501   003690  84CD               	bsf	205,2,c	;volatile
  2502                           
  2503                           ;OBCII_PIC18F46K22.c: 212:     T1CONbits.TMR1CS1 = 0;
  2504   003692  9ECD               	bcf	205,7,c	;volatile
  2505                           
  2506                           ;OBCII_PIC18F46K22.c: 213:     T1CONbits.TMR1CS0 = 0;
  2507   003694  9CCD               	bcf	205,6,c	;volatile
  2508                           
  2509                           ;OBCII_PIC18F46K22.c: 214:     T1CONbits.TMR1ON = 1;
  2510   003696  80CD               	bsf	205,0,c	;volatile
  2511   003698  0012               	return		;funcret
  2512   00369A                     __end_of_tmr1_init:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _ccp1_init *****************
  2516 ;; Defined at:
  2517 ;;		line 193 in file "OBCII_PIC18F46K22.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used: 1
  2537 ;; Hardware stack levels required when called: 1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_welcome_splash
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text3
  2546   003678                     __ptext3:
  2547                           	callstack 0
  2548   003678                     _ccp1_init:
  2549                           	callstack 28
  2550   003678                     
  2551                           ;OBCII_PIC18F46K22.c: 194:     CCP1CONbits.CCP1M3 = 1;
  2552   003678  86BD               	bsf	189,3,c	;volatile
  2553                           
  2554                           ;OBCII_PIC18F46K22.c: 195:     CCP1CONbits.CCP1M2 = 0;
  2555   00367A  94BD               	bcf	189,2,c	;volatile
  2556                           
  2557                           ;OBCII_PIC18F46K22.c: 196:     CCP1CONbits.CCP1M1 = 1;
  2558   00367C  82BD               	bsf	189,1,c	;volatile
  2559                           
  2560                           ;OBCII_PIC18F46K22.c: 197:     CCP1CONbits.CCP1M0 = 1;
  2561   00367E  80BD               	bsf	189,0,c	;volatile
  2562   003680                     
  2563                           ;OBCII_PIC18F46K22.c: 201:     CCPR1H = 195;
  2564   003680  0EC3               	movlw	195
  2565   003682  6EBF               	movwf	191,c	;volatile
  2566                           
  2567                           ;OBCII_PIC18F46K22.c: 202:     CCPR1L = 80;
  2568   003684  0E50               	movlw	80
  2569   003686  6EBE               	movwf	190,c	;volatile
  2570   003688  0012               	return		;funcret
  2571   00368A                     __end_of_ccp1_init:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _LCD_write_variable *****************
  2575 ;; Defined at:
  2576 ;;		line 392 in file "LCD.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  variable        4   16[COMRAM] long 
  2579 ;;  left_offset     1   20[COMRAM] unsigned char 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  i               1   21[COMRAM] unsigned char 
  2582 ;;  temp_variabl    4   23[COMRAM] long 
  2583 ;;  digits          1   22[COMRAM] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2593 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;Total ram usage:       11 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 3
  2600 ;; This function calls:
  2601 ;;		_LCD_write_data
  2602 ;;		___aldiv
  2603 ;;		___almod
  2604 ;;		___lmul
  2605 ;; This function is called by:
  2606 ;;		_welcome_splash
  2607 ;;		_LCD_write_float
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text4
  2612   001D88                     __ptext4:
  2613                           	callstack 0
  2614   001D88                     _LCD_write_variable:
  2615                           	callstack 26
  2616   001D88                     
  2617                           ;LCD.c: 394:     int32_t temp_variable;;LCD.c: 395:     uint8_t digits = 0;
  2618   001D88  6A17               	clrf	LCD_write_variable@digits^0,c
  2619   001D8A                     
  2620                           ;LCD.c: 398:     if(variable < 0) variable *= -1;
  2621   001D8A  BE14               	btfsc	(LCD_write_variable@variable+3)^0,7,c
  2622   001D8C  EFCC  F00E         	goto	u5100
  2623   001D90  EFCA  F00E         	goto	u5101
  2624   001D94                     u5101:
  2625   001D94  EFE6  F00E         	goto	l4712
  2626   001D98                     u5100:
  2627   001D98  C011  F003         	movff	LCD_write_variable@variable,___lmul@multiplier
  2628   001D9C  C012  F004         	movff	LCD_write_variable@variable+1,___lmul@multiplier+1
  2629   001DA0  C013  F005         	movff	LCD_write_variable@variable+2,___lmul@multiplier+2
  2630   001DA4  C014  F006         	movff	LCD_write_variable@variable+3,___lmul@multiplier+3
  2631   001DA8  0EFF               	movlw	255
  2632   001DAA  6E07               	movwf	___lmul@multiplicand^0,c
  2633   001DAC  0EFF               	movlw	255
  2634   001DAE  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  2635   001DB0  0EFF               	movlw	255
  2636   001DB2  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  2637   001DB4  0EFF               	movlw	255
  2638   001DB6  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  2639   001DB8  EC73  F018         	call	___lmul	;wreg free
  2640   001DBC  C003  F011         	movff	?___lmul,LCD_write_variable@variable
  2641   001DC0  C004  F012         	movff	?___lmul+1,LCD_write_variable@variable+1
  2642   001DC4  C005  F013         	movff	?___lmul+2,LCD_write_variable@variable+2
  2643   001DC8  C006  F014         	movff	?___lmul+3,LCD_write_variable@variable+3
  2644   001DCC                     l4712:
  2645                           
  2646                           ;LCD.c: 401:     temp_variable = variable;
  2647   001DCC  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2648   001DD0  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2649   001DD4  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2650   001DD8  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2651   001DDC                     l4714:
  2652                           
  2653                           ;LCD.c: 403:         digits++;
  2654   001DDC  2A17               	incf	LCD_write_variable@digits^0,f,c
  2655   001DDE                     
  2656                           ;LCD.c: 404:         if(temp_variable < 10) break;
  2657   001DDE  BE1B               	btfsc	(LCD_write_variable@temp_variable+3)^0,7,c
  2658   001DE0  EFFF  F00E         	goto	u5110
  2659   001DE4  501B               	movf	(LCD_write_variable@temp_variable+3)^0,w,c
  2660   001DE6  101A               	iorwf	(LCD_write_variable@temp_variable+2)^0,w,c
  2661   001DE8  1019               	iorwf	(LCD_write_variable@temp_variable+1)^0,w,c
  2662   001DEA  E107               	bnz	u5111
  2663   001DEC  0E0A               	movlw	10
  2664   001DEE  5C18               	subwf	LCD_write_variable@temp_variable^0,w,c
  2665   001DF0  B0D8               	btfsc	status,0,c
  2666   001DF2  EFFD  F00E         	goto	u5111
  2667   001DF6  EFFF  F00E         	goto	u5110
  2668   001DFA                     u5111:
  2669   001DFA  EF01  F00F         	goto	l4720
  2670   001DFE                     u5110:
  2671   001DFE  EF1D  F00F         	goto	l4722
  2672   001E02                     l4720:
  2673                           
  2674                           ;LCD.c: 405:         temp_variable /= 10;
  2675   001E02  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2676   001E06  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2677   001E0A  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2678   001E0E  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2679   001E12  0E0A               	movlw	10
  2680   001E14  6E07               	movwf	___aldiv@divisor^0,c
  2681   001E16  0E00               	movlw	0
  2682   001E18  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2683   001E1A  0E00               	movlw	0
  2684   001E1C  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2685   001E1E  0E00               	movlw	0
  2686   001E20  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2687   001E22  EC7E  F00F         	call	___aldiv	;wreg free
  2688   001E26  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2689   001E2A  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2690   001E2E  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2691   001E32  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2692   001E36  EFEE  F00E         	goto	l4714
  2693   001E3A                     l4722:
  2694                           
  2695                           ;LCD.c: 410:         if(left_offset <= digits) break;
  2696   001E3A  5015               	movf	LCD_write_variable@left_offset^0,w,c
  2697   001E3C  5C17               	subwf	LCD_write_variable@digits^0,w,c
  2698   001E3E  A0D8               	btfss	status,0,c
  2699   001E40  EF24  F00F         	goto	u5121
  2700   001E44  EF26  F00F         	goto	u5120
  2701   001E48                     u5121:
  2702   001E48  EF28  F00F         	goto	l4726
  2703   001E4C                     u5120:
  2704   001E4C  EF2E  F00F         	goto	l491
  2705   001E50                     l4726:
  2706                           
  2707                           ;LCD.c: 411:         LCD_write_data(' ');
  2708   001E50  0E20               	movlw	32
  2709   001E52  EC05  F011         	call	_LCD_write_data
  2710   001E56                     
  2711                           ;LCD.c: 412:         left_offset--;
  2712   001E56  0615               	decf	LCD_write_variable@left_offset^0,f,c
  2713   001E58  EF1D  F00F         	goto	l4722
  2714   001E5C                     l491:
  2715                           
  2716                           ;LCD.c: 417:         temp_variable = variable;
  2717   001E5C  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2718   001E60  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2719   001E64  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2720   001E68  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2721   001E6C                     
  2722                           ;LCD.c: 418:         for(uint8_t i = 1 ; i < digits ; i++){
  2723   001E6C  0E01               	movlw	1
  2724   001E6E  6E16               	movwf	LCD_write_variable@i^0,c
  2725   001E70  EF55  F00F         	goto	l4736
  2726   001E74                     l4732:
  2727                           
  2728                           ;LCD.c: 419:             temp_variable /= 10;
  2729   001E74  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2730   001E78  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2731   001E7C  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2732   001E80  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2733   001E84  0E0A               	movlw	10
  2734   001E86  6E07               	movwf	___aldiv@divisor^0,c
  2735   001E88  0E00               	movlw	0
  2736   001E8A  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2737   001E8C  0E00               	movlw	0
  2738   001E8E  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2739   001E90  0E00               	movlw	0
  2740   001E92  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2741   001E94  EC7E  F00F         	call	___aldiv	;wreg free
  2742   001E98  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2743   001E9C  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2744   001EA0  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2745   001EA4  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2746   001EA8                     
  2747                           ;LCD.c: 420:         }
  2748   001EA8  2A16               	incf	LCD_write_variable@i^0,f,c
  2749   001EAA                     l4736:
  2750   001EAA  5017               	movf	LCD_write_variable@digits^0,w,c
  2751   001EAC  5C16               	subwf	LCD_write_variable@i^0,w,c
  2752   001EAE  A0D8               	btfss	status,0,c
  2753   001EB0  EF5C  F00F         	goto	u5131
  2754   001EB4  EF5E  F00F         	goto	u5130
  2755   001EB8                     u5131:
  2756   001EB8  EF3A  F00F         	goto	l4732
  2757   001EBC                     u5130:
  2758   001EBC                     
  2759                           ;LCD.c: 421:         LCD_write_data( (temp_variable%10) + '0' );
  2760   001EBC  C018  F003         	movff	LCD_write_variable@temp_variable,___almod@dividend
  2761   001EC0  C019  F004         	movff	LCD_write_variable@temp_variable+1,___almod@dividend+1
  2762   001EC4  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___almod@dividend+2
  2763   001EC8  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___almod@dividend+3
  2764   001ECC  0E0A               	movlw	10
  2765   001ECE  6E07               	movwf	___almod@divisor^0,c
  2766   001ED0  0E00               	movlw	0
  2767   001ED2  6E08               	movwf	(___almod@divisor+1)^0,c
  2768   001ED4  0E00               	movlw	0
  2769   001ED6  6E09               	movwf	(___almod@divisor+2)^0,c
  2770   001ED8  0E00               	movlw	0
  2771   001EDA  6E0A               	movwf	(___almod@divisor+3)^0,c
  2772   001EDC  EC01  F012         	call	___almod	;wreg free
  2773   001EE0  5003               	movf	?___almod^0,w,c
  2774   001EE2  0F30               	addlw	48
  2775   001EE4  EC05  F011         	call	_LCD_write_data
  2776   001EE8                     
  2777                           ;LCD.c: 422:         digits --;
  2778   001EE8  0617               	decf	LCD_write_variable@digits^0,f,c
  2779   001EEA                     
  2780                           ;LCD.c: 423:         if(digits == 0) break;
  2781   001EEA  5017               	movf	LCD_write_variable@digits^0,w,c
  2782   001EEC  A4D8               	btfss	status,2,c
  2783   001EEE  EF7B  F00F         	goto	u5141
  2784   001EF2  EF7D  F00F         	goto	u5140
  2785   001EF6                     u5141:
  2786   001EF6  EF2E  F00F         	goto	l491
  2787   001EFA                     u5140:
  2788   001EFA  0012               	return		;funcret
  2789   001EFC                     __end_of_LCD_write_variable:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function ___lmul *****************
  2793 ;; Defined at:
  2794 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  multiplier      4    2[COMRAM] unsigned long 
  2797 ;;  multiplicand    4    6[COMRAM] unsigned long 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  product         4   10[COMRAM] unsigned long 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  4    2[COMRAM] unsigned long 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2809 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;Total ram usage:       12 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_LCD_write_variable
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text5
  2824   0030E6                     __ptext5:
  2825                           	callstack 0
  2826   0030E6                     ___lmul:
  2827                           	callstack 27
  2828   0030E6  0E00               	movlw	0
  2829   0030E8  6E0B               	movwf	___lmul@product^0,c
  2830   0030EA  0E00               	movlw	0
  2831   0030EC  6E0C               	movwf	(___lmul@product+1)^0,c
  2832   0030EE  0E00               	movlw	0
  2833   0030F0  6E0D               	movwf	(___lmul@product+2)^0,c
  2834   0030F2  0E00               	movlw	0
  2835   0030F4  6E0E               	movwf	(___lmul@product+3)^0,c
  2836   0030F6                     l4612:
  2837   0030F6  A003               	btfss	___lmul@multiplier^0,0,c
  2838   0030F8  EF80  F018         	goto	u4961
  2839   0030FC  EF82  F018         	goto	u4960
  2840   003100                     u4961:
  2841   003100  EF8A  F018         	goto	l4616
  2842   003104                     u4960:
  2843   003104  5007               	movf	___lmul@multiplicand^0,w,c
  2844   003106  260B               	addwf	___lmul@product^0,f,c
  2845   003108  5008               	movf	(___lmul@multiplicand+1)^0,w,c
  2846   00310A  220C               	addwfc	(___lmul@product+1)^0,f,c
  2847   00310C  5009               	movf	(___lmul@multiplicand+2)^0,w,c
  2848   00310E  220D               	addwfc	(___lmul@product+2)^0,f,c
  2849   003110  500A               	movf	(___lmul@multiplicand+3)^0,w,c
  2850   003112  220E               	addwfc	(___lmul@product+3)^0,f,c
  2851   003114                     l4616:
  2852   003114  90D8               	bcf	status,0,c
  2853   003116  3607               	rlcf	___lmul@multiplicand^0,f,c
  2854   003118  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2855   00311A  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2856   00311C  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2857   00311E  90D8               	bcf	status,0,c
  2858   003120  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
  2859   003122  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
  2860   003124  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
  2861   003126  3203               	rrcf	___lmul@multiplier^0,f,c
  2862   003128  5003               	movf	___lmul@multiplier^0,w,c
  2863   00312A  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
  2864   00312C  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
  2865   00312E  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
  2866   003130  A4D8               	btfss	status,2,c
  2867   003132  EF9D  F018         	goto	u4971
  2868   003136  EF9F  F018         	goto	u4970
  2869   00313A                     u4971:
  2870   00313A  EF7B  F018         	goto	l4612
  2871   00313E                     u4970:
  2872   00313E  C00B  F003         	movff	___lmul@product,?___lmul
  2873   003142  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  2874   003146  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  2875   00314A  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  2876   00314E  0012               	return		;funcret
  2877   003150                     __end_of___lmul:
  2878                           	callstack 0
  2879                           
  2880 ;; *************** function ___almod *****************
  2881 ;; Defined at:
  2882 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  dividend        4    2[COMRAM] long 
  2885 ;;  divisor         4    6[COMRAM] long 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  sign            1   11[COMRAM] unsigned char 
  2888 ;;  counter         1   10[COMRAM] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  4    2[COMRAM] long 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2898 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;Total ram usage:       10 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 1
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_LCD_write_variable
  2909 ;;		_LCD_write_float
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text6
  2914   002402                     __ptext6:
  2915                           	callstack 0
  2916   002402                     ___almod:
  2917                           	callstack 27
  2918   002402  6A0C               	clrf	___almod@sign^0,c
  2919   002404  BE06               	btfsc	(___almod@dividend+3)^0,7,c
  2920   002406  EF09  F012         	goto	u5040
  2921   00240A  EF07  F012         	goto	u5041
  2922   00240E                     u5041:
  2923   00240E  EF13  F012         	goto	l4672
  2924   002412                     u5040:
  2925   002412  1E06               	comf	(___almod@dividend+3)^0,f,c
  2926   002414  1E05               	comf	(___almod@dividend+2)^0,f,c
  2927   002416  1E04               	comf	(___almod@dividend+1)^0,f,c
  2928   002418  6C03               	negf	___almod@dividend^0,c
  2929   00241A  0E00               	movlw	0
  2930   00241C  2204               	addwfc	(___almod@dividend+1)^0,f,c
  2931   00241E  2205               	addwfc	(___almod@dividend+2)^0,f,c
  2932   002420  2206               	addwfc	(___almod@dividend+3)^0,f,c
  2933   002422  0E01               	movlw	1
  2934   002424  6E0C               	movwf	___almod@sign^0,c
  2935   002426                     l4672:
  2936   002426  BE0A               	btfsc	(___almod@divisor+3)^0,7,c
  2937   002428  EF1A  F012         	goto	u5050
  2938   00242C  EF18  F012         	goto	u5051
  2939   002430                     u5051:
  2940   002430  EF22  F012         	goto	l4676
  2941   002434                     u5050:
  2942   002434  1E0A               	comf	(___almod@divisor+3)^0,f,c
  2943   002436  1E09               	comf	(___almod@divisor+2)^0,f,c
  2944   002438  1E08               	comf	(___almod@divisor+1)^0,f,c
  2945   00243A  6C07               	negf	___almod@divisor^0,c
  2946   00243C  0E00               	movlw	0
  2947   00243E  2208               	addwfc	(___almod@divisor+1)^0,f,c
  2948   002440  2209               	addwfc	(___almod@divisor+2)^0,f,c
  2949   002442  220A               	addwfc	(___almod@divisor+3)^0,f,c
  2950   002444                     l4676:
  2951   002444  5007               	movf	___almod@divisor^0,w,c
  2952   002446  1008               	iorwf	(___almod@divisor+1)^0,w,c
  2953   002448  1009               	iorwf	(___almod@divisor+2)^0,w,c
  2954   00244A  100A               	iorwf	(___almod@divisor+3)^0,w,c
  2955   00244C  B4D8               	btfsc	status,2,c
  2956   00244E  EF2B  F012         	goto	u5061
  2957   002452  EF2D  F012         	goto	u5060
  2958   002456                     u5061:
  2959   002456  EF5D  F012         	goto	l4692
  2960   00245A                     u5060:
  2961   00245A  0E01               	movlw	1
  2962   00245C  6E0B               	movwf	___almod@counter^0,c
  2963   00245E  EF37  F012         	goto	l4682
  2964   002462                     l4680:
  2965   002462  90D8               	bcf	status,0,c
  2966   002464  3607               	rlcf	___almod@divisor^0,f,c
  2967   002466  3608               	rlcf	(___almod@divisor+1)^0,f,c
  2968   002468  3609               	rlcf	(___almod@divisor+2)^0,f,c
  2969   00246A  360A               	rlcf	(___almod@divisor+3)^0,f,c
  2970   00246C  2A0B               	incf	___almod@counter^0,f,c
  2971   00246E                     l4682:
  2972   00246E  AE0A               	btfss	(___almod@divisor+3)^0,7,c
  2973   002470  EF3C  F012         	goto	u5071
  2974   002474  EF3E  F012         	goto	u5070
  2975   002478                     u5071:
  2976   002478  EF31  F012         	goto	l4680
  2977   00247C                     u5070:
  2978   00247C                     l4684:
  2979   00247C  5007               	movf	___almod@divisor^0,w,c
  2980   00247E  5C03               	subwf	___almod@dividend^0,w,c
  2981   002480  5008               	movf	(___almod@divisor+1)^0,w,c
  2982   002482  5804               	subwfb	(___almod@dividend+1)^0,w,c
  2983   002484  5009               	movf	(___almod@divisor+2)^0,w,c
  2984   002486  5805               	subwfb	(___almod@dividend+2)^0,w,c
  2985   002488  500A               	movf	(___almod@divisor+3)^0,w,c
  2986   00248A  5806               	subwfb	(___almod@dividend+3)^0,w,c
  2987   00248C  A0D8               	btfss	status,0,c
  2988   00248E  EF4B  F012         	goto	u5081
  2989   002492  EF4D  F012         	goto	u5080
  2990   002496                     u5081:
  2991   002496  EF55  F012         	goto	l4688
  2992   00249A                     u5080:
  2993   00249A  5007               	movf	___almod@divisor^0,w,c
  2994   00249C  5E03               	subwf	___almod@dividend^0,f,c
  2995   00249E  5008               	movf	(___almod@divisor+1)^0,w,c
  2996   0024A0  5A04               	subwfb	(___almod@dividend+1)^0,f,c
  2997   0024A2  5009               	movf	(___almod@divisor+2)^0,w,c
  2998   0024A4  5A05               	subwfb	(___almod@dividend+2)^0,f,c
  2999   0024A6  500A               	movf	(___almod@divisor+3)^0,w,c
  3000   0024A8  5A06               	subwfb	(___almod@dividend+3)^0,f,c
  3001   0024AA                     l4688:
  3002   0024AA  90D8               	bcf	status,0,c
  3003   0024AC  320A               	rrcf	(___almod@divisor+3)^0,f,c
  3004   0024AE  3209               	rrcf	(___almod@divisor+2)^0,f,c
  3005   0024B0  3208               	rrcf	(___almod@divisor+1)^0,f,c
  3006   0024B2  3207               	rrcf	___almod@divisor^0,f,c
  3007   0024B4  2E0B               	decfsz	___almod@counter^0,f,c
  3008   0024B6  EF3E  F012         	goto	l4684
  3009   0024BA                     l4692:
  3010   0024BA  500C               	movf	___almod@sign^0,w,c
  3011   0024BC  B4D8               	btfsc	status,2,c
  3012   0024BE  EF63  F012         	goto	u5091
  3013   0024C2  EF65  F012         	goto	u5090
  3014   0024C6                     u5091:
  3015   0024C6  EF6D  F012         	goto	l4696
  3016   0024CA                     u5090:
  3017   0024CA  1E06               	comf	(___almod@dividend+3)^0,f,c
  3018   0024CC  1E05               	comf	(___almod@dividend+2)^0,f,c
  3019   0024CE  1E04               	comf	(___almod@dividend+1)^0,f,c
  3020   0024D0  6C03               	negf	___almod@dividend^0,c
  3021   0024D2  0E00               	movlw	0
  3022   0024D4  2204               	addwfc	(___almod@dividend+1)^0,f,c
  3023   0024D6  2205               	addwfc	(___almod@dividend+2)^0,f,c
  3024   0024D8  2206               	addwfc	(___almod@dividend+3)^0,f,c
  3025   0024DA                     l4696:
  3026   0024DA  C003  F003         	movff	___almod@dividend,?___almod
  3027   0024DE  C004  F004         	movff	___almod@dividend+1,?___almod+1
  3028   0024E2  C005  F005         	movff	___almod@dividend+2,?___almod+2
  3029   0024E6  C006  F006         	movff	___almod@dividend+3,?___almod+3
  3030   0024EA  0012               	return		;funcret
  3031   0024EC                     __end_of___almod:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function ___aldiv *****************
  3035 ;; Defined at:
  3036 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  dividend        4    2[COMRAM] long 
  3039 ;;  divisor         4    6[COMRAM] long 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  quotient        4   12[COMRAM] long 
  3042 ;;  sign            1   11[COMRAM] unsigned char 
  3043 ;;  counter         1   10[COMRAM] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  4    2[COMRAM] long 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3053 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;Total ram usage:       14 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 1
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_LCD_write_variable
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text7
  3068   001EFC                     __ptext7:
  3069                           	callstack 0
  3070   001EFC                     ___aldiv:
  3071                           	callstack 27
  3072   001EFC  6A0C               	clrf	___aldiv@sign^0,c
  3073   001EFE  BE0A               	btfsc	(___aldiv@divisor+3)^0,7,c
  3074   001F00  EF86  F00F         	goto	u4980
  3075   001F04  EF84  F00F         	goto	u4981
  3076   001F08                     u4981:
  3077   001F08  EF90  F00F         	goto	l4628
  3078   001F0C                     u4980:
  3079   001F0C  1E0A               	comf	(___aldiv@divisor+3)^0,f,c
  3080   001F0E  1E09               	comf	(___aldiv@divisor+2)^0,f,c
  3081   001F10  1E08               	comf	(___aldiv@divisor+1)^0,f,c
  3082   001F12  6C07               	negf	___aldiv@divisor^0,c
  3083   001F14  0E00               	movlw	0
  3084   001F16  2208               	addwfc	(___aldiv@divisor+1)^0,f,c
  3085   001F18  2209               	addwfc	(___aldiv@divisor+2)^0,f,c
  3086   001F1A  220A               	addwfc	(___aldiv@divisor+3)^0,f,c
  3087   001F1C  0E01               	movlw	1
  3088   001F1E  6E0C               	movwf	___aldiv@sign^0,c
  3089   001F20                     l4628:
  3090   001F20  BE06               	btfsc	(___aldiv@dividend+3)^0,7,c
  3091   001F22  EF97  F00F         	goto	u4990
  3092   001F26  EF95  F00F         	goto	u4991
  3093   001F2A                     u4991:
  3094   001F2A  EFA1  F00F         	goto	l4634
  3095   001F2E                     u4990:
  3096   001F2E  1E06               	comf	(___aldiv@dividend+3)^0,f,c
  3097   001F30  1E05               	comf	(___aldiv@dividend+2)^0,f,c
  3098   001F32  1E04               	comf	(___aldiv@dividend+1)^0,f,c
  3099   001F34  6C03               	negf	___aldiv@dividend^0,c
  3100   001F36  0E00               	movlw	0
  3101   001F38  2204               	addwfc	(___aldiv@dividend+1)^0,f,c
  3102   001F3A  2205               	addwfc	(___aldiv@dividend+2)^0,f,c
  3103   001F3C  2206               	addwfc	(___aldiv@dividend+3)^0,f,c
  3104   001F3E  0E01               	movlw	1
  3105   001F40  1A0C               	xorwf	___aldiv@sign^0,f,c
  3106   001F42                     l4634:
  3107   001F42  0E00               	movlw	0
  3108   001F44  6E0D               	movwf	___aldiv@quotient^0,c
  3109   001F46  0E00               	movlw	0
  3110   001F48  6E0E               	movwf	(___aldiv@quotient+1)^0,c
  3111   001F4A  0E00               	movlw	0
  3112   001F4C  6E0F               	movwf	(___aldiv@quotient+2)^0,c
  3113   001F4E  0E00               	movlw	0
  3114   001F50  6E10               	movwf	(___aldiv@quotient+3)^0,c
  3115   001F52  5007               	movf	___aldiv@divisor^0,w,c
  3116   001F54  1008               	iorwf	(___aldiv@divisor+1)^0,w,c
  3117   001F56  1009               	iorwf	(___aldiv@divisor+2)^0,w,c
  3118   001F58  100A               	iorwf	(___aldiv@divisor+3)^0,w,c
  3119   001F5A  B4D8               	btfsc	status,2,c
  3120   001F5C  EFB2  F00F         	goto	u5001
  3121   001F60  EFB4  F00F         	goto	u5000
  3122   001F64                     u5001:
  3123   001F64  EFEA  F00F         	goto	l4656
  3124   001F68                     u5000:
  3125   001F68  0E01               	movlw	1
  3126   001F6A  6E0B               	movwf	___aldiv@counter^0,c
  3127   001F6C  EFBE  F00F         	goto	l4642
  3128   001F70                     l4640:
  3129   001F70  90D8               	bcf	status,0,c
  3130   001F72  3607               	rlcf	___aldiv@divisor^0,f,c
  3131   001F74  3608               	rlcf	(___aldiv@divisor+1)^0,f,c
  3132   001F76  3609               	rlcf	(___aldiv@divisor+2)^0,f,c
  3133   001F78  360A               	rlcf	(___aldiv@divisor+3)^0,f,c
  3134   001F7A  2A0B               	incf	___aldiv@counter^0,f,c
  3135   001F7C                     l4642:
  3136   001F7C  AE0A               	btfss	(___aldiv@divisor+3)^0,7,c
  3137   001F7E  EFC3  F00F         	goto	u5011
  3138   001F82  EFC5  F00F         	goto	u5010
  3139   001F86                     u5011:
  3140   001F86  EFB8  F00F         	goto	l4640
  3141   001F8A                     u5010:
  3142   001F8A                     l4644:
  3143   001F8A  90D8               	bcf	status,0,c
  3144   001F8C  360D               	rlcf	___aldiv@quotient^0,f,c
  3145   001F8E  360E               	rlcf	(___aldiv@quotient+1)^0,f,c
  3146   001F90  360F               	rlcf	(___aldiv@quotient+2)^0,f,c
  3147   001F92  3610               	rlcf	(___aldiv@quotient+3)^0,f,c
  3148   001F94  5007               	movf	___aldiv@divisor^0,w,c
  3149   001F96  5C03               	subwf	___aldiv@dividend^0,w,c
  3150   001F98  5008               	movf	(___aldiv@divisor+1)^0,w,c
  3151   001F9A  5804               	subwfb	(___aldiv@dividend+1)^0,w,c
  3152   001F9C  5009               	movf	(___aldiv@divisor+2)^0,w,c
  3153   001F9E  5805               	subwfb	(___aldiv@dividend+2)^0,w,c
  3154   001FA0  500A               	movf	(___aldiv@divisor+3)^0,w,c
  3155   001FA2  5806               	subwfb	(___aldiv@dividend+3)^0,w,c
  3156   001FA4  A0D8               	btfss	status,0,c
  3157   001FA6  EFD7  F00F         	goto	u5021
  3158   001FAA  EFD9  F00F         	goto	u5020
  3159   001FAE                     u5021:
  3160   001FAE  EFE2  F00F         	goto	l4652
  3161   001FB2                     u5020:
  3162   001FB2  5007               	movf	___aldiv@divisor^0,w,c
  3163   001FB4  5E03               	subwf	___aldiv@dividend^0,f,c
  3164   001FB6  5008               	movf	(___aldiv@divisor+1)^0,w,c
  3165   001FB8  5A04               	subwfb	(___aldiv@dividend+1)^0,f,c
  3166   001FBA  5009               	movf	(___aldiv@divisor+2)^0,w,c
  3167   001FBC  5A05               	subwfb	(___aldiv@dividend+2)^0,f,c
  3168   001FBE  500A               	movf	(___aldiv@divisor+3)^0,w,c
  3169   001FC0  5A06               	subwfb	(___aldiv@dividend+3)^0,f,c
  3170   001FC2  800D               	bsf	___aldiv@quotient^0,0,c
  3171   001FC4                     l4652:
  3172   001FC4  90D8               	bcf	status,0,c
  3173   001FC6  320A               	rrcf	(___aldiv@divisor+3)^0,f,c
  3174   001FC8  3209               	rrcf	(___aldiv@divisor+2)^0,f,c
  3175   001FCA  3208               	rrcf	(___aldiv@divisor+1)^0,f,c
  3176   001FCC  3207               	rrcf	___aldiv@divisor^0,f,c
  3177   001FCE  2E0B               	decfsz	___aldiv@counter^0,f,c
  3178   001FD0  EFC5  F00F         	goto	l4644
  3179   001FD4                     l4656:
  3180   001FD4  500C               	movf	___aldiv@sign^0,w,c
  3181   001FD6  B4D8               	btfsc	status,2,c
  3182   001FD8  EFF0  F00F         	goto	u5031
  3183   001FDC  EFF2  F00F         	goto	u5030
  3184   001FE0                     u5031:
  3185   001FE0  EFFA  F00F         	goto	l4660
  3186   001FE4                     u5030:
  3187   001FE4  1E10               	comf	(___aldiv@quotient+3)^0,f,c
  3188   001FE6  1E0F               	comf	(___aldiv@quotient+2)^0,f,c
  3189   001FE8  1E0E               	comf	(___aldiv@quotient+1)^0,f,c
  3190   001FEA  6C0D               	negf	___aldiv@quotient^0,c
  3191   001FEC  0E00               	movlw	0
  3192   001FEE  220E               	addwfc	(___aldiv@quotient+1)^0,f,c
  3193   001FF0  220F               	addwfc	(___aldiv@quotient+2)^0,f,c
  3194   001FF2  2210               	addwfc	(___aldiv@quotient+3)^0,f,c
  3195   001FF4                     l4660:
  3196   001FF4  C00D  F003         	movff	___aldiv@quotient,?___aldiv
  3197   001FF8  C00E  F004         	movff	___aldiv@quotient+1,?___aldiv+1
  3198   001FFC  C00F  F005         	movff	___aldiv@quotient+2,?___aldiv+2
  3199   002000  C010  F006         	movff	___aldiv@quotient+3,?___aldiv+3
  3200   002004  0012               	return		;funcret
  3201   002006                     __end_of___aldiv:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function _main_menu *****************
  3205 ;; Defined at:
  3206 ;;		line 312 in file "OBCII_PIC18F46K22.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;Total ram usage:        2 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 11
  3227 ;; This function calls:
  3228 ;;		_LCD_clear
  3229 ;;		_LCD_configure_cursor_blink
  3230 ;;		_LCD_cursor_set
  3231 ;;		_clear_diagnostic_codes
  3232 ;;		_diagnostic_trouble_codes
  3233 ;;		_display_mm
  3234 ;;		_display_system_info
  3235 ;;		_live_reading_mode
  3236 ;;		_readADC
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text8
  3243   001562                     __ptext8:
  3244                           	callstack 0
  3245   001562                     _main_menu:
  3246                           	callstack 19
  3247   001562                     
  3248                           ;OBCII_PIC18F46K22.c: 314:     LCD_clear();
  3249   001562  EC0A  F01B         	call	_LCD_clear	;wreg free
  3250   001566                     
  3251                           ;OBCII_PIC18F46K22.c: 315:     display_mm();
  3252   001566  ECCA  F01A         	call	_display_mm	;wreg free
  3253   00156A                     l5888:
  3254                           
  3255                           ;OBCII_PIC18F46K22.c: 318:         display_mm();
  3256   00156A  ECCA  F01A         	call	_display_mm	;wreg free
  3257                           
  3258                           ;OBCII_PIC18F46K22.c: 319:         result = readADC();
  3259   00156E  EC96  F01A         	call	_readADC	;wreg free
  3260   001572  C003  F05A         	movff	?_readADC,_result
  3261   001576  C004  F05B         	movff	?_readADC+1,_result+1
  3262   00157A                     
  3263                           ;OBCII_PIC18F46K22.c: 320:         if(result >= 0 && result <= 255){
  3264   00157A  045B               	decf	(_result+1)^0,w,c
  3265   00157C  B0D8               	btfsc	status,0,c
  3266   00157E  EFC3  F00A         	goto	u6881
  3267   001582  EFC5  F00A         	goto	u6880
  3268   001586                     u6881:
  3269   001586  EFCF  F00A         	goto	l5896
  3270   00158A                     u6880:
  3271   00158A                     
  3272                           ;OBCII_PIC18F46K22.c: 321:             menu_sel = 0;
  3273   00158A  0E00               	movlw	0
  3274   00158C  0100               	movlb	0	; () banked
  3275   00158E  6FF4               	movwf	(_menu_sel+1)& (0+255),b
  3276   001590  0E00               	movlw	0
  3277   001592  6FF3               	movwf	_menu_sel& (0+255),b
  3278   001594                     
  3279                           ; BSR set to: 0
  3280                           ;OBCII_PIC18F46K22.c: 322:             LCD_cursor_set(2,1);
  3281   001594  0E01               	movlw	1
  3282   001596  6E06               	movwf	LCD_cursor_set@column^0,c
  3283   001598  0E02               	movlw	2
  3284   00159A  EC42  F019         	call	_LCD_cursor_set
  3285   00159E                     l5896:
  3286                           
  3287                           ;OBCII_PIC18F46K22.c: 325:         if(result >= 256 && result <=511){
  3288   00159E  045B               	decf	(_result+1)^0,w,c
  3289   0015A0  A0D8               	btfss	status,0,c
  3290   0015A2  EFD5  F00A         	goto	u6891
  3291   0015A6  EFD7  F00A         	goto	u6890
  3292   0015AA                     u6891:
  3293   0015AA  EFEA  F00A         	goto	l5904
  3294   0015AE                     u6890:
  3295   0015AE  0E02               	movlw	2
  3296   0015B0  5C5B               	subwf	(_result+1)^0,w,c
  3297   0015B2  B0D8               	btfsc	status,0,c
  3298   0015B4  EFDE  F00A         	goto	u6901
  3299   0015B8  EFE0  F00A         	goto	u6900
  3300   0015BC                     u6901:
  3301   0015BC  EFEA  F00A         	goto	l5904
  3302   0015C0                     u6900:
  3303   0015C0                     
  3304                           ;OBCII_PIC18F46K22.c: 326:             menu_sel = 1;
  3305   0015C0  0E00               	movlw	0
  3306   0015C2  0100               	movlb	0	; () banked
  3307   0015C4  6FF4               	movwf	(_menu_sel+1)& (0+255),b
  3308   0015C6  0E01               	movlw	1
  3309   0015C8  6FF3               	movwf	_menu_sel& (0+255),b
  3310   0015CA                     
  3311                           ; BSR set to: 0
  3312                           ;OBCII_PIC18F46K22.c: 327:             LCD_cursor_set(2,5);
  3313   0015CA  0E05               	movlw	5
  3314   0015CC  6E06               	movwf	LCD_cursor_set@column^0,c
  3315   0015CE  0E02               	movlw	2
  3316   0015D0  EC42  F019         	call	_LCD_cursor_set
  3317   0015D4                     l5904:
  3318                           
  3319                           ;OBCII_PIC18F46K22.c: 330:         if(result >=512 && result <=767){
  3320   0015D4  0E02               	movlw	2
  3321   0015D6  5C5B               	subwf	(_result+1)^0,w,c
  3322   0015D8  A0D8               	btfss	status,0,c
  3323   0015DA  EFF1  F00A         	goto	u6911
  3324   0015DE  EFF3  F00A         	goto	u6910
  3325   0015E2                     u6911:
  3326   0015E2  EF06  F00B         	goto	l5912
  3327   0015E6                     u6910:
  3328   0015E6  0E03               	movlw	3
  3329   0015E8  5C5B               	subwf	(_result+1)^0,w,c
  3330   0015EA  B0D8               	btfsc	status,0,c
  3331   0015EC  EFFA  F00A         	goto	u6921
  3332   0015F0  EFFC  F00A         	goto	u6920
  3333   0015F4                     u6921:
  3334   0015F4  EF06  F00B         	goto	l5912
  3335   0015F8                     u6920:
  3336   0015F8                     
  3337                           ;OBCII_PIC18F46K22.c: 331:             menu_sel = 2;
  3338   0015F8  0E00               	movlw	0
  3339   0015FA  0100               	movlb	0	; () banked
  3340   0015FC  6FF4               	movwf	(_menu_sel+1)& (0+255),b
  3341   0015FE  0E02               	movlw	2
  3342   001600  6FF3               	movwf	_menu_sel& (0+255),b
  3343   001602                     
  3344                           ; BSR set to: 0
  3345                           ;OBCII_PIC18F46K22.c: 332:             LCD_cursor_set(2,9);
  3346   001602  0E09               	movlw	9
  3347   001604  6E06               	movwf	LCD_cursor_set@column^0,c
  3348   001606  0E02               	movlw	2
  3349   001608  EC42  F019         	call	_LCD_cursor_set
  3350   00160C                     l5912:
  3351                           
  3352                           ;OBCII_PIC18F46K22.c: 334:         if(result >= 768 && result <=1023 ){
  3353   00160C  0E03               	movlw	3
  3354   00160E  5C5B               	subwf	(_result+1)^0,w,c
  3355   001610  A0D8               	btfss	status,0,c
  3356   001612  EF0D  F00B         	goto	u6931
  3357   001616  EF0F  F00B         	goto	u6930
  3358   00161A                     u6931:
  3359   00161A  EF22  F00B         	goto	l5920
  3360   00161E                     u6930:
  3361   00161E  0E04               	movlw	4
  3362   001620  5C5B               	subwf	(_result+1)^0,w,c
  3363   001622  B0D8               	btfsc	status,0,c
  3364   001624  EF16  F00B         	goto	u6941
  3365   001628  EF18  F00B         	goto	u6940
  3366   00162C                     u6941:
  3367   00162C  EF22  F00B         	goto	l5920
  3368   001630                     u6940:
  3369   001630                     
  3370                           ;OBCII_PIC18F46K22.c: 335:             menu_sel = 3;
  3371   001630  0E00               	movlw	0
  3372   001632  0100               	movlb	0	; () banked
  3373   001634  6FF4               	movwf	(_menu_sel+1)& (0+255),b
  3374   001636  0E03               	movlw	3
  3375   001638  6FF3               	movwf	_menu_sel& (0+255),b
  3376   00163A                     
  3377                           ; BSR set to: 0
  3378                           ;OBCII_PIC18F46K22.c: 336:             LCD_cursor_set(2,13);
  3379   00163A  0E0D               	movlw	13
  3380   00163C  6E06               	movwf	LCD_cursor_set@column^0,c
  3381   00163E  0E02               	movlw	2
  3382   001640  EC42  F019         	call	_LCD_cursor_set
  3383   001644                     l5920:
  3384                           
  3385                           ;OBCII_PIC18F46K22.c: 338:         LCD_configure_cursor_blink(1);
  3386   001644  0E01               	movlw	1
  3387   001646  ECF7  F01A         	call	_LCD_configure_cursor_blink
  3388   00164A                     
  3389                           ;OBCII_PIC18F46K22.c: 340:         if (PORTBbits.RB4 == 0) {
  3390   00164A  B881               	btfsc	129,4,c	;volatile
  3391   00164C  EF2A  F00B         	goto	u6951
  3392   001650  EF2C  F00B         	goto	u6950
  3393   001654                     u6951:
  3394   001654  EFCA  F00B         	goto	l5994
  3395   001658                     u6950:
  3396   001658                     
  3397                           ;OBCII_PIC18F46K22.c: 341:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3398   001658  0E68               	movlw	104
  3399   00165A  0100               	movlb	0	; () banked
  3400   00165C  6FA6               	movwf	??_main_menu& (0+255),b
  3401   00165E  0EE4               	movlw	228
  3402   001660                     u7087:
  3403   001660  2EE8               	decfsz	wreg,f,c
  3404   001662  D7FE               	bra	u7087
  3405   001664  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3406   001666  D7FC               	bra	u7087
  3407   001668  0000               	nop	
  3408   00166A                     
  3409                           ;OBCII_PIC18F46K22.c: 342:             if (PORTBbits.RB4 == 0) {
  3410   00166A  B881               	btfsc	129,4,c	;volatile
  3411   00166C  EF3A  F00B         	goto	u6961
  3412   001670  EF3C  F00B         	goto	u6960
  3413   001674                     u6961:
  3414   001674  EFCA  F00B         	goto	l5994
  3415   001678                     u6960:
  3416   001678                     
  3417                           ;OBCII_PIC18F46K22.c: 343:                 LCD_configure_cursor_blink(0);
  3418   001678  0E00               	movlw	0
  3419   00167A  ECF7  F01A         	call	_LCD_configure_cursor_blink
  3420                           
  3421                           ;OBCII_PIC18F46K22.c: 344:                 LCD_clear();
  3422   00167E  EC0A  F01B         	call	_LCD_clear	;wreg free
  3423                           
  3424                           ;OBCII_PIC18F46K22.c: 347:                 switch (menu_sel) {
  3425   001682  EFAB  F00B         	goto	l5992
  3426   001686                     l5930:
  3427                           
  3428                           ;OBCII_PIC18F46K22.c: 350:                             live_reading_mode();
  3429   001686  EC55  F01B         	call	_live_reading_mode	;wreg free
  3430   00168A                     
  3431                           ;OBCII_PIC18F46K22.c: 352:                             if (PORTCbits.RC5 == 0) {
  3432   00168A  BA82               	btfsc	130,5,c	;volatile
  3433   00168C  EF4A  F00B         	goto	u6971
  3434   001690  EF4C  F00B         	goto	u6970
  3435   001694                     u6971:
  3436   001694  EF43  F00B         	goto	l5930
  3437   001698                     u6970:
  3438   001698                     
  3439                           ;OBCII_PIC18F46K22.c: 353:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  3440   001698  0E68               	movlw	104
  3441   00169A  0100               	movlb	0	; () banked
  3442   00169C  6FA6               	movwf	??_main_menu& (0+255),b
  3443   00169E  0EE4               	movlw	228
  3444   0016A0                     u7097:
  3445   0016A0  2EE8               	decfsz	wreg,f,c
  3446   0016A2  D7FE               	bra	u7097
  3447   0016A4  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3448   0016A6  D7FC               	bra	u7097
  3449   0016A8  0000               	nop	
  3450   0016AA                     
  3451                           ;OBCII_PIC18F46K22.c: 354:                                 if (PORTCbits.RC5 == 0) {
  3452   0016AA  BA82               	btfsc	130,5,c	;volatile
  3453   0016AC  EF5A  F00B         	goto	u6981
  3454   0016B0  EF5C  F00B         	goto	u6980
  3455   0016B4                     u6981:
  3456   0016B4  EF43  F00B         	goto	l5930
  3457   0016B8                     u6980:
  3458   0016B8                     l5938:
  3459                           
  3460                           ;OBCII_PIC18F46K22.c: 355:                                     LCD_clear();
  3461   0016B8  EC0A  F01B         	call	_LCD_clear	;wreg free
  3462   0016BC                     
  3463                           ;OBCII_PIC18F46K22.c: 356:                                     display_mm();
  3464   0016BC  ECCA  F01A         	call	_display_mm	;wreg free
  3465   0016C0                     l5942:
  3466                           
  3467                           ;OBCII_PIC18F46K22.c: 357:                                     menu_sel = -1;
  3468   0016C0  0100               	movlb	0	; () banked
  3469   0016C2  69F3               	setf	_menu_sel& (0+255),b
  3470   0016C4  69F4               	setf	(_menu_sel+1)& (0+255),b
  3471                           
  3472                           ;OBCII_PIC18F46K22.c: 358:                                     break;
  3473   0016C6  EFCA  F00B         	goto	l5994
  3474   0016CA                     l5944:
  3475                           
  3476                           ;OBCII_PIC18F46K22.c: 367:                             diagnostic_trouble_codes();
  3477   0016CA  ECD8  F004         	call	_diagnostic_trouble_codes	;wreg free
  3478   0016CE                     
  3479                           ;OBCII_PIC18F46K22.c: 369:                             if (PORTCbits.RC5 == 0) {
  3480   0016CE  BA82               	btfsc	130,5,c	;volatile
  3481   0016D0  EF6C  F00B         	goto	u6991
  3482   0016D4  EF6E  F00B         	goto	u6990
  3483   0016D8                     u6991:
  3484   0016D8  EF65  F00B         	goto	l5944
  3485   0016DC                     u6990:
  3486   0016DC                     
  3487                           ;OBCII_PIC18F46K22.c: 370:                                     _delay((unsigned long)((2
      +                          0)*(16000000/4000.0)));
  3488   0016DC  0E68               	movlw	104
  3489   0016DE  0100               	movlb	0	; () banked
  3490   0016E0  6FA6               	movwf	??_main_menu& (0+255),b
  3491   0016E2  0EE4               	movlw	228
  3492   0016E4                     u7107:
  3493   0016E4  2EE8               	decfsz	wreg,f,c
  3494   0016E6  D7FE               	bra	u7107
  3495   0016E8  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3496   0016EA  D7FC               	bra	u7107
  3497   0016EC  0000               	nop	
  3498   0016EE                     
  3499                           ;OBCII_PIC18F46K22.c: 371:                                 if (PORTCbits.RC5 == 0) {
  3500   0016EE  BA82               	btfsc	130,5,c	;volatile
  3501   0016F0  EF7C  F00B         	goto	u7001
  3502   0016F4  EF7E  F00B         	goto	u7000
  3503   0016F8                     u7001:
  3504   0016F8  EF65  F00B         	goto	l5944
  3505   0016FC                     u7000:
  3506   0016FC  EF5C  F00B         	goto	l5938
  3507   001700                     l5958:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;OBCII_PIC18F46K22.c: 383:                                 _delay((unsigned long)((200)*
      +                          (16000000/4000.0)));
  3511   001700  0E05               	movlw	5
  3512   001702  0100               	movlb	0	; () banked
  3513   001704  6FA7               	movwf	(??_main_menu+1)& (0+255),b
  3514   001706  0E0F               	movlw	15
  3515   001708  6FA6               	movwf	??_main_menu& (0+255),b
  3516   00170A  0EF1               	movlw	241
  3517   00170C                     u7117:
  3518   00170C  2EE8               	decfsz	wreg,f,c
  3519   00170E  D7FE               	bra	u7117
  3520   001710  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3521   001712  D7FC               	bra	u7117
  3522   001714  2FA7               	decfsz	(??_main_menu+1)& (0+255),f,b
  3523   001716  D7FA               	bra	u7117
  3524   001718                     
  3525                           ;OBCII_PIC18F46K22.c: 384:                                 clear_diagnostic_codes();
  3526   001718  ECDE  F00C         	call	_clear_diagnostic_codes	;wreg free
  3527   00171C  EF60  F00B         	goto	l5942
  3528   001720                     l5976:
  3529                           
  3530                           ;OBCII_PIC18F46K22.c: 401:                             display_system_info();
  3531   001720  EC7B  F01A         	call	_display_system_info	;wreg free
  3532   001724                     
  3533                           ;OBCII_PIC18F46K22.c: 403:                             if (PORTCbits.RC5 == 0) {
  3534   001724  BA82               	btfsc	130,5,c	;volatile
  3535   001726  EF97  F00B         	goto	u7011
  3536   00172A  EF99  F00B         	goto	u7010
  3537   00172E                     u7011:
  3538   00172E  EF90  F00B         	goto	l5976
  3539   001732                     u7010:
  3540   001732                     
  3541                           ;OBCII_PIC18F46K22.c: 404:                                _delay((unsigned long)((20)*(1
      +                          6000000/4000.0)));
  3542   001732  0E68               	movlw	104
  3543   001734  0100               	movlb	0	; () banked
  3544   001736  6FA6               	movwf	??_main_menu& (0+255),b
  3545   001738  0EE4               	movlw	228
  3546   00173A                     u7127:
  3547   00173A  2EE8               	decfsz	wreg,f,c
  3548   00173C  D7FE               	bra	u7127
  3549   00173E  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3550   001740  D7FC               	bra	u7127
  3551   001742  0000               	nop	
  3552   001744                     
  3553                           ;OBCII_PIC18F46K22.c: 405:                                 if (PORTCbits.RC5 == 0) {
  3554   001744  BA82               	btfsc	130,5,c	;volatile
  3555   001746  EFA7  F00B         	goto	u7021
  3556   00174A  EFA9  F00B         	goto	u7020
  3557   00174E                     u7021:
  3558   00174E  EF90  F00B         	goto	l5976
  3559   001752                     u7020:
  3560   001752  EF5C  F00B         	goto	l5938
  3561   001756                     l5992:
  3562   001756  C0F3  F0A6         	movff	_menu_sel,??_main_menu
  3563   00175A  C0F4  F0A7         	movff	_menu_sel+1,??_main_menu+1
  3564                           
  3565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3566                           ; Switch size 1, requested type "simple"
  3567                           ; Number of cases is 1, Range of values is 0 to 0
  3568                           ; switch strategies available:
  3569                           ; Name         Instructions Cycles
  3570                           ; simple_byte            4     3 (average)
  3571                           ;	Chosen strategy is simple_byte
  3572   00175E  0100               	movlb	0	; () banked
  3573   001760  51A7               	movf	(??_main_menu+1)& (0+255),w,b
  3574   001762  0A00               	xorlw	0	; case 0
  3575   001764  B4D8               	btfsc	status,2,c
  3576   001766  EFB7  F00B         	goto	l6078
  3577   00176A  EFCA  F00B         	goto	l220
  3578   00176E                     l6078:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ; Switch size 1, requested type "simple"
  3582                           ; Number of cases is 4, Range of values is 0 to 3
  3583                           ; switch strategies available:
  3584                           ; Name         Instructions Cycles
  3585                           ; simple_byte           13     7 (average)
  3586                           ;	Chosen strategy is simple_byte
  3587   00176E  51A6               	movf	??_main_menu& (0+255),w,b
  3588   001770  0A00               	xorlw	0	; case 0
  3589   001772  B4D8               	btfsc	status,2,c
  3590   001774  EF43  F00B         	goto	l5930
  3591   001778  0A01               	xorlw	1	; case 1
  3592   00177A  B4D8               	btfsc	status,2,c
  3593   00177C  EF65  F00B         	goto	l5944
  3594   001780  0A03               	xorlw	3	; case 2
  3595   001782  B4D8               	btfsc	status,2,c
  3596   001784  EF80  F00B         	goto	l5958
  3597   001788  0A01               	xorlw	1	; case 3
  3598   00178A  B4D8               	btfsc	status,2,c
  3599   00178C  EF90  F00B         	goto	l5976
  3600   001790  EFCA  F00B         	goto	l220
  3601   001794                     l220:
  3602   001794                     l5994:
  3603                           
  3604                           ;OBCII_PIC18F46K22.c: 421:         _delay((unsigned long)((50)*(16000000/4000.0)));
  3605   001794  0E02               	movlw	2
  3606   001796  0100               	movlb	0	; () banked
  3607   001798  6FA7               	movwf	(??_main_menu+1)& (0+255),b
  3608   00179A  0E04               	movlw	4
  3609   00179C  6FA6               	movwf	??_main_menu& (0+255),b
  3610   00179E  0EBA               	movlw	186
  3611   0017A0                     u7137:
  3612   0017A0  2EE8               	decfsz	wreg,f,c
  3613   0017A2  D7FE               	bra	u7137
  3614   0017A4  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3615   0017A6  D7FC               	bra	u7137
  3616   0017A8  2FA7               	decfsz	(??_main_menu+1)& (0+255),f,b
  3617   0017AA  D7FA               	bra	u7137
  3618   0017AC  0000               	nop	
  3619   0017AE  EFB5  F00A         	goto	l5888
  3620   0017B2  0012               	return		;funcret
  3621   0017B4                     __end_of_main_menu:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _live_reading_mode *****************
  3625 ;; Defined at:
  3626 ;;		line 585 in file "OBCII_PIC18F46K22.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 10
  3647 ;; This function calls:
  3648 ;;		_print_AI_Temp
  3649 ;;		_print_RPM
  3650 ;;		_print_Vbatt
  3651 ;; This function is called by:
  3652 ;;		_main_menu
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text9
  3657   0036AA                     __ptext9:
  3658                           	callstack 0
  3659   0036AA                     _live_reading_mode:
  3660                           	callstack 19
  3661   0036AA                     
  3662                           ;OBCII_PIC18F46K22.c: 586:             print_RPM();
  3663   0036AA  ECFC  F007         	call	_print_RPM	;wreg free
  3664   0036AE                     
  3665                           ;OBCII_PIC18F46K22.c: 587:             print_Vbatt();
  3666   0036AE  EC76  F012         	call	_print_Vbatt	;wreg free
  3667   0036B2                     
  3668                           ;OBCII_PIC18F46K22.c: 588:             print_AI_Temp();
  3669   0036B2  EC69  F009         	call	_print_AI_Temp	;wreg free
  3670   0036B6  0012               	return		;funcret
  3671   0036B8                     __end_of_live_reading_mode:
  3672                           	callstack 0
  3673                           
  3674 ;; *************** function _print_Vbatt *****************
  3675 ;; Defined at:
  3676 ;;		line 494 in file "OBCII_PIC18F46K22.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;Total ram usage:        1 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 5
  3697 ;; This function calls:
  3698 ;;		_LCD_clear
  3699 ;;		_LCD_cursor_set
  3700 ;;		_LCD_write_string
  3701 ;;		_UART1_SendString
  3702 ;;		_clear_parsing_notif
  3703 ;;		_display_mm
  3704 ;;		_parsing_notif
  3705 ;;		_strchr
  3706 ;; This function is called by:
  3707 ;;		_live_reading_mode
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text10
  3712   0024EC                     __ptext10:
  3713                           	callstack 0
  3714   0024EC                     _print_Vbatt:
  3715                           	callstack 23
  3716   0024EC                     
  3717                           ;OBCII_PIC18F46K22.c: 496:     UART1_SendString("ATRV\r");
  3718   0024EC  0EBC               	movlw	low STR_20
  3719   0024EE  6E04               	movwf	UART1_SendString@string^0,c
  3720   0024F0  0EFF               	movlw	high STR_20
  3721   0024F2  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3722   0024F4  ECA1  F019         	call	_UART1_SendString	;wreg free
  3723                           
  3724                           ;OBCII_PIC18F46K22.c: 497:     while(!message_complete) {
  3725   0024F8  EF9F  F012         	goto	l4418
  3726   0024FC                     l282:
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;OBCII_PIC18F46K22.c: 499:         if (PORTCbits.RC5 == 0) {
  3730   0024FC  BA82               	btfsc	130,5,c	;volatile
  3731   0024FE  EF83  F012         	goto	u4711
  3732   002502  EF85  F012         	goto	u4710
  3733   002506                     u4711:
  3734   002506  EF9D  F012         	goto	l4416
  3735   00250A                     u4710:
  3736   00250A                     
  3737                           ; BSR set to: 0
  3738                           ;OBCII_PIC18F46K22.c: 500:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3739   00250A  0E68               	movlw	104
  3740   00250C  6E0B               	movwf	??_print_Vbatt^0,c
  3741   00250E  0EE4               	movlw	228
  3742   002510                     u7147:
  3743   002510  2EE8               	decfsz	wreg,f,c
  3744   002512  D7FE               	bra	u7147
  3745   002514  2E0B               	decfsz	??_print_Vbatt^0,f,c
  3746   002516  D7FC               	bra	u7147
  3747   002518  D000               	nop2	
  3748   00251A                     
  3749                           ;OBCII_PIC18F46K22.c: 501:             if (PORTCbits.RC5 == 0) {
  3750   00251A  BA82               	btfsc	130,5,c	;volatile
  3751   00251C  EF92  F012         	goto	u4721
  3752   002520  EF94  F012         	goto	u4720
  3753   002524                     u4721:
  3754   002524  EF9D  F012         	goto	l4416
  3755   002528                     u4720:
  3756   002528                     
  3757                           ;OBCII_PIC18F46K22.c: 502:                 LCD_clear();
  3758   002528  EC0A  F01B         	call	_LCD_clear	;wreg free
  3759   00252C                     
  3760                           ;OBCII_PIC18F46K22.c: 503:                 display_mm();
  3761   00252C  ECCA  F01A         	call	_display_mm	;wreg free
  3762   002530                     
  3763                           ;OBCII_PIC18F46K22.c: 504:                 menu_sel = -1;
  3764   002530  0100               	movlb	0	; () banked
  3765   002532  69F3               	setf	_menu_sel& (0+255),b
  3766   002534  69F4               	setf	(_menu_sel+1)& (0+255),b
  3767                           
  3768                           ;OBCII_PIC18F46K22.c: 505:                 break;
  3769   002536  EFA8  F012         	goto	l4420
  3770   00253A                     l4416:
  3771                           
  3772                           ;OBCII_PIC18F46K22.c: 508:         parsing_notif();
  3773   00253A  EC19  F01B         	call	_parsing_notif	;wreg free
  3774   00253E                     l4418:
  3775                           
  3776                           ;OBCII_PIC18F46K22.c: 497:     while(!message_complete) {
  3777   00253E  0100               	movlb	0	; () banked
  3778   002540  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  3779   002542  B4D8               	btfsc	status,2,c
  3780   002544  EFA6  F012         	goto	u4731
  3781   002548  EFA8  F012         	goto	u4730
  3782   00254C                     u4731:
  3783   00254C  EF7E  F012         	goto	l282
  3784   002550                     u4730:
  3785   002550                     l4420:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;OBCII_PIC18F46K22.c: 510:     clear_parsing_notif();
  3789   002550  EC25  F01B         	call	_clear_parsing_notif	;wreg free
  3790   002554                     
  3791                           ;OBCII_PIC18F46K22.c: 512:     LCD_cursor_set(2,7);
  3792   002554  0E07               	movlw	7
  3793   002556  6E06               	movwf	LCD_cursor_set@column^0,c
  3794   002558  0E02               	movlw	2
  3795   00255A  EC42  F019         	call	_LCD_cursor_set
  3796   00255E                     
  3797                           ;OBCII_PIC18F46K22.c: 513:     LCD_write_string("     ");
  3798   00255E  0E4D               	movlw	low (STR_35+8)
  3799   002560  6E06               	movwf	LCD_write_string@string^0,c
  3800   002562  0EFF               	movlw	high (STR_35+8)
  3801   002564  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3802   002566  ECFC  F017         	call	_LCD_write_string	;wreg free
  3803                           
  3804                           ;OBCII_PIC18F46K22.c: 515:     LCD_cursor_set(1,7);
  3805   00256A  0E07               	movlw	7
  3806   00256C  6E06               	movwf	LCD_cursor_set@column^0,c
  3807   00256E  0E01               	movlw	1
  3808   002570  EC42  F019         	call	_LCD_cursor_set
  3809   002574                     
  3810                           ;OBCII_PIC18F46K22.c: 516:     LCD_write_string("VBatt");
  3811   002574  0EC2               	movlw	low STR_22
  3812   002576  6E06               	movwf	LCD_write_string@string^0,c
  3813   002578  0EFF               	movlw	high STR_22
  3814   00257A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3815   00257C  ECFC  F017         	call	_LCD_write_string	;wreg free
  3816   002580                     
  3817                           ;OBCII_PIC18F46K22.c: 517:     LCD_cursor_set(2,7);
  3818   002580  0E07               	movlw	7
  3819   002582  6E06               	movwf	LCD_cursor_set@column^0,c
  3820   002584  0E02               	movlw	2
  3821   002586  EC42  F019         	call	_LCD_cursor_set
  3822   00258A                     
  3823                           ;OBCII_PIC18F46K22.c: 519:     if (!strchr(buffer, 'V')) {
  3824   00258A  0E00               	movlw	low _buffer
  3825   00258C  6E03               	movwf	strchr@s^0,c
  3826   00258E  0E02               	movlw	high _buffer
  3827   002590  6E04               	movwf	(strchr@s+1)^0,c
  3828   002592  0E00               	movlw	0
  3829   002594  6E06               	movwf	(strchr@c+1)^0,c
  3830   002596  0E56               	movlw	86
  3831   002598  6E05               	movwf	strchr@c^0,c
  3832   00259A  ECF4  F019         	call	_strchr	;wreg free
  3833   00259E  5003               	movf	?_strchr^0,w,c
  3834   0025A0  1004               	iorwf	(?_strchr+1)^0,w,c
  3835   0025A2  A4D8               	btfss	status,2,c
  3836   0025A4  EFD6  F012         	goto	u4741
  3837   0025A8  EFD8  F012         	goto	u4740
  3838   0025AC                     u4741:
  3839   0025AC  EFE0  F012         	goto	l4434
  3840   0025B0                     u4740:
  3841   0025B0                     
  3842                           ;OBCII_PIC18F46K22.c: 520:         LCD_write_string("N/A");
  3843   0025B0  0EE8               	movlw	low STR_23
  3844   0025B2  6E06               	movwf	LCD_write_string@string^0,c
  3845   0025B4  0EFF               	movlw	high STR_23
  3846   0025B6  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3847   0025B8  ECFC  F017         	call	_LCD_write_string	;wreg free
  3848                           
  3849                           ;OBCII_PIC18F46K22.c: 521:     }
  3850   0025BC  EFE6  F012         	goto	l4436
  3851   0025C0                     l4434:
  3852                           
  3853                           ;OBCII_PIC18F46K22.c: 523:     LCD_write_string(buffer);
  3854   0025C0  0E00               	movlw	low _buffer
  3855   0025C2  6E06               	movwf	LCD_write_string@string^0,c
  3856   0025C4  0E02               	movlw	high _buffer
  3857   0025C6  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3858   0025C8  ECFC  F017         	call	_LCD_write_string	;wreg free
  3859   0025CC                     l4436:
  3860                           
  3861                           ;OBCII_PIC18F46K22.c: 526:     buffer_count = 0;
  3862   0025CC  0100               	movlb	0	; () banked
  3863   0025CE  6BD2               	clrf	_buffer_count& (0+255),b
  3864   0025D0                     
  3865                           ; BSR set to: 0
  3866                           ;OBCII_PIC18F46K22.c: 527:     message_complete = 0;
  3867   0025D0  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  3868   0025D2                     
  3869                           ; BSR set to: 0
  3870   0025D2  0012               	return		;funcret
  3871   0025D4                     __end_of_print_Vbatt:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _print_RPM *****************
  3875 ;; Defined at:
  3876 ;;		line 439 in file "OBCII_PIC18F46K22.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  i               1   35[BANK0 ] unsigned char 
  3881 ;;  clean_buffer   32    0[BANK0 ] unsigned char [32]
  3882 ;;  rpm_ptr         2   33[BANK0 ] PTR unsigned char 
  3883 ;;		 -> print_AI_Temp@clean_buffer(32), NULL(0), print_RPM@clean_buffer(32), buffer(256), 
  3884 ;;  j               1   32[BANK0 ] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Totals:         3      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;Total ram usage:       39 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 9
  3901 ;; This function calls:
  3902 ;;		_LCD_clear
  3903 ;;		_LCD_cursor_set
  3904 ;;		_LCD_write_string
  3905 ;;		_UART1_SendString
  3906 ;;		_clear_parsing_notif
  3907 ;;		_display_mm
  3908 ;;		_hex_char_to_value
  3909 ;;		_parsing_notif
  3910 ;;		_sprintf
  3911 ;;		_strlen
  3912 ;;		_strstr
  3913 ;; This function is called by:
  3914 ;;		_live_reading_mode
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text11
  3919   000FF8                     __ptext11:
  3920                           	callstack 0
  3921   000FF8                     _print_RPM:
  3922                           	callstack 19
  3923   000FF8                     
  3924                           ;OBCII_PIC18F46K22.c: 440:     UART1_SendString("010C\r");
  3925   000FF8  0EB0               	movlw	low STR_15
  3926   000FFA  6E04               	movwf	UART1_SendString@string^0,c
  3927   000FFC  0EFF               	movlw	high STR_15
  3928   000FFE  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3929   001000  ECA1  F019         	call	_UART1_SendString	;wreg free
  3930                           
  3931                           ;OBCII_PIC18F46K22.c: 442:     while(!message_complete) {
  3932   001004  EF25  F008         	goto	l4342
  3933   001008                     l260:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;OBCII_PIC18F46K22.c: 443:         if (PORTCbits.RC5 == 0) {
  3937   001008  BA82               	btfsc	130,5,c	;volatile
  3938   00100A  EF09  F008         	goto	u4581
  3939   00100E  EF0B  F008         	goto	u4580
  3940   001012                     u4581:
  3941   001012  EF23  F008         	goto	l4340
  3942   001016                     u4580:
  3943   001016                     
  3944                           ; BSR set to: 0
  3945                           ;OBCII_PIC18F46K22.c: 444:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3946   001016  0E68               	movlw	104
  3947   001018  6E4E               	movwf	??_print_RPM^0,c
  3948   00101A  0EE4               	movlw	228
  3949   00101C                     u7157:
  3950   00101C  2EE8               	decfsz	wreg,f,c
  3951   00101E  D7FE               	bra	u7157
  3952   001020  2E4E               	decfsz	??_print_RPM^0,f,c
  3953   001022  D7FC               	bra	u7157
  3954   001024  D000               	nop2	
  3955   001026                     
  3956                           ;OBCII_PIC18F46K22.c: 445:             if (PORTCbits.RC5 == 0) {
  3957   001026  BA82               	btfsc	130,5,c	;volatile
  3958   001028  EF18  F008         	goto	u4591
  3959   00102C  EF1A  F008         	goto	u4590
  3960   001030                     u4591:
  3961   001030  EF23  F008         	goto	l4340
  3962   001034                     u4590:
  3963   001034                     
  3964                           ;OBCII_PIC18F46K22.c: 446:                 LCD_clear();
  3965   001034  EC0A  F01B         	call	_LCD_clear	;wreg free
  3966   001038                     
  3967                           ;OBCII_PIC18F46K22.c: 447:                 display_mm();
  3968   001038  ECCA  F01A         	call	_display_mm	;wreg free
  3969   00103C                     
  3970                           ;OBCII_PIC18F46K22.c: 448:                 menu_sel = -1;
  3971   00103C  0100               	movlb	0	; () banked
  3972   00103E  69F3               	setf	_menu_sel& (0+255),b
  3973   001040  69F4               	setf	(_menu_sel+1)& (0+255),b
  3974   001042  EF68  F009         	goto	l263
  3975   001046                     l4340:
  3976                           
  3977                           ;OBCII_PIC18F46K22.c: 452:         parsing_notif();
  3978   001046  EC19  F01B         	call	_parsing_notif	;wreg free
  3979   00104A                     l4342:
  3980                           
  3981                           ;OBCII_PIC18F46K22.c: 442:     while(!message_complete) {
  3982   00104A  0100               	movlb	0	; () banked
  3983   00104C  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  3984   00104E  B4D8               	btfsc	status,2,c
  3985   001050  EF2C  F008         	goto	u4601
  3986   001054  EF2E  F008         	goto	u4600
  3987   001058                     u4601:
  3988   001058  EF04  F008         	goto	l260
  3989   00105C                     u4600:
  3990   00105C                     
  3991                           ; BSR set to: 0
  3992                           ;OBCII_PIC18F46K22.c: 454:     clear_parsing_notif();
  3993   00105C  EC25  F01B         	call	_clear_parsing_notif	;wreg free
  3994   001060                     
  3995                           ;OBCII_PIC18F46K22.c: 457:     char clean_buffer[32];;OBCII_PIC18F46K22.c: 458:     uint
      +                          8_t j = 0;
  3996   001060  0100               	movlb	0	; () banked
  3997   001062  6B80               	clrf	print_RPM@j& (0+255),b
  3998   001064                     
  3999                           ; BSR set to: 0
  4000                           ;OBCII_PIC18F46K22.c: 459:     for (uint8_t i = 0; i < buffer_count && j < sizeof(clean_
      +                          buffer) - 1; i++) {
  4001   001064  6B83               	clrf	print_RPM@i& (0+255),b
  4002   001066  EF97  F008         	goto	l4368
  4003   00106A                     l4350:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;OBCII_PIC18F46K22.c: 460:         if ((buffer[i] >= '0' && buffer[i] <= '9') ||
  4007   00106A  0E00               	movlw	low _buffer
  4008   00106C  2583               	addwf	print_RPM@i& (0+255),w,b
  4009   00106E  6ED9               	movwf	fsr2l,c
  4010   001070  6ADA               	clrf	fsr2h,c
  4011   001072  0E02               	movlw	high _buffer
  4012   001074  22DA               	addwfc	fsr2h,f,c
  4013   001076  0E2F               	movlw	47
  4014   001078  64DF               	cpfsgt	indf2,c
  4015   00107A  EF41  F008         	goto	u4611
  4016   00107E  EF43  F008         	goto	u4610
  4017   001082                     u4611:
  4018   001082  EF51  F008         	goto	l4354
  4019   001086                     u4610:
  4020   001086                     
  4021                           ; BSR set to: 0
  4022   001086  0E00               	movlw	low _buffer
  4023   001088  2583               	addwf	print_RPM@i& (0+255),w,b
  4024   00108A  6ED9               	movwf	fsr2l,c
  4025   00108C  6ADA               	clrf	fsr2h,c
  4026   00108E  0E02               	movlw	high _buffer
  4027   001090  22DA               	addwfc	fsr2h,f,c
  4028   001092  0E39               	movlw	57
  4029   001094  64DF               	cpfsgt	indf2,c
  4030   001096  EF4F  F008         	goto	u4621
  4031   00109A  EF51  F008         	goto	u4620
  4032   00109E                     u4621:
  4033   00109E  EF89  F008         	goto	l4362
  4034   0010A2                     u4620:
  4035   0010A2                     l4354:
  4036                           
  4037                           ; BSR set to: 0
  4038   0010A2  0E00               	movlw	low _buffer
  4039   0010A4  2583               	addwf	print_RPM@i& (0+255),w,b
  4040   0010A6  6ED9               	movwf	fsr2l,c
  4041   0010A8  6ADA               	clrf	fsr2h,c
  4042   0010AA  0E02               	movlw	high _buffer
  4043   0010AC  22DA               	addwfc	fsr2h,f,c
  4044   0010AE  0E40               	movlw	64
  4045   0010B0  64DF               	cpfsgt	indf2,c
  4046   0010B2  EF5D  F008         	goto	u4631
  4047   0010B6  EF5F  F008         	goto	u4630
  4048   0010BA                     u4631:
  4049   0010BA  EF6D  F008         	goto	l4358
  4050   0010BE                     u4630:
  4051   0010BE                     
  4052                           ; BSR set to: 0
  4053   0010BE  0E00               	movlw	low _buffer
  4054   0010C0  2583               	addwf	print_RPM@i& (0+255),w,b
  4055   0010C2  6ED9               	movwf	fsr2l,c
  4056   0010C4  6ADA               	clrf	fsr2h,c
  4057   0010C6  0E02               	movlw	high _buffer
  4058   0010C8  22DA               	addwfc	fsr2h,f,c
  4059   0010CA  0E46               	movlw	70
  4060   0010CC  64DF               	cpfsgt	indf2,c
  4061   0010CE  EF6B  F008         	goto	u4641
  4062   0010D2  EF6D  F008         	goto	u4640
  4063   0010D6                     u4641:
  4064   0010D6  EF89  F008         	goto	l4362
  4065   0010DA                     u4640:
  4066   0010DA                     l4358:
  4067                           
  4068                           ; BSR set to: 0
  4069   0010DA  0E00               	movlw	low _buffer
  4070   0010DC  2583               	addwf	print_RPM@i& (0+255),w,b
  4071   0010DE  6ED9               	movwf	fsr2l,c
  4072   0010E0  6ADA               	clrf	fsr2h,c
  4073   0010E2  0E02               	movlw	high _buffer
  4074   0010E4  22DA               	addwfc	fsr2h,f,c
  4075   0010E6  0E60               	movlw	96
  4076   0010E8  64DF               	cpfsgt	indf2,c
  4077   0010EA  EF79  F008         	goto	u4651
  4078   0010EE  EF7B  F008         	goto	u4650
  4079   0010F2                     u4651:
  4080   0010F2  EF96  F008         	goto	l4366
  4081   0010F6                     u4650:
  4082   0010F6                     
  4083                           ; BSR set to: 0
  4084   0010F6  0E00               	movlw	low _buffer
  4085   0010F8  2583               	addwf	print_RPM@i& (0+255),w,b
  4086   0010FA  6ED9               	movwf	fsr2l,c
  4087   0010FC  6ADA               	clrf	fsr2h,c
  4088   0010FE  0E02               	movlw	high _buffer
  4089   001100  22DA               	addwfc	fsr2h,f,c
  4090   001102  0E67               	movlw	103
  4091   001104  60DF               	cpfslt	indf2,c
  4092   001106  EF87  F008         	goto	u4661
  4093   00110A  EF89  F008         	goto	u4660
  4094   00110E                     u4661:
  4095   00110E  EF96  F008         	goto	l4366
  4096   001112                     u4660:
  4097   001112                     l4362:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;OBCII_PIC18F46K22.c: 462:             (buffer[i] >= 'a' && buffer[i] <= 'f')) {;OBCII_P
      +                          IC18F46K22.c: 463:             clean_buffer[j++] = buffer[i];
  4101   001112  0E00               	movlw	low _buffer
  4102   001114  2583               	addwf	print_RPM@i& (0+255),w,b
  4103   001116  6ED9               	movwf	fsr2l,c
  4104   001118  6ADA               	clrf	fsr2h,c
  4105   00111A  0E02               	movlw	high _buffer
  4106   00111C  22DA               	addwfc	fsr2h,f,c
  4107   00111E  5180               	movf	print_RPM@j& (0+255),w,b
  4108   001120  0F60               	addlw	low print_RPM@clean_buffer
  4109   001122  6EE1               	movwf	fsr1l,c
  4110   001124  6AE2               	clrf	fsr1h,c
  4111   001126  CFDF FFE7          	movff	indf2,indf1
  4112   00112A                     
  4113                           ; BSR set to: 0
  4114   00112A  2B80               	incf	print_RPM@j& (0+255),f,b
  4115   00112C                     l4366:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;OBCII_PIC18F46K22.c: 465:     }
  4119   00112C  2B83               	incf	print_RPM@i& (0+255),f,b
  4120   00112E                     l4368:
  4121                           
  4122                           ; BSR set to: 0
  4123   00112E  51D2               	movf	_buffer_count& (0+255),w,b
  4124   001130  5D83               	subwf	print_RPM@i& (0+255),w,b
  4125   001132  B0D8               	btfsc	status,0,c
  4126   001134  EF9E  F008         	goto	u4671
  4127   001138  EFA0  F008         	goto	u4670
  4128   00113C                     u4671:
  4129   00113C  EFA8  F008         	goto	l4372
  4130   001140                     u4670:
  4131   001140                     
  4132                           ; BSR set to: 0
  4133   001140  0E1E               	movlw	30
  4134   001142  6580               	cpfsgt	print_RPM@j& (0+255),b
  4135   001144  EFA6  F008         	goto	u4681
  4136   001148  EFA8  F008         	goto	u4680
  4137   00114C                     u4681:
  4138   00114C  EF35  F008         	goto	l4350
  4139   001150                     u4680:
  4140   001150                     l4372:
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;OBCII_PIC18F46K22.c: 466:     clean_buffer[j] = '\0';
  4144   001150  5180               	movf	print_RPM@j& (0+255),w,b
  4145   001152  0F60               	addlw	low print_RPM@clean_buffer
  4146   001154  6ED9               	movwf	fsr2l,c
  4147   001156  6ADA               	clrf	fsr2h,c
  4148   001158  6ADF               	clrf	indf2,c
  4149   00115A                     
  4150                           ; BSR set to: 0
  4151                           ;OBCII_PIC18F46K22.c: 469:     char* rpm_ptr = strstr(clean_buffer, "410C");
  4152   00115A  0E60               	movlw	low print_RPM@clean_buffer
  4153   00115C  6E0A               	movwf	strstr@h^0,c
  4154   00115E  6A0B               	clrf	(strstr@h+1)^0,c
  4155   001160  0ED2               	movlw	low STR_16
  4156   001162  6E0C               	movwf	strstr@n^0,c
  4157   001164  0EFF               	movlw	high STR_16
  4158   001166  6E0D               	movwf	(strstr@n+1)^0,c
  4159   001168  EC90  F014         	call	_strstr	;wreg free
  4160   00116C  C00A  F081         	movff	?_strstr,print_RPM@rpm_ptr
  4161   001170  C00B  F082         	movff	?_strstr+1,print_RPM@rpm_ptr+1
  4162   001174                     
  4163                           ;OBCII_PIC18F46K22.c: 470:     if (rpm_ptr && strlen(rpm_ptr) >= 8) {
  4164   001174  0100               	movlb	0	; () banked
  4165   001176  5181               	movf	print_RPM@rpm_ptr& (0+255),w,b
  4166   001178  1182               	iorwf	(print_RPM@rpm_ptr+1)& (0+255),w,b
  4167   00117A  B4D8               	btfsc	status,2,c
  4168   00117C  EFC2  F008         	goto	u4691
  4169   001180  EFC4  F008         	goto	u4690
  4170   001184                     u4691:
  4171   001184  EF33  F009         	goto	l4384
  4172   001188                     u4690:
  4173   001188                     
  4174                           ; BSR set to: 0
  4175   001188  C081  F003         	movff	print_RPM@rpm_ptr,strlen@s
  4176   00118C  C082  F004         	movff	print_RPM@rpm_ptr+1,strlen@s+1
  4177   001190  ECCC  F019         	call	_strlen	;wreg free
  4178   001194  5004               	movf	(?_strlen+1)^0,w,c
  4179   001196  E109               	bnz	u4700
  4180   001198  0E08               	movlw	8
  4181   00119A  5C03               	subwf	?_strlen^0,w,c
  4182   00119C  A0D8               	btfss	status,0,c
  4183   00119E  EFD3  F008         	goto	u4701
  4184   0011A2  EFD5  F008         	goto	u4700
  4185   0011A6                     u4701:
  4186   0011A6  EF33  F009         	goto	l4384
  4187   0011AA                     u4700:
  4188   0011AA                     
  4189                           ;OBCII_PIC18F46K22.c: 471:         A_rpm = (hex_char_to_value(rpm_ptr[4]) << 4) | hex_ch
      +                          ar_to_value(rpm_ptr[5]);
  4190   0011AA  0100               	movlb	0	; () banked
  4191   0011AC  EE20 F004          	lfsr	2,4
  4192   0011B0  5181               	movf	print_RPM@rpm_ptr& (0+255),w,b
  4193   0011B2  26D9               	addwf	fsr2l,f,c
  4194   0011B4  5182               	movf	(print_RPM@rpm_ptr+1)& (0+255),w,b
  4195   0011B6  22DA               	addwfc	fsr2h,f,c
  4196   0011B8  50DF               	movf	indf2,w,c
  4197   0011BA  ECBD  F017         	call	_hex_char_to_value
  4198   0011BE  6E4E               	movwf	??_print_RPM^0,c
  4199   0011C0  6A4F               	clrf	(??_print_RPM+1)^0,c
  4200   0011C2  3A4E               	swapf	??_print_RPM^0,f,c
  4201   0011C4  3A4F               	swapf	(??_print_RPM+1)^0,f,c
  4202   0011C6  0EF0               	movlw	240
  4203   0011C8  164F               	andwf	(??_print_RPM+1)^0,f,c
  4204   0011CA  504E               	movf	??_print_RPM^0,w,c
  4205   0011CC  0B0F               	andlw	15
  4206   0011CE  124F               	iorwf	(??_print_RPM+1)^0,f,c
  4207   0011D0  0EF0               	movlw	240
  4208   0011D2  164E               	andwf	??_print_RPM^0,f,c
  4209   0011D4  0100               	movlb	0	; () banked
  4210   0011D6  EE20 F005          	lfsr	2,5
  4211   0011DA  5181               	movf	print_RPM@rpm_ptr& (0+255),w,b
  4212   0011DC  26D9               	addwf	fsr2l,f,c
  4213   0011DE  5182               	movf	(print_RPM@rpm_ptr+1)& (0+255),w,b
  4214   0011E0  22DA               	addwfc	fsr2h,f,c
  4215   0011E2  50DF               	movf	indf2,w,c
  4216   0011E4  ECBD  F017         	call	_hex_char_to_value
  4217   0011E8  6E50               	movwf	(??_print_RPM+2)^0,c
  4218   0011EA  5050               	movf	(??_print_RPM+2)^0,w,c
  4219   0011EC  104E               	iorwf	??_print_RPM^0,w,c
  4220   0011EE  0100               	movlb	0	; () banked
  4221   0011F0  6FCB               	movwf	_A_rpm& (0+255),b
  4222   0011F2  504F               	movf	(??_print_RPM+1)^0,w,c
  4223   0011F4  6FCC               	movwf	(_A_rpm+1)& (0+255),b
  4224                           
  4225                           ;OBCII_PIC18F46K22.c: 472:         B_rpm = (hex_char_to_value(rpm_ptr[6]) << 4) | hex_ch
      +                          ar_to_value(rpm_ptr[7]);
  4226   0011F6  EE20 F006          	lfsr	2,6
  4227   0011FA  5181               	movf	print_RPM@rpm_ptr& (0+255),w,b
  4228   0011FC  26D9               	addwf	fsr2l,f,c
  4229   0011FE  5182               	movf	(print_RPM@rpm_ptr+1)& (0+255),w,b
  4230   001200  22DA               	addwfc	fsr2h,f,c
  4231   001202  50DF               	movf	indf2,w,c
  4232   001204  ECBD  F017         	call	_hex_char_to_value
  4233   001208  6E4E               	movwf	??_print_RPM^0,c
  4234   00120A  6A4F               	clrf	(??_print_RPM+1)^0,c
  4235   00120C  3A4E               	swapf	??_print_RPM^0,f,c
  4236   00120E  3A4F               	swapf	(??_print_RPM+1)^0,f,c
  4237   001210  0EF0               	movlw	240
  4238   001212  164F               	andwf	(??_print_RPM+1)^0,f,c
  4239   001214  504E               	movf	??_print_RPM^0,w,c
  4240   001216  0B0F               	andlw	15
  4241   001218  124F               	iorwf	(??_print_RPM+1)^0,f,c
  4242   00121A  0EF0               	movlw	240
  4243   00121C  164E               	andwf	??_print_RPM^0,f,c
  4244   00121E  0100               	movlb	0	; () banked
  4245   001220  EE20 F007          	lfsr	2,7
  4246   001224  5181               	movf	print_RPM@rpm_ptr& (0+255),w,b
  4247   001226  26D9               	addwf	fsr2l,f,c
  4248   001228  5182               	movf	(print_RPM@rpm_ptr+1)& (0+255),w,b
  4249   00122A  22DA               	addwfc	fsr2h,f,c
  4250   00122C  50DF               	movf	indf2,w,c
  4251   00122E  ECBD  F017         	call	_hex_char_to_value
  4252   001232  6E50               	movwf	(??_print_RPM+2)^0,c
  4253   001234  5050               	movf	(??_print_RPM+2)^0,w,c
  4254   001236  104E               	iorwf	??_print_RPM^0,w,c
  4255   001238  0100               	movlb	0	; () banked
  4256   00123A  6FC9               	movwf	_B_rpm& (0+255),b
  4257   00123C  504F               	movf	(??_print_RPM+1)^0,w,c
  4258   00123E  6FCA               	movwf	(_B_rpm+1)& (0+255),b
  4259   001240                     
  4260                           ; BSR set to: 0
  4261                           ;OBCII_PIC18F46K22.c: 473:         RPM = ((A_rpm << 8) | B_rpm) / 4;
  4262   001240  51CB               	movf	_A_rpm& (0+255),w,b
  4263   001242  6E4F               	movwf	(??_print_RPM+1)^0,c
  4264   001244  6A4E               	clrf	??_print_RPM^0,c
  4265   001246  51C9               	movf	_B_rpm& (0+255),w,b
  4266   001248  124E               	iorwf	??_print_RPM^0,f,c
  4267   00124A  51CA               	movf	(_B_rpm+1)& (0+255),w,b
  4268   00124C  124F               	iorwf	(??_print_RPM+1)^0,f,c
  4269   00124E  90D8               	bcf	status,0,c
  4270   001250  324F               	rrcf	(??_print_RPM+1)^0,f,c
  4271   001252  324E               	rrcf	??_print_RPM^0,f,c
  4272   001254  90D8               	bcf	status,0,c
  4273   001256  324F               	rrcf	(??_print_RPM+1)^0,f,c
  4274   001258  324E               	rrcf	??_print_RPM^0,f,c
  4275   00125A  C04E  F0C7         	movff	??_print_RPM,_RPM
  4276   00125E  C04F  F0C8         	movff	??_print_RPM+1,_RPM+1
  4277                           
  4278                           ;OBCII_PIC18F46K22.c: 474:     } else {
  4279   001262  EF38  F009         	goto	l4386
  4280   001266                     l4384:
  4281                           
  4282                           ;OBCII_PIC18F46K22.c: 475:         RPM = 0;
  4283   001266  0E00               	movlw	0
  4284   001268  0100               	movlb	0	; () banked
  4285   00126A  6FC8               	movwf	(_RPM+1)& (0+255),b
  4286   00126C  0E00               	movlw	0
  4287   00126E  6FC7               	movwf	_RPM& (0+255),b
  4288   001270                     l4386:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;OBCII_PIC18F46K22.c: 479:     sprintf(rpm_string, "%u", RPM);
  4292   001270  0EE3               	movlw	low _rpm_string
  4293   001272  6E38               	movwf	sprintf@s^0,c
  4294   001274  6A39               	clrf	(sprintf@s+1)^0,c
  4295   001276  0EF4               	movlw	low STR_17
  4296   001278  6E3A               	movwf	sprintf@fmt^0,c
  4297   00127A  0EFF               	movlw	high STR_17
  4298   00127C  6E3B               	movwf	(sprintf@fmt+1)^0,c
  4299   00127E  C0C7  F03C         	movff	_RPM,?_sprintf+4
  4300   001282  C0C8  F03D         	movff	_RPM+1,?_sprintf+5
  4301   001286  EC3B  F01A         	call	_sprintf	;wreg free
  4302   00128A                     
  4303                           ;OBCII_PIC18F46K22.c: 481:     LCD_cursor_set(2,1);
  4304   00128A  0E01               	movlw	1
  4305   00128C  6E06               	movwf	LCD_cursor_set@column^0,c
  4306   00128E  0E02               	movlw	2
  4307   001290  EC42  F019         	call	_LCD_cursor_set
  4308   001294                     
  4309                           ;OBCII_PIC18F46K22.c: 482:     LCD_write_string("     ");
  4310   001294  0E4D               	movlw	low (STR_35+8)
  4311   001296  6E06               	movwf	LCD_write_string@string^0,c
  4312   001298  0EFF               	movlw	high (STR_35+8)
  4313   00129A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4314   00129C  ECFC  F017         	call	_LCD_write_string	;wreg free
  4315   0012A0                     
  4316                           ;OBCII_PIC18F46K22.c: 484:     LCD_cursor_set(1,1);
  4317   0012A0  0E01               	movlw	1
  4318   0012A2  6E06               	movwf	LCD_cursor_set@column^0,c
  4319   0012A4  0E01               	movlw	1
  4320   0012A6  EC42  F019         	call	_LCD_cursor_set
  4321   0012AA                     
  4322                           ;OBCII_PIC18F46K22.c: 485:     LCD_write_string("RPM");
  4323   0012AA  0EEC               	movlw	low STR_19
  4324   0012AC  6E06               	movwf	LCD_write_string@string^0,c
  4325   0012AE  0EFF               	movlw	high STR_19
  4326   0012B0  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4327   0012B2  ECFC  F017         	call	_LCD_write_string	;wreg free
  4328   0012B6                     
  4329                           ;OBCII_PIC18F46K22.c: 486:     LCD_cursor_set(2,1);
  4330   0012B6  0E01               	movlw	1
  4331   0012B8  6E06               	movwf	LCD_cursor_set@column^0,c
  4332   0012BA  0E02               	movlw	2
  4333   0012BC  EC42  F019         	call	_LCD_cursor_set
  4334   0012C0                     
  4335                           ;OBCII_PIC18F46K22.c: 487:     LCD_write_string(rpm_string);
  4336   0012C0  0EE3               	movlw	low _rpm_string
  4337   0012C2  6E06               	movwf	LCD_write_string@string^0,c
  4338   0012C4  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4339   0012C6  ECFC  F017         	call	_LCD_write_string	;wreg free
  4340   0012CA                     
  4341                           ;OBCII_PIC18F46K22.c: 489:     buffer_count = 0;
  4342   0012CA  0100               	movlb	0	; () banked
  4343   0012CC  6BD2               	clrf	_buffer_count& (0+255),b
  4344   0012CE                     
  4345                           ; BSR set to: 0
  4346                           ;OBCII_PIC18F46K22.c: 490:     message_complete = 0;
  4347   0012CE  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  4348   0012D0                     l263:
  4349                           
  4350                           ; BSR set to: 0
  4351   0012D0  0012               	return		;funcret
  4352   0012D2                     __end_of_print_RPM:
  4353                           	callstack 0
  4354                           
  4355 ;; *************** function _print_AI_Temp *****************
  4356 ;; Defined at:
  4357 ;;		line 530 in file "OBCII_PIC18F46K22.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  i               1   35[BANK0 ] unsigned char 
  4362 ;;  clean_buffer   32    0[BANK0 ] unsigned char [32]
  4363 ;;  ait_ptr         2   33[BANK0 ] PTR unsigned char 
  4364 ;;		 -> print_AI_Temp@clean_buffer(32), NULL(0), print_RPM@clean_buffer(32), buffer(256), 
  4365 ;;  j               1   32[BANK0 ] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Totals:         3      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;Total ram usage:       39 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; Hardware stack levels required when called: 9
  4382 ;; This function calls:
  4383 ;;		_LCD_clear
  4384 ;;		_LCD_cursor_set
  4385 ;;		_LCD_write_string
  4386 ;;		_UART1_SendString
  4387 ;;		_clear_parsing_notif
  4388 ;;		_display_mm
  4389 ;;		_hex_char_to_value
  4390 ;;		_parsing_notif
  4391 ;;		_sprintf
  4392 ;;		_strlen
  4393 ;;		_strstr
  4394 ;; This function is called by:
  4395 ;;		_live_reading_mode
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text12
  4400   0012D2                     __ptext12:
  4401                           	callstack 0
  4402   0012D2                     _print_AI_Temp:
  4403                           	callstack 19
  4404   0012D2                     
  4405                           ;OBCII_PIC18F46K22.c: 531:     UART1_SendString("010F\r");
  4406   0012D2  0EB6               	movlw	low STR_24
  4407   0012D4  6E04               	movwf	UART1_SendString@string^0,c
  4408   0012D6  0EFF               	movlw	high STR_24
  4409   0012D8  6E05               	movwf	(UART1_SendString@string+1)^0,c
  4410   0012DA  ECA1  F019         	call	_UART1_SendString	;wreg free
  4411                           
  4412                           ;OBCII_PIC18F46K22.c: 533:     while(!message_complete) {
  4413   0012DE  EF92  F009         	goto	l4456
  4414   0012E2                     l292:
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;OBCII_PIC18F46K22.c: 534:         if (PORTCbits.RC5 == 0) {
  4418   0012E2  BA82               	btfsc	130,5,c	;volatile
  4419   0012E4  EF76  F009         	goto	u4751
  4420   0012E8  EF78  F009         	goto	u4750
  4421   0012EC                     u4751:
  4422   0012EC  EF90  F009         	goto	l4454
  4423   0012F0                     u4750:
  4424   0012F0                     
  4425                           ; BSR set to: 0
  4426                           ;OBCII_PIC18F46K22.c: 535:             _delay((unsigned long)((20)*(16000000/4000.0)));
  4427   0012F0  0E68               	movlw	104
  4428   0012F2  6E4E               	movwf	??_print_AI_Temp^0,c
  4429   0012F4  0EE4               	movlw	228
  4430   0012F6                     u7167:
  4431   0012F6  2EE8               	decfsz	wreg,f,c
  4432   0012F8  D7FE               	bra	u7167
  4433   0012FA  2E4E               	decfsz	??_print_AI_Temp^0,f,c
  4434   0012FC  D7FC               	bra	u7167
  4435   0012FE  D000               	nop2	
  4436   001300                     
  4437                           ;OBCII_PIC18F46K22.c: 536:             if (PORTCbits.RC5 == 0) {
  4438   001300  BA82               	btfsc	130,5,c	;volatile
  4439   001302  EF85  F009         	goto	u4761
  4440   001306  EF87  F009         	goto	u4760
  4441   00130A                     u4761:
  4442   00130A  EF90  F009         	goto	l4454
  4443   00130E                     u4760:
  4444   00130E                     
  4445                           ;OBCII_PIC18F46K22.c: 537:                 LCD_clear();
  4446   00130E  EC0A  F01B         	call	_LCD_clear	;wreg free
  4447   001312                     
  4448                           ;OBCII_PIC18F46K22.c: 538:                 display_mm();
  4449   001312  ECCA  F01A         	call	_display_mm	;wreg free
  4450   001316                     
  4451                           ;OBCII_PIC18F46K22.c: 539:                 menu_sel = -1;
  4452   001316  0100               	movlb	0	; () banked
  4453   001318  69F3               	setf	_menu_sel& (0+255),b
  4454   00131A  69F4               	setf	(_menu_sel+1)& (0+255),b
  4455   00131C  EFB0  F00A         	goto	l295
  4456   001320                     l4454:
  4457                           
  4458                           ;OBCII_PIC18F46K22.c: 543:         parsing_notif();
  4459   001320  EC19  F01B         	call	_parsing_notif	;wreg free
  4460   001324                     l4456:
  4461                           
  4462                           ;OBCII_PIC18F46K22.c: 533:     while(!message_complete) {
  4463   001324  0100               	movlb	0	; () banked
  4464   001326  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  4465   001328  B4D8               	btfsc	status,2,c
  4466   00132A  EF99  F009         	goto	u4771
  4467   00132E  EF9B  F009         	goto	u4770
  4468   001332                     u4771:
  4469   001332  EF71  F009         	goto	l292
  4470   001336                     u4770:
  4471   001336                     
  4472                           ; BSR set to: 0
  4473                           ;OBCII_PIC18F46K22.c: 545:     clear_parsing_notif();
  4474   001336  EC25  F01B         	call	_clear_parsing_notif	;wreg free
  4475   00133A                     
  4476                           ;OBCII_PIC18F46K22.c: 548:     char clean_buffer[32];;OBCII_PIC18F46K22.c: 549:     uint
      +                          8_t j = 0;
  4477   00133A  0100               	movlb	0	; () banked
  4478   00133C  6B80               	clrf	print_AI_Temp@j& (0+255),b
  4479   00133E                     
  4480                           ; BSR set to: 0
  4481                           ;OBCII_PIC18F46K22.c: 550:     for (uint8_t i = 0; i < buffer_count && j < sizeof(clean_
      +                          buffer) - 1; i++) {
  4482   00133E  6B83               	clrf	print_AI_Temp@i& (0+255),b
  4483   001340  EF04  F00A         	goto	l4482
  4484   001344                     l4464:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;OBCII_PIC18F46K22.c: 551:         if ((buffer[i] >= '0' && buffer[i] <= '9') ||
  4488   001344  0E00               	movlw	low _buffer
  4489   001346  2583               	addwf	print_AI_Temp@i& (0+255),w,b
  4490   001348  6ED9               	movwf	fsr2l,c
  4491   00134A  6ADA               	clrf	fsr2h,c
  4492   00134C  0E02               	movlw	high _buffer
  4493   00134E  22DA               	addwfc	fsr2h,f,c
  4494   001350  0E2F               	movlw	47
  4495   001352  64DF               	cpfsgt	indf2,c
  4496   001354  EFAE  F009         	goto	u4781
  4497   001358  EFB0  F009         	goto	u4780
  4498   00135C                     u4781:
  4499   00135C  EFBE  F009         	goto	l4468
  4500   001360                     u4780:
  4501   001360                     
  4502                           ; BSR set to: 0
  4503   001360  0E00               	movlw	low _buffer
  4504   001362  2583               	addwf	print_AI_Temp@i& (0+255),w,b
  4505   001364  6ED9               	movwf	fsr2l,c
  4506   001366  6ADA               	clrf	fsr2h,c
  4507   001368  0E02               	movlw	high _buffer
  4508   00136A  22DA               	addwfc	fsr2h,f,c
  4509   00136C  0E39               	movlw	57
  4510   00136E  64DF               	cpfsgt	indf2,c
  4511   001370  EFBC  F009         	goto	u4791
  4512   001374  EFBE  F009         	goto	u4790
  4513   001378                     u4791:
  4514   001378  EFF6  F009         	goto	l4476
  4515   00137C                     u4790:
  4516   00137C                     l4468:
  4517                           
  4518                           ; BSR set to: 0
  4519   00137C  0E00               	movlw	low _buffer
  4520   00137E  2583               	addwf	print_AI_Temp@i& (0+255),w,b
  4521   001380  6ED9               	movwf	fsr2l,c
  4522   001382  6ADA               	clrf	fsr2h,c
  4523   001384  0E02               	movlw	high _buffer
  4524   001386  22DA               	addwfc	fsr2h,f,c
  4525   001388  0E40               	movlw	64
  4526   00138A  64DF               	cpfsgt	indf2,c
  4527   00138C  EFCA  F009         	goto	u4801
  4528   001390  EFCC  F009         	goto	u4800
  4529   001394                     u4801:
  4530   001394  EFDA  F009         	goto	l4472
  4531   001398                     u4800:
  4532   001398                     
  4533                           ; BSR set to: 0
  4534   001398  0E00               	movlw	low _buffer
  4535   00139A  2583               	addwf	print_AI_Temp@i& (0+255),w,b
  4536   00139C  6ED9               	movwf	fsr2l,c
  4537   00139E  6ADA               	clrf	fsr2h,c
  4538   0013A0  0E02               	movlw	high _buffer
  4539   0013A2  22DA               	addwfc	fsr2h,f,c
  4540   0013A4  0E46               	movlw	70
  4541   0013A6  64DF               	cpfsgt	indf2,c
  4542   0013A8  EFD8  F009         	goto	u4811
  4543   0013AC  EFDA  F009         	goto	u4810
  4544   0013B0                     u4811:
  4545   0013B0  EFF6  F009         	goto	l4476
  4546   0013B4                     u4810:
  4547   0013B4                     l4472:
  4548                           
  4549                           ; BSR set to: 0
  4550   0013B4  0E00               	movlw	low _buffer
  4551   0013B6  2583               	addwf	print_AI_Temp@i& (0+255),w,b
  4552   0013B8  6ED9               	movwf	fsr2l,c
  4553   0013BA  6ADA               	clrf	fsr2h,c
  4554   0013BC  0E02               	movlw	high _buffer
  4555   0013BE  22DA               	addwfc	fsr2h,f,c
  4556   0013C0  0E60               	movlw	96
  4557   0013C2  64DF               	cpfsgt	indf2,c
  4558   0013C4  EFE6  F009         	goto	u4821
  4559   0013C8  EFE8  F009         	goto	u4820
  4560   0013CC                     u4821:
  4561   0013CC  EF03  F00A         	goto	l4480
  4562   0013D0                     u4820:
  4563   0013D0                     
  4564                           ; BSR set to: 0
  4565   0013D0  0E00               	movlw	low _buffer
  4566   0013D2  2583               	addwf	print_AI_Temp@i& (0+255),w,b
  4567   0013D4  6ED9               	movwf	fsr2l,c
  4568   0013D6  6ADA               	clrf	fsr2h,c
  4569   0013D8  0E02               	movlw	high _buffer
  4570   0013DA  22DA               	addwfc	fsr2h,f,c
  4571   0013DC  0E67               	movlw	103
  4572   0013DE  60DF               	cpfslt	indf2,c
  4573   0013E0  EFF4  F009         	goto	u4831
  4574   0013E4  EFF6  F009         	goto	u4830
  4575   0013E8                     u4831:
  4576   0013E8  EF03  F00A         	goto	l4480
  4577   0013EC                     u4830:
  4578   0013EC                     l4476:
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;OBCII_PIC18F46K22.c: 553:             (buffer[i] >= 'a' && buffer[i] <= 'f')) {;OBCII_P
      +                          IC18F46K22.c: 554:             clean_buffer[j++] = buffer[i];
  4582   0013EC  0E00               	movlw	low _buffer
  4583   0013EE  2583               	addwf	print_AI_Temp@i& (0+255),w,b
  4584   0013F0  6ED9               	movwf	fsr2l,c
  4585   0013F2  6ADA               	clrf	fsr2h,c
  4586   0013F4  0E02               	movlw	high _buffer
  4587   0013F6  22DA               	addwfc	fsr2h,f,c
  4588   0013F8  5180               	movf	print_AI_Temp@j& (0+255),w,b
  4589   0013FA  0F60               	addlw	low print_AI_Temp@clean_buffer
  4590   0013FC  6EE1               	movwf	fsr1l,c
  4591   0013FE  6AE2               	clrf	fsr1h,c
  4592   001400  CFDF FFE7          	movff	indf2,indf1
  4593   001404                     
  4594                           ; BSR set to: 0
  4595   001404  2B80               	incf	print_AI_Temp@j& (0+255),f,b
  4596   001406                     l4480:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;OBCII_PIC18F46K22.c: 556:     }
  4600   001406  2B83               	incf	print_AI_Temp@i& (0+255),f,b
  4601   001408                     l4482:
  4602                           
  4603                           ; BSR set to: 0
  4604   001408  51D2               	movf	_buffer_count& (0+255),w,b
  4605   00140A  5D83               	subwf	print_AI_Temp@i& (0+255),w,b
  4606   00140C  B0D8               	btfsc	status,0,c
  4607   00140E  EF0B  F00A         	goto	u4841
  4608   001412  EF0D  F00A         	goto	u4840
  4609   001416                     u4841:
  4610   001416  EF15  F00A         	goto	l4486
  4611   00141A                     u4840:
  4612   00141A                     
  4613                           ; BSR set to: 0
  4614   00141A  0E1E               	movlw	30
  4615   00141C  6580               	cpfsgt	print_AI_Temp@j& (0+255),b
  4616   00141E  EF13  F00A         	goto	u4851
  4617   001422  EF15  F00A         	goto	u4850
  4618   001426                     u4851:
  4619   001426  EFA2  F009         	goto	l4464
  4620   00142A                     u4850:
  4621   00142A                     l4486:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;OBCII_PIC18F46K22.c: 557:     clean_buffer[j] = '\0';
  4625   00142A  5180               	movf	print_AI_Temp@j& (0+255),w,b
  4626   00142C  0F60               	addlw	low print_AI_Temp@clean_buffer
  4627   00142E  6ED9               	movwf	fsr2l,c
  4628   001430  6ADA               	clrf	fsr2h,c
  4629   001432  6ADF               	clrf	indf2,c
  4630   001434                     
  4631                           ; BSR set to: 0
  4632                           ;OBCII_PIC18F46K22.c: 560:     char* ait_ptr = strstr(clean_buffer, "410F");
  4633   001434  0E60               	movlw	low print_AI_Temp@clean_buffer
  4634   001436  6E0A               	movwf	strstr@h^0,c
  4635   001438  6A0B               	clrf	(strstr@h+1)^0,c
  4636   00143A  0ED7               	movlw	low STR_25
  4637   00143C  6E0C               	movwf	strstr@n^0,c
  4638   00143E  0EFF               	movlw	high STR_25
  4639   001440  6E0D               	movwf	(strstr@n+1)^0,c
  4640   001442  EC90  F014         	call	_strstr	;wreg free
  4641   001446  C00A  F081         	movff	?_strstr,print_AI_Temp@ait_ptr
  4642   00144A  C00B  F082         	movff	?_strstr+1,print_AI_Temp@ait_ptr+1
  4643   00144E                     
  4644                           ;OBCII_PIC18F46K22.c: 561:     if (ait_ptr && strlen(ait_ptr) >= 6) {
  4645   00144E  0100               	movlb	0	; () banked
  4646   001450  5181               	movf	print_AI_Temp@ait_ptr& (0+255),w,b
  4647   001452  1182               	iorwf	(print_AI_Temp@ait_ptr+1)& (0+255),w,b
  4648   001454  B4D8               	btfsc	status,2,c
  4649   001456  EF2F  F00A         	goto	u4861
  4650   00145A  EF31  F00A         	goto	u4860
  4651   00145E                     u4861:
  4652   00145E  EF70  F00A         	goto	l4498
  4653   001462                     u4860:
  4654   001462                     
  4655                           ; BSR set to: 0
  4656   001462  C081  F003         	movff	print_AI_Temp@ait_ptr,strlen@s
  4657   001466  C082  F004         	movff	print_AI_Temp@ait_ptr+1,strlen@s+1
  4658   00146A  ECCC  F019         	call	_strlen	;wreg free
  4659   00146E  5004               	movf	(?_strlen+1)^0,w,c
  4660   001470  E109               	bnz	u4870
  4661   001472  0E06               	movlw	6
  4662   001474  5C03               	subwf	?_strlen^0,w,c
  4663   001476  A0D8               	btfss	status,0,c
  4664   001478  EF40  F00A         	goto	u4871
  4665   00147C  EF42  F00A         	goto	u4870
  4666   001480                     u4871:
  4667   001480  EF70  F00A         	goto	l4498
  4668   001484                     u4870:
  4669   001484                     
  4670                           ;OBCII_PIC18F46K22.c: 562:         A_air_intake = (hex_char_to_value(ait_ptr[4]) << 4) |
      +                           hex_char_to_value(ait_ptr[5]);
  4671   001484  0100               	movlb	0	; () banked
  4672   001486  EE20 F004          	lfsr	2,4
  4673   00148A  5181               	movf	print_AI_Temp@ait_ptr& (0+255),w,b
  4674   00148C  26D9               	addwf	fsr2l,f,c
  4675   00148E  5182               	movf	(print_AI_Temp@ait_ptr+1)& (0+255),w,b
  4676   001490  22DA               	addwfc	fsr2h,f,c
  4677   001492  50DF               	movf	indf2,w,c
  4678   001494  ECBD  F017         	call	_hex_char_to_value
  4679   001498  6E4E               	movwf	??_print_AI_Temp^0,c
  4680   00149A  6A4F               	clrf	(??_print_AI_Temp+1)^0,c
  4681   00149C  3A4E               	swapf	??_print_AI_Temp^0,f,c
  4682   00149E  3A4F               	swapf	(??_print_AI_Temp+1)^0,f,c
  4683   0014A0  0EF0               	movlw	240
  4684   0014A2  164F               	andwf	(??_print_AI_Temp+1)^0,f,c
  4685   0014A4  504E               	movf	??_print_AI_Temp^0,w,c
  4686   0014A6  0B0F               	andlw	15
  4687   0014A8  124F               	iorwf	(??_print_AI_Temp+1)^0,f,c
  4688   0014AA  0EF0               	movlw	240
  4689   0014AC  164E               	andwf	??_print_AI_Temp^0,f,c
  4690   0014AE  0100               	movlb	0	; () banked
  4691   0014B0  EE20 F005          	lfsr	2,5
  4692   0014B4  5181               	movf	print_AI_Temp@ait_ptr& (0+255),w,b
  4693   0014B6  26D9               	addwf	fsr2l,f,c
  4694   0014B8  5182               	movf	(print_AI_Temp@ait_ptr+1)& (0+255),w,b
  4695   0014BA  22DA               	addwfc	fsr2h,f,c
  4696   0014BC  50DF               	movf	indf2,w,c
  4697   0014BE  ECBD  F017         	call	_hex_char_to_value
  4698   0014C2  6E50               	movwf	(??_print_AI_Temp+2)^0,c
  4699   0014C4  5050               	movf	(??_print_AI_Temp+2)^0,w,c
  4700   0014C6  104E               	iorwf	??_print_AI_Temp^0,w,c
  4701   0014C8  0100               	movlb	0	; () banked
  4702   0014CA  6FC5               	movwf	_A_air_intake& (0+255),b
  4703   0014CC  504F               	movf	(??_print_AI_Temp+1)^0,w,c
  4704   0014CE  6FC6               	movwf	(_A_air_intake+1)& (0+255),b
  4705   0014D0                     
  4706                           ; BSR set to: 0
  4707                           ;OBCII_PIC18F46K22.c: 563:         air_intake_temp = A_air_intake - 40;
  4708   0014D0  0ED8               	movlw	216
  4709   0014D2  25C5               	addwf	_A_air_intake& (0+255),w,b
  4710   0014D4  6FC3               	movwf	_air_intake_temp& (0+255),b
  4711   0014D6  0EFF               	movlw	255
  4712   0014D8  21C6               	addwfc	(_A_air_intake+1)& (0+255),w,b
  4713   0014DA  6FC4               	movwf	(_air_intake_temp+1)& (0+255),b
  4714                           
  4715                           ;OBCII_PIC18F46K22.c: 564:     } else {
  4716   0014DC  EF75  F00A         	goto	l4500
  4717   0014E0                     l4498:
  4718                           
  4719                           ;OBCII_PIC18F46K22.c: 565:         air_intake_temp = 0;
  4720   0014E0  0E00               	movlw	0
  4721   0014E2  0100               	movlb	0	; () banked
  4722   0014E4  6FC4               	movwf	(_air_intake_temp+1)& (0+255),b
  4723   0014E6  0E00               	movlw	0
  4724   0014E8  6FC3               	movwf	_air_intake_temp& (0+255),b
  4725   0014EA                     l4500:
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;OBCII_PIC18F46K22.c: 569:     sprintf(air_intake_string, "%u", air_intake_temp);
  4729   0014EA  0ED3               	movlw	low _air_intake_string
  4730   0014EC  6E38               	movwf	sprintf@s^0,c
  4731   0014EE  6A39               	clrf	(sprintf@s+1)^0,c
  4732   0014F0  0EF4               	movlw	low STR_17
  4733   0014F2  6E3A               	movwf	sprintf@fmt^0,c
  4734   0014F4  0EFF               	movlw	high STR_17
  4735   0014F6  6E3B               	movwf	(sprintf@fmt+1)^0,c
  4736   0014F8  C0C3  F03C         	movff	_air_intake_temp,?_sprintf+4
  4737   0014FC  C0C4  F03D         	movff	_air_intake_temp+1,?_sprintf+5
  4738   001500  EC3B  F01A         	call	_sprintf	;wreg free
  4739   001504                     
  4740                           ;OBCII_PIC18F46K22.c: 570:     LCD_cursor_set(2,13);
  4741   001504  0E0D               	movlw	13
  4742   001506  6E06               	movwf	LCD_cursor_set@column^0,c
  4743   001508  0E02               	movlw	2
  4744   00150A  EC42  F019         	call	_LCD_cursor_set
  4745   00150E                     
  4746                           ;OBCII_PIC18F46K22.c: 571:     LCD_write_string("   ");
  4747   00150E  0E4F               	movlw	low (STR_35+10)
  4748   001510  6E06               	movwf	LCD_write_string@string^0,c
  4749   001512  0EFF               	movlw	high (STR_35+10)
  4750   001514  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4751   001516  ECFC  F017         	call	_LCD_write_string	;wreg free
  4752   00151A                     
  4753                           ;OBCII_PIC18F46K22.c: 573:     LCD_cursor_set(1,13);
  4754   00151A  0E0D               	movlw	13
  4755   00151C  6E06               	movwf	LCD_cursor_set@column^0,c
  4756   00151E  0E01               	movlw	1
  4757   001520  EC42  F019         	call	_LCD_cursor_set
  4758   001524                     
  4759                           ;OBCII_PIC18F46K22.c: 574:     LCD_write_string("AIT");
  4760   001524  0EF0               	movlw	low STR_28
  4761   001526  6E06               	movwf	LCD_write_string@string^0,c
  4762   001528  0EFF               	movlw	high STR_28
  4763   00152A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4764   00152C  ECFC  F017         	call	_LCD_write_string	;wreg free
  4765   001530                     
  4766                           ;OBCII_PIC18F46K22.c: 575:     LCD_cursor_set(2,13);
  4767   001530  0E0D               	movlw	13
  4768   001532  6E06               	movwf	LCD_cursor_set@column^0,c
  4769   001534  0E02               	movlw	2
  4770   001536  EC42  F019         	call	_LCD_cursor_set
  4771   00153A                     
  4772                           ;OBCII_PIC18F46K22.c: 576:     LCD_write_string(air_intake_string);
  4773   00153A  0ED3               	movlw	low _air_intake_string
  4774   00153C  6E06               	movwf	LCD_write_string@string^0,c
  4775   00153E  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4776   001540  ECFC  F017         	call	_LCD_write_string	;wreg free
  4777   001544                     
  4778                           ;OBCII_PIC18F46K22.c: 577:     LCD_cursor_set(2,15);
  4779   001544  0E0F               	movlw	15
  4780   001546  6E06               	movwf	LCD_cursor_set@column^0,c
  4781   001548  0E02               	movlw	2
  4782   00154A  EC42  F019         	call	_LCD_cursor_set
  4783   00154E                     
  4784                           ;OBCII_PIC18F46K22.c: 578:     LCD_write_string("C");
  4785   00154E  0ED5               	movlw	low (STR_16+3)
  4786   001550  6E06               	movwf	LCD_write_string@string^0,c
  4787   001552  0EFF               	movlw	high (STR_16+3)
  4788   001554  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4789   001556  ECFC  F017         	call	_LCD_write_string	;wreg free
  4790   00155A                     
  4791                           ;OBCII_PIC18F46K22.c: 580:     buffer_count = 0;
  4792   00155A  0100               	movlb	0	; () banked
  4793   00155C  6BD2               	clrf	_buffer_count& (0+255),b
  4794   00155E                     
  4795                           ; BSR set to: 0
  4796                           ;OBCII_PIC18F46K22.c: 581:     message_complete = 0;
  4797   00155E  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  4798   001560                     l295:
  4799                           
  4800                           ; BSR set to: 0
  4801   001560  0012               	return		;funcret
  4802   001562                     __end_of_print_AI_Temp:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function _strstr *****************
  4806 ;; Defined at:
  4807 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  h               2    9[COMRAM] PTR const unsigned char 
  4810 ;;		 -> print_AI_Temp@clean_buffer(32), NULL(0), print_RPM@clean_buffer(32), buffer(256), 
  4811 ;;  n               2   11[COMRAM] PTR const unsigned char 
  4812 ;;		 -> STR_25(5), STR_16(5), 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  nl              2   13[COMRAM] unsigned int 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  2    9[COMRAM] PTR unsigned char 
  4817 ;; Registers used:
  4818 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;Total ram usage:        6 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 2
  4831 ;; This function calls:
  4832 ;;		_strchr
  4833 ;;		_strlen
  4834 ;;		_strncmp
  4835 ;; This function is called by:
  4836 ;;		_print_RPM
  4837 ;;		_print_AI_Temp
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text13
  4842   002920                     __ptext13:
  4843                           	callstack 0
  4844   002920                     _strstr:
  4845                           	callstack 25
  4846   002920  500C               	movf	strstr@n^0,w,c
  4847   002922  100D               	iorwf	(strstr@n+1)^0,w,c
  4848   002924  B4D8               	btfsc	status,2,c
  4849   002926  EF97  F014         	goto	u4481
  4850   00292A  EF99  F014         	goto	u4480
  4851   00292E                     u4481:
  4852   00292E  EFEB  F014         	goto	l4270
  4853   002932                     u4480:
  4854   002932  C00C  F003         	movff	strstr@n,strlen@s
  4855   002936  C00D  F004         	movff	strstr@n+1,strlen@s+1
  4856   00293A  ECCC  F019         	call	_strlen	;wreg free
  4857   00293E  C003  F00E         	movff	?_strlen,strstr@nl
  4858   002942  C004  F00F         	movff	?_strlen+1,strstr@nl+1
  4859   002946  EFD6  F014         	goto	l4266
  4860   00294A                     l4258:
  4861   00294A  C00A  F003         	movff	strstr@h,strncmp@l
  4862   00294E  C00B  F004         	movff	strstr@h+1,strncmp@l+1
  4863   002952  C00C  F005         	movff	strstr@n,strncmp@r
  4864   002956  C00D  F006         	movff	strstr@n+1,strncmp@r+1
  4865   00295A  C00E  F007         	movff	strstr@nl,strncmp@n
  4866   00295E  C00F  F008         	movff	strstr@nl+1,strncmp@n+1
  4867   002962  ECCB  F013         	call	_strncmp	;wreg free
  4868   002966  5003               	movf	?_strncmp^0,w,c
  4869   002968  1004               	iorwf	(?_strncmp+1)^0,w,c
  4870   00296A  A4D8               	btfss	status,2,c
  4871   00296C  EFBA  F014         	goto	u4491
  4872   002970  EFBC  F014         	goto	u4490
  4873   002974                     u4491:
  4874   002974  EFC2  F014         	goto	l4264
  4875   002978                     u4490:
  4876   002978  C00A  F00A         	movff	strstr@h,?_strstr
  4877   00297C  C00B  F00B         	movff	strstr@h+1,?_strstr+1
  4878   002980  EFEF  F014         	goto	l1536
  4879   002984                     l4264:
  4880   002984  0E01               	movlw	1
  4881   002986  240A               	addwf	strstr@h^0,w,c
  4882   002988  6E03               	movwf	strchr@s^0,c
  4883   00298A  0E00               	movlw	0
  4884   00298C  200B               	addwfc	(strstr@h+1)^0,w,c
  4885   00298E  6E04               	movwf	(strchr@s+1)^0,c
  4886   002990  C00C  FFF6         	movff	strstr@n,tblptrl
  4887   002994  C00D  FFF7         	movff	strstr@n+1,tblptrh
  4888   002998                     	if	0	;tblptru may be non-zero
  4889   002998                     	endif
  4890   002998                     	if	0	;tblptru may be non-zero
  4891   002998                     	endif
  4892   002998  0008               	tblrd		*
  4893   00299A  50F5               	movf	tablat,w,c
  4894   00299C  6E05               	movwf	strchr@c^0,c
  4895   00299E  6A06               	clrf	(strchr@c+1)^0,c
  4896   0029A0  ECF4  F019         	call	_strchr	;wreg free
  4897   0029A4  C003  F00A         	movff	?_strchr,strstr@h
  4898   0029A8  C004  F00B         	movff	?_strchr+1,strstr@h+1
  4899   0029AC                     l4266:
  4900   0029AC  500A               	movf	strstr@h^0,w,c
  4901   0029AE  100B               	iorwf	(strstr@h+1)^0,w,c
  4902   0029B0  B4D8               	btfsc	status,2,c
  4903   0029B2  EFDD  F014         	goto	u4501
  4904   0029B6  EFDF  F014         	goto	u4500
  4905   0029BA                     u4501:
  4906   0029BA  EFEB  F014         	goto	l4270
  4907   0029BE                     u4500:
  4908   0029BE  C00A  FFD9         	movff	strstr@h,fsr2l
  4909   0029C2  C00B  FFDA         	movff	strstr@h+1,fsr2h
  4910   0029C6  50DF               	movf	indf2,w,c
  4911   0029C8  A4D8               	btfss	status,2,c
  4912   0029CA  EFE9  F014         	goto	u4511
  4913   0029CE  EFEB  F014         	goto	u4510
  4914   0029D2                     u4511:
  4915   0029D2  EFA5  F014         	goto	l4258
  4916   0029D6                     u4510:
  4917   0029D6                     l4270:
  4918   0029D6  0E00               	movlw	0
  4919   0029D8  6E0A               	movwf	?_strstr^0,c
  4920   0029DA  0E00               	movlw	0
  4921   0029DC  6E0B               	movwf	(?_strstr+1)^0,c
  4922   0029DE                     l1536:
  4923   0029DE  0012               	return		;funcret
  4924   0029E0                     __end_of_strstr:
  4925                           	callstack 0
  4926                           
  4927 ;; *************** function _strncmp *****************
  4928 ;; Defined at:
  4929 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  l               2    2[COMRAM] PTR const unsigned char 
  4932 ;;		 -> print_AI_Temp@clean_buffer(32), NULL(0), print_RPM@clean_buffer(32), buffer(256), 
  4933 ;;  r               2    4[COMRAM] PTR const unsigned char 
  4934 ;;		 -> STR_25(5), STR_16(5), 
  4935 ;;  n               2    6[COMRAM] unsigned int 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  2    2[COMRAM] int 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4947 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;Total ram usage:        7 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; Hardware stack levels required when called: 1
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_strstr
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text14
  4962   002796                     __ptext14:
  4963                           	callstack 0
  4964   002796                     _strncmp:
  4965                           	callstack 25
  4966   002796  0607               	decf	strncmp@n^0,f,c
  4967   002798  A0D8               	btfss	status,0,c
  4968   00279A  0608               	decf	(strncmp@n+1)^0,f,c
  4969   00279C  2807               	incf	strncmp@n^0,w,c
  4970   00279E  E106               	bnz	u4361
  4971   0027A0  2808               	incf	(strncmp@n+1)^0,w,c
  4972   0027A2  A4D8               	btfss	status,2,c
  4973   0027A4  EFD6  F013         	goto	u4361
  4974   0027A8  EFD8  F013         	goto	u4360
  4975   0027AC                     u4361:
  4976   0027AC  EFE5  F013         	goto	l4186
  4977   0027B0                     u4360:
  4978   0027B0  0E00               	movlw	0
  4979   0027B2  6E04               	movwf	(?_strncmp+1)^0,c
  4980   0027B4  0E00               	movlw	0
  4981   0027B6  6E03               	movwf	?_strncmp^0,c
  4982   0027B8  EF2D  F014         	goto	l1543
  4983   0027BC                     l4184:
  4984   0027BC  4A03               	infsnz	strncmp@l^0,f,c
  4985   0027BE  2A04               	incf	(strncmp@l+1)^0,f,c
  4986   0027C0  4A05               	infsnz	strncmp@r^0,f,c
  4987   0027C2  2A06               	incf	(strncmp@r+1)^0,f,c
  4988   0027C4  0607               	decf	strncmp@n^0,f,c
  4989   0027C6  A0D8               	btfss	status,0,c
  4990   0027C8  0608               	decf	(strncmp@n+1)^0,f,c
  4991   0027CA                     l4186:
  4992   0027CA  C003  FFD9         	movff	strncmp@l,fsr2l
  4993   0027CE  C004  FFDA         	movff	strncmp@l+1,fsr2h
  4994   0027D2  50DF               	movf	indf2,w,c
  4995   0027D4  B4D8               	btfsc	status,2,c
  4996   0027D6  EFEF  F013         	goto	u4371
  4997   0027DA  EFF1  F013         	goto	u4370
  4998   0027DE                     u4371:
  4999   0027DE  EF1C  F014         	goto	l4194
  5000   0027E2                     u4370:
  5001   0027E2  C005  FFF6         	movff	strncmp@r,tblptrl
  5002   0027E6  C006  FFF7         	movff	strncmp@r+1,tblptrh
  5003   0027EA                     	if	0	;tblptru may be non-zero
  5004   0027EA                     	endif
  5005   0027EA                     	if	0	;tblptru may be non-zero
  5006   0027EA                     	endif
  5007   0027EA  0008               	tblrd		*
  5008   0027EC  50F5               	movf	tablat,w,c
  5009   0027EE  0900               	iorlw	0
  5010   0027F0  B4D8               	btfsc	status,2,c
  5011   0027F2  EFFD  F013         	goto	u4381
  5012   0027F6  EFFF  F013         	goto	u4380
  5013   0027FA                     u4381:
  5014   0027FA  EF1C  F014         	goto	l4194
  5015   0027FE                     u4380:
  5016   0027FE  5007               	movf	strncmp@n^0,w,c
  5017   002800  1008               	iorwf	(strncmp@n+1)^0,w,c
  5018   002802  B4D8               	btfsc	status,2,c
  5019   002804  EF06  F014         	goto	u4391
  5020   002808  EF08  F014         	goto	u4390
  5021   00280C                     u4391:
  5022   00280C  EF1C  F014         	goto	l4194
  5023   002810                     u4390:
  5024   002810  C003  FFD9         	movff	strncmp@l,fsr2l
  5025   002814  C004  FFDA         	movff	strncmp@l+1,fsr2h
  5026   002818  50DF               	movf	indf2,w,c
  5027   00281A  6E09               	movwf	??_strncmp^0,c
  5028   00281C  C005  FFF6         	movff	strncmp@r,tblptrl
  5029   002820  C006  FFF7         	movff	strncmp@r+1,tblptrh
  5030   002824                     	if	0	;tblptru may be non-zero
  5031   002824                     	endif
  5032   002824                     	if	0	;tblptru may be non-zero
  5033   002824                     	endif
  5034   002824  0008               	tblrd		*
  5035   002826  50F5               	movf	tablat,w,c
  5036   002828  1809               	xorwf	??_strncmp^0,w,c
  5037   00282A  B4D8               	btfsc	status,2,c
  5038   00282C  EF1A  F014         	goto	u4401
  5039   002830  EF1C  F014         	goto	u4400
  5040   002834                     u4401:
  5041   002834  EFDE  F013         	goto	l4184
  5042   002838                     u4400:
  5043   002838                     l4194:
  5044   002838  C003  FFD9         	movff	strncmp@l,fsr2l
  5045   00283C  C004  FFDA         	movff	strncmp@l+1,fsr2h
  5046   002840  50DF               	movf	indf2,w,c
  5047   002842  6E09               	movwf	??_strncmp^0,c
  5048   002844  C005  FFF6         	movff	strncmp@r,tblptrl
  5049   002848  C006  FFF7         	movff	strncmp@r+1,tblptrh
  5050   00284C                     	if	0	;tblptru may be non-zero
  5051   00284C                     	endif
  5052   00284C                     	if	0	;tblptru may be non-zero
  5053   00284C                     	endif
  5054   00284C  0008               	tblrd		*
  5055   00284E  50F5               	movf	tablat,w,c
  5056   002850  5C09               	subwf	??_strncmp^0,w,c
  5057   002852  6E03               	movwf	?_strncmp^0,c
  5058   002854  6A04               	clrf	(?_strncmp+1)^0,c
  5059   002856  A0D8               	btfss	status,0,c
  5060   002858  0604               	decf	(?_strncmp+1)^0,f,c
  5061   00285A                     l1543:
  5062   00285A  0012               	return		;funcret
  5063   00285C                     __end_of_strncmp:
  5064                           	callstack 0
  5065                           
  5066 ;; *************** function _strlen *****************
  5067 ;; Defined at:
  5068 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5071 ;;		 -> STR_25(5), print_AI_Temp@clean_buffer(32), NULL(0), STR_16(5), 
  5072 ;;		 -> print_RPM@clean_buffer(32), buffer(256), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  a               2    4[COMRAM] PTR const unsigned char 
  5075 ;;		 -> STR_25(5), print_AI_Temp@clean_buffer(32), NULL(0), STR_16(5), 
  5076 ;;		 -> print_RPM@clean_buffer(32), buffer(256), 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  2    2[COMRAM] unsigned int 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;Total ram usage:        4 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 1
  5093 ;; This function calls:
  5094 ;;		Nothing
  5095 ;; This function is called by:
  5096 ;;		_print_RPM
  5097 ;;		_print_AI_Temp
  5098 ;;		_strstr
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text15
  5103   003398                     __ptext15:
  5104                           	callstack 0
  5105   003398                     _strlen:
  5106                           	callstack 25
  5107   003398  C003  F005         	movff	strlen@s,strlen@a
  5108   00339C  C004  F006         	movff	strlen@s+1,strlen@a+1
  5109   0033A0  EFD4  F019         	goto	l4052
  5110   0033A4                     l4050:
  5111   0033A4  4A03               	infsnz	strlen@s^0,f,c
  5112   0033A6  2A04               	incf	(strlen@s+1)^0,f,c
  5113   0033A8                     l4052:
  5114   0033A8  C003  FFF6         	movff	strlen@s,tblptrl
  5115   0033AC  C004  FFF7         	movff	strlen@s+1,tblptrh
  5116   0033B0  0E00               	movlw	low (__mediumconst shr (0+16))
  5117   0033B2  6EF8               	movwf	tblptru,c
  5118   0033B4  0E0F               	movlw	(high __ramtop+-1)
  5119   0033B6  64F7               	cpfsgt	tblptrh,c
  5120   0033B8  D003               	bra	u4137
  5121   0033BA  0008               	tblrd		*
  5122   0033BC  50F5               	movf	tablat,w,c
  5123   0033BE  D005               	bra	u4130
  5124   0033C0                     u4137:
  5125   0033C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  5126   0033C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  5127   0033C8  50EF               	movf	indf0,w,c
  5128   0033CA                     u4130:
  5129   0033CA  0900               	iorlw	0
  5130   0033CC  A4D8               	btfss	status,2,c
  5131   0033CE  EFEB  F019         	goto	u4141
  5132   0033D2  EFED  F019         	goto	u4140
  5133   0033D6                     u4141:
  5134   0033D6  EFD2  F019         	goto	l4050
  5135   0033DA                     u4140:
  5136   0033DA  5005               	movf	strlen@a^0,w,c
  5137   0033DC  5C03               	subwf	strlen@s^0,w,c
  5138   0033DE  6E03               	movwf	?_strlen^0,c
  5139   0033E0  5006               	movf	(strlen@a+1)^0,w,c
  5140   0033E2  5804               	subwfb	(strlen@s+1)^0,w,c
  5141   0033E4  6E04               	movwf	(?_strlen+1)^0,c
  5142   0033E6  0012               	return		;funcret
  5143   0033E8                     __end_of_strlen:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function _strchr *****************
  5147 ;; Defined at:
  5148 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5151 ;;		 -> print_AI_Temp@clean_buffer(32), NULL(0), print_RPM@clean_buffer(32), buffer(256), 
  5152 ;;  c               2    4[COMRAM] int 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  2    2[COMRAM] PTR unsigned char 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;Total ram usage:        5 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; Hardware stack levels required when called: 1
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_print_Vbatt
  5175 ;;		_strstr
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text16
  5180   0033E8                     __ptext16:
  5181                           	callstack 0
  5182   0033E8                     _strchr:
  5183                           	callstack 26
  5184   0033E8                     l1514:
  5185   0033E8  C003  FFD9         	movff	strchr@s,fsr2l
  5186   0033EC  C004  FFDA         	movff	strchr@s+1,fsr2h
  5187   0033F0  5005               	movf	strchr@c^0,w,c
  5188   0033F2  18DE               	xorwf	postinc2,w,c
  5189   0033F4  A4D8               	btfss	status,2,c
  5190   0033F6  EFFF  F019         	goto	u4151
  5191   0033FA  EF01  F01A         	goto	u4150
  5192   0033FE                     u4151:
  5193   0033FE  EF07  F01A         	goto	l4064
  5194   003402                     u4150:
  5195   003402  C003  F003         	movff	strchr@s,?_strchr
  5196   003406  C004  F004         	movff	strchr@s+1,?_strchr+1
  5197   00340A  EF19  F01A         	goto	l1516
  5198   00340E                     l4064:
  5199   00340E  C003  FFD9         	movff	strchr@s,fsr2l
  5200   003412  C004  FFDA         	movff	strchr@s+1,fsr2h
  5201   003416  4A03               	infsnz	strchr@s^0,f,c
  5202   003418  2A04               	incf	(strchr@s+1)^0,f,c
  5203   00341A  50DF               	movf	indf2,w,c
  5204   00341C  A4D8               	btfss	status,2,c
  5205   00341E  EF13  F01A         	goto	u4161
  5206   003422  EF15  F01A         	goto	u4160
  5207   003426                     u4161:
  5208   003426  EFF4  F019         	goto	l1514
  5209   00342A                     u4160:
  5210   00342A  0E00               	movlw	0
  5211   00342C  6E03               	movwf	?_strchr^0,c
  5212   00342E  0E00               	movlw	0
  5213   003430  6E04               	movwf	(?_strchr+1)^0,c
  5214   003432                     l1516:
  5215   003432  0012               	return		;funcret
  5216   003434                     __end_of_strchr:
  5217                           	callstack 0
  5218                           
  5219 ;; *************** function _hex_char_to_value *****************
  5220 ;; Defined at:
  5221 ;;		line 432 in file "OBCII_PIC18F46K22.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  c               1    wreg     unsigned char 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  c               1    2[COMRAM] unsigned char 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      unsigned char 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;Total ram usage:        1 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; Hardware stack levels required when called: 1
  5242 ;; This function calls:
  5243 ;;		Nothing
  5244 ;; This function is called by:
  5245 ;;		_print_RPM
  5246 ;;		_print_AI_Temp
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text17
  5251   002F7A                     __ptext17:
  5252                           	callstack 0
  5253   002F7A                     _hex_char_to_value:
  5254                           	callstack 26
  5255                           
  5256                           ;incstack = 0
  5257                           ;hex_char_to_value@c stored from wreg
  5258   002F7A  6E03               	movwf	hex_char_to_value@c^0,c
  5259   002F7C                     
  5260                           ;OBCII_PIC18F46K22.c: 433:     if (c >= '0' && c <= '9') return c - '0';
  5261   002F7C  0E2F               	movlw	47
  5262   002F7E  6403               	cpfsgt	hex_char_to_value@c^0,c
  5263   002F80  EFC4  F017         	goto	u4421
  5264   002F84  EFC6  F017         	goto	u4420
  5265   002F88                     u4421:
  5266   002F88  EFD2  F017         	goto	l4234
  5267   002F8C                     u4420:
  5268   002F8C  0E3A               	movlw	58
  5269   002F8E  6003               	cpfslt	hex_char_to_value@c^0,c
  5270   002F90  EFCC  F017         	goto	u4431
  5271   002F94  EFCE  F017         	goto	u4430
  5272   002F98                     u4431:
  5273   002F98  EFD2  F017         	goto	l4234
  5274   002F9C                     u4430:
  5275   002F9C  5003               	movf	hex_char_to_value@c^0,w,c
  5276   002F9E  0FD0               	addlw	208
  5277   002FA0  EFFB  F017         	goto	l254
  5278   002FA4                     l4234:
  5279                           
  5280                           ;OBCII_PIC18F46K22.c: 434:     if (c >= 'A' && c <= 'F') return c - 'A' + 10;
  5281   002FA4  0E40               	movlw	64
  5282   002FA6  6403               	cpfsgt	hex_char_to_value@c^0,c
  5283   002FA8  EFD8  F017         	goto	u4441
  5284   002FAC  EFDA  F017         	goto	u4440
  5285   002FB0                     u4441:
  5286   002FB0  EFE6  F017         	goto	l4242
  5287   002FB4                     u4440:
  5288   002FB4  0E47               	movlw	71
  5289   002FB6  6003               	cpfslt	hex_char_to_value@c^0,c
  5290   002FB8  EFE0  F017         	goto	u4451
  5291   002FBC  EFE2  F017         	goto	u4450
  5292   002FC0                     u4451:
  5293   002FC0  EFE6  F017         	goto	l4242
  5294   002FC4                     u4450:
  5295   002FC4  5003               	movf	hex_char_to_value@c^0,w,c
  5296   002FC6  0FC9               	addlw	201
  5297   002FC8  EFFB  F017         	goto	l254
  5298   002FCC                     l4242:
  5299                           
  5300                           ;OBCII_PIC18F46K22.c: 435:     if (c >= 'a' && c <= 'f') return c - 'a' + 10;
  5301   002FCC  0E60               	movlw	96
  5302   002FCE  6403               	cpfsgt	hex_char_to_value@c^0,c
  5303   002FD0  EFEC  F017         	goto	u4461
  5304   002FD4  EFEE  F017         	goto	u4460
  5305   002FD8                     u4461:
  5306   002FD8  EFFA  F017         	goto	l4250
  5307   002FDC                     u4460:
  5308   002FDC  0E67               	movlw	103
  5309   002FDE  6003               	cpfslt	hex_char_to_value@c^0,c
  5310   002FE0  EFF4  F017         	goto	u4471
  5311   002FE4  EFF6  F017         	goto	u4470
  5312   002FE8                     u4471:
  5313   002FE8  EFFA  F017         	goto	l4250
  5314   002FEC                     u4470:
  5315   002FEC  5003               	movf	hex_char_to_value@c^0,w,c
  5316   002FEE  0FA9               	addlw	169
  5317   002FF0  EFFB  F017         	goto	l254
  5318   002FF4                     l4250:
  5319                           
  5320                           ;OBCII_PIC18F46K22.c: 436:     return 0;
  5321   002FF4  0E00               	movlw	0
  5322   002FF6                     l254:
  5323   002FF6  0012               	return		;funcret
  5324   002FF8                     __end_of_hex_char_to_value:
  5325                           	callstack 0
  5326                           
  5327 ;; *************** function _display_system_info *****************
  5328 ;; Defined at:
  5329 ;;		line 651 in file "OBCII_PIC18F46K22.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;		None
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;Total ram usage:        0 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 6
  5350 ;; This function calls:
  5351 ;;		_LCD_cursor_set
  5352 ;;		_LCD_write_string
  5353 ;;		_print_ELMVer
  5354 ;;		_print_SAEVer
  5355 ;; This function is called by:
  5356 ;;		_main_menu
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text18
  5361   0034F6                     __ptext18:
  5362                           	callstack 0
  5363   0034F6                     _display_system_info:
  5364                           	callstack 23
  5365   0034F6                     
  5366                           ;OBCII_PIC18F46K22.c: 652:     LCD_cursor_set(1,4);
  5367   0034F6  0E04               	movlw	4
  5368   0034F8  6E06               	movwf	LCD_cursor_set@column^0,c
  5369   0034FA  0E01               	movlw	1
  5370   0034FC  EC42  F019         	call	_LCD_cursor_set
  5371   003500                     
  5372                           ;OBCII_PIC18F46K22.c: 653:     LCD_write_string("            ");
  5373   003500  0E46               	movlw	low (STR_35+1)
  5374   003502  6E06               	movwf	LCD_write_string@string^0,c
  5375   003504  0EFF               	movlw	high (STR_35+1)
  5376   003506  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5377   003508  ECFC  F017         	call	_LCD_write_string	;wreg free
  5378   00350C                     
  5379                           ;OBCII_PIC18F46K22.c: 654:     LCD_cursor_set(2,5);
  5380   00350C  0E05               	movlw	5
  5381   00350E  6E06               	movwf	LCD_cursor_set@column^0,c
  5382   003510  0E02               	movlw	2
  5383   003512  EC42  F019         	call	_LCD_cursor_set
  5384                           
  5385                           ;OBCII_PIC18F46K22.c: 655:     LCD_write_string("             ");
  5386   003516  0E45               	movlw	low STR_35
  5387   003518  6E06               	movwf	LCD_write_string@string^0,c
  5388   00351A  0EFF               	movlw	high STR_35
  5389   00351C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5390   00351E  ECFC  F017         	call	_LCD_write_string	;wreg free
  5391                           
  5392                           ;OBCII_PIC18F46K22.c: 656:     print_ELMVer();
  5393   003522  EC34  F017         	call	_print_ELMVer	;wreg free
  5394                           
  5395                           ;OBCII_PIC18F46K22.c: 657:     print_SAEVer();
  5396   003526  ECEB  F016         	call	_print_SAEVer	;wreg free
  5397   00352A  0012               	return		;funcret
  5398   00352C                     __end_of_display_system_info:
  5399                           	callstack 0
  5400                           
  5401 ;; *************** function _print_SAEVer *****************
  5402 ;; Defined at:
  5403 ;;		line 624 in file "OBCII_PIC18F46K22.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:        1 bytes
  5422 ;; Hardware stack levels used: 1
  5423 ;; Hardware stack levels required when called: 5
  5424 ;; This function calls:
  5425 ;;		_LCD_clear
  5426 ;;		_LCD_cursor_set
  5427 ;;		_LCD_write_string
  5428 ;;		_UART1_SendString
  5429 ;;		_clear_parsing_notif
  5430 ;;		_display_mm
  5431 ;;		_parsing_notif
  5432 ;; This function is called by:
  5433 ;;		_display_system_info
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           	psect	text19
  5438   002DD6                     __ptext19:
  5439                           	callstack 0
  5440   002DD6                     _print_SAEVer:
  5441                           	callstack 23
  5442   002DD6                     
  5443                           ;OBCII_PIC18F46K22.c: 625:     UART1_SendString("0108\r");
  5444   002DD6  0EAA               	movlw	low STR_32
  5445   002DD8  6E04               	movwf	UART1_SendString@string^0,c
  5446   002DDA  0EFF               	movlw	high STR_32
  5447   002DDC  6E05               	movwf	(UART1_SendString@string+1)^0,c
  5448   002DDE  ECA1  F019         	call	_UART1_SendString	;wreg free
  5449                           
  5450                           ;OBCII_PIC18F46K22.c: 627:     while(!message_complete) {
  5451   002DE2  EF14  F017         	goto	l4564
  5452   002DE6                     l325:
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;OBCII_PIC18F46K22.c: 629:         if (PORTCbits.RC5 == 0) {
  5456   002DE6  BA82               	btfsc	130,5,c	;volatile
  5457   002DE8  EFF8  F016         	goto	u4911
  5458   002DEC  EFFA  F016         	goto	u4910
  5459   002DF0                     u4911:
  5460   002DF0  EF12  F017         	goto	l4562
  5461   002DF4                     u4910:
  5462   002DF4                     
  5463                           ; BSR set to: 0
  5464                           ;OBCII_PIC18F46K22.c: 630:             _delay((unsigned long)((20)*(16000000/4000.0)));
  5465   002DF4  0E68               	movlw	104
  5466   002DF6  6E0B               	movwf	??_print_SAEVer^0,c
  5467   002DF8  0EE4               	movlw	228
  5468   002DFA                     u7177:
  5469   002DFA  2EE8               	decfsz	wreg,f,c
  5470   002DFC  D7FE               	bra	u7177
  5471   002DFE  2E0B               	decfsz	??_print_SAEVer^0,f,c
  5472   002E00  D7FC               	bra	u7177
  5473   002E02  D000               	nop2	
  5474   002E04                     
  5475                           ;OBCII_PIC18F46K22.c: 631:             if (PORTCbits.RC5 == 0) {
  5476   002E04  BA82               	btfsc	130,5,c	;volatile
  5477   002E06  EF07  F017         	goto	u4921
  5478   002E0A  EF09  F017         	goto	u4920
  5479   002E0E                     u4921:
  5480   002E0E  EF12  F017         	goto	l4562
  5481   002E12                     u4920:
  5482   002E12                     
  5483                           ;OBCII_PIC18F46K22.c: 632:                 LCD_clear();
  5484   002E12  EC0A  F01B         	call	_LCD_clear	;wreg free
  5485   002E16                     
  5486                           ;OBCII_PIC18F46K22.c: 633:                 display_mm();
  5487   002E16  ECCA  F01A         	call	_display_mm	;wreg free
  5488   002E1A                     
  5489                           ;OBCII_PIC18F46K22.c: 634:                 menu_sel = -1;
  5490   002E1A  0100               	movlb	0	; () banked
  5491   002E1C  69F3               	setf	_menu_sel& (0+255),b
  5492   002E1E  69F4               	setf	(_menu_sel+1)& (0+255),b
  5493                           
  5494                           ;OBCII_PIC18F46K22.c: 635:                 break;
  5495   002E20  EF1D  F017         	goto	l4566
  5496   002E24                     l4562:
  5497                           
  5498                           ;OBCII_PIC18F46K22.c: 638:         parsing_notif();
  5499   002E24  EC19  F01B         	call	_parsing_notif	;wreg free
  5500   002E28                     l4564:
  5501                           
  5502                           ;OBCII_PIC18F46K22.c: 627:     while(!message_complete) {
  5503   002E28  0100               	movlb	0	; () banked
  5504   002E2A  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  5505   002E2C  B4D8               	btfsc	status,2,c
  5506   002E2E  EF1B  F017         	goto	u4931
  5507   002E32  EF1D  F017         	goto	u4930
  5508   002E36                     u4931:
  5509   002E36  EFF3  F016         	goto	l325
  5510   002E3A                     u4930:
  5511   002E3A                     l4566:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;OBCII_PIC18F46K22.c: 640:     clear_parsing_notif();
  5515   002E3A  EC25  F01B         	call	_clear_parsing_notif	;wreg free
  5516   002E3E                     
  5517                           ;OBCII_PIC18F46K22.c: 642:     LCD_cursor_set(2,1);
  5518   002E3E  0E01               	movlw	1
  5519   002E40  6E06               	movwf	LCD_cursor_set@column^0,c
  5520   002E42  0E02               	movlw	2
  5521   002E44  EC42  F019         	call	_LCD_cursor_set
  5522   002E48                     
  5523                           ;OBCII_PIC18F46K22.c: 643:     LCD_write_string("SAE:");
  5524   002E48  0ECD               	movlw	low STR_33
  5525   002E4A  6E06               	movwf	LCD_write_string@string^0,c
  5526   002E4C  0EFF               	movlw	high STR_33
  5527   002E4E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5528   002E50  ECFC  F017         	call	_LCD_write_string	;wreg free
  5529   002E54                     
  5530                           ;OBCII_PIC18F46K22.c: 644:     LCD_write_string(buffer);
  5531   002E54  0E00               	movlw	low _buffer
  5532   002E56  6E06               	movwf	LCD_write_string@string^0,c
  5533   002E58  0E02               	movlw	high _buffer
  5534   002E5A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5535   002E5C  ECFC  F017         	call	_LCD_write_string	;wreg free
  5536   002E60                     
  5537                           ;OBCII_PIC18F46K22.c: 647:     buffer_count = 0;
  5538   002E60  0100               	movlb	0	; () banked
  5539   002E62  6BD2               	clrf	_buffer_count& (0+255),b
  5540   002E64                     
  5541                           ; BSR set to: 0
  5542                           ;OBCII_PIC18F46K22.c: 648:     message_complete = 0;
  5543   002E64  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  5544   002E66                     
  5545                           ; BSR set to: 0
  5546   002E66  0012               	return		;funcret
  5547   002E68                     __end_of_print_SAEVer:
  5548                           	callstack 0
  5549                           
  5550 ;; *************** function _print_ELMVer *****************
  5551 ;; Defined at:
  5552 ;;		line 596 in file "OBCII_PIC18F46K22.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;Total ram usage:        1 bytes
  5571 ;; Hardware stack levels used: 1
  5572 ;; Hardware stack levels required when called: 5
  5573 ;; This function calls:
  5574 ;;		_LCD_clear
  5575 ;;		_LCD_cursor_set
  5576 ;;		_LCD_write_string
  5577 ;;		_UART1_SendString
  5578 ;;		_clear_parsing_notif
  5579 ;;		_display_mm
  5580 ;;		_parsing_notif
  5581 ;; This function is called by:
  5582 ;;		_display_system_info
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text20
  5587   002E68                     __ptext20:
  5588                           	callstack 0
  5589   002E68                     _print_ELMVer:
  5590                           	callstack 23
  5591   002E68                     
  5592                           ;OBCII_PIC18F46K22.c: 598:     UART1_SendString("ATI\r");
  5593   002E68  0EC8               	movlw	low STR_5
  5594   002E6A  6E04               	movwf	UART1_SendString@string^0,c
  5595   002E6C  0EFF               	movlw	high STR_5
  5596   002E6E  6E05               	movwf	(UART1_SendString@string+1)^0,c
  5597   002E70  ECA1  F019         	call	_UART1_SendString	;wreg free
  5598                           
  5599                           ;OBCII_PIC18F46K22.c: 600:     while(!message_complete) {
  5600   002E74  EF5D  F017         	goto	l4536
  5601   002E78                     l317:
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;OBCII_PIC18F46K22.c: 602:         if (PORTCbits.RC5 == 0) {
  5605   002E78  BA82               	btfsc	130,5,c	;volatile
  5606   002E7A  EF41  F017         	goto	u4881
  5607   002E7E  EF43  F017         	goto	u4880
  5608   002E82                     u4881:
  5609   002E82  EF5B  F017         	goto	l4534
  5610   002E86                     u4880:
  5611   002E86                     
  5612                           ; BSR set to: 0
  5613                           ;OBCII_PIC18F46K22.c: 603:             _delay((unsigned long)((20)*(16000000/4000.0)));
  5614   002E86  0E68               	movlw	104
  5615   002E88  6E0B               	movwf	??_print_ELMVer^0,c
  5616   002E8A  0EE4               	movlw	228
  5617   002E8C                     u7187:
  5618   002E8C  2EE8               	decfsz	wreg,f,c
  5619   002E8E  D7FE               	bra	u7187
  5620   002E90  2E0B               	decfsz	??_print_ELMVer^0,f,c
  5621   002E92  D7FC               	bra	u7187
  5622   002E94  D000               	nop2	
  5623   002E96                     
  5624                           ;OBCII_PIC18F46K22.c: 604:             if (PORTCbits.RC5 == 0) {
  5625   002E96  BA82               	btfsc	130,5,c	;volatile
  5626   002E98  EF50  F017         	goto	u4891
  5627   002E9C  EF52  F017         	goto	u4890
  5628   002EA0                     u4891:
  5629   002EA0  EF5B  F017         	goto	l4534
  5630   002EA4                     u4890:
  5631   002EA4                     
  5632                           ;OBCII_PIC18F46K22.c: 605:                 LCD_clear();
  5633   002EA4  EC0A  F01B         	call	_LCD_clear	;wreg free
  5634   002EA8                     
  5635                           ;OBCII_PIC18F46K22.c: 606:                 display_mm();
  5636   002EA8  ECCA  F01A         	call	_display_mm	;wreg free
  5637   002EAC                     
  5638                           ;OBCII_PIC18F46K22.c: 607:                 menu_sel = -1;
  5639   002EAC  0100               	movlb	0	; () banked
  5640   002EAE  69F3               	setf	_menu_sel& (0+255),b
  5641   002EB0  69F4               	setf	(_menu_sel+1)& (0+255),b
  5642                           
  5643                           ;OBCII_PIC18F46K22.c: 608:                 break;
  5644   002EB2  EF66  F017         	goto	l4538
  5645   002EB6                     l4534:
  5646                           
  5647                           ;OBCII_PIC18F46K22.c: 611:         parsing_notif();
  5648   002EB6  EC19  F01B         	call	_parsing_notif	;wreg free
  5649   002EBA                     l4536:
  5650                           
  5651                           ;OBCII_PIC18F46K22.c: 600:     while(!message_complete) {
  5652   002EBA  0100               	movlb	0	; () banked
  5653   002EBC  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  5654   002EBE  B4D8               	btfsc	status,2,c
  5655   002EC0  EF64  F017         	goto	u4901
  5656   002EC4  EF66  F017         	goto	u4900
  5657   002EC8                     u4901:
  5658   002EC8  EF3C  F017         	goto	l317
  5659   002ECC                     u4900:
  5660   002ECC                     l4538:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;OBCII_PIC18F46K22.c: 613:     clear_parsing_notif();
  5664   002ECC  EC25  F01B         	call	_clear_parsing_notif	;wreg free
  5665   002ED0                     
  5666                           ;OBCII_PIC18F46K22.c: 615:     LCD_cursor_set(1,1);
  5667   002ED0  0E01               	movlw	1
  5668   002ED2  6E06               	movwf	LCD_cursor_set@column^0,c
  5669   002ED4  0E01               	movlw	1
  5670   002ED6  EC42  F019         	call	_LCD_cursor_set
  5671   002EDA                     
  5672                           ;OBCII_PIC18F46K22.c: 616:     LCD_write_string("OS:");
  5673   002EDA  0EE4               	movlw	low STR_31
  5674   002EDC  6E06               	movwf	LCD_write_string@string^0,c
  5675   002EDE  0EFF               	movlw	high STR_31
  5676   002EE0  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5677   002EE2  ECFC  F017         	call	_LCD_write_string	;wreg free
  5678   002EE6                     
  5679                           ;OBCII_PIC18F46K22.c: 617:     LCD_write_string(buffer);
  5680   002EE6  0E00               	movlw	low _buffer
  5681   002EE8  6E06               	movwf	LCD_write_string@string^0,c
  5682   002EEA  0E02               	movlw	high _buffer
  5683   002EEC  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5684   002EEE  ECFC  F017         	call	_LCD_write_string	;wreg free
  5685   002EF2                     
  5686                           ;OBCII_PIC18F46K22.c: 620:     buffer_count = 0;
  5687   002EF2  0100               	movlb	0	; () banked
  5688   002EF4  6BD2               	clrf	_buffer_count& (0+255),b
  5689   002EF6                     
  5690                           ; BSR set to: 0
  5691                           ;OBCII_PIC18F46K22.c: 621:     message_complete = 0;
  5692   002EF6  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  5693   002EF8                     
  5694                           ; BSR set to: 0
  5695   002EF8  0012               	return		;funcret
  5696   002EFA                     __end_of_print_ELMVer:
  5697                           	callstack 0
  5698                           
  5699 ;; *************** function _diagnostic_trouble_codes *****************
  5700 ;; Defined at:
  5701 ;;		line 680 in file "OBCII_PIC18F46K22.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  byte2_str       3   59[BANK0 ] unsigned char [3]
  5706 ;;  byte1_str       3   56[BANK0 ] unsigned char [3]
  5707 ;;  byte2           2   64[BANK0 ] unsigned int 
  5708 ;;  byte1           2   62[BANK0 ] unsigned int 
  5709 ;;  i               2   68[BANK0 ] int 
  5710 ;;  dtc_index       2   66[BANK0 ] int 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;Total ram usage:       16 bytes
  5725 ;; Hardware stack levels used: 1
  5726 ;; Hardware stack levels required when called: 10
  5727 ;; This function calls:
  5728 ;;		_LCD_clear
  5729 ;;		_LCD_cursor_set
  5730 ;;		_LCD_write_string
  5731 ;;		_UART1_SendString
  5732 ;;		_clear_parsing_notif
  5733 ;;		_decode_dtc
  5734 ;;		_parsing_notif
  5735 ;;		_sscanf
  5736 ;; This function is called by:
  5737 ;;		_main_menu
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text21
  5742   0009B0                     __ptext21:
  5743                           	callstack 0
  5744   0009B0                     _diagnostic_trouble_codes:
  5745                           	callstack 19
  5746   0009B0                     
  5747                           ;OBCII_PIC18F46K22.c: 682:     int dtc_index = 0;
  5748   0009B0  0E00               	movlw	0
  5749   0009B2  0100               	movlb	0	; () banked
  5750   0009B4  6FA3               	movwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),b
  5751   0009B6  0E00               	movlw	0
  5752   0009B8  6FA2               	movwf	diagnostic_trouble_codes@dtc_index& (0+255),b
  5753                           
  5754                           ;OBCII_PIC18F46K22.c: 683:     int i = 0;
  5755   0009BA  0E00               	movlw	0
  5756   0009BC  6FA5               	movwf	(diagnostic_trouble_codes@i+1)& (0+255),b
  5757   0009BE  0E00               	movlw	0
  5758   0009C0  6FA4               	movwf	diagnostic_trouble_codes@i& (0+255),b
  5759   0009C2                     
  5760                           ; BSR set to: 0
  5761                           ;OBCII_PIC18F46K22.c: 685:     LCD_cursor_set(1,1);
  5762   0009C2  0E01               	movlw	1
  5763   0009C4  6E06               	movwf	LCD_cursor_set@column^0,c
  5764   0009C6  0E01               	movlw	1
  5765   0009C8  EC42  F019         	call	_LCD_cursor_set
  5766   0009CC                     
  5767                           ;OBCII_PIC18F46K22.c: 686:     LCD_write_string("DTC's Requested");
  5768   0009CC  0E17               	movlw	low STR_37
  5769   0009CE  6E06               	movwf	LCD_write_string@string^0,c
  5770   0009D0  0EFF               	movlw	high STR_37
  5771   0009D2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5772   0009D4  ECFC  F017         	call	_LCD_write_string	;wreg free
  5773   0009D8                     
  5774                           ;OBCII_PIC18F46K22.c: 687:     LCD_cursor_set(2,1);
  5775   0009D8  0E01               	movlw	1
  5776   0009DA  6E06               	movwf	LCD_cursor_set@column^0,c
  5777   0009DC  0E02               	movlw	2
  5778   0009DE  EC42  F019         	call	_LCD_cursor_set
  5779   0009E2                     
  5780                           ;OBCII_PIC18F46K22.c: 688:     LCD_write_string("Loading...");
  5781   0009E2  0E7D               	movlw	low STR_38
  5782   0009E4  6E06               	movwf	LCD_write_string@string^0,c
  5783   0009E6  0EFF               	movlw	high STR_38
  5784   0009E8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5785   0009EA  ECFC  F017         	call	_LCD_write_string	;wreg free
  5786   0009EE                     
  5787                           ;OBCII_PIC18F46K22.c: 689:     UART1_SendString("03\r");
  5788   0009EE  0EDC               	movlw	low STR_39
  5789   0009F0  6E04               	movwf	UART1_SendString@string^0,c
  5790   0009F2  0EFF               	movlw	high STR_39
  5791   0009F4  6E05               	movwf	(UART1_SendString@string+1)^0,c
  5792   0009F6  ECA1  F019         	call	_UART1_SendString	;wreg free
  5793                           
  5794                           ;OBCII_PIC18F46K22.c: 691:     while (!message_complete) {
  5795   0009FA  EF01  F005         	goto	l5812
  5796   0009FE                     l5810:
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;OBCII_PIC18F46K22.c: 692:         parsing_notif();
  5800   0009FE  EC19  F01B         	call	_parsing_notif	;wreg free
  5801   000A02                     l5812:
  5802                           
  5803                           ;OBCII_PIC18F46K22.c: 691:     while (!message_complete) {
  5804   000A02  0100               	movlb	0	; () banked
  5805   000A04  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  5806   000A06  B4D8               	btfsc	status,2,c
  5807   000A08  EF08  F005         	goto	u6751
  5808   000A0C  EF0A  F005         	goto	u6750
  5809   000A10                     u6751:
  5810   000A10  EFFF  F004         	goto	l5810
  5811   000A14                     u6750:
  5812   000A14                     
  5813                           ; BSR set to: 0
  5814                           ;OBCII_PIC18F46K22.c: 694:     clear_parsing_notif();
  5815   000A14  EC25  F01B         	call	_clear_parsing_notif	;wreg free
  5816                           
  5817                           ;OBCII_PIC18F46K22.c: 697:     while (!(buffer[i] == '4' && buffer[i+1] == '3')) {
  5818   000A18  EF30  F005         	goto	l5822
  5819   000A1C                     l5816:
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;OBCII_PIC18F46K22.c: 698:         i++;
  5823   000A1C  4BA4               	infsnz	diagnostic_trouble_codes@i& (0+255),f,b
  5824   000A1E  2BA5               	incf	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5825   000A20                     
  5826                           ; BSR set to: 0
  5827                           ;OBCII_PIC18F46K22.c: 699:         if (buffer[i] == '>' || buffer[i+1] == '>') return;
  5828   000A20  0E00               	movlw	low _buffer
  5829   000A22  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5830   000A24  6ED9               	movwf	fsr2l,c
  5831   000A26  0E02               	movlw	high _buffer
  5832   000A28  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5833   000A2A  6EDA               	movwf	fsr2h,c
  5834   000A2C  0E3E               	movlw	62
  5835   000A2E  18DE               	xorwf	postinc2,w,c
  5836   000A30  B4D8               	btfsc	status,2,c
  5837   000A32  EF1D  F005         	goto	u6761
  5838   000A36  EF1F  F005         	goto	u6760
  5839   000A3A                     u6761:
  5840   000A3A  EF6D  F006         	goto	l353
  5841   000A3E                     u6760:
  5842   000A3E                     
  5843                           ; BSR set to: 0
  5844   000A3E  0E01               	movlw	low (_buffer+1)
  5845   000A40  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5846   000A42  6ED9               	movwf	fsr2l,c
  5847   000A44  0E02               	movlw	high (_buffer+1)
  5848   000A46  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5849   000A48  6EDA               	movwf	fsr2h,c
  5850   000A4A  0E3E               	movlw	62
  5851   000A4C  18DE               	xorwf	postinc2,w,c
  5852   000A4E  A4D8               	btfss	status,2,c
  5853   000A50  EF2C  F005         	goto	u6771
  5854   000A54  EF2E  F005         	goto	u6770
  5855   000A58                     u6771:
  5856   000A58  EF30  F005         	goto	l5822
  5857   000A5C                     u6770:
  5858   000A5C  EF6D  F006         	goto	l353
  5859   000A60                     l5822:
  5860                           
  5861                           ;OBCII_PIC18F46K22.c: 697:     while (!(buffer[i] == '4' && buffer[i+1] == '3')) {
  5862   000A60  0E00               	movlw	low _buffer
  5863   000A62  0100               	movlb	0	; () banked
  5864   000A64  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5865   000A66  6ED9               	movwf	fsr2l,c
  5866   000A68  0E02               	movlw	high _buffer
  5867   000A6A  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5868   000A6C  6EDA               	movwf	fsr2h,c
  5869   000A6E  0E34               	movlw	52
  5870   000A70  18DE               	xorwf	postinc2,w,c
  5871   000A72  A4D8               	btfss	status,2,c
  5872   000A74  EF3E  F005         	goto	u6781
  5873   000A78  EF40  F005         	goto	u6780
  5874   000A7C                     u6781:
  5875   000A7C  EF0E  F005         	goto	l5816
  5876   000A80                     u6780:
  5877   000A80                     
  5878                           ; BSR set to: 0
  5879   000A80  0E01               	movlw	low (_buffer+1)
  5880   000A82  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5881   000A84  6ED9               	movwf	fsr2l,c
  5882   000A86  0E02               	movlw	high (_buffer+1)
  5883   000A88  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5884   000A8A  6EDA               	movwf	fsr2h,c
  5885   000A8C  0E33               	movlw	51
  5886   000A8E  18DE               	xorwf	postinc2,w,c
  5887   000A90  A4D8               	btfss	status,2,c
  5888   000A92  EF4D  F005         	goto	u6791
  5889   000A96  EF4F  F005         	goto	u6790
  5890   000A9A                     u6791:
  5891   000A9A  EF0E  F005         	goto	l5816
  5892   000A9E                     u6790:
  5893   000A9E                     
  5894                           ; BSR set to: 0
  5895                           ;OBCII_PIC18F46K22.c: 701:     i += 2;
  5896   000A9E  0E02               	movlw	2
  5897   000AA0  27A4               	addwf	diagnostic_trouble_codes@i& (0+255),f,b
  5898   000AA2  0E00               	movlw	0
  5899   000AA4  23A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5900                           
  5901                           ;OBCII_PIC18F46K22.c: 704:     while (buffer[i] != '>' && dtc_index < 10) {
  5902   000AA6  EF05  F006         	goto	l5860
  5903   000AAA                     l5828:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;OBCII_PIC18F46K22.c: 705:         if (buffer[i] == ' ' || buffer[i] == '\r' || buffer[i
      +                          ] == '\n') {
  5907   000AAA  0E00               	movlw	low _buffer
  5908   000AAC  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5909   000AAE  6ED9               	movwf	fsr2l,c
  5910   000AB0  0E02               	movlw	high _buffer
  5911   000AB2  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5912   000AB4  6EDA               	movwf	fsr2h,c
  5913   000AB6  0E20               	movlw	32
  5914   000AB8  18DE               	xorwf	postinc2,w,c
  5915   000ABA  B4D8               	btfsc	status,2,c
  5916   000ABC  EF62  F005         	goto	u6801
  5917   000AC0  EF64  F005         	goto	u6800
  5918   000AC4                     u6801:
  5919   000AC4  EF82  F005         	goto	l5834
  5920   000AC8                     u6800:
  5921   000AC8                     
  5922                           ; BSR set to: 0
  5923   000AC8  0E00               	movlw	low _buffer
  5924   000ACA  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5925   000ACC  6ED9               	movwf	fsr2l,c
  5926   000ACE  0E02               	movlw	high _buffer
  5927   000AD0  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5928   000AD2  6EDA               	movwf	fsr2h,c
  5929   000AD4  0E0D               	movlw	13
  5930   000AD6  18DE               	xorwf	postinc2,w,c
  5931   000AD8  B4D8               	btfsc	status,2,c
  5932   000ADA  EF71  F005         	goto	u6811
  5933   000ADE  EF73  F005         	goto	u6810
  5934   000AE2                     u6811:
  5935   000AE2  EF82  F005         	goto	l5834
  5936   000AE6                     u6810:
  5937   000AE6                     
  5938                           ; BSR set to: 0
  5939   000AE6  0E00               	movlw	low _buffer
  5940   000AE8  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5941   000AEA  6ED9               	movwf	fsr2l,c
  5942   000AEC  0E02               	movlw	high _buffer
  5943   000AEE  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5944   000AF0  6EDA               	movwf	fsr2h,c
  5945   000AF2  0E0A               	movlw	10
  5946   000AF4  18DE               	xorwf	postinc2,w,c
  5947   000AF6  A4D8               	btfss	status,2,c
  5948   000AF8  EF80  F005         	goto	u6821
  5949   000AFC  EF82  F005         	goto	u6820
  5950   000B00                     u6821:
  5951   000B00  EF86  F005         	goto	l5836
  5952   000B04                     u6820:
  5953   000B04                     l5834:
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;OBCII_PIC18F46K22.c: 706:             i++;
  5957   000B04  4BA4               	infsnz	diagnostic_trouble_codes@i& (0+255),f,b
  5958   000B06  2BA5               	incf	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5959                           
  5960                           ;OBCII_PIC18F46K22.c: 707:             continue;
  5961   000B08  EF05  F006         	goto	l5860
  5962   000B0C                     l5836:
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;OBCII_PIC18F46K22.c: 710:         if (buffer[i+3] == '>') break;
  5966   000B0C  0E03               	movlw	low (_buffer+3)
  5967   000B0E  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5968   000B10  6ED9               	movwf	fsr2l,c
  5969   000B12  0E02               	movlw	high (_buffer+3)
  5970   000B14  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5971   000B16  6EDA               	movwf	fsr2h,c
  5972   000B18  0E3E               	movlw	62
  5973   000B1A  18DE               	xorwf	postinc2,w,c
  5974   000B1C  A4D8               	btfss	status,2,c
  5975   000B1E  EF93  F005         	goto	u6831
  5976   000B22  EF95  F005         	goto	u6830
  5977   000B26                     u6831:
  5978   000B26  EF97  F005         	goto	l5840
  5979   000B2A                     u6830:
  5980   000B2A  EF22  F006         	goto	l5864
  5981   000B2E                     l5840:
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;OBCII_PIC18F46K22.c: 712:         char byte1_str[3] = { buffer[i], buffer[i+1], '>' };
  5985   000B2E  0E00               	movlw	0
  5986   000B30  6F98               	movwf	diagnostic_trouble_codes@byte1_str& (0+255),b
  5987   000B32  0E00               	movlw	0
  5988   000B34  6F99               	movwf	(diagnostic_trouble_codes@byte1_str+1)& (0+255),b
  5989   000B36  0E00               	movlw	0
  5990   000B38  6F9A               	movwf	(diagnostic_trouble_codes@byte1_str+2)& (0+255),b
  5991   000B3A                     
  5992                           ; BSR set to: 0
  5993   000B3A  0E00               	movlw	low _buffer
  5994   000B3C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5995   000B3E  6ED9               	movwf	fsr2l,c
  5996   000B40  0E02               	movlw	high _buffer
  5997   000B42  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5998   000B44  6EDA               	movwf	fsr2h,c
  5999   000B46  50DF               	movf	indf2,w,c
  6000   000B48  6F98               	movwf	diagnostic_trouble_codes@byte1_str& (0+255),b
  6001   000B4A                     
  6002                           ; BSR set to: 0
  6003   000B4A  0E01               	movlw	low (_buffer+1)
  6004   000B4C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  6005   000B4E  6ED9               	movwf	fsr2l,c
  6006   000B50  0E02               	movlw	high (_buffer+1)
  6007   000B52  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  6008   000B54  6EDA               	movwf	fsr2h,c
  6009   000B56  50DF               	movf	indf2,w,c
  6010   000B58  6F99               	movwf	(diagnostic_trouble_codes@byte1_str+1)& (0+255),b
  6011   000B5A  0E3E               	movlw	62
  6012   000B5C  6F9A               	movwf	(diagnostic_trouble_codes@byte1_str+2)& (0+255),b
  6013                           
  6014                           ;OBCII_PIC18F46K22.c: 713:         char byte2_str[3] = { buffer[i+2], buffer[i+3], '>' }
      +                          ;
  6015   000B5E  0E00               	movlw	0
  6016   000B60  6F9B               	movwf	diagnostic_trouble_codes@byte2_str& (0+255),b
  6017   000B62  0E00               	movlw	0
  6018   000B64  6F9C               	movwf	(diagnostic_trouble_codes@byte2_str+1)& (0+255),b
  6019   000B66  0E00               	movlw	0
  6020   000B68  6F9D               	movwf	(diagnostic_trouble_codes@byte2_str+2)& (0+255),b
  6021   000B6A                     
  6022                           ; BSR set to: 0
  6023   000B6A  0E02               	movlw	low (_buffer+2)
  6024   000B6C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  6025   000B6E  6ED9               	movwf	fsr2l,c
  6026   000B70  0E02               	movlw	high (_buffer+2)
  6027   000B72  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  6028   000B74  6EDA               	movwf	fsr2h,c
  6029   000B76  50DF               	movf	indf2,w,c
  6030   000B78  6F9B               	movwf	diagnostic_trouble_codes@byte2_str& (0+255),b
  6031   000B7A                     
  6032                           ; BSR set to: 0
  6033   000B7A  0E03               	movlw	low (_buffer+3)
  6034   000B7C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  6035   000B7E  6ED9               	movwf	fsr2l,c
  6036   000B80  0E02               	movlw	high (_buffer+3)
  6037   000B82  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  6038   000B84  6EDA               	movwf	fsr2h,c
  6039   000B86  50DF               	movf	indf2,w,c
  6040   000B88  6F9C               	movwf	(diagnostic_trouble_codes@byte2_str+1)& (0+255),b
  6041   000B8A  0E3E               	movlw	62
  6042   000B8C  6F9D               	movwf	(diagnostic_trouble_codes@byte2_str+2)& (0+255),b
  6043                           
  6044                           ;OBCII_PIC18F46K22.c: 714:         unsigned int byte1 = 0, byte2 = 0;
  6045   000B8E  0E00               	movlw	0
  6046   000B90  6F9F               	movwf	(diagnostic_trouble_codes@byte1+1)& (0+255),b
  6047   000B92  0E00               	movlw	0
  6048   000B94  6F9E               	movwf	diagnostic_trouble_codes@byte1& (0+255),b
  6049   000B96  0E00               	movlw	0
  6050   000B98  6FA1               	movwf	(diagnostic_trouble_codes@byte2+1)& (0+255),b
  6051   000B9A  0E00               	movlw	0
  6052   000B9C  6FA0               	movwf	diagnostic_trouble_codes@byte2& (0+255),b
  6053   000B9E                     
  6054                           ; BSR set to: 0
  6055                           ;OBCII_PIC18F46K22.c: 716:         sscanf(byte1_str, "%x", &byte1);
  6056   000B9E  0E98               	movlw	low diagnostic_trouble_codes@byte1_str
  6057   000BA0  6F85               	movwf	sscanf@s& (0+255),b
  6058   000BA2  0EF7               	movlw	low STR_40
  6059   000BA4  6F86               	movwf	sscanf@fmt& (0+255),b
  6060   000BA6  0EFF               	movlw	high STR_40
  6061   000BA8  6F87               	movwf	(sscanf@fmt+1)& (0+255),b
  6062   000BAA  0E9E               	movlw	low diagnostic_trouble_codes@byte1
  6063   000BAC  6F88               	movwf	(?_sscanf+3)& (0+255),b
  6064   000BAE  6B89               	clrf	(?_sscanf+4)& (0+255),b
  6065   000BB0  ECB1  F01A         	call	_sscanf	;wreg free
  6066   000BB4                     
  6067                           ;OBCII_PIC18F46K22.c: 717:         sscanf(byte2_str, "%x", &byte2);
  6068   000BB4  0E9B               	movlw	low diagnostic_trouble_codes@byte2_str
  6069   000BB6  0100               	movlb	0	; () banked
  6070   000BB8  6F85               	movwf	sscanf@s& (0+255),b
  6071   000BBA  0EF7               	movlw	low STR_40
  6072   000BBC  6F86               	movwf	sscanf@fmt& (0+255),b
  6073   000BBE  0EFF               	movlw	high STR_40
  6074   000BC0  6F87               	movwf	(sscanf@fmt+1)& (0+255),b
  6075   000BC2  0EA0               	movlw	low diagnostic_trouble_codes@byte2
  6076   000BC4  6F88               	movwf	(?_sscanf+3)& (0+255),b
  6077   000BC6  6B89               	clrf	(?_sscanf+4)& (0+255),b
  6078   000BC8  ECB1  F01A         	call	_sscanf	;wreg free
  6079   000BCC                     
  6080                           ;OBCII_PIC18F46K22.c: 718:         decode_dtc((uint8_t)byte1, (uint8_t)byte2, dtc_codes[
      +                          dtc_index]);
  6081   000BCC  C09E  F04E         	movff	diagnostic_trouble_codes@byte1,decode_dtc@b1
  6082   000BD0  6A4F               	clrf	(decode_dtc@b1+1)^0,c
  6083   000BD2  C0A0  F050         	movff	diagnostic_trouble_codes@byte2,decode_dtc@b2
  6084   000BD6  6A51               	clrf	(decode_dtc@b2+1)^0,c
  6085   000BD8  0E06               	movlw	6
  6086   000BDA  0100               	movlb	0	; () banked
  6087   000BDC  03A2               	mulwf	diagnostic_trouble_codes@dtc_index& (0+255),b
  6088   000BDE  CFF3 F096          	movff	prodl,??_diagnostic_trouble_codes
  6089   000BE2  CFF4 F097          	movff	prodh,??_diagnostic_trouble_codes+1
  6090   000BE6  03A3               	mulwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),b
  6091   000BE8  50F3               	movf	prodl,w,c
  6092   000BEA  2797               	addwf	(??_diagnostic_trouble_codes+1)& (0+255),f,b
  6093   000BEC  0E00               	movlw	low _dtc_codes
  6094   000BEE  2596               	addwf	??_diagnostic_trouble_codes& (0+255),w,b
  6095   000BF0  6E52               	movwf	decode_dtc@dtc^0,c
  6096   000BF2  0E01               	movlw	high _dtc_codes
  6097   000BF4  2197               	addwfc	(??_diagnostic_trouble_codes+1)& (0+255),w,b
  6098   000BF6  6E53               	movwf	(decode_dtc@dtc+1)^0,c
  6099   000BF8  EC5E  F013         	call	_decode_dtc	;wreg free
  6100   000BFC                     
  6101                           ;OBCII_PIC18F46K22.c: 719:         dtc_index++;
  6102   000BFC  0100               	movlb	0	; () banked
  6103   000BFE  4BA2               	infsnz	diagnostic_trouble_codes@dtc_index& (0+255),f,b
  6104   000C00  2BA3               	incf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),f,b
  6105   000C02                     
  6106                           ; BSR set to: 0
  6107                           ;OBCII_PIC18F46K22.c: 720:         i += 4;
  6108   000C02  0E04               	movlw	4
  6109   000C04  27A4               	addwf	diagnostic_trouble_codes@i& (0+255),f,b
  6110   000C06  0E00               	movlw	0
  6111   000C08  23A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  6112   000C0A                     l5860:
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;OBCII_PIC18F46K22.c: 704:     while (buffer[i] != '>' && dtc_index < 10) {
  6116   000C0A  0E00               	movlw	low _buffer
  6117   000C0C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  6118   000C0E  6ED9               	movwf	fsr2l,c
  6119   000C10  0E02               	movlw	high _buffer
  6120   000C12  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  6121   000C14  6EDA               	movwf	fsr2h,c
  6122   000C16  0E3E               	movlw	62
  6123   000C18  18DE               	xorwf	postinc2,w,c
  6124   000C1A  B4D8               	btfsc	status,2,c
  6125   000C1C  EF12  F006         	goto	u6841
  6126   000C20  EF14  F006         	goto	u6840
  6127   000C24                     u6841:
  6128   000C24  EF22  F006         	goto	l5864
  6129   000C28                     u6840:
  6130   000C28                     
  6131                           ; BSR set to: 0
  6132   000C28  BFA3               	btfsc	(diagnostic_trouble_codes@dtc_index+1)& (0+255),7,b
  6133   000C2A  EF20  F006         	goto	u6851
  6134   000C2E  51A3               	movf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),w,b
  6135   000C30  E109               	bnz	u6850
  6136   000C32  0E0A               	movlw	10
  6137   000C34  5DA2               	subwf	diagnostic_trouble_codes@dtc_index& (0+255),w,b
  6138   000C36  A0D8               	btfss	status,0,c
  6139   000C38  EF20  F006         	goto	u6851
  6140   000C3C  EF22  F006         	goto	u6850
  6141   000C40                     u6851:
  6142   000C40  EF55  F005         	goto	l5828
  6143   000C44                     u6850:
  6144   000C44                     l5864:
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;OBCII_PIC18F46K22.c: 724:     if (dtc_index == 0) {
  6148   000C44  51A2               	movf	diagnostic_trouble_codes@dtc_index& (0+255),w,b
  6149   000C46  11A3               	iorwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),w,b
  6150   000C48  A4D8               	btfss	status,2,c
  6151   000C4A  EF29  F006         	goto	u6861
  6152   000C4E  EF2B  F006         	goto	u6860
  6153   000C52                     u6861:
  6154   000C52  EF38  F006         	goto	l5870
  6155   000C56                     u6860:
  6156   000C56                     
  6157                           ; BSR set to: 0
  6158                           ;OBCII_PIC18F46K22.c: 725:         LCD_clear();
  6159   000C56  EC0A  F01B         	call	_LCD_clear	;wreg free
  6160                           
  6161                           ;OBCII_PIC18F46K22.c: 726:         LCD_cursor_set(1,1);
  6162   000C5A  0E01               	movlw	1
  6163   000C5C  6E06               	movwf	LCD_cursor_set@column^0,c
  6164   000C5E  0E01               	movlw	1
  6165   000C60  EC42  F019         	call	_LCD_cursor_set
  6166   000C64                     
  6167                           ;OBCII_PIC18F46K22.c: 727:         LCD_write_string("No DTCs Found");
  6168   000C64  0E6F               	movlw	low STR_42
  6169   000C66  6E06               	movwf	LCD_write_string@string^0,c
  6170   000C68  0EFF               	movlw	high STR_42
  6171   000C6A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  6172   000C6C  ECFC  F017         	call	_LCD_write_string	;wreg free
  6173   000C70                     l5870:
  6174                           
  6175                           ;OBCII_PIC18F46K22.c: 729:     if(dtc_index >= 1) {
  6176   000C70  0100               	movlb	0	; () banked
  6177   000C72  BFA3               	btfsc	(diagnostic_trouble_codes@dtc_index+1)& (0+255),7,b
  6178   000C74  EF44  F006         	goto	u6871
  6179   000C78  51A3               	movf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),w,b
  6180   000C7A  E108               	bnz	u6870
  6181   000C7C  05A2               	decf	diagnostic_trouble_codes@dtc_index& (0+255),w,b
  6182   000C7E  A0D8               	btfss	status,0,c
  6183   000C80  EF44  F006         	goto	u6871
  6184   000C84  EF46  F006         	goto	u6870
  6185   000C88                     u6871:
  6186   000C88  EF6A  F006         	goto	l5880
  6187   000C8C                     u6870:
  6188   000C8C                     
  6189                           ; BSR set to: 0
  6190                           ;OBCII_PIC18F46K22.c: 730:             LCD_clear();
  6191   000C8C  EC0A  F01B         	call	_LCD_clear	;wreg free
  6192                           
  6193                           ;OBCII_PIC18F46K22.c: 731:             LCD_cursor_set(1,1);
  6194   000C90  0E01               	movlw	1
  6195   000C92  6E06               	movwf	LCD_cursor_set@column^0,c
  6196   000C94  0E01               	movlw	1
  6197   000C96  EC42  F019         	call	_LCD_cursor_set
  6198   000C9A                     
  6199                           ;OBCII_PIC18F46K22.c: 732:             LCD_write_string("DTC(s) Found:");
  6200   000C9A  0E53               	movlw	low STR_43
  6201   000C9C  6E06               	movwf	LCD_write_string@string^0,c
  6202   000C9E  0EFF               	movlw	high STR_43
  6203   000CA0  6E07               	movwf	(LCD_write_string@string+1)^0,c
  6204   000CA2  ECFC  F017         	call	_LCD_write_string	;wreg free
  6205   000CA6                     
  6206                           ;OBCII_PIC18F46K22.c: 733:             LCD_cursor_set(2,1);
  6207   000CA6  0E01               	movlw	1
  6208   000CA8  6E06               	movwf	LCD_cursor_set@column^0,c
  6209   000CAA  0E02               	movlw	2
  6210   000CAC  EC42  F019         	call	_LCD_cursor_set
  6211   000CB0                     
  6212                           ;OBCII_PIC18F46K22.c: 735:             LCD_write_string(dtc_codes[dtc_index]);
  6213   000CB0  0E06               	movlw	6
  6214   000CB2  0100               	movlb	0	; () banked
  6215   000CB4  03A2               	mulwf	diagnostic_trouble_codes@dtc_index& (0+255),b
  6216   000CB6  CFF3 F096          	movff	prodl,??_diagnostic_trouble_codes
  6217   000CBA  CFF4 F097          	movff	prodh,??_diagnostic_trouble_codes+1
  6218   000CBE  03A3               	mulwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),b
  6219   000CC0  50F3               	movf	prodl,w,c
  6220   000CC2  2797               	addwf	(??_diagnostic_trouble_codes+1)& (0+255),f,b
  6221   000CC4  0E00               	movlw	low _dtc_codes
  6222   000CC6  2596               	addwf	??_diagnostic_trouble_codes& (0+255),w,b
  6223   000CC8  6E06               	movwf	LCD_write_string@string^0,c
  6224   000CCA  0E01               	movlw	high _dtc_codes
  6225   000CCC  2197               	addwfc	(??_diagnostic_trouble_codes+1)& (0+255),w,b
  6226   000CCE  6E07               	movwf	(LCD_write_string@string+1)^0,c
  6227   000CD0  ECFC  F017         	call	_LCD_write_string	;wreg free
  6228   000CD4                     l5880:
  6229                           
  6230                           ;OBCII_PIC18F46K22.c: 739:     buffer_count = 0;
  6231   000CD4  0100               	movlb	0	; () banked
  6232   000CD6  6BD2               	clrf	_buffer_count& (0+255),b
  6233   000CD8                     
  6234                           ; BSR set to: 0
  6235                           ;OBCII_PIC18F46K22.c: 740:     message_complete = 0;
  6236   000CD8  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  6237   000CDA                     l353:
  6238                           
  6239                           ; BSR set to: 0
  6240   000CDA  0012               	return		;funcret
  6241   000CDC                     __end_of_diagnostic_trouble_codes:
  6242                           	callstack 0
  6243                           
  6244 ;; *************** function _sscanf *****************
  6245 ;; Defined at:
  6246 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sscanf.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  s               1   37[BANK0 ] PTR const unsigned char 
  6249 ;;		 -> diagnostic_trouble_codes@byte2_str(3), diagnostic_trouble_codes@byte1_str(3), 
  6250 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  6251 ;;		 -> STR_41(3), STR_40(3), 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  f              11   43[BANK0 ] struct _IO_FILE
  6254 ;;  ret             2    0        int 
  6255 ;;  ap              1   42[BANK0 ] PTR void [1]
  6256 ;;		 -> ?_sscanf(2), 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  2   37[BANK0 ] int 
  6259 ;; Registers used:
  6260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6266 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;Total ram usage:       17 bytes
  6271 ;; Hardware stack levels used: 1
  6272 ;; Hardware stack levels required when called: 7
  6273 ;; This function calls:
  6274 ;;		_vfscanf
  6275 ;; This function is called by:
  6276 ;;		_diagnostic_trouble_codes
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text22
  6281   003562                     __ptext22:
  6282                           	callstack 0
  6283   003562                     _sscanf:
  6284                           	callstack 21
  6285   003562  0E88               	movlw	low (?_sscanf+3)
  6286   003564  0100               	movlb	0	; () banked
  6287   003566  6F8A               	movwf	sscanf@ap& (0+255),b
  6288   003568  C085  F08B         	movff	sscanf@s,sscanf@f
  6289   00356C  6B8C               	clrf	(sscanf@f+1)& (0+255),b
  6290   00356E                     
  6291                           ; BSR set to: 0
  6292   00356E  0E00               	movlw	0
  6293   003570  6F8E               	movwf	(sscanf@f+3)& (0+255),b
  6294   003572  0E00               	movlw	0
  6295   003574  6F8D               	movwf	(sscanf@f+2)& (0+255),b
  6296   003576                     
  6297                           ; BSR set to: 0
  6298   003576  0E00               	movlw	0
  6299   003578  6F93               	movwf	(sscanf@f+8)& (0+255),b
  6300   00357A  0E00               	movlw	0
  6301   00357C  6F92               	movwf	(sscanf@f+7)& (0+255),b
  6302   00357E                     
  6303                           ; BSR set to: 0
  6304   00357E  0E8B               	movlw	low sscanf@f
  6305   003580  6F7B               	movwf	vfscanf@fp& (0+255),b
  6306   003582  C086  F07C         	movff	sscanf@fmt,vfscanf@fmt
  6307   003586  C087  F07D         	movff	sscanf@fmt+1,vfscanf@fmt+1
  6308   00358A  0E8A               	movlw	low sscanf@ap
  6309   00358C  6F7E               	movwf	vfscanf@ap& (0+255),b
  6310   00358E  EC2E  F014         	call	_vfscanf	;wreg free
  6311   003592  0012               	return		;funcret
  6312   003594                     __end_of_sscanf:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _vfscanf *****************
  6316 ;; Defined at:
  6317 ;;		line 1497 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  6320 ;;		 -> sscanf@f(11), 
  6321 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  6322 ;;		 -> STR_41(3), STR_40(3), 
  6323 ;;  ap              1   30[BANK0 ] PTR PTR void 
  6324 ;;		 -> sscanf@ap(1), 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  cfmt            2   35[BANK0 ] PTR unsigned char 
  6327 ;;		 -> STR_41(3), STR_40(3), 
  6328 ;;  n               2   33[BANK0 ] int 
  6329 ;;  saved_errno     2   31[BANK0 ] int 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  2   27[BANK0 ] int 
  6332 ;; Registers used:
  6333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:       10 bytes
  6344 ;; Hardware stack levels used: 1
  6345 ;; Hardware stack levels required when called: 6
  6346 ;; This function calls:
  6347 ;;		_vfsfcnvrt
  6348 ;; This function is called by:
  6349 ;;		_sscanf
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text23
  6354   00285C                     __ptext23:
  6355                           	callstack 0
  6356   00285C                     _vfscanf:
  6357                           	callstack 21
  6358   00285C                     
  6359                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1497: int vfscanf
      +                          (FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doscan.c: 1498: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doscan.c: 1499:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doscan.c: 1500:     int n, saved_errno;;C:\Program Files\Microchip\xc8\v3.00\pic\s
      +                          ources\c99\common\doscan.c: 1502:     cfmt = (char *)fmt;
  6360   00285C  C07C  F083         	movff	vfscanf@fmt,vfscanf@cfmt
  6361   002860  C07D  F084         	movff	vfscanf@fmt+1,vfscanf@cfmt+1
  6362   002864                     
  6363                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1503:     ncnv = 
      +                          nmatch = 0;
  6364   002864  0E00               	movlw	0
  6365   002866  0100               	movlb	0	; () banked
  6366   002868  6FB8               	movwf	(_nmatch+1)& (0+255),b
  6367   00286A  0E00               	movlw	0
  6368   00286C  6FB7               	movwf	_nmatch& (0+255),b
  6369   00286E  C0B7  F0B9         	movff	_nmatch,_ncnv
  6370   002872  C0B8  F0BA         	movff	_nmatch+1,_ncnv+1
  6371   002876                     
  6372                           ; BSR set to: 0
  6373                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1504:  saved_errn
      +                          o = errno;
  6374   002876  C0BD  F07F         	movff	_errno,vfscanf@saved_errno
  6375   00287A  C0BE  F080         	movff	_errno+1,vfscanf@saved_errno+1
  6376                           
  6377                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1505:     while (
      +                          *cfmt) {
  6378   00287E  EF60  F014         	goto	l5780
  6379   002882                     l5770:
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1506:   errno = 0
      +                          ;
  6383   002882  0E00               	movlw	0
  6384   002884  6FBE               	movwf	(_errno+1)& (0+255),b
  6385   002886  0E00               	movlw	0
  6386   002888  6FBD               	movwf	_errno& (0+255),b
  6387   00288A                     
  6388                           ; BSR set to: 0
  6389                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1507:         n =
      +                           vfsfcnvrt(fp, &cfmt, ap);
  6390   00288A  C07B  F06A         	movff	vfscanf@fp,vfsfcnvrt@fp
  6391   00288E  0E83               	movlw	low vfscanf@cfmt
  6392   002890  6F6B               	movwf	vfsfcnvrt@fmt& (0+255),b
  6393   002892  C07E  F06C         	movff	vfscanf@ap,vfsfcnvrt@ap
  6394   002896  6B6D               	clrf	(vfsfcnvrt@ap+1)& (0+255),b
  6395   002898  EC6E  F006         	call	_vfsfcnvrt	;wreg free
  6396   00289C  C06A  F081         	movff	?_vfsfcnvrt,vfscanf@n
  6397   0028A0  C06B  F082         	movff	?_vfsfcnvrt+1,vfscanf@n+1
  6398   0028A4                     
  6399                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1508:         if 
      +                          (n < 0) {
  6400   0028A4  0100               	movlb	0	; () banked
  6401   0028A6  BF82               	btfsc	(vfscanf@n+1)& (0+255),7,b
  6402   0028A8  EF5A  F014         	goto	u6710
  6403   0028AC  EF58  F014         	goto	u6711
  6404   0028B0                     u6711:
  6405   0028B0  EF5C  F014         	goto	l5778
  6406   0028B4                     u6710:
  6407   0028B4  EF6E  F014         	goto	l1412
  6408   0028B8                     l5778:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1511:         ncn
      +                          v += n;
  6412   0028B8  5181               	movf	vfscanf@n& (0+255),w,b
  6413   0028BA  27B9               	addwf	_ncnv& (0+255),f,b
  6414   0028BC  5182               	movf	(vfscanf@n+1)& (0+255),w,b
  6415   0028BE  23BA               	addwfc	(_ncnv+1)& (0+255),f,b
  6416   0028C0                     l5780:
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1505:     while (
      +                          *cfmt) {
  6420   0028C0  C083  FFF6         	movff	vfscanf@cfmt,tblptrl
  6421   0028C4  C084  FFF7         	movff	vfscanf@cfmt+1,tblptrh
  6422   0028C8                     	if	0	;tblptru may be non-zero
  6423   0028C8                     	endif
  6424   0028C8                     	if	0	;tblptru may be non-zero
  6425   0028C8                     	endif
  6426   0028C8  0008               	tblrd		*
  6427   0028CA  50F5               	movf	tablat,w,c
  6428   0028CC  0900               	iorlw	0
  6429   0028CE  A4D8               	btfss	status,2,c
  6430   0028D0  EF6C  F014         	goto	u6721
  6431   0028D4  EF6E  F014         	goto	u6720
  6432   0028D8                     u6721:
  6433   0028D8  EF41  F014         	goto	l5770
  6434   0028DC                     u6720:
  6435   0028DC                     l1412:
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1513:  errno = sa
      +                          ved_errno;
  6439   0028DC  C07F  F0BD         	movff	vfscanf@saved_errno,_errno
  6440   0028E0  C080  F0BE         	movff	vfscanf@saved_errno+1,_errno+1
  6441   0028E4                     
  6442                           ; BSR set to: 0
  6443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1514:     if (n =
      +                          = (-1) && ncnv == 0) {
  6444   0028E4  2981               	incf	vfscanf@n& (0+255),w,b
  6445   0028E6  E106               	bnz	u6731
  6446   0028E8  2982               	incf	(vfscanf@n+1)& (0+255),w,b
  6447   0028EA  A4D8               	btfss	status,2,c
  6448   0028EC  EF7A  F014         	goto	u6731
  6449   0028F0  EF7C  F014         	goto	u6730
  6450   0028F4                     u6731:
  6451   0028F4  EF8B  F014         	goto	l1413
  6452   0028F8                     u6730:
  6453   0028F8                     
  6454                           ; BSR set to: 0
  6455   0028F8  51B9               	movf	_ncnv& (0+255),w,b
  6456   0028FA  11BA               	iorwf	(_ncnv+1)& (0+255),w,b
  6457   0028FC  A4D8               	btfss	status,2,c
  6458   0028FE  EF83  F014         	goto	u6741
  6459   002902  EF85  F014         	goto	u6740
  6460   002906                     u6741:
  6461   002906  EF8B  F014         	goto	l1413
  6462   00290A                     u6740:
  6463   00290A                     
  6464                           ; BSR set to: 0
  6465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1515:         ret
      +                          urn n;
  6466   00290A  C081  F07B         	movff	vfscanf@n,?_vfscanf
  6467   00290E  C082  F07C         	movff	vfscanf@n+1,?_vfscanf+1
  6468   002912  EF8F  F014         	goto	l1414
  6469   002916                     l1413:
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1518:     return 
      +                          ncnv;
  6473   002916  C0B9  F07B         	movff	_ncnv,?_vfscanf
  6474   00291A  C0BA  F07C         	movff	_ncnv+1,?_vfscanf+1
  6475   00291E                     l1414:
  6476                           
  6477                           ; BSR set to: 0
  6478   00291E  0012               	return		;funcret
  6479   002920                     __end_of_vfscanf:
  6480                           	callstack 0
  6481                           
  6482 ;; *************** function _vfsfcnvrt *****************
  6483 ;; Defined at:
  6484 ;;		line 672 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  6487 ;;		 -> sscanf@f(11), 
  6488 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  6489 ;;		 -> vfscanf@cfmt(2), 
  6490 ;;  ap              2   12[BANK0 ] PTR PTR void 
  6491 ;;		 -> sscanf@ap(1), 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  llu             8   17[BANK0 ] unsigned long long 
  6494 ;;  ll              8    0        long long 
  6495 ;;  f               4    0        long long 
  6496 ;;  ct              3    0        unsigned char [3]
  6497 ;;  c               2   25[BANK0 ] int 
  6498 ;;  i               2   15[BANK0 ] int 
  6499 ;;  cp              2    0        PTR unsigned char 
  6500 ;;  vp              1   14[BANK0 ] PTR void 
  6501 ;;		 -> ?_sscanf(2), ?_sprintf(2), diagnostic_trouble_codes@byte2(2), diagnostic_trouble_codes@byte1(2), 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  2   10[BANK0 ] int 
  6504 ;; Registers used:
  6505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6511 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;Total ram usage:       19 bytes
  6516 ;; Hardware stack levels used: 1
  6517 ;; Hardware stack levels required when called: 5
  6518 ;; This function calls:
  6519 ;;		_atox
  6520 ;;		_fgetc
  6521 ;;		_skipws
  6522 ;;		_ungetc
  6523 ;; This function is called by:
  6524 ;;		_vfscanf
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text24
  6529   000CDC                     __ptext24:
  6530                           	callstack 0
  6531   000CDC                     _vfsfcnvrt:
  6532                           	callstack 21
  6533   000CDC                     
  6534                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 672: static int v
      +                          fsfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sou
      +                          rces\c99\common\doscan.c: 673: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doscan.c: 674:     char *cp, ct[3];;C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doscan.c: 675:     int c, i;;C:\Program Files\Microchip\xc8\v3.00\pic\sourc
      +                          es\c99\common\doscan.c: 676:     long long ll;;C:\Program Files\Microchip\xc8\v3.00\pic\
      +                          sources\c99\common\doscan.c: 677:     unsigned long long llu;
  6535   000CDC  0100               	movlb	0	; () banked
  6536   000CDE  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6537   000CE0  6ED9               	movwf	fsr2l,c
  6538   000CE2  6ADA               	clrf	fsr2h,c
  6539   000CE4  CFDE FFF6          	movff	postinc2,tblptrl
  6540   000CE8  CFDD FFF7          	movff	postdec2,tblptrh
  6541   000CEC                     	if	0	;tblptru may be non-zero
  6542   000CEC                     	endif
  6543   000CEC                     	if	0	;tblptru may be non-zero
  6544   000CEC                     	endif
  6545   000CEC  0008               	tblrd		*
  6546   000CEE  50F5               	movf	tablat,w,c
  6547   000CF0  0A25               	xorlw	37
  6548   000CF2  A4D8               	btfss	status,2,c
  6549   000CF4  EF7E  F006         	goto	u6531
  6550   000CF8  EF80  F006         	goto	u6530
  6551   000CFC                     u6531:
  6552   000CFC  EF46  F007         	goto	l5720
  6553   000D00                     u6530:
  6554   000D00                     
  6555                           ; BSR set to: 0
  6556                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 683:         ++*f
      +                          mt;
  6557   000D00  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6558   000D02  6ED9               	movwf	fsr2l,c
  6559   000D04  6ADA               	clrf	fsr2h,c
  6560   000D06  2ADE               	incf	postinc2,f,c
  6561   000D08  0E00               	movlw	0
  6562   000D0A  22DD               	addwfc	postdec2,f,c
  6563   000D0C                     
  6564                           ; BSR set to: 0
  6565                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 685:         asup
      +                           = width = 0;
  6566   000D0C  0E00               	movlw	0
  6567   000D0E  6FBC               	movwf	(_width@doscan$F2253+1)& (0+255),b
  6568   000D10  0E00               	movlw	0
  6569   000D12  6FBB               	movwf	_width@doscan$F2253& (0+255),b
  6570   000D14  51BB               	movf	_width@doscan$F2253& (0+255),w,b
  6571   000D16  11BC               	iorwf	(_width@doscan$F2253+1)& (0+255),w,b
  6572   000D18  A4D8               	btfss	status,2,c
  6573   000D1A  EF91  F006         	goto	u6541
  6574   000D1E  EF94  F006         	goto	u6540
  6575   000D22                     u6541:
  6576   000D22  0E01               	movlw	1
  6577   000D24  EF95  F006         	goto	u6550
  6578   000D28                     u6540:
  6579   000D28  0E00               	movlw	0
  6580   000D2A                     u6550:
  6581   000D2A  6FCE               	movwf	_asup& (0+255),b
  6582   000D2C                     
  6583                           ; BSR set to: 0
  6584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1353:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6585   000D2C  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6586   000D2E  6ED9               	movwf	fsr2l,c
  6587   000D30  6ADA               	clrf	fsr2h,c
  6588   000D32  CFDE FFF6          	movff	postinc2,tblptrl
  6589   000D36  CFDD FFF7          	movff	postdec2,tblptrh
  6590   000D3A                     	if	0	;tblptru may be non-zero
  6591   000D3A                     	endif
  6592   000D3A                     	if	0	;tblptru may be non-zero
  6593   000D3A                     	endif
  6594   000D3A  0008               	tblrd		*
  6595   000D3C  50F5               	movf	tablat,w,c
  6596   000D3E  0A78               	xorlw	120
  6597   000D40  B4D8               	btfsc	status,2,c
  6598   000D42  EFA5  F006         	goto	u6561
  6599   000D46  EFA7  F006         	goto	u6560
  6600   000D4A                     u6561:
  6601   000D4A  EFB8  F006         	goto	l5676
  6602   000D4E                     u6560:
  6603   000D4E                     
  6604                           ; BSR set to: 0
  6605   000D4E  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6606   000D50  6ED9               	movwf	fsr2l,c
  6607   000D52  6ADA               	clrf	fsr2h,c
  6608   000D54  CFDE FFF6          	movff	postinc2,tblptrl
  6609   000D58  CFDD FFF7          	movff	postdec2,tblptrh
  6610   000D5C                     	if	0	;tblptru may be non-zero
  6611   000D5C                     	endif
  6612   000D5C                     	if	0	;tblptru may be non-zero
  6613   000D5C                     	endif
  6614   000D5C  0008               	tblrd		*
  6615   000D5E  50F5               	movf	tablat,w,c
  6616   000D60  0A58               	xorlw	88
  6617   000D62  A4D8               	btfss	status,2,c
  6618   000D64  EFB6  F006         	goto	u6571
  6619   000D68  EFB8  F006         	goto	u6570
  6620   000D6C                     u6571:
  6621   000D6C  EFEE  F006         	goto	l5690
  6622   000D70                     u6570:
  6623   000D70                     l5676:
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1354:            
      +                           ++*fmt;
  6627   000D70  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6628   000D72  6ED9               	movwf	fsr2l,c
  6629   000D74  6ADA               	clrf	fsr2h,c
  6630   000D76  2ADE               	incf	postinc2,f,c
  6631   000D78  0E00               	movlw	0
  6632   000D7A  22DD               	addwfc	postdec2,f,c
  6633   000D7C                     
  6634                           ; BSR set to: 0
  6635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1355:            
      +                           i = atox(fp, &llu);
  6636   000D7C  C06A  F04B         	movff	vfsfcnvrt@fp,atox@fp
  6637   000D80  0E71               	movlw	low vfsfcnvrt@llu
  6638   000D82  6E4C               	movwf	atox@pll^0,c
  6639   000D84  EC25  F003         	call	_atox	;wreg free
  6640   000D88  C04B  F06F         	movff	?_atox,vfsfcnvrt@i
  6641   000D8C  C04C  F070         	movff	?_atox+1,vfsfcnvrt@i+1
  6642   000D90                     
  6643                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1356:            
      +                           if (!(i < 1)) {
  6644   000D90  0100               	movlb	0	; () banked
  6645   000D92  BF70               	btfsc	(vfsfcnvrt@i+1)& (0+255),7,b
  6646   000D94  EFD4  F006         	goto	u6581
  6647   000D98  5170               	movf	(vfsfcnvrt@i+1)& (0+255),w,b
  6648   000D9A  E108               	bnz	u6580
  6649   000D9C  056F               	decf	vfsfcnvrt@i& (0+255),w,b
  6650   000D9E  A0D8               	btfss	status,0,c
  6651   000DA0  EFD4  F006         	goto	u6581
  6652   000DA4  EFD6  F006         	goto	u6580
  6653   000DA8                     u6581:
  6654   000DA8  EFE8  F006         	goto	l5686
  6655   000DAC                     u6580:
  6656   000DAC                     
  6657                           ; BSR set to: 0
  6658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1357:            
      +                               vp = (void *)(*(unsigned int * *)__va_arg(*(unsigned int * **)ap, (unsigned int *)0
      +                          ));
  6659   000DAC  C06C  FFD9         	movff	vfsfcnvrt@ap,fsr2l
  6660   000DB0  C06D  FFDA         	movff	vfsfcnvrt@ap+1,fsr2h
  6661   000DB4  0E02               	movlw	2
  6662   000DB6  26DF               	addwf	indf2,f,c
  6663   000DB8  5CDF               	subwf	indf2,w,c
  6664   000DBA  6ED9               	movwf	fsr2l,c
  6665   000DBC  6ADA               	clrf	fsr2h,c
  6666   000DBE  CFDE F06E          	movff	postinc2,vfsfcnvrt@vp
  6667   000DC2                     
  6668                           ; BSR set to: 0
  6669                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1358:            
      +                               *(unsigned int *)vp = (unsigned int)llu;
  6670   000DC2  516E               	movf	vfsfcnvrt@vp& (0+255),w,b
  6671   000DC4  6ED9               	movwf	fsr2l,c
  6672   000DC6  6ADA               	clrf	fsr2h,c
  6673   000DC8  C071  FFDE         	movff	vfsfcnvrt@llu,postinc2
  6674   000DCC  C072  FFDD         	movff	vfsfcnvrt@llu+1,postdec2
  6675   000DD0                     l5686:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1360:            
      +                           return i;
  6679   000DD0  C06F  F06A         	movff	vfsfcnvrt@i,?_vfsfcnvrt
  6680   000DD4  C070  F06B         	movff	vfsfcnvrt@i+1,?_vfsfcnvrt+1
  6681   000DD8  EFFB  F007         	goto	l1389
  6682   000DDC                     l5690:
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1448:         if 
      +                          ((*fmt)[0] == '%') {
  6686   000DDC  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6687   000DDE  6ED9               	movwf	fsr2l,c
  6688   000DE0  6ADA               	clrf	fsr2h,c
  6689   000DE2  CFDE FFF6          	movff	postinc2,tblptrl
  6690   000DE6  CFDD FFF7          	movff	postdec2,tblptrh
  6691   000DEA                     	if	0	;tblptru may be non-zero
  6692   000DEA                     	endif
  6693   000DEA                     	if	0	;tblptru may be non-zero
  6694   000DEA                     	endif
  6695   000DEA  0008               	tblrd		*
  6696   000DEC  50F5               	movf	tablat,w,c
  6697   000DEE  0A25               	xorlw	37
  6698   000DF0  A4D8               	btfss	status,2,c
  6699   000DF2  EFFD  F006         	goto	u6591
  6700   000DF6  EFFF  F006         	goto	u6590
  6701   000DFA                     u6591:
  6702   000DFA  EF3E  F007         	goto	l5714
  6703   000DFE                     u6590:
  6704   000DFE                     
  6705                           ; BSR set to: 0
  6706                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1449:    skipws(f
      +                          p);
  6707   000DFE  C06A  F00E         	movff	vfsfcnvrt@fp,skipws@fp
  6708   000E02  ECA8  F018         	call	_skipws	;wreg free
  6709                           
  6710                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1450:    c = fget
      +                          c(fp);
  6711   000E06  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6712   000E0A  EC03  F010         	call	_fgetc	;wreg free
  6713   000E0E  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6714   000E12  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6715   000E16                     
  6716                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1451:    if (c ==
      +                           '%') {
  6717   000E16  0E25               	movlw	37
  6718   000E18  0100               	movlb	0	; () banked
  6719   000E1A  1979               	xorwf	vfsfcnvrt@c& (0+255),w,b
  6720   000E1C  117A               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
  6721   000E1E  A4D8               	btfss	status,2,c
  6722   000E20  EF14  F007         	goto	u6601
  6723   000E24  EF16  F007         	goto	u6600
  6724   000E28                     u6601:
  6725   000E28  EF25  F007         	goto	l5706
  6726   000E2C                     u6600:
  6727   000E2C                     l5696:
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1452:     ++*fmt;
  6731   000E2C  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6732   000E2E  6ED9               	movwf	fsr2l,c
  6733   000E30  6ADA               	clrf	fsr2h,c
  6734   000E32  2ADE               	incf	postinc2,f,c
  6735   000E34  0E00               	movlw	0
  6736   000E36  22DD               	addwfc	postdec2,f,c
  6737   000E38                     
  6738                           ; BSR set to: 0
  6739                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1453:     ++nmatc
      +                          h;
  6740   000E38  4BB7               	infsnz	_nmatch& (0+255),f,b
  6741   000E3A  2BB8               	incf	(_nmatch+1)& (0+255),f,b
  6742   000E3C                     l5700:
  6743                           
  6744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1454:     return 
      +                          0;
  6745   000E3C  0E00               	movlw	0
  6746   000E3E  0100               	movlb	0	; () banked
  6747   000E40  6F6B               	movwf	(?_vfsfcnvrt+1)& (0+255),b
  6748   000E42  0E00               	movlw	0
  6749   000E44  6F6A               	movwf	?_vfsfcnvrt& (0+255),b
  6750   000E46  EFFB  F007         	goto	l1389
  6751   000E4A                     l5706:
  6752                           
  6753                           ; BSR set to: 0
  6754   000E4A  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6755   000E4C  E108               	bnz	u6610
  6756   000E4E  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6757   000E50  B4D8               	btfsc	status,2,c
  6758   000E52  EF2D  F007         	goto	u6611
  6759   000E56  EF2F  F007         	goto	u6610
  6760   000E5A                     u6611:
  6761   000E5A  EF37  F007         	goto	l5710
  6762   000E5E                     u6610:
  6763   000E5E                     l5708:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1457:     ungetc(
      +                          c, fp);
  6767   000E5E  C079  F003         	movff	vfsfcnvrt@c,ungetc@c
  6768   000E62  C07A  F004         	movff	vfsfcnvrt@c+1,ungetc@c+1
  6769   000E66  C06A  F005         	movff	vfsfcnvrt@fp,ungetc@fp
  6770   000E6A  EC52  F016         	call	_ungetc	;wreg free
  6771   000E6E                     l5710:
  6772                           
  6773                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1459:    return (
      +                          -1) - 1;
  6774   000E6E  0EFF               	movlw	255
  6775   000E70  0100               	movlb	0	; () banked
  6776   000E72  6F6B               	movwf	(?_vfsfcnvrt+1)& (0+255),b
  6777   000E74  0EFE               	movlw	254
  6778   000E76  6F6A               	movwf	?_vfsfcnvrt& (0+255),b
  6779   000E78  EFFB  F007         	goto	l1389
  6780   000E7C                     l5714:
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1463:         ++*
      +                          fmt;
  6784   000E7C  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6785   000E7E  6ED9               	movwf	fsr2l,c
  6786   000E80  6ADA               	clrf	fsr2h,c
  6787   000E82  2ADE               	incf	postinc2,f,c
  6788   000E84  0E00               	movlw	0
  6789   000E86  22DD               	addwfc	postdec2,f,c
  6790   000E88  EF1E  F007         	goto	l5700
  6791   000E8C                     l5720:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1468:     c = fge
      +                          tc(fp);
  6795   000E8C  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6796   000E90  EC03  F010         	call	_fgetc	;wreg free
  6797   000E94  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6798   000E98  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6799   000E9C                     
  6800                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1469:  if ((((*fm
      +                          t[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5)))) {
  6801   000E9C  0100               	movlb	0	; () banked
  6802   000E9E  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6803   000EA0  6ED9               	movwf	fsr2l,c
  6804   000EA2  6ADA               	clrf	fsr2h,c
  6805   000EA4  CFDE FFF6          	movff	postinc2,tblptrl
  6806   000EA8  CFDD FFF7          	movff	postdec2,tblptrh
  6807   000EAC                     	if	0	;tblptru may be non-zero
  6808   000EAC                     	endif
  6809   000EAC                     	if	0	;tblptru may be non-zero
  6810   000EAC                     	endif
  6811   000EAC  0008               	tblrd		*
  6812   000EAE  50F5               	movf	tablat,w,c
  6813   000EB0  0A20               	xorlw	32
  6814   000EB2  B4D8               	btfsc	status,2,c
  6815   000EB4  EF5E  F007         	goto	u6621
  6816   000EB8  EF60  F007         	goto	u6620
  6817   000EBC                     u6621:
  6818   000EBC  EF74  F007         	goto	l5726
  6819   000EC0                     u6620:
  6820   000EC0                     
  6821                           ; BSR set to: 0
  6822   000EC0  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6823   000EC2  6ED9               	movwf	fsr2l,c
  6824   000EC4  6ADA               	clrf	fsr2h,c
  6825   000EC6  CFDE FFF6          	movff	postinc2,tblptrl
  6826   000ECA  CFDD FFF7          	movff	postdec2,tblptrh
  6827   000ECE                     	if	0	;tblptru may be non-zero
  6828   000ECE                     	endif
  6829   000ECE                     	if	0	;tblptru may be non-zero
  6830   000ECE                     	endif
  6831   000ECE  0008               	tblrd		*
  6832   000ED0  CFF5 F055          	movff	tablat,??_vfsfcnvrt
  6833   000ED4  0EF7               	movlw	247
  6834   000ED6  2655               	addwf	??_vfsfcnvrt^0,f,c
  6835   000ED8  0E05               	movlw	5
  6836   000EDA  6055               	cpfslt	??_vfsfcnvrt^0,c
  6837   000EDC  EF72  F007         	goto	u6631
  6838   000EE0  EF74  F007         	goto	u6630
  6839   000EE4                     u6631:
  6840   000EE4  EFD6  F007         	goto	l5744
  6841   000EE8                     u6630:
  6842   000EE8                     l5726:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1472:    ++*fmt;
  6846   000EE8  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6847   000EEA  6ED9               	movwf	fsr2l,c
  6848   000EEC  6ADA               	clrf	fsr2h,c
  6849   000EEE  2ADE               	incf	postinc2,f,c
  6850   000EF0  0E00               	movlw	0
  6851   000EF2  22DD               	addwfc	postdec2,f,c
  6852   000EF4                     
  6853                           ; BSR set to: 0
  6854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1473:   } while((
      +                          ((*fmt[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5))));
  6855   000EF4  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6856   000EF6  6ED9               	movwf	fsr2l,c
  6857   000EF8  6ADA               	clrf	fsr2h,c
  6858   000EFA  CFDE FFF6          	movff	postinc2,tblptrl
  6859   000EFE  CFDD FFF7          	movff	postdec2,tblptrh
  6860   000F02                     	if	0	;tblptru may be non-zero
  6861   000F02                     	endif
  6862   000F02                     	if	0	;tblptru may be non-zero
  6863   000F02                     	endif
  6864   000F02  0008               	tblrd		*
  6865   000F04  50F5               	movf	tablat,w,c
  6866   000F06  0A20               	xorlw	32
  6867   000F08  B4D8               	btfsc	status,2,c
  6868   000F0A  EF89  F007         	goto	u6641
  6869   000F0E  EF8B  F007         	goto	u6640
  6870   000F12                     u6641:
  6871   000F12  EF74  F007         	goto	l5726
  6872   000F16                     u6640:
  6873   000F16                     
  6874                           ; BSR set to: 0
  6875   000F16  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6876   000F18  6ED9               	movwf	fsr2l,c
  6877   000F1A  6ADA               	clrf	fsr2h,c
  6878   000F1C  CFDE FFF6          	movff	postinc2,tblptrl
  6879   000F20  CFDD FFF7          	movff	postdec2,tblptrh
  6880   000F24                     	if	0	;tblptru may be non-zero
  6881   000F24                     	endif
  6882   000F24                     	if	0	;tblptru may be non-zero
  6883   000F24                     	endif
  6884   000F24  0008               	tblrd		*
  6885   000F26  CFF5 F055          	movff	tablat,??_vfsfcnvrt
  6886   000F2A  0EF7               	movlw	247
  6887   000F2C  2655               	addwf	??_vfsfcnvrt^0,f,c
  6888   000F2E  0E04               	movlw	4
  6889   000F30  6455               	cpfsgt	??_vfsfcnvrt^0,c
  6890   000F32  EF9D  F007         	goto	u6651
  6891   000F36  EF9F  F007         	goto	u6650
  6892   000F3A                     u6651:
  6893   000F3A  EF74  F007         	goto	l5726
  6894   000F3E                     u6650:
  6895   000F3E  EFAB  F007         	goto	l5736
  6896   000F42                     l5732:
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1476:    ++nmatch
      +                          ;
  6900   000F42  4BB7               	infsnz	_nmatch& (0+255),f,b
  6901   000F44  2BB8               	incf	(_nmatch+1)& (0+255),f,b
  6902   000F46                     
  6903                           ; BSR set to: 0
  6904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1477:    c = fget
      +                          c(fp);
  6905   000F46  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6906   000F4A  EC03  F010         	call	_fgetc	;wreg free
  6907   000F4E  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6908   000F52  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6909   000F56                     l5736:
  6910                           
  6911                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1475:   while (((
      +                          (c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
  6912   000F56  0E20               	movlw	32
  6913   000F58  0100               	movlb	0	; () banked
  6914   000F5A  1979               	xorwf	vfsfcnvrt@c& (0+255),w,b
  6915   000F5C  117A               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
  6916   000F5E  B4D8               	btfsc	status,2,c
  6917   000F60  EFB4  F007         	goto	u6661
  6918   000F64  EFB6  F007         	goto	u6660
  6919   000F68                     u6661:
  6920   000F68  EFA1  F007         	goto	l5732
  6921   000F6C                     u6660:
  6922   000F6C                     
  6923                           ; BSR set to: 0
  6924   000F6C  C079  F055         	movff	vfsfcnvrt@c,??_vfsfcnvrt
  6925   000F70  0EF7               	movlw	247
  6926   000F72  2655               	addwf	??_vfsfcnvrt^0,f,c
  6927   000F74  0E04               	movlw	4
  6928   000F76  6455               	cpfsgt	??_vfsfcnvrt^0,c
  6929   000F78  EFC0  F007         	goto	u6671
  6930   000F7C  EFC2  F007         	goto	u6670
  6931   000F80                     u6671:
  6932   000F80  EFA1  F007         	goto	l5732
  6933   000F84                     u6670:
  6934   000F84                     
  6935                           ; BSR set to: 0
  6936                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1479:   if (c != 
      +                          (-1)) {
  6937   000F84  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6938   000F86  E108               	bnz	u6680
  6939   000F88  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6940   000F8A  B4D8               	btfsc	status,2,c
  6941   000F8C  EFCA  F007         	goto	u6681
  6942   000F90  EFCC  F007         	goto	u6680
  6943   000F94                     u6681:
  6944   000F94  EF1E  F007         	goto	l5700
  6945   000F98                     u6680:
  6946   000F98                     
  6947                           ; BSR set to: 0
  6948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1480:    ungetc(c
      +                          , fp);
  6949   000F98  C079  F003         	movff	vfsfcnvrt@c,ungetc@c
  6950   000F9C  C07A  F004         	movff	vfsfcnvrt@c+1,ungetc@c+1
  6951   000FA0  C06A  F005         	movff	vfsfcnvrt@fp,ungetc@fp
  6952   000FA4  EC52  F016         	call	_ungetc	;wreg free
  6953   000FA8  EF1E  F007         	goto	l5700
  6954   000FAC                     l5744:
  6955                           
  6956                           ; BSR set to: 0
  6957   000FAC  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6958   000FAE  6ED9               	movwf	fsr2l,c
  6959   000FB0  6ADA               	clrf	fsr2h,c
  6960   000FB2  CFDE FFF6          	movff	postinc2,tblptrl
  6961   000FB6  CFDD FFF7          	movff	postdec2,tblptrh
  6962   000FBA                     	if	0	;tblptru may be non-zero
  6963   000FBA                     	endif
  6964   000FBA                     	if	0	;tblptru may be non-zero
  6965   000FBA                     	endif
  6966   000FBA  0008               	tblrd		*
  6967   000FBC  50F5               	movf	tablat,w,c
  6968   000FBE  6E55               	movwf	??_vfsfcnvrt^0,c
  6969   000FC0  6A56               	clrf	(??_vfsfcnvrt+1)^0,c
  6970   000FC2  5179               	movf	vfsfcnvrt@c& (0+255),w,b
  6971   000FC4  1855               	xorwf	??_vfsfcnvrt^0,w,c
  6972   000FC6  E107               	bnz	u6691
  6973   000FC8  517A               	movf	(vfsfcnvrt@c+1)& (0+255),w,b
  6974   000FCA  1856               	xorwf	(??_vfsfcnvrt+1)^0,w,c
  6975   000FCC  A4D8               	btfss	status,2,c
  6976   000FCE  EFEB  F007         	goto	u6691
  6977   000FD2  EFED  F007         	goto	u6690
  6978   000FD6                     u6691:
  6979   000FD6  EFEF  F007         	goto	l5750
  6980   000FDA                     u6690:
  6981   000FDA  EF16  F007         	goto	l5696
  6982   000FDE                     l5750:
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1487:   if (c == 
      +                          (-1)) {
  6986   000FDE  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6987   000FE0  E106               	bnz	u6701
  6988   000FE2  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6989   000FE4  A4D8               	btfss	status,2,c
  6990   000FE6  EFF7  F007         	goto	u6701
  6991   000FEA  EFF9  F007         	goto	u6700
  6992   000FEE                     u6701:
  6993   000FEE  EF2F  F007         	goto	l5708
  6994   000FF2                     u6700:
  6995   000FF2                     
  6996                           ; BSR set to: 0
  6997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1488:    return (
      +                          -1);
  6998   000FF2  696A               	setf	?_vfsfcnvrt& (0+255),b
  6999   000FF4  696B               	setf	(?_vfsfcnvrt+1)& (0+255),b
  7000   000FF6                     l1389:
  7001                           
  7002                           ; BSR set to: 0
  7003   000FF6  0012               	return		;funcret
  7004   000FF8                     __end_of_vfsfcnvrt:
  7005                           	callstack 0
  7006                           
  7007 ;; *************** function _atox *****************
  7008 ;; Defined at:
  7009 ;;		line 528 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  fp              1   74[COMRAM] PTR struct _IO_FILE
  7012 ;;		 -> sscanf@f(11), 
  7013 ;;  pll             1   75[COMRAM] PTR unsigned long long 
  7014 ;;		 -> vfsfcnvrt@llu(8), 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  c               2    8[BANK0 ] int 
  7017 ;;  i               2    6[BANK0 ] int 
  7018 ;;  seen_0x         2    4[BANK0 ] int 
  7019 ;;  ep              2    2[BANK0 ] PTR unsigned char 
  7020 ;;		 -> dbuf@doscan$F2256(32), 
  7021 ;;  w               2    0[BANK0 ] int 
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  2   74[COMRAM] int 
  7024 ;; Registers used:
  7025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;Total ram usage:       20 bytes
  7036 ;; Hardware stack levels used: 1
  7037 ;; Hardware stack levels required when called: 4
  7038 ;; This function calls:
  7039 ;;		___strtoxll
  7040 ;;		_fgetc
  7041 ;;		_skipws
  7042 ;;		_ungetc
  7043 ;; This function is called by:
  7044 ;;		_vfsfcnvrt
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text25
  7049   00064A                     __ptext25:
  7050                           	callstack 0
  7051   00064A                     _atox:
  7052                           	callstack 21
  7053   00064A                     
  7054                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 528: static int a
      +                          tox(FILE *fp, unsigned long long *pll);C:\Program Files\Microchip\xc8\v3.00\pic\sources\
      +                          c99\common\doscan.c: 529: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\
      +                          doscan.c: 530:     char *ep;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doscan.c: 531:     int c, i, w, seen_0x = 0;
  7055   00064A  0E00               	movlw	0
  7056   00064C  0100               	movlb	0	; () banked
  7057   00064E  6F65               	movwf	(atox@seen_0x+1)& (0+255),b
  7058   000650  0E00               	movlw	0
  7059   000652  6F64               	movwf	atox@seen_0x& (0+255),b
  7060   000654                     
  7061                           ; BSR set to: 0
  7062                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 534:     skipws(f
      +                          p);
  7063   000654  C04B  F00E         	movff	atox@fp,skipws@fp
  7064   000658  ECA8  F018         	call	_skipws	;wreg free
  7065   00065C                     
  7066                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 537:     w = widt
      +                          h ? width : sizeof(dbuf) - 1;
  7067   00065C  0100               	movlb	0	; () banked
  7068   00065E  51BB               	movf	_width@doscan$F2253& (0+255),w,b
  7069   000660  11BC               	iorwf	(_width@doscan$F2253+1)& (0+255),w,b
  7070   000662  A4D8               	btfss	status,2,c
  7071   000664  EF36  F003         	goto	u6291
  7072   000668  EF38  F003         	goto	u6290
  7073   00066C                     u6291:
  7074   00066C  EF3E  F003         	goto	l1350
  7075   000670                     u6290:
  7076   000670                     
  7077                           ; BSR set to: 0
  7078   000670  0E00               	movlw	0
  7079   000672  6F61               	movwf	(atox@w+1)& (0+255),b
  7080   000674  0E1F               	movlw	31
  7081   000676  6F60               	movwf	atox@w& (0+255),b
  7082   000678  EF42  F003         	goto	l5586
  7083   00067C                     l1350:
  7084                           
  7085                           ; BSR set to: 0
  7086   00067C  C0BB  F060         	movff	_width@doscan$F2253,atox@w
  7087   000680  C0BC  F061         	movff	_width@doscan$F2253+1,atox@w+1
  7088   000684                     l5586:
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 538:     i = 0;
  7092   000684  0E00               	movlw	0
  7093   000686  6F67               	movwf	(atox@i+1)& (0+255),b
  7094   000688  0E00               	movlw	0
  7095   00068A  6F66               	movwf	atox@i& (0+255),b
  7096                           
  7097                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 539:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
  7098   00068C  EF52  F004         	goto	l5646
  7099   000690                     l5588:
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 540:         c = 
      +                          fgetc(fp);
  7103   000690  C04B  F005         	movff	atox@fp,fgetc@fp
  7104   000694  EC03  F010         	call	_fgetc	;wreg free
  7105   000698  C005  F068         	movff	?_fgetc,atox@c
  7106   00069C  C006  F069         	movff	?_fgetc+1,atox@c+1
  7107   0006A0                     
  7108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 541:         if (
      +                          c == (-1) && (width || i==0)) {
  7109   0006A0  0100               	movlb	0	; () banked
  7110   0006A2  2968               	incf	atox@c& (0+255),w,b
  7111   0006A4  E106               	bnz	u6301
  7112   0006A6  2969               	incf	(atox@c+1)& (0+255),w,b
  7113   0006A8  A4D8               	btfss	status,2,c
  7114   0006AA  EF59  F003         	goto	u6301
  7115   0006AE  EF5B  F003         	goto	u6300
  7116   0006B2                     u6301:
  7117   0006B2  EF73  F003         	goto	l5596
  7118   0006B6                     u6300:
  7119   0006B6                     
  7120                           ; BSR set to: 0
  7121   0006B6  51BB               	movf	_width@doscan$F2253& (0+255),w,b
  7122   0006B8  11BC               	iorwf	(_width@doscan$F2253+1)& (0+255),w,b
  7123   0006BA  A4D8               	btfss	status,2,c
  7124   0006BC  EF62  F003         	goto	u6311
  7125   0006C0  EF64  F003         	goto	u6310
  7126   0006C4                     u6311:
  7127   0006C4  EF6D  F003         	goto	l1357
  7128   0006C8                     u6310:
  7129   0006C8                     
  7130                           ; BSR set to: 0
  7131   0006C8  5166               	movf	atox@i& (0+255),w,b
  7132   0006CA  1167               	iorwf	(atox@i+1)& (0+255),w,b
  7133   0006CC  A4D8               	btfss	status,2,c
  7134   0006CE  EF6B  F003         	goto	u6321
  7135   0006D2  EF6D  F003         	goto	u6320
  7136   0006D6                     u6321:
  7137   0006D6  EF73  F003         	goto	l5596
  7138   0006DA                     u6320:
  7139   0006DA                     l1357:
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 542:             
      +                          return c;
  7143   0006DA  C068  F04B         	movff	atox@c,?_atox
  7144   0006DE  C069  F04C         	movff	atox@c+1,?_atox+1
  7145   0006E2  EFD7  F004         	goto	l1358
  7146   0006E6                     l5596:
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 544:   if (c == '
      +                          -' || c == '+') {
  7150   0006E6  0E2D               	movlw	45
  7151   0006E8  1968               	xorwf	atox@c& (0+255),w,b
  7152   0006EA  1169               	iorwf	(atox@c+1)& (0+255),w,b
  7153   0006EC  B4D8               	btfsc	status,2,c
  7154   0006EE  EF7B  F003         	goto	u6331
  7155   0006F2  EF7D  F003         	goto	u6330
  7156   0006F6                     u6331:
  7157   0006F6  EF87  F003         	goto	l5600
  7158   0006FA                     u6330:
  7159   0006FA                     
  7160                           ; BSR set to: 0
  7161   0006FA  0E2B               	movlw	43
  7162   0006FC  1968               	xorwf	atox@c& (0+255),w,b
  7163   0006FE  1169               	iorwf	(atox@c+1)& (0+255),w,b
  7164   000700  A4D8               	btfss	status,2,c
  7165   000702  EF85  F003         	goto	u6341
  7166   000706  EF87  F003         	goto	u6340
  7167   00070A                     u6341:
  7168   00070A  EF9E  F003         	goto	l5604
  7169   00070E                     u6340:
  7170   00070E                     l5600:
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 545:    if (i > 0
      +                          ) {
  7174   00070E  BF67               	btfsc	(atox@i+1)& (0+255),7,b
  7175   000710  EF92  F003         	goto	u6351
  7176   000714  5167               	movf	(atox@i+1)& (0+255),w,b
  7177   000716  E108               	bnz	u6350
  7178   000718  0566               	decf	atox@i& (0+255),w,b
  7179   00071A  A0D8               	btfss	status,0,c
  7180   00071C  EF92  F003         	goto	u6351
  7181   000720  EF94  F003         	goto	u6350
  7182   000724                     u6351:
  7183   000724  EF46  F004         	goto	l5640
  7184   000728                     u6350:
  7185   000728                     l5602:
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 546:     ungetc(c
      +                          , fp);
  7189   000728  C068  F003         	movff	atox@c,ungetc@c
  7190   00072C  C069  F004         	movff	atox@c+1,ungetc@c+1
  7191   000730  C04B  F005         	movff	atox@fp,ungetc@fp
  7192   000734  EC52  F016         	call	_ungetc	;wreg free
  7193                           
  7194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 547:     break;
  7195   000738  EF6D  F004         	goto	l5650
  7196   00073C                     l5604:
  7197                           
  7198                           ; BSR set to: 0
  7199   00073C  0E30               	movlw	48
  7200   00073E  1968               	xorwf	atox@c& (0+255),w,b
  7201   000740  1169               	iorwf	(atox@c+1)& (0+255),w,b
  7202   000742  A4D8               	btfss	status,2,c
  7203   000744  EFA6  F003         	goto	u6361
  7204   000748  EFA8  F003         	goto	u6360
  7205   00074C                     u6361:
  7206   00074C  EFF6  F003         	goto	l5626
  7207   000750                     u6360:
  7208   000750                     
  7209                           ; BSR set to: 0
  7210                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 551:    dbuf[i] =
      +                           (char)c;
  7211   000750  0E3C               	movlw	low _dbuf@doscan$F2256
  7212   000752  2566               	addwf	atox@i& (0+255),w,b
  7213   000754  6ED9               	movwf	fsr2l,c
  7214   000756  0E01               	movlw	high _dbuf@doscan$F2256
  7215   000758  2167               	addwfc	(atox@i+1)& (0+255),w,b
  7216   00075A  6EDA               	movwf	fsr2h,c
  7217   00075C  C068  FFDF         	movff	atox@c,indf2
  7218   000760                     
  7219                           ; BSR set to: 0
  7220                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 552:    ++i;
  7221   000760  4B66               	infsnz	atox@i& (0+255),f,b
  7222   000762  2B67               	incf	(atox@i+1)& (0+255),f,b
  7223   000764                     
  7224                           ; BSR set to: 0
  7225                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 553:    ++nmatch;
  7226   000764  4BB7               	infsnz	_nmatch& (0+255),f,b
  7227   000766  2BB8               	incf	(_nmatch+1)& (0+255),f,b
  7228   000768                     
  7229                           ; BSR set to: 0
  7230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 554:    c = fgetc
      +                          (fp);
  7231   000768  C04B  F005         	movff	atox@fp,fgetc@fp
  7232   00076C  EC03  F010         	call	_fgetc	;wreg free
  7233   000770  C005  F068         	movff	?_fgetc,atox@c
  7234   000774  C006  F069         	movff	?_fgetc+1,atox@c+1
  7235   000778                     
  7236                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 555:    if (c == 
      +                          'X' || c == 'x') {
  7237   000778  0E58               	movlw	88
  7238   00077A  0100               	movlb	0	; () banked
  7239   00077C  1968               	xorwf	atox@c& (0+255),w,b
  7240   00077E  1169               	iorwf	(atox@c+1)& (0+255),w,b
  7241   000780  B4D8               	btfsc	status,2,c
  7242   000782  EFC5  F003         	goto	u6371
  7243   000786  EFC7  F003         	goto	u6370
  7244   00078A                     u6371:
  7245   00078A  EFD1  F003         	goto	l5618
  7246   00078E                     u6370:
  7247   00078E                     
  7248                           ; BSR set to: 0
  7249   00078E  0E78               	movlw	120
  7250   000790  1968               	xorwf	atox@c& (0+255),w,b
  7251   000792  1169               	iorwf	(atox@c+1)& (0+255),w,b
  7252   000794  A4D8               	btfss	status,2,c
  7253   000796  EFCF  F003         	goto	u6381
  7254   00079A  EFD1  F003         	goto	u6380
  7255   00079E                     u6381:
  7256   00079E  EFE2  F003         	goto	l5622
  7257   0007A2                     u6380:
  7258   0007A2                     l5618:
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 556:     if (seen
      +                          _0x) {
  7262   0007A2  5164               	movf	atox@seen_0x& (0+255),w,b
  7263   0007A4  1165               	iorwf	(atox@seen_0x+1)& (0+255),w,b
  7264   0007A6  B4D8               	btfsc	status,2,c
  7265   0007A8  EFD8  F003         	goto	u6391
  7266   0007AC  EFDA  F003         	goto	u6390
  7267   0007B0                     u6391:
  7268   0007B0  EFDC  F003         	goto	l1369
  7269   0007B4                     u6390:
  7270   0007B4  EF94  F003         	goto	l5602
  7271   0007B8                     l1369:
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 560:     seen_0x 
      +                          = i;
  7275   0007B8  C066  F064         	movff	atox@i,atox@seen_0x
  7276   0007BC  C067  F065         	movff	atox@i+1,atox@seen_0x+1
  7277                           
  7278                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 561:    }
  7279   0007C0  EF46  F004         	goto	l5640
  7280   0007C4                     l5622:
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 563:     if (c !=
      +                           (-1)) {
  7284   0007C4  2968               	incf	atox@c& (0+255),w,b
  7285   0007C6  E108               	bnz	u6400
  7286   0007C8  2969               	incf	(atox@c+1)& (0+255),w,b
  7287   0007CA  B4D8               	btfsc	status,2,c
  7288   0007CC  EFEA  F003         	goto	u6401
  7289   0007D0  EFEC  F003         	goto	u6400
  7290   0007D4                     u6401:
  7291   0007D4  EF52  F004         	goto	l5646
  7292   0007D8                     u6400:
  7293   0007D8                     
  7294                           ; BSR set to: 0
  7295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 564:      ungetc(
      +                          c, fp);
  7296   0007D8  C068  F003         	movff	atox@c,ungetc@c
  7297   0007DC  C069  F004         	movff	atox@c+1,ungetc@c+1
  7298   0007E0  C04B  F005         	movff	atox@fp,ungetc@fp
  7299   0007E4  EC52  F016         	call	_ungetc	;wreg free
  7300   0007E8  EF52  F004         	goto	l5646
  7301   0007EC                     l5626:
  7302                           
  7303                           ; BSR set to: 0
  7304   0007EC  C068  F04D         	movff	atox@c,??_atox
  7305   0007F0  0ED0               	movlw	208
  7306   0007F2  264D               	addwf	??_atox^0,f,c
  7307   0007F4  0E09               	movlw	9
  7308   0007F6  644D               	cpfsgt	??_atox^0,c
  7309   0007F8  EF00  F004         	goto	u6411
  7310   0007FC  EF02  F004         	goto	u6410
  7311   000800                     u6411:
  7312   000800  EF46  F004         	goto	l5640
  7313   000804                     u6410:
  7314   000804                     
  7315                           ; BSR set to: 0
  7316   000804  C068  F04D         	movff	atox@c,??_atox
  7317   000808  0E20               	movlw	32
  7318   00080A  124D               	iorwf	??_atox^0,f,c
  7319   00080C  0E9F               	movlw	159
  7320   00080E  264D               	addwf	??_atox^0,f,c
  7321   000810  0E05               	movlw	5
  7322   000812  644D               	cpfsgt	??_atox^0,c
  7323   000814  EF0E  F004         	goto	u6421
  7324   000818  EF10  F004         	goto	u6420
  7325   00081C                     u6421:
  7326   00081C  EF46  F004         	goto	l5640
  7327   000820                     u6420:
  7328   000820                     
  7329                           ; BSR set to: 0
  7330                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 570:    if (c != 
      +                          (-1)) {
  7331   000820  2968               	incf	atox@c& (0+255),w,b
  7332   000822  E108               	bnz	u6430
  7333   000824  2969               	incf	(atox@c+1)& (0+255),w,b
  7334   000826  B4D8               	btfsc	status,2,c
  7335   000828  EF18  F004         	goto	u6431
  7336   00082C  EF1A  F004         	goto	u6430
  7337   000830                     u6431:
  7338   000830  EF22  F004         	goto	l5634
  7339   000834                     u6430:
  7340   000834                     
  7341                           ; BSR set to: 0
  7342                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 571:     ungetc(c
      +                          , fp);
  7343   000834  C068  F003         	movff	atox@c,ungetc@c
  7344   000838  C069  F004         	movff	atox@c+1,ungetc@c+1
  7345   00083C  C04B  F005         	movff	atox@fp,ungetc@fp
  7346   000840  EC52  F016         	call	_ungetc	;wreg free
  7347   000844                     l5634:
  7348                           
  7349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 573:    if (seen_
      +                          0x && seen_0x == (i-1)) {
  7350   000844  0100               	movlb	0	; () banked
  7351   000846  5164               	movf	atox@seen_0x& (0+255),w,b
  7352   000848  1165               	iorwf	(atox@seen_0x+1)& (0+255),w,b
  7353   00084A  B4D8               	btfsc	status,2,c
  7354   00084C  EF2A  F004         	goto	u6441
  7355   000850  EF2C  F004         	goto	u6440
  7356   000854                     u6441:
  7357   000854  EF6D  F004         	goto	l5650
  7358   000858                     u6440:
  7359   000858                     
  7360                           ; BSR set to: 0
  7361   000858  0EFF               	movlw	255
  7362   00085A  2566               	addwf	atox@i& (0+255),w,b
  7363   00085C  6E4D               	movwf	??_atox^0,c
  7364   00085E  0EFF               	movlw	255
  7365   000860  2167               	addwfc	(atox@i+1)& (0+255),w,b
  7366   000862  6E4E               	movwf	(??_atox+1)^0,c
  7367   000864  5164               	movf	atox@seen_0x& (0+255),w,b
  7368   000866  184D               	xorwf	??_atox^0,w,c
  7369   000868  E107               	bnz	u6451
  7370   00086A  5165               	movf	(atox@seen_0x+1)& (0+255),w,b
  7371   00086C  184E               	xorwf	(??_atox+1)^0,w,c
  7372   00086E  A4D8               	btfss	status,2,c
  7373   000870  EF3C  F004         	goto	u6451
  7374   000874  EF3E  F004         	goto	u6450
  7375   000878                     u6451:
  7376   000878  EF6D  F004         	goto	l5650
  7377   00087C                     u6450:
  7378   00087C                     
  7379                           ; BSR set to: 0
  7380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 574:     i--;
  7381   00087C  0766               	decf	atox@i& (0+255),f,b
  7382   00087E  A0D8               	btfss	status,0,c
  7383   000880  0767               	decf	(atox@i+1)& (0+255),f,b
  7384                           
  7385                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 575:     nmatch--
      +                          ;
  7386   000882  07B7               	decf	_nmatch& (0+255),f,b
  7387   000884  A0D8               	btfss	status,0,c
  7388   000886  07B8               	decf	(_nmatch+1)& (0+255),f,b
  7389   000888  EF6D  F004         	goto	l5650
  7390   00088C                     l5640:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 579:         dbuf
      +                          [i] = (char)c;
  7394   00088C  0E3C               	movlw	low _dbuf@doscan$F2256
  7395   00088E  2566               	addwf	atox@i& (0+255),w,b
  7396   000890  6ED9               	movwf	fsr2l,c
  7397   000892  0E01               	movlw	high _dbuf@doscan$F2256
  7398   000894  2167               	addwfc	(atox@i+1)& (0+255),w,b
  7399   000896  6EDA               	movwf	fsr2h,c
  7400   000898  C068  FFDF         	movff	atox@c,indf2
  7401   00089C                     
  7402                           ; BSR set to: 0
  7403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 580:         ++i;
  7404   00089C  4B66               	infsnz	atox@i& (0+255),f,b
  7405   00089E  2B67               	incf	(atox@i+1)& (0+255),f,b
  7406   0008A0                     
  7407                           ; BSR set to: 0
  7408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 581:         ++nm
      +                          atch;
  7409   0008A0  4BB7               	infsnz	_nmatch& (0+255),f,b
  7410   0008A2  2BB8               	incf	(_nmatch+1)& (0+255),f,b
  7411   0008A4                     l5646:
  7412                           
  7413                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 539:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
  7414   0008A4  0100               	movlb	0	; () banked
  7415   0008A6  5160               	movf	atox@w& (0+255),w,b
  7416   0008A8  5D66               	subwf	atox@i& (0+255),w,b
  7417   0008AA  5167               	movf	(atox@i+1)& (0+255),w,b
  7418   0008AC  0A80               	xorlw	128
  7419   0008AE  6E4D               	movwf	??_atox^0,c
  7420   0008B0  5161               	movf	(atox@w+1)& (0+255),w,b
  7421   0008B2  0A80               	xorlw	128
  7422   0008B4  584D               	subwfb	??_atox^0,w,c
  7423   0008B6  B0D8               	btfsc	status,0,c
  7424   0008B8  EF60  F004         	goto	u6461
  7425   0008BC  EF62  F004         	goto	u6460
  7426   0008C0                     u6461:
  7427   0008C0  EF6D  F004         	goto	l5650
  7428   0008C4                     u6460:
  7429   0008C4                     
  7430                           ; BSR set to: 0
  7431   0008C4  5167               	movf	(atox@i+1)& (0+255),w,b
  7432   0008C6  E109               	bnz	u6470
  7433   0008C8  0E1F               	movlw	31
  7434   0008CA  5D66               	subwf	atox@i& (0+255),w,b
  7435   0008CC  A0D8               	btfss	status,0,c
  7436   0008CE  EF6B  F004         	goto	u6471
  7437   0008D2  EF6D  F004         	goto	u6470
  7438   0008D6                     u6471:
  7439   0008D6  EF48  F003         	goto	l5588
  7440   0008DA                     u6470:
  7441   0008DA                     l5650:
  7442                           
  7443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 583:     dbuf[i] 
      +                          = '\0';
  7444   0008DA  0E3C               	movlw	low _dbuf@doscan$F2256
  7445   0008DC  0100               	movlb	0	; () banked
  7446   0008DE  2566               	addwf	atox@i& (0+255),w,b
  7447   0008E0  6ED9               	movwf	fsr2l,c
  7448   0008E2  0E01               	movlw	high _dbuf@doscan$F2256
  7449   0008E4  2167               	addwfc	(atox@i+1)& (0+255),w,b
  7450   0008E6  6EDA               	movwf	fsr2h,c
  7451   0008E8  6ADF               	clrf	indf2,c
  7452   0008EA                     
  7453                           ; BSR set to: 0
  7454                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 587:     *pll = _
      +                          _strtoxll(&dbuf[0],&ep,16,0);
  7455   0008EA  0E3C               	movlw	low _dbuf@doscan$F2256
  7456   0008EC  6E1B               	movwf	___strtoxll@s^0,c
  7457   0008EE  0E01               	movlw	high _dbuf@doscan$F2256
  7458   0008F0  6E1C               	movwf	(___strtoxll@s+1)^0,c
  7459   0008F2  0E62               	movlw	low atox@ep
  7460   0008F4  6E1D               	movwf	___strtoxll@endptr^0,c
  7461   0008F6  0E00               	movlw	0
  7462   0008F8  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7463   0008FA  0E10               	movlw	16
  7464   0008FC  6E1E               	movwf	___strtoxll@base^0,c
  7465   0008FE  0E00               	movlw	0
  7466   000900  6E20               	movwf	___strtoxll@is_signed^0,c
  7467   000902  EC70  F000         	call	___strtoxll	;wreg free
  7468   000906  C01B  F04D         	movff	?___strtoxll,??_atox
  7469   00090A  C01C  F04E         	movff	?___strtoxll+1,??_atox+1
  7470   00090E  C01D  F04F         	movff	?___strtoxll+2,??_atox+2
  7471   000912  C01E  F050         	movff	?___strtoxll+3,??_atox+3
  7472   000916  C01F  F051         	movff	?___strtoxll+4,??_atox+4
  7473   00091A  C020  F052         	movff	?___strtoxll+5,??_atox+5
  7474   00091E  C021  F053         	movff	?___strtoxll+6,??_atox+6
  7475   000922  C022  F054         	movff	?___strtoxll+7,??_atox+7
  7476   000926  504C               	movf	atox@pll^0,w,c
  7477   000928  6ED9               	movwf	fsr2l,c
  7478   00092A  6ADA               	clrf	fsr2h,c
  7479   00092C  C04D  FFDE         	movff	??_atox,postinc2
  7480   000930  C04E  FFDE         	movff	??_atox+1,postinc2
  7481   000934  C04F  FFDE         	movff	??_atox+2,postinc2
  7482   000938  C050  FFDE         	movff	??_atox+3,postinc2
  7483   00093C  C051  FFDE         	movff	??_atox+4,postinc2
  7484   000940  C052  FFDE         	movff	??_atox+5,postinc2
  7485   000944  C053  FFDE         	movff	??_atox+6,postinc2
  7486   000948  C054  FFDE         	movff	??_atox+7,postinc2
  7487   00094C                     
  7488                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 592:     return (
      +                          errno || !i || ep == &dbuf[0]) ? (-1) - 1 : !asup;
  7489   00094C  0100               	movlb	0	; () banked
  7490   00094E  51BD               	movf	_errno& (0+255),w,b
  7491   000950  11BE               	iorwf	(_errno+1)& (0+255),w,b
  7492   000952  A4D8               	btfss	status,2,c
  7493   000954  EFAE  F004         	goto	u6481
  7494   000958  EFB0  F004         	goto	u6480
  7495   00095C                     u6481:
  7496   00095C  EFD3  F004         	goto	l5662
  7497   000960                     u6480:
  7498   000960                     
  7499                           ; BSR set to: 0
  7500   000960  5166               	movf	atox@i& (0+255),w,b
  7501   000962  1167               	iorwf	(atox@i+1)& (0+255),w,b
  7502   000964  B4D8               	btfsc	status,2,c
  7503   000966  EFB7  F004         	goto	u6491
  7504   00096A  EFB9  F004         	goto	u6490
  7505   00096E                     u6491:
  7506   00096E  EFD3  F004         	goto	l5662
  7507   000972                     u6490:
  7508   000972                     
  7509                           ; BSR set to: 0
  7510   000972  0E3C               	movlw	low _dbuf@doscan$F2256
  7511   000974  1962               	xorwf	atox@ep& (0+255),w,b
  7512   000976  E109               	bnz	u6500
  7513   000978  0E01               	movlw	high _dbuf@doscan$F2256
  7514   00097A  1963               	xorwf	(atox@ep+1)& (0+255),w,b
  7515   00097C  B4D8               	btfsc	status,2,c
  7516   00097E  EFC3  F004         	goto	u6501
  7517   000982  EFC5  F004         	goto	u6500
  7518   000986                     u6501:
  7519   000986  EFD3  F004         	goto	l5662
  7520   00098A                     u6500:
  7521   00098A                     
  7522                           ; BSR set to: 0
  7523   00098A  51CE               	movf	_asup& (0+255),w,b
  7524   00098C  B4D8               	btfsc	status,2,c
  7525   00098E  EFCB  F004         	goto	u6511
  7526   000992  EFCE  F004         	goto	u6510
  7527   000996                     u6511:
  7528   000996  0E01               	movlw	1
  7529   000998  EFCF  F004         	goto	u6520
  7530   00099C                     u6510:
  7531   00099C  0E00               	movlw	0
  7532   00099E                     u6520:
  7533   00099E  6E4B               	movwf	?_atox^0,c
  7534   0009A0  6A4C               	clrf	(?_atox+1)^0,c
  7535   0009A2  EFD7  F004         	goto	l1358
  7536   0009A6                     l5662:
  7537                           
  7538                           ; BSR set to: 0
  7539   0009A6  0EFF               	movlw	255
  7540   0009A8  6E4C               	movwf	(?_atox+1)^0,c
  7541   0009AA  0EFE               	movlw	254
  7542   0009AC  6E4B               	movwf	?_atox^0,c
  7543   0009AE                     l1358:
  7544                           
  7545                           ; BSR set to: 0
  7546   0009AE  0012               	return		;funcret
  7547   0009B0                     __end_of_atox:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _skipws *****************
  7551 ;; Defined at:
  7552 ;;		line 74 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  7555 ;;		 -> sscanf@f(11), 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  c               2   15[COMRAM] int 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1    wreg      void 
  7560 ;; Registers used:
  7561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7567 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;Total ram usage:        4 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 3
  7574 ;; This function calls:
  7575 ;;		_fgetc
  7576 ;;		_ungetc
  7577 ;; This function is called by:
  7578 ;;		_atox
  7579 ;;		_vfsfcnvrt
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text26
  7584   003150                     __ptext26:
  7585                           	callstack 0
  7586   003150                     _skipws:
  7587                           	callstack 22
  7588   003150                     
  7589                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 74: static void s
      +                          kipws(FILE *fp);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 75
      +                          : {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 76:     int c;
      +                          ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
  7590   003150  EFCA  F018         	goto	l5448
  7591   003154                     l5442:
  7592                           
  7593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 79:         if (!
      +                          (((c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
  7594   003154  0E20               	movlw	32
  7595   003156  1810               	xorwf	skipws@c^0,w,c
  7596   003158  1011               	iorwf	(skipws@c+1)^0,w,c
  7597   00315A  B4D8               	btfsc	status,2,c
  7598   00315C  EFB2  F018         	goto	u5921
  7599   003160  EFB4  F018         	goto	u5920
  7600   003164                     u5921:
  7601   003164  EFCA  F018         	goto	l5448
  7602   003168                     u5920:
  7603   003168  C010  F00F         	movff	skipws@c,??_skipws
  7604   00316C  0EF7               	movlw	247
  7605   00316E  260F               	addwf	??_skipws^0,f,c
  7606   003170  0E04               	movlw	4
  7607   003172  640F               	cpfsgt	??_skipws^0,c
  7608   003174  EFBE  F018         	goto	u5931
  7609   003178  EFC0  F018         	goto	u5930
  7610   00317C                     u5931:
  7611   00317C  EFCA  F018         	goto	l5448
  7612   003180                     u5930:
  7613   003180                     
  7614                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 80:             u
      +                          ngetc(c, fp);
  7615   003180  C010  F003         	movff	skipws@c,ungetc@c
  7616   003184  C011  F004         	movff	skipws@c+1,ungetc@c+1
  7617   003188  C00E  F005         	movff	skipws@fp,ungetc@fp
  7618   00318C  EC52  F016         	call	_ungetc	;wreg free
  7619                           
  7620                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 81:             b
      +                          reak;
  7621   003190  EFDC  F018         	goto	l1346
  7622   003194                     l5448:
  7623                           
  7624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
  7625   003194  C00E  F005         	movff	skipws@fp,fgetc@fp
  7626   003198  EC03  F010         	call	_fgetc	;wreg free
  7627   00319C  C005  F010         	movff	?_fgetc,skipws@c
  7628   0031A0  C006  F011         	movff	?_fgetc+1,skipws@c+1
  7629   0031A4  2810               	incf	skipws@c^0,w,c
  7630   0031A6  E106               	bnz	u5941
  7631   0031A8  2811               	incf	(skipws@c+1)^0,w,c
  7632   0031AA  A4D8               	btfss	status,2,c
  7633   0031AC  EFDA  F018         	goto	u5941
  7634   0031B0  EFDC  F018         	goto	u5940
  7635   0031B4                     u5941:
  7636   0031B4  EFAA  F018         	goto	l5442
  7637   0031B8                     u5940:
  7638   0031B8                     l1346:
  7639   0031B8  0012               	return		;funcret
  7640   0031BA                     __end_of_skipws:
  7641                           	callstack 0
  7642                           
  7643 ;; *************** function _ungetc *****************
  7644 ;; Defined at:
  7645 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_getc.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  c               2    2[COMRAM] int 
  7648 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7649 ;;		 -> sscanf@f(11), 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;		None
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  2    2[COMRAM] int 
  7654 ;; Registers used:
  7655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7661 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7663 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7664 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7665 ;;Total ram usage:        5 bytes
  7666 ;; Hardware stack levels used: 1
  7667 ;; Hardware stack levels required when called: 1
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		_skipws
  7672 ;;		_atox
  7673 ;;		_vfsfcnvrt
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text27
  7678   002CA4                     __ptext27:
  7679                           	callstack 0
  7680   002CA4                     _ungetc:
  7681                           	callstack 24
  7682   002CA4  2803               	incf	ungetc@c^0,w,c
  7683   002CA6  E106               	bnz	u5841
  7684   002CA8  2804               	incf	(ungetc@c+1)^0,w,c
  7685   002CAA  A4D8               	btfss	status,2,c
  7686   002CAC  EF5A  F016         	goto	u5841
  7687   002CB0  EF5C  F016         	goto	u5840
  7688   002CB4                     u5841:
  7689   002CB4  EF5E  F016         	goto	l5404
  7690   002CB8                     u5840:
  7691   002CB8  EF9F  F016         	goto	l1499
  7692   002CBC                     l5404:
  7693   002CBC  5005               	movf	ungetc@fp^0,w,c
  7694   002CBE  A4D8               	btfss	status,2,c
  7695   002CC0  EF64  F016         	goto	u5851
  7696   002CC4  EF66  F016         	goto	u5850
  7697   002CC8                     u5851:
  7698   002CC8  EF79  F016         	goto	l5412
  7699   002CCC                     u5850:
  7700   002CCC  0E03               	movlw	3
  7701   002CCE  0100               	movlb	0	; () banked
  7702   002CD0  19CD               	xorwf	___ungetcnt& (0+255),w,b
  7703   002CD2  B4D8               	btfsc	status,2,c
  7704   002CD4  EF6E  F016         	goto	u5861
  7705   002CD8  EF70  F016         	goto	u5860
  7706   002CDC                     u5861:
  7707   002CDC  EF9F  F016         	goto	l1499
  7708   002CE0                     u5860:
  7709   002CE0                     
  7710                           ; BSR set to: 0
  7711   002CE0  51CD               	movf	___ungetcnt& (0+255),w,b
  7712   002CE2  0FAE               	addlw	low ___ungetbuf
  7713   002CE4  6ED9               	movwf	fsr2l,c
  7714   002CE6  6ADA               	clrf	fsr2h,c
  7715   002CE8  C003  FFDF         	movff	ungetc@c,indf2
  7716   002CEC                     
  7717                           ; BSR set to: 0
  7718   002CEC  2BCD               	incf	___ungetcnt& (0+255),f,b
  7719   002CEE  EF9F  F016         	goto	l1499
  7720   002CF2                     l5412:
  7721   002CF2  5005               	movf	ungetc@fp^0,w,c
  7722   002CF4  6ED9               	movwf	fsr2l,c
  7723   002CF6  6ADA               	clrf	fsr2h,c
  7724   002CF8  0E07               	movlw	7
  7725   002CFA  26D9               	addwf	fsr2l,f,c
  7726   002CFC  0E03               	movlw	3
  7727   002CFE  18DE               	xorwf	postinc2,w,c
  7728   002D00  10DE               	iorwf	postinc2,w,c
  7729   002D02  B4D8               	btfsc	status,2,c
  7730   002D04  EF86  F016         	goto	u5871
  7731   002D08  EF88  F016         	goto	u5870
  7732   002D0C                     u5871:
  7733   002D0C  EF9F  F016         	goto	l1499
  7734   002D10                     u5870:
  7735   002D10  5005               	movf	ungetc@fp^0,w,c
  7736   002D12  6ED9               	movwf	fsr2l,c
  7737   002D14  6ADA               	clrf	fsr2h,c
  7738   002D16  0E07               	movlw	7
  7739   002D18  26D9               	addwf	fsr2l,f,c
  7740   002D1A  50DF               	movf	indf2,w,c
  7741   002D1C  6E06               	movwf	??_ungetc^0,c
  7742   002D1E  5005               	movf	ungetc@fp^0,w,c
  7743   002D20  2406               	addwf	??_ungetc^0,w,c
  7744   002D22  6ED9               	movwf	fsr2l,c
  7745   002D24  6ADA               	clrf	fsr2h,c
  7746   002D26  0E04               	movlw	4
  7747   002D28  26D9               	addwf	fsr2l,f,c
  7748   002D2A  C003  FFDF         	movff	ungetc@c,indf2
  7749   002D2E  5005               	movf	ungetc@fp^0,w,c
  7750   002D30  6ED9               	movwf	fsr2l,c
  7751   002D32  6ADA               	clrf	fsr2h,c
  7752   002D34  0E07               	movlw	7
  7753   002D36  26D9               	addwf	fsr2l,f,c
  7754   002D38  2ADE               	incf	postinc2,f,c
  7755   002D3A  0E00               	movlw	0
  7756   002D3C  22DD               	addwfc	postdec2,f,c
  7757   002D3E                     l1499:
  7758   002D3E  0012               	return		;funcret
  7759   002D40                     __end_of_ungetc:
  7760                           	callstack 0
  7761                           
  7762 ;; *************** function _fgetc *****************
  7763 ;; Defined at:
  7764 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_getc.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7767 ;;		 -> sscanf@f(11), 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;  c               2   11[COMRAM] int 
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  2    4[COMRAM] int 
  7772 ;; Registers used:
  7773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7783 ;;Total ram usage:        9 bytes
  7784 ;; Hardware stack levels used: 1
  7785 ;; Hardware stack levels required when called: 2
  7786 ;; This function calls:
  7787 ;;		_getch
  7788 ;; This function is called by:
  7789 ;;		_skipws
  7790 ;;		_atox
  7791 ;;		_vfsfcnvrt
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text28
  7796   002006                     __ptext28:
  7797                           	callstack 0
  7798   002006                     _fgetc:
  7799                           	callstack 22
  7800   002006  5005               	movf	fgetc@fp^0,w,c
  7801   002008  A4D8               	btfss	status,2,c
  7802   00200A  EF09  F010         	goto	u5881
  7803   00200E  EF0B  F010         	goto	u5880
  7804   002012                     u5881:
  7805   002012  EF28  F010         	goto	l5424
  7806   002016                     u5880:
  7807   002016  0100               	movlb	0	; () banked
  7808   002018  51CD               	movf	___ungetcnt& (0+255),w,b
  7809   00201A  A4D8               	btfss	status,2,c
  7810   00201C  EF12  F010         	goto	u5891
  7811   002020  EF14  F010         	goto	u5890
  7812   002024                     u5891:
  7813   002024  EF1C  F010         	goto	l5422
  7814   002028                     u5890:
  7815   002028                     
  7816                           ; BSR set to: 0
  7817   002028  EC68  F01B         	call	_getch	;wreg free
  7818   00202C  C003  F00C         	movff	?_getch,fgetc@c
  7819   002030  C004  F00D         	movff	?_getch+1,fgetc@c+1
  7820   002034  EF7F  F010         	goto	l5436
  7821   002038                     l5422:
  7822                           
  7823                           ; BSR set to: 0
  7824   002038  07CD               	decf	___ungetcnt& (0+255),f,b
  7825   00203A  51CD               	movf	___ungetcnt& (0+255),w,b
  7826   00203C  0FAE               	addlw	low ___ungetbuf
  7827   00203E  6ED9               	movwf	fsr2l,c
  7828   002040  6ADA               	clrf	fsr2h,c
  7829   002042  50DF               	movf	indf2,w,c
  7830   002044  6E07               	movwf	??_fgetc^0,c
  7831   002046  5007               	movf	??_fgetc^0,w,c
  7832   002048  6E0C               	movwf	fgetc@c^0,c
  7833   00204A  6A0D               	clrf	(fgetc@c+1)^0,c
  7834   00204C  EF7F  F010         	goto	l5436
  7835   002050                     l5424:
  7836   002050  5005               	movf	fgetc@fp^0,w,c
  7837   002052  6ED9               	movwf	fsr2l,c
  7838   002054  6ADA               	clrf	fsr2h,c
  7839   002056  0E07               	movlw	7
  7840   002058  26D9               	addwf	fsr2l,f,c
  7841   00205A  50DE               	movf	postinc2,w,c
  7842   00205C  10DE               	iorwf	postinc2,w,c
  7843   00205E  B4D8               	btfsc	status,2,c
  7844   002060  EF34  F010         	goto	u5901
  7845   002064  EF36  F010         	goto	u5900
  7846   002068                     u5901:
  7847   002068  EF4F  F010         	goto	l5428
  7848   00206C                     u5900:
  7849   00206C  5005               	movf	fgetc@fp^0,w,c
  7850   00206E  6ED9               	movwf	fsr2l,c
  7851   002070  6ADA               	clrf	fsr2h,c
  7852   002072  0E07               	movlw	7
  7853   002074  26D9               	addwf	fsr2l,f,c
  7854   002076  06DE               	decf	postinc2,f,c
  7855   002078  0E00               	movlw	0
  7856   00207A  5ADD               	subwfb	postdec2,f,c
  7857   00207C  CFDE F007          	movff	postinc2,??_fgetc
  7858   002080  CFDD F008          	movff	postdec2,??_fgetc+1
  7859   002084  5005               	movf	fgetc@fp^0,w,c
  7860   002086  2407               	addwf	??_fgetc^0,w,c
  7861   002088  6ED9               	movwf	fsr2l,c
  7862   00208A  6ADA               	clrf	fsr2h,c
  7863   00208C  0E04               	movlw	4
  7864   00208E  26D9               	addwf	fsr2l,f,c
  7865   002090  50DF               	movf	indf2,w,c
  7866   002092  6E09               	movwf	(??_fgetc+2)^0,c
  7867   002094  5009               	movf	(??_fgetc+2)^0,w,c
  7868   002096  6E0C               	movwf	fgetc@c^0,c
  7869   002098  6A0D               	clrf	(fgetc@c+1)^0,c
  7870   00209A  EF7F  F010         	goto	l5436
  7871   00209E                     l5428:
  7872   00209E  5005               	movf	fgetc@fp^0,w,c
  7873   0020A0  6ED9               	movwf	fsr2l,c
  7874   0020A2  6ADA               	clrf	fsr2h,c
  7875   0020A4  0E02               	movlw	2
  7876   0020A6  26D9               	addwf	fsr2l,f,c
  7877   0020A8  CFDE F007          	movff	postinc2,??_fgetc
  7878   0020AC  CFDD F008          	movff	postdec2,??_fgetc+1
  7879   0020B0  5005               	movf	fgetc@fp^0,w,c
  7880   0020B2  6ED9               	movwf	fsr2l,c
  7881   0020B4  6ADA               	clrf	fsr2h,c
  7882   0020B6  CFDE F009          	movff	postinc2,??_fgetc+2
  7883   0020BA  CFDD F00A          	movff	postdec2,??_fgetc+3
  7884   0020BE  5007               	movf	??_fgetc^0,w,c
  7885   0020C0  2409               	addwf	(??_fgetc+2)^0,w,c
  7886   0020C2  6ED9               	movwf	fsr2l,c
  7887   0020C4  5008               	movf	(??_fgetc+1)^0,w,c
  7888   0020C6  200A               	addwfc	(??_fgetc+3)^0,w,c
  7889   0020C8  6EDA               	movwf	fsr2h,c
  7890   0020CA  50DF               	movf	indf2,w,c
  7891   0020CC  6E0B               	movwf	(??_fgetc+4)^0,c
  7892   0020CE  500B               	movf	(??_fgetc+4)^0,w,c
  7893   0020D0  6E0C               	movwf	fgetc@c^0,c
  7894   0020D2  6A0D               	clrf	(fgetc@c+1)^0,c
  7895   0020D4  500C               	movf	fgetc@c^0,w,c
  7896   0020D6  100D               	iorwf	(fgetc@c+1)^0,w,c
  7897   0020D8  A4D8               	btfss	status,2,c
  7898   0020DA  EF71  F010         	goto	u5911
  7899   0020DE  EF73  F010         	goto	u5910
  7900   0020E2                     u5911:
  7901   0020E2  EF77  F010         	goto	l5434
  7902   0020E6                     u5910:
  7903   0020E6  680C               	setf	fgetc@c^0,c
  7904   0020E8  680D               	setf	(fgetc@c+1)^0,c
  7905   0020EA  EF7F  F010         	goto	l5436
  7906   0020EE                     l5434:
  7907   0020EE  5005               	movf	fgetc@fp^0,w,c
  7908   0020F0  6ED9               	movwf	fsr2l,c
  7909   0020F2  6ADA               	clrf	fsr2h,c
  7910   0020F4  0E02               	movlw	2
  7911   0020F6  26D9               	addwf	fsr2l,f,c
  7912   0020F8  2ADE               	incf	postinc2,f,c
  7913   0020FA  0E00               	movlw	0
  7914   0020FC  22DD               	addwfc	postdec2,f,c
  7915   0020FE                     l5436:
  7916   0020FE  C00C  F005         	movff	fgetc@c,?_fgetc
  7917   002102  C00D  F006         	movff	fgetc@c+1,?_fgetc+1
  7918   002106  0012               	return		;funcret
  7919   002108                     __end_of_fgetc:
  7920                           	callstack 0
  7921                           
  7922 ;; *************** function _getch *****************
  7923 ;; Defined at:
  7924 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\getch.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;		None
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;		None
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  2    2[COMRAM] int 
  7931 ;; Registers used:
  7932 ;;		None
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;Total ram usage:        2 bytes
  7943 ;; Hardware stack levels used: 1
  7944 ;; Hardware stack levels required when called: 1
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_fgetc
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text29
  7953   0036D0                     __ptext29:
  7954                           	callstack 0
  7955   0036D0                     _getch:
  7956                           	callstack 22
  7957   0036D0  6803               	setf	?_getch^0,c
  7958   0036D2  6804               	setf	(?_getch+1)^0,c
  7959   0036D4  0012               	return		;funcret
  7960   0036D6                     __end_of_getch:
  7961                           	callstack 0
  7962                           
  7963 ;; *************** function ___strtoxll *****************
  7964 ;; Defined at:
  7965 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__strtoxll.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  s               2   26[COMRAM] PTR const unsigned char 
  7968 ;;		 -> dbuf@doscan$F2256(32), 
  7969 ;;  endptr          1   28[COMRAM] PTR PTR unsigned char 
  7970 ;;		 -> atox@ep(2), 
  7971 ;;  base            2   29[COMRAM] int 
  7972 ;;  is_signed       1   31[COMRAM] unsigned char 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;  a               8   63[COMRAM] unsigned long long 
  7975 ;;  limit           8   54[COMRAM] unsigned long long 
  7976 ;;  prev_a          8   42[COMRAM] unsigned long long 
  7977 ;;  cp              2   71[COMRAM] PTR const unsigned char 
  7978 ;;		 -> dbuf@doscan$F2256(32), 
  7979 ;;  c               1   73[COMRAM] unsigned char 
  7980 ;;  flags           1   62[COMRAM] enum E246
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  8   26[COMRAM] unsigned long long 
  7983 ;; Registers used:
  7984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7990 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;      Locals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7992 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7993 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;Total ram usage:       48 bytes
  7995 ;; Hardware stack levels used: 1
  7996 ;; Hardware stack levels required when called: 2
  7997 ;; This function calls:
  7998 ;;		___omul
  7999 ;; This function is called by:
  8000 ;;		_atox
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           	psect	text30
  8005   0000E0                     __ptext30:
  8006                           	callstack 0
  8007   0000E0                     ___strtoxll:
  8008                           	callstack 22
  8009   0000E0  6A3F               	clrf	___strtoxll@flags^0,c
  8010   0000E2  EE20  F040         	lfsr	2,___strtoxll@a
  8011   0000E6  0E07               	movlw	7
  8012   0000E8                     u5951:
  8013   0000E8  6ADE               	clrf	postinc2,c
  8014   0000EA  06E8               	decf	wreg,f,c
  8015   0000EC  E2FD               	bc	u5951
  8016   0000EE  C01B  F048         	movff	___strtoxll@s,___strtoxll@cp
  8017   0000F2  C01C  F049         	movff	___strtoxll@s+1,___strtoxll@cp+1
  8018   0000F6  BE1F               	btfsc	(___strtoxll@base+1)^0,7,c
  8019   0000F8  EF89  F000         	goto	u5960
  8020   0000FC  501F               	movf	(___strtoxll@base+1)^0,w,c
  8021   0000FE  E107               	bnz	u5961
  8022   000100  0E25               	movlw	37
  8023   000102  5C1E               	subwf	___strtoxll@base^0,w,c
  8024   000104  B0D8               	btfsc	status,0,c
  8025   000106  EF87  F000         	goto	u5961
  8026   00010A  EF89  F000         	goto	u5960
  8027   00010E                     u5961:
  8028   00010E  EF92  F000         	goto	l5460
  8029   000112                     u5960:
  8030   000112  041E               	decf	___strtoxll@base^0,w,c
  8031   000114  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  8032   000116  A4D8               	btfss	status,2,c
  8033   000118  EF90  F000         	goto	u5971
  8034   00011C  EF92  F000         	goto	u5970
  8035   000120                     u5971:
  8036   000120  EF99  F000         	goto	l5462
  8037   000124                     u5970:
  8038   000124                     l5460:
  8039   000124  0E00               	movlw	0
  8040   000126  0100               	movlb	0	; () banked
  8041   000128  6FBE               	movwf	(_errno+1)& (0+255),b
  8042   00012A  0E16               	movlw	22
  8043   00012C  6FBD               	movwf	_errno& (0+255),b
  8044   00012E  EFFA  F002         	goto	l5566
  8045   000132                     l5462:
  8046   000132  5048               	movf	___strtoxll@cp^0,w,c
  8047   000134  1049               	iorwf	(___strtoxll@cp+1)^0,w,c
  8048   000136  B4D8               	btfsc	status,2,c
  8049   000138  EFA0  F000         	goto	u5981
  8050   00013C  EFA2  F000         	goto	u5980
  8051   000140                     u5981:
  8052   000140  EFFA  F002         	goto	l5566
  8053   000144                     u5980:
  8054   000144  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8055   000148  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8056   00014C  50DF               	movf	indf2,w,c
  8057   00014E  A4D8               	btfss	status,2,c
  8058   000150  EFAC  F000         	goto	u5991
  8059   000154  EFAE  F000         	goto	u5990
  8060   000158                     u5991:
  8061   000158  EFB0  F000         	goto	l5466
  8062   00015C                     u5990:
  8063   00015C  EFFA  F002         	goto	l5566
  8064   000160                     l5466:
  8065   000160  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8066   000164  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8067   000168  50DF               	movf	indf2,w,c
  8068   00016A  6E4A               	movwf	___strtoxll@c^0,c
  8069   00016C  EFC0  F000         	goto	l5470
  8070   000170                     l5468:
  8071   000170  4A48               	infsnz	___strtoxll@cp^0,f,c
  8072   000172  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  8073   000174  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8074   000178  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8075   00017C  50DF               	movf	indf2,w,c
  8076   00017E  6E4A               	movwf	___strtoxll@c^0,c
  8077   000180                     l5470:
  8078   000180  0E20               	movlw	32
  8079   000182  184A               	xorwf	___strtoxll@c^0,w,c
  8080   000184  B4D8               	btfsc	status,2,c
  8081   000186  EFC7  F000         	goto	u6001
  8082   00018A  EFC9  F000         	goto	u6000
  8083   00018E                     u6001:
  8084   00018E  EFB8  F000         	goto	l5468
  8085   000192                     u6000:
  8086   000192  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8087   000196  0EF7               	movlw	247
  8088   000198  2623               	addwf	??___strtoxll^0,f,c
  8089   00019A  0E04               	movlw	4
  8090   00019C  6423               	cpfsgt	??___strtoxll^0,c
  8091   00019E  EFD3  F000         	goto	u6011
  8092   0001A2  EFD5  F000         	goto	u6010
  8093   0001A6                     u6011:
  8094   0001A6  EFB8  F000         	goto	l5468
  8095   0001AA                     u6010:
  8096   0001AA  0E2D               	movlw	45
  8097   0001AC  184A               	xorwf	___strtoxll@c^0,w,c
  8098   0001AE  A4D8               	btfss	status,2,c
  8099   0001B0  EFDC  F000         	goto	u6021
  8100   0001B4  EFDE  F000         	goto	u6020
  8101   0001B8                     u6021:
  8102   0001B8  EFE9  F000         	goto	l5480
  8103   0001BC                     u6020:
  8104   0001BC  803F               	bsf	___strtoxll@flags^0,0,c
  8105   0001BE                     l5478:
  8106   0001BE  4A48               	infsnz	___strtoxll@cp^0,f,c
  8107   0001C0  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  8108   0001C2  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8109   0001C6  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8110   0001CA  50DF               	movf	indf2,w,c
  8111   0001CC  6E4A               	movwf	___strtoxll@c^0,c
  8112   0001CE  EFF4  F000         	goto	l5484
  8113   0001D2                     l5480:
  8114   0001D2  0E2B               	movlw	43
  8115   0001D4  184A               	xorwf	___strtoxll@c^0,w,c
  8116   0001D6  A4D8               	btfss	status,2,c
  8117   0001D8  EFF0  F000         	goto	u6031
  8118   0001DC  EFF2  F000         	goto	u6030
  8119   0001E0                     u6031:
  8120   0001E0  EFF4  F000         	goto	l5484
  8121   0001E4                     u6030:
  8122   0001E4  EFDF  F000         	goto	l5478
  8123   0001E8                     l5484:
  8124   0001E8  0E30               	movlw	48
  8125   0001EA  184A               	xorwf	___strtoxll@c^0,w,c
  8126   0001EC  A4D8               	btfss	status,2,c
  8127   0001EE  EFFB  F000         	goto	u6041
  8128   0001F2  EFFD  F000         	goto	u6040
  8129   0001F6                     u6041:
  8130   0001F6  EF96  F001         	goto	l5520
  8131   0001FA                     u6040:
  8132   0001FA  4A48               	infsnz	___strtoxll@cp^0,f,c
  8133   0001FC  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  8134   0001FE  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8135   000202  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8136   000206  50DF               	movf	indf2,w,c
  8137   000208  6E4A               	movwf	___strtoxll@c^0,c
  8138   00020A  501E               	movf	___strtoxll@base^0,w,c
  8139   00020C  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  8140   00020E  B4D8               	btfsc	status,2,c
  8141   000210  EF0C  F001         	goto	u6051
  8142   000214  EF0E  F001         	goto	u6050
  8143   000218                     u6051:
  8144   000218  EF18  F001         	goto	l5492
  8145   00021C                     u6050:
  8146   00021C  0E10               	movlw	16
  8147   00021E  181E               	xorwf	___strtoxll@base^0,w,c
  8148   000220  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  8149   000222  A4D8               	btfss	status,2,c
  8150   000224  EF16  F001         	goto	u6061
  8151   000228  EF18  F001         	goto	u6060
  8152   00022C                     u6061:
  8153   00022C  EF88  F001         	goto	l5514
  8154   000230                     u6060:
  8155   000230                     l5492:
  8156   000230  0E78               	movlw	120
  8157   000232  184A               	xorwf	___strtoxll@c^0,w,c
  8158   000234  B4D8               	btfsc	status,2,c
  8159   000236  EF1F  F001         	goto	u6071
  8160   00023A  EF21  F001         	goto	u6070
  8161   00023E                     u6071:
  8162   00023E  EF2A  F001         	goto	l5496
  8163   000242                     u6070:
  8164   000242  0E58               	movlw	88
  8165   000244  184A               	xorwf	___strtoxll@c^0,w,c
  8166   000246  A4D8               	btfss	status,2,c
  8167   000248  EF28  F001         	goto	u6081
  8168   00024C  EF2A  F001         	goto	u6080
  8169   000250                     u6081:
  8170   000250  EF88  F001         	goto	l5514
  8171   000254                     u6080:
  8172   000254                     l5496:
  8173   000254  0E00               	movlw	0
  8174   000256  6E1F               	movwf	(___strtoxll@base+1)^0,c
  8175   000258  0E10               	movlw	16
  8176   00025A  6E1E               	movwf	___strtoxll@base^0,c
  8177   00025C  4A48               	infsnz	___strtoxll@cp^0,f,c
  8178   00025E  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  8179   000260  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8180   000264  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8181   000268  50DF               	movf	indf2,w,c
  8182   00026A  6E4A               	movwf	___strtoxll@c^0,c
  8183   00026C  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8184   000270  0E20               	movlw	32
  8185   000272  1223               	iorwf	??___strtoxll^0,f,c
  8186   000274  0E9F               	movlw	159
  8187   000276  2623               	addwf	??___strtoxll^0,f,c
  8188   000278  0E1A               	movlw	26
  8189   00027A  6023               	cpfslt	??___strtoxll^0,c
  8190   00027C  EF42  F001         	goto	u6091
  8191   000280  EF44  F001         	goto	u6090
  8192   000284                     u6091:
  8193   000284  EF68  F001         	goto	l5508
  8194   000288                     u6090:
  8195   000288  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8196   00028C  0E9F               	movlw	159
  8197   00028E  2623               	addwf	??___strtoxll^0,f,c
  8198   000290  0E19               	movlw	25
  8199   000292  6423               	cpfsgt	??___strtoxll^0,c
  8200   000294  EF4E  F001         	goto	u6101
  8201   000298  EF50  F001         	goto	u6100
  8202   00029C                     u6101:
  8203   00029C  EF55  F001         	goto	l5506
  8204   0002A0                     u6100:
  8205   0002A0  C04A  F033         	movff	___strtoxll@c,___strtoxll$2306
  8206   0002A4  6A34               	clrf	(___strtoxll$2306+1)^0,c
  8207   0002A6  EF5C  F001         	goto	l1446
  8208   0002AA                     l5506:
  8209   0002AA  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8210   0002AE  0E5F               	movlw	95
  8211   0002B0  1623               	andwf	??___strtoxll^0,f,c
  8212   0002B2  5023               	movf	??___strtoxll^0,w,c
  8213   0002B4  6E33               	movwf	___strtoxll$2306^0,c
  8214   0002B6  6A34               	clrf	(___strtoxll$2306+1)^0,c
  8215   0002B8                     l1446:
  8216   0002B8  C033  F023         	movff	___strtoxll$2306,??___strtoxll
  8217   0002BC  0EC9               	movlw	201
  8218   0002BE  2623               	addwf	??___strtoxll^0,f,c
  8219   0002C0  0E10               	movlw	16
  8220   0002C2  6023               	cpfslt	??___strtoxll^0,c
  8221   0002C4  EF66  F001         	goto	u6111
  8222   0002C8  EF68  F001         	goto	u6110
  8223   0002CC                     u6111:
  8224   0002CC  EF82  F001         	goto	l5512
  8225   0002D0                     u6110:
  8226   0002D0                     l5508:
  8227   0002D0  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8228   0002D4  0E20               	movlw	32
  8229   0002D6  1223               	iorwf	??___strtoxll^0,f,c
  8230   0002D8  0E9F               	movlw	159
  8231   0002DA  2623               	addwf	??___strtoxll^0,f,c
  8232   0002DC  0E19               	movlw	25
  8233   0002DE  6423               	cpfsgt	??___strtoxll^0,c
  8234   0002E0  EF74  F001         	goto	u6121
  8235   0002E4  EF76  F001         	goto	u6120
  8236   0002E8                     u6121:
  8237   0002E8  EF96  F001         	goto	l5520
  8238   0002EC                     u6120:
  8239   0002EC  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8240   0002F0  0ED0               	movlw	208
  8241   0002F2  2623               	addwf	??___strtoxll^0,f,c
  8242   0002F4  0E09               	movlw	9
  8243   0002F6  6423               	cpfsgt	??___strtoxll^0,c
  8244   0002F8  EF80  F001         	goto	u6131
  8245   0002FC  EF82  F001         	goto	u6130
  8246   000300                     u6131:
  8247   000300  EF96  F001         	goto	l5520
  8248   000304                     u6130:
  8249   000304                     l5512:
  8250   000304  843F               	bsf	___strtoxll@flags^0,2,c
  8251   000306  0648               	decf	___strtoxll@cp^0,f,c
  8252   000308  A0D8               	btfss	status,0,c
  8253   00030A  0649               	decf	(___strtoxll@cp+1)^0,f,c
  8254   00030C  EFFA  F002         	goto	l5566
  8255   000310                     l5514:
  8256   000310  843F               	bsf	___strtoxll@flags^0,2,c
  8257   000312  501E               	movf	___strtoxll@base^0,w,c
  8258   000314  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  8259   000316  A4D8               	btfss	status,2,c
  8260   000318  EF90  F001         	goto	u6141
  8261   00031C  EF92  F001         	goto	u6140
  8262   000320                     u6141:
  8263   000320  EF96  F001         	goto	l5520
  8264   000324                     u6140:
  8265   000324  0E00               	movlw	0
  8266   000326  6E1F               	movwf	(___strtoxll@base+1)^0,c
  8267   000328  0E08               	movlw	8
  8268   00032A  6E1E               	movwf	___strtoxll@base^0,c
  8269   00032C                     l5520:
  8270   00032C  501E               	movf	___strtoxll@base^0,w,c
  8271   00032E  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  8272   000330  A4D8               	btfss	status,2,c
  8273   000332  EF9D  F001         	goto	u6151
  8274   000336  EF9F  F001         	goto	u6150
  8275   00033A                     u6151:
  8276   00033A  EFA3  F001         	goto	l1449
  8277   00033E                     u6150:
  8278   00033E  0E00               	movlw	0
  8279   000340  6E1F               	movwf	(___strtoxll@base+1)^0,c
  8280   000342  0E0A               	movlw	10
  8281   000344  6E1E               	movwf	___strtoxll@base^0,c
  8282   000346                     l1449:
  8283   000346  5020               	movf	___strtoxll@is_signed^0,w,c
  8284   000348  B4D8               	btfsc	status,2,c
  8285   00034A  EFA9  F001         	goto	u6161
  8286   00034E  EFAB  F001         	goto	u6160
  8287   000352                     u6161:
  8288   000352  EFD6  F001         	goto	l1450
  8289   000356                     u6160:
  8290   000356  B03F               	btfsc	___strtoxll@flags^0,0,c
  8291   000358  EFB0  F001         	goto	u6171
  8292   00035C  EFB2  F001         	goto	u6170
  8293   000360                     u6171:
  8294   000360  EFC4  F001         	goto	l5528
  8295   000364                     u6170:
  8296   000364  0EFF               	movlw	255
  8297   000366  6E37               	movwf	___strtoxll@limit^0,c
  8298   000368  0EFF               	movlw	255
  8299   00036A  6E38               	movwf	(___strtoxll@limit+1)^0,c
  8300   00036C  0EFF               	movlw	255
  8301   00036E  6E39               	movwf	(___strtoxll@limit+2)^0,c
  8302   000370  0EFF               	movlw	255
  8303   000372  6E3A               	movwf	(___strtoxll@limit+3)^0,c
  8304   000374  0EFF               	movlw	255
  8305   000376  6E3B               	movwf	(___strtoxll@limit+4)^0,c
  8306   000378  0EFF               	movlw	255
  8307   00037A  6E3C               	movwf	(___strtoxll@limit+5)^0,c
  8308   00037C  0EFF               	movlw	255
  8309   00037E  6E3D               	movwf	(___strtoxll@limit+6)^0,c
  8310   000380  0E7F               	movlw	127
  8311   000382  6E3E               	movwf	(___strtoxll@limit+7)^0,c
  8312   000384  EFDE  F001         	goto	l1456
  8313   000388                     l5528:
  8314   000388  0E00               	movlw	0
  8315   00038A  6E37               	movwf	___strtoxll@limit^0,c
  8316   00038C  0E00               	movlw	0
  8317   00038E  6E38               	movwf	(___strtoxll@limit+1)^0,c
  8318   000390  0E00               	movlw	0
  8319   000392  6E39               	movwf	(___strtoxll@limit+2)^0,c
  8320   000394  0E00               	movlw	0
  8321   000396  6E3A               	movwf	(___strtoxll@limit+3)^0,c
  8322   000398  0E00               	movlw	0
  8323   00039A  6E3B               	movwf	(___strtoxll@limit+4)^0,c
  8324   00039C  0E00               	movlw	0
  8325   00039E  6E3C               	movwf	(___strtoxll@limit+5)^0,c
  8326   0003A0  0E00               	movlw	0
  8327   0003A2  6E3D               	movwf	(___strtoxll@limit+6)^0,c
  8328   0003A4  0E80               	movlw	128
  8329   0003A6  6E3E               	movwf	(___strtoxll@limit+7)^0,c
  8330   0003A8  EFDE  F001         	goto	l1456
  8331   0003AC                     l1450:
  8332   0003AC  6837               	setf	___strtoxll@limit^0,c
  8333   0003AE  6838               	setf	(___strtoxll@limit+1)^0,c
  8334   0003B0  6839               	setf	(___strtoxll@limit+2)^0,c
  8335   0003B2  683A               	setf	(___strtoxll@limit+3)^0,c
  8336   0003B4  683B               	setf	(___strtoxll@limit+4)^0,c
  8337   0003B6  683C               	setf	(___strtoxll@limit+5)^0,c
  8338   0003B8  683D               	setf	(___strtoxll@limit+6)^0,c
  8339   0003BA  683E               	setf	(___strtoxll@limit+7)^0,c
  8340   0003BC                     l1456:
  8341   0003BC  C040  F02B         	movff	___strtoxll@a,___strtoxll@prev_a
  8342   0003C0  C041  F02C         	movff	___strtoxll@a+1,___strtoxll@prev_a+1
  8343   0003C4  C042  F02D         	movff	___strtoxll@a+2,___strtoxll@prev_a+2
  8344   0003C8  C043  F02E         	movff	___strtoxll@a+3,___strtoxll@prev_a+3
  8345   0003CC  C044  F02F         	movff	___strtoxll@a+4,___strtoxll@prev_a+4
  8346   0003D0  C045  F030         	movff	___strtoxll@a+5,___strtoxll@prev_a+5
  8347   0003D4  C046  F031         	movff	___strtoxll@a+6,___strtoxll@prev_a+6
  8348   0003D8  C047  F032         	movff	___strtoxll@a+7,___strtoxll@prev_a+7
  8349   0003DC  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8350   0003E0  0E20               	movlw	32
  8351   0003E2  1223               	iorwf	??___strtoxll^0,f,c
  8352   0003E4  0E9F               	movlw	159
  8353   0003E6  2623               	addwf	??___strtoxll^0,f,c
  8354   0003E8  0E1A               	movlw	26
  8355   0003EA  6023               	cpfslt	??___strtoxll^0,c
  8356   0003EC  EFFA  F001         	goto	u6181
  8357   0003F0  EFFC  F001         	goto	u6180
  8358   0003F4                     u6181:
  8359   0003F4  EF19  F002         	goto	l5538
  8360   0003F8                     u6180:
  8361   0003F8  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8362   0003FC  0E9F               	movlw	159
  8363   0003FE  2623               	addwf	??___strtoxll^0,f,c
  8364   000400  0E19               	movlw	25
  8365   000402  6423               	cpfsgt	??___strtoxll^0,c
  8366   000404  EF06  F002         	goto	u6191
  8367   000408  EF08  F002         	goto	u6190
  8368   00040C                     u6191:
  8369   00040C  EF0D  F002         	goto	l5536
  8370   000410                     u6190:
  8371   000410  C04A  F035         	movff	___strtoxll@c,___strtoxll$2307
  8372   000414  6A36               	clrf	(___strtoxll$2307+1)^0,c
  8373   000416  EF14  F002         	goto	l1461
  8374   00041A                     l5536:
  8375   00041A  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8376   00041E  0E5F               	movlw	95
  8377   000420  1623               	andwf	??___strtoxll^0,f,c
  8378   000422  5023               	movf	??___strtoxll^0,w,c
  8379   000424  6E35               	movwf	___strtoxll$2307^0,c
  8380   000426  6A36               	clrf	(___strtoxll$2307+1)^0,c
  8381   000428                     l1461:
  8382   000428  5035               	movf	___strtoxll$2307^0,w,c
  8383   00042A  0FC9               	addlw	201
  8384   00042C  6E4A               	movwf	___strtoxll@c^0,c
  8385   00042E  EF27  F002         	goto	l5542
  8386   000432                     l5538:
  8387   000432  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8388   000436  0ED0               	movlw	208
  8389   000438  2623               	addwf	??___strtoxll^0,f,c
  8390   00043A  0E0A               	movlw	10
  8391   00043C  6023               	cpfslt	??___strtoxll^0,c
  8392   00043E  EF23  F002         	goto	u6201
  8393   000442  EF25  F002         	goto	u6200
  8394   000446                     u6201:
  8395   000446  EFE0  F002         	goto	l5562
  8396   00044A                     u6200:
  8397   00044A  0E30               	movlw	48
  8398   00044C  5E4A               	subwf	___strtoxll@c^0,f,c
  8399   00044E                     l5542:
  8400   00044E  504A               	movf	___strtoxll@c^0,w,c
  8401   000450  6E23               	movwf	??___strtoxll^0,c
  8402   000452  6A24               	clrf	(??___strtoxll+1)^0,c
  8403   000454  501E               	movf	___strtoxll@base^0,w,c
  8404   000456  5C23               	subwf	??___strtoxll^0,w,c
  8405   000458  5024               	movf	(??___strtoxll+1)^0,w,c
  8406   00045A  0A80               	xorlw	128
  8407   00045C  6E25               	movwf	(??___strtoxll+2)^0,c
  8408   00045E  501F               	movf	(___strtoxll@base+1)^0,w,c
  8409   000460  0A80               	xorlw	128
  8410   000462  5825               	subwfb	(??___strtoxll+2)^0,w,c
  8411   000464  A0D8               	btfss	status,0,c
  8412   000466  EF37  F002         	goto	u6211
  8413   00046A  EF39  F002         	goto	u6210
  8414   00046E                     u6211:
  8415   00046E  EF3B  F002         	goto	l1466
  8416   000472                     u6210:
  8417   000472  EFE0  F002         	goto	l5562
  8418   000476                     l1466:
  8419   000476  B23F               	btfsc	___strtoxll@flags^0,1,c
  8420   000478  EF40  F002         	goto	u6221
  8421   00047C  EF42  F002         	goto	u6220
  8422   000480                     u6221:
  8423   000480  EFD5  F002         	goto	l5558
  8424   000484                     u6220:
  8425   000484  C01E  F003         	movff	___strtoxll@base,___omul@multiplier
  8426   000488  C01F  F004         	movff	___strtoxll@base+1,___omul@multiplier+1
  8427   00048C  0E00               	movlw	0
  8428   00048E  BE04               	btfsc	(___omul@multiplier+1)^0,7,c
  8429   000490  0EFF               	movlw	-1
  8430   000492  6E05               	movwf	(___omul@multiplier+2)^0,c
  8431   000494  6E06               	movwf	(___omul@multiplier+3)^0,c
  8432   000496  6E07               	movwf	(___omul@multiplier+4)^0,c
  8433   000498  6E08               	movwf	(___omul@multiplier+5)^0,c
  8434   00049A  6E09               	movwf	(___omul@multiplier+6)^0,c
  8435   00049C  6E0A               	movwf	(___omul@multiplier+7)^0,c
  8436   00049E  C040  F00B         	movff	___strtoxll@a,___omul@multiplicand
  8437   0004A2  C041  F00C         	movff	___strtoxll@a+1,___omul@multiplicand+1
  8438   0004A6  C042  F00D         	movff	___strtoxll@a+2,___omul@multiplicand+2
  8439   0004AA  C043  F00E         	movff	___strtoxll@a+3,___omul@multiplicand+3
  8440   0004AE  C044  F00F         	movff	___strtoxll@a+4,___omul@multiplicand+4
  8441   0004B2  C045  F010         	movff	___strtoxll@a+5,___omul@multiplicand+5
  8442   0004B6  C046  F011         	movff	___strtoxll@a+6,___omul@multiplicand+6
  8443   0004BA  C047  F012         	movff	___strtoxll@a+7,___omul@multiplicand+7
  8444   0004BE  EC03  F016         	call	___omul	;wreg free
  8445   0004C2  C003  F023         	movff	?___omul,??___strtoxll
  8446   0004C6  C004  F024         	movff	?___omul+1,??___strtoxll+1
  8447   0004CA  C005  F025         	movff	?___omul+2,??___strtoxll+2
  8448   0004CE  C006  F026         	movff	?___omul+3,??___strtoxll+3
  8449   0004D2  C007  F027         	movff	?___omul+4,??___strtoxll+4
  8450   0004D6  C008  F028         	movff	?___omul+5,??___strtoxll+5
  8451   0004DA  C009  F029         	movff	?___omul+6,??___strtoxll+6
  8452   0004DE  C00A  F02A         	movff	?___omul+7,??___strtoxll+7
  8453   0004E2  504A               	movf	___strtoxll@c^0,w,c
  8454   0004E4  2423               	addwf	??___strtoxll^0,w,c
  8455   0004E6  6E40               	movwf	___strtoxll@a^0,c
  8456   0004E8  0E00               	movlw	0
  8457   0004EA  2024               	addwfc	(??___strtoxll+1)^0,w,c
  8458   0004EC  6E41               	movwf	(___strtoxll@a+1)^0,c
  8459   0004EE  0E00               	movlw	0
  8460   0004F0  2025               	addwfc	(??___strtoxll+2)^0,w,c
  8461   0004F2  6E42               	movwf	(___strtoxll@a+2)^0,c
  8462   0004F4  0E00               	movlw	0
  8463   0004F6  2026               	addwfc	(??___strtoxll+3)^0,w,c
  8464   0004F8  6E43               	movwf	(___strtoxll@a+3)^0,c
  8465   0004FA  0E00               	movlw	0
  8466   0004FC  2027               	addwfc	(??___strtoxll+4)^0,w,c
  8467   0004FE  6E44               	movwf	(___strtoxll@a+4)^0,c
  8468   000500  0E00               	movlw	0
  8469   000502  2028               	addwfc	(??___strtoxll+5)^0,w,c
  8470   000504  6E45               	movwf	(___strtoxll@a+5)^0,c
  8471   000506  0E00               	movlw	0
  8472   000508  2029               	addwfc	(??___strtoxll+6)^0,w,c
  8473   00050A  6E46               	movwf	(___strtoxll@a+6)^0,c
  8474   00050C  0E00               	movlw	0
  8475   00050E  202A               	addwfc	(??___strtoxll+7)^0,w,c
  8476   000510  6E47               	movwf	(___strtoxll@a+7)^0,c
  8477   000512  502B               	movf	___strtoxll@prev_a^0,w,c
  8478   000514  5C40               	subwf	___strtoxll@a^0,w,c
  8479   000516  502C               	movf	(___strtoxll@prev_a+1)^0,w,c
  8480   000518  5841               	subwfb	(___strtoxll@a+1)^0,w,c
  8481   00051A  502D               	movf	(___strtoxll@prev_a+2)^0,w,c
  8482   00051C  5842               	subwfb	(___strtoxll@a+2)^0,w,c
  8483   00051E  502E               	movf	(___strtoxll@prev_a+3)^0,w,c
  8484   000520  5843               	subwfb	(___strtoxll@a+3)^0,w,c
  8485   000522  502F               	movf	(___strtoxll@prev_a+4)^0,w,c
  8486   000524  5844               	subwfb	(___strtoxll@a+4)^0,w,c
  8487   000526  5030               	movf	(___strtoxll@prev_a+5)^0,w,c
  8488   000528  5845               	subwfb	(___strtoxll@a+5)^0,w,c
  8489   00052A  5031               	movf	(___strtoxll@prev_a+6)^0,w,c
  8490   00052C  5846               	subwfb	(___strtoxll@a+6)^0,w,c
  8491   00052E  5032               	movf	(___strtoxll@prev_a+7)^0,w,c
  8492   000530  5847               	subwfb	(___strtoxll@a+7)^0,w,c
  8493   000532  A0D8               	btfss	status,0,c
  8494   000534  EF9E  F002         	goto	u6231
  8495   000538  EFA0  F002         	goto	u6230
  8496   00053C                     u6231:
  8497   00053C  EFBF  F002         	goto	l1470
  8498   000540                     u6230:
  8499   000540  5020               	movf	___strtoxll@is_signed^0,w,c
  8500   000542  B4D8               	btfsc	status,2,c
  8501   000544  EFA6  F002         	goto	u6241
  8502   000548  EFA8  F002         	goto	u6240
  8503   00054C                     u6241:
  8504   00054C  EFD5  F002         	goto	l5558
  8505   000550                     u6240:
  8506   000550  5040               	movf	___strtoxll@a^0,w,c
  8507   000552  5C37               	subwf	___strtoxll@limit^0,w,c
  8508   000554  5041               	movf	(___strtoxll@a+1)^0,w,c
  8509   000556  5838               	subwfb	(___strtoxll@limit+1)^0,w,c
  8510   000558  5042               	movf	(___strtoxll@a+2)^0,w,c
  8511   00055A  5839               	subwfb	(___strtoxll@limit+2)^0,w,c
  8512   00055C  5043               	movf	(___strtoxll@a+3)^0,w,c
  8513   00055E  583A               	subwfb	(___strtoxll@limit+3)^0,w,c
  8514   000560  5044               	movf	(___strtoxll@a+4)^0,w,c
  8515   000562  583B               	subwfb	(___strtoxll@limit+4)^0,w,c
  8516   000564  5045               	movf	(___strtoxll@a+5)^0,w,c
  8517   000566  583C               	subwfb	(___strtoxll@limit+5)^0,w,c
  8518   000568  5046               	movf	(___strtoxll@a+6)^0,w,c
  8519   00056A  583D               	subwfb	(___strtoxll@limit+6)^0,w,c
  8520   00056C  5047               	movf	(___strtoxll@a+7)^0,w,c
  8521   00056E  583E               	subwfb	(___strtoxll@limit+7)^0,w,c
  8522   000570  B0D8               	btfsc	status,0,c
  8523   000572  EFBD  F002         	goto	u6251
  8524   000576  EFBF  F002         	goto	u6250
  8525   00057A                     u6251:
  8526   00057A  EFD5  F002         	goto	l5558
  8527   00057E                     u6250:
  8528   00057E                     l1470:
  8529   00057E  C037  F040         	movff	___strtoxll@limit,___strtoxll@a
  8530   000582  C038  F041         	movff	___strtoxll@limit+1,___strtoxll@a+1
  8531   000586  C039  F042         	movff	___strtoxll@limit+2,___strtoxll@a+2
  8532   00058A  C03A  F043         	movff	___strtoxll@limit+3,___strtoxll@a+3
  8533   00058E  C03B  F044         	movff	___strtoxll@limit+4,___strtoxll@a+4
  8534   000592  C03C  F045         	movff	___strtoxll@limit+5,___strtoxll@a+5
  8535   000596  C03D  F046         	movff	___strtoxll@limit+6,___strtoxll@a+6
  8536   00059A  C03E  F047         	movff	___strtoxll@limit+7,___strtoxll@a+7
  8537   00059E  0E00               	movlw	0
  8538   0005A0  0100               	movlb	0	; () banked
  8539   0005A2  6FBE               	movwf	(_errno+1)& (0+255),b
  8540   0005A4  0E22               	movlw	34
  8541   0005A6  6FBD               	movwf	_errno& (0+255),b
  8542   0005A8                     
  8543                           ; BSR set to: 0
  8544   0005A8  823F               	bsf	___strtoxll@flags^0,1,c
  8545   0005AA                     l5558:
  8546   0005AA  4A48               	infsnz	___strtoxll@cp^0,f,c
  8547   0005AC  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  8548   0005AE  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8549   0005B2  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8550   0005B6  50DF               	movf	indf2,w,c
  8551   0005B8  6E4A               	movwf	___strtoxll@c^0,c
  8552   0005BA  843F               	bsf	___strtoxll@flags^0,2,c
  8553   0005BC  EFDE  F001         	goto	l1456
  8554   0005C0                     l5562:
  8555   0005C0  503F               	movf	___strtoxll@flags^0,w,c
  8556   0005C2  0B03               	andlw	3
  8557   0005C4  06E8               	decf	wreg,f,c
  8558   0005C6  A4D8               	btfss	status,2,c
  8559   0005C8  EFE8  F002         	goto	u6261
  8560   0005CC  EFEA  F002         	goto	u6260
  8561   0005D0                     u6261:
  8562   0005D0  EFFA  F002         	goto	l5566
  8563   0005D4                     u6260:
  8564   0005D4  1E47               	comf	(___strtoxll@a+7)^0,f,c
  8565   0005D6  1E46               	comf	(___strtoxll@a+6)^0,f,c
  8566   0005D8  1E45               	comf	(___strtoxll@a+5)^0,f,c
  8567   0005DA  1E44               	comf	(___strtoxll@a+4)^0,f,c
  8568   0005DC  1E43               	comf	(___strtoxll@a+3)^0,f,c
  8569   0005DE  1E42               	comf	(___strtoxll@a+2)^0,f,c
  8570   0005E0  1E41               	comf	(___strtoxll@a+1)^0,f,c
  8571   0005E2  6C40               	negf	___strtoxll@a^0,c
  8572   0005E4  0E00               	movlw	0
  8573   0005E6  2241               	addwfc	(___strtoxll@a+1)^0,f,c
  8574   0005E8  2242               	addwfc	(___strtoxll@a+2)^0,f,c
  8575   0005EA  2243               	addwfc	(___strtoxll@a+3)^0,f,c
  8576   0005EC  2244               	addwfc	(___strtoxll@a+4)^0,f,c
  8577   0005EE  2245               	addwfc	(___strtoxll@a+5)^0,f,c
  8578   0005F0  2246               	addwfc	(___strtoxll@a+6)^0,f,c
  8579   0005F2  2247               	addwfc	(___strtoxll@a+7)^0,f,c
  8580   0005F4                     l5566:
  8581   0005F4  501D               	movf	___strtoxll@endptr^0,w,c
  8582   0005F6  B4D8               	btfsc	status,2,c
  8583   0005F8  EF00  F003         	goto	u6271
  8584   0005FC  EF02  F003         	goto	u6270
  8585   000600                     u6271:
  8586   000600  EF14  F003         	goto	l5574
  8587   000604                     u6270:
  8588   000604  B43F               	btfsc	___strtoxll@flags^0,2,c
  8589   000606  EF07  F003         	goto	u6281
  8590   00060A  EF09  F003         	goto	u6280
  8591   00060E                     u6281:
  8592   00060E  EF0D  F003         	goto	l5572
  8593   000612                     u6280:
  8594   000612  C01B  F048         	movff	___strtoxll@s,___strtoxll@cp
  8595   000616  C01C  F049         	movff	___strtoxll@s+1,___strtoxll@cp+1
  8596   00061A                     l5572:
  8597   00061A  501D               	movf	___strtoxll@endptr^0,w,c
  8598   00061C  6ED9               	movwf	fsr2l,c
  8599   00061E  6ADA               	clrf	fsr2h,c
  8600   000620  C048  FFDE         	movff	___strtoxll@cp,postinc2
  8601   000624  C049  FFDD         	movff	___strtoxll@cp+1,postdec2
  8602   000628                     l5574:
  8603   000628  C040  F01B         	movff	___strtoxll@a,?___strtoxll
  8604   00062C  C041  F01C         	movff	___strtoxll@a+1,?___strtoxll+1
  8605   000630  C042  F01D         	movff	___strtoxll@a+2,?___strtoxll+2
  8606   000634  C043  F01E         	movff	___strtoxll@a+3,?___strtoxll+3
  8607   000638  C044  F01F         	movff	___strtoxll@a+4,?___strtoxll+4
  8608   00063C  C045  F020         	movff	___strtoxll@a+5,?___strtoxll+5
  8609   000640  C046  F021         	movff	___strtoxll@a+6,?___strtoxll+6
  8610   000644  C047  F022         	movff	___strtoxll@a+7,?___strtoxll+7
  8611   000648  0012               	return		;funcret
  8612   00064A                     __end_of___strtoxll:
  8613                           	callstack 0
  8614                           
  8615 ;; *************** function ___omul *****************
  8616 ;; Defined at:
  8617 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul64.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  multiplier      8    2[COMRAM] unsigned long long 
  8620 ;;  multiplicand    8   10[COMRAM] unsigned long long 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  product         8   18[COMRAM] unsigned long long 
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  8    2[COMRAM] unsigned long long 
  8625 ;; Registers used:
  8626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8632 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8633 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8635 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8636 ;;Total ram usage:       24 bytes
  8637 ;; Hardware stack levels used: 1
  8638 ;; Hardware stack levels required when called: 1
  8639 ;; This function calls:
  8640 ;;		Nothing
  8641 ;; This function is called by:
  8642 ;;		___strtoxll
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text31
  8647   002C06                     __ptext31:
  8648                           	callstack 0
  8649   002C06                     ___omul:
  8650                           	callstack 22
  8651   002C06  EE20  F013         	lfsr	2,___omul@product
  8652   002C0A  0E07               	movlw	7
  8653   002C0C                     u5811:
  8654   002C0C  6ADE               	clrf	postinc2,c
  8655   002C0E  06E8               	decf	wreg,f,c
  8656   002C10  E2FD               	bc	u5811
  8657   002C12                     l5392:
  8658   002C12  A003               	btfss	___omul@multiplier^0,0,c
  8659   002C14  EF0E  F016         	goto	u5821
  8660   002C18  EF10  F016         	goto	u5820
  8661   002C1C                     u5821:
  8662   002C1C  EF20  F016         	goto	l5396
  8663   002C20                     u5820:
  8664   002C20  500B               	movf	___omul@multiplicand^0,w,c
  8665   002C22  2613               	addwf	___omul@product^0,f,c
  8666   002C24  500C               	movf	(___omul@multiplicand+1)^0,w,c
  8667   002C26  2214               	addwfc	(___omul@product+1)^0,f,c
  8668   002C28  500D               	movf	(___omul@multiplicand+2)^0,w,c
  8669   002C2A  2215               	addwfc	(___omul@product+2)^0,f,c
  8670   002C2C  500E               	movf	(___omul@multiplicand+3)^0,w,c
  8671   002C2E  2216               	addwfc	(___omul@product+3)^0,f,c
  8672   002C30  500F               	movf	(___omul@multiplicand+4)^0,w,c
  8673   002C32  2217               	addwfc	(___omul@product+4)^0,f,c
  8674   002C34  5010               	movf	(___omul@multiplicand+5)^0,w,c
  8675   002C36  2218               	addwfc	(___omul@product+5)^0,f,c
  8676   002C38  5011               	movf	(___omul@multiplicand+6)^0,w,c
  8677   002C3A  2219               	addwfc	(___omul@product+6)^0,f,c
  8678   002C3C  5012               	movf	(___omul@multiplicand+7)^0,w,c
  8679   002C3E  221A               	addwfc	(___omul@product+7)^0,f,c
  8680   002C40                     l5396:
  8681   002C40  90D8               	bcf	status,0,c
  8682   002C42  360B               	rlcf	___omul@multiplicand^0,f,c
  8683   002C44  360C               	rlcf	(___omul@multiplicand+1)^0,f,c
  8684   002C46  360D               	rlcf	(___omul@multiplicand+2)^0,f,c
  8685   002C48  360E               	rlcf	(___omul@multiplicand+3)^0,f,c
  8686   002C4A  360F               	rlcf	(___omul@multiplicand+4)^0,f,c
  8687   002C4C  3610               	rlcf	(___omul@multiplicand+5)^0,f,c
  8688   002C4E  3611               	rlcf	(___omul@multiplicand+6)^0,f,c
  8689   002C50  3612               	rlcf	(___omul@multiplicand+7)^0,f,c
  8690   002C52  90D8               	bcf	status,0,c
  8691   002C54  320A               	rrcf	(___omul@multiplier+7)^0,f,c
  8692   002C56  3209               	rrcf	(___omul@multiplier+6)^0,f,c
  8693   002C58  3208               	rrcf	(___omul@multiplier+5)^0,f,c
  8694   002C5A  3207               	rrcf	(___omul@multiplier+4)^0,f,c
  8695   002C5C  3206               	rrcf	(___omul@multiplier+3)^0,f,c
  8696   002C5E  3205               	rrcf	(___omul@multiplier+2)^0,f,c
  8697   002C60  3204               	rrcf	(___omul@multiplier+1)^0,f,c
  8698   002C62  3203               	rrcf	___omul@multiplier^0,f,c
  8699   002C64  5003               	movf	___omul@multiplier^0,w,c
  8700   002C66  1004               	iorwf	(___omul@multiplier+1)^0,w,c
  8701   002C68  1005               	iorwf	(___omul@multiplier+2)^0,w,c
  8702   002C6A  1006               	iorwf	(___omul@multiplier+3)^0,w,c
  8703   002C6C  1007               	iorwf	(___omul@multiplier+4)^0,w,c
  8704   002C6E  1008               	iorwf	(___omul@multiplier+5)^0,w,c
  8705   002C70  1009               	iorwf	(___omul@multiplier+6)^0,w,c
  8706   002C72  100A               	iorwf	(___omul@multiplier+7)^0,w,c
  8707   002C74  A4D8               	btfss	status,2,c
  8708   002C76  EF3F  F016         	goto	u5831
  8709   002C7A  EF41  F016         	goto	u5830
  8710   002C7E                     u5831:
  8711   002C7E  EF09  F016         	goto	l5392
  8712   002C82                     u5830:
  8713   002C82  C013  F003         	movff	___omul@product,?___omul
  8714   002C86  C014  F004         	movff	___omul@product+1,?___omul+1
  8715   002C8A  C015  F005         	movff	___omul@product+2,?___omul+2
  8716   002C8E  C016  F006         	movff	___omul@product+3,?___omul+3
  8717   002C92  C017  F007         	movff	___omul@product+4,?___omul+4
  8718   002C96  C018  F008         	movff	___omul@product+5,?___omul+5
  8719   002C9A  C019  F009         	movff	___omul@product+6,?___omul+6
  8720   002C9E  C01A  F00A         	movff	___omul@product+7,?___omul+7
  8721   002CA2  0012               	return		;funcret
  8722   002CA4                     __end_of___omul:
  8723                           	callstack 0
  8724                           
  8725 ;; *************** function _decode_dtc *****************
  8726 ;; Defined at:
  8727 ;;		line 661 in file "OBCII_PIC18F46K22.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  b1              2   77[COMRAM] unsigned int 
  8730 ;;  b2              2   79[COMRAM] unsigned int 
  8731 ;;  dtc             2   81[COMRAM] PTR unsigned char 
  8732 ;;		 -> dtc_codes(60), 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  type            1   88[COMRAM] unsigned char 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1    wreg      void 
  8737 ;; Registers used:
  8738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8744 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8746 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8747 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8748 ;;Total ram usage:       12 bytes
  8749 ;; Hardware stack levels used: 1
  8750 ;; Hardware stack levels required when called: 9
  8751 ;; This function calls:
  8752 ;;		_sprintf
  8753 ;; This function is called by:
  8754 ;;		_diagnostic_trouble_codes
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text32
  8759   0026BC                     __ptext32:
  8760                           	callstack 0
  8761   0026BC                     _decode_dtc:
  8762                           	callstack 19
  8763   0026BC                     
  8764                           ;OBCII_PIC18F46K22.c: 662:     char type;;OBCII_PIC18F46K22.c: 664:     switch ((b1 & 0x
      +                          C0) >> 6) {
  8765   0026BC  EF74  F013         	goto	l4592
  8766   0026C0                     l4580:
  8767   0026C0  0E50               	movlw	80
  8768   0026C2  6E59               	movwf	decode_dtc@type^0,c
  8769   0026C4  EF9E  F013         	goto	l4594
  8770   0026C8                     l4582:
  8771   0026C8  0E43               	movlw	67
  8772   0026CA  6E59               	movwf	decode_dtc@type^0,c
  8773   0026CC  EF9E  F013         	goto	l4594
  8774   0026D0                     l4584:
  8775   0026D0  0E42               	movlw	66
  8776   0026D2  6E59               	movwf	decode_dtc@type^0,c
  8777   0026D4  EF9E  F013         	goto	l4594
  8778   0026D8                     l4586:
  8779   0026D8  0E55               	movlw	85
  8780   0026DA  6E59               	movwf	decode_dtc@type^0,c
  8781   0026DC  EF9E  F013         	goto	l4594
  8782   0026E0                     l4588:
  8783   0026E0  0E3F               	movlw	63
  8784   0026E2  6E59               	movwf	decode_dtc@type^0,c
  8785   0026E4  EF9E  F013         	goto	l4594
  8786   0026E8                     l4592:
  8787   0026E8  C04E  F054         	movff	decode_dtc@b1,??_decode_dtc
  8788   0026EC  C04F  F055         	movff	decode_dtc@b1+1,??_decode_dtc+1
  8789   0026F0  0E06               	movlw	6
  8790   0026F2  6E56               	movwf	(??_decode_dtc+2)^0,c
  8791   0026F4                     u4945:
  8792   0026F4  90D8               	bcf	status,0,c
  8793   0026F6  3255               	rrcf	(??_decode_dtc+1)^0,f,c
  8794   0026F8  3254               	rrcf	??_decode_dtc^0,f,c
  8795   0026FA  2E56               	decfsz	(??_decode_dtc+2)^0,f,c
  8796   0026FC  EF7A  F013         	goto	u4945
  8797   002700  0E03               	movlw	3
  8798   002702  1654               	andwf	??_decode_dtc^0,f,c
  8799   002704  0E00               	movlw	0
  8800   002706  1655               	andwf	(??_decode_dtc+1)^0,f,c
  8801                           
  8802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8803                           ; Switch size 1, requested type "simple"
  8804                           ; Number of cases is 1, Range of values is 0 to 0
  8805                           ; switch strategies available:
  8806                           ; Name         Instructions Cycles
  8807                           ; simple_byte            4     3 (average)
  8808                           ;	Chosen strategy is simple_byte
  8809   002708  5055               	movf	(??_decode_dtc+1)^0,w,c
  8810   00270A  0A00               	xorlw	0	; case 0
  8811   00270C  B4D8               	btfsc	status,2,c
  8812   00270E  EF8B  F013         	goto	l6080
  8813   002712  EF70  F013         	goto	l4588
  8814   002716                     l6080:
  8815                           
  8816                           ; Switch size 1, requested type "simple"
  8817                           ; Number of cases is 4, Range of values is 0 to 3
  8818                           ; switch strategies available:
  8819                           ; Name         Instructions Cycles
  8820                           ; simple_byte           13     7 (average)
  8821                           ;	Chosen strategy is simple_byte
  8822   002716  5054               	movf	??_decode_dtc^0,w,c
  8823   002718  0A00               	xorlw	0	; case 0
  8824   00271A  B4D8               	btfsc	status,2,c
  8825   00271C  EF60  F013         	goto	l4580
  8826   002720  0A01               	xorlw	1	; case 1
  8827   002722  B4D8               	btfsc	status,2,c
  8828   002724  EF64  F013         	goto	l4582
  8829   002728  0A03               	xorlw	3	; case 2
  8830   00272A  B4D8               	btfsc	status,2,c
  8831   00272C  EF68  F013         	goto	l4584
  8832   002730  0A01               	xorlw	1	; case 3
  8833   002732  B4D8               	btfsc	status,2,c
  8834   002734  EF6C  F013         	goto	l4586
  8835   002738  EF70  F013         	goto	l4588
  8836   00273C                     l4594:
  8837                           
  8838                           ;OBCII_PIC18F46K22.c: 672:     sprintf(dtc, "%c%01X%02X", type, (b1 & 0x3F) >> 4, ((b1 &
      +                           0x0F) << 8 | b2));
  8839   00273C  C052  F038         	movff	decode_dtc@dtc,sprintf@s
  8840   002740  C053  F039         	movff	decode_dtc@dtc+1,sprintf@s+1
  8841   002744  0E93               	movlw	low STR_36
  8842   002746  6E3A               	movwf	sprintf@fmt^0,c
  8843   002748  0EFF               	movlw	high STR_36
  8844   00274A  6E3B               	movwf	(sprintf@fmt+1)^0,c
  8845   00274C  C059  F03C         	movff	decode_dtc@type,?_sprintf+4
  8846   002750  6A3D               	clrf	(?_sprintf+5)^0,c
  8847   002752  C04E  F054         	movff	decode_dtc@b1,??_decode_dtc
  8848   002756  C04F  F055         	movff	decode_dtc@b1+1,??_decode_dtc+1
  8849   00275A  0E04               	movlw	4
  8850   00275C  6E56               	movwf	(??_decode_dtc+2)^0,c
  8851   00275E                     u4955:
  8852   00275E  90D8               	bcf	status,0,c
  8853   002760  3255               	rrcf	(??_decode_dtc+1)^0,f,c
  8854   002762  3254               	rrcf	??_decode_dtc^0,f,c
  8855   002764  2E56               	decfsz	(??_decode_dtc+2)^0,f,c
  8856   002766  EFAF  F013         	goto	u4955
  8857   00276A  0E03               	movlw	3
  8858   00276C  1454               	andwf	??_decode_dtc^0,w,c
  8859   00276E  6E3E               	movwf	(?_sprintf+6)^0,c
  8860   002770  6A3F               	clrf	(?_sprintf+7)^0,c
  8861   002772  0E0F               	movlw	15
  8862   002774  144E               	andwf	decode_dtc@b1^0,w,c
  8863   002776  6E57               	movwf	(??_decode_dtc+3)^0,c
  8864   002778  0E00               	movlw	0
  8865   00277A  144F               	andwf	(decode_dtc@b1+1)^0,w,c
  8866   00277C  6E58               	movwf	(??_decode_dtc+4)^0,c
  8867   00277E  C057  F058         	movff	??_decode_dtc+3,??_decode_dtc+4
  8868   002782  6A57               	clrf	(??_decode_dtc+3)^0,c
  8869   002784  5050               	movf	decode_dtc@b2^0,w,c
  8870   002786  1057               	iorwf	(??_decode_dtc+3)^0,w,c
  8871   002788  6E40               	movwf	(?_sprintf+8)^0,c
  8872   00278A  5051               	movf	(decode_dtc@b2+1)^0,w,c
  8873   00278C  1058               	iorwf	(??_decode_dtc+4)^0,w,c
  8874   00278E  6E41               	movwf	(?_sprintf+9)^0,c
  8875   002790  EC3B  F01A         	call	_sprintf	;wreg free
  8876   002794  0012               	return		;funcret
  8877   002796                     __end_of_decode_dtc:
  8878                           	callstack 0
  8879                           
  8880 ;; *************** function _sprintf *****************
  8881 ;; Defined at:
  8882 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  s               2   55[COMRAM] PTR unsigned char 
  8885 ;;		 -> dtc_codes(60), air_intake_string(16), rpm_string(16), 
  8886 ;;  fmt             2   57[COMRAM] PTR const unsigned char 
  8887 ;;		 -> STR_36(11), STR_26(3), STR_17(3), 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  f              11   66[COMRAM] struct _IO_FILE
  8890 ;;  ret             2    0        int 
  8891 ;;  ap              1   65[COMRAM] PTR void [1]
  8892 ;;		 -> ?_sprintf(2), 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  2   55[COMRAM] int 
  8895 ;; Registers used:
  8896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8902 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8905 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8906 ;;Total ram usage:       22 bytes
  8907 ;; Hardware stack levels used: 1
  8908 ;; Hardware stack levels required when called: 8
  8909 ;; This function calls:
  8910 ;;		_vfprintf
  8911 ;; This function is called by:
  8912 ;;		_print_RPM
  8913 ;;		_print_AI_Temp
  8914 ;;		_decode_dtc
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           	psect	text33
  8919   003476                     __ptext33:
  8920                           	callstack 0
  8921   003476                     _sprintf:
  8922                           	callstack 19
  8923   003476  0E3C               	movlw	low (?_sprintf+4)
  8924   003478  6E42               	movwf	sprintf@ap^0,c
  8925   00347A  C038  F043         	movff	sprintf@s,sprintf@f
  8926   00347E  C039  F044         	movff	sprintf@s+1,sprintf@f+1
  8927   003482  0E00               	movlw	0
  8928   003484  6E46               	movwf	(sprintf@f+3)^0,c
  8929   003486  0E00               	movlw	0
  8930   003488  6E45               	movwf	(sprintf@f+2)^0,c
  8931   00348A  0E00               	movlw	0
  8932   00348C  6E4D               	movwf	(sprintf@f+10)^0,c
  8933   00348E  0E00               	movlw	0
  8934   003490  6E4C               	movwf	(sprintf@f+9)^0,c
  8935   003492  0E43               	movlw	low sprintf@f
  8936   003494  6E32               	movwf	vfprintf@fp^0,c
  8937   003496  C03A  F033         	movff	sprintf@fmt,vfprintf@fmt
  8938   00349A  C03B  F034         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8939   00349E  0E42               	movlw	low sprintf@ap
  8940   0034A0  6E35               	movwf	vfprintf@ap^0,c
  8941   0034A2  EC1A  F01A         	call	_vfprintf	;wreg free
  8942   0034A6  5045               	movf	(sprintf@f+2)^0,w,c
  8943   0034A8  2438               	addwf	sprintf@s^0,w,c
  8944   0034AA  6ED9               	movwf	fsr2l,c
  8945   0034AC  5046               	movf	(sprintf@f+3)^0,w,c
  8946   0034AE  2039               	addwfc	(sprintf@s+1)^0,w,c
  8947   0034B0  6EDA               	movwf	fsr2h,c
  8948   0034B2  6ADF               	clrf	indf2,c
  8949   0034B4  0012               	return		;funcret
  8950   0034B6                     __end_of_sprintf:
  8951                           	callstack 0
  8952                           
  8953 ;; *************** function _vfprintf *****************
  8954 ;; Defined at:
  8955 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;  fp              1   49[COMRAM] PTR struct _IO_FILE
  8958 ;;		 -> sprintf@f(11), 
  8959 ;;  fmt             2   50[COMRAM] PTR const unsigned char 
  8960 ;;		 -> STR_36(11), STR_26(3), STR_17(3), 
  8961 ;;  ap              1   52[COMRAM] PTR PTR void 
  8962 ;;		 -> sprintf@ap(1), 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  cfmt            2   53[COMRAM] PTR unsigned char 
  8965 ;;		 -> STR_36(11), STR_26(3), STR_17(3), 
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  2   49[COMRAM] int 
  8968 ;; Registers used:
  8969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8978 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8979 ;;Total ram usage:        6 bytes
  8980 ;; Hardware stack levels used: 1
  8981 ;; Hardware stack levels required when called: 7
  8982 ;; This function calls:
  8983 ;;		_vfpfcnvrt
  8984 ;; This function is called by:
  8985 ;;		_sprintf
  8986 ;; This function uses a non-reentrant model
  8987 ;;
  8988                           
  8989                           	psect	text34
  8990   003434                     __ptext34:
  8991                           	callstack 0
  8992   003434                     _vfprintf:
  8993                           	callstack 19
  8994   003434  C033  F036         	movff	vfprintf@fmt,vfprintf@cfmt
  8995   003438  C034  F037         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8996   00343C  EF28  F01A         	goto	l4074
  8997   003440                     l4072:
  8998   003440  C032  F025         	movff	vfprintf@fp,vfpfcnvrt@fp
  8999   003444  0E36               	movlw	low vfprintf@cfmt
  9000   003446  6E26               	movwf	vfpfcnvrt@fmt^0,c
  9001   003448  C035  F027         	movff	vfprintf@ap,vfpfcnvrt@ap
  9002   00344C  ECDA  F00B         	call	_vfpfcnvrt	;wreg free
  9003   003450                     l4074:
  9004   003450  C036  FFF6         	movff	vfprintf@cfmt,tblptrl
  9005   003454  C037  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9006   003458                     	if	0	;tblptru may be non-zero
  9007   003458                     	endif
  9008   003458                     	if	0	;tblptru may be non-zero
  9009   003458                     	endif
  9010   003458  0008               	tblrd		*
  9011   00345A  50F5               	movf	tablat,w,c
  9012   00345C  0900               	iorlw	0
  9013   00345E  A4D8               	btfss	status,2,c
  9014   003460  EF34  F01A         	goto	u4171
  9015   003464  EF36  F01A         	goto	u4170
  9016   003468                     u4171:
  9017   003468  EF20  F01A         	goto	l4072
  9018   00346C                     u4170:
  9019   00346C  0E00               	movlw	0
  9020   00346E  6E33               	movwf	(?_vfprintf+1)^0,c
  9021   003470  0E00               	movlw	0
  9022   003472  6E32               	movwf	?_vfprintf^0,c
  9023   003474  0012               	return		;funcret
  9024   003476                     __end_of_vfprintf:
  9025                           	callstack 0
  9026                           
  9027 ;; *************** function _vfpfcnvrt *****************
  9028 ;; Defined at:
  9029 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  fp              1   36[COMRAM] PTR struct _IO_FILE
  9032 ;;		 -> sprintf@f(11), 
  9033 ;;  fmt             1   37[COMRAM] PTR PTR unsigned char 
  9034 ;;		 -> vfprintf@cfmt(2), 
  9035 ;;  ap              1   38[COMRAM] PTR PTR void 
  9036 ;;		 -> sprintf@ap(1), 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  convarg         4   43[COMRAM] struct .
  9039 ;;  cp              2   47[COMRAM] PTR unsigned char 
  9040 ;;		 -> STR_36(11), STR_26(3), STR_17(3), 
  9041 ;;  done            1   42[COMRAM] _Bool 
  9042 ;;  c               1   41[COMRAM] unsigned char 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9052 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9053 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9055 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9056 ;;Total ram usage:       13 bytes
  9057 ;; Hardware stack levels used: 1
  9058 ;; Hardware stack levels required when called: 6
  9059 ;; This function calls:
  9060 ;;		_ctoa
  9061 ;;		_fputc
  9062 ;;		_read_prec_or_width
  9063 ;;		_utoa
  9064 ;;		_xtoa
  9065 ;; This function is called by:
  9066 ;;		_vfprintf
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text35
  9071   0017B4                     __ptext35:
  9072                           	callstack 0
  9073   0017B4                     _vfpfcnvrt:
  9074                           	callstack 19
  9075   0017B4  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9076   0017B6  6ED9               	movwf	fsr2l,c
  9077   0017B8  6ADA               	clrf	fsr2h,c
  9078   0017BA  CFDE FFF6          	movff	postinc2,tblptrl
  9079   0017BE  CFDD FFF7          	movff	postdec2,tblptrh
  9080   0017C2                     	if	0	;tblptru may be non-zero
  9081   0017C2                     	endif
  9082   0017C2                     	if	0	;tblptru may be non-zero
  9083   0017C2                     	endif
  9084   0017C2  0008               	tblrd		*
  9085   0017C4  50F5               	movf	tablat,w,c
  9086   0017C6  0A25               	xorlw	37
  9087   0017C8  A4D8               	btfss	status,2,c
  9088   0017CA  EFE9  F00B         	goto	u3751
  9089   0017CE  EFEB  F00B         	goto	u3750
  9090   0017D2                     u3751:
  9091   0017D2  EFCC  F00C         	goto	l3930
  9092   0017D6                     u3750:
  9093   0017D6  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9094   0017D8  6ED9               	movwf	fsr2l,c
  9095   0017DA  6ADA               	clrf	fsr2h,c
  9096   0017DC  2ADE               	incf	postinc2,f,c
  9097   0017DE  0E00               	movlw	0
  9098   0017E0  22DD               	addwfc	postdec2,f,c
  9099   0017E2  0E00               	movlw	0
  9100   0017E4  0100               	movlb	0	; () banked
  9101   0017E6  6FC0               	movwf	(_width+1)& (0+255),b
  9102   0017E8  0E00               	movlw	0
  9103   0017EA  6FBF               	movwf	_width& (0+255),b
  9104   0017EC  C0BF  F0CF         	movff	_width,_flags
  9105   0017F0                     
  9106                           ; BSR set to: 0
  9107   0017F0  69C1               	setf	_prec& (0+255),b
  9108   0017F2  69C2               	setf	(_prec+1)& (0+255),b
  9109   0017F4                     
  9110                           ; BSR set to: 0
  9111   0017F4  6A2B               	clrf	vfpfcnvrt@done^0,c
  9112   0017F6  EF1A  F00C         	goto	l3886
  9113   0017FA                     l3876:
  9114   0017FA  0100               	movlb	0	; () banked
  9115   0017FC  83CF               	bsf	_flags& (0+255),1,b
  9116   0017FE                     
  9117                           ; BSR set to: 0
  9118   0017FE  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9119   001800  6ED9               	movwf	fsr2l,c
  9120   001802  6ADA               	clrf	fsr2h,c
  9121   001804  2ADE               	incf	postinc2,f,c
  9122   001806  0E00               	movlw	0
  9123   001808  22DD               	addwfc	postdec2,f,c
  9124   00180A  EF1A  F00C         	goto	l3886
  9125   00180E                     l3880:
  9126   00180E  0E01               	movlw	1
  9127   001810  6E2B               	movwf	vfpfcnvrt@done^0,c
  9128   001812  EF1A  F00C         	goto	l3886
  9129   001816                     l3884:
  9130   001816  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9131   001818  6ED9               	movwf	fsr2l,c
  9132   00181A  6ADA               	clrf	fsr2h,c
  9133   00181C  CFDE FFF6          	movff	postinc2,tblptrl
  9134   001820  CFDD FFF7          	movff	postdec2,tblptrh
  9135   001824                     	if	0	;tblptru may be non-zero
  9136   001824                     	endif
  9137   001824                     	if	0	;tblptru may be non-zero
  9138   001824                     	endif
  9139   001824  0008               	tblrd		*
  9140   001826  50F5               	movf	tablat,w,c
  9141                           
  9142                           ; Switch size 1, requested type "simple"
  9143                           ; Number of cases is 1, Range of values is 48 to 48
  9144                           ; switch strategies available:
  9145                           ; Name         Instructions Cycles
  9146                           ; simple_byte            4     3 (average)
  9147                           ;	Chosen strategy is simple_byte
  9148   001828  0A30               	xorlw	48	; case 48
  9149   00182A  B4D8               	btfsc	status,2,c
  9150   00182C  EFFD  F00B         	goto	l3876
  9151   001830  EF07  F00C         	goto	l3880
  9152   001834                     l3886:
  9153   001834  502B               	movf	vfpfcnvrt@done^0,w,c
  9154   001836  B4D8               	btfsc	status,2,c
  9155   001838  EF20  F00C         	goto	u3761
  9156   00183C  EF22  F00C         	goto	u3760
  9157   001840                     u3761:
  9158   001840  EF0B  F00C         	goto	l3884
  9159   001844                     u3760:
  9160   001844  C026  F003         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  9161   001848  C027  F004         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  9162   00184C  ECAD  F015         	call	_read_prec_or_width	;wreg free
  9163   001850  C003  F0BF         	movff	?_read_prec_or_width,_width
  9164   001854  C004  F0C0         	movff	?_read_prec_or_width+1,_width+1
  9165   001858  0100               	movlb	0	; () banked
  9166   00185A  BFC0               	btfsc	(_width+1)& (0+255),7,b
  9167   00185C  EF34  F00C         	goto	u3770
  9168   001860  EF32  F00C         	goto	u3771
  9169   001864                     u3771:
  9170   001864  EF39  F00C         	goto	l3894
  9171   001868                     u3770:
  9172   001868                     
  9173                           ; BSR set to: 0
  9174   001868  81CF               	bsf	_flags& (0+255),0,b
  9175   00186A  6DBF               	negf	_width& (0+255),b
  9176   00186C  1FC0               	comf	(_width+1)& (0+255),f,b
  9177   00186E  B0D8               	btfsc	status,0,c
  9178   001870  2BC0               	incf	(_width+1)& (0+255),f,b
  9179   001872                     l3894:
  9180                           
  9181                           ; BSR set to: 0
  9182   001872  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9183   001874  6ED9               	movwf	fsr2l,c
  9184   001876  6ADA               	clrf	fsr2h,c
  9185   001878  CFDE FFF6          	movff	postinc2,tblptrl
  9186   00187C  CFDD FFF7          	movff	postdec2,tblptrh
  9187   001880                     	if	0	;tblptru may be non-zero
  9188   001880                     	endif
  9189   001880                     	if	0	;tblptru may be non-zero
  9190   001880                     	endif
  9191   001880  0008               	tblrd		*
  9192   001882  50F5               	movf	tablat,w,c
  9193   001884  0A63               	xorlw	99
  9194   001886  A4D8               	btfss	status,2,c
  9195   001888  EF48  F00C         	goto	u3781
  9196   00188C  EF4A  F00C         	goto	u3780
  9197   001890                     u3781:
  9198   001890  EF62  F00C         	goto	l3904
  9199   001894                     u3780:
  9200   001894                     
  9201                           ; BSR set to: 0
  9202   001894  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9203   001896  6ED9               	movwf	fsr2l,c
  9204   001898  6ADA               	clrf	fsr2h,c
  9205   00189A  2ADE               	incf	postinc2,f,c
  9206   00189C  0E00               	movlw	0
  9207   00189E  22DD               	addwfc	postdec2,f,c
  9208   0018A0                     
  9209                           ; BSR set to: 0
  9210   0018A0  5027               	movf	vfpfcnvrt@ap^0,w,c
  9211   0018A2  6ED9               	movwf	fsr2l,c
  9212   0018A4  6ADA               	clrf	fsr2h,c
  9213   0018A6  50DF               	movf	indf2,w,c
  9214   0018A8  2ADF               	incf	indf2,f,c
  9215   0018AA  2ADF               	incf	indf2,f,c
  9216   0018AC  6ED9               	movwf	fsr2l,c
  9217   0018AE  6ADA               	clrf	fsr2h,c
  9218   0018B0  50DF               	movf	indf2,w,c
  9219   0018B2  6E2A               	movwf	vfpfcnvrt@c^0,c
  9220   0018B4                     
  9221                           ; BSR set to: 0
  9222                           ;	Return value of _vfpfcnvrt is never used
  9223   0018B4  C025  F00B         	movff	vfpfcnvrt@fp,ctoa@fp
  9224   0018B8  C02A  F00C         	movff	vfpfcnvrt@c,ctoa@c
  9225   0018BC  ECF0  F014         	call	_ctoa	;wreg free
  9226   0018C0  EFDD  F00C         	goto	l1279
  9227   0018C4                     l3904:
  9228                           
  9229                           ; BSR set to: 0
  9230   0018C4  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9231   0018C6  6ED9               	movwf	fsr2l,c
  9232   0018C8  6ADA               	clrf	fsr2h,c
  9233   0018CA  CFDE F030          	movff	postinc2,vfpfcnvrt@cp
  9234   0018CE  CFDD F031          	movff	postdec2,vfpfcnvrt@cp+1
  9235   0018D2                     
  9236                           ; BSR set to: 0
  9237   0018D2  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9238   0018D6  C031  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9239   0018DA                     	if	0	;tblptru may be non-zero
  9240   0018DA                     	endif
  9241   0018DA                     	if	0	;tblptru may be non-zero
  9242   0018DA                     	endif
  9243   0018DA  0008               	tblrd		*
  9244   0018DC  50F5               	movf	tablat,w,c
  9245   0018DE  0A58               	xorlw	88
  9246   0018E0  B4D8               	btfsc	status,2,c
  9247   0018E2  EF75  F00C         	goto	u3791
  9248   0018E6  EF77  F00C         	goto	u3790
  9249   0018EA                     u3791:
  9250   0018EA  EF85  F00C         	goto	l3910
  9251   0018EE                     u3790:
  9252   0018EE                     
  9253                           ; BSR set to: 0
  9254   0018EE  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9255   0018F2  C031  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9256   0018F6                     	if	0	;tblptru may be non-zero
  9257   0018F6                     	endif
  9258   0018F6                     	if	0	;tblptru may be non-zero
  9259   0018F6                     	endif
  9260   0018F6  0008               	tblrd		*
  9261   0018F8  50F5               	movf	tablat,w,c
  9262   0018FA  0A75               	xorlw	117
  9263   0018FC  A4D8               	btfss	status,2,c
  9264   0018FE  EF83  F00C         	goto	u3801
  9265   001902  EF85  F00C         	goto	u3800
  9266   001906                     u3801:
  9267   001906  EFC4  F00C         	goto	l3926
  9268   00190A                     u3800:
  9269   00190A                     l3910:
  9270                           
  9271                           ; BSR set to: 0
  9272   00190A  5027               	movf	vfpfcnvrt@ap^0,w,c
  9273   00190C  6ED9               	movwf	fsr2l,c
  9274   00190E  6ADA               	clrf	fsr2h,c
  9275   001910  0E02               	movlw	2
  9276   001912  26DF               	addwf	indf2,f,c
  9277   001914  5CDF               	subwf	indf2,w,c
  9278   001916  6ED9               	movwf	fsr2l,c
  9279   001918  6ADA               	clrf	fsr2h,c
  9280   00191A  CFDE F02C          	movff	postinc2,vfpfcnvrt@convarg
  9281   00191E  CFDE F02D          	movff	postinc2,vfpfcnvrt@convarg+1
  9282   001922                     
  9283                           ; BSR set to: 0
  9284   001922  0E01               	movlw	1
  9285   001924  2430               	addwf	vfpfcnvrt@cp^0,w,c
  9286   001926  6E28               	movwf	??_vfpfcnvrt^0,c
  9287   001928  0E00               	movlw	0
  9288   00192A  2031               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  9289   00192C  6E29               	movwf	(??_vfpfcnvrt+1)^0,c
  9290   00192E  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9291   001930  6ED9               	movwf	fsr2l,c
  9292   001932  6ADA               	clrf	fsr2h,c
  9293   001934  C028  FFDE         	movff	??_vfpfcnvrt,postinc2
  9294   001938  C029  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  9295   00193C  EFB4  F00C         	goto	l3924
  9296   001940                     l3914:
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;	Return value of _vfpfcnvrt is never used
  9300   001940  C025  F019         	movff	vfpfcnvrt@fp,utoa@fp
  9301   001944  C02C  F01A         	movff	vfpfcnvrt@convarg,utoa@d
  9302   001948  C02D  F01B         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  9303   00194C  ECEA  F012         	call	_utoa	;wreg free
  9304   001950  EFDD  F00C         	goto	l1279
  9305   001954                     l3918:
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;	Return value of _vfpfcnvrt is never used
  9309   001954  C025  F019         	movff	vfpfcnvrt@fp,xtoa@fp
  9310   001958  C02C  F01A         	movff	vfpfcnvrt@convarg,xtoa@d
  9311   00195C  C02D  F01B         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  9312   001960  EC84  F010         	call	_xtoa	;wreg free
  9313   001964  EFDD  F00C         	goto	l1279
  9314   001968                     l3924:
  9315                           
  9316                           ; BSR set to: 0
  9317   001968  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9318   00196C  C031  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9319   001970                     	if	0	;tblptru may be non-zero
  9320   001970                     	endif
  9321   001970                     	if	0	;tblptru may be non-zero
  9322   001970                     	endif
  9323   001970  0008               	tblrd		*
  9324   001972  50F5               	movf	tablat,w,c
  9325                           
  9326                           ; Switch size 1, requested type "simple"
  9327                           ; Number of cases is 2, Range of values is 88 to 117
  9328                           ; switch strategies available:
  9329                           ; Name         Instructions Cycles
  9330                           ; simple_byte            7     4 (average)
  9331                           ;	Chosen strategy is simple_byte
  9332   001974  0A58               	xorlw	88	; case 88
  9333   001976  B4D8               	btfsc	status,2,c
  9334   001978  EFAA  F00C         	goto	l3918
  9335   00197C  0A2D               	xorlw	45	; case 117
  9336   00197E  B4D8               	btfsc	status,2,c
  9337   001980  EFA0  F00C         	goto	l3914
  9338   001984  EFC4  F00C         	goto	l3926
  9339   001988                     l3926:
  9340   001988  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9341   00198A  6ED9               	movwf	fsr2l,c
  9342   00198C  6ADA               	clrf	fsr2h,c
  9343   00198E  2ADE               	incf	postinc2,f,c
  9344   001990  0E00               	movlw	0
  9345   001992  22DD               	addwfc	postdec2,f,c
  9346   001994  EFDD  F00C         	goto	l1279
  9347   001998                     l3930:
  9348   001998  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9349   00199A  6ED9               	movwf	fsr2l,c
  9350   00199C  6ADA               	clrf	fsr2h,c
  9351   00199E  CFDE FFF6          	movff	postinc2,tblptrl
  9352   0019A2  CFDD FFF7          	movff	postdec2,tblptrh
  9353   0019A6                     	if	0	;tblptru may be non-zero
  9354   0019A6                     	endif
  9355   0019A6                     	if	0	;tblptru may be non-zero
  9356   0019A6                     	endif
  9357   0019A6  0008               	tblrd		*
  9358   0019A8  50F5               	movf	tablat,w,c
  9359   0019AA  6E03               	movwf	fputc@c^0,c
  9360   0019AC  6A04               	clrf	(fputc@c+1)^0,c
  9361   0019AE  C025  F005         	movff	vfpfcnvrt@fp,fputc@fp
  9362   0019B2  EC50  F015         	call	_fputc	;wreg free
  9363   0019B6  EFC4  F00C         	goto	l3926
  9364   0019BA                     l1279:
  9365   0019BA  0012               	return		;funcret
  9366   0019BC                     __end_of_vfpfcnvrt:
  9367                           	callstack 0
  9368                           
  9369 ;; *************** function _xtoa *****************
  9370 ;; Defined at:
  9371 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  9374 ;;		 -> sprintf@f(11), 
  9375 ;;  d               2   25[COMRAM] unsigned int 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;  i               2   34[COMRAM] int 
  9378 ;;  w               2   31[COMRAM] int 
  9379 ;;  c               1   33[COMRAM] unsigned char 
  9380 ;;  p               1   30[COMRAM] _Bool 
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      void 
  9383 ;; Registers used:
  9384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9390 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;Total ram usage:       12 bytes
  9395 ;; Hardware stack levels used: 1
  9396 ;; Hardware stack levels required when called: 5
  9397 ;; This function calls:
  9398 ;;		_pad
  9399 ;; This function is called by:
  9400 ;;		_vfpfcnvrt
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text36
  9405   002108                     __ptext36:
  9406                           	callstack 0
  9407   002108                     _xtoa:
  9408                           	callstack 19
  9409   002108  0E01               	movlw	1
  9410   00210A  6E1F               	movwf	xtoa@p^0,c
  9411   00210C  C0BF  F020         	movff	_width,xtoa@w
  9412   002110  C0C0  F021         	movff	_width+1,xtoa@w+1
  9413   002114  0E00               	movlw	0
  9414   002116  6E24               	movwf	(xtoa@i+1)^0,c
  9415   002118  0E1F               	movlw	31
  9416   00211A  6E23               	movwf	xtoa@i^0,c
  9417   00211C  0101               	movlb	1	; () banked
  9418   00211E  6B7B               	clrf	(_dbuf+31)& (0+255),b
  9419   002120  EFC2  F010         	goto	l3668
  9420   002124                     l3650:
  9421   002124  0623               	decf	xtoa@i^0,f,c
  9422   002126  A0D8               	btfss	status,0,c
  9423   002128  0624               	decf	(xtoa@i+1)^0,f,c
  9424   00212A  501A               	movf	xtoa@d^0,w,c
  9425   00212C  0B0F               	andlw	15
  9426   00212E  6E22               	movwf	xtoa@c^0,c
  9427   002130  0E0A               	movlw	10
  9428   002132  6022               	cpfslt	xtoa@c^0,c
  9429   002134  EF9E  F010         	goto	u3231
  9430   002138  EFA0  F010         	goto	u3230
  9431   00213C                     u3231:
  9432   00213C  EFA4  F010         	goto	l3658
  9433   002140                     u3230:
  9434   002140  0E30               	movlw	48
  9435   002142  2622               	addwf	xtoa@c^0,f,c
  9436   002144  EFA6  F010         	goto	l3660
  9437   002148                     l3658:
  9438   002148  0E37               	movlw	55
  9439   00214A  2622               	addwf	xtoa@c^0,f,c
  9440   00214C                     l3660:
  9441   00214C  0E5C               	movlw	low _dbuf
  9442   00214E  2423               	addwf	xtoa@i^0,w,c
  9443   002150  6ED9               	movwf	fsr2l,c
  9444   002152  0E01               	movlw	high _dbuf
  9445   002154  2024               	addwfc	(xtoa@i+1)^0,w,c
  9446   002156  6EDA               	movwf	fsr2h,c
  9447   002158  C022  FFDF         	movff	xtoa@c,indf2
  9448   00215C  6A1F               	clrf	xtoa@p^0,c
  9449   00215E  0620               	decf	xtoa@w^0,f,c
  9450   002160  A0D8               	btfss	status,0,c
  9451   002162  0621               	decf	(xtoa@w+1)^0,f,c
  9452   002164  C01A  F01C         	movff	xtoa@d,??_xtoa
  9453   002168  C01B  F01D         	movff	xtoa@d+1,??_xtoa+1
  9454   00216C  0E04               	movlw	4
  9455   00216E  6E1E               	movwf	(??_xtoa+2)^0,c
  9456   002170                     u3245:
  9457   002170  90D8               	bcf	status,0,c
  9458   002172  321D               	rrcf	(??_xtoa+1)^0,f,c
  9459   002174  321C               	rrcf	??_xtoa^0,f,c
  9460   002176  2E1E               	decfsz	(??_xtoa+2)^0,f,c
  9461   002178  EFB8  F010         	goto	u3245
  9462   00217C  C01C  F01A         	movff	??_xtoa,xtoa@d
  9463   002180  C01D  F01B         	movff	??_xtoa+1,xtoa@d+1
  9464   002184                     l3668:
  9465   002184  BE24               	btfsc	(xtoa@i+1)^0,7,c
  9466   002186  EFCE  F010         	goto	u3251
  9467   00218A  5024               	movf	(xtoa@i+1)^0,w,c
  9468   00218C  E109               	bnz	u3250
  9469   00218E  0E02               	movlw	2
  9470   002190  5C23               	subwf	xtoa@i^0,w,c
  9471   002192  A0D8               	btfss	status,0,c
  9472   002194  EFCE  F010         	goto	u3251
  9473   002198  EFD0  F010         	goto	u3250
  9474   00219C                     u3251:
  9475   00219C  EFF6  F010         	goto	l3678
  9476   0021A0                     u3250:
  9477   0021A0  501A               	movf	xtoa@d^0,w,c
  9478   0021A2  101B               	iorwf	(xtoa@d+1)^0,w,c
  9479   0021A4  A4D8               	btfss	status,2,c
  9480   0021A6  EFD7  F010         	goto	u3261
  9481   0021AA  EFD9  F010         	goto	u3260
  9482   0021AE                     u3261:
  9483   0021AE  EF92  F010         	goto	l3650
  9484   0021B2                     u3260:
  9485   0021B2  501F               	movf	xtoa@p^0,w,c
  9486   0021B4  A4D8               	btfss	status,2,c
  9487   0021B6  EFDF  F010         	goto	u3271
  9488   0021BA  EFE1  F010         	goto	u3270
  9489   0021BE                     u3271:
  9490   0021BE  EF92  F010         	goto	l3650
  9491   0021C2                     u3270:
  9492   0021C2  BE21               	btfsc	(xtoa@w+1)^0,7,c
  9493   0021C4  EFEC  F010         	goto	u3281
  9494   0021C8  5021               	movf	(xtoa@w+1)^0,w,c
  9495   0021CA  E108               	bnz	u3280
  9496   0021CC  0420               	decf	xtoa@w^0,w,c
  9497   0021CE  A0D8               	btfss	status,0,c
  9498   0021D0  EFEC  F010         	goto	u3281
  9499   0021D4  EFEE  F010         	goto	u3280
  9500   0021D8                     u3281:
  9501   0021D8  EFF6  F010         	goto	l3678
  9502   0021DC                     u3280:
  9503   0021DC  0100               	movlb	0	; () banked
  9504   0021DE  B3CF               	btfsc	_flags& (0+255),1,b
  9505   0021E0  EFF4  F010         	goto	u3291
  9506   0021E4  EFF6  F010         	goto	u3290
  9507   0021E8                     u3291:
  9508   0021E8  EF92  F010         	goto	l3650
  9509   0021EC                     u3290:
  9510   0021EC                     l3678:
  9511   0021EC  C019  F011         	movff	xtoa@fp,pad@fp
  9512   0021F0  0E5C               	movlw	low _dbuf
  9513   0021F2  2423               	addwf	xtoa@i^0,w,c
  9514   0021F4  6E12               	movwf	pad@buf^0,c
  9515   0021F6  0E01               	movlw	high _dbuf
  9516   0021F8  2024               	addwfc	(xtoa@i+1)^0,w,c
  9517   0021FA  6E13               	movwf	(pad@buf+1)^0,c
  9518   0021FC  C020  F014         	movff	xtoa@w,pad@p
  9519   002200  C021  F015         	movff	xtoa@w+1,pad@p+1
  9520   002204  ECA0  F016         	call	_pad	;wreg free
  9521   002208  0012               	return		;funcret
  9522   00220A                     __end_of_xtoa:
  9523                           	callstack 0
  9524                           
  9525 ;; *************** function _utoa *****************
  9526 ;; Defined at:
  9527 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  9530 ;;		 -> sprintf@f(11), 
  9531 ;;  d               2   25[COMRAM] unsigned int 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;  i               2   30[COMRAM] int 
  9534 ;;  w               2   28[COMRAM] int 
  9535 ;;  p               1   27[COMRAM] _Bool 
  9536 ;; Return value:  Size  Location     Type
  9537 ;;                  1    wreg      void 
  9538 ;; Registers used:
  9539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/0
  9542 ;;		On exit  : 0/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9545 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;Total ram usage:        8 bytes
  9550 ;; Hardware stack levels used: 1
  9551 ;; Hardware stack levels required when called: 5
  9552 ;; This function calls:
  9553 ;;		___lwdiv
  9554 ;;		___lwmod
  9555 ;;		_pad
  9556 ;; This function is called by:
  9557 ;;		_vfpfcnvrt
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text37
  9562   0025D4                     __ptext37:
  9563                           	callstack 0
  9564   0025D4                     _utoa:
  9565                           	callstack 19
  9566   0025D4  0E01               	movlw	1
  9567   0025D6  6E1C               	movwf	utoa@p^0,c
  9568   0025D8  C0BF  F01D         	movff	_width,utoa@w
  9569   0025DC  C0C0  F01E         	movff	_width+1,utoa@w+1
  9570   0025E0  0E00               	movlw	0
  9571   0025E2  6E20               	movwf	(utoa@i+1)^0,c
  9572   0025E4  0E1F               	movlw	31
  9573   0025E6  6E1F               	movwf	utoa@i^0,c
  9574   0025E8  0101               	movlb	1	; () banked
  9575   0025EA  6B7B               	clrf	(_dbuf+31)& (0+255),b
  9576   0025EC  EF20  F013         	goto	l3630
  9577   0025F0                     l3620:
  9578   0025F0  061F               	decf	utoa@i^0,f,c
  9579   0025F2  A0D8               	btfss	status,0,c
  9580   0025F4  0620               	decf	(utoa@i+1)^0,f,c
  9581   0025F6  0E5C               	movlw	low _dbuf
  9582   0025F8  241F               	addwf	utoa@i^0,w,c
  9583   0025FA  6ED9               	movwf	fsr2l,c
  9584   0025FC  0E01               	movlw	high _dbuf
  9585   0025FE  2020               	addwfc	(utoa@i+1)^0,w,c
  9586   002600  6EDA               	movwf	fsr2h,c
  9587   002602  C01A  F003         	movff	utoa@d,___lwmod@dividend
  9588   002606  C01B  F004         	movff	utoa@d+1,___lwmod@dividend+1
  9589   00260A  0E00               	movlw	0
  9590   00260C  6E06               	movwf	(___lwmod@divisor+1)^0,c
  9591   00260E  0E0A               	movlw	10
  9592   002610  6E05               	movwf	___lwmod@divisor^0,c
  9593   002612  EC10  F019         	call	___lwmod	;wreg free
  9594   002616  5003               	movf	?___lwmod^0,w,c
  9595   002618  0F30               	addlw	48
  9596   00261A  6EDF               	movwf	indf2,c
  9597   00261C  6A1C               	clrf	utoa@p^0,c
  9598   00261E  061D               	decf	utoa@w^0,f,c
  9599   002620  A0D8               	btfss	status,0,c
  9600   002622  061E               	decf	(utoa@w+1)^0,f,c
  9601   002624  C01A  F003         	movff	utoa@d,___lwdiv@dividend
  9602   002628  C01B  F004         	movff	utoa@d+1,___lwdiv@dividend+1
  9603   00262C  0E00               	movlw	0
  9604   00262E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  9605   002630  0E0A               	movlw	10
  9606   002632  6E05               	movwf	___lwdiv@divisor^0,c
  9607   002634  EC39  F018         	call	___lwdiv	;wreg free
  9608   002638  C003  F01A         	movff	?___lwdiv,utoa@d
  9609   00263C  C004  F01B         	movff	?___lwdiv+1,utoa@d+1
  9610   002640                     l3630:
  9611   002640  501F               	movf	utoa@i^0,w,c
  9612   002642  1020               	iorwf	(utoa@i+1)^0,w,c
  9613   002644  B4D8               	btfsc	status,2,c
  9614   002646  EF27  F013         	goto	u3181
  9615   00264A  EF29  F013         	goto	u3180
  9616   00264E                     u3181:
  9617   00264E  EF4F  F013         	goto	l3640
  9618   002652                     u3180:
  9619   002652  501A               	movf	utoa@d^0,w,c
  9620   002654  101B               	iorwf	(utoa@d+1)^0,w,c
  9621   002656  A4D8               	btfss	status,2,c
  9622   002658  EF30  F013         	goto	u3191
  9623   00265C  EF32  F013         	goto	u3190
  9624   002660                     u3191:
  9625   002660  EFF8  F012         	goto	l3620
  9626   002664                     u3190:
  9627   002664  501C               	movf	utoa@p^0,w,c
  9628   002666  A4D8               	btfss	status,2,c
  9629   002668  EF38  F013         	goto	u3201
  9630   00266C  EF3A  F013         	goto	u3200
  9631   002670                     u3201:
  9632   002670  EFF8  F012         	goto	l3620
  9633   002674                     u3200:
  9634   002674  BE1E               	btfsc	(utoa@w+1)^0,7,c
  9635   002676  EF45  F013         	goto	u3211
  9636   00267A  501E               	movf	(utoa@w+1)^0,w,c
  9637   00267C  E108               	bnz	u3210
  9638   00267E  041D               	decf	utoa@w^0,w,c
  9639   002680  A0D8               	btfss	status,0,c
  9640   002682  EF45  F013         	goto	u3211
  9641   002686  EF47  F013         	goto	u3210
  9642   00268A                     u3211:
  9643   00268A  EF4F  F013         	goto	l3640
  9644   00268E                     u3210:
  9645   00268E  0100               	movlb	0	; () banked
  9646   002690  B3CF               	btfsc	_flags& (0+255),1,b
  9647   002692  EF4D  F013         	goto	u3221
  9648   002696  EF4F  F013         	goto	u3220
  9649   00269A                     u3221:
  9650   00269A  EFF8  F012         	goto	l3620
  9651   00269E                     u3220:
  9652   00269E                     l3640:
  9653   00269E  C019  F011         	movff	utoa@fp,pad@fp
  9654   0026A2  0E5C               	movlw	low _dbuf
  9655   0026A4  241F               	addwf	utoa@i^0,w,c
  9656   0026A6  6E12               	movwf	pad@buf^0,c
  9657   0026A8  0E01               	movlw	high _dbuf
  9658   0026AA  2020               	addwfc	(utoa@i+1)^0,w,c
  9659   0026AC  6E13               	movwf	(pad@buf+1)^0,c
  9660   0026AE  C01D  F014         	movff	utoa@w,pad@p
  9661   0026B2  C01E  F015         	movff	utoa@w+1,pad@p+1
  9662   0026B6  ECA0  F016         	call	_pad	;wreg free
  9663   0026BA  0012               	return		;funcret
  9664   0026BC                     __end_of_utoa:
  9665                           	callstack 0
  9666                           
  9667 ;; *************** function _pad *****************
  9668 ;; Defined at:
  9669 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  9672 ;;		 -> sprintf@f(11), 
  9673 ;;  buf             2   17[COMRAM] PTR unsigned char 
  9674 ;;		 -> dbuf(32), 
  9675 ;;  p               2   19[COMRAM] int 
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;  i               2   22[COMRAM] int 
  9678 ;; Return value:  Size  Location     Type
  9679 ;;                  1    wreg      void 
  9680 ;; Registers used:
  9681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9682 ;; Tracked objects:
  9683 ;;		On entry : 0/0
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9687 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9691 ;;Total ram usage:        8 bytes
  9692 ;; Hardware stack levels used: 1
  9693 ;; Hardware stack levels required when called: 4
  9694 ;; This function calls:
  9695 ;;		_fputc
  9696 ;;		_fputs
  9697 ;; This function is called by:
  9698 ;;		_utoa
  9699 ;;		_xtoa
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           	psect	text38
  9704   002D40                     __ptext38:
  9705                           	callstack 0
  9706   002D40                     _pad:
  9707                           	callstack 19
  9708   002D40  0100               	movlb	0	; () banked
  9709   002D42  A1CF               	btfss	_flags& (0+255),0,b
  9710   002D44  EFA6  F016         	goto	u3011
  9711   002D48  EFA8  F016         	goto	u3010
  9712   002D4C                     u3011:
  9713   002D4C  EFB0  F016         	goto	l3532
  9714   002D50                     u3010:
  9715   002D50                     
  9716                           ; BSR set to: 0
  9717   002D50  C012  F00B         	movff	pad@buf,fputs@s
  9718   002D54  C013  F00C         	movff	pad@buf+1,fputs@s+1
  9719   002D58  C011  F00D         	movff	pad@fp,fputs@fp
  9720   002D5C  EC5B  F01A         	call	_fputs	;wreg free
  9721   002D60                     l3532:
  9722   002D60  BE15               	btfsc	(pad@p+1)^0,7,c
  9723   002D62  EFB7  F016         	goto	u3020
  9724   002D66  EFB5  F016         	goto	u3021
  9725   002D6A                     u3021:
  9726   002D6A  EFBB  F016         	goto	l1215
  9727   002D6E                     u3020:
  9728   002D6E  0E00               	movlw	0
  9729   002D70  6E15               	movwf	(pad@p+1)^0,c
  9730   002D72  0E00               	movlw	0
  9731   002D74  6E14               	movwf	pad@p^0,c
  9732   002D76                     l1215:
  9733   002D76  0E00               	movlw	0
  9734   002D78  6E18               	movwf	(pad@i+1)^0,c
  9735   002D7A  0E00               	movlw	0
  9736   002D7C  6E17               	movwf	pad@i^0,c
  9737   002D7E  EFCB  F016         	goto	l3540
  9738   002D82                     l3536:
  9739   002D82  0E00               	movlw	0
  9740   002D84  6E04               	movwf	(fputc@c+1)^0,c
  9741   002D86  0E20               	movlw	32
  9742   002D88  6E03               	movwf	fputc@c^0,c
  9743   002D8A  C011  F005         	movff	pad@fp,fputc@fp
  9744   002D8E  EC50  F015         	call	_fputc	;wreg free
  9745   002D92  4A17               	infsnz	pad@i^0,f,c
  9746   002D94  2A18               	incf	(pad@i+1)^0,f,c
  9747   002D96                     l3540:
  9748   002D96  5014               	movf	pad@p^0,w,c
  9749   002D98  5C17               	subwf	pad@i^0,w,c
  9750   002D9A  5018               	movf	(pad@i+1)^0,w,c
  9751   002D9C  0A80               	xorlw	128
  9752   002D9E  6E16               	movwf	??_pad^0,c
  9753   002DA0  5015               	movf	(pad@p+1)^0,w,c
  9754   002DA2  0A80               	xorlw	128
  9755   002DA4  5816               	subwfb	??_pad^0,w,c
  9756   002DA6  A0D8               	btfss	status,0,c
  9757   002DA8  EFD8  F016         	goto	u3031
  9758   002DAC  EFDA  F016         	goto	u3030
  9759   002DB0                     u3031:
  9760   002DB0  EFC1  F016         	goto	l3536
  9761   002DB4                     u3030:
  9762   002DB4  0100               	movlb	0	; () banked
  9763   002DB6  B1CF               	btfsc	_flags& (0+255),0,b
  9764   002DB8  EFE0  F016         	goto	u3041
  9765   002DBC  EFE2  F016         	goto	u3040
  9766   002DC0                     u3041:
  9767   002DC0  EFEA  F016         	goto	l1220
  9768   002DC4                     u3040:
  9769   002DC4                     
  9770                           ; BSR set to: 0
  9771   002DC4  C012  F00B         	movff	pad@buf,fputs@s
  9772   002DC8  C013  F00C         	movff	pad@buf+1,fputs@s+1
  9773   002DCC  C011  F00D         	movff	pad@fp,fputs@fp
  9774   002DD0  EC5B  F01A         	call	_fputs	;wreg free
  9775   002DD4                     l1220:
  9776   002DD4  0012               	return		;funcret
  9777   002DD6                     __end_of_pad:
  9778                           	callstack 0
  9779                           
  9780 ;; *************** function _fputs *****************
  9781 ;; Defined at:
  9782 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9785 ;;		 -> dbuf(32), 
  9786 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  9787 ;;		 -> sprintf@f(11), 
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;  i               2   14[COMRAM] int 
  9790 ;;  c               1   13[COMRAM] unsigned char 
  9791 ;; Return value:  Size  Location     Type
  9792 ;;                  2   10[COMRAM] int 
  9793 ;; Registers used:
  9794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/0
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9800 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;Total ram usage:        6 bytes
  9805 ;; Hardware stack levels used: 1
  9806 ;; Hardware stack levels required when called: 3
  9807 ;; This function calls:
  9808 ;;		_fputc
  9809 ;; This function is called by:
  9810 ;;		_pad
  9811 ;; This function uses a non-reentrant model
  9812 ;;
  9813                           
  9814                           	psect	text39
  9815   0034B6                     __ptext39:
  9816                           	callstack 0
  9817   0034B6                     _fputs:
  9818                           	callstack 19
  9819   0034B6  0E00               	movlw	0
  9820   0034B8  6E10               	movwf	(fputs@i+1)^0,c
  9821   0034BA  0E00               	movlw	0
  9822   0034BC  6E0F               	movwf	fputs@i^0,c
  9823   0034BE  EF6A  F01A         	goto	l3476
  9824   0034C2                     l3472:
  9825   0034C2  C00E  F003         	movff	fputs@c,fputc@c
  9826   0034C6  6A04               	clrf	(fputc@c+1)^0,c
  9827   0034C8  C00D  F005         	movff	fputs@fp,fputc@fp
  9828   0034CC  EC50  F015         	call	_fputc	;wreg free
  9829   0034D0  4A0F               	infsnz	fputs@i^0,f,c
  9830   0034D2  2A10               	incf	(fputs@i+1)^0,f,c
  9831   0034D4                     l3476:
  9832   0034D4  500F               	movf	fputs@i^0,w,c
  9833   0034D6  240B               	addwf	fputs@s^0,w,c
  9834   0034D8  6ED9               	movwf	fsr2l,c
  9835   0034DA  5010               	movf	(fputs@i+1)^0,w,c
  9836   0034DC  200C               	addwfc	(fputs@s+1)^0,w,c
  9837   0034DE  6EDA               	movwf	fsr2h,c
  9838   0034E0  50DF               	movf	indf2,w,c
  9839   0034E2  6E0E               	movwf	fputs@c^0,c
  9840   0034E4  500E               	movf	fputs@c^0,w,c
  9841   0034E6  A4D8               	btfss	status,2,c
  9842   0034E8  EF78  F01A         	goto	u2911
  9843   0034EC  EF7A  F01A         	goto	u2910
  9844   0034F0                     u2911:
  9845   0034F0  EF61  F01A         	goto	l3472
  9846   0034F4                     u2910:
  9847   0034F4  0012               	return		;funcret
  9848   0034F6                     __end_of_fputs:
  9849                           	callstack 0
  9850                           
  9851 ;; *************** function ___lwmod *****************
  9852 ;; Defined at:
  9853 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  dividend        2    2[COMRAM] unsigned int 
  9856 ;;  divisor         2    4[COMRAM] unsigned int 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  counter         1    6[COMRAM] unsigned char 
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  2    2[COMRAM] unsigned int 
  9861 ;; Registers used:
  9862 ;;		wreg, status,2, status,0
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9871 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9872 ;;Total ram usage:        5 bytes
  9873 ;; Hardware stack levels used: 1
  9874 ;; Hardware stack levels required when called: 1
  9875 ;; This function calls:
  9876 ;;		Nothing
  9877 ;; This function is called by:
  9878 ;;		_welcome_splash
  9879 ;;		_utoa
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           
  9883                           	psect	text40
  9884   003220                     __ptext40:
  9885                           	callstack 0
  9886   003220                     ___lwmod:
  9887                           	callstack 28
  9888   003220  5005               	movf	___lwmod@divisor^0,w,c
  9889   003222  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  9890   003224  B4D8               	btfsc	status,2,c
  9891   003226  EF17  F019         	goto	u2981
  9892   00322A  EF19  F019         	goto	u2980
  9893   00322E                     u2981:
  9894   00322E  EF3D  F019         	goto	l1011
  9895   003232                     u2980:
  9896   003232  0E01               	movlw	1
  9897   003234  6E07               	movwf	___lwmod@counter^0,c
  9898   003236  EF21  F019         	goto	l3518
  9899   00323A                     l3516:
  9900   00323A  90D8               	bcf	status,0,c
  9901   00323C  3605               	rlcf	___lwmod@divisor^0,f,c
  9902   00323E  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  9903   003240  2A07               	incf	___lwmod@counter^0,f,c
  9904   003242                     l3518:
  9905   003242  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  9906   003244  EF26  F019         	goto	u2991
  9907   003248  EF28  F019         	goto	u2990
  9908   00324C                     u2991:
  9909   00324C  EF1D  F019         	goto	l3516
  9910   003250                     u2990:
  9911   003250                     l3520:
  9912   003250  5005               	movf	___lwmod@divisor^0,w,c
  9913   003252  5C03               	subwf	___lwmod@dividend^0,w,c
  9914   003254  5006               	movf	(___lwmod@divisor+1)^0,w,c
  9915   003256  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  9916   003258  A0D8               	btfss	status,0,c
  9917   00325A  EF31  F019         	goto	u3001
  9918   00325E  EF33  F019         	goto	u3000
  9919   003262                     u3001:
  9920   003262  EF37  F019         	goto	l3524
  9921   003266                     u3000:
  9922   003266  5005               	movf	___lwmod@divisor^0,w,c
  9923   003268  5E03               	subwf	___lwmod@dividend^0,f,c
  9924   00326A  5006               	movf	(___lwmod@divisor+1)^0,w,c
  9925   00326C  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  9926   00326E                     l3524:
  9927   00326E  90D8               	bcf	status,0,c
  9928   003270  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  9929   003272  3205               	rrcf	___lwmod@divisor^0,f,c
  9930   003274  2E07               	decfsz	___lwmod@counter^0,f,c
  9931   003276  EF28  F019         	goto	l3520
  9932   00327A                     l1011:
  9933   00327A  C003  F003         	movff	___lwmod@dividend,?___lwmod
  9934   00327E  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  9935   003282  0012               	return		;funcret
  9936   003284                     __end_of___lwmod:
  9937                           	callstack 0
  9938                           
  9939 ;; *************** function ___lwdiv *****************
  9940 ;; Defined at:
  9941 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;  dividend        2    2[COMRAM] unsigned int 
  9944 ;;  divisor         2    4[COMRAM] unsigned int 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  quotient        2    6[COMRAM] unsigned int 
  9947 ;;  counter         1    8[COMRAM] unsigned char 
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  2    2[COMRAM] unsigned int 
  9950 ;; Registers used:
  9951 ;;		wreg, status,2, status,0
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9958 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9960 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9961 ;;Total ram usage:        7 bytes
  9962 ;; Hardware stack levels used: 1
  9963 ;; Hardware stack levels required when called: 1
  9964 ;; This function calls:
  9965 ;;		Nothing
  9966 ;; This function is called by:
  9967 ;;		_welcome_splash
  9968 ;;		_utoa
  9969 ;; This function uses a non-reentrant model
  9970 ;;
  9971                           
  9972                           	psect	text41
  9973   003072                     __ptext41:
  9974                           	callstack 0
  9975   003072                     ___lwdiv:
  9976                           	callstack 28
  9977   003072  0E00               	movlw	0
  9978   003074  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  9979   003076  0E00               	movlw	0
  9980   003078  6E07               	movwf	___lwdiv@quotient^0,c
  9981   00307A  5005               	movf	___lwdiv@divisor^0,w,c
  9982   00307C  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9983   00307E  B4D8               	btfsc	status,2,c
  9984   003080  EF44  F018         	goto	u2951
  9985   003084  EF46  F018         	goto	u2950
  9986   003088                     u2951:
  9987   003088  EF6E  F018         	goto	l1001
  9988   00308C                     u2950:
  9989   00308C  0E01               	movlw	1
  9990   00308E  6E09               	movwf	___lwdiv@counter^0,c
  9991   003090  EF4E  F018         	goto	l3498
  9992   003094                     l3496:
  9993   003094  90D8               	bcf	status,0,c
  9994   003096  3605               	rlcf	___lwdiv@divisor^0,f,c
  9995   003098  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9996   00309A  2A09               	incf	___lwdiv@counter^0,f,c
  9997   00309C                     l3498:
  9998   00309C  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  9999   00309E  EF53  F018         	goto	u2961
 10000   0030A2  EF55  F018         	goto	u2960
 10001   0030A6                     u2961:
 10002   0030A6  EF4A  F018         	goto	l3496
 10003   0030AA                     u2960:
 10004   0030AA                     l3500:
 10005   0030AA  90D8               	bcf	status,0,c
 10006   0030AC  3607               	rlcf	___lwdiv@quotient^0,f,c
 10007   0030AE  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10008   0030B0  5005               	movf	___lwdiv@divisor^0,w,c
 10009   0030B2  5C03               	subwf	___lwdiv@dividend^0,w,c
 10010   0030B4  5006               	movf	(___lwdiv@divisor+1)^0,w,c
 10011   0030B6  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10012   0030B8  A0D8               	btfss	status,0,c
 10013   0030BA  EF61  F018         	goto	u2971
 10014   0030BE  EF63  F018         	goto	u2970
 10015   0030C2                     u2971:
 10016   0030C2  EF68  F018         	goto	l3508
 10017   0030C6                     u2970:
 10018   0030C6  5005               	movf	___lwdiv@divisor^0,w,c
 10019   0030C8  5E03               	subwf	___lwdiv@dividend^0,f,c
 10020   0030CA  5006               	movf	(___lwdiv@divisor+1)^0,w,c
 10021   0030CC  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10022   0030CE  8007               	bsf	___lwdiv@quotient^0,0,c
 10023   0030D0                     l3508:
 10024   0030D0  90D8               	bcf	status,0,c
 10025   0030D2  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10026   0030D4  3205               	rrcf	___lwdiv@divisor^0,f,c
 10027   0030D6  2E09               	decfsz	___lwdiv@counter^0,f,c
 10028   0030D8  EF55  F018         	goto	l3500
 10029   0030DC                     l1001:
 10030   0030DC  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
 10031   0030E0  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10032   0030E4  0012               	return		;funcret
 10033   0030E6                     __end_of___lwdiv:
 10034                           	callstack 0
 10035                           
 10036 ;; *************** function _read_prec_or_width *****************
 10037 ;; Defined at:
 10038 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  fmt             1    2[COMRAM] PTR PTR const unsigned c
 10041 ;;		 -> vfprintf@cfmt(2), 
 10042 ;;  ap              1    3[COMRAM] PTR PTR void [1]
 10043 ;;		 -> sprintf@ap(1), 
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;  c               1    6[COMRAM] unsigned char 
 10046 ;;  n               2    7[COMRAM] int 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  2    2[COMRAM] int 
 10049 ;; Registers used:
 10050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;Total ram usage:        7 bytes
 10061 ;; Hardware stack levels used: 1
 10062 ;; Hardware stack levels required when called: 1
 10063 ;; This function calls:
 10064 ;;		Nothing
 10065 ;; This function is called by:
 10066 ;;		_vfpfcnvrt
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           	psect	text42
 10071   002B5A                     __ptext42:
 10072                           	callstack 0
 10073   002B5A                     _read_prec_or_width:
 10074                           	callstack 23
 10075   002B5A  0E00               	movlw	0
 10076   002B5C  6E09               	movwf	(read_prec_or_width@n+1)^0,c
 10077   002B5E  0E00               	movlw	0
 10078   002B60  6E08               	movwf	read_prec_or_width@n^0,c
 10079   002B62  5003               	movf	read_prec_or_width@fmt^0,w,c
 10080   002B64  6ED9               	movwf	fsr2l,c
 10081   002B66  6ADA               	clrf	fsr2h,c
 10082   002B68  CFDE FFF6          	movff	postinc2,tblptrl
 10083   002B6C  CFDD FFF7          	movff	postdec2,tblptrh
 10084   002B70                     	if	0	;tblptru may be non-zero
 10085   002B70                     	endif
 10086   002B70                     	if	0	;tblptru may be non-zero
 10087   002B70                     	endif
 10088   002B70  0008               	tblrd		*
 10089   002B72  50F5               	movf	tablat,w,c
 10090   002B74  0A2A               	xorlw	42
 10091   002B76  A4D8               	btfss	status,2,c
 10092   002B78  EFC0  F015         	goto	u3301
 10093   002B7C  EFC2  F015         	goto	u3300
 10094   002B80                     u3301:
 10095   002B80  EFEB  F015         	goto	l3694
 10096   002B84                     u3300:
 10097   002B84  5003               	movf	read_prec_or_width@fmt^0,w,c
 10098   002B86  6ED9               	movwf	fsr2l,c
 10099   002B88  6ADA               	clrf	fsr2h,c
 10100   002B8A  2ADE               	incf	postinc2,f,c
 10101   002B8C  0E00               	movlw	0
 10102   002B8E  22DD               	addwfc	postdec2,f,c
 10103   002B90  5004               	movf	read_prec_or_width@ap^0,w,c
 10104   002B92  6ED9               	movwf	fsr2l,c
 10105   002B94  6ADA               	clrf	fsr2h,c
 10106   002B96  0E02               	movlw	2
 10107   002B98  26DF               	addwf	indf2,f,c
 10108   002B9A  5CDF               	subwf	indf2,w,c
 10109   002B9C  6ED9               	movwf	fsr2l,c
 10110   002B9E  6ADA               	clrf	fsr2h,c
 10111   002BA0  CFDE F008          	movff	postinc2,read_prec_or_width@n
 10112   002BA4  CFDE F009          	movff	postinc2,read_prec_or_width@n+1
 10113   002BA8  EFFE  F015         	goto	l1262
 10114   002BAC                     l3690:
 10115   002BAC  0E0A               	movlw	10
 10116   002BAE  0208               	mulwf	read_prec_or_width@n^0,c
 10117   002BB0  CFF3 F005          	movff	prodl,??_read_prec_or_width
 10118   002BB4  CFF4 F006          	movff	prodh,??_read_prec_or_width+1
 10119   002BB8  0209               	mulwf	(read_prec_or_width@n+1)^0,c
 10120   002BBA  50F3               	movf	prodl,w,c
 10121   002BBC  2606               	addwf	(??_read_prec_or_width+1)^0,f,c
 10122   002BBE  5007               	movf	read_prec_or_width@c^0,w,c
 10123   002BC0  2405               	addwf	??_read_prec_or_width^0,w,c
 10124   002BC2  6E08               	movwf	read_prec_or_width@n^0,c
 10125   002BC4  0E00               	movlw	0
 10126   002BC6  2006               	addwfc	(??_read_prec_or_width+1)^0,w,c
 10127   002BC8  6E09               	movwf	(read_prec_or_width@n+1)^0,c
 10128   002BCA  5003               	movf	read_prec_or_width@fmt^0,w,c
 10129   002BCC  6ED9               	movwf	fsr2l,c
 10130   002BCE  6ADA               	clrf	fsr2h,c
 10131   002BD0  2ADE               	incf	postinc2,f,c
 10132   002BD2  0E00               	movlw	0
 10133   002BD4  22DD               	addwfc	postdec2,f,c
 10134   002BD6                     l3694:
 10135   002BD6  5003               	movf	read_prec_or_width@fmt^0,w,c
 10136   002BD8  6ED9               	movwf	fsr2l,c
 10137   002BDA  6ADA               	clrf	fsr2h,c
 10138   002BDC  CFDE FFF6          	movff	postinc2,tblptrl
 10139   002BE0  CFDD FFF7          	movff	postdec2,tblptrh
 10140   002BE4                     	if	0	;tblptru may be non-zero
 10141   002BE4                     	endif
 10142   002BE4                     	if	0	;tblptru may be non-zero
 10143   002BE4                     	endif
 10144   002BE4  0008               	tblrd		*
 10145   002BE6  50F5               	movf	tablat,w,c
 10146   002BE8  0FD0               	addlw	208
 10147   002BEA  6E07               	movwf	read_prec_or_width@c^0,c
 10148   002BEC  0E09               	movlw	9
 10149   002BEE  6407               	cpfsgt	read_prec_or_width@c^0,c
 10150   002BF0  EFFC  F015         	goto	u3311
 10151   002BF4  EFFE  F015         	goto	u3310
 10152   002BF8                     u3311:
 10153   002BF8  EFD6  F015         	goto	l3690
 10154   002BFC                     u3310:
 10155   002BFC                     l1262:
 10156   002BFC  C008  F003         	movff	read_prec_or_width@n,?_read_prec_or_width
 10157   002C00  C009  F004         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 10158   002C04  0012               	return		;funcret
 10159   002C06                     __end_of_read_prec_or_width:
 10160                           	callstack 0
 10161                           
 10162 ;; *************** function _ctoa *****************
 10163 ;; Defined at:
 10164 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 10167 ;;		 -> sprintf@f(11), 
 10168 ;;  c               1   11[COMRAM] unsigned char 
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;  w               2   15[COMRAM] int 
 10171 ;;  l               2   13[COMRAM] int 
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      void 
 10174 ;; Registers used:
 10175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;Total ram usage:        7 bytes
 10186 ;; Hardware stack levels used: 1
 10187 ;; Hardware stack levels required when called: 3
 10188 ;; This function calls:
 10189 ;;		_fputc
 10190 ;; This function is called by:
 10191 ;;		_vfpfcnvrt
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text43
 10196   0029E0                     __ptext43:
 10197                           	callstack 0
 10198   0029E0                     _ctoa:
 10199                           	callstack 21
 10200   0029E0  0100               	movlb	0	; () banked
 10201   0029E2  51BF               	movf	_width& (0+255),w,b
 10202   0029E4  11C0               	iorwf	(_width+1)& (0+255),w,b
 10203   0029E6  A4D8               	btfss	status,2,c
 10204   0029E8  EFF8  F014         	goto	u3131
 10205   0029EC  EFFA  F014         	goto	u3130
 10206   0029F0                     u3131:
 10207   0029F0  EF00  F015         	goto	l3594
 10208   0029F4                     u3130:
 10209   0029F4                     
 10210                           ; BSR set to: 0
 10211   0029F4  C0BF  F010         	movff	_width,ctoa@w
 10212   0029F8  C0C0  F011         	movff	_width+1,ctoa@w+1
 10213   0029FC  EF06  F015         	goto	l3596
 10214   002A00                     l3594:
 10215                           
 10216                           ; BSR set to: 0
 10217   002A00  0EFF               	movlw	255
 10218   002A02  25BF               	addwf	_width& (0+255),w,b
 10219   002A04  6E10               	movwf	ctoa@w^0,c
 10220   002A06  0EFF               	movlw	255
 10221   002A08  21C0               	addwfc	(_width+1)& (0+255),w,b
 10222   002A0A  6E11               	movwf	(ctoa@w+1)^0,c
 10223   002A0C                     l3596:
 10224                           
 10225                           ; BSR set to: 0
 10226   002A0C  A1CF               	btfss	_flags& (0+255),0,b
 10227   002A0E  EF0B  F015         	goto	u3141
 10228   002A12  EF0D  F015         	goto	u3140
 10229   002A16                     u3141:
 10230   002A16  EF14  F015         	goto	l3600
 10231   002A1A                     u3140:
 10232   002A1A                     
 10233                           ; BSR set to: 0
 10234   002A1A  C00C  F003         	movff	ctoa@c,fputc@c
 10235   002A1E  6A04               	clrf	(fputc@c+1)^0,c
 10236   002A20  C00B  F005         	movff	ctoa@fp,fputc@fp
 10237   002A24  EC50  F015         	call	_fputc	;wreg free
 10238   002A28                     l3600:
 10239   002A28  BE11               	btfsc	(ctoa@w+1)^0,7,c
 10240   002A2A  EF19  F015         	goto	u3151
 10241   002A2E  EF1B  F015         	goto	u3150
 10242   002A32                     u3151:
 10243   002A32  EF1D  F015         	goto	l3604
 10244   002A36                     u3150:
 10245   002A36  EF21  F015         	goto	l1231
 10246   002A3A                     l3604:
 10247   002A3A  0E00               	movlw	0
 10248   002A3C  6E11               	movwf	(ctoa@w+1)^0,c
 10249   002A3E  0E00               	movlw	0
 10250   002A40  6E10               	movwf	ctoa@w^0,c
 10251   002A42                     l1231:
 10252   002A42  0E00               	movlw	0
 10253   002A44  6E0F               	movwf	(ctoa@l+1)^0,c
 10254   002A46  0E00               	movlw	0
 10255   002A48  6E0E               	movwf	ctoa@l^0,c
 10256   002A4A  EF31  F015         	goto	l3610
 10257   002A4E                     l3606:
 10258   002A4E  0E00               	movlw	0
 10259   002A50  6E04               	movwf	(fputc@c+1)^0,c
 10260   002A52  0E20               	movlw	32
 10261   002A54  6E03               	movwf	fputc@c^0,c
 10262   002A56  C00B  F005         	movff	ctoa@fp,fputc@fp
 10263   002A5A  EC50  F015         	call	_fputc	;wreg free
 10264   002A5E  4A0E               	infsnz	ctoa@l^0,f,c
 10265   002A60  2A0F               	incf	(ctoa@l+1)^0,f,c
 10266   002A62                     l3610:
 10267   002A62  5010               	movf	ctoa@w^0,w,c
 10268   002A64  5C0E               	subwf	ctoa@l^0,w,c
 10269   002A66  500F               	movf	(ctoa@l+1)^0,w,c
 10270   002A68  0A80               	xorlw	128
 10271   002A6A  6E0D               	movwf	??_ctoa^0,c
 10272   002A6C  5011               	movf	(ctoa@w+1)^0,w,c
 10273   002A6E  0A80               	xorlw	128
 10274   002A70  580D               	subwfb	??_ctoa^0,w,c
 10275   002A72  A0D8               	btfss	status,0,c
 10276   002A74  EF3E  F015         	goto	u3161
 10277   002A78  EF40  F015         	goto	u3160
 10278   002A7C                     u3161:
 10279   002A7C  EF27  F015         	goto	l3606
 10280   002A80                     u3160:
 10281   002A80  0100               	movlb	0	; () banked
 10282   002A82  B1CF               	btfsc	_flags& (0+255),0,b
 10283   002A84  EF46  F015         	goto	u3171
 10284   002A88  EF48  F015         	goto	u3170
 10285   002A8C                     u3171:
 10286   002A8C  EF4F  F015         	goto	l1236
 10287   002A90                     u3170:
 10288   002A90                     
 10289                           ; BSR set to: 0
 10290   002A90  C00C  F003         	movff	ctoa@c,fputc@c
 10291   002A94  6A04               	clrf	(fputc@c+1)^0,c
 10292   002A96  C00B  F005         	movff	ctoa@fp,fputc@fp
 10293   002A9A  EC50  F015         	call	_fputc	;wreg free
 10294   002A9E                     l1236:
 10295   002A9E  0012               	return		;funcret
 10296   002AA0                     __end_of_ctoa:
 10297                           	callstack 0
 10298                           
 10299 ;; *************** function _fputc *****************
 10300 ;; Defined at:
 10301 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  c               2    2[COMRAM] int 
 10304 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
 10305 ;;		 -> sprintf@f(11), 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;		None
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  2    2[COMRAM] int 
 10310 ;; Registers used:
 10311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 0/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10317 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10319 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;Total ram usage:        8 bytes
 10322 ;; Hardware stack levels used: 1
 10323 ;; Hardware stack levels required when called: 2
 10324 ;; This function calls:
 10325 ;;		_putch
 10326 ;; This function is called by:
 10327 ;;		_pad
 10328 ;;		_ctoa
 10329 ;;		_vfpfcnvrt
 10330 ;;		_fputs
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           	psect	text44
 10335   002AA0                     __ptext44:
 10336                           	callstack 0
 10337   002AA0                     _fputc:
 10338                           	callstack 19
 10339   002AA0  5005               	movf	fputc@fp^0,w,c
 10340   002AA2  B4D8               	btfsc	status,2,c
 10341   002AA4  EF56  F015         	goto	u2871
 10342   002AA8  EF58  F015         	goto	u2870
 10343   002AAC                     u2871:
 10344   002AAC  EF60  F015         	goto	l3460
 10345   002AB0                     u2870:
 10346   002AB0  5005               	movf	fputc@fp^0,w,c
 10347   002AB2  A4D8               	btfss	status,2,c
 10348   002AB4  EF5E  F015         	goto	u2881
 10349   002AB8  EF60  F015         	goto	u2880
 10350   002ABC                     u2881:
 10351   002ABC  EF65  F015         	goto	l3462
 10352   002AC0                     u2880:
 10353   002AC0                     l3460:
 10354   002AC0  5003               	movf	fputc@c^0,w,c
 10355   002AC2  EC6D  F01B         	call	_putch
 10356   002AC6  EFAC  F015         	goto	l1304
 10357   002ACA                     l3462:
 10358   002ACA  5005               	movf	fputc@fp^0,w,c
 10359   002ACC  6ED9               	movwf	fsr2l,c
 10360   002ACE  6ADA               	clrf	fsr2h,c
 10361   002AD0  0E09               	movlw	9
 10362   002AD2  26D9               	addwf	fsr2l,f,c
 10363   002AD4  50DE               	movf	postinc2,w,c
 10364   002AD6  10DE               	iorwf	postinc2,w,c
 10365   002AD8  B4D8               	btfsc	status,2,c
 10366   002ADA  EF71  F015         	goto	u2891
 10367   002ADE  EF73  F015         	goto	u2890
 10368   002AE2                     u2891:
 10369   002AE2  EF8C  F015         	goto	l3466
 10370   002AE6                     u2890:
 10371   002AE6  5005               	movf	fputc@fp^0,w,c
 10372   002AE8  6ED9               	movwf	fsr2l,c
 10373   002AEA  6ADA               	clrf	fsr2h,c
 10374   002AEC  0E09               	movlw	9
 10375   002AEE  26D9               	addwf	fsr2l,f,c
 10376   002AF0  5005               	movf	fputc@fp^0,w,c
 10377   002AF2  6EE1               	movwf	fsr1l,c
 10378   002AF4  6AE2               	clrf	fsr1h,c
 10379   002AF6  0E02               	movlw	2
 10380   002AF8  26E1               	addwf	fsr1l,f,c
 10381   002AFA  50DE               	movf	postinc2,w,c
 10382   002AFC  5CE6               	subwf	postinc1,w,c
 10383   002AFE  50E6               	movf	postinc1,w,c
 10384   002B00  0A80               	xorlw	128
 10385   002B02  6E0A               	movwf	(??_fputc+4)^0,c
 10386   002B04  50DE               	movf	postinc2,w,c
 10387   002B06  0A80               	xorlw	128
 10388   002B08  580A               	subwfb	(??_fputc+4)^0,w,c
 10389   002B0A  B0D8               	btfsc	status,0,c
 10390   002B0C  EF8A  F015         	goto	u2901
 10391   002B10  EF8C  F015         	goto	u2900
 10392   002B14                     u2901:
 10393   002B14  EFAC  F015         	goto	l1304
 10394   002B18                     u2900:
 10395   002B18                     l3466:
 10396   002B18  5005               	movf	fputc@fp^0,w,c
 10397   002B1A  6ED9               	movwf	fsr2l,c
 10398   002B1C  6ADA               	clrf	fsr2h,c
 10399   002B1E  0E02               	movlw	2
 10400   002B20  26D9               	addwf	fsr2l,f,c
 10401   002B22  CFDE F006          	movff	postinc2,??_fputc
 10402   002B26  CFDD F007          	movff	postdec2,??_fputc+1
 10403   002B2A  5005               	movf	fputc@fp^0,w,c
 10404   002B2C  6ED9               	movwf	fsr2l,c
 10405   002B2E  6ADA               	clrf	fsr2h,c
 10406   002B30  CFDE F008          	movff	postinc2,??_fputc+2
 10407   002B34  CFDD F009          	movff	postdec2,??_fputc+3
 10408   002B38  5006               	movf	??_fputc^0,w,c
 10409   002B3A  2408               	addwf	(??_fputc+2)^0,w,c
 10410   002B3C  6ED9               	movwf	fsr2l,c
 10411   002B3E  5007               	movf	(??_fputc+1)^0,w,c
 10412   002B40  2009               	addwfc	(??_fputc+3)^0,w,c
 10413   002B42  6EDA               	movwf	fsr2h,c
 10414   002B44  C003  FFDF         	movff	fputc@c,indf2
 10415   002B48  5005               	movf	fputc@fp^0,w,c
 10416   002B4A  6ED9               	movwf	fsr2l,c
 10417   002B4C  6ADA               	clrf	fsr2h,c
 10418   002B4E  0E02               	movlw	2
 10419   002B50  26D9               	addwf	fsr2l,f,c
 10420   002B52  2ADE               	incf	postinc2,f,c
 10421   002B54  0E00               	movlw	0
 10422   002B56  22DD               	addwfc	postdec2,f,c
 10423   002B58                     l1304:
 10424   002B58  0012               	return		;funcret
 10425   002B5A                     __end_of_fputc:
 10426                           	callstack 0
 10427                           
 10428 ;; *************** function _putch *****************
 10429 ;; Defined at:
 10430 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;  c               1    wreg     unsigned char 
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;  c               1    0[COMRAM] unsigned char 
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      void 
 10437 ;; Registers used:
 10438 ;;		wreg
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10448 ;;Total ram usage:        0 bytes
 10449 ;; Hardware stack levels used: 1
 10450 ;; Hardware stack levels required when called: 1
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_fputc
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text45
 10459   0036DA                     __ptext45:
 10460                           	callstack 0
 10461   0036DA                     _putch:
 10462                           	callstack 19
 10463   0036DA  0012               	return		;funcret
 10464   0036DC                     __end_of_putch:
 10465                           	callstack 0
 10466                           
 10467 ;; *************** function _clear_diagnostic_codes *****************
 10468 ;; Defined at:
 10469 ;;		line 748 in file "OBCII_PIC18F46K22.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;		None
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  opt_sel         2   12[COMRAM] int 
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  1    wreg      void 
 10476 ;; Registers used:
 10477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10486 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10487 ;;Total ram usage:        4 bytes
 10488 ;; Hardware stack levels used: 1
 10489 ;; Hardware stack levels required when called: 5
 10490 ;; This function calls:
 10491 ;;		_LCD_clear
 10492 ;;		_LCD_configure_cursor_blink
 10493 ;;		_LCD_cursor_set
 10494 ;;		_LCD_write_string
 10495 ;;		_UART1_SendString
 10496 ;;		_clear_parsing_notif
 10497 ;;		_display_mm
 10498 ;;		_parsing_notif
 10499 ;;		_readADC
 10500 ;; This function is called by:
 10501 ;;		_main_menu
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           	psect	text46
 10506   0019BC                     __ptext46:
 10507                           	callstack 0
 10508   0019BC                     _clear_diagnostic_codes:
 10509                           	callstack 24
 10510   0019BC                     
 10511                           ;OBCII_PIC18F46K22.c: 750:     int opt_sel = 0;
 10512   0019BC  0E00               	movlw	0
 10513   0019BE  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
 10514   0019C0  0E00               	movlw	0
 10515   0019C2  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
 10516   0019C4                     
 10517                           ;OBCII_PIC18F46K22.c: 751:     LCD_clear();
 10518   0019C4  EC0A  F01B         	call	_LCD_clear	;wreg free
 10519   0019C8                     
 10520                           ;OBCII_PIC18F46K22.c: 752:     LCD_cursor_set(1,1);
 10521   0019C8  0E01               	movlw	1
 10522   0019CA  6E06               	movwf	LCD_cursor_set@column^0,c
 10523   0019CC  0E01               	movlw	1
 10524   0019CE  EC42  F019         	call	_LCD_cursor_set
 10525   0019D2                     
 10526                           ;OBCII_PIC18F46K22.c: 753:     LCD_write_string("Clear Code(s)?");
 10527   0019D2  0E36               	movlw	low STR_44
 10528   0019D4  6E06               	movwf	LCD_write_string@string^0,c
 10529   0019D6  0EFF               	movlw	high STR_44
 10530   0019D8  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10531   0019DA  ECFC  F017         	call	_LCD_write_string	;wreg free
 10532   0019DE                     
 10533                           ;OBCII_PIC18F46K22.c: 754:     LCD_cursor_set(2,1);
 10534   0019DE  0E01               	movlw	1
 10535   0019E0  6E06               	movwf	LCD_cursor_set@column^0,c
 10536   0019E2  0E02               	movlw	2
 10537   0019E4  EC42  F019         	call	_LCD_cursor_set
 10538   0019E8                     
 10539                           ;OBCII_PIC18F46K22.c: 755:     LCD_write_string("Y/N <<<<<<<<<<<<");
 10540   0019E8  0EB3               	movlw	low STR_45
 10541   0019EA  6E06               	movwf	LCD_write_string@string^0,c
 10542   0019EC  0EFE               	movlw	high STR_45
 10543   0019EE  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10544   0019F0  ECFC  F017         	call	_LCD_write_string	;wreg free
 10545   0019F4                     
 10546                           ;OBCII_PIC18F46K22.c: 756:     LCD_configure_cursor_blink(1);
 10547   0019F4  0E01               	movlw	1
 10548   0019F6  ECF7  F01A         	call	_LCD_configure_cursor_blink
 10549   0019FA                     l4852:
 10550                           
 10551                           ;OBCII_PIC18F46K22.c: 759:         result = readADC();
 10552   0019FA  EC96  F01A         	call	_readADC	;wreg free
 10553   0019FE  C003  F05A         	movff	?_readADC,_result
 10554   001A02  C004  F05B         	movff	?_readADC+1,_result+1
 10555   001A06                     
 10556                           ;OBCII_PIC18F46K22.c: 760:         if(result >= 0 && result <= 511){
 10557   001A06  0E02               	movlw	2
 10558   001A08  5C5B               	subwf	(_result+1)^0,w,c
 10559   001A0A  B0D8               	btfsc	status,0,c
 10560   001A0C  EF0A  F00D         	goto	u5281
 10561   001A10  EF0C  F00D         	goto	u5280
 10562   001A14                     u5281:
 10563   001A14  EF15  F00D         	goto	l4860
 10564   001A18                     u5280:
 10565   001A18                     
 10566                           ;OBCII_PIC18F46K22.c: 761:             opt_sel = 0;
 10567   001A18  0E00               	movlw	0
 10568   001A1A  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
 10569   001A1C  0E00               	movlw	0
 10570   001A1E  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
 10571   001A20                     
 10572                           ;OBCII_PIC18F46K22.c: 762:             LCD_cursor_set(2,1);
 10573   001A20  0E01               	movlw	1
 10574   001A22  6E06               	movwf	LCD_cursor_set@column^0,c
 10575   001A24  0E02               	movlw	2
 10576   001A26  EC42  F019         	call	_LCD_cursor_set
 10577   001A2A                     l4860:
 10578                           
 10579                           ;OBCII_PIC18F46K22.c: 765:         if(result >= 512 && result <=1023){
 10580   001A2A  0E02               	movlw	2
 10581   001A2C  5C5B               	subwf	(_result+1)^0,w,c
 10582   001A2E  A0D8               	btfss	status,0,c
 10583   001A30  EF1C  F00D         	goto	u5291
 10584   001A34  EF1E  F00D         	goto	u5290
 10585   001A38                     u5291:
 10586   001A38  EF30  F00D         	goto	l4868
 10587   001A3C                     u5290:
 10588   001A3C  0E04               	movlw	4
 10589   001A3E  5C5B               	subwf	(_result+1)^0,w,c
 10590   001A40  B0D8               	btfsc	status,0,c
 10591   001A42  EF25  F00D         	goto	u5301
 10592   001A46  EF27  F00D         	goto	u5300
 10593   001A4A                     u5301:
 10594   001A4A  EF30  F00D         	goto	l4868
 10595   001A4E                     u5300:
 10596   001A4E                     
 10597                           ;OBCII_PIC18F46K22.c: 766:             opt_sel = 1;
 10598   001A4E  0E00               	movlw	0
 10599   001A50  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
 10600   001A52  0E01               	movlw	1
 10601   001A54  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
 10602   001A56                     
 10603                           ;OBCII_PIC18F46K22.c: 767:             LCD_cursor_set(2,3);
 10604   001A56  0E03               	movlw	3
 10605   001A58  6E06               	movwf	LCD_cursor_set@column^0,c
 10606   001A5A  0E02               	movlw	2
 10607   001A5C  EC42  F019         	call	_LCD_cursor_set
 10608   001A60                     l4868:
 10609                           
 10610                           ;OBCII_PIC18F46K22.c: 769:             if (PORTCbits.RC5 == 0) {
 10611   001A60  BA82               	btfsc	130,5,c	;volatile
 10612   001A62  EF35  F00D         	goto	u5311
 10613   001A66  EF37  F00D         	goto	u5310
 10614   001A6A                     u5311:
 10615   001A6A  EF4F  F00D         	goto	l375
 10616   001A6E                     u5310:
 10617   001A6E                     
 10618                           ;OBCII_PIC18F46K22.c: 770:                 _delay((unsigned long)((20)*(16000000/4000.0)
      +                          ));
 10619   001A6E  0E68               	movlw	104
 10620   001A70  6E0B               	movwf	??_clear_diagnostic_codes^0,c
 10621   001A72  0EE4               	movlw	228
 10622   001A74                     u7197:
 10623   001A74  2EE8               	decfsz	wreg,f,c
 10624   001A76  D7FE               	bra	u7197
 10625   001A78  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
 10626   001A7A  D7FC               	bra	u7197
 10627   001A7C  D000               	nop2	
 10628   001A7E                     
 10629                           ;OBCII_PIC18F46K22.c: 771:                 if (PORTCbits.RC5 == 0) {
 10630   001A7E  BA82               	btfsc	130,5,c	;volatile
 10631   001A80  EF44  F00D         	goto	u5321
 10632   001A84  EF46  F00D         	goto	u5320
 10633   001A88                     u5321:
 10634   001A88  EF4F  F00D         	goto	l375
 10635   001A8C                     u5320:
 10636   001A8C                     
 10637                           ;OBCII_PIC18F46K22.c: 772:                     LCD_clear();
 10638   001A8C  EC0A  F01B         	call	_LCD_clear	;wreg free
 10639   001A90                     
 10640                           ;OBCII_PIC18F46K22.c: 773:                     display_mm();
 10641   001A90  ECCA  F01A         	call	_display_mm	;wreg free
 10642   001A94                     
 10643                           ;OBCII_PIC18F46K22.c: 774:                     menu_sel = -1;
 10644   001A94  0100               	movlb	0	; () banked
 10645   001A96  69F3               	setf	_menu_sel& (0+255),b
 10646   001A98  69F4               	setf	(_menu_sel+1)& (0+255),b
 10647                           
 10648                           ;OBCII_PIC18F46K22.c: 775:                     break;
 10649   001A9A  EFD5  F00D         	goto	l389
 10650   001A9E                     l375:
 10651                           
 10652                           ;OBCII_PIC18F46K22.c: 779:         if (PORTBbits.RB4 == 0) {
 10653   001A9E  B881               	btfsc	129,4,c	;volatile
 10654   001AA0  EF54  F00D         	goto	u5331
 10655   001AA4  EF56  F00D         	goto	u5330
 10656   001AA8                     u5331:
 10657   001AA8  EFFD  F00C         	goto	l4852
 10658   001AAC                     u5330:
 10659   001AAC                     
 10660                           ;OBCII_PIC18F46K22.c: 780:             _delay((unsigned long)((20)*(16000000/4000.0)));
 10661   001AAC  0E68               	movlw	104
 10662   001AAE  6E0B               	movwf	??_clear_diagnostic_codes^0,c
 10663   001AB0  0EE4               	movlw	228
 10664   001AB2                     u7207:
 10665   001AB2  2EE8               	decfsz	wreg,f,c
 10666   001AB4  D7FE               	bra	u7207
 10667   001AB6  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
 10668   001AB8  D7FC               	bra	u7207
 10669   001ABA  D000               	nop2	
 10670   001ABC                     
 10671                           ;OBCII_PIC18F46K22.c: 781:             if (PORTBbits.RB4 == 0) {
 10672   001ABC  B881               	btfsc	129,4,c	;volatile
 10673   001ABE  EF63  F00D         	goto	u5341
 10674   001AC2  EF65  F00D         	goto	u5340
 10675   001AC6                     u5341:
 10676   001AC6  EFFD  F00C         	goto	l4852
 10677   001ACA                     u5340:
 10678   001ACA  EFBF  F00D         	goto	l4918
 10679   001ACE                     l4886:
 10680                           
 10681                           ;OBCII_PIC18F46K22.c: 785:                     UART1_SendString("04\r");
 10682   001ACE  0EE0               	movlw	low STR_46
 10683   001AD0  6E04               	movwf	UART1_SendString@string^0,c
 10684   001AD2  0EFF               	movlw	high STR_46
 10685   001AD4  6E05               	movwf	(UART1_SendString@string+1)^0,c
 10686   001AD6  ECA1  F019         	call	_UART1_SendString	;wreg free
 10687                           
 10688                           ;OBCII_PIC18F46K22.c: 786:                     while(!message_complete){
 10689   001ADA  EF71  F00D         	goto	l4890
 10690   001ADE                     l4888:
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;OBCII_PIC18F46K22.c: 788:                         parsing_notif();
 10694   001ADE  EC19  F01B         	call	_parsing_notif	;wreg free
 10695   001AE2                     l4890:
 10696                           
 10697                           ;OBCII_PIC18F46K22.c: 786:                     while(!message_complete){
 10698   001AE2  0100               	movlb	0	; () banked
 10699   001AE4  51D0               	movf	_message_complete& (0+255),w,b	;volatile
 10700   001AE6  B4D8               	btfsc	status,2,c
 10701   001AE8  EF78  F00D         	goto	u5351
 10702   001AEC  EF7A  F00D         	goto	u5350
 10703   001AF0                     u5351:
 10704   001AF0  EF6F  F00D         	goto	l4888
 10705   001AF4                     u5350:
 10706   001AF4                     
 10707                           ; BSR set to: 0
 10708                           ;OBCII_PIC18F46K22.c: 790:                     clear_parsing_notif();
 10709   001AF4  EC25  F01B         	call	_clear_parsing_notif	;wreg free
 10710   001AF8                     
 10711                           ;OBCII_PIC18F46K22.c: 792:                     LCD_clear();
 10712   001AF8  EC0A  F01B         	call	_LCD_clear	;wreg free
 10713   001AFC                     
 10714                           ;OBCII_PIC18F46K22.c: 793:                     LCD_cursor_set(1,1);
 10715   001AFC  0E01               	movlw	1
 10716   001AFE  6E06               	movwf	LCD_cursor_set@column^0,c
 10717   001B00  0E01               	movlw	1
 10718   001B02  EC42  F019         	call	_LCD_cursor_set
 10719                           
 10720                           ;OBCII_PIC18F46K22.c: 794:                     LCD_write_string("Codes Cleared");
 10721   001B06  0E61               	movlw	low STR_47
 10722   001B08  6E06               	movwf	LCD_write_string@string^0,c
 10723   001B0A  0EFF               	movlw	high STR_47
 10724   001B0C  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10725   001B0E  ECFC  F017         	call	_LCD_write_string	;wreg free
 10726   001B12                     
 10727                           ;OBCII_PIC18F46K22.c: 795:                     LCD_cursor_set(2,1);
 10728   001B12  0E01               	movlw	1
 10729   001B14  6E06               	movwf	LCD_cursor_set@column^0,c
 10730   001B16  0E02               	movlw	2
 10731   001B18  EC42  F019         	call	_LCD_cursor_set
 10732   001B1C                     
 10733                           ;OBCII_PIC18F46K22.c: 796:                     LCD_write_string("To Menu...");
 10734   001B1C  0E88               	movlw	low STR_48
 10735   001B1E  6E06               	movwf	LCD_write_string@string^0,c
 10736   001B20  0EFF               	movlw	high STR_48
 10737   001B22  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10738   001B24  ECFC  F017         	call	_LCD_write_string	;wreg free
 10739   001B28                     l4902:
 10740                           
 10741                           ;OBCII_PIC18F46K22.c: 798:                     menu_sel = -1;
 10742   001B28  0100               	movlb	0	; () banked
 10743   001B2A  69F3               	setf	_menu_sel& (0+255),b
 10744   001B2C  69F4               	setf	(_menu_sel+1)& (0+255),b
 10745   001B2E                     
 10746                           ; BSR set to: 0
 10747                           ;OBCII_PIC18F46K22.c: 799:                     _delay((unsigned long)((2000)*(16000000/4
      +                          000.0)));
 10748   001B2E  0E29               	movlw	41
 10749   001B30  6E0C               	movwf	(??_clear_diagnostic_codes+1)^0,c
 10750   001B32  0E96               	movlw	150
 10751   001B34  6E0B               	movwf	??_clear_diagnostic_codes^0,c
 10752   001B36  0E7F               	movlw	127
 10753   001B38                     u7217:
 10754   001B38  2EE8               	decfsz	wreg,f,c
 10755   001B3A  D7FE               	bra	u7217
 10756   001B3C  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
 10757   001B3E  D7FC               	bra	u7217
 10758   001B40  2E0C               	decfsz	(??_clear_diagnostic_codes+1)^0,f,c
 10759   001B42  D7FA               	bra	u7217
 10760   001B44  0000               	nop	
 10761                           
 10762                           ;OBCII_PIC18F46K22.c: 801:                         break;
 10763   001B46  EFD5  F00D         	goto	l389
 10764   001B4A                     l4906:
 10765                           
 10766                           ;OBCII_PIC18F46K22.c: 805:                     LCD_clear();
 10767   001B4A  EC0A  F01B         	call	_LCD_clear	;wreg free
 10768                           
 10769                           ;OBCII_PIC18F46K22.c: 806:                     LCD_cursor_set(1,1);
 10770   001B4E  0E01               	movlw	1
 10771   001B50  6E06               	movwf	LCD_cursor_set@column^0,c
 10772   001B52  0E01               	movlw	1
 10773   001B54  EC42  F019         	call	_LCD_cursor_set
 10774   001B58                     
 10775                           ;OBCII_PIC18F46K22.c: 807:                     LCD_write_string("Nothing Cleared");
 10776   001B58  0E07               	movlw	low STR_49
 10777   001B5A  6E06               	movwf	LCD_write_string@string^0,c
 10778   001B5C  0EFF               	movlw	high STR_49
 10779   001B5E  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10780   001B60  ECFC  F017         	call	_LCD_write_string	;wreg free
 10781   001B64                     
 10782                           ;OBCII_PIC18F46K22.c: 808:                     LCD_cursor_set(2,1);
 10783   001B64  0E01               	movlw	1
 10784   001B66  6E06               	movwf	LCD_cursor_set@column^0,c
 10785   001B68  0E02               	movlw	2
 10786   001B6A  EC42  F019         	call	_LCD_cursor_set
 10787                           
 10788                           ;OBCII_PIC18F46K22.c: 809:                     LCD_write_string("To Menu...");
 10789   001B6E  0E88               	movlw	low STR_48
 10790   001B70  6E06               	movwf	LCD_write_string@string^0,c
 10791   001B72  0EFF               	movlw	high STR_48
 10792   001B74  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10793   001B76  ECFC  F017         	call	_LCD_write_string	;wreg free
 10794   001B7A  EF94  F00D         	goto	l4902
 10795   001B7E                     l4918:
 10796   001B7E  C00D  F00B         	movff	clear_diagnostic_codes@opt_sel,??_clear_diagnostic_codes
 10797   001B82  C00E  F00C         	movff	clear_diagnostic_codes@opt_sel+1,??_clear_diagnostic_codes+1
 10798                           
 10799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10800                           ; Switch size 1, requested type "simple"
 10801                           ; Number of cases is 1, Range of values is 0 to 0
 10802                           ; switch strategies available:
 10803                           ; Name         Instructions Cycles
 10804                           ; simple_byte            4     3 (average)
 10805                           ;	Chosen strategy is simple_byte
 10806   001B86  500C               	movf	(??_clear_diagnostic_codes+1)^0,w,c
 10807   001B88  0A00               	xorlw	0	; case 0
 10808   001B8A  B4D8               	btfsc	status,2,c
 10809   001B8C  EFCA  F00D         	goto	l6082
 10810   001B90  EFD5  F00D         	goto	l389
 10811   001B94                     l6082:
 10812                           
 10813                           ; Switch size 1, requested type "simple"
 10814                           ; Number of cases is 2, Range of values is 0 to 1
 10815                           ; switch strategies available:
 10816                           ; Name         Instructions Cycles
 10817                           ; simple_byte            7     4 (average)
 10818                           ;	Chosen strategy is simple_byte
 10819   001B94  500B               	movf	??_clear_diagnostic_codes^0,w,c
 10820   001B96  0A00               	xorlw	0	; case 0
 10821   001B98  B4D8               	btfsc	status,2,c
 10822   001B9A  EF67  F00D         	goto	l4886
 10823   001B9E  0A01               	xorlw	1	; case 1
 10824   001BA0  B4D8               	btfsc	status,2,c
 10825   001BA2  EFA5  F00D         	goto	l4906
 10826   001BA6  EFD5  F00D         	goto	l389
 10827   001BAA                     l389:
 10828   001BAA  0012               	return		;funcret
 10829   001BAC                     __end_of_clear_diagnostic_codes:
 10830                           	callstack 0
 10831                           
 10832 ;; *************** function _readADC *****************
 10833 ;; Defined at:
 10834 ;;		line 289 in file "OBCII_PIC18F46K22.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;		None
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;		None
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  2    2[COMRAM] unsigned int 
 10841 ;; Registers used:
 10842 ;;		wreg, status,2, status,0
 10843 ;; Tracked objects:
 10844 ;;		On entry : 0/0
 10845 ;;		On exit  : 0/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;Total ram usage:        4 bytes
 10853 ;; Hardware stack levels used: 1
 10854 ;; Hardware stack levels required when called: 1
 10855 ;; This function calls:
 10856 ;;		Nothing
 10857 ;; This function is called by:
 10858 ;;		_main_menu
 10859 ;;		_clear_diagnostic_codes
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           	psect	text47
 10864   00352C                     __ptext47:
 10865                           	callstack 0
 10866   00352C                     _readADC:
 10867                           	callstack 28
 10868   00352C                     
 10869                           ;OBCII_PIC18F46K22.c: 290:     ADCON0bits.GO = 1;
 10870   00352C  82C2               	bsf	194,1,c	;volatile
 10871   00352E                     l199:
 10872   00352E  B2C2               	btfsc	194,1,c	;volatile
 10873   003530  EF9C  F01A         	goto	u4561
 10874   003534  EF9E  F01A         	goto	u4560
 10875   003538                     u4561:
 10876   003538  EF97  F01A         	goto	l199
 10877   00353C                     u4560:
 10878   00353C                     
 10879                           ;OBCII_PIC18F46K22.c: 292:     _delay((unsigned long)((10)*(16000000/4000.0)));
 10880   00353C  0E34               	movlw	52
 10881   00353E  6E05               	movwf	??_readADC^0,c
 10882   003540  0EF2               	movlw	242
 10883   003542                     u7227:
 10884   003542  2EE8               	decfsz	wreg,f,c
 10885   003544  D7FE               	bra	u7227
 10886   003546  2E05               	decfsz	??_readADC^0,f,c
 10887   003548  D7FC               	bra	u7227
 10888   00354A                     
 10889                           ;OBCII_PIC18F46K22.c: 293:     return ((ADRESH << 8) | ADRESL);
 10890   00354A  50C3               	movf	195,w,c	;volatile
 10891   00354C  CFC4 F005          	movff	4036,??_readADC	;volatile
 10892   003550  6A06               	clrf	(??_readADC+1)^0,c
 10893   003552  C005  F006         	movff	??_readADC,??_readADC+1
 10894   003556  6A05               	clrf	??_readADC^0,c
 10895   003558  1005               	iorwf	??_readADC^0,w,c
 10896   00355A  6E03               	movwf	?_readADC^0,c
 10897   00355C  5006               	movf	(??_readADC+1)^0,w,c
 10898   00355E  6E04               	movwf	(?_readADC+1)^0,c
 10899   003560  0012               	return		;funcret
 10900   003562                     __end_of_readADC:
 10901                           	callstack 0
 10902                           
 10903 ;; *************** function _parsing_notif *****************
 10904 ;; Defined at:
 10905 ;;		line 303 in file "OBCII_PIC18F46K22.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;		None
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;		None
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;Total ram usage:        0 bytes
 10924 ;; Hardware stack levels used: 1
 10925 ;; Hardware stack levels required when called: 4
 10926 ;; This function calls:
 10927 ;;		_LCD_cursor_set
 10928 ;;		_LCD_write_string
 10929 ;; This function is called by:
 10930 ;;		_print_RPM
 10931 ;;		_print_Vbatt
 10932 ;;		_print_AI_Temp
 10933 ;;		_print_ELMVer
 10934 ;;		_print_SAEVer
 10935 ;;		_diagnostic_trouble_codes
 10936 ;;		_clear_diagnostic_codes
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text48
 10941   003632                     __ptext48:
 10942                           	callstack 0
 10943   003632                     _parsing_notif:
 10944                           	callstack 23
 10945   003632                     
 10946                           ;OBCII_PIC18F46K22.c: 304:     LCD_cursor_set(1,16);
 10947   003632  0E10               	movlw	16
 10948   003634  6E06               	movwf	LCD_cursor_set@column^0,c
 10949   003636  0E01               	movlw	1
 10950   003638  EC42  F019         	call	_LCD_cursor_set
 10951   00363C                     
 10952                           ;OBCII_PIC18F46K22.c: 305:     LCD_write_string("~");
 10953   00363C  0EFC               	movlw	low STR_13
 10954   00363E  6E06               	movwf	LCD_write_string@string^0,c
 10955   003640  0EFF               	movlw	high STR_13
 10956   003642  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10957   003644  ECFC  F017         	call	_LCD_write_string	;wreg free
 10958   003648  0012               	return		;funcret
 10959   00364A                     __end_of_parsing_notif:
 10960                           	callstack 0
 10961                           
 10962 ;; *************** function _display_mm *****************
 10963 ;; Defined at:
 10964 ;;		line 296 in file "OBCII_PIC18F46K22.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;		None
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;		None
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10982 ;;Total ram usage:        0 bytes
 10983 ;; Hardware stack levels used: 1
 10984 ;; Hardware stack levels required when called: 4
 10985 ;; This function calls:
 10986 ;;		_LCD_cursor_set
 10987 ;;		_LCD_write_string
 10988 ;; This function is called by:
 10989 ;;		_main_menu
 10990 ;;		_print_RPM
 10991 ;;		_print_Vbatt
 10992 ;;		_print_AI_Temp
 10993 ;;		_print_ELMVer
 10994 ;;		_print_SAEVer
 10995 ;;		_clear_diagnostic_codes
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           	psect	text49
 11000   003594                     __ptext49:
 11001                           	callstack 0
 11002   003594                     _display_mm:
 11003                           	callstack 23
 11004   003594                     
 11005                           ;OBCII_PIC18F46K22.c: 297:     LCD_cursor_set(1,1);
 11006   003594  0E01               	movlw	1
 11007   003596  6E06               	movwf	LCD_cursor_set@column^0,c
 11008   003598  0E01               	movlw	1
 11009   00359A  EC42  F019         	call	_LCD_cursor_set
 11010   00359E                     
 11011                           ;OBCII_PIC18F46K22.c: 298:     LCD_write_string("MENU  <OBDIIPIC>");
 11012   00359E  0ED5               	movlw	low STR_11
 11013   0035A0  6E06               	movwf	LCD_write_string@string^0,c
 11014   0035A2  0EFE               	movlw	high STR_11
 11015   0035A4  6E07               	movwf	(LCD_write_string@string+1)^0,c
 11016   0035A6  ECFC  F017         	call	_LCD_write_string	;wreg free
 11017   0035AA                     
 11018                           ;OBCII_PIC18F46K22.c: 299:     LCD_cursor_set(2,1);
 11019   0035AA  0E01               	movlw	1
 11020   0035AC  6E06               	movwf	LCD_cursor_set@column^0,c
 11021   0035AE  0E02               	movlw	2
 11022   0035B0  EC42  F019         	call	_LCD_cursor_set
 11023                           
 11024                           ;OBCII_PIC18F46K22.c: 300:     LCD_write_string("LRM DTC CDC DSI");
 11025   0035B4  0EF7               	movlw	low STR_12
 11026   0035B6  6E06               	movwf	LCD_write_string@string^0,c
 11027   0035B8  0EFE               	movlw	high STR_12
 11028   0035BA  6E07               	movwf	(LCD_write_string@string+1)^0,c
 11029   0035BC  ECFC  F017         	call	_LCD_write_string	;wreg free
 11030   0035C0  0012               	return		;funcret
 11031   0035C2                     __end_of_display_mm:
 11032                           	callstack 0
 11033                           
 11034 ;; *************** function _clear_parsing_notif *****************
 11035 ;; Defined at:
 11036 ;;		line 307 in file "OBCII_PIC18F46K22.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;		None
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;		None
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  1    wreg      void 
 11043 ;; Registers used:
 11044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11045 ;; Tracked objects:
 11046 ;;		On entry : 0/0
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;Total ram usage:        0 bytes
 11055 ;; Hardware stack levels used: 1
 11056 ;; Hardware stack levels required when called: 4
 11057 ;; This function calls:
 11058 ;;		_LCD_cursor_set
 11059 ;;		_LCD_write_string
 11060 ;; This function is called by:
 11061 ;;		_print_RPM
 11062 ;;		_print_Vbatt
 11063 ;;		_print_AI_Temp
 11064 ;;		_print_ELMVer
 11065 ;;		_print_SAEVer
 11066 ;;		_diagnostic_trouble_codes
 11067 ;;		_clear_diagnostic_codes
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           	psect	text50
 11072   00364A                     __ptext50:
 11073                           	callstack 0
 11074   00364A                     _clear_parsing_notif:
 11075                           	callstack 23
 11076   00364A                     
 11077                           ;OBCII_PIC18F46K22.c: 308:     LCD_cursor_set(1,16);
 11078   00364A  0E10               	movlw	16
 11079   00364C  6E06               	movwf	LCD_cursor_set@column^0,c
 11080   00364E  0E01               	movlw	1
 11081   003650  EC42  F019         	call	_LCD_cursor_set
 11082   003654                     
 11083                           ;OBCII_PIC18F46K22.c: 309:     LCD_write_string("^");
 11084   003654  0EFA               	movlw	low STR_14
 11085   003656  6E06               	movwf	LCD_write_string@string^0,c
 11086   003658  0EFF               	movlw	high STR_14
 11087   00365A  6E07               	movwf	(LCD_write_string@string+1)^0,c
 11088   00365C  ECFC  F017         	call	_LCD_write_string	;wreg free
 11089   003660  0012               	return		;funcret
 11090   003662                     __end_of_clear_parsing_notif:
 11091                           	callstack 0
 11092                           
 11093 ;; *************** function _LCD_write_string *****************
 11094 ;; Defined at:
 11095 ;;		line 362 in file "LCD.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  string          2    5[COMRAM] PTR unsigned char 
 11098 ;;		 -> STR_50(11), STR_49(16), STR_48(11), STR_47(14), 
 11099 ;;		 -> STR_45(17), STR_44(15), STR_43(14), STR_42(14), 
 11100 ;;		 -> dtc_codes(60), STR_38(11), STR_37(16), STR_35(14), 
 11101 ;;		 -> STR_34(13), STR_33(5), STR_31(4), STR_29(2), 
 11102 ;;		 -> STR_28(4), STR_27(4), air_intake_string(16), STR_23(4), 
 11103 ;;		 -> STR_22(6), STR_21(6), STR_19(4), STR_18(6), 
 11104 ;;		 -> rpm_string(16), STR_14(2), STR_13(2), STR_12(16), 
 11105 ;;		 -> STR_11(17), STR_9(17), STR_8(17), STR_6(17), 
 11106 ;;		 -> STR_3(15), STR_2(17), buffer(256), 
 11107 ;; Auto vars:     Size  Location     Type
 11108 ;;  i               1    9[COMRAM] unsigned char 
 11109 ;; Return value:  Size  Location     Type
 11110 ;;                  1    wreg      void 
 11111 ;; Registers used:
 11112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11113 ;; Tracked objects:
 11114 ;;		On entry : 0/0
 11115 ;;		On exit  : 0/0
 11116 ;;		Unchanged: 0/0
 11117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;Total ram usage:        5 bytes
 11123 ;; Hardware stack levels used: 1
 11124 ;; Hardware stack levels required when called: 3
 11125 ;; This function calls:
 11126 ;;		_LCD_write_data
 11127 ;; This function is called by:
 11128 ;;		_welcome_splash
 11129 ;;		_display_mm
 11130 ;;		_parsing_notif
 11131 ;;		_clear_parsing_notif
 11132 ;;		_print_RPM
 11133 ;;		_print_Vbatt
 11134 ;;		_print_AI_Temp
 11135 ;;		_print_ELMVer
 11136 ;;		_print_SAEVer
 11137 ;;		_display_system_info
 11138 ;;		_diagnostic_trouble_codes
 11139 ;;		_clear_diagnostic_codes
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           	psect	text51
 11144   002FF8                     __ptext51:
 11145                           	callstack 0
 11146   002FF8                     _LCD_write_string:
 11147                           	callstack 26
 11148   002FF8                     
 11149                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
 11150   002FF8  6A0A               	clrf	LCD_write_string@i^0,c
 11151   002FFA  EF19  F018         	goto	l4046
 11152   002FFE                     l4042:
 11153                           
 11154                           ;LCD.c: 366:         LCD_write_data(string[i]);
 11155   002FFE  500A               	movf	LCD_write_string@i^0,w,c
 11156   003000  2406               	addwf	LCD_write_string@string^0,w,c
 11157   003002  6E08               	movwf	??_LCD_write_string^0,c
 11158   003004  0E00               	movlw	0
 11159   003006  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
 11160   003008  6E09               	movwf	(??_LCD_write_string+1)^0,c
 11161   00300A  C008  FFF6         	movff	??_LCD_write_string,tblptrl
 11162   00300E  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
 11163   003012  0E00               	movlw	low (__mediumconst shr (0+16))
 11164   003014  6EF8               	movwf	tblptru,c
 11165   003016  0E0F               	movlw	(high __ramtop+-1)
 11166   003018  64F7               	cpfsgt	tblptrh,c
 11167   00301A  D003               	bra	u4107
 11168   00301C  0008               	tblrd		*
 11169   00301E  50F5               	movf	tablat,w,c
 11170   003020  D005               	bra	u4100
 11171   003022                     u4107:
 11172   003022  CFF6 FFE9          	movff	tblptrl,fsr0l
 11173   003026  CFF7 FFEA          	movff	tblptrh,fsr0h
 11174   00302A  50EF               	movf	indf0,w,c
 11175   00302C                     u4100:
 11176   00302C  EC05  F011         	call	_LCD_write_data
 11177   003030                     
 11178                           ;LCD.c: 367:     }
 11179   003030  2A0A               	incf	LCD_write_string@i^0,f,c
 11180   003032                     l4046:
 11181   003032  500A               	movf	LCD_write_string@i^0,w,c
 11182   003034  2406               	addwf	LCD_write_string@string^0,w,c
 11183   003036  6E08               	movwf	??_LCD_write_string^0,c
 11184   003038  0E00               	movlw	0
 11185   00303A  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
 11186   00303C  6E09               	movwf	(??_LCD_write_string+1)^0,c
 11187   00303E  C008  FFF6         	movff	??_LCD_write_string,tblptrl
 11188   003042  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
 11189   003046  0E00               	movlw	low (__mediumconst shr (0+16))
 11190   003048  6EF8               	movwf	tblptru,c
 11191   00304A  0E0F               	movlw	(high __ramtop+-1)
 11192   00304C  64F7               	cpfsgt	tblptrh,c
 11193   00304E  D003               	bra	u4117
 11194   003050  0008               	tblrd		*
 11195   003052  50F5               	movf	tablat,w,c
 11196   003054  D005               	bra	u4110
 11197   003056                     u4117:
 11198   003056  CFF6 FFE9          	movff	tblptrl,fsr0l
 11199   00305A  CFF7 FFEA          	movff	tblptrh,fsr0h
 11200   00305E  50EF               	movf	indf0,w,c
 11201   003060                     u4110:
 11202   003060  0900               	iorlw	0
 11203   003062  A4D8               	btfss	status,2,c
 11204   003064  EF36  F018         	goto	u4121
 11205   003068  EF38  F018         	goto	u4120
 11206   00306C                     u4121:
 11207   00306C  EFFF  F017         	goto	l4042
 11208   003070                     u4120:
 11209   003070  0012               	return		;funcret
 11210   003072                     __end_of_LCD_write_string:
 11211                           	callstack 0
 11212                           
 11213 ;; *************** function _LCD_write_data *****************
 11214 ;; Defined at:
 11215 ;;		line 74 in file "LCD.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  data            1    wreg     unsigned char 
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;  data            1    4[COMRAM] unsigned char 
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  1    wreg      void 
 11222 ;; Registers used:
 11223 ;;		wreg, status,2, status,0, cstack
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11231 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11232 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11233 ;;Total ram usage:        3 bytes
 11234 ;; Hardware stack levels used: 1
 11235 ;; Hardware stack levels required when called: 2
 11236 ;; This function calls:
 11237 ;;		_LCD_pulse_clock
 11238 ;; This function is called by:
 11239 ;;		_LCD_write_string
 11240 ;;		_LCD_write_variable
 11241 ;;		_LCD_add_character
 11242 ;;		_LCD_write_char
 11243 ;;		_LCD_write_float
 11244 ;; This function uses a non-reentrant model
 11245 ;;
 11246                           
 11247                           	psect	text52
 11248   00220A                     __ptext52:
 11249                           	callstack 0
 11250   00220A                     _LCD_write_data:
 11251                           	callstack 26
 11252                           
 11253                           ;incstack = 0
 11254                           ;LCD_write_data@data stored from wreg
 11255   00220A  6E05               	movwf	LCD_write_data@data^0,c
 11256   00220C                     
 11257                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
 11258   00220C  848C               	bsf	140,2,c	;volatile
 11259   00220E                     
 11260                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
 11261   00220E  6A03               	clrf	??_LCD_write_data^0,c
 11262   002210  AE05               	btfss	LCD_write_data@data^0,7,c
 11263   002212  D001               	bra	u3725
 11264   002214  2A03               	incf	??_LCD_write_data^0,f,c
 11265   002216                     u3725:
 11266   002216  0E01               	movlw	1
 11267   002218  1603               	andwf	??_LCD_write_data^0,f,c
 11268   00221A  3203               	rrcf	??_LCD_write_data^0,f,c
 11269   00221C  3203               	rrcf	??_LCD_write_data^0,f,c
 11270   00221E  508C               	movf	140,w,c	;volatile
 11271   002220  1803               	xorwf	??_LCD_write_data^0,w,c
 11272   002222  0B7F               	andlw	-129
 11273   002224  1803               	xorwf	??_LCD_write_data^0,w,c
 11274   002226  6E8C               	movwf	140,c	;volatile
 11275                           
 11276                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
 11277   002228  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11278   00222C  0E06               	movlw	6
 11279   00222E  6E04               	movwf	(??_LCD_write_data+1)^0,c
 11280   002230                     u3735:
 11281   002230  90D8               	bcf	status,0,c
 11282   002232  3203               	rrcf	??_LCD_write_data^0,f,c
 11283   002234  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
 11284   002236  EF18  F011         	goto	u3735
 11285   00223A  0E01               	movlw	1
 11286   00223C  1603               	andwf	??_LCD_write_data^0,f,c
 11287   00223E  3A03               	swapf	??_LCD_write_data^0,f,c
 11288   002240  4603               	rlncf	??_LCD_write_data^0,f,c
 11289   002242  4603               	rlncf	??_LCD_write_data^0,f,c
 11290   002244  508C               	movf	140,w,c	;volatile
 11291   002246  1803               	xorwf	??_LCD_write_data^0,w,c
 11292   002248  0BBF               	andlw	-65
 11293   00224A  1803               	xorwf	??_LCD_write_data^0,w,c
 11294   00224C  6E8C               	movwf	140,c	;volatile
 11295                           
 11296                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
 11297   00224E  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11298   002252  0E05               	movlw	5
 11299   002254  6E04               	movwf	(??_LCD_write_data+1)^0,c
 11300   002256                     u3745:
 11301   002256  90D8               	bcf	status,0,c
 11302   002258  3203               	rrcf	??_LCD_write_data^0,f,c
 11303   00225A  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
 11304   00225C  EF2B  F011         	goto	u3745
 11305   002260  0E01               	movlw	1
 11306   002262  1603               	andwf	??_LCD_write_data^0,f,c
 11307   002264  3A03               	swapf	??_LCD_write_data^0,f,c
 11308   002266  4603               	rlncf	??_LCD_write_data^0,f,c
 11309   002268  508C               	movf	140,w,c	;volatile
 11310   00226A  1803               	xorwf	??_LCD_write_data^0,w,c
 11311   00226C  0BDF               	andlw	-33
 11312   00226E  1803               	xorwf	??_LCD_write_data^0,w,c
 11313   002270  6E8C               	movwf	140,c	;volatile
 11314                           
 11315                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
 11316   002272  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11317   002276  3A03               	swapf	??_LCD_write_data^0,f,c
 11318   002278  0E0F               	movlw	15
 11319   00227A  1603               	andwf	??_LCD_write_data^0,f,c
 11320   00227C  0E01               	movlw	1
 11321   00227E  1603               	andwf	??_LCD_write_data^0,f,c
 11322   002280  3A03               	swapf	??_LCD_write_data^0,f,c
 11323   002282  508C               	movf	140,w,c	;volatile
 11324   002284  1803               	xorwf	??_LCD_write_data^0,w,c
 11325   002286  0BEF               	andlw	-17
 11326   002288  1803               	xorwf	??_LCD_write_data^0,w,c
 11327   00228A  6E8C               	movwf	140,c	;volatile
 11328   00228C                     
 11329                           ;LCD.c: 85:     LCD_pulse_clock();
 11330   00228C  EC5C  F01B         	call	_LCD_pulse_clock	;wreg free
 11331   002290                     
 11332                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
 11333   002290  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11334   002294  90D8               	bcf	status,0,c
 11335   002296  3203               	rrcf	??_LCD_write_data^0,f,c
 11336   002298  90D8               	bcf	status,0,c
 11337   00229A  3203               	rrcf	??_LCD_write_data^0,f,c
 11338   00229C  90D8               	bcf	status,0,c
 11339   00229E  3203               	rrcf	??_LCD_write_data^0,f,c
 11340   0022A0  0E01               	movlw	1
 11341   0022A2  1603               	andwf	??_LCD_write_data^0,f,c
 11342   0022A4  3203               	rrcf	??_LCD_write_data^0,f,c
 11343   0022A6  3203               	rrcf	??_LCD_write_data^0,f,c
 11344   0022A8  508C               	movf	140,w,c	;volatile
 11345   0022AA  1803               	xorwf	??_LCD_write_data^0,w,c
 11346   0022AC  0B7F               	andlw	-129
 11347   0022AE  1803               	xorwf	??_LCD_write_data^0,w,c
 11348   0022B0  6E8C               	movwf	140,c	;volatile
 11349   0022B2                     
 11350                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
 11351   0022B2  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11352   0022B6  90D8               	bcf	status,0,c
 11353   0022B8  3203               	rrcf	??_LCD_write_data^0,f,c
 11354   0022BA  90D8               	bcf	status,0,c
 11355   0022BC  3203               	rrcf	??_LCD_write_data^0,f,c
 11356   0022BE  0E01               	movlw	1
 11357   0022C0  1603               	andwf	??_LCD_write_data^0,f,c
 11358   0022C2  3A03               	swapf	??_LCD_write_data^0,f,c
 11359   0022C4  4603               	rlncf	??_LCD_write_data^0,f,c
 11360   0022C6  4603               	rlncf	??_LCD_write_data^0,f,c
 11361   0022C8  508C               	movf	140,w,c	;volatile
 11362   0022CA  1803               	xorwf	??_LCD_write_data^0,w,c
 11363   0022CC  0BBF               	andlw	-65
 11364   0022CE  1803               	xorwf	??_LCD_write_data^0,w,c
 11365   0022D0  6E8C               	movwf	140,c	;volatile
 11366   0022D2                     
 11367                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
 11368   0022D2  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11369   0022D6  90D8               	bcf	status,0,c
 11370   0022D8  3203               	rrcf	??_LCD_write_data^0,f,c
 11371   0022DA  0E01               	movlw	1
 11372   0022DC  1603               	andwf	??_LCD_write_data^0,f,c
 11373   0022DE  3A03               	swapf	??_LCD_write_data^0,f,c
 11374   0022E0  4603               	rlncf	??_LCD_write_data^0,f,c
 11375   0022E2  508C               	movf	140,w,c	;volatile
 11376   0022E4  1803               	xorwf	??_LCD_write_data^0,w,c
 11377   0022E6  0BDF               	andlw	-33
 11378   0022E8  1803               	xorwf	??_LCD_write_data^0,w,c
 11379   0022EA  6E8C               	movwf	140,c	;volatile
 11380   0022EC                     
 11381                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
 11382   0022EC  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11383   0022F0  0E01               	movlw	1
 11384   0022F2  1603               	andwf	??_LCD_write_data^0,f,c
 11385   0022F4  3A03               	swapf	??_LCD_write_data^0,f,c
 11386   0022F6  508C               	movf	140,w,c	;volatile
 11387   0022F8  1803               	xorwf	??_LCD_write_data^0,w,c
 11388   0022FA  0BEF               	andlw	-17
 11389   0022FC  1803               	xorwf	??_LCD_write_data^0,w,c
 11390   0022FE  6E8C               	movwf	140,c	;volatile
 11391   002300                     
 11392                           ;LCD.c: 94:     LCD_pulse_clock();
 11393   002300  EC5C  F01B         	call	_LCD_pulse_clock	;wreg free
 11394   002304  0012               	return		;funcret
 11395   002306                     __end_of_LCD_write_data:
 11396                           	callstack 0
 11397                           
 11398 ;; *************** function _LCD_cursor_set *****************
 11399 ;; Defined at:
 11400 ;;		line 159 in file "LCD.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;  row             1    wreg     unsigned char 
 11403 ;;  column          1    5[COMRAM] unsigned char 
 11404 ;; Auto vars:     Size  Location     Type
 11405 ;;  row             1    6[COMRAM] unsigned char 
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  1    wreg      void 
 11408 ;; Registers used:
 11409 ;;		wreg, status,2, status,0, cstack
 11410 ;; Tracked objects:
 11411 ;;		On entry : 0/0
 11412 ;;		On exit  : 0/0
 11413 ;;		Unchanged: 0/0
 11414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11415 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;Total ram usage:        2 bytes
 11420 ;; Hardware stack levels used: 1
 11421 ;; Hardware stack levels required when called: 3
 11422 ;; This function calls:
 11423 ;;		_LCD_write_command
 11424 ;; This function is called by:
 11425 ;;		_welcome_splash
 11426 ;;		_display_mm
 11427 ;;		_parsing_notif
 11428 ;;		_clear_parsing_notif
 11429 ;;		_main_menu
 11430 ;;		_print_RPM
 11431 ;;		_print_Vbatt
 11432 ;;		_print_AI_Temp
 11433 ;;		_print_ELMVer
 11434 ;;		_print_SAEVer
 11435 ;;		_display_system_info
 11436 ;;		_diagnostic_trouble_codes
 11437 ;;		_clear_diagnostic_codes
 11438 ;;		_LCD_add_character
 11439 ;; This function uses a non-reentrant model
 11440 ;;
 11441                           
 11442                           	psect	text53
 11443   003284                     __ptext53:
 11444                           	callstack 0
 11445   003284                     _LCD_cursor_set:
 11446                           	callstack 26
 11447                           
 11448                           ;incstack = 0
 11449                           ;LCD_cursor_set@row stored from wreg
 11450   003284  6E07               	movwf	LCD_cursor_set@row^0,c
 11451   003286                     
 11452                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
 11453   003286  0407               	decf	LCD_cursor_set@row^0,w,c
 11454   003288  A4D8               	btfss	status,2,c
 11455   00328A  EF49  F019         	goto	u4061
 11456   00328E  EF4B  F019         	goto	u4060
 11457   003292                     u4061:
 11458   003292  EF4D  F019         	goto	l418
 11459   003296                     u4060:
 11460   003296  0E7F               	movlw	127
 11461   003298  2606               	addwf	LCD_cursor_set@column^0,f,c
 11462   00329A                     l418:
 11463                           
 11464                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
 11465   00329A  0E02               	movlw	2
 11466   00329C  1807               	xorwf	LCD_cursor_set@row^0,w,c
 11467   00329E  A4D8               	btfss	status,2,c
 11468   0032A0  EF54  F019         	goto	u4071
 11469   0032A4  EF56  F019         	goto	u4070
 11470   0032A8                     u4071:
 11471   0032A8  EF58  F019         	goto	l419
 11472   0032AC                     u4070:
 11473   0032AC  0EBF               	movlw	191
 11474   0032AE  2606               	addwf	LCD_cursor_set@column^0,f,c
 11475   0032B0                     l419:
 11476                           
 11477                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
 11478   0032B0  0E03               	movlw	3
 11479   0032B2  1807               	xorwf	LCD_cursor_set@row^0,w,c
 11480   0032B4  A4D8               	btfss	status,2,c
 11481   0032B6  EF5F  F019         	goto	u4081
 11482   0032BA  EF61  F019         	goto	u4080
 11483   0032BE                     u4081:
 11484   0032BE  EF63  F019         	goto	l420
 11485   0032C2                     u4080:
 11486   0032C2  0E93               	movlw	147
 11487   0032C4  2606               	addwf	LCD_cursor_set@column^0,f,c
 11488   0032C6                     l420:
 11489                           
 11490                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
 11491   0032C6  0E04               	movlw	4
 11492   0032C8  1807               	xorwf	LCD_cursor_set@row^0,w,c
 11493   0032CA  A4D8               	btfss	status,2,c
 11494   0032CC  EF6A  F019         	goto	u4091
 11495   0032D0  EF6C  F019         	goto	u4090
 11496   0032D4                     u4091:
 11497   0032D4  EF6E  F019         	goto	l4038
 11498   0032D8                     u4090:
 11499   0032D8  0ED3               	movlw	211
 11500   0032DA  2606               	addwf	LCD_cursor_set@column^0,f,c
 11501   0032DC                     l4038:
 11502                           
 11503                           ;LCD.c: 168:    LCD_write_command(column);
 11504   0032DC  5006               	movf	LCD_cursor_set@column^0,w,c
 11505   0032DE  EC83  F011         	call	_LCD_write_command
 11506   0032E2  0012               	return		;funcret
 11507   0032E4                     __end_of_LCD_cursor_set:
 11508                           	callstack 0
 11509                           
 11510 ;; *************** function _UART1_SendString *****************
 11511 ;; Defined at:
 11512 ;;		line 181 in file "OBCII_PIC18F46K22.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;  string          2    3[COMRAM] PTR unsigned char 
 11515 ;;		 -> STR_46(4), STR_39(4), STR_32(6), STR_30(5), 
 11516 ;;		 -> STR_24(6), STR_20(6), STR_15(6), STR_10(6), 
 11517 ;;		 -> STR_7(5), STR_5(5), STR_4(6), STR_1(6), 
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;  i               2    7[COMRAM] unsigned int 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      void 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;Total ram usage:        6 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 2
 11536 ;; This function calls:
 11537 ;;		_UART1_SendChar
 11538 ;; This function is called by:
 11539 ;;		_main
 11540 ;;		_welcome_splash
 11541 ;;		_print_RPM
 11542 ;;		_print_Vbatt
 11543 ;;		_print_AI_Temp
 11544 ;;		_print_ELMVer
 11545 ;;		_print_SAEVer
 11546 ;;		_diagnostic_trouble_codes
 11547 ;;		_clear_diagnostic_codes
 11548 ;; This function uses a non-reentrant model
 11549 ;;
 11550                           
 11551                           	psect	text54
 11552   003342                     __ptext54:
 11553                           	callstack 0
 11554   003342                     _UART1_SendString:
 11555                           	callstack 27
 11556   003342                     
 11557                           ;OBCII_PIC18F46K22.c: 182:     for (unsigned int i = 0; string[i] != '\0'; i++){
 11558   003342  0E00               	movlw	0
 11559   003344  6E09               	movwf	(UART1_SendString@i+1)^0,c
 11560   003346  0E00               	movlw	0
 11561   003348  6E08               	movwf	UART1_SendString@i^0,c
 11562   00334A  EFB7  F019         	goto	l4210
 11563   00334E                     l4206:
 11564                           
 11565                           ;OBCII_PIC18F46K22.c: 183:         UART1_SendChar(string[i]);
 11566   00334E  5008               	movf	UART1_SendString@i^0,w,c
 11567   003350  2404               	addwf	UART1_SendString@string^0,w,c
 11568   003352  6E06               	movwf	??_UART1_SendString^0,c
 11569   003354  5009               	movf	(UART1_SendString@i+1)^0,w,c
 11570   003356  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
 11571   003358  6E07               	movwf	(??_UART1_SendString+1)^0,c
 11572   00335A  C006  FFF6         	movff	??_UART1_SendString,tblptrl
 11573   00335E  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
 11574   003362                     	if	0	;tblptru may be non-zero
 11575   003362                     	endif
 11576   003362                     	if	0	;tblptru may be non-zero
 11577   003362                     	endif
 11578   003362  0008               	tblrd		*
 11579   003364  50F5               	movf	tablat,w,c
 11580   003366  EC31  F01B         	call	_UART1_SendChar
 11581   00336A                     
 11582                           ;OBCII_PIC18F46K22.c: 184:     }
 11583   00336A  4A08               	infsnz	UART1_SendString@i^0,f,c
 11584   00336C  2A09               	incf	(UART1_SendString@i+1)^0,f,c
 11585   00336E                     l4210:
 11586   00336E  5008               	movf	UART1_SendString@i^0,w,c
 11587   003370  2404               	addwf	UART1_SendString@string^0,w,c
 11588   003372  6E06               	movwf	??_UART1_SendString^0,c
 11589   003374  5009               	movf	(UART1_SendString@i+1)^0,w,c
 11590   003376  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
 11591   003378  6E07               	movwf	(??_UART1_SendString+1)^0,c
 11592   00337A  C006  FFF6         	movff	??_UART1_SendString,tblptrl
 11593   00337E  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
 11594   003382                     	if	0	;tblptru may be non-zero
 11595   003382                     	endif
 11596   003382                     	if	0	;tblptru may be non-zero
 11597   003382                     	endif
 11598   003382  0008               	tblrd		*
 11599   003384  50F5               	movf	tablat,w,c
 11600   003386  0900               	iorlw	0
 11601   003388  A4D8               	btfss	status,2,c
 11602   00338A  EFC9  F019         	goto	u4411
 11603   00338E  EFCB  F019         	goto	u4410
 11604   003392                     u4411:
 11605   003392  EFA7  F019         	goto	l4206
 11606   003396                     u4410:
 11607   003396  0012               	return		;funcret
 11608   003398                     __end_of_UART1_SendString:
 11609                           	callstack 0
 11610                           
 11611 ;; *************** function _UART1_SendChar *****************
 11612 ;; Defined at:
 11613 ;;		line 187 in file "OBCII_PIC18F46K22.c"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  c               1    wreg     unsigned char 
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;  c               1    2[COMRAM] unsigned char 
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  1    wreg      void 
 11620 ;; Registers used:
 11621 ;;		wreg
 11622 ;; Tracked objects:
 11623 ;;		On entry : 0/0
 11624 ;;		On exit  : 0/0
 11625 ;;		Unchanged: 0/0
 11626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11631 ;;Total ram usage:        1 bytes
 11632 ;; Hardware stack levels used: 1
 11633 ;; Hardware stack levels required when called: 1
 11634 ;; This function calls:
 11635 ;;		Nothing
 11636 ;; This function is called by:
 11637 ;;		_UART1_SendString
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641                           	psect	text55
 11642   003662                     __ptext55:
 11643                           	callstack 0
 11644   003662                     _UART1_SendChar:
 11645                           	callstack 27
 11646                           
 11647                           ;incstack = 0
 11648                           ;UART1_SendChar@c stored from wreg
 11649   003662  6E03               	movwf	UART1_SendChar@c^0,c
 11650   003664                     l175:
 11651   003664  A2AC               	btfss	172,1,c	;volatile
 11652   003666  EF37  F01B         	goto	u4051
 11653   00366A  EF39  F01B         	goto	u4050
 11654   00366E                     u4051:
 11655   00366E  EF32  F01B         	goto	l175
 11656   003672                     u4050:
 11657   003672                     
 11658                           ;OBCII_PIC18F46K22.c: 189:         TXREG = c;
 11659   003672  C003  FFAD         	movff	UART1_SendChar@c,4013	;volatile
 11660   003676  0012               	return		;funcret
 11661   003678                     __end_of_UART1_SendChar:
 11662                           	callstack 0
 11663                           
 11664 ;; *************** function _LCD_configure_cursor_blink *****************
 11665 ;; Defined at:
 11666 ;;		line 231 in file "LCD.c"
 11667 ;; Parameters:    Size  Location     Type
 11668 ;;  state           1    wreg     unsigned char 
 11669 ;; Auto vars:     Size  Location     Type
 11670 ;;  state           1    5[COMRAM] unsigned char 
 11671 ;; Return value:  Size  Location     Type
 11672 ;;                  1    wreg      void 
 11673 ;; Registers used:
 11674 ;;		wreg, status,2, status,0, cstack
 11675 ;; Tracked objects:
 11676 ;;		On entry : 0/0
 11677 ;;		On exit  : 0/0
 11678 ;;		Unchanged: 0/0
 11679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11684 ;;Total ram usage:        1 bytes
 11685 ;; Hardware stack levels used: 1
 11686 ;; Hardware stack levels required when called: 3
 11687 ;; This function calls:
 11688 ;;		_LCD_write_command
 11689 ;; This function is called by:
 11690 ;;		_main_menu
 11691 ;;		_clear_diagnostic_codes
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           
 11695                           	psect	text56
 11696   0035EE                     __ptext56:
 11697                           	callstack 0
 11698   0035EE                     _LCD_configure_cursor_blink:
 11699                           	callstack 25
 11700                           
 11701                           ;incstack = 0
 11702                           ;LCD_configure_cursor_blink@state stored from wreg
 11703   0035EE  6E06               	movwf	LCD_configure_cursor_blink@state^0,c
 11704   0035F0                     
 11705                           ;LCD.c: 234:     if(state){
 11706   0035F0  5006               	movf	LCD_configure_cursor_blink@state^0,w,c
 11707   0035F2  B4D8               	btfsc	status,2,c
 11708   0035F4  EFFE  F01A         	goto	u4571
 11709   0035F8  EF00  F01B         	goto	u4570
 11710   0035FC                     u4571:
 11711   0035FC  EF04  F01B         	goto	l4322
 11712   003600                     u4570:
 11713   003600                     
 11714                           ;LCD.c: 235:         LCD_display_control |= 0b00000001;
 11715   003600  0100               	movlb	0	; () banked
 11716   003602  81F6               	bsf	_LCD_display_control& (0+255),0,b
 11717                           
 11718                           ;LCD.c: 236:     }
 11719   003604  EF06  F01B         	goto	l4324
 11720   003608                     l4322:
 11721                           
 11722                           ;LCD.c: 238:         LCD_display_control &= 0b11111110;
 11723   003608  0100               	movlb	0	; () banked
 11724   00360A  91F6               	bcf	_LCD_display_control& (0+255),0,b
 11725   00360C                     l4324:
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;LCD.c: 242:     LCD_write_command(LCD_display_control);
 11729   00360C  51F6               	movf	_LCD_display_control& (0+255),w,b
 11730   00360E  EC83  F011         	call	_LCD_write_command
 11731   003612  0012               	return		;funcret
 11732   003614                     __end_of_LCD_configure_cursor_blink:
 11733                           	callstack 0
 11734                           
 11735 ;; *************** function _input_init *****************
 11736 ;; Defined at:
 11737 ;;		line 97 in file "OBCII_PIC18F46K22.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;		None
 11740 ;; Auto vars:     Size  Location     Type
 11741 ;;		None
 11742 ;; Return value:  Size  Location     Type
 11743 ;;                  1    wreg      void 
 11744 ;; Registers used:
 11745 ;;		None
 11746 ;; Tracked objects:
 11747 ;;		On entry : 0/0
 11748 ;;		On exit  : 0/0
 11749 ;;		Unchanged: 0/0
 11750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11755 ;;Total ram usage:        0 bytes
 11756 ;; Hardware stack levels used: 1
 11757 ;; Hardware stack levels required when called: 1
 11758 ;; This function calls:
 11759 ;;		Nothing
 11760 ;; This function is called by:
 11761 ;;		_main
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           	psect	text57
 11766   00369A                     __ptext57:
 11767                           	callstack 0
 11768   00369A                     _input_init:
 11769                           	callstack 29
 11770   00369A                     
 11771                           ;OBCII_PIC18F46K22.c: 100:     TRISBbits.TRISB4 = 1;
 11772   00369A  8893               	bsf	147,4,c	;volatile
 11773                           
 11774                           ;OBCII_PIC18F46K22.c: 101:     ANSELBbits.ANSB4 = 0;
 11775   00369C  010F               	movlb	15	; () banked
 11776   00369E  9939               	bcf	57,4,b	;volatile
 11777                           
 11778                           ;OBCII_PIC18F46K22.c: 103:     TRISCbits.TRISC5 = 1;
 11779   0036A0  8A94               	bsf	148,5,c	;volatile
 11780                           
 11781                           ;OBCII_PIC18F46K22.c: 104:     ANSELCbits.ANSC5 = 0;
 11782   0036A2  9B3A               	bcf	58,5,b	;volatile
 11783                           
 11784                           ;OBCII_PIC18F46K22.c: 106:     TRISAbits.TRISA0 = 1;
 11785   0036A4  8092               	bsf	146,0,c	;volatile
 11786                           
 11787                           ;OBCII_PIC18F46K22.c: 107:     ANSELAbits.ANSA0 = 1;
 11788   0036A6  8138               	bsf	56,0,b	;volatile
 11789   0036A8                     
 11790                           ; BSR set to: 15
 11791   0036A8  0012               	return		;funcret
 11792   0036AA                     __end_of_input_init:
 11793                           	callstack 0
 11794                           
 11795 ;; *************** function _UART1_Init *****************
 11796 ;; Defined at:
 11797 ;;		line 119 in file "OBCII_PIC18F46K22.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;		None
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;		None
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  1    wreg      void 
 11804 ;; Registers used:
 11805 ;;		wreg, status,2
 11806 ;; Tracked objects:
 11807 ;;		On entry : 0/0
 11808 ;;		On exit  : 0/0
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11815 ;;Total ram usage:        0 bytes
 11816 ;; Hardware stack levels used: 1
 11817 ;; Hardware stack levels required when called: 1
 11818 ;; This function calls:
 11819 ;;		Nothing
 11820 ;; This function is called by:
 11821 ;;		_main
 11822 ;; This function uses a non-reentrant model
 11823 ;;
 11824                           
 11825                           	psect	text58
 11826   0035C2                     __ptext58:
 11827                           	callstack 0
 11828   0035C2                     _UART1_Init:
 11829                           	callstack 29
 11830   0035C2                     
 11831                           ;OBCII_PIC18F46K22.c: 120:     ANSELC = 0;
 11832   0035C2  010F               	movlb	15	; () banked
 11833   0035C4  6B3A               	clrf	58,b	;volatile
 11834                           
 11835                           ;OBCII_PIC18F46K22.c: 123:     TRISCbits.TRISC6 = 0;
 11836   0035C6  9C94               	bcf	148,6,c	;volatile
 11837                           
 11838                           ;OBCII_PIC18F46K22.c: 124:     TRISCbits.TRISC7 = 1;
 11839   0035C8  8E94               	bsf	148,7,c	;volatile
 11840                           
 11841                           ;OBCII_PIC18F46K22.c: 128:     TXSTA1bits.TXEN = 1;
 11842   0035CA  8AAC               	bsf	172,5,c	;volatile
 11843                           
 11844                           ;OBCII_PIC18F46K22.c: 129:     TXSTA1bits.TX9 = 0;
 11845   0035CC  9CAC               	bcf	172,6,c	;volatile
 11846                           
 11847                           ;OBCII_PIC18F46K22.c: 130:     TXSTA1bits.SYNC = 0;
 11848   0035CE  98AC               	bcf	172,4,c	;volatile
 11849                           
 11850                           ;OBCII_PIC18F46K22.c: 133:     TXSTA1bits.BRGH = 1;
 11851   0035D0  84AC               	bsf	172,2,c	;volatile
 11852                           
 11853                           ;OBCII_PIC18F46K22.c: 134:     BAUDCON1bits.BRG16 = 1;
 11854   0035D2  86B8               	bsf	184,3,c	;volatile
 11855   0035D4                     
 11856                           ; BSR set to: 15
 11857                           ;OBCII_PIC18F46K22.c: 137:     SPBRGH1 = 0b00000001;
 11858   0035D4  0E01               	movlw	1
 11859   0035D6  6EB0               	movwf	176,c	;volatile
 11860                           
 11861                           ;OBCII_PIC18F46K22.c: 138:     SPBRG1 = 0b10100000;
 11862   0035D8  0EA0               	movlw	160
 11863   0035DA  6EAF               	movwf	175,c	;volatile
 11864   0035DC                     
 11865                           ; BSR set to: 15
 11866                           ;OBCII_PIC18F46K22.c: 141:     BAUDCON1bits.CKTXP = 0;
 11867   0035DC  98B8               	bcf	184,4,c	;volatile
 11868   0035DE                     
 11869                           ; BSR set to: 15
 11870                           ;OBCII_PIC18F46K22.c: 142:     BAUDCON1bits.DTRXP = 0;
 11871   0035DE  9AB8               	bcf	184,5,c	;volatile
 11872   0035E0                     
 11873                           ; BSR set to: 15
 11874                           ;OBCII_PIC18F46K22.c: 145:     RCSTA1bits.SPEN = 1;
 11875   0035E0  8EAB               	bsf	171,7,c	;volatile
 11876   0035E2                     
 11877                           ; BSR set to: 15
 11878                           ;OBCII_PIC18F46K22.c: 146:     RCSTA1bits.CREN = 1;
 11879   0035E2  88AB               	bsf	171,4,c	;volatile
 11880   0035E4                     
 11881                           ; BSR set to: 15
 11882                           ;OBCII_PIC18F46K22.c: 147:     RCSTA1bits.RX9 = 0;
 11883   0035E4  9CAB               	bcf	171,6,c	;volatile
 11884   0035E6                     
 11885                           ; BSR set to: 15
 11886                           ;OBCII_PIC18F46K22.c: 150:     PIE1bits.RC1IE = 1;
 11887   0035E6  8A9D               	bsf	157,5,c	;volatile
 11888   0035E8                     
 11889                           ; BSR set to: 15
 11890                           ;OBCII_PIC18F46K22.c: 151:     INTCONbits.PEIE = 1;
 11891   0035E8  8CF2               	bsf	242,6,c	;volatile
 11892   0035EA                     
 11893                           ; BSR set to: 15
 11894                           ;OBCII_PIC18F46K22.c: 152:     INTCONbits.GIE = 1;
 11895   0035EA  8EF2               	bsf	242,7,c	;volatile
 11896   0035EC                     
 11897                           ; BSR set to: 15
 11898   0035EC  0012               	return		;funcret
 11899   0035EE                     __end_of_UART1_Init:
 11900                           	callstack 0
 11901                           
 11902 ;; *************** function _LCD_init *****************
 11903 ;; Defined at:
 11904 ;;		line 106 in file "LCD.c"
 11905 ;; Parameters:    Size  Location     Type
 11906 ;;		None
 11907 ;; Auto vars:     Size  Location     Type
 11908 ;;		None
 11909 ;; Return value:  Size  Location     Type
 11910 ;;                  1    wreg      void 
 11911 ;; Registers used:
 11912 ;;		wreg, status,2, status,0, cstack
 11913 ;; Tracked objects:
 11914 ;;		On entry : 0/0
 11915 ;;		On exit  : 0/0
 11916 ;;		Unchanged: 0/0
 11917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11922 ;;Total ram usage:        2 bytes
 11923 ;; Hardware stack levels used: 1
 11924 ;; Hardware stack levels required when called: 4
 11925 ;; This function calls:
 11926 ;;		_LCD_clear
 11927 ;;		_LCD_pulse_clock
 11928 ;;		_LCD_write_command
 11929 ;; This function is called by:
 11930 ;;		_main
 11931 ;; This function uses a non-reentrant model
 11932 ;;
 11933                           
 11934                           	psect	text59
 11935   002EFA                     __ptext59:
 11936                           	callstack 0
 11937   002EFA                     _LCD_init:
 11938                           	callstack 26
 11939   002EFA                     
 11940                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
 11941   002EFA  9495               	bcf	149,2,c	;volatile
 11942   002EFC  948C               	bcf	140,2,c	;volatile
 11943                           
 11944                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
 11945   002EFE  9695               	bcf	149,3,c	;volatile
 11946   002F00  968C               	bcf	140,3,c	;volatile
 11947                           
 11948                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
 11949   002F02  9895               	bcf	149,4,c	;volatile
 11950   002F04  988C               	bcf	140,4,c	;volatile
 11951                           
 11952                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
 11953   002F06  9A95               	bcf	149,5,c	;volatile
 11954   002F08  9A8C               	bcf	140,5,c	;volatile
 11955                           
 11956                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
 11957   002F0A  9C95               	bcf	149,6,c	;volatile
 11958   002F0C  9C8C               	bcf	140,6,c	;volatile
 11959                           
 11960                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
 11961   002F0E  9E95               	bcf	149,7,c	;volatile
 11962   002F10  9E8C               	bcf	140,7,c	;volatile
 11963   002F12                     
 11964                           ;LCD.c: 121:     _delay((unsigned long)((60)*(16000000/4000.0)));
 11965   002F12  0E02               	movlw	2
 11966   002F14  6E08               	movwf	(??_LCD_init+1)^0,c
 11967   002F16  0E38               	movlw	56
 11968   002F18  6E07               	movwf	??_LCD_init^0,c
 11969   002F1A  0EAD               	movlw	173
 11970   002F1C                     u7237:
 11971   002F1C  2EE8               	decfsz	wreg,f,c
 11972   002F1E  D7FE               	bra	u7237
 11973   002F20  2E07               	decfsz	??_LCD_init^0,f,c
 11974   002F22  D7FC               	bra	u7237
 11975   002F24  2E08               	decfsz	(??_LCD_init+1)^0,f,c
 11976   002F26  D7FA               	bra	u7237
 11977   002F28  0000               	nop	
 11978   002F2A                     
 11979                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
 11980   002F2A  9E8C               	bcf	140,7,c	;volatile
 11981   002F2C  9C8C               	bcf	140,6,c	;volatile
 11982   002F2E  8A8C               	bsf	140,5,c	;volatile
 11983   002F30  888C               	bsf	140,4,c	;volatile
 11984   002F32                     
 11985                           ;LCD.c: 127:     LCD_pulse_clock();
 11986   002F32  EC5C  F01B         	call	_LCD_pulse_clock	;wreg free
 11987   002F36                     
 11988                           ;LCD.c: 130:     _delay((unsigned long)((6)*(16000000/4000.0)));
 11989   002F36  0E20               	movlw	32
 11990   002F38  6E07               	movwf	??_LCD_init^0,c
 11991   002F3A  0E2A               	movlw	42
 11992   002F3C                     u7247:
 11993   002F3C  2EE8               	decfsz	wreg,f,c
 11994   002F3E  D7FE               	bra	u7247
 11995   002F40  2E07               	decfsz	??_LCD_init^0,f,c
 11996   002F42  D7FC               	bra	u7247
 11997                           
 11998                           ;LCD.c: 133:     LCD_pulse_clock();
 11999   002F44  EC5C  F01B         	call	_LCD_pulse_clock	;wreg free
 12000   002F48                     
 12001                           ;LCD.c: 136:     _delay((unsigned long)((150)*(16000000/4000000.0)));
 12002   002F48  0EC8               	movlw	200
 12003   002F4A                     u7257:
 12004   002F4A  2EE8               	decfsz	wreg,f,c
 12005   002F4C  D7FE               	bra	u7257
 12006   002F4E                     
 12007                           ;LCD.c: 139:     LCD_pulse_clock();
 12008   002F4E  EC5C  F01B         	call	_LCD_pulse_clock	;wreg free
 12009   002F52                     
 12010                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
 12011   002F52  9E8C               	bcf	140,7,c	;volatile
 12012   002F54  9C8C               	bcf	140,6,c	;volatile
 12013   002F56  8A8C               	bsf	140,5,c	;volatile
 12014   002F58  988C               	bcf	140,4,c	;volatile
 12015   002F5A                     
 12016                           ;LCD.c: 145:     LCD_pulse_clock();
 12017   002F5A  EC5C  F01B         	call	_LCD_pulse_clock	;wreg free
 12018   002F5E                     
 12019                           ;LCD.c: 148:     LCD_write_command(0x28);
 12020   002F5E  0E28               	movlw	40
 12021   002F60  EC83  F011         	call	_LCD_write_command
 12022   002F64                     
 12023                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
 12024   002F64  0100               	movlb	0	; () banked
 12025   002F66  51F6               	movf	_LCD_display_control& (0+255),w,b
 12026   002F68  EC83  F011         	call	_LCD_write_command
 12027   002F6C                     
 12028                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
 12029   002F6C  0100               	movlb	0	; () banked
 12030   002F6E  51F5               	movf	_LCD_entry_mode& (0+255),w,b
 12031   002F70  EC83  F011         	call	_LCD_write_command
 12032   002F74                     
 12033                           ;LCD.c: 151:     LCD_clear();
 12034   002F74  EC0A  F01B         	call	_LCD_clear	;wreg free
 12035   002F78  0012               	return		;funcret
 12036   002F7A                     __end_of_LCD_init:
 12037                           	callstack 0
 12038                           
 12039 ;; *************** function _LCD_clear *****************
 12040 ;; Defined at:
 12041 ;;		line 248 in file "LCD.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;		None
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;		None
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		wreg, status,2, status,0, cstack
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12059 ;;Total ram usage:        1 bytes
 12060 ;; Hardware stack levels used: 1
 12061 ;; Hardware stack levels required when called: 3
 12062 ;; This function calls:
 12063 ;;		_LCD_write_command
 12064 ;; This function is called by:
 12065 ;;		_main
 12066 ;;		_welcome_splash
 12067 ;;		_main_menu
 12068 ;;		_print_RPM
 12069 ;;		_print_Vbatt
 12070 ;;		_print_AI_Temp
 12071 ;;		_print_ELMVer
 12072 ;;		_print_SAEVer
 12073 ;;		_diagnostic_trouble_codes
 12074 ;;		_clear_diagnostic_codes
 12075 ;;		_LCD_init
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           	psect	text60
 12080   003614                     __ptext60:
 12081                           	callstack 0
 12082   003614                     _LCD_clear:
 12083                           	callstack 26
 12084   003614                     
 12085                           ;LCD.c: 251:     LCD_write_command(0x01);
 12086   003614  0E01               	movlw	1
 12087   003616  EC83  F011         	call	_LCD_write_command
 12088   00361A                     
 12089                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(16000000/4000000.0)));
 12090   00361A  0E0C               	movlw	12
 12091   00361C  6E06               	movwf	??_LCD_clear^0,c
 12092   00361E  0EA2               	movlw	162
 12093   003620                     u7267:
 12094   003620  2EE8               	decfsz	wreg,f,c
 12095   003622  D7FE               	bra	u7267
 12096   003624  2E06               	decfsz	??_LCD_clear^0,f,c
 12097   003626  D7FC               	bra	u7267
 12098   003628                     
 12099                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
 12100   003628  0100               	movlb	0	; () banked
 12101   00362A  51F5               	movf	_LCD_entry_mode& (0+255),w,b
 12102   00362C  EC83  F011         	call	_LCD_write_command
 12103   003630  0012               	return		;funcret
 12104   003632                     __end_of_LCD_clear:
 12105                           	callstack 0
 12106                           
 12107 ;; *************** function _LCD_write_command *****************
 12108 ;; Defined at:
 12109 ;;		line 46 in file "LCD.c"
 12110 ;; Parameters:    Size  Location     Type
 12111 ;;  command         1    wreg     unsigned char 
 12112 ;; Auto vars:     Size  Location     Type
 12113 ;;  command         1    4[COMRAM] unsigned char 
 12114 ;; Return value:  Size  Location     Type
 12115 ;;                  1    wreg      void 
 12116 ;; Registers used:
 12117 ;;		wreg, status,2, status,0, cstack
 12118 ;; Tracked objects:
 12119 ;;		On entry : 0/0
 12120 ;;		On exit  : 0/0
 12121 ;;		Unchanged: 0/0
 12122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12126 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12127 ;;Total ram usage:        3 bytes
 12128 ;; Hardware stack levels used: 1
 12129 ;; Hardware stack levels required when called: 2
 12130 ;; This function calls:
 12131 ;;		_LCD_pulse_clock
 12132 ;; This function is called by:
 12133 ;;		_LCD_init
 12134 ;;		_LCD_cursor_set
 12135 ;;		_LCD_configure_cursor_blink
 12136 ;;		_LCD_clear
 12137 ;;		_LCD_cursor_increment
 12138 ;;		_LCD_cursor_decrement
 12139 ;;		_LCD_configure_lcd_display
 12140 ;;		_LCD_configure_cursor_display
 12141 ;;		_LCD_shift_reset
 12142 ;;		_LCD_shift_left
 12143 ;;		_LCD_shift_right
 12144 ;;		_LCD_configure_entry_id
 12145 ;;		_LCD_configure_entry_shift
 12146 ;;		_LCD_add_character
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           	psect	text61
 12151   002306                     __ptext61:
 12152                           	callstack 0
 12153   002306                     _LCD_write_command:
 12154                           	callstack 26
 12155                           
 12156                           ;incstack = 0
 12157                           ;LCD_write_command@command stored from wreg
 12158   002306  6E05               	movwf	LCD_write_command@command^0,c
 12159   002308                     
 12160                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
 12161   002308  948C               	bcf	140,2,c	;volatile
 12162   00230A                     
 12163                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
 12164   00230A  6A03               	clrf	??_LCD_write_command^0,c
 12165   00230C  AE05               	btfss	LCD_write_command@command^0,7,c
 12166   00230E  D001               	bra	u3695
 12167   002310  2A03               	incf	??_LCD_write_command^0,f,c
 12168   002312                     u3695:
 12169   002312  0E01               	movlw	1
 12170   002314  1603               	andwf	??_LCD_write_command^0,f,c
 12171   002316  3203               	rrcf	??_LCD_write_command^0,f,c
 12172   002318  3203               	rrcf	??_LCD_write_command^0,f,c
 12173   00231A  508C               	movf	140,w,c	;volatile
 12174   00231C  1803               	xorwf	??_LCD_write_command^0,w,c
 12175   00231E  0B7F               	andlw	-129
 12176   002320  1803               	xorwf	??_LCD_write_command^0,w,c
 12177   002322  6E8C               	movwf	140,c	;volatile
 12178                           
 12179                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
 12180   002324  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12181   002328  0E06               	movlw	6
 12182   00232A  6E04               	movwf	(??_LCD_write_command+1)^0,c
 12183   00232C                     u3705:
 12184   00232C  90D8               	bcf	status,0,c
 12185   00232E  3203               	rrcf	??_LCD_write_command^0,f,c
 12186   002330  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
 12187   002332  EF96  F011         	goto	u3705
 12188   002336  0E01               	movlw	1
 12189   002338  1603               	andwf	??_LCD_write_command^0,f,c
 12190   00233A  3A03               	swapf	??_LCD_write_command^0,f,c
 12191   00233C  4603               	rlncf	??_LCD_write_command^0,f,c
 12192   00233E  4603               	rlncf	??_LCD_write_command^0,f,c
 12193   002340  508C               	movf	140,w,c	;volatile
 12194   002342  1803               	xorwf	??_LCD_write_command^0,w,c
 12195   002344  0BBF               	andlw	-65
 12196   002346  1803               	xorwf	??_LCD_write_command^0,w,c
 12197   002348  6E8C               	movwf	140,c	;volatile
 12198                           
 12199                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
 12200   00234A  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12201   00234E  0E05               	movlw	5
 12202   002350  6E04               	movwf	(??_LCD_write_command+1)^0,c
 12203   002352                     u3715:
 12204   002352  90D8               	bcf	status,0,c
 12205   002354  3203               	rrcf	??_LCD_write_command^0,f,c
 12206   002356  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
 12207   002358  EFA9  F011         	goto	u3715
 12208   00235C  0E01               	movlw	1
 12209   00235E  1603               	andwf	??_LCD_write_command^0,f,c
 12210   002360  3A03               	swapf	??_LCD_write_command^0,f,c
 12211   002362  4603               	rlncf	??_LCD_write_command^0,f,c
 12212   002364  508C               	movf	140,w,c	;volatile
 12213   002366  1803               	xorwf	??_LCD_write_command^0,w,c
 12214   002368  0BDF               	andlw	-33
 12215   00236A  1803               	xorwf	??_LCD_write_command^0,w,c
 12216   00236C  6E8C               	movwf	140,c	;volatile
 12217                           
 12218                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
 12219   00236E  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12220   002372  3A03               	swapf	??_LCD_write_command^0,f,c
 12221   002374  0E0F               	movlw	15
 12222   002376  1603               	andwf	??_LCD_write_command^0,f,c
 12223   002378  0E01               	movlw	1
 12224   00237A  1603               	andwf	??_LCD_write_command^0,f,c
 12225   00237C  3A03               	swapf	??_LCD_write_command^0,f,c
 12226   00237E  508C               	movf	140,w,c	;volatile
 12227   002380  1803               	xorwf	??_LCD_write_command^0,w,c
 12228   002382  0BEF               	andlw	-17
 12229   002384  1803               	xorwf	??_LCD_write_command^0,w,c
 12230   002386  6E8C               	movwf	140,c	;volatile
 12231   002388                     
 12232                           ;LCD.c: 57:     LCD_pulse_clock();
 12233   002388  EC5C  F01B         	call	_LCD_pulse_clock	;wreg free
 12234   00238C                     
 12235                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
 12236   00238C  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12237   002390  90D8               	bcf	status,0,c
 12238   002392  3203               	rrcf	??_LCD_write_command^0,f,c
 12239   002394  90D8               	bcf	status,0,c
 12240   002396  3203               	rrcf	??_LCD_write_command^0,f,c
 12241   002398  90D8               	bcf	status,0,c
 12242   00239A  3203               	rrcf	??_LCD_write_command^0,f,c
 12243   00239C  0E01               	movlw	1
 12244   00239E  1603               	andwf	??_LCD_write_command^0,f,c
 12245   0023A0  3203               	rrcf	??_LCD_write_command^0,f,c
 12246   0023A2  3203               	rrcf	??_LCD_write_command^0,f,c
 12247   0023A4  508C               	movf	140,w,c	;volatile
 12248   0023A6  1803               	xorwf	??_LCD_write_command^0,w,c
 12249   0023A8  0B7F               	andlw	-129
 12250   0023AA  1803               	xorwf	??_LCD_write_command^0,w,c
 12251   0023AC  6E8C               	movwf	140,c	;volatile
 12252   0023AE                     
 12253                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
 12254   0023AE  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12255   0023B2  90D8               	bcf	status,0,c
 12256   0023B4  3203               	rrcf	??_LCD_write_command^0,f,c
 12257   0023B6  90D8               	bcf	status,0,c
 12258   0023B8  3203               	rrcf	??_LCD_write_command^0,f,c
 12259   0023BA  0E01               	movlw	1
 12260   0023BC  1603               	andwf	??_LCD_write_command^0,f,c
 12261   0023BE  3A03               	swapf	??_LCD_write_command^0,f,c
 12262   0023C0  4603               	rlncf	??_LCD_write_command^0,f,c
 12263   0023C2  4603               	rlncf	??_LCD_write_command^0,f,c
 12264   0023C4  508C               	movf	140,w,c	;volatile
 12265   0023C6  1803               	xorwf	??_LCD_write_command^0,w,c
 12266   0023C8  0BBF               	andlw	-65
 12267   0023CA  1803               	xorwf	??_LCD_write_command^0,w,c
 12268   0023CC  6E8C               	movwf	140,c	;volatile
 12269   0023CE                     
 12270                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
 12271   0023CE  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12272   0023D2  90D8               	bcf	status,0,c
 12273   0023D4  3203               	rrcf	??_LCD_write_command^0,f,c
 12274   0023D6  0E01               	movlw	1
 12275   0023D8  1603               	andwf	??_LCD_write_command^0,f,c
 12276   0023DA  3A03               	swapf	??_LCD_write_command^0,f,c
 12277   0023DC  4603               	rlncf	??_LCD_write_command^0,f,c
 12278   0023DE  508C               	movf	140,w,c	;volatile
 12279   0023E0  1803               	xorwf	??_LCD_write_command^0,w,c
 12280   0023E2  0BDF               	andlw	-33
 12281   0023E4  1803               	xorwf	??_LCD_write_command^0,w,c
 12282   0023E6  6E8C               	movwf	140,c	;volatile
 12283   0023E8                     
 12284                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
 12285   0023E8  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12286   0023EC  0E01               	movlw	1
 12287   0023EE  1603               	andwf	??_LCD_write_command^0,f,c
 12288   0023F0  3A03               	swapf	??_LCD_write_command^0,f,c
 12289   0023F2  508C               	movf	140,w,c	;volatile
 12290   0023F4  1803               	xorwf	??_LCD_write_command^0,w,c
 12291   0023F6  0BEF               	andlw	-17
 12292   0023F8  1803               	xorwf	??_LCD_write_command^0,w,c
 12293   0023FA  6E8C               	movwf	140,c	;volatile
 12294   0023FC                     
 12295                           ;LCD.c: 66:     LCD_pulse_clock();
 12296   0023FC  EC5C  F01B         	call	_LCD_pulse_clock	;wreg free
 12297   002400  0012               	return		;funcret
 12298   002402                     __end_of_LCD_write_command:
 12299                           	callstack 0
 12300                           
 12301 ;; *************** function _LCD_pulse_clock *****************
 12302 ;; Defined at:
 12303 ;;		line 34 in file "LCD.c"
 12304 ;; Parameters:    Size  Location     Type
 12305 ;;		None
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;		None
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1    wreg      void 
 12310 ;; Registers used:
 12311 ;;		wreg
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12321 ;;Total ram usage:        0 bytes
 12322 ;; Hardware stack levels used: 1
 12323 ;; Hardware stack levels required when called: 1
 12324 ;; This function calls:
 12325 ;;		Nothing
 12326 ;; This function is called by:
 12327 ;;		_LCD_write_command
 12328 ;;		_LCD_write_data
 12329 ;;		_LCD_init
 12330 ;; This function uses a non-reentrant model
 12331 ;;
 12332                           
 12333                           	psect	text62
 12334   0036B8                     __ptext62:
 12335                           	callstack 0
 12336   0036B8                     _LCD_pulse_clock:
 12337                           	callstack 26
 12338   0036B8                     
 12339                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
 12340   0036B8  868C               	bsf	140,3,c	;volatile
 12341   0036BA                     
 12342                           ;LCD.c: 37:   _delay((unsigned long)((60)*(16000000/4000000.0)));
 12343   0036BA  0E50               	movlw	80
 12344   0036BC                     u7277:
 12345   0036BC  2EE8               	decfsz	wreg,f,c
 12346   0036BE  D7FE               	bra	u7277
 12347   0036C0                     
 12348                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
 12349   0036C0  968C               	bcf	140,3,c	;volatile
 12350   0036C2  0012               	return		;funcret
 12351   0036C4                     __end_of_LCD_pulse_clock:
 12352                           	callstack 0
 12353                           
 12354 ;; *************** function _ADC_init *****************
 12355 ;; Defined at:
 12356 ;;		line 111 in file "OBCII_PIC18F46K22.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;		None
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;		None
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      void 
 12363 ;; Registers used:
 12364 ;;		wreg, status,2
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;Total ram usage:        0 bytes
 12375 ;; Hardware stack levels used: 1
 12376 ;; Hardware stack levels required when called: 1
 12377 ;; This function calls:
 12378 ;;		Nothing
 12379 ;; This function is called by:
 12380 ;;		_main
 12381 ;; This function uses a non-reentrant model
 12382 ;;
 12383                           
 12384                           	psect	text63
 12385   0036C4                     __ptext63:
 12386                           	callstack 0
 12387   0036C4                     _ADC_init:
 12388                           	callstack 29
 12389   0036C4                     
 12390                           ;OBCII_PIC18F46K22.c: 113:     ADCON0 = 0b00000001;
 12391   0036C4  0E01               	movlw	1
 12392   0036C6  6EC2               	movwf	194,c	;volatile
 12393   0036C8                     
 12394                           ;OBCII_PIC18F46K22.c: 114:     ADCON1 = 0b00000000;
 12395   0036C8  6AC1               	clrf	193,c	;volatile
 12396                           
 12397                           ;OBCII_PIC18F46K22.c: 115:     ADCON2 = 0b10101010;
 12398   0036CA  0EAA               	movlw	170
 12399   0036CC  6EC0               	movwf	192,c	;volatile
 12400   0036CE  0012               	return		;funcret
 12401   0036D0                     __end_of_ADC_init:
 12402                           	callstack 0
 12403                           
 12404 ;; *************** function _UART_ISR *****************
 12405 ;; Defined at:
 12406 ;;		line 157 in file "OBCII_PIC18F46K22.c"
 12407 ;; Parameters:    Size  Location     Type
 12408 ;;		None
 12409 ;; Auto vars:     Size  Location     Type
 12410 ;;		None
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      void 
 12413 ;; Registers used:
 12414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12424 ;;Total ram usage:        2 bytes
 12425 ;; Hardware stack levels used: 1
 12426 ;; This function calls:
 12427 ;;		Nothing
 12428 ;; This function is called by:
 12429 ;;		Interrupt level 2
 12430 ;; This function uses a non-reentrant model
 12431 ;;
 12432                           
 12433                           	psect	intcode
 12434   000008                     __pintcode:
 12435                           	callstack 0
 12436   000008                     _UART_ISR:
 12437                           	callstack 19
 12438                           
 12439                           ;incstack = 0
 12440   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12441   00000A  CFD9 F001          	movff	fsr2l,??_UART_ISR
 12442   00000E  CFDA F002          	movff	fsr2h,??_UART_ISR+1
 12443   000012                     
 12444                           ;OBCII_PIC18F46K22.c: 158:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
 12445   000012  AA9D               	btfss	157,5,c	;volatile
 12446   000014  EF0E  F000         	goto	i2u556_41
 12447   000018  EF10  F000         	goto	i2u556_40
 12448   00001C                     i2u556_41:
 12449   00001C  EF68  F000         	goto	i2l166
 12450   000020                     i2u556_40:
 12451   000020  AA9E               	btfss	158,5,c	;volatile
 12452   000022  EF15  F000         	goto	i2u557_41
 12453   000026  EF17  F000         	goto	i2u557_40
 12454   00002A                     i2u557_41:
 12455   00002A  EF68  F000         	goto	i2l166
 12456   00002E                     i2u557_40:
 12457   00002E                     
 12458                           ;OBCII_PIC18F46K22.c: 159:         RX_char = RCREG1;
 12459   00002E  CFAE F0D1          	movff	4014,_RX_char	;volatile
 12460                           
 12461                           ;OBCII_PIC18F46K22.c: 162:         if (RCSTAbits.OERR) {
 12462   000032  A2AB               	btfss	171,1,c	;volatile
 12463   000034  EF1E  F000         	goto	i2u558_41
 12464   000038  EF20  F000         	goto	i2u558_40
 12465   00003C                     i2u558_41:
 12466   00003C  EF22  F000         	goto	i2l5184
 12467   000040                     i2u558_40:
 12468   000040                     
 12469                           ;OBCII_PIC18F46K22.c: 163:             RCSTAbits.CREN = 0;
 12470   000040  98AB               	bcf	171,4,c	;volatile
 12471                           
 12472                           ;OBCII_PIC18F46K22.c: 164:             RCSTAbits.CREN = 1;
 12473   000042  88AB               	bsf	171,4,c	;volatile
 12474   000044                     i2l5184:
 12475                           
 12476                           ;OBCII_PIC18F46K22.c: 168:         if ((RX_char >= 32 && RX_char <= 126) && RX_char != '
      +                          >') {
 12477   000044  0E1F               	movlw	31
 12478   000046  0100               	movlb	0	; () banked
 12479   000048  65D1               	cpfsgt	_RX_char& (0+255),b
 12480   00004A  EF29  F000         	goto	i2u559_41
 12481   00004E  EF2B  F000         	goto	i2u559_40
 12482   000052                     i2u559_41:
 12483   000052  EF45  F000         	goto	i2l5194
 12484   000056                     i2u559_40:
 12485   000056                     
 12486                           ; BSR set to: 0
 12487   000056  0E7F               	movlw	127
 12488   000058  61D1               	cpfslt	_RX_char& (0+255),b
 12489   00005A  EF31  F000         	goto	i2u560_41
 12490   00005E  EF33  F000         	goto	i2u560_40
 12491   000062                     i2u560_41:
 12492   000062  EF45  F000         	goto	i2l5194
 12493   000066                     i2u560_40:
 12494   000066                     
 12495                           ; BSR set to: 0
 12496   000066  0E3E               	movlw	62
 12497   000068  19D1               	xorwf	_RX_char& (0+255),w,b
 12498   00006A  B4D8               	btfsc	status,2,c
 12499   00006C  EF3A  F000         	goto	i2u561_41
 12500   000070  EF3C  F000         	goto	i2u561_40
 12501   000074                     i2u561_41:
 12502   000074  EF45  F000         	goto	i2l5194
 12503   000078                     i2u561_40:
 12504   000078                     
 12505                           ; BSR set to: 0
 12506                           ;OBCII_PIC18F46K22.c: 169:             buffer[buffer_count] = RX_char;
 12507   000078  0E00               	movlw	low _buffer
 12508   00007A  25D2               	addwf	_buffer_count& (0+255),w,b
 12509   00007C  6ED9               	movwf	fsr2l,c
 12510   00007E  6ADA               	clrf	fsr2h,c
 12511   000080  0E02               	movlw	high _buffer
 12512   000082  22DA               	addwfc	fsr2h,f,c
 12513   000084  C0D1  FFDF         	movff	_RX_char,indf2
 12514   000088                     
 12515                           ; BSR set to: 0
 12516                           ;OBCII_PIC18F46K22.c: 170:             buffer_count++;
 12517   000088  2BD2               	incf	_buffer_count& (0+255),f,b
 12518   00008A                     i2l5194:
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;OBCII_PIC18F46K22.c: 173:         if (RX_char == '>' || RX_char == '\n' || buffer_count
      +                           >= 256 -1) {
 12522   00008A  0E3E               	movlw	62
 12523   00008C  19D1               	xorwf	_RX_char& (0+255),w,b
 12524   00008E  B4D8               	btfsc	status,2,c
 12525   000090  EF4C  F000         	goto	i2u562_41
 12526   000094  EF4E  F000         	goto	i2u562_40
 12527   000098                     i2u562_41:
 12528   000098  EF5F  F000         	goto	i2l5200
 12529   00009C                     i2u562_40:
 12530   00009C                     
 12531                           ; BSR set to: 0
 12532   00009C  0E0A               	movlw	10
 12533   00009E  19D1               	xorwf	_RX_char& (0+255),w,b
 12534   0000A0  B4D8               	btfsc	status,2,c
 12535   0000A2  EF55  F000         	goto	i2u563_41
 12536   0000A6  EF57  F000         	goto	i2u563_40
 12537   0000AA                     i2u563_41:
 12538   0000AA  EF5F  F000         	goto	i2l5200
 12539   0000AE                     i2u563_40:
 12540   0000AE                     
 12541                           ; BSR set to: 0
 12542   0000AE  29D2               	incf	_buffer_count& (0+255),w,b
 12543   0000B0  A4D8               	btfss	status,2,c
 12544   0000B2  EF5D  F000         	goto	i2u564_41
 12545   0000B6  EF5F  F000         	goto	i2u564_40
 12546   0000BA                     i2u564_41:
 12547   0000BA  EF68  F000         	goto	i2l166
 12548   0000BE                     i2u564_40:
 12549   0000BE                     i2l5200:
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;OBCII_PIC18F46K22.c: 174:             buffer[buffer_count] = '\0';
 12553   0000BE  0E00               	movlw	low _buffer
 12554   0000C0  25D2               	addwf	_buffer_count& (0+255),w,b
 12555   0000C2  6ED9               	movwf	fsr2l,c
 12556   0000C4  6ADA               	clrf	fsr2h,c
 12557   0000C6  0E02               	movlw	high _buffer
 12558   0000C8  22DA               	addwfc	fsr2h,f,c
 12559   0000CA  6ADF               	clrf	indf2,c
 12560   0000CC                     
 12561                           ; BSR set to: 0
 12562                           ;OBCII_PIC18F46K22.c: 175:             message_complete = 1;
 12563   0000CC  0E01               	movlw	1
 12564   0000CE  6FD0               	movwf	_message_complete& (0+255),b	;volatile
 12565   0000D0                     i2l166:
 12566   0000D0  C002  FFDA         	movff	??_UART_ISR+1,fsr2h
 12567   0000D4  C001  FFD9         	movff	??_UART_ISR,fsr2l
 12568   0000D8  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12569   0000DA  0011               	retfie		f
 12570   0000DC                     __end_of_UART_ISR:
 12571                           	callstack 0
 12572                           
 12573                           	psect	rparam
 12574   000001                     ___rparam_used  equ	1
 12575   000000                     ___param_bank   equ	0
 12576   000000                     __Lparam        equ	__Lrparam
 12577   000000                     __Hparam        equ	__Hrparam
 12578                           
 12579                           	psect	temp
 12580   00005C                     btemp:
 12581                           	callstack 0
 12582   00005C                     	ds	1
 12583   00005C                     int$flags       set	btemp
 12584   00005D                     wtemp8          set	btemp+1
 12585   00005D                     ttemp5          set	btemp+1
 12586   000060                     ttemp6          set	btemp+4
 12587   000064                     ttemp7          set	btemp+8
 12588                           
 12589                           	psect	config
 12590                           
 12591                           ; Padding undefined space
 12592   300000                     	org	3145728
 12593   300000  FF                 	db	255
 12594                           
 12595                           ;Config register CONFIG1H @ 0x300001
 12596                           ;	Oscillator Selection bits
 12597                           ;	FOSC = INTIO67, Internal oscillator block
 12598                           ;	4X PLL Enable
 12599                           ;	PLLCFG = ON, Oscillator multiplied by 4
 12600                           ;	Primary clock enable bit
 12601                           ;	PRICLKEN = ON, Primary clock is always enabled
 12602                           ;	Fail-Safe Clock Monitor Enable bit
 12603                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12604                           ;	Internal/External Oscillator Switchover bit
 12605                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12606   300001                     	org	3145729
 12607   300001  38                 	db	56
 12608                           
 12609                           ;Config register CONFIG2L @ 0x300002
 12610                           ;	Power-up Timer Enable bit
 12611                           ;	PWRTEN = ON, Power up timer enabled
 12612                           ;	Brown-out Reset Enable bits
 12613                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12614                           ;	Brown Out Reset Voltage bits
 12615                           ;	BORV = 250, VBOR set to 2.50 V nominal
 12616   300002                     	org	3145730
 12617   300002  0E                 	db	14
 12618                           
 12619                           ;Config register CONFIG2H @ 0x300003
 12620                           ;	Watchdog Timer Enable bits
 12621                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12622                           ;	Watchdog Timer Postscale Select bits
 12623                           ;	WDTPS = 32768, 1:32768
 12624   300003                     	org	3145731
 12625   300003  3C                 	db	60
 12626                           
 12627                           ; Padding undefined space
 12628   300004                     	org	3145732
 12629   300004  FF                 	db	255
 12630                           
 12631                           ;Config register CONFIG3H @ 0x300005
 12632                           ;	CCP2 MUX bit
 12633                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 12634                           ;	PORTB A/D Enable bit
 12635                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 12636                           ;	P3A/CCP3 Mux bit
 12637                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 12638                           ;	HFINTOSC Fast Start-up
 12639                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 12640                           ;	Timer3 Clock input mux bit
 12641                           ;	T3CMX = PORTC0, T3CKI is on RC0
 12642                           ;	ECCP2 B output mux bit
 12643                           ;	P2BMX = PORTD2, P2B is on RD2
 12644                           ;	MCLR Pin Enable bit
 12645                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 12646   300005                     	org	3145733
 12647   300005  BF                 	db	191
 12648                           
 12649                           ;Config register CONFIG4L @ 0x300006
 12650                           ;	Stack Full/Underflow Reset Enable bit
 12651                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12652                           ;	Single-Supply ICSP Enable bit
 12653                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 12654                           ;	Extended Instruction Set Enable bit
 12655                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12656                           ;	Background Debug
 12657                           ;	DEBUG = 0x1, unprogrammed default
 12658   300006                     	org	3145734
 12659   300006  85                 	db	133
 12660                           
 12661                           ; Padding undefined space
 12662   300007                     	org	3145735
 12663   300007  FF                 	db	255
 12664                           
 12665                           ;Config register CONFIG5L @ 0x300008
 12666                           ;	Code Protection Block 0
 12667                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12668                           ;	Code Protection Block 1
 12669                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12670                           ;	Code Protection Block 2
 12671                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12672                           ;	Code Protection Block 3
 12673                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12674   300008                     	org	3145736
 12675   300008  0F                 	db	15
 12676                           
 12677                           ;Config register CONFIG5H @ 0x300009
 12678                           ;	Boot Block Code Protection bit
 12679                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12680                           ;	Data EEPROM Code Protection bit
 12681                           ;	CPD = OFF, Data EEPROM not code-protected
 12682   300009                     	org	3145737
 12683   300009  C0                 	db	192
 12684                           
 12685                           ;Config register CONFIG6L @ 0x30000A
 12686                           ;	Write Protection Block 0
 12687                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12688                           ;	Write Protection Block 1
 12689                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12690                           ;	Write Protection Block 2
 12691                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12692                           ;	Write Protection Block 3
 12693                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12694   30000A                     	org	3145738
 12695   30000A  0F                 	db	15
 12696                           
 12697                           ;Config register CONFIG6H @ 0x30000B
 12698                           ;	Configuration Register Write Protection bit
 12699                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12700                           ;	Boot Block Write Protection bit
 12701                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12702                           ;	Data EEPROM Write Protection bit
 12703                           ;	WRTD = OFF, Data EEPROM not write-protected
 12704   30000B                     	org	3145739
 12705   30000B  E0                 	db	224
 12706                           
 12707                           ;Config register CONFIG7L @ 0x30000C
 12708                           ;	Table Read Protection Block 0
 12709                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12710                           ;	Table Read Protection Block 1
 12711                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12712                           ;	Table Read Protection Block 2
 12713                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12714                           ;	Table Read Protection Block 3
 12715                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12716   30000C                     	org	3145740
 12717   30000C  0F                 	db	15
 12718                           
 12719                           ;Config register CONFIG7H @ 0x30000D
 12720                           ;	Boot Block Table Read Protection bit
 12721                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12722   30000D                     	org	3145741
 12723   30000D  40                 	db	64
 12724                           tosu	equ	0xFFF
 12725                           tosh	equ	0xFFE
 12726                           tosl	equ	0xFFD
 12727                           stkptr	equ	0xFFC
 12728                           pclatu	equ	0xFFB
 12729                           pclath	equ	0xFFA
 12730                           pcl	equ	0xFF9
 12731                           tblptru	equ	0xFF8
 12732                           tblptrh	equ	0xFF7
 12733                           tblptrl	equ	0xFF6
 12734                           tablat	equ	0xFF5
 12735                           prodh	equ	0xFF4
 12736                           prodl	equ	0xFF3
 12737                           indf0	equ	0xFEF
 12738                           postinc0	equ	0xFEE
 12739                           postdec0	equ	0xFED
 12740                           preinc0	equ	0xFEC
 12741                           plusw0	equ	0xFEB
 12742                           fsr0h	equ	0xFEA
 12743                           fsr0l	equ	0xFE9
 12744                           wreg	equ	0xFE8
 12745                           indf1	equ	0xFE7
 12746                           postinc1	equ	0xFE6
 12747                           postdec1	equ	0xFE5
 12748                           preinc1	equ	0xFE4
 12749                           plusw1	equ	0xFE3
 12750                           fsr1h	equ	0xFE2
 12751                           fsr1l	equ	0xFE1
 12752                           bsr	equ	0xFE0
 12753                           indf2	equ	0xFDF
 12754                           postinc2	equ	0xFDE
 12755                           postdec2	equ	0xFDD
 12756                           preinc2	equ	0xFDC
 12757                           plusw2	equ	0xFDB
 12758                           fsr2h	equ	0xFDA
 12759                           fsr2l	equ	0xFD9
 12760                           status	equ	0xFD8

Data Sizes:
    Strings     365
    Constant    0
    Data        4
    BSS         455
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160     74     151
    BANK1           256      0     124
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    atox@ep	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2256(BANK1[32]), 

    atox@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    atox@pll	PTR unsigned long long  size(1) Largest target is 8
		 -> vfsfcnvrt@llu(BANK0[8]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    decode_dtc@dtc	PTR unsigned char  size(2) Largest target is 60
		 -> dtc_codes(BANK1[60]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fgetc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    fgetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    fgetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), dtc_codes(BANK1[60]), rpm_string(BANK0[16]), 
		 -> STR_11(CODE[17]), STR_12(CODE[16]), STR_13(CODE[2]), STR_14(CODE[2]), 
		 -> STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[17]), STR_21(CODE[6]), 
		 -> STR_22(CODE[6]), STR_23(CODE[4]), STR_27(CODE[4]), STR_28(CODE[4]), 
		 -> STR_29(CODE[2]), STR_3(CODE[15]), STR_31(CODE[4]), STR_33(CODE[5]), 
		 -> STR_34(CODE[13]), STR_35(CODE[14]), STR_37(CODE[16]), STR_38(CODE[11]), 
		 -> STR_42(CODE[14]), STR_43(CODE[14]), STR_44(CODE[15]), STR_45(CODE[17]), 
		 -> STR_47(CODE[14]), STR_48(CODE[11]), STR_49(CODE[16]), STR_50(CODE[11]), 
		 -> STR_6(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    print_AI_Temp@ait_ptr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), print_AI_Temp@clean_buffer(BANK0[32]), print_RPM@clean_buffer(BANK0[32]), NULL(NULL[0]), 

    print_RPM@rpm_ptr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), print_AI_Temp@clean_buffer(BANK0[32]), print_RPM@clean_buffer(BANK0[32]), NULL(NULL[0]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2045$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    S2045$source	PTR const unsigned char  size(2) Largest target is 0

    skipws@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), print_AI_Temp@clean_buffer(BANK0[32]), print_RPM@clean_buffer(BANK0[32]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), print_AI_Temp@clean_buffer(BANK0[32]), print_RPM@clean_buffer(BANK0[32]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_17(CODE[3]), STR_26(CODE[3]), STR_36(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), dtc_codes(BANK1[60]), rpm_string(BANK0[16]), 

    sscanf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sscanf(BANK0[2]), 

    sscanf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_40(CODE[3]), STR_41(CODE[3]), 

    sscanf@s	PTR const unsigned char  size(1) Largest target is 3
		 -> diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), print_AI_Temp@clean_buffer(BANK0[32]), print_RPM@clean_buffer(BANK0[32]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), print_AI_Temp@clean_buffer(BANK0[32]), print_RPM@clean_buffer(BANK0[32]), STR_16(CODE[5]), 
		 -> STR_25(CODE[5]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), print_AI_Temp@clean_buffer(BANK0[32]), print_RPM@clean_buffer(BANK0[32]), STR_16(CODE[5]), 
		 -> STR_25(CODE[5]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), print_AI_Temp@clean_buffer(BANK0[32]), print_RPM@clean_buffer(BANK0[32]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_16(CODE[5]), STR_25(CODE[5]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), print_AI_Temp@clean_buffer(BANK0[32]), print_RPM@clean_buffer(BANK0[32]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_16(CODE[5]), STR_25(CODE[5]), 

    __strtoxll@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2256(BANK1[32]), 

    __strtoxll@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> atox@ep(BANK0[2]), 

    __strtoxll@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2256(BANK1[32]), 

    UART1_SendString@string	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), STR_10(CODE[6]), STR_15(CODE[6]), STR_20(CODE[6]), 
		 -> STR_24(CODE[6]), STR_30(CODE[5]), STR_32(CODE[6]), STR_39(CODE[4]), 
		 -> STR_4(CODE[6]), STR_46(CODE[4]), STR_5(CODE[5]), STR_7(CODE[5]), 

    ungetc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    ungetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    ungetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_17(CODE[3]), STR_26(CODE[3]), STR_36(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_17(CODE[3]), STR_26(CODE[3]), STR_36(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_17(CODE[3]), STR_26(CODE[3]), STR_36(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfscanf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfscanf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_40(CODE[3]), STR_41(CODE[3]), 

    vfscanf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_40(CODE[3]), STR_41(CODE[3]), 

    vfscanf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    vfsfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfsfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfscanf@cfmt(BANK0[2]), 

    vfsfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    vfsfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> diagnostic_trouble_codes@byte1(BANK0[2]), diagnostic_trouble_codes@byte2(BANK0[2]), ?_sprintf(COMRAM[2]), ?_sscanf(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _welcome_splash->_LCD_write_variable
    _LCD_write_variable->___aldiv
    _live_reading_mode->_print_AI_Temp
    _live_reading_mode->_print_RPM
    _print_Vbatt->_LCD_write_string
    _print_RPM->_sprintf
    _print_AI_Temp->_sprintf
    _strstr->_strncmp
    _display_system_info->_print_ELMVer
    _display_system_info->_print_SAEVer
    _print_SAEVer->_LCD_write_string
    _print_ELMVer->_LCD_write_string
    _diagnostic_trouble_codes->_decode_dtc
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atox
    _atox->___strtoxll
    _skipws->_fgetc
    _fgetc->_getch
    ___strtoxll->___omul
    _decode_dtc->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _ctoa->_fputc
    _clear_diagnostic_codes->_LCD_write_string
    _parsing_notif->_LCD_write_string
    _display_mm->_LCD_write_string
    _clear_parsing_notif->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _UART1_SendString->_UART1_SendChar
    _LCD_configure_cursor_blink->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_menu
    _main_menu->_diagnostic_trouble_codes
    _live_reading_mode->_print_AI_Temp
    _live_reading_mode->_print_RPM
    _diagnostic_trouble_codes->_sscanf
    _sscanf->_vfscanf
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atox

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   54489
                                             72 BANK0      2     2      0
                           _ADC_init
                          _LCD_clear
                           _LCD_init
                         _UART1_Init
                   _UART1_SendString
                         _input_init
                          _main_menu
                     _welcome_splash
 ---------------------------------------------------------------------------------
 (1) _welcome_splash                                       6     6      0    2793
                                             27 COMRAM     6     6      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                 _LCD_write_variable
                   _UART1_SendString
                            ___lwdiv
                            ___lwmod
                          _ccp1_init
                          _tmr1_init
 ---------------------------------------------------------------------------------
 (2) _tmr1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ccp1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_write_variable                                  11     6      5    1231
                                             16 COMRAM    11     6      5
                     _LCD_write_data
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8      94
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     300
                                              2 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            2     2      0   50869
                                             70 BANK0      2     2      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
             _clear_diagnostic_codes
           _diagnostic_trouble_codes
                         _display_mm
                _display_system_info
                  _live_reading_mode
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _live_reading_mode                                    0     0      0   21637
                      _print_AI_Temp
                          _print_RPM
                        _print_Vbatt
 ---------------------------------------------------------------------------------
 (3) _print_Vbatt                                          1     1      0    3555
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _print_RPM                                           39    39      0    9063
                                             77 COMRAM     3     3      0
                                              0 BANK0     36    36      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                  _hex_char_to_value
                      _parsing_notif
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _print_AI_Temp                                       39    39      0    9019
                                             77 COMRAM     3     3      0
                                              0 BANK0     36    36      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                  _hex_char_to_value
                      _parsing_notif
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (4) _strstr                                               6     2      4     593
                                              9 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              7     1      6     182
                                              2 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      93
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4      92
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _hex_char_to_value                                    1     1      0     261
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _display_system_info                                  0     0      0    7701
                     _LCD_cursor_set
                   _LCD_write_string
                       _print_ELMVer
                       _print_SAEVer
 ---------------------------------------------------------------------------------
 (3) _print_SAEVer                                         1     1      0    3463
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (3) _print_ELMVer                                         1     1      0    3463
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (2) _diagnostic_trouble_codes                            16    16      0   16098
                                             54 BANK0     16    16      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _decode_dtc
                      _parsing_notif
                             _sscanf
 ---------------------------------------------------------------------------------
 (3) _sscanf                                              19    14      5    8118
                                             37 BANK0     17    12      5
                            _vfscanf
 ---------------------------------------------------------------------------------
 (4) _vfscanf                                             10     6      4    7844
                                             27 BANK0     10     6      4
                          _vfsfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfsfcnvrt                                           36    32      4    7453
                                             84 COMRAM     2     2      0
                                             10 BANK0     17    13      4
                               _atox
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (6) _atox                                                20    18      2    4820
                                             74 COMRAM    10     8      2
                                              0 BANK0     10    10      0
                         ___strtoxll
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (6) _skipws                                               4     3      1     779
                                             13 COMRAM     4     3      1
                              _fgetc
                             _ungetc
 ---------------------------------------------------------------------------------
 (6) _ungetc                                               5     2      3     303
                                              2 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (7) _fgetc                                                9     7      2     312
                                              4 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (8) _getch                                                2     0      2       0
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) ___strtoxll                                          48    40      8    2113
                                             26 COMRAM    48    40      8
                             ___omul
 ---------------------------------------------------------------------------------
 (8) ___omul                                              24     8     16     142
                                              2 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) _decode_dtc                                          12     6      6    4331
                                             77 COMRAM    12     6      6
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             24    14     10    4191
                                             55 COMRAM    22    12     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             6     2      4    3982
                                             49 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           13    10      3    3845
                                             36 COMRAM    13    10      3
                               _ctoa
                              _fputc
                 _read_prec_or_width
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                12     9      3    1060
                                             24 COMRAM    12     9      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _utoa                                                 8     5      3    1342
                                             24 COMRAM     8     5      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  8     3      5     762
                                             16 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (9) _fputs                                                6     3      3     339
                                             10 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     163
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     166
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _read_prec_or_width                                   7     5      2     182
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     5      2     421
                                             10 COMRAM     7     5      2
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               8     5      3     238
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_diagnostic_codes                               4     4      0    3749
                                             10 COMRAM     4     4      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _parsing_notif                                        0     0      0     775
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _display_mm                                           0     0      0     775
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _clear_parsing_notif                                  0     0      0     775
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     5     3      2     359
                                              5 COMRAM     5     3      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (3) _LCD_write_data                                       3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_set                                       2     1      1     416
                                              5 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _UART1_SendString                                     6     4      2     131
                                              3 COMRAM     6     4      2
                     _UART1_SendChar
 ---------------------------------------------------------------------------------
 (3) _UART1_SendChar                                       1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_configure_cursor_blink                           1     1      0     261
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _input_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     464
                                              6 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     232
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_write_command                                    3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART_ISR                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _UART1_Init
   _UART1_SendString
     _UART1_SendChar
   _input_init
   _main_menu
     _LCD_clear
     _LCD_configure_cursor_blink
       _LCD_write_command
     _LCD_cursor_set
       _LCD_write_command
     _clear_diagnostic_codes
       _LCD_clear
       _LCD_configure_cursor_blink
       _LCD_cursor_set
       _LCD_write_string
         _LCD_write_data
           _LCD_pulse_clock
       _UART1_SendString
       _clear_parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _display_mm
         _LCD_cursor_set
         _LCD_write_string
       _parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _readADC
     _diagnostic_trouble_codes
       _LCD_clear
       _LCD_cursor_set
       _LCD_write_string
       _UART1_SendString
       _clear_parsing_notif
       _decode_dtc
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _fputc
                   _putch
               _fputc
               _read_prec_or_width
               _utoa
                 ___lwdiv
                 ___lwmod
                 _pad
                   _fputc
                   _fputs
                     _fputc
               _xtoa
                 _pad
       _parsing_notif
       _sscanf
         _vfscanf
           _vfsfcnvrt
             _atox
               ___strtoxll
                 ___omul
               _fgetc
                 _getch
               _skipws
                 _fgetc
                 _ungetc
               _ungetc
             _fgetc
             _skipws
             _ungetc
     _display_mm
     _display_system_info
       _LCD_cursor_set
       _LCD_write_string
       _print_ELMVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
       _print_SAEVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
     _live_reading_mode
       _print_AI_Temp
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _hex_char_to_value
         _parsing_notif
         _sprintf
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
       _print_RPM
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _hex_char_to_value
         _parsing_notif
         _sprintf
         _strlen
         _strstr
       _print_Vbatt
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
         _strchr
     _readADC
   _welcome_splash
     _LCD_clear
     _LCD_cursor_set
     _LCD_write_string
     _LCD_write_variable
       _LCD_write_data
       ___aldiv
       ___almod
       ___lmul
       ___lwdiv (ARG)
     _UART1_SendString
     ___lwdiv
     ___lwmod
     _ccp1_init
     _tmr1_init

 _UART_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     124     48.4%
BITBANK0           160      0       0      0.0%
BANK0              160     74     151     94.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     89      91     96.8%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        70      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     616      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri May 02 19:22:21 2025

                    print_AI_Temp@i 0083                      print_AI_Temp@j 0080  
                               l202 3560                                 l211 3660  
                               l220 1794                                 l205 35C0  
                               l152 36CE                                 l208 3648  
                               l321 2EF8                                 l313 36B6  
                               l155 35EC                                 l172 3396  
                               l420 32C6                                 l412 2304  
                               l332 352A                                 l260 1008  
                               l149 36A8                                 l317 2E78  
                               l325 2DE6                                 l181 3688  
                               l406 36C2                                 l422 32E2  
                               l342 2794                                 l254 2FF6  
                               l415 2F78                                 l175 3664  
                               l263 12D0                                 l184 3698  
                               l409 2400                                 l353 0CDA  
                               l329 2E66                                 l521 313E  
                               l178 3676                                 l418 329A  
                               l282 24FC                                 l602 24EA  
                               l522 314E                                 l443 3612  
                               l419 32B0                                 l292 12E2  
                               l196 1D86                                 l446 3630  
                               l199 352E                                 l375 1A9E  
                               l527 2C82                                 l295 1560  
                               l528 2CA2                                 l288 25D2  
                               l491 1E5C                                 l476 3070  
                               l389 1BAA                                 l498 1EFA  
                               l589 2004                                 _RPM 00C7  
                               _pad 2D40                                 wreg 0FE8  
                        _TXSTA1bits 0FAC                                l1001 30DC  
                              l1011 327A                                l1008 30E4  
                              l1018 3282                                l1220 2DD4  
                              l1231 2A42                                l1215 2D76  
                              l1304 2B58                                l1312 34F4  
                              l1234 2A80                                l1218 2DB4  
                              l1236 2A9E                                l1412 28DC  
                              l1413 2916                                l1262 2BFC  
                              l1246 26BA                                l1350 067C  
                              l1414 291E                                l1511 36DA  
                              l1319 3592                                l1266 2C04  
                              l1258 2208                                l1450 03AC  
                              l1346 31B8                                l1514 33E8  
                              l1523 33E6                                l3060 36C8  
                              l1292 3474                                l1508 36D4  
                              l1516 3432                                l1197 34B4  
                              l1461 0428                                l1357 06DA  
                              l3070 35E0                                l3062 35C2  
                              l4030 3296                                l1470 057E  
                              l1446 02B8                                l1358 09AE  
                              l1279 19BA                                l1543 285A  
                              l4200 361A                                l3080 35EA  
                              l3072 35E2                                l3064 35D4  
                              l3056 369A                                l4024 3664  
                              l4032 32AC                                l4040 2FF8  
                              l1456 03BC                                l1536 29DE  
                              l5000 1C58                                l1449 0346  
                              l1369 07B8                                l3058 36C4  
                              l4202 3628                                l3074 35E4  
                              l3066 35DC                                l4026 3672  
                              l4210 336E                                l4034 32C2  
                              l4042 2FFE                                l1474 0648  
                              l1466 0476                                l4050 33A4  
                              l5010 1CA6                                l5002 1C7E  
                              l3076 35E6                                l3068 35DE  
                              l4204 3342                                l4036 32D8  
                              l4028 3286                                l4044 3030  
                              l4212 3594                                l4220 363C  
                              l3500 30AA                                l4060 3402  
                              l4052 33A8                                l5020 1CDC  
                              l5012 1CA8                                l5004 1C8A  
                              l1389 0FF6                                l3078 35E8  
                              l4206 334E                                l4038 32DC  
                              l4046 3032                                l4222 364A  
                              l4214 359E                                l4310 352C  
                              l3510 30D6                                l3502 30B0  
                              l4070 3434                                l4230 2F9C  
                              l4054 33DA                                l5030 1D28  
                              l5022 1CE6                                l5014 1CBA  
                              l5006 1C9C                                l1495 2106  
                              l4320 3600                                l4208 336A  
                              l4224 3654                                l4216 35AA  
                              l4312 353C                                l3600 2A28  
                              l3504 30C6                                l3520 3250  
                              l3512 3220                                l4072 3440  
                              l4064 340E                                l4048 3398  
                              l4400 12CA                                l5032 1D34  
                              l5024 1CF2                                l5008 1CA4  
                              l6000 31BA                                l4322 3608  
                              l4218 3632                                l4314 354A  
                              l3610 2A62                                l3506 30CE  
                              l3522 3266                                l3514 3232  
                              l3530 2D50                                l4074 3450  
                              l4250 2FF4                                l4242 2FCC  
                              l4234 2FA4                                l4226 2F7C  
                              l4066 342A                                l4058 33E8  
                              l4402 12CE                                l4330 1026  
                              l4410 2528                                l5034 1D4A  
                              l5026 1CFE                                l5018 1CD4  
                              l6010 31EA                                l6002 31BE  
                              l1499 2D3E                                l4324 360C  
                              l3460 2AC0                                l3612 2A90  
                              l3604 2A3A                                l3508 30D0  
                              l3524 326E                                l3516 323A  
                              l3540 2D96                                l3532 2D60  
                              l3620 25F0                                l4076 346C  
                              l4244 2FDC                                l4236 2FB4  
                              l4228 2F8C                                l4180 27B0  
                              l4260 2978                                l4500 14EA  
                              l4332 1034                                l4340 1046  
                              l4420 2550                                l4412 252C  
                              l4404 24EC                                l5036 1D62  
                              l5028 1D1A                                l6012 31F6  
                              l6004 31C2                                l4318 35F0  
                              l3462 2ACA                                l3606 2A4E  
                              l3526 3274                                l3518 3242  
                              l3470 34B6                                l3542 2DC4  
                              l3534 2D6E                                l3622 25F6  
                              l3630 2640                                l3614 25D4  
                              l4246 2FEC                                l4238 2FC4  
                              l4190 27FE                                l4270 29D6  
                              l4254 2920                                l4510 1530  
                              l4502 1504                                l4350 106A  
                              l4334 1038                                l4342 104A  
                              l4326 0FF8                                l4430 258A  
                              l4422 2554                                l4414 2530  
                              l4406 250A                                l5038 1D6E  
                              l6014 3210                                l6006 31C6  
                              l3464 2AE6                                l3456 2AA0  
                              l3608 2A5E                                l3472 34C2  
                              l3536 2D82                                l3528 2D40  
                              l3632 2652                                l3640 269E  
                              l3624 261C                                l3616 25D8  
                              l4280 3492                                l5400 2CA4  
                              l4192 2810                                l4184 27BC  
                              l4264 2984                                l4256 2932  
                              l4520 155E                                l4512 153A  
                              l4504 150E                                l4440 12D2  
                              l4360 10F6                                l4352 1086  
                              l4344 105C                                l4336 103C  
                              l4328 1016                                l4432 25B0  
                              l4424 255E                                l4408 251A  
                              l4416 253A                                l6016 3214  
                              l6008 31D2                                l3466 2B18  
                              l3458 2AB0                                l3490 3072  
                              l3474 34D0                                l3538 2D92  
                              l3634 2664                                l3626 261E  
                              l3618 25E8                                l3650 2124  
                              l4282 34A6                                l4274 3476  
                              l5410 2CEC                                l4530 2EA8  
                              l4522 2E68                                l4194 2838  
                              l4186 27CA                                l4178 2796  
                              l4258 294A                                l4266 29AC  
                              l4514 1544                                l4506 151A  
                              l4450 1316                                l4442 12F0  
                              l4370 1140                                l4362 1112  
                              l4354 10A2                                l4346 1060  
                              l4434 25C0                                l4426 2574  
                              l4418 253E                                l4610 30E6  
                              l3492 307A                                l3476 34D4  
                              l3636 2674                                l3628 2624  
                              l3660 214C                                l3652 212A  
                              l3644 2108                                l3900 18B4  
                              l4276 3482                                l5500 026C  
                              l5420 2028                                l5412 2CF2  
                              l5404 2CBC                                l4540 2ED0  
                              l4532 2EAC                                l4524 2E86  
                              l4188 27E2                                l4268 29BE  
                              l4516 154E                                l4508 1524  
                              l4460 133A                                l4444 1300  
                              l4380 11AA                                l4372 1150  
                              l4364 112A                                l4356 10BE  
                              l4348 1064                                l4436 25CC  
                              l4428 2580                                l4620 1EFC  
                              l4612 30F6                                l4700 3678  
                              l4198 3614                                l3590 29E0  
                              l3494 308C                                l3638 268E  
                              l3670 21A0                                l3662 215C  
                              l3654 2130                                l3646 210C  
                              l3910 190A                                l4278 348A  
                              l5510 02EC                                l5502 0288  
                              l5430 20D4                                l5422 2038  
                              l5414 2D10                                l5406 2CCC  
                              l4542 2EDA                                l4526 2E96  
                              l4534 2EB6                                l4550 2DD6  
                              l4518 155A                                l4470 1398  
                              l4462 133E                                l4446 130E  
                              l4454 1320                                l4390 1294  
                              l4382 1240                                l4374 115A  
                              l4366 112C                                l4358 10DA  
                              l4438 25D0                                l4630 1F2E  
                              l4622 1EFE                                l4614 3104  
                              l4710 1D98                                l4702 3680  
                              ?_pad 0011                                l3584 36B8  
                              l3840 238C                                l3592 29F4  
                              l3496 3094                                l3672 21B2  
                              l3664 215E                                l3656 2140  
                              l3648 211C                                l3912 1922  
                              l3904 18C4                                l6080 2716  
                              l5512 0304                                l5504 02A0  
                              l5520 032C                                l5432 20E6  
                              l5424 2050                                l5416 2006  
                              l5408 2CE0                                l5440 3150  
                              l5600 070E                                l4544 2EE6  
                              l4528 2EA4                                l4536 2EBA  
                              l4560 2E1A                                l4552 2DF4  
                              l4480 1406                                l4472 13B4  
                              l4464 1344                                l4448 1312  
                              l4456 1324                                l4392 12A0  
                              l4384 1266                                l4376 1174  
                              l4368 112E                                l4640 1F70  
                              l4632 1F3E                                l4624 1F0C  
                              l4616 3114                                l4720 1E02  
                              l4712 1DCC                                l4704 368A  
                              l3586 36BA                                l3842 23AE  
                              l3834 2308                                l3850 220C  
                              l6082 1B94                                l3594 2A00  
                              l3690 2BAC                                l3682 2B5A  
                              l3498 309C                                l3674 21C2  
                              l3666 2164                                l3658 2148  
                              l3914 1940                                l3906 18D2  
                              l3930 1998                                l5530 03DC  
                              l5522 033E                                l5506 02AA  
                              l5514 0310                                l5450 00E0  
                              l5434 20EE                                l5426 206C  
                              l5418 2016                                l5442 3154  
                              l5610 0764                                l5602 0728  
                              l4546 2EF2                                l4538 2ECC  
                              l4570 2E48                                l4554 2E04  
                              l4562 2E24                                l4490 144E  
                              l4474 13D0                                l4466 1360  
                              l4482 1408                                l4458 1336  
                              l4394 12AA                                l4386 1270  
                              l4378 1188                                l4650 1FC2  
                              l4642 1F7C                                l4634 1F42  
                              l4626 1F1C                                l4618 311E  
                              l4730 1E6C                                l4722 1E3A  
                              l4714 1DDC                                l4706 1D88  
                              l3588 36C0                                l3844 23CE  
                              l3836 230A                                l3860 22D2  
                              l3852 220E                                l4900 1B1C  
                              l3596 2A0C                                l3692 2BCA  
                              l3684 2B62                                l3676 21DC  
                              l3668 2184                                l3924 1968  
                              l3908 18EE                                l4580 26C0  
                              l5540 044A                                l5532 03F8  
                              l5524 0356                                l5516 0312  
                              l5508 02D0                                l5460 0124  
                              l5452 00E2                                l5428 209E  
                              l5436 20FE                                l5444 3168  
                              l5612 0768                                l5604 073C  
                              l5700 0E3C                                l4548 2EF6  
                              l4572 2E54                                l4556 2E12  
                              l4564 2E28                                l4492 1462  
                              l4484 141A                                l4476 13EC  
                              l4468 137C                                l4396 12B6  
                              l4388 128A                                l4660 1FF4  
                              l4652 1FC4                                l4644 1F8A  
                              l4636 1F52                                l4628 1F20  
                              l4740 1EE8                                l4732 1E74  
                              l4716 1DDE                                l4708 1D8A  
                              l3846 23E8                                l3838 2388  
                              l3862 22EC                                l3854 228C  
                              l4910 1B64                                l4902 1B28  
                              l3598 2A1A                                l3686 2B84  
                              l3694 2BD6                                l3678 21EC  
                              l3918 1954                                l3926 1988  
                              l3870 17E2                                l4582 26C8  
                              l5390 2C06                                l5550 0540  
                              l5542 044E                                l5534 0410  
                              l5526 0364                                l5518 0324  
                              l5470 0180                                l5462 0132  
                              l5454 00EE                                l5446 3180  
                              l5630 0820                                l5622 07C4  
                              l5614 0778                                l5606 0750  
                              l5710 0E6E                                l4574 2E60  
                              l4566 2E3A                                l4558 2E16  
                              l4494 1484                                l4486 142A  
                              l4478 1404                                l4398 12C0  
                              l4750 36B2                                l6078 176E  
                              l4654 1FCE                                l4646 1F94  
                              l4638 1F68                                l4670 2422  
                              l4742 1EEA                                l4734 1EA8  
                              l4726 1E50                                l3848 23FC  
                              l3864 2300                                l3856 2290  
                              l4904 1B2E                                l4840 19C4  
                              l3688 2B90                                l3880 180E  
                              l3872 17F0                                l4584 26D0  
                              l4592 26E8                                l5392 2C12  
                              l5560 05BA                                l5552 0550  
                              l5536 041A                                l5528 0388  
                              l5480 01D2                                l5472 0192  
                              l5464 0144                                l5456 00F6  
                              l5448 3194                                l5632 0834  
                              l5624 07D8                                l5616 078E  
                              l5608 0760                                l5640 088C  
                              l5720 0E8C                                l5800 09C2  
                              l4576 2E64                                l4568 2E3E  
                              l4496 14D0                                l4488 1434  
                              l4648 1FB2                                l4656 1FD4  
                              l4680 2462                                l4672 2426  
                              l4664 2402                                l4736 1EAA  
                              l4728 1E56                                l4930 2EFA  
                              l3858 22B2                                l4906 1B4A  
                              l4850 19F4                                l4842 19C8  
                              l3890 1858                                l3874 17F4  
                              l3866 17B4                                l4586 26D8  
                              l4594 273C                                l4578 26BC  
                              l5394 2C20                                l5570 0612  
                              l5554 059E                                l5546 0484  
                              l5562 05C0                                l5538 0432  
                              l5490 021C                                l5474 01AA  
                              l5466 0160                                l5458 0112  
                              l5642 089C                                l5634 0844  
                              l5618 07A2                                l5626 07EC  
                              l5650 08DA                                l5730 0F16  
                              l5722 0E9C                                l5706 0E4A  
                              l5714 0E7C                                l5810 09FE  
                              l5802 09CC                                l4498 14E0  
                              l4746 36AA                                l4658 1FE4  
                              l4690 24B4                                l4682 246E  
                              l4674 2434                                l4666 2404  
                              l4738 1EBC                                l4940 2F30  
                              l4932 2F12                                l4908 1B58  
                              l4860 1A2A                                l4852 19FA  
                              l4844 19D2                                l3892 1868  
                              l3884 1816                                l3876 17FA  
                              l3868 17D6                                l4588 26E0  
                              l5396 2C40                                l5572 061A  
                              l5564 05D4                                l5556 05A8  
                              l5548 0512                                l5492 0230  
                              l5484 01E8                                l5476 01BC  
                              l5468 0170                                l5388 36D0  
                              l5660 098A                                l5652 08EA  
                              l5644 08A0                                l5636 0858  
                              l5628 0804                                l5580 0654  
                              l5740 0F84                                l5732 0F42  
                              l5724 0EC0                                l5708 0E5E  
                              l5820 0A3E                                l5812 0A02  
                              l5804 09D8                                l4924 34F6  
                              l4748 36AE                                l5900 15C0  
                              l4684 247C                                l4692 24BA  
                              l4676 2444                                l4668 2412  
                              l4950 2F52                                l4942 2F32  
                              l4934 2F2A                                l4918 1B7E  
                              l4870 1A6E                                l4862 1A3C  
                              l4854 1A06                                l4846 19DE  
                              l4838 19BC                                l3894 1872  
                              l3878 17FE                                l3886 1834  
                              l5398 2C52                                l5574 0628  
                              l5558 05AA                                l5494 0242  
                              l5486 01FA                                l5478 01BE  
                              l5566 05F4                                l5662 09A6  
                              l5654 094C                                l5638 087C  
                              l5590 06A0                                l5646 08A4  
                              l5582 065C                                l5750 0FDE  
                              l5742 0F98                                l5734 0F46  
                              l5726 0EE8                                l5670 0D0C  
                              l5830 0AC8                                l5822 0A60  
                              l5814 0A14                                l5806 09E2  
                              l4926 3500                                l5910 1602  
                              l5902 15CA                                l4694 24CA  
                              l4686 249A                                l4678 245A  
                              l4960 2F5E                                l4952 2F54  
                              l4944 2F36                                l4936 2F2C  
                              l4880 1AAC                                l4872 1A7E  
                              l4864 1A4E                                l4856 1A18  
                              l4848 19E8                                l3896 1894  
                              l3888 1844                                l5568 0604  
                              l5496 0254                                l5488 020A  
                              l5656 0960                                l5648 08C4  
                              l5592 06B6                                l5584 0670  
                              l5752 0FF2                                l5736 0F56  
                              l5728 0EF4                                l5744 0FAC  
                              l5680 0D90                                l5672 0D2C  
                              l5840 0B2E                                l5832 0AE6  
                              l5824 0A80                                l5816 0A1C  
                              l5808 09EE                                l4928 350C  
                              l5920 1644                                l5912 160C  
                              l5904 15D4                                l4696 24DA  
                              l4688 24AA                                l4962 2F64  
                              l4954 2F56                                l4946 2F48  
                              l4938 2F2E                                l4890 1AE2  
                              l4882 1ABC                                l4874 1A8C  
                              l4866 1A56                                l4858 1A20  
                              l3898 18A0                                l5498 025C  
                              l5658 0972                                l5594 06C8  
                              l5586 0684                                l5578 064A  
                              l5738 0F6C                                l5682 0DAC  
                              l5690 0DDC                                l5674 0D4E  
                              l5666 0CDC                                l5770 2882  
                              l5850 0B9E                                l5842 0B3A  
                              l5834 0B04                                l5826 0A9E  
                              l5818 0A20                                l5930 1686  
                              l5922 164A                                l5914 161E  
                              l5906 15E6                                l4970 1BBC  
                              l4964 2F6C                                l4956 2F58  
                              l4948 2F4E                                l4892 1AF4  
                              l4876 1A90                                l4868 1A60  
                              l5596 06E6                                l5588 0690  
                              l5692 0DFE                                l5684 0DC2  
                              l5676 0D70                                l5668 0D00  
                              l5772 288A                                l5780 28C0  
                              l5764 285C                                l5852 0BB4  
                              l5844 0B4A                                l5836 0B0C  
                              l5828 0AAA                                l5860 0C0A  
                              l5940 16BC                                l5932 168A  
                              l5924 1658                                l5916 1630  
                              l5908 15F8                                l4980 1BEC  
                              l4972 1BC0                                l4966 2F74  
                              l4958 2F5A                                l4894 1AF8  
                              l4886 1ACE                                l4878 1A94  
                              l5598 06FA                                l5694 0E16  
                              l5686 0DD0                                l5678 0D7C  
                              l5782 28E4                                l5774 28A4  
                              l5766 2864                                l5790 356E  
                              l5870 0C70                                l5862 0C28  
                              l5854 0BCC                                l5846 0B6A  
                              l5950 16EE                                l5942 16C0  
                              l5934 1698                                l5926 166A  
                              l5918 163A                                l4990 1C10  
                              l4982 1BF8                                l4974 1BCA  
                              l4896 1AFC                                l4888 1ADE  
                              l5696 0E2C                                l5784 28F8  
                              l5768 2876                                l5792 3576  
                              l5872 0C8C                                l5880 0CD4  
                              l5856 0BFC                                l5848 0B7A  
                              l5864 0C44                                l5960 1718  
                              l5944 16CA                                l5936 16AA  
                              l5928 1678                                l4992 1C1E  
                              l4984 1BFC                                l4976 1BD6  
                              l4968 1BAC                                l4898 1B12  
                              l5698 0E38                                l5786 290A  
                              l5778 28B8                                l5794 357E  
                              l5882 0CD8                                l5874 0C9A  
                              l5866 0C56                                l5858 0C02  
                              l5946 16CE                                l5938 16B8  
                              l5890 157A                                l4994 1C22  
                              l4986 1C00                                l4978 1BE0  
                              l5788 3562                                l5876 0CA6  
                              l5868 0C64                                l5980 1732  
                              l5948 16DC                                l5892 158A  
                              l5884 1562                                l4996 1C26  
                              l4988 1C08                                l5878 0CB0  
                              l5798 09B0                                l5982 1744  
                              l5958 1700                                l5894 1594  
                              l5886 1566                                l4998 1C30  
                              l5976 1720                                l5992 1756  
                              l5896 159E                                l5888 156A  
                              l5978 1724                                l5994 1794  
                              l5898 15AE                                STR_1 FF9E  
                              STR_2 FEA2                                STR_3 FF27  
                              STR_4 FFA4                                STR_5 FFC8  
                              STR_6 FE91                                STR_7 FFC8  
                              STR_8 FEE6                                STR_9 FEC4  
                              u3000 3266                                u3001 3262  
                              u3010 2D50                                u3011 2D4C  
                              u3020 2D6E                                u3021 2D6A  
                              u3030 2DB4                                u3031 2DB0  
                              u3040 2DC4                                u3200 2674  
                              u3041 2DC0                                u3201 2670  
                              u3130 29F4                                u3210 268E  
                              u3131 29F0                                u3211 268A  
                              u4100 302C                                u3140 2A1A  
                              u3300 2B84                                u3220 269E  
                              u3141 2A16                                u3301 2B80  
                              u3221 269A                                u4110 3060  
                              u3150 2A36                                u3310 2BFC  
                              u3230 2140                                u3151 2A32  
                              u3311 2BF8                                u3231 213C  
                              u4120 3070                                u3160 2A80  
                              u5000 1F68                                u4121 306C  
                              u3161 2A7C                                u5001 1F64  
                              u4050 3672                                u3170 2A90  
                              u3250 21A0                                u4130 33CA  
                              u5010 1F8A                                u4051 366E  
                              u4107 3022                                u3171 2A8C  
                              u3251 219C                                u5011 1F86  
                              u4060 3296                                u3180 2652  
                              u3260 21B2                                u4140 33DA  
                              u5020 1FB2                                u5100 1D98  
                              u4061 3292                                u4117 3056  
                              u3181 264E                                u3261 21AE  
                              u3245 2170                                u4141 33D6  
                              u5021 1FAE                                u5101 1D94  
                              u4070 32AC                                u3190 2664  
                              u3270 21C2                                u4150 3402  
                              u5030 1FE4                                u5110 1DFE  
                              u4071 32A8                                u3191 2660  
                              u3271 21BE                                u4151 33FE  
                              u5031 1FE0                                u5111 1DFA  
                              u4080 32C2                                u3280 21DC  
                              u6000 0192                                u4160 342A  
                              u4400 2838                                u5040 2412  
                              u5120 1E4C                                u4081 32BE  
                              u3281 21D8                                u6001 018E  
                              u4161 3426                                u4137 33C0  
                              u4401 2834                                u5041 240E  
                              u5121 1E48                                u4410 3396  
                              u4090 32D8                                u3290 21EC  
                              u4170 346C                                u6010 01AA  
                              u5050 2434                                u5130 1EBC  
                              u4411 3392                                u4091 32D4  
                              u3291 21E8                                u4171 3468  
                              u6011 01A6                                u5051 2430  
                              u5131 1EB8                                u5300 1A4E  
                              u2900 2B18                                u6100 02A0  
                              u6020 01BC                                u4420 2F8C  
                              u4500 29BE                                u5060 245A  
                              u5140 1EFA                                u5301 1A4A  
                              u2901 2B14                                u6101 029C  
                              u6021 01B8                                u4421 2F88  
                              u4501 29BA                                u5061 2456  
                              u5141 1EF6                                u5310 1A6E  
                              u2910 34F4                                u6110 02D0  
                              u6030 01E4                                u4430 2F9C  
                              u4510 29D6                                u5070 247C  
                              u5311 1A6A                                u2911 34F0  
                              u6111 02CC                                u6031 01E0  
                              u4431 2F98                                u4511 29D2  
                              u5071 2478                                u5320 1A8C  
                              u3800 190A                                u6200 044A  
                              u6120 02EC                                u6040 01FA  
                              u4440 2FB4                                u4360 27B0  
                              u4600 105C                                u7000 16FC  
                              u5080 249A                                u5400 1CD0  
                              u3705 232C                                u5321 1A88  
                              u3801 1906                                u6201 0446  
                              u6121 02E8                                u6041 01F6  
                              u4441 2FB0                                u4361 27AC  
                              u4601 1058                                u7001 16F8  
                              u5081 2496                                u5401 1CCC  
                              u5330 1AAC                                u6210 0472  
                              u6130 0304                                u6050 021C  
                              u4450 2FC4                                u4370 27E2  
                              u4610 1086                                u7010 1732  
                              u5090 24CA                                u3715 2352  
                              u5331 1AA8                                u6211 046E  
                              u6131 0300                                u6051 0218  
                              u4451 2FC0                                u4371 27DE  
                              u4611 1082                                u7011 172E  
                              u5091 24C6                                u5340 1ACA  
                              u6220 0484                                u6140 0324  
                              u6060 0230                                u6300 06B6  
                              u4460 2FDC                                u4380 27FE  
                              u4700 11AA                                u4620 10A2  
                              u7020 1752                                u3725 2216  
                              u5341 1AC6                                u6221 0480  
                              u6141 0320                                u6061 022C  
                              u6301 06B2                                u4461 2FD8  
                              u4381 27FA                                u4701 11A6  
                              u4621 109E                                u7021 174E  
                              u5350 1AF4                                u2870 2AB0  
                              u2950 308C                                u3750 17D6  
                              u6230 0540                                u6150 033E  
                              u6070 0242                                u6310 06C8  
                              u4470 2FEC                                u4390 2810  
                              u4630 10BE                                u4710 250A  
                              u3735 2230                                u5351 1AF0  
                              u2871 2AAC                                u2951 3088  
                              u3751 17D2                                u6231 053C  
                              u6151 033A                                u6071 023E  
                              u6311 06C4                                u4471 2FE8  
                              u4391 280C                                u4631 10BA  
                              u4711 2506                                u4560 353C  
                              u5280 1A18                                u2880 2AC0  
                              u2960 30AA                                u3760 1844  
                              u6240 0550                                u6160 0356  
                              u6080 0254                                u6400 07D8  
                              u6320 06DA                                u4480 2932  
                              u4800 1398                                u4640 10DA  
                              u4720 2528                                u5360 1C1E  
                              u3745 2256                                u4561 3538  
                              u5281 1A14                                u2881 2ABC  
                              u2961 30A6                                u3761 1840  
                              u6241 054C                                u6161 0352  
                              u6081 0250                                u6401 07D4  
                              u6321 06D6                                u4481 292E  
                              u4801 1394                                u4641 10D6  
                              u4721 2524                                u5361 1C1A  
                              u4570 3600                                u5290 1A3C  
                              u2890 2AE6                                u2970 30C6  
                              u3770 1868                                u6250 057E  
                              u6170 0364                                u6090 0288  
                              u6410 0804                                u6330 06FA  
                              u4490 2978                                u4810 13B4  
                              u4650 10F6                                u4730 2550  
                              u5370 1C7E                                u4571 35FC  
                              u5291 1A38                                u2891 2AE2  
                              u2971 30C2                                u3771 1864  
                              u6251 057A                                u6171 0360  
                              u6091 0284                                u6411 0800  
                              u6331 06F6                                u4491 2974  
                              u4811 13B0                                u4651 10F2  
                              u4731 254C                                u7107 16E4  
                              u5371 1C7A                                u2980 3232  
                              u3780 1894                                u6260 05D4  
                              u6180 03F8                                u6500 098A  
                              u6420 0820                                u6340 070E  
                              u4900 2ECC                                u4820 13D0  
                              u4660 1112                                u4580 1016  
                              u4740 25B0                                u5380 1C9C  
                              u2981 322E                                u3781 1890  
                              u6261 05D0                                u6181 03F4  
                              u6501 0986                                u6421 081C  
                              u6341 070A                                u4901 2EC8  
                              u4821 13CC                                u4661 110E  
                              u4581 1012                                u4741 25AC  
                              u7117 170C                                u5381 1C98  
                              u7037 31DE                                u2990 3250  
                              u3790 18EE                                u6270 0604  
                              u6190 0410                                u6510 099C  
                              u6430 0834                                u6350 0728  
                              u4910 2DF4                                u4830 13EC  
                              u4750 12F0                                u4670 1140  
                              u4590 1034                                u5390 1CBA  
                              u3695 2312                                u7207 1AB2  
                              u2991 324C                                u3791 18EA  
                              u6271 0600                                u6191 040C  
                              u6511 0996                                u6431 0830  
                              u6351 0724                                u4911 2DF0  
                              u4831 13E8                                u4751 12EC  
                              u4671 113C                                u4591 1030  
                              u7127 173A                                u5391 1CB6  
                              u7047 3202                                u6280 0612  
                              u6520 099E                                u6440 0858  
                              u6360 0750                                u6600 0E2C  
                              u4920 2E12                                u4840 141A  
                              u4760 130E                                u4680 1150  
                              u7217 1B38                                u6281 060E  
                              u6441 0854                                u6361 074C  
                              u6601 0E28                                u4921 2E0E  
                              u4841 1416                                u4761 130A  
                              u4681 114C                                u7137 17A0  
                              u7057 1D08                                u6450 087C  
                              u6370 078E                                u6290 0670  
                              u6610 0E5E                                u6530 0D00  
                              u4930 2E3A                                u4850 142A  
                              u4770 1336                                u4690 1188  
                              u7227 3542                                u5811 2C0C  
                              u6451 0878                                u6371 078A  
                              u6291 066C                                u6611 0E5A  
                              u6531 0CFC                                u4931 2E36  
                              u4851 1426                                u4771 1332  
                              u4691 1184                                u7147 2510  
                              u7067 1D54                                u5820 2C20  
                              u5900 206C                                u6460 08C4  
                              u6380 07A2                                u6700 0FF2  
                              u6620 0EC0                                u6540 0D28  
                              u4860 1462                                u4780 1360  
                              u7237 2F1C                                u5821 2C1C  
                              u5901 2068                                u6461 08C0  
                              u6381 079E                                u6701 0FEE  
                              u6621 0EBC                                u6541 0D22  
                              u4861 145E                                u4781 135C  
                              u7157 101C                                u7077 1D78  
                              u5830 2C82                                u5910 20E6  
                              u6470 08DA                                u6390 07B4  
                              u6630 0EE8                                u6550 0D2A  
                              u6710 28B4                                u4870 1484  
                              u4790 137C                                u7247 2F3C  
                              u5831 2C7E                                u5911 20E2  
                              u6471 08D6                                u6391 07B0  
                              u6631 0EE4                                u6711 28B0  
                              u4871 1480                                u4791 1378  
                              u7167 12F6                                u7087 1660  
                              u5840 2CB8                                u5920 3168  
                              u6480 0960                                u6640 0F16  
                              u6560 0D4E                                u6720 28DC  
                              u6800 0AC8                                u4880 2E86  
                              u4960 3104                                u7257 2F4A  
                              u4945 26F4                                u5841 2CB4  
                              u5921 3164                                u6481 095C  
                              u6641 0F12                                u6561 0D4A  
                              u6721 28D8                                u6801 0AC4  
                              u4881 2E82                                u7177 2DFA  
                              u7097 16A0                                u4961 3100  
                              u5850 2CCC                                u5930 3180  
                              u6490 0972                                u6650 0F3E  
                              u6570 0D70                                u6730 28F8  
                              u6810 0AE6                                u4890 2EA4  
                              u4970 313E                                u7267 3620  
                              u4955 275E                                u5851 2CC8  
                              u5931 317C                                u6491 096E  
                              u6651 0F3A                                u6571 0D6C  
                              u6731 28F4                                u6811 0AE2  
                              u4891 2EA0                                u7187 2E8C  
                              u4971 313A                                u5860 2CE0  
                              u5940 31B8                                u6660 0F6C  
                              u6580 0DAC                                u6740 290A  
                              u6820 0B04                                u6900 15C0  
                              u4980 1F0C                                u7277 36BC  
                              u7197 1A74                                u5861 2CDC  
                              u5941 31B4                                u6661 0F68  
                              u6581 0DA8                                u6741 2906  
                              u6821 0B00                                u6901 15BC  
                              u4981 1F08                                u5870 2D10  
                              u6670 0F84                                u6590 0DFE  
                              u6830 0B2A                                u6750 0A14  
                              u6910 15E6                                u4990 1F2E  
                              u5951 00E8                                u5871 2D0C  
                              u6671 0F80                                u6591 0DFA  
                              u6831 0B26                                u6751 0A10  
                              u6911 15E2                                u4991 1F2A  
                              u5960 0112                                u5880 2016  
                              u6680 0F98                                u6840 0C28  
                              u6760 0A3E                                u6920 15F8  
                              u5961 010E                                u5881 2012  
                              u6681 0F94                                u6841 0C24  
                              u6761 0A3A                                u6921 15F4  
                              u5970 0124                                u5890 2028  
                              u6690 0FDA                                u6850 0C44  
                              u6770 0A5C                                u6930 161E  
                              u5971 0120                                u5891 2024  
                              u6691 0FD6                                u6851 0C40  
                              u6771 0A58                                u6931 161A  
                              u5980 0144                                u6860 0C56  
                              u6780 0A80                                u6940 1630  
                              u5981 0140                                u6861 0C52  
                              u6781 0A7C                                u6941 162C  
                              u5990 015C                                u6870 0C8C  
                              u6790 0A9E                                u6950 1658  
                              u5991 0158                                u6871 0C88  
                              u6791 0A9A                                u6951 1654  
                              u6960 1678                                u6880 158A  
                              u6961 1674                                u6881 1586  
                              u6970 1698                                u6890 15AE  
                              u6971 1694                                u6891 15AA  
                              u6980 16B8                                u6981 16B4  
                              u6990 16DC                                u6991 16D8  
                    _UART1_SendChar 3662                   _live_reading_mode 36AA  
                 _air_intake_string 00D3                                _dbuf 015C  
                              _ctoa 29E0                                _main 31BA  
                              _asup 00CE                                _atox 064A  
                              _ncnv 00B9                                _prec 00C1  
                              pad@i 0017                                pad@p 0014  
                              fsr0h 0FEA                                fsr1h 0FE2  
                   ??_print_AI_Temp 004E                                indf0 0FEF  
                              fsr2h 0FDA                                fsr0l 0FE9  
                              indf1 0FE7                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
                              btemp 005C                                _utoa 25D4  
                              _xtoa 2108                  ?_live_reading_mode 0001  
                       atox@seen_0x 0064                                prodh 0FF4  
                              prodl 0FF3               __end_of_parsing_notif 364A  
                              start 00DC                    __end_of_ADC_init 36D0  
                      ___param_bank 0000                 ??_live_reading_mode 0051  
                       ?_UART1_Init 0001                               ??_pad 0016  
                      _BAUDCON1bits 0FB8                    __end_of_LCD_init 2F7A  
          _diagnostic_trouble_codes 09B0                     __end_of___aldiv 2006  
                   __end_of___almod 24EC                               ?_ctoa 000B  
                             ?_main 0001                               ?_atox 004B  
                             STR_10 FF9E                               STR_11 FED5  
                             STR_20 FFBC                               STR_12 FEF7  
                             STR_21 FF4D                               STR_13 FFFC  
                             STR_30 FFC8                               STR_14 FFFA  
                             STR_22 FFC2                               STR_23 FFE8  
                             STR_31 FFE4                               STR_15 FFB0  
                             STR_40 FFF7                               STR_16 FFD2  
                             STR_24 FFB6                               STR_32 FFAA  
                             STR_41 FFF7                               STR_17 FFF4  
                             STR_25 FFD7                               STR_33 FFCD  
                             STR_18 FF4D                               STR_34 FF46  
                             STR_50 FF88                               STR_26 FFF4  
                             STR_42 FF6F                               STR_27 FF4F  
                             STR_19 FFEC                               STR_43 FF53  
                             STR_35 FF45                               STR_28 FFF0  
                             STR_36 FF93                               STR_44 FF36  
                             STR_29 FFD5                               STR_37 FF17  
                             STR_45 FEB3                               STR_46 FFE0  
                             STR_38 FF7D                               STR_39 FFDC  
                             STR_47 FF61                               STR_48 FF88  
                             STR_49 FF07                               ?_utoa 0019  
                             ?_xtoa 0019                     __end_of___lwdiv 30E6  
                   __end_of___lwmod 3284                               i2l166 00D0  
                      vfpfcnvrt@fmt 0026                               _TXREG 0FAD  
                             _A_rpm 00CB                               _B_rpm 00C9  
               ___lmul@multiplicand 0007                    __end_of_UART_ISR 00DC  
                   __end_of_readADC 3562                               _fgetc 2006  
            __end_of_UART1_SendChar 3678                               _flags 00CF  
                             _getch 36D0        welcome_splash@CCP1IF_counter 0020  
               read_prec_or_width@c 0007                               _errno 00BD  
               read_prec_or_width@n 0008                               _fputc 2AA0  
         __end_of_live_reading_mode 36B8                               _fputs 34B6  
                             pad@fp 0011                               _width 00BF  
                             ctoa@c 000C                               _putch 36DA  
                             ctoa@l 000E                               ctoa@w 0010  
                             atox@c 0068                               atox@i 0066  
                             atox@w 0060                               tablat 0FF5  
                 UART1_SendString@i 0008             ?_clear_diagnostic_codes 0001  
                   __end_of_vfscanf 2920                               ttemp5 005D  
                             ttemp6 0060                               ttemp7 0064  
                             utoa@d 001A                               utoa@i 001F  
                             utoa@p 001C                               utoa@w 001D  
                             status 0FD8                               wtemp8 005D  
                   __end_of_sprintf 34B6                               xtoa@c 0022  
                             xtoa@d 001A                               xtoa@i 0023  
                             xtoa@p 001F                               xtoa@w 0020  
                   __end_of_strncmp 285C                   _dbuf@doscan$F2256 013C  
              print_AI_Temp@ait_ptr 0081                     __initialization 32E4  
                      __end_of_ctoa 2AA0                        __end_of_main 3220  
                      __end_of_atox 09B0                        __end_of_utoa 26BC  
                      __end_of_xtoa 220A                        vfsfcnvrt@fmt 006B  
                      vfsfcnvrt@llu 0071                   ?_LCD_write_string 0006  
                            ??_ctoa 000D                              ??_main 00A8  
                            ??_atox 004D                              ??_utoa 001C  
                            ??_xtoa 001C                       __activetblptr 0002  
                ??_LCD_write_string 0008         __end_of_clear_parsing_notif 3662  
        __end_of_read_prec_or_width 2C06                   __end_of_LCD_clear 3632  
                            ?_fgetc 0005                              ?_getch 0003  
                            _ADCON0 0FC2                              _ADCON1 0FC1  
                            _ADCON2 0FC0                     ?_UART1_SendChar 0001  
                            ?_fputc 0003                              ?_fputs 000B  
                            _ADRESH 0FC4                              _ADRESL 0FC3  
                            _CCPR1H 0FBF                              _CCPR1L 0FBE  
                            ?_putch 0001                              _ANSELC 0F3A  
    __end_of_clear_diagnostic_codes 1BAC                              i2l5200 00BE  
                            i2l5202 00CC                              i2l5180 002E  
                            i2l5190 0078                              i2l5182 0040  
                            i2l5192 0088                              i2l5184 0044  
                            i2l5176 0012                              i2l5186 0056  
                            i2l5194 008A                              i2l5178 0020  
                            i2l5196 009C                              i2l5188 0066  
                            i2l5198 00AE           diagnostic_trouble_codes@i 00A4  
                            _RCREG1 0FAE                 _display_system_info 34F6  
            LCD_write_string@string 0006                              _OSCCON 0FD3  
                     vfpfcnvrt@done 002B                              _SPBRG1 0FAF  
     diagnostic_trouble_codes@F6630 00B4       diagnostic_trouble_codes@F6632 00B1  
     clear_diagnostic_codes@opt_sel 000D                    _UART1_SendString 3342  
   LCD_write_variable@temp_variable 0018                        vfprintf@cfmt 0036  
                      ___strtoxll@a 0040                        ___strtoxll@c 004A  
                      ___strtoxll@s 001B                              ___lmul 30E6  
                            ___omul 2C06                           ??___aldiv 000B  
                         ??___almod 000B                           ??___lwdiv 0007  
      ??_LCD_configure_cursor_blink 0006                           ??___lwmod 0007  
                            _buffer 0200       diagnostic_trouble_codes@byte1 009E  
     diagnostic_trouble_codes@byte2 00A0                read_prec_or_width@ap 0004  
              ?_display_system_info 0001                              clear_0 330C  
                            clear_1 331E                              clear_2 332A  
                            _nmatch 00B7                              fgetc@c 000C  
                            isa$std 0001                              _result 005A  
                            _sscanf 3562                              pad@buf 0012  
                            _skipws 3150                              _ungetc 2CA4  
                            ctoa@fp 000B                              atox@ep 0062  
                            atox@fp 004B                              _strchr 33E8  
                            _strlen 3398                              _strstr 2920  
                         ??_readADC 0005                              fputc@c 0003  
                            fputs@c 000E                              fputs@i 000F  
                            fputs@s 000B                    ??_welcome_splash 001C  
                      __mediumconst FE90                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                         ?_ADC_init 0001                              putch@c 0001  
                         ??_vfscanf 0057                    __end_of_vfprintf 3476  
                            utoa@fp 0019                    ___strtoxll@flags 003F  
                         ??_sprintf 0042                    ___strtoxll@limit 0037  
                            xtoa@fp 0019                           ??_strncmp 0009  
                      ?_print_Vbatt 0001                          __accesstop 0060  
           __end_of__initialization 3334                           ?_LCD_init 0001  
                  print_RPM@rpm_ptr 0081                       ___rparam_used 0001  
                   UART1_SendChar@c 0003                      __pcstackCOMRAM 0001  
                      __pidataBANK0 36D6                           ?_UART_ISR 0001  
                    _LCD_entry_mode 00F5                       __end_of_fgetc 2108  
                 _LCD_write_command 2306                       __end_of_getch 36D6  
                     __end_of_fputc 2B5A                       __end_of_fputs 34F6  
             ??_display_system_info 000C                       __end_of_putch 36DC  
                    _LCD_cursor_set 3284                  ?_LCD_write_command 0001  
        __end_of_LCD_write_variable 1EFC                          ___ungetbuf 00AE  
                        ___ungetcnt 00CD                   _hex_char_to_value 2F7A  
                ?_hex_char_to_value 0001                 ??_LCD_write_command 0003  
                        ??_ADC_init 0003                          ___strtoxll 00E0  
                     decode_dtc@dtc 0052                             ??_fgetc 0007  
                           ??_getch 0005                  _width@doscan$F2253 00BB  
                           ??_fputc 0006                             ??_fputs 000E  
                           ??_putch 0003                          __pbssBANK0 00AA  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
               ??_hex_char_to_value 0003                          _decode_dtc 26BC  
                        ??_LCD_init 0007          ??_diagnostic_trouble_codes 0096  
         __end_of_LCD_write_command 2402                             ?___lmul 0003  
                           ?___omul 0003                        ??_UART1_Init 0003  
                        ??_UART_ISR 0001              __end_of_LCD_cursor_set 32E4  
               ___omul@multiplicand 000B                      ___lmul@product 000B  
         __end_of_hex_char_to_value 2FF8                   __end_of_ccp1_init 368A  
                           ?_sscanf 0085                             ?_skipws 000E  
                           ?_ungetc 0003                             ?_strchr 0003  
                           ?_strlen 0003                             ?_strstr 000A  
                           _SPBRGH1 0FB0                          _display_mm 3594  
          LCD_write_command@command 0005                  __end_of_UART1_Init 35EE  
                           _RX_char 00D1               __end_of_print_AI_Temp 1562  
                           __Hparam 0000                             __Lparam 0000  
__end_of_LCD_configure_cursor_blink 3614          _LCD_configure_cursor_blink 35EE  
                  _message_complete 00D0                       ___strtoxll@cp 0048  
                           ___aldiv 1EFC                             ___almod 2402  
                   ?_LCD_cursor_set 0006                      _LCD_write_data 220A  
                           ___lwdiv 3072          LCD_write_variable@variable 0011  
                           ___lwmod 3220                           ?_vfprintf 0032  
                 __end_of_main_menu 17B4                             __pcinit 32E4  
                           __ramtop 1000                             __ptext0 31BA  
                           __ptext1 1BAC                             __ptext2 368A  
                           __ptext3 3678                             __ptext4 1D88  
                           __ptext5 30E6                             __ptext6 2402  
                           __ptext7 1EFC                             __ptext8 1562  
                           __ptext9 36AA                             _readADC 352C  
                         _T1CONbits 0FCD                    ??_UART1_SendChar 0003  
             read_prec_or_width@fmt 0003                    ___aldiv@dividend 0003  
          __end_of_UART1_SendString 3398                             fgetc@fp 0005  
                       ?___strtoxll 001B                             _vfscanf 285C  
                        _input_init 369A                             _sprintf 3476  
                           atox@pll 004C                             _strncmp 2796  
                         _LCD_clear 3614                end_of_initialization 3334  
                 __end_of_tmr1_init 369A                         ?_decode_dtc 004E  
                    ___omul@product 0013                             fputc@fp 0005  
                     __Lmediumconst FE90                             fputs@fp 000D  
                _read_prec_or_width 2B5A                LCD_cursor_set@column 0006  
                 __end_of_print_RPM 12D2                       ?_print_ELMVer 0001  
                      _buffer_count 00D2                 _LCD_display_control 00F6  
            __end_of_LCD_write_data 2306                   __end_of_vfpfcnvrt 19BC  
                     ?_print_SAEVer 0001                           _RCSTAbits 0FAB  
                           sscanf@f 008B                             sscanf@s 0085  
                           skipws@c 0010                    ___aldiv@quotient 000D  
                 __end_of_vfsfcnvrt 0FF8                             postdec1 0FE5  
                           postdec2 0FDD                 ?_read_prec_or_width 0003  
                           ungetc@c 0003                             postinc0 0FEE  
                           postinc1 0FE6                             postinc2 0FDE  
                  vfpfcnvrt@convarg 002C                          ??_vfprintf 0036  
                 ___strtoxll@endptr 001D                             strchr@c 0005  
                           strchr@s 0003                             strlen@a 0005  
                           strlen@s 0003                             strstr@h 000A  
                           strstr@n 000C                   ___strtoxll@prev_a 002B  
                         _PORTBbits 0F81                           _PORTCbits 0F82  
                 ??_LCD_pulse_clock 0003                          _rpm_string 00E3  
                         _TRISAbits 0F92                           _TRISBbits 0F93  
                         _TRISCbits 0F94                           _TRISDbits 0F95  
                vfscanf@saved_errno 007F                ??_read_prec_or_width 0005  
                       ?_display_mm 0001                          ?_LCD_clear 0001  
                   _air_intake_temp 00C3                         _CCP1CONbits 0FBD  
                         _TXSTAbits 0FAC    __end_of_diagnostic_trouble_codes 0CDC  
                    ??_print_ELMVer 000B                       _parsing_notif 3632  
                    ??_print_SAEVer 000B                         vfscanf@cfmt 0083  
                   ?_LCD_write_data 0001               print_RPM@clean_buffer 0060  
                    __end_of___lmul 3150                      __end_of___omul 2CA4  
                       vfpfcnvrt@ap 0027                         vfpfcnvrt@cp 0030  
                       vfpfcnvrt@fp 0025                      __end_of_sscanf 3594  
                    __end_of_skipws 31BA                      __end_of_ungetc 2D40  
                    __end_of_strchr 3434                      __end_of_strlen 33E8  
                    __end_of_strstr 29E0                 start_initialization 32E4  
                       __end_of_pad 2DD6                         ?_input_init 0001  
                       vfsfcnvrt@ap 006C                         vfsfcnvrt@fp 006A  
                       vfsfcnvrt@vp 006E                  _LCD_write_variable 1D88  
                 ___omul@multiplier 0003                 LCD_write_variable@i 0016  
               ?_LCD_write_variable 0011                      ?_parsing_notif 0001  
       __end_of_display_system_info 352C                     ___strtoxll$2306 0033  
                   ___strtoxll$2307 0035                         vfprintf@fmt 0033  
                          ??___lmul 000B                            ??___omul 0013  
                    decode_dtc@type 0059                         __pdataBANK0 00F3  
                          ??_sscanf 0057                            ??_skipws 000F  
                   ___strtoxll@base 001E                            ??_ungetc 0006  
                          ??_strchr 0007                            ??_strlen 0005  
                          ??_strstr 000E                ??_LCD_write_variable 0016  
          ??_clear_diagnostic_codes 000B                         __pbssCOMRAM 005A  
                         _ccp1_init 3678                       __pcstackBANK0 0060  
         print_AI_Temp@clean_buffer 0060                         ??_LCD_clear 0006  
                  _LCD_write_string 2FF8                        decode_dtc@b1 004E  
                      decode_dtc@b2 0050                    ??_LCD_cursor_set 0007  
                  ___lwdiv@dividend 0003     LCD_configure_cursor_blink@state 0006  
                         __pintcode 0008                       __pmediumconst FE90  
                          ?___aldiv 0003                            ?___almod 0003  
       ?_LCD_configure_cursor_blink 0001                            ?___lwdiv 0003  
                          ?___lwmod 0003              UART1_SendString@string 0004  
                         _dtc_codes 0100                    ___almod@dividend 0003  
                          ?_readADC 0003                         __smallconst FE90  
                         _main_menu 1562                          ?_ccp1_init 0001  
         ?_diagnostic_trouble_codes 0001                __end_of_print_ELMVer 2EFA  
                      ??___strtoxll 0023                            _ADC_init 36C4  
              __end_of_print_SAEVer 2E68                   ?_UART1_SendString 0004  
                          ?_vfscanf 007B                    ___lwdiv@quotient 0007  
                          ?_sprintf 0038                  LCD_write_data@data 0005  
                          ?_strncmp 0003                  ??_UART1_SendString 0006  
                      ??_decode_dtc 0054                     ___aldiv@divisor 0007  
                   ___aldiv@counter 000B                     ??_parsing_notif 000B  
                          _LATDbits 0F8C                            _LCD_init 2EFA  
                          _PIE1bits 0F9D                           _tmr1_init 368A  
                          _PIR1bits 0F9E                            i2u560_40 0066  
                          i2u560_41 0062                            i2u561_40 0078  
                          i2u561_41 0074                            i2u562_40 009C  
                          i2u562_41 0098                            i2u563_40 00AE  
                          i2u563_41 00AA                            i2u564_40 00BE  
                          i2u556_40 0020                            i2u564_41 00BA  
                          i2u556_41 001C                            i2u557_40 002E  
                          i2u557_41 002A                            i2u558_40 0040  
                          i2u558_41 003C                            i2u559_40 0056  
                          i2u559_41 0052                     _LCD_pulse_clock 36B8  
                          _UART_ISR 0008                  __end_of___strtoxll 064A  
                         _print_RPM 0FF8                 _clear_parsing_notif 364A  
                         _vfpfcnvrt 17B4                           _vfsfcnvrt 0CDC  
                        _ADCON0bits 0FC2                          print_RPM@i 0083  
                        print_RPM@j 0080                  __end_of_decode_dtc 2796  
                        ?_main_menu 0001                          vfscanf@fmt 007C  
                      ??_display_mm 000B                          vfpfcnvrt@c 002A  
                     ??_print_Vbatt 000B                   ___lmul@multiplier 0003  
                         copy_data0 32F8                ?_clear_parsing_notif 0001  
                        vfsfcnvrt@c 0079                          vfsfcnvrt@i 006F  
                  ??_LCD_write_data 0003                          ?_tmr1_init 0001  
                          __Hrparam 0000            LCD_write_variable@digits 0017  
                         modff@F522 00AA                          vfprintf@ap 0035  
                          __Lrparam 0000                          vfprintf@fp 0032  
                hex_char_to_value@c 0003                   LCD_cursor_set@row 0007  
                        ?_print_RPM 0001                  __end_of_display_mm 35C2  
                        ?_vfpfcnvrt 0025                          ?_vfsfcnvrt 006A  
                        _ANSELAbits 0F38                          _ANSELBbits 0F39  
                        _ANSELCbits 0F3A                          sprintf@fmt 003A  
                       ??_ccp1_init 0003                     ___lwdiv@divisor 0005  
                   ___lwdiv@counter 0009                        ??_input_init 0003  
                          __ptext10 24EC                            __ptext11 0FF8  
                          __ptext20 2E68                            __ptext12 12D2  
                          __ptext21 09B0                            __ptext13 2920  
                          __ptext30 00E0                            __ptext22 3562  
                          __ptext14 2796                            __ptext31 2C06  
                          __ptext23 285C                            __ptext15 3398  
                          __ptext40 3220                            __ptext32 26BC  
                          __ptext24 0CDC                            __ptext16 33E8  
                          __ptext41 3072                            __ptext33 3476  
                          __ptext25 064A                            __ptext17 2F7A  
                          __ptext50 364A                            __ptext42 2B5A  
                          __ptext34 3434                            __ptext26 3150  
                          __ptext18 34F6                            __ptext51 2FF8  
                          __ptext43 29E0                            __ptext35 17B4  
                          __ptext27 2CA4                            __ptext19 2DD6  
                          __ptext60 3614                            __ptext52 220A  
                          __ptext44 2AA0                            __ptext36 2108  
                          __ptext28 2006                            __ptext61 2306  
                          __ptext53 3284                            __ptext45 36DA  
                          __ptext37 25D4                            __ptext29 36D0  
                          __ptext62 36B8                            __ptext54 3342  
                          __ptext46 19BC                            __ptext38 2D40  
                          __ptext63 36C4                            __ptext55 3662  
                          __ptext47 352C                            __ptext39 34B6  
                          __ptext56 35EE                            __ptext48 3632  
                          __ptext57 369A                            __ptext49 3594  
                          __ptext58 35C2                            __ptext59 2EFA  
             ??_clear_parsing_notif 000B                     ___almod@divisor 0007  
                   ___almod@counter 000B                      _welcome_splash 1BAC  
              ___strtoxll@is_signed 0020             __end_of_LCD_pulse_clock 36C4  
                          _menu_sel 00F3                 __end_of_print_Vbatt 25D4  
            _clear_diagnostic_codes 19BC                       _print_AI_Temp 12D2  
                          isa$xinst 0000                            int$flags 005C  
                          _vfprintf 3434                  __end_of_input_init 36AA  
                         sscanf@fmt 0086            __end_of_LCD_write_string 3072  
                         vfscanf@ap 007E                           vfscanf@fp 007B  
     LCD_write_variable@left_offset 0015                         ??_main_menu 00A6  
                        _INTCONbits 0FF2              __end_of_welcome_splash 1D88  
                 LCD_write_string@i 000A                            intlevel2 0000  
                         sprintf@ap 0042                    ___lwmod@dividend 0003  
                       ??_tmr1_init 0003                          _RCSTA1bits 0FAB  
                    ?_print_AI_Temp 0001             welcome_splash@plug_flag 001E  
                      _print_ELMVer 2E68   diagnostic_trouble_codes@dtc_index 00A2  
                      _print_SAEVer 2DD6                            sscanf@ap 008A  
                        _UART1_Init 35C2                            skipws@fp 000E  
                          vfscanf@n 0081                         ??_print_RPM 004E  
 diagnostic_trouble_codes@byte1_str 0098   diagnostic_trouble_codes@byte2_str 009B  
                          ungetc@fp 0005                         ??_vfpfcnvrt 0028  
                       ??_vfsfcnvrt 0055                            sprintf@f 0043  
                          sprintf@s 0038                     ___lwmod@divisor 0005  
                      _A_air_intake 00C5                     ___lwmod@counter 0007  
                          strncmp@l 0003                            strncmp@n 0007  
                          strncmp@r 0005                        ___aldiv@sign 000C  
                          strstr@nl 000E                     ?_welcome_splash 0001  
                       _print_Vbatt 24EC                        ___almod@sign 000C  
                  ?_LCD_pulse_clock 0001  
