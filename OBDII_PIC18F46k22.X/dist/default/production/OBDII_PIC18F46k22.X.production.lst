

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 01 00:10:50 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=4
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=4
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=4
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=4
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=4
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=4
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=4
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=4
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=4
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=4
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=4
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=3
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=4
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=4
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84   000000                     
    85                           ; Generated 12/10/2023 GMT
    86                           ; 
    87                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F46K22 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119   000FE0                     bsr             equ	4064
   120   000FE9                     fsr0            equ	4073
   121   000FEA                     fsr0h           equ	4074
   122   000FE9                     fsr0l           equ	4073
   123   000FE1                     fsr1            equ	4065
   124   000FE2                     fsr1h           equ	4066
   125   000FE1                     fsr1l           equ	4065
   126   000FD9                     fsr2            equ	4057
   127   000FDA                     fsr2h           equ	4058
   128   000FD9                     fsr2l           equ	4057
   129   000FEF                     indf0           equ	4079
   130   000FE7                     indf1           equ	4071
   131   000FDF                     indf2           equ	4063
   132   000FF2                     intcon          equ	4082
   133   000000                     nvmcon          equ	0
   134   000FF9                     pcl             equ	4089
   135   000FFA                     pclath          equ	4090
   136   000FFB                     pclatu          equ	4091
   137   000FEB                     plusw0          equ	4075
   138   000FE3                     plusw1          equ	4067
   139   000FDB                     plusw2          equ	4059
   140   000FED                     postdec0        equ	4077
   141   000FE5                     postdec1        equ	4069
   142   000FDD                     postdec2        equ	4061
   143   000FEE                     postinc0        equ	4078
   144   000FE6                     postinc1        equ	4070
   145   000FDE                     postinc2        equ	4062
   146   000FEC                     preinc0         equ	4076
   147   000FE4                     preinc1         equ	4068
   148   000FDC                     preinc2         equ	4060
   149   000FF3                     prod            equ	4083
   150   000FF4                     prodh           equ	4084
   151   000FF3                     prodl           equ	4083
   152   000FD8                     status          equ	4056
   153   000FF5                     tablat          equ	4085
   154   000FF6                     tblptr          equ	4086
   155   000FF7                     tblptrh         equ	4087
   156   000FF6                     tblptrl         equ	4086
   157   000FF8                     tblptru         equ	4088
   158   000FFD                     tosl            equ	4093
   159   000FE8                     wreg            equ	4072
   160   000F38                     ANSELA          equ	3896	;# 
   161   000F39                     ANSELB          equ	3897	;# 
   162   000F3A                     ANSELC          equ	3898	;# 
   163   000F3B                     ANSELD          equ	3899	;# 
   164   000F3C                     ANSELE          equ	3900	;# 
   165   000F3D                     PMD2            equ	3901	;# 
   166   000F3E                     PMD1            equ	3902	;# 
   167   000F3F                     PMD0            equ	3903	;# 
   168   000F40                     VREFCON2        equ	3904	;# 
   169   000F40                     DACCON1         equ	3904	;# 
   170   000F41                     VREFCON1        equ	3905	;# 
   171   000F41                     DACCON0         equ	3905	;# 
   172   000F42                     VREFCON0        equ	3906	;# 
   173   000F42                     FVRCON          equ	3906	;# 
   174   000F43                     CTMUICON        equ	3907	;# 
   175   000F43                     CTMUICONH       equ	3907	;# 
   176   000F44                     CTMUCONL        equ	3908	;# 
   177   000F44                     CTMUCON1        equ	3908	;# 
   178   000F45                     CTMUCONH        equ	3909	;# 
   179   000F45                     CTMUCON0        equ	3909	;# 
   180   000F46                     SRCON1          equ	3910	;# 
   181   000F47                     SRCON0          equ	3911	;# 
   182   000F48                     CCPTMRS1        equ	3912	;# 
   183   000F49                     CCPTMRS0        equ	3913	;# 
   184   000F4A                     T6CON           equ	3914	;# 
   185   000F4B                     PR6             equ	3915	;# 
   186   000F4C                     TMR6            equ	3916	;# 
   187   000F4D                     T5GCON          equ	3917	;# 
   188   000F4E                     T5CON           equ	3918	;# 
   189   000F4F                     TMR5            equ	3919	;# 
   190   000F4F                     TMR5L           equ	3919	;# 
   191   000F50                     TMR5H           equ	3920	;# 
   192   000F51                     T4CON           equ	3921	;# 
   193   000F52                     PR4             equ	3922	;# 
   194   000F53                     TMR4            equ	3923	;# 
   195   000F54                     CCP5CON         equ	3924	;# 
   196   000F55                     CCPR5           equ	3925	;# 
   197   000F55                     CCPR5L          equ	3925	;# 
   198   000F56                     CCPR5H          equ	3926	;# 
   199   000F57                     CCP4CON         equ	3927	;# 
   200   000F58                     CCPR4           equ	3928	;# 
   201   000F58                     CCPR4L          equ	3928	;# 
   202   000F59                     CCPR4H          equ	3929	;# 
   203   000F5A                     PSTR3CON        equ	3930	;# 
   204   000F5B                     ECCP3AS         equ	3931	;# 
   205   000F5B                     CCP3AS          equ	3931	;# 
   206   000F5C                     PWM3CON         equ	3932	;# 
   207   000F5D                     CCP3CON         equ	3933	;# 
   208   000F5E                     CCPR3           equ	3934	;# 
   209   000F5E                     CCPR3L          equ	3934	;# 
   210   000F5F                     CCPR3H          equ	3935	;# 
   211   000F60                     SLRCON          equ	3936	;# 
   212   000F61                     WPUB            equ	3937	;# 
   213   000F62                     IOCB            equ	3938	;# 
   214   000F63                     PSTR2CON        equ	3939	;# 
   215   000F64                     ECCP2AS         equ	3940	;# 
   216   000F64                     CCP2AS          equ	3940	;# 
   217   000F65                     PWM2CON         equ	3941	;# 
   218   000F66                     CCP2CON         equ	3942	;# 
   219   000F67                     CCPR2           equ	3943	;# 
   220   000F67                     CCPR2L          equ	3943	;# 
   221   000F68                     CCPR2H          equ	3944	;# 
   222   000F69                     SSP2CON3        equ	3945	;# 
   223   000F6A                     SSP2MSK         equ	3946	;# 
   224   000F6B                     SSP2CON2        equ	3947	;# 
   225   000F6C                     SSP2CON1        equ	3948	;# 
   226   000F6D                     SSP2STAT        equ	3949	;# 
   227   000F6E                     SSP2ADD         equ	3950	;# 
   228   000F6F                     SSP2BUF         equ	3951	;# 
   229   000F70                     BAUDCON2        equ	3952	;# 
   230   000F70                     BAUD2CON        equ	3952	;# 
   231   000F71                     RCSTA2          equ	3953	;# 
   232   000F71                     RC2STA          equ	3953	;# 
   233   000F72                     TXSTA2          equ	3954	;# 
   234   000F72                     TX2STA          equ	3954	;# 
   235   000F73                     TXREG2          equ	3955	;# 
   236   000F73                     TX2REG          equ	3955	;# 
   237   000F74                     RCREG2          equ	3956	;# 
   238   000F74                     RC2REG          equ	3956	;# 
   239   000F75                     SPBRG2          equ	3957	;# 
   240   000F75                     SP2BRG          equ	3957	;# 
   241   000F76                     SPBRGH2         equ	3958	;# 
   242   000F76                     SP2BRGH         equ	3958	;# 
   243   000F77                     CM2CON1         equ	3959	;# 
   244   000F77                     CM12CON         equ	3959	;# 
   245   000F78                     CM2CON0         equ	3960	;# 
   246   000F78                     CM2CON          equ	3960	;# 
   247   000F79                     CM1CON0         equ	3961	;# 
   248   000F79                     CM1CON          equ	3961	;# 
   249   000F7A                     PIE4            equ	3962	;# 
   250   000F7B                     PIR4            equ	3963	;# 
   251   000F7C                     IPR4            equ	3964	;# 
   252   000F7D                     PIE5            equ	3965	;# 
   253   000F7E                     PIR5            equ	3966	;# 
   254   000F7F                     IPR5            equ	3967	;# 
   255   000F80                     PORTA           equ	3968	;# 
   256   000F81                     PORTB           equ	3969	;# 
   257   000F82                     PORTC           equ	3970	;# 
   258   000F83                     PORTD           equ	3971	;# 
   259   000F84                     PORTE           equ	3972	;# 
   260   000F89                     LATA            equ	3977	;# 
   261   000F8A                     LATB            equ	3978	;# 
   262   000F8B                     LATC            equ	3979	;# 
   263   000F8C                     LATD            equ	3980	;# 
   264   000F8D                     LATE            equ	3981	;# 
   265   000F92                     TRISA           equ	3986	;# 
   266   000F92                     DDRA            equ	3986	;# 
   267   000F93                     TRISB           equ	3987	;# 
   268   000F93                     DDRB            equ	3987	;# 
   269   000F94                     TRISC           equ	3988	;# 
   270   000F94                     DDRC            equ	3988	;# 
   271   000F95                     TRISD           equ	3989	;# 
   272   000F95                     DDRD            equ	3989	;# 
   273   000F96                     TRISE           equ	3990	;# 
   274   000F96                     DDRE            equ	3990	;# 
   275   000F9B                     OSCTUNE         equ	3995	;# 
   276   000F9C                     HLVDCON         equ	3996	;# 
   277   000F9C                     LVDCON          equ	3996	;# 
   278   000F9D                     PIE1            equ	3997	;# 
   279   000F9E                     PIR1            equ	3998	;# 
   280   000F9F                     IPR1            equ	3999	;# 
   281   000FA0                     PIE2            equ	4000	;# 
   282   000FA1                     PIR2            equ	4001	;# 
   283   000FA2                     IPR2            equ	4002	;# 
   284   000FA3                     PIE3            equ	4003	;# 
   285   000FA4                     PIR3            equ	4004	;# 
   286   000FA5                     IPR3            equ	4005	;# 
   287   000FA6                     EECON1          equ	4006	;# 
   288   000FA7                     EECON2          equ	4007	;# 
   289   000FA8                     EEDATA          equ	4008	;# 
   290   000FA9                     EEADR           equ	4009	;# 
   291   000FAA                     EEADRH          equ	4010	;# 
   292   000FAB                     RCSTA1          equ	4011	;# 
   293   000FAB                     RCSTA           equ	4011	;# 
   294   000FAB                     RC1STA          equ	4011	;# 
   295   000FAC                     TXSTA1          equ	4012	;# 
   296   000FAC                     TXSTA           equ	4012	;# 
   297   000FAC                     TX1STA          equ	4012	;# 
   298   000FAD                     TXREG1          equ	4013	;# 
   299   000FAD                     TXREG           equ	4013	;# 
   300   000FAD                     TX1REG          equ	4013	;# 
   301   000FAE                     RCREG1          equ	4014	;# 
   302   000FAE                     RCREG           equ	4014	;# 
   303   000FAE                     RC1REG          equ	4014	;# 
   304   000FAF                     SPBRG1          equ	4015	;# 
   305   000FAF                     SPBRG           equ	4015	;# 
   306   000FAF                     SP1BRG          equ	4015	;# 
   307   000FB0                     SPBRGH1         equ	4016	;# 
   308   000FB0                     SPBRGH          equ	4016	;# 
   309   000FB0                     SP1BRGH         equ	4016	;# 
   310   000FB1                     T3CON           equ	4017	;# 
   311   000FB2                     TMR3            equ	4018	;# 
   312   000FB2                     TMR3L           equ	4018	;# 
   313   000FB3                     TMR3H           equ	4019	;# 
   314   000FB4                     T3GCON          equ	4020	;# 
   315   000FB6                     ECCP1AS         equ	4022	;# 
   316   000FB6                     ECCPAS          equ	4022	;# 
   317   000FB7                     PWM1CON         equ	4023	;# 
   318   000FB7                     PWMCON          equ	4023	;# 
   319   000FB8                     BAUDCON1        equ	4024	;# 
   320   000FB8                     BAUDCON         equ	4024	;# 
   321   000FB8                     BAUDCTL         equ	4024	;# 
   322   000FB8                     BAUD1CON        equ	4024	;# 
   323   000FB9                     PSTR1CON        equ	4025	;# 
   324   000FB9                     PSTRCON         equ	4025	;# 
   325   000FBA                     T2CON           equ	4026	;# 
   326   000FBB                     PR2             equ	4027	;# 
   327   000FBC                     TMR2            equ	4028	;# 
   328   000FBD                     CCP1CON         equ	4029	;# 
   329   000FBE                     CCPR1           equ	4030	;# 
   330   000FBE                     CCPR1L          equ	4030	;# 
   331   000FBF                     CCPR1H          equ	4031	;# 
   332   000FC0                     ADCON2          equ	4032	;# 
   333   000FC1                     ADCON1          equ	4033	;# 
   334   000FC2                     ADCON0          equ	4034	;# 
   335   000FC3                     ADRES           equ	4035	;# 
   336   000FC3                     ADRESL          equ	4035	;# 
   337   000FC4                     ADRESH          equ	4036	;# 
   338   000FC5                     SSP1CON2        equ	4037	;# 
   339   000FC5                     SSPCON2         equ	4037	;# 
   340   000FC6                     SSP1CON1        equ	4038	;# 
   341   000FC6                     SSPCON1         equ	4038	;# 
   342   000FC7                     SSP1STAT        equ	4039	;# 
   343   000FC7                     SSPSTAT         equ	4039	;# 
   344   000FC8                     SSP1ADD         equ	4040	;# 
   345   000FC8                     SSPADD          equ	4040	;# 
   346   000FC9                     SSP1BUF         equ	4041	;# 
   347   000FC9                     SSPBUF          equ	4041	;# 
   348   000FCA                     SSP1MSK         equ	4042	;# 
   349   000FCA                     SSPMSK          equ	4042	;# 
   350   000FCB                     SSP1CON3        equ	4043	;# 
   351   000FCB                     SSPCON3         equ	4043	;# 
   352   000FCC                     T1GCON          equ	4044	;# 
   353   000FCD                     T1CON           equ	4045	;# 
   354   000FCE                     TMR1            equ	4046	;# 
   355   000FCE                     TMR1L           equ	4046	;# 
   356   000FCF                     TMR1H           equ	4047	;# 
   357   000FD0                     RCON            equ	4048	;# 
   358   000FD1                     WDTCON          equ	4049	;# 
   359   000FD2                     OSCCON2         equ	4050	;# 
   360   000FD3                     OSCCON          equ	4051	;# 
   361   000FD5                     T0CON           equ	4053	;# 
   362   000FD6                     TMR0            equ	4054	;# 
   363   000FD6                     TMR0L           equ	4054	;# 
   364   000FD7                     TMR0H           equ	4055	;# 
   365   000FD8                     STATUS          equ	4056	;# 
   366   000FD9                     FSR2            equ	4057	;# 
   367   000FD9                     FSR2L           equ	4057	;# 
   368   000FDA                     FSR2H           equ	4058	;# 
   369   000FDB                     PLUSW2          equ	4059	;# 
   370   000FDC                     PREINC2         equ	4060	;# 
   371   000FDD                     POSTDEC2        equ	4061	;# 
   372   000FDE                     POSTINC2        equ	4062	;# 
   373   000FDF                     INDF2           equ	4063	;# 
   374   000FE0                     BSR             equ	4064	;# 
   375   000FE1                     FSR1            equ	4065	;# 
   376   000FE1                     FSR1L           equ	4065	;# 
   377   000FE2                     FSR1H           equ	4066	;# 
   378   000FE3                     PLUSW1          equ	4067	;# 
   379   000FE4                     PREINC1         equ	4068	;# 
   380   000FE5                     POSTDEC1        equ	4069	;# 
   381   000FE6                     POSTINC1        equ	4070	;# 
   382   000FE7                     INDF1           equ	4071	;# 
   383   000FE8                     WREG            equ	4072	;# 
   384   000FE9                     FSR0            equ	4073	;# 
   385   000FE9                     FSR0L           equ	4073	;# 
   386   000FEA                     FSR0H           equ	4074	;# 
   387   000FEB                     PLUSW0          equ	4075	;# 
   388   000FEC                     PREINC0         equ	4076	;# 
   389   000FED                     POSTDEC0        equ	4077	;# 
   390   000FEE                     POSTINC0        equ	4078	;# 
   391   000FEF                     INDF0           equ	4079	;# 
   392   000FF0                     INTCON3         equ	4080	;# 
   393   000FF1                     INTCON2         equ	4081	;# 
   394   000FF2                     INTCON          equ	4082	;# 
   395   000FF3                     PROD            equ	4083	;# 
   396   000FF3                     PRODL           equ	4083	;# 
   397   000FF4                     PRODH           equ	4084	;# 
   398   000FF5                     TABLAT          equ	4085	;# 
   399   000FF6                     TBLPTR          equ	4086	;# 
   400   000FF6                     TBLPTRL         equ	4086	;# 
   401   000FF7                     TBLPTRH         equ	4087	;# 
   402   000FF8                     TBLPTRU         equ	4088	;# 
   403   000FF9                     PCLAT           equ	4089	;# 
   404   000FF9                     PC              equ	4089	;# 
   405   000FF9                     PCL             equ	4089	;# 
   406   000FFA                     PCLATH          equ	4090	;# 
   407   000FFB                     PCLATU          equ	4091	;# 
   408   000FFC                     STKPTR          equ	4092	;# 
   409   000FFD                     TOS             equ	4093	;# 
   410   000FFD                     TOSL            equ	4093	;# 
   411   000FFE                     TOSH            equ	4094	;# 
   412   000FFF                     TOSU            equ	4095	;# 
   413   000F38                     ANSELA          equ	3896	;# 
   414   000F39                     ANSELB          equ	3897	;# 
   415   000F3A                     ANSELC          equ	3898	;# 
   416   000F3B                     ANSELD          equ	3899	;# 
   417   000F3C                     ANSELE          equ	3900	;# 
   418   000F3D                     PMD2            equ	3901	;# 
   419   000F3E                     PMD1            equ	3902	;# 
   420   000F3F                     PMD0            equ	3903	;# 
   421   000F40                     VREFCON2        equ	3904	;# 
   422   000F40                     DACCON1         equ	3904	;# 
   423   000F41                     VREFCON1        equ	3905	;# 
   424   000F41                     DACCON0         equ	3905	;# 
   425   000F42                     VREFCON0        equ	3906	;# 
   426   000F42                     FVRCON          equ	3906	;# 
   427   000F43                     CTMUICON        equ	3907	;# 
   428   000F43                     CTMUICONH       equ	3907	;# 
   429   000F44                     CTMUCONL        equ	3908	;# 
   430   000F44                     CTMUCON1        equ	3908	;# 
   431   000F45                     CTMUCONH        equ	3909	;# 
   432   000F45                     CTMUCON0        equ	3909	;# 
   433   000F46                     SRCON1          equ	3910	;# 
   434   000F47                     SRCON0          equ	3911	;# 
   435   000F48                     CCPTMRS1        equ	3912	;# 
   436   000F49                     CCPTMRS0        equ	3913	;# 
   437   000F4A                     T6CON           equ	3914	;# 
   438   000F4B                     PR6             equ	3915	;# 
   439   000F4C                     TMR6            equ	3916	;# 
   440   000F4D                     T5GCON          equ	3917	;# 
   441   000F4E                     T5CON           equ	3918	;# 
   442   000F4F                     TMR5            equ	3919	;# 
   443   000F4F                     TMR5L           equ	3919	;# 
   444   000F50                     TMR5H           equ	3920	;# 
   445   000F51                     T4CON           equ	3921	;# 
   446   000F52                     PR4             equ	3922	;# 
   447   000F53                     TMR4            equ	3923	;# 
   448   000F54                     CCP5CON         equ	3924	;# 
   449   000F55                     CCPR5           equ	3925	;# 
   450   000F55                     CCPR5L          equ	3925	;# 
   451   000F56                     CCPR5H          equ	3926	;# 
   452   000F57                     CCP4CON         equ	3927	;# 
   453   000F58                     CCPR4           equ	3928	;# 
   454   000F58                     CCPR4L          equ	3928	;# 
   455   000F59                     CCPR4H          equ	3929	;# 
   456   000F5A                     PSTR3CON        equ	3930	;# 
   457   000F5B                     ECCP3AS         equ	3931	;# 
   458   000F5B                     CCP3AS          equ	3931	;# 
   459   000F5C                     PWM3CON         equ	3932	;# 
   460   000F5D                     CCP3CON         equ	3933	;# 
   461   000F5E                     CCPR3           equ	3934	;# 
   462   000F5E                     CCPR3L          equ	3934	;# 
   463   000F5F                     CCPR3H          equ	3935	;# 
   464   000F60                     SLRCON          equ	3936	;# 
   465   000F61                     WPUB            equ	3937	;# 
   466   000F62                     IOCB            equ	3938	;# 
   467   000F63                     PSTR2CON        equ	3939	;# 
   468   000F64                     ECCP2AS         equ	3940	;# 
   469   000F64                     CCP2AS          equ	3940	;# 
   470   000F65                     PWM2CON         equ	3941	;# 
   471   000F66                     CCP2CON         equ	3942	;# 
   472   000F67                     CCPR2           equ	3943	;# 
   473   000F67                     CCPR2L          equ	3943	;# 
   474   000F68                     CCPR2H          equ	3944	;# 
   475   000F69                     SSP2CON3        equ	3945	;# 
   476   000F6A                     SSP2MSK         equ	3946	;# 
   477   000F6B                     SSP2CON2        equ	3947	;# 
   478   000F6C                     SSP2CON1        equ	3948	;# 
   479   000F6D                     SSP2STAT        equ	3949	;# 
   480   000F6E                     SSP2ADD         equ	3950	;# 
   481   000F6F                     SSP2BUF         equ	3951	;# 
   482   000F70                     BAUDCON2        equ	3952	;# 
   483   000F70                     BAUD2CON        equ	3952	;# 
   484   000F71                     RCSTA2          equ	3953	;# 
   485   000F71                     RC2STA          equ	3953	;# 
   486   000F72                     TXSTA2          equ	3954	;# 
   487   000F72                     TX2STA          equ	3954	;# 
   488   000F73                     TXREG2          equ	3955	;# 
   489   000F73                     TX2REG          equ	3955	;# 
   490   000F74                     RCREG2          equ	3956	;# 
   491   000F74                     RC2REG          equ	3956	;# 
   492   000F75                     SPBRG2          equ	3957	;# 
   493   000F75                     SP2BRG          equ	3957	;# 
   494   000F76                     SPBRGH2         equ	3958	;# 
   495   000F76                     SP2BRGH         equ	3958	;# 
   496   000F77                     CM2CON1         equ	3959	;# 
   497   000F77                     CM12CON         equ	3959	;# 
   498   000F78                     CM2CON0         equ	3960	;# 
   499   000F78                     CM2CON          equ	3960	;# 
   500   000F79                     CM1CON0         equ	3961	;# 
   501   000F79                     CM1CON          equ	3961	;# 
   502   000F7A                     PIE4            equ	3962	;# 
   503   000F7B                     PIR4            equ	3963	;# 
   504   000F7C                     IPR4            equ	3964	;# 
   505   000F7D                     PIE5            equ	3965	;# 
   506   000F7E                     PIR5            equ	3966	;# 
   507   000F7F                     IPR5            equ	3967	;# 
   508   000F80                     PORTA           equ	3968	;# 
   509   000F81                     PORTB           equ	3969	;# 
   510   000F82                     PORTC           equ	3970	;# 
   511   000F83                     PORTD           equ	3971	;# 
   512   000F84                     PORTE           equ	3972	;# 
   513   000F89                     LATA            equ	3977	;# 
   514   000F8A                     LATB            equ	3978	;# 
   515   000F8B                     LATC            equ	3979	;# 
   516   000F8C                     LATD            equ	3980	;# 
   517   000F8D                     LATE            equ	3981	;# 
   518   000F92                     TRISA           equ	3986	;# 
   519   000F92                     DDRA            equ	3986	;# 
   520   000F93                     TRISB           equ	3987	;# 
   521   000F93                     DDRB            equ	3987	;# 
   522   000F94                     TRISC           equ	3988	;# 
   523   000F94                     DDRC            equ	3988	;# 
   524   000F95                     TRISD           equ	3989	;# 
   525   000F95                     DDRD            equ	3989	;# 
   526   000F96                     TRISE           equ	3990	;# 
   527   000F96                     DDRE            equ	3990	;# 
   528   000F9B                     OSCTUNE         equ	3995	;# 
   529   000F9C                     HLVDCON         equ	3996	;# 
   530   000F9C                     LVDCON          equ	3996	;# 
   531   000F9D                     PIE1            equ	3997	;# 
   532   000F9E                     PIR1            equ	3998	;# 
   533   000F9F                     IPR1            equ	3999	;# 
   534   000FA0                     PIE2            equ	4000	;# 
   535   000FA1                     PIR2            equ	4001	;# 
   536   000FA2                     IPR2            equ	4002	;# 
   537   000FA3                     PIE3            equ	4003	;# 
   538   000FA4                     PIR3            equ	4004	;# 
   539   000FA5                     IPR3            equ	4005	;# 
   540   000FA6                     EECON1          equ	4006	;# 
   541   000FA7                     EECON2          equ	4007	;# 
   542   000FA8                     EEDATA          equ	4008	;# 
   543   000FA9                     EEADR           equ	4009	;# 
   544   000FAA                     EEADRH          equ	4010	;# 
   545   000FAB                     RCSTA1          equ	4011	;# 
   546   000FAB                     RCSTA           equ	4011	;# 
   547   000FAB                     RC1STA          equ	4011	;# 
   548   000FAC                     TXSTA1          equ	4012	;# 
   549   000FAC                     TXSTA           equ	4012	;# 
   550   000FAC                     TX1STA          equ	4012	;# 
   551   000FAD                     TXREG1          equ	4013	;# 
   552   000FAD                     TXREG           equ	4013	;# 
   553   000FAD                     TX1REG          equ	4013	;# 
   554   000FAE                     RCREG1          equ	4014	;# 
   555   000FAE                     RCREG           equ	4014	;# 
   556   000FAE                     RC1REG          equ	4014	;# 
   557   000FAF                     SPBRG1          equ	4015	;# 
   558   000FAF                     SPBRG           equ	4015	;# 
   559   000FAF                     SP1BRG          equ	4015	;# 
   560   000FB0                     SPBRGH1         equ	4016	;# 
   561   000FB0                     SPBRGH          equ	4016	;# 
   562   000FB0                     SP1BRGH         equ	4016	;# 
   563   000FB1                     T3CON           equ	4017	;# 
   564   000FB2                     TMR3            equ	4018	;# 
   565   000FB2                     TMR3L           equ	4018	;# 
   566   000FB3                     TMR3H           equ	4019	;# 
   567   000FB4                     T3GCON          equ	4020	;# 
   568   000FB6                     ECCP1AS         equ	4022	;# 
   569   000FB6                     ECCPAS          equ	4022	;# 
   570   000FB7                     PWM1CON         equ	4023	;# 
   571   000FB7                     PWMCON          equ	4023	;# 
   572   000FB8                     BAUDCON1        equ	4024	;# 
   573   000FB8                     BAUDCON         equ	4024	;# 
   574   000FB8                     BAUDCTL         equ	4024	;# 
   575   000FB8                     BAUD1CON        equ	4024	;# 
   576   000FB9                     PSTR1CON        equ	4025	;# 
   577   000FB9                     PSTRCON         equ	4025	;# 
   578   000FBA                     T2CON           equ	4026	;# 
   579   000FBB                     PR2             equ	4027	;# 
   580   000FBC                     TMR2            equ	4028	;# 
   581   000FBD                     CCP1CON         equ	4029	;# 
   582   000FBE                     CCPR1           equ	4030	;# 
   583   000FBE                     CCPR1L          equ	4030	;# 
   584   000FBF                     CCPR1H          equ	4031	;# 
   585   000FC0                     ADCON2          equ	4032	;# 
   586   000FC1                     ADCON1          equ	4033	;# 
   587   000FC2                     ADCON0          equ	4034	;# 
   588   000FC3                     ADRES           equ	4035	;# 
   589   000FC3                     ADRESL          equ	4035	;# 
   590   000FC4                     ADRESH          equ	4036	;# 
   591   000FC5                     SSP1CON2        equ	4037	;# 
   592   000FC5                     SSPCON2         equ	4037	;# 
   593   000FC6                     SSP1CON1        equ	4038	;# 
   594   000FC6                     SSPCON1         equ	4038	;# 
   595   000FC7                     SSP1STAT        equ	4039	;# 
   596   000FC7                     SSPSTAT         equ	4039	;# 
   597   000FC8                     SSP1ADD         equ	4040	;# 
   598   000FC8                     SSPADD          equ	4040	;# 
   599   000FC9                     SSP1BUF         equ	4041	;# 
   600   000FC9                     SSPBUF          equ	4041	;# 
   601   000FCA                     SSP1MSK         equ	4042	;# 
   602   000FCA                     SSPMSK          equ	4042	;# 
   603   000FCB                     SSP1CON3        equ	4043	;# 
   604   000FCB                     SSPCON3         equ	4043	;# 
   605   000FCC                     T1GCON          equ	4044	;# 
   606   000FCD                     T1CON           equ	4045	;# 
   607   000FCE                     TMR1            equ	4046	;# 
   608   000FCE                     TMR1L           equ	4046	;# 
   609   000FCF                     TMR1H           equ	4047	;# 
   610   000FD0                     RCON            equ	4048	;# 
   611   000FD1                     WDTCON          equ	4049	;# 
   612   000FD2                     OSCCON2         equ	4050	;# 
   613   000FD3                     OSCCON          equ	4051	;# 
   614   000FD5                     T0CON           equ	4053	;# 
   615   000FD6                     TMR0            equ	4054	;# 
   616   000FD6                     TMR0L           equ	4054	;# 
   617   000FD7                     TMR0H           equ	4055	;# 
   618   000FD8                     STATUS          equ	4056	;# 
   619   000FD9                     FSR2            equ	4057	;# 
   620   000FD9                     FSR2L           equ	4057	;# 
   621   000FDA                     FSR2H           equ	4058	;# 
   622   000FDB                     PLUSW2          equ	4059	;# 
   623   000FDC                     PREINC2         equ	4060	;# 
   624   000FDD                     POSTDEC2        equ	4061	;# 
   625   000FDE                     POSTINC2        equ	4062	;# 
   626   000FDF                     INDF2           equ	4063	;# 
   627   000FE0                     BSR             equ	4064	;# 
   628   000FE1                     FSR1            equ	4065	;# 
   629   000FE1                     FSR1L           equ	4065	;# 
   630   000FE2                     FSR1H           equ	4066	;# 
   631   000FE3                     PLUSW1          equ	4067	;# 
   632   000FE4                     PREINC1         equ	4068	;# 
   633   000FE5                     POSTDEC1        equ	4069	;# 
   634   000FE6                     POSTINC1        equ	4070	;# 
   635   000FE7                     INDF1           equ	4071	;# 
   636   000FE8                     WREG            equ	4072	;# 
   637   000FE9                     FSR0            equ	4073	;# 
   638   000FE9                     FSR0L           equ	4073	;# 
   639   000FEA                     FSR0H           equ	4074	;# 
   640   000FEB                     PLUSW0          equ	4075	;# 
   641   000FEC                     PREINC0         equ	4076	;# 
   642   000FED                     POSTDEC0        equ	4077	;# 
   643   000FEE                     POSTINC0        equ	4078	;# 
   644   000FEF                     INDF0           equ	4079	;# 
   645   000FF0                     INTCON3         equ	4080	;# 
   646   000FF1                     INTCON2         equ	4081	;# 
   647   000FF2                     INTCON          equ	4082	;# 
   648   000FF3                     PROD            equ	4083	;# 
   649   000FF3                     PRODL           equ	4083	;# 
   650   000FF4                     PRODH           equ	4084	;# 
   651   000FF5                     TABLAT          equ	4085	;# 
   652   000FF6                     TBLPTR          equ	4086	;# 
   653   000FF6                     TBLPTRL         equ	4086	;# 
   654   000FF7                     TBLPTRH         equ	4087	;# 
   655   000FF8                     TBLPTRU         equ	4088	;# 
   656   000FF9                     PCLAT           equ	4089	;# 
   657   000FF9                     PC              equ	4089	;# 
   658   000FF9                     PCL             equ	4089	;# 
   659   000FFA                     PCLATH          equ	4090	;# 
   660   000FFB                     PCLATU          equ	4091	;# 
   661   000FFC                     STKPTR          equ	4092	;# 
   662   000FFD                     TOS             equ	4093	;# 
   663   000FFD                     TOSL            equ	4093	;# 
   664   000FFE                     TOSH            equ	4094	;# 
   665   000FFF                     TOSU            equ	4095	;# 
   666                           
   667                           	psect	idataBANK0
   668   0033F0                     __pidataBANK0:
   669                           	callstack 0
   670                           
   671                           ;initializer for _menu_sel
   672   0033F0  FFFF               	dw	65535
   673                           
   674                           ;initializer for _LCD_entry_mode
   675   0033F2  06                 	db	6
   676                           
   677                           ;initializer for _LCD_display_control
   678   0033F3  0C                 	db	12
   679   000F3A                     _ANSELC         set	3898
   680   000F38                     _ANSELAbits     set	3896
   681   000F3A                     _ANSELCbits     set	3898
   682   000F39                     _ANSELBbits     set	3897
   683   000F95                     _TRISDbits      set	3989
   684   000F8C                     _LATDbits       set	3980
   685   000F82                     _PORTCbits      set	3970
   686   000F81                     _PORTBbits      set	3969
   687   000FC3                     _ADRESL         set	4035
   688   000FC4                     _ADRESH         set	4036
   689   000FC2                     _ADCON0bits     set	4034
   690   000FCD                     _T1CONbits      set	4045
   691   000FBE                     _CCPR1L         set	4030
   692   000FBF                     _CCPR1H         set	4031
   693   000FBD                     _CCP1CONbits    set	4029
   694   000FAD                     _TXREG          set	4013
   695   000FAC                     _TXSTAbits      set	4012
   696   000FAB                     _RCSTAbits      set	4011
   697   000FAE                     _RCREG1         set	4014
   698   000F9E                     _PIR1bits       set	3998
   699   000FF2                     _INTCONbits     set	4082
   700   000F9D                     _PIE1bits       set	3997
   701   000FAB                     _RCSTA1bits     set	4011
   702   000FAF                     _SPBRG1         set	4015
   703   000FB0                     _SPBRGH1        set	4016
   704   000FB8                     _BAUDCON1bits   set	4024
   705   000FAC                     _TXSTA1bits     set	4012
   706   000FC0                     _ADCON2         set	4032
   707   000FC1                     _ADCON1         set	4033
   708   000FC2                     _ADCON0         set	4034
   709   000F92                     _TRISAbits      set	3986
   710   000F94                     _TRISCbits      set	3988
   711   000F93                     _TRISBbits      set	3987
   712   000FD3                     _OSCCON         set	4051
   713                           
   714                           	psect	mediumconst
   715   00FE84                     __pmediumconst:
   716                           	callstack 0
   717   00FE84  00                 	db	0
   718   00FE85                     STR_40:
   719   00FE85  53                 	db	83	;'S'
   720   00FE86  45                 	db	69	;'E'
   721   00FE87  41                 	db	65	;'A'
   722   00FE88  52                 	db	82	;'R'
   723   00FE89  43                 	db	67	;'C'
   724   00FE8A  48                 	db	72	;'H'
   725   00FE8B  49                 	db	73	;'I'
   726   00FE8C  4E                 	db	78	;'N'
   727   00FE8D  47                 	db	71	;'G'
   728   00FE8E  2E                 	db	46
   729   00FE8F  2E                 	db	46
   730   00FE90  2E                 	db	46
   731   00FE91  53                 	db	83	;'S'
   732   00FE92  54                 	db	84	;'T'
   733   00FE93  4F                 	db	79	;'O'
   734   00FE94  50                 	db	80	;'P'
   735   00FE95  50                 	db	80	;'P'
   736   00FE96  45                 	db	69	;'E'
   737   00FE97  44                 	db	68	;'D'
   738   00FE98  00                 	db	0
   739   00FE99                     STR_6:
   740   00FE99  4F                 	db	79	;'O'
   741   00FE9A  42                 	db	66	;'B'
   742   00FE9B  44                 	db	68	;'D'
   743   00FE9C  49                 	db	73	;'I'
   744   00FE9D  49                 	db	73	;'I'
   745   00FE9E  20                 	db	32
   746   00FE9F  4E                 	db	78	;'N'
   747   00FEA0  6F                 	db	111	;'o'
   748   00FEA1  74                 	db	116	;'t'
   749   00FEA2  20                 	db	32
   750   00FEA3  46                 	db	70	;'F'
   751   00FEA4  6F                 	db	111	;'o'
   752   00FEA5  75                 	db	117	;'u'
   753   00FEA6  6E                 	db	110	;'n'
   754   00FEA7  64                 	db	100	;'d'
   755   00FEA8  20                 	db	32
   756   00FEA9  00                 	db	0
   757   00FEAA                     STR_2:
   758   00FEAA  3E                 	db	62	;'>'
   759   00FEAB  3E                 	db	62	;'>'
   760   00FEAC  3E                 	db	62	;'>'
   761   00FEAD  20                 	db	32
   762   00FEAE  4F                 	db	79	;'O'
   763   00FEAF  42                 	db	66	;'B'
   764   00FEB0  44                 	db	68	;'D'
   765   00FEB1  49                 	db	73	;'I'
   766   00FEB2  49                 	db	73	;'I'
   767   00FEB3  50                 	db	80	;'P'
   768   00FEB4  49                 	db	73	;'I'
   769   00FEB5  43                 	db	67	;'C'
   770   00FEB6  20                 	db	32
   771   00FEB7  3C                 	db	60	;'<'
   772   00FEB8  3C                 	db	60	;'<'
   773   00FEB9  3C                 	db	60	;'<'
   774   00FEBA  00                 	db	0
   775   00FEBB                     STR_44:
   776   00FEBB  59                 	db	89	;'Y'
   777   00FEBC  2F                 	db	47
   778   00FEBD  4E                 	db	78	;'N'
   779   00FEBE  20                 	db	32
   780   00FEBF  3C                 	db	60	;'<'
   781   00FEC0  3C                 	db	60	;'<'
   782   00FEC1  3C                 	db	60	;'<'
   783   00FEC2  3C                 	db	60	;'<'
   784   00FEC3  3C                 	db	60	;'<'
   785   00FEC4  3C                 	db	60	;'<'
   786   00FEC5  3C                 	db	60	;'<'
   787   00FEC6  3C                 	db	60	;'<'
   788   00FEC7  3C                 	db	60	;'<'
   789   00FEC8  3C                 	db	60	;'<'
   790   00FEC9  3C                 	db	60	;'<'
   791   00FECA  3C                 	db	60	;'<'
   792   00FECB  00                 	db	0
   793   00FECC                     STR_9:
   794   00FECC  3D                 	db	61	;'='
   795   00FECD  3D                 	db	61	;'='
   796   00FECE  3D                 	db	61	;'='
   797   00FECF  3D                 	db	61	;'='
   798   00FED0  3D                 	db	61	;'='
   799   00FED1  3D                 	db	61	;'='
   800   00FED2  3D                 	db	61	;'='
   801   00FED3  3D                 	db	61	;'='
   802   00FED4  3D                 	db	61	;'='
   803   00FED5  3D                 	db	61	;'='
   804   00FED6  3D                 	db	61	;'='
   805   00FED7  3D                 	db	61	;'='
   806   00FED8  3D                 	db	61	;'='
   807   00FED9  3D                 	db	61	;'='
   808   00FEDA  3D                 	db	61	;'='
   809   00FEDB  3D                 	db	61	;'='
   810   00FEDC  00                 	db	0
   811   00FEDD                     STR_11:
   812   00FEDD  4D                 	db	77	;'M'
   813   00FEDE  45                 	db	69	;'E'
   814   00FEDF  4E                 	db	78	;'N'
   815   00FEE0  55                 	db	85	;'U'
   816   00FEE1  20                 	db	32
   817   00FEE2  20                 	db	32
   818   00FEE3  3C                 	db	60	;'<'
   819   00FEE4  4F                 	db	79	;'O'
   820   00FEE5  42                 	db	66	;'B'
   821   00FEE6  44                 	db	68	;'D'
   822   00FEE7  49                 	db	73	;'I'
   823   00FEE8  49                 	db	73	;'I'
   824   00FEE9  50                 	db	80	;'P'
   825   00FEEA  49                 	db	73	;'I'
   826   00FEEB  43                 	db	67	;'C'
   827   00FEEC  3E                 	db	62	;'>'
   828   00FEED  00                 	db	0
   829   00FEEE                     STR_8:
   830   00FEEE  3C                 	db	60	;'<'
   831   00FEEF  4F                 	db	79	;'O'
   832   00FEF0  42                 	db	66	;'B'
   833   00FEF1  44                 	db	68	;'D'
   834   00FEF2  49                 	db	73	;'I'
   835   00FEF3  49                 	db	73	;'I'
   836   00FEF4  20                 	db	32
   837   00FEF5  44                 	db	68	;'D'
   838   00FEF6  65                 	db	101	;'e'
   839   00FEF7  74                 	db	116	;'t'
   840   00FEF8  65                 	db	101	;'e'
   841   00FEF9  63                 	db	99	;'c'
   842   00FEFA  74                 	db	116	;'t'
   843   00FEFB  65                 	db	101	;'e'
   844   00FEFC  64                 	db	100	;'d'
   845   00FEFD  3E                 	db	62	;'>'
   846   00FEFE  00                 	db	0
   847   00FEFF                     STR_12:
   848   00FEFF  4C                 	db	76	;'L'
   849   00FF00  52                 	db	82	;'R'
   850   00FF01  4D                 	db	77	;'M'
   851   00FF02  20                 	db	32
   852   00FF03  44                 	db	68	;'D'
   853   00FF04  54                 	db	84	;'T'
   854   00FF05  43                 	db	67	;'C'
   855   00FF06  20                 	db	32
   856   00FF07  43                 	db	67	;'C'
   857   00FF08  44                 	db	68	;'D'
   858   00FF09  43                 	db	67	;'C'
   859   00FF0A  20                 	db	32
   860   00FF0B  44                 	db	68	;'D'
   861   00FF0C  53                 	db	83	;'S'
   862   00FF0D  49                 	db	73	;'I'
   863   00FF0E  00                 	db	0
   864   00FF0F                     STR_48:
   865   00FF0F  4E                 	db	78	;'N'
   866   00FF10  6F                 	db	111	;'o'
   867   00FF11  74                 	db	116	;'t'
   868   00FF12  68                 	db	104	;'h'
   869   00FF13  69                 	db	105	;'i'
   870   00FF14  6E                 	db	110	;'n'
   871   00FF15  67                 	db	103	;'g'
   872   00FF16  20                 	db	32
   873   00FF17  43                 	db	67	;'C'
   874   00FF18  6C                 	db	108	;'l'
   875   00FF19  65                 	db	101	;'e'
   876   00FF1A  61                 	db	97	;'a'
   877   00FF1B  72                 	db	114	;'r'
   878   00FF1C  65                 	db	101	;'e'
   879   00FF1D  64                 	db	100	;'d'
   880   00FF1E  00                 	db	0
   881   00FF1F                     STR_35:
   882   00FF1F  44                 	db	68	;'D'
   883   00FF20  54                 	db	84	;'T'
   884   00FF21  43                 	db	67	;'C'
   885   00FF22  27                 	db	39
   886   00FF23  73                 	db	115	;'s'
   887   00FF24  20                 	db	32
   888   00FF25  52                 	db	82	;'R'
   889   00FF26  65                 	db	101	;'e'
   890   00FF27  71                 	db	113	;'q'
   891   00FF28  75                 	db	117	;'u'
   892   00FF29  65                 	db	101	;'e'
   893   00FF2A  73                 	db	115	;'s'
   894   00FF2B  74                 	db	116	;'t'
   895   00FF2C  65                 	db	101	;'e'
   896   00FF2D  64                 	db	100	;'d'
   897   00FF2E  00                 	db	0
   898   00FF2F                     STR_3:
   899   00FF2F  3E                 	db	62	;'>'
   900   00FF30  3E                 	db	62	;'>'
   901   00FF31  3E                 	db	62	;'>'
   902   00FF32  3E                 	db	62	;'>'
   903   00FF33  20                 	db	32
   904   00FF34  56                 	db	86	;'V'
   905   00FF35  31                 	db	49	;'1'
   906   00FF36  2E                 	db	46
   907   00FF37  30                 	db	48	;'0'
   908   00FF38  20                 	db	32
   909   00FF39  3C                 	db	60	;'<'
   910   00FF3A  3C                 	db	60	;'<'
   911   00FF3B  3C                 	db	60	;'<'
   912   00FF3C  3C                 	db	60	;'<'
   913   00FF3D  00                 	db	0
   914   00FF3E                     STR_43:
   915   00FF3E  43                 	db	67	;'C'
   916   00FF3F  6C                 	db	108	;'l'
   917   00FF40  65                 	db	101	;'e'
   918   00FF41  61                 	db	97	;'a'
   919   00FF42  72                 	db	114	;'r'
   920   00FF43  20                 	db	32
   921   00FF44  43                 	db	67	;'C'
   922   00FF45  6F                 	db	111	;'o'
   923   00FF46  64                 	db	100	;'d'
   924   00FF47  65                 	db	101	;'e'
   925   00FF48  28                 	db	40
   926   00FF49  73                 	db	115	;'s'
   927   00FF4A  29                 	db	41
   928   00FF4B  3F                 	db	63	;'?'
   929   00FF4C  00                 	db	0
   930   00FF4D                     STR_33:
   931   00FF4D  20                 	db	32
   932   00FF4E  20                 	db	32
   933   00FF4F  20                 	db	32
   934   00FF50  20                 	db	32
   935   00FF51  20                 	db	32
   936   00FF52  20                 	db	32
   937   00FF53  20                 	db	32
   938   00FF54  20                 	db	32
   939   00FF55  20                 	db	32
   940   00FF56  20                 	db	32
   941   00FF57  20                 	db	32
   942   00FF58  20                 	db	32
   943   00FF59  20                 	db	32
   944   00FF5A  00                 	db	0
   945   00FF5B                     STR_42:
   946   00FF5B  44                 	db	68	;'D'
   947   00FF5C  54                 	db	84	;'T'
   948   00FF5D  43                 	db	67	;'C'
   949   00FF5E  28                 	db	40
   950   00FF5F  73                 	db	115	;'s'
   951   00FF60  29                 	db	41
   952   00FF61  20                 	db	32
   953   00FF62  46                 	db	70	;'F'
   954   00FF63  6F                 	db	111	;'o'
   955   00FF64  75                 	db	117	;'u'
   956   00FF65  6E                 	db	110	;'n'
   957   00FF66  64                 	db	100	;'d'
   958   00FF67  3A                 	db	58	;':'
   959   00FF68  00                 	db	0
   960   00FF69                     STR_46:
   961   00FF69  43                 	db	67	;'C'
   962   00FF6A  6F                 	db	111	;'o'
   963   00FF6B  64                 	db	100	;'d'
   964   00FF6C  65                 	db	101	;'e'
   965   00FF6D  73                 	db	115	;'s'
   966   00FF6E  20                 	db	32
   967   00FF6F  43                 	db	67	;'C'
   968   00FF70  6C                 	db	108	;'l'
   969   00FF71  65                 	db	101	;'e'
   970   00FF72  61                 	db	97	;'a'
   971   00FF73  72                 	db	114	;'r'
   972   00FF74  65                 	db	101	;'e'
   973   00FF75  64                 	db	100	;'d'
   974   00FF76  00                 	db	0
   975   00FF77                     STR_41:
   976   00FF77  4E                 	db	78	;'N'
   977   00FF78  6F                 	db	111	;'o'
   978   00FF79  20                 	db	32
   979   00FF7A  44                 	db	68	;'D'
   980   00FF7B  54                 	db	84	;'T'
   981   00FF7C  43                 	db	67	;'C'
   982   00FF7D  73                 	db	115	;'s'
   983   00FF7E  20                 	db	32
   984   00FF7F  46                 	db	70	;'F'
   985   00FF80  6F                 	db	111	;'o'
   986   00FF81  75                 	db	117	;'u'
   987   00FF82  6E                 	db	110	;'n'
   988   00FF83  64                 	db	100	;'d'
   989   00FF84  00                 	db	0
   990   00FF85                     STR_36:
   991   00FF85  4C                 	db	76	;'L'
   992   00FF86  6F                 	db	111	;'o'
   993   00FF87  61                 	db	97	;'a'
   994   00FF88  64                 	db	100	;'d'
   995   00FF89  69                 	db	105	;'i'
   996   00FF8A  6E                 	db	110	;'n'
   997   00FF8B  67                 	db	103	;'g'
   998   00FF8C  2E                 	db	46
   999   00FF8D  2E                 	db	46
  1000   00FF8E  2E                 	db	46
  1001   00FF8F  00                 	db	0
  1002   00FF90                     STR_47:
  1003   00FF90  54                 	db	84	;'T'
  1004   00FF91  6F                 	db	111	;'o'
  1005   00FF92  20                 	db	32
  1006   00FF93  4D                 	db	77	;'M'
  1007   00FF94  65                 	db	101	;'e'
  1008   00FF95  6E                 	db	110	;'n'
  1009   00FF96  75                 	db	117	;'u'
  1010   00FF97  2E                 	db	46
  1011   00FF98  2E                 	db	46
  1012   00FF99  2E                 	db	46
  1013   00FF9A  00                 	db	0
  1014   00FF9B                     STR_34:
  1015   00FF9B  25                 	db	37
  1016   00FF9C  63                 	db	99	;'c'
  1017   00FF9D  25                 	db	37
  1018   00FF9E  30                 	db	48	;'0'
  1019   00FF9F  31                 	db	49	;'1'
  1020   00FFA0  58                 	db	88	;'X'
  1021   00FFA1  25                 	db	37
  1022   00FFA2  30                 	db	48	;'0'
  1023   00FFA3  32                 	db	50	;'2'
  1024   00FFA4  58                 	db	88	;'X'
  1025   00FFA5  00                 	db	0
  1026   00FFA6                     STR_1:
  1027   00FFA6  41                 	db	65	;'A'
  1028   00FFA7  54                 	db	84	;'T'
  1029   00FFA8  45                 	db	69	;'E'
  1030   00FFA9  30                 	db	48	;'0'
  1031   00FFAA  0D                 	db	13
  1032   00FFAB  00                 	db	0
  1033   00FFAC                     STR_4:
  1034   00FFAC  41                 	db	65	;'A'
  1035   00FFAD  54                 	db	84	;'T'
  1036   00FFAE  4C                 	db	76	;'L'
  1037   00FFAF  30                 	db	48	;'0'
  1038   00FFB0  0D                 	db	13
  1039   00FFB1  00                 	db	0
  1040   00FFB2                     STR_30:
  1041   00FFB2  30                 	db	48	;'0'
  1042   00FFB3  31                 	db	49	;'1'
  1043   00FFB4  30                 	db	48	;'0'
  1044   00FFB5  38                 	db	56	;'8'
  1045   00FFB6  0D                 	db	13
  1046   00FFB7  00                 	db	0
  1047   00FFB8                     STR_15:
  1048   00FFB8  30                 	db	48	;'0'
  1049   00FFB9  31                 	db	49	;'1'
  1050   00FFBA  30                 	db	48	;'0'
  1051   00FFBB  43                 	db	67	;'C'
  1052   00FFBC  0D                 	db	13
  1053   00FFBD  00                 	db	0
  1054   00FFBE                     STR_23:
  1055   00FFBE  30                 	db	48	;'0'
  1056   00FFBF  31                 	db	49	;'1'
  1057   00FFC0  30                 	db	48	;'0'
  1058   00FFC1  46                 	db	70	;'F'
  1059   00FFC2  0D                 	db	13
  1060   00FFC3  00                 	db	0
  1061   00FFC4                     STR_19:
  1062   00FFC4  41                 	db	65	;'A'
  1063   00FFC5  54                 	db	84	;'T'
  1064   00FFC6  52                 	db	82	;'R'
  1065   00FFC7  56                 	db	86	;'V'
  1066   00FFC8  0D                 	db	13
  1067   00FFC9  00                 	db	0
  1068   00FFCA                     STR_21:
  1069   00FFCA  56                 	db	86	;'V'
  1070   00FFCB  42                 	db	66	;'B'
  1071   00FFCC  61                 	db	97	;'a'
  1072   00FFCD  74                 	db	116	;'t'
  1073   00FFCE  74                 	db	116	;'t'
  1074   00FFCF  00                 	db	0
  1075   00FFD0                     STR_5:
  1076   00FFD0  41                 	db	65	;'A'
  1077   00FFD1  54                 	db	84	;'T'
  1078   00FFD2  49                 	db	73	;'I'
  1079   00FFD3  0D                 	db	13
  1080   00FFD4  00                 	db	0
  1081   00FFD5                     STR_31:
  1082   00FFD5  53                 	db	83	;'S'
  1083   00FFD6  41                 	db	65	;'A'
  1084   00FFD7  45                 	db	69	;'E'
  1085   00FFD8  3A                 	db	58	;':'
  1086   00FFD9  00                 	db	0
  1087   00FFDA                     STR_37:
  1088   00FFDA  30                 	db	48	;'0'
  1089   00FFDB  33                 	db	51	;'3'
  1090   00FFDC  0D                 	db	13
  1091   00FFDD  00                 	db	0
  1092   00FFDE                     STR_45:
  1093   00FFDE  30                 	db	48	;'0'
  1094   00FFDF  34                 	db	52	;'4'
  1095   00FFE0  0D                 	db	13
  1096   00FFE1  00                 	db	0
  1097   00FFE2                     STR_29:
  1098   00FFE2  4F                 	db	79	;'O'
  1099   00FFE3  53                 	db	83	;'S'
  1100   00FFE4  3A                 	db	58	;':'
  1101   00FFE5  00                 	db	0
  1102   00FFE6                     STR_22:
  1103   00FFE6  4E                 	db	78	;'N'
  1104   00FFE7  2F                 	db	47
  1105   00FFE8  41                 	db	65	;'A'
  1106   00FFE9  00                 	db	0
  1107   00FFEA                     STR_18:
  1108   00FFEA  52                 	db	82	;'R'
  1109   00FFEB  50                 	db	80	;'P'
  1110   00FFEC  4D                 	db	77	;'M'
  1111   00FFED  00                 	db	0
  1112   00FFEE                     STR_26:
  1113   00FFEE  41                 	db	65	;'A'
  1114   00FFEF  49                 	db	73	;'I'
  1115   00FFF0  54                 	db	84	;'T'
  1116   00FFF1  00                 	db	0
  1117   00FFF2                     STR_16:
  1118   00FFF2  25                 	db	37
  1119   00FFF3  75                 	db	117	;'u'
  1120   00FFF4  00                 	db	0
  1121   00FFF5                     STR_38:
  1122   00FFF5  25                 	db	37
  1123   00FFF6  78                 	db	120	;'x'
  1124   00FFF7  00                 	db	0
  1125   00FFF8                     STR_27:
  1126   00FFF8  43                 	db	67	;'C'
  1127   00FFF9  00                 	db	0
  1128   00FFFA                     STR_14:
  1129   00FFFA  5E                 	db	94	;'^'
  1130   00FFFB  00                 	db	0
  1131   00FFFC                     STR_13:
  1132   00FFFC  7E                 	db	126
  1133   00FFFD  00                 	db	0
  1134   00FFF5                     STR_39          equ	STR_38
  1135   00FFF2                     STR_25          equ	STR_16
  1136   00FF90                     STR_49          equ	STR_47
  1137   00FF4E                     STR_32          equ	STR_33+1
  1138   00FF55                     STR_17          equ	STR_33+8
  1139   00FF55                     STR_20          equ	STR_33+8
  1140   00FF57                     STR_24          equ	STR_33+10
  1141   00FFD0                     STR_7           equ	STR_5
  1142   00FFD0                     STR_28          equ	STR_5
  1143   00FFA6                     STR_10          equ	STR_1
  1144   00FFFE  00                 	db	0	; dummy byte at the end
  1145   00FE84                     __smallconst    set	__pmediumconst
  1146   00FE84                     __mediumconst   set	__pmediumconst
  1147   000002                     __activetblptr  equ	2
  1148                           
  1149                           ; #config settings
  1150                           
  1151                           	psect	cinit
  1152   003014                     __pcinit:
  1153                           	callstack 0
  1154   003014                     start_initialization:
  1155                           	callstack 0
  1156   003014                     __initialization:
  1157                           	callstack 0
  1158                           
  1159                           ; Initialize objects allocated to BANK0 (4 bytes)
  1160                           ; load TBLPTR registers with __pidataBANK0
  1161   003014  0EF0               	movlw	low __pidataBANK0
  1162   003016  6EF6               	movwf	tblptrl,c
  1163   003018  0E33               	movlw	high __pidataBANK0
  1164   00301A  6EF7               	movwf	tblptrh,c
  1165   00301C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1166   00301E  6EF8               	movwf	tblptru,c
  1167   003020  EE00  F0F3         	lfsr	0,__pdataBANK0
  1168   003024  EE10 F004          	lfsr	1,4
  1169   003028                     copy_data0:
  1170   003028  0009               	tblrd		*+
  1171   00302A  CFF5 FFEE          	movff	tablat,postinc0
  1172   00302E  50E5               	movf	postdec1,w,c
  1173   003030  50E1               	movf	fsr1l,w,c
  1174   003032  E1FA               	bnz	copy_data0
  1175                           
  1176                           ; Clear objects allocated to BANK2 (256 bytes)
  1177   003034  EE02  F000         	lfsr	0,__pbssBANK2
  1178   003038  EE11 F000          	lfsr	1,256
  1179   00303C                     clear_0:
  1180   00303C  6AEE               	clrf	postinc0,c
  1181   00303E  50E5               	movf	postdec1,w,c
  1182   003040  50E1               	movf	fsr1l,w,c
  1183   003042  E1FC               	bnz	clear_0
  1184   003044  50E2               	movf	fsr1h,w,c
  1185   003046  E1FA               	bnz	clear_0
  1186                           
  1187                           ; Clear objects allocated to BANK1 (124 bytes)
  1188   003048  EE01  F000         	lfsr	0,__pbssBANK1
  1189   00304C  0E7C               	movlw	124
  1190   00304E                     clear_1:
  1191   00304E  6AEE               	clrf	postinc0,c
  1192   003050  06E8               	decf	wreg,f,c
  1193   003052  E1FD               	bnz	clear_1
  1194                           
  1195                           ; Clear objects allocated to BANK0 (73 bytes)
  1196   003054  EE00  F0AA         	lfsr	0,__pbssBANK0
  1197   003058  0E49               	movlw	73
  1198   00305A                     clear_2:
  1199   00305A  6AEE               	clrf	postinc0,c
  1200   00305C  06E8               	decf	wreg,f,c
  1201   00305E  E1FD               	bnz	clear_2
  1202                           
  1203                           ; Clear objects allocated to COMRAM (2 bytes)
  1204   003060  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1205   003062  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  1206   003064                     end_of_initialization:
  1207                           	callstack 0
  1208   003064                     __end_of__initialization:
  1209                           	callstack 0
  1210   003064  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1211   003066  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1212   003068  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1213   00306A  6EF8               	movwf	tblptru,c
  1214   00306C  0100               	movlb	0
  1215   00306E  EF75  F017         	goto	_main	;jump to C main() function
  1216                           
  1217                           	psect	bssCOMRAM
  1218   00005A                     __pbssCOMRAM:
  1219                           	callstack 0
  1220   00005A                     _result:
  1221                           	callstack 0
  1222   00005A                     	ds	2
  1223                           
  1224                           	psect	bssBANK0
  1225   0000AA                     __pbssBANK0:
  1226                           	callstack 0
  1227   0000AA                     modff@F522:
  1228                           	callstack 0
  1229   0000AA                     	ds	4
  1230   0000AE                     ___ungetbuf:
  1231                           	callstack 0
  1232   0000AE                     	ds	3
  1233   0000B1                     	ds	3
  1234   0000B4                     	ds	3
  1235   0000B7                     _nmatch:
  1236                           	callstack 0
  1237   0000B7                     	ds	2
  1238   0000B9                     _ncnv:
  1239                           	callstack 0
  1240   0000B9                     	ds	2
  1241   0000BB                     _width@doscan$F2239:
  1242                           	callstack 0
  1243   0000BB                     	ds	2
  1244   0000BD                     _errno:
  1245                           	callstack 0
  1246   0000BD                     	ds	2
  1247   0000BF                     _width:
  1248                           	callstack 0
  1249   0000BF                     	ds	2
  1250   0000C1                     _prec:
  1251                           	callstack 0
  1252   0000C1                     	ds	2
  1253   0000C3                     _air_intake_temp:
  1254                           	callstack 0
  1255   0000C3                     	ds	2
  1256   0000C5                     _A_air_intake:
  1257                           	callstack 0
  1258   0000C5                     	ds	2
  1259   0000C7                     _RPM:
  1260                           	callstack 0
  1261   0000C7                     	ds	2
  1262   0000C9                     _B_rpm:
  1263                           	callstack 0
  1264   0000C9                     	ds	2
  1265   0000CB                     _A_rpm:
  1266                           	callstack 0
  1267   0000CB                     	ds	2
  1268   0000CD                     ___ungetcnt:
  1269                           	callstack 0
  1270   0000CD                     	ds	1
  1271   0000CE                     _asup:
  1272                           	callstack 0
  1273   0000CE                     	ds	1
  1274   0000CF                     _flags:
  1275                           	callstack 0
  1276   0000CF                     	ds	1
  1277   0000D0                     _message_complete:
  1278                           	callstack 0
  1279   0000D0                     	ds	1
  1280   0000D1                     _RX_char:
  1281                           	callstack 0
  1282   0000D1                     	ds	1
  1283   0000D2                     _buffer_count:
  1284                           	callstack 0
  1285   0000D2                     	ds	1
  1286   0000D3                     _air_intake_string:
  1287                           	callstack 0
  1288   0000D3                     	ds	16
  1289   0000E3                     _rpm_string:
  1290                           	callstack 0
  1291   0000E3                     	ds	16
  1292                           
  1293                           	psect	dataBANK0
  1294   0000F3                     __pdataBANK0:
  1295                           	callstack 0
  1296   0000F3                     _menu_sel:
  1297                           	callstack 0
  1298   0000F3                     	ds	2
  1299   0000F5                     _LCD_entry_mode:
  1300                           	callstack 0
  1301   0000F5                     	ds	1
  1302   0000F6                     _LCD_display_control:
  1303                           	callstack 0
  1304   0000F6                     	ds	1
  1305                           
  1306                           	psect	bssBANK1
  1307   000100                     __pbssBANK1:
  1308                           	callstack 0
  1309   000100                     _dtc_codes:
  1310                           	callstack 0
  1311   000100                     	ds	60
  1312   00013C                     _dbuf@doscan$F2242:
  1313                           	callstack 0
  1314   00013C                     	ds	32
  1315   00015C                     _dbuf:
  1316                           	callstack 0
  1317   00015C                     	ds	32
  1318                           
  1319                           	psect	bssBANK2
  1320   000200                     __pbssBANK2:
  1321                           	callstack 0
  1322   000200                     _buffer:
  1323                           	callstack 0
  1324   000200                     	ds	256
  1325                           
  1326                           	psect	cstackBANK0
  1327   000060                     __pcstackBANK0:
  1328                           	callstack 0
  1329   000060                     atox@w:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x0
  1333   000060                     	ds	2
  1334   000062                     atox@ep:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x2
  1338   000062                     	ds	2
  1339   000064                     atox@seen_0x:
  1340                           	callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x4
  1343   000064                     	ds	2
  1344   000066                     atox@i:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x6
  1348   000066                     	ds	2
  1349   000068                     atox@c:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x8
  1353   000068                     	ds	2
  1354   00006A                     ?_vfsfcnvrt:
  1355                           	callstack 0
  1356   00006A                     vfsfcnvrt@fp:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0xA
  1360   00006A                     	ds	1
  1361   00006B                     vfsfcnvrt@fmt:
  1362                           	callstack 0
  1363                           
  1364                           ; 1 bytes @ 0xB
  1365   00006B                     	ds	1
  1366   00006C                     vfsfcnvrt@ap:
  1367                           	callstack 0
  1368                           
  1369                           ; 2 bytes @ 0xC
  1370   00006C                     	ds	2
  1371   00006E                     vfsfcnvrt@vp:
  1372                           	callstack 0
  1373                           
  1374                           ; 1 bytes @ 0xE
  1375   00006E                     	ds	1
  1376   00006F                     vfsfcnvrt@i:
  1377                           	callstack 0
  1378                           
  1379                           ; 2 bytes @ 0xF
  1380   00006F                     	ds	2
  1381   000071                     vfsfcnvrt@llu:
  1382                           	callstack 0
  1383                           
  1384                           ; 8 bytes @ 0x11
  1385   000071                     	ds	8
  1386   000079                     vfsfcnvrt@c:
  1387                           	callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x19
  1390   000079                     	ds	2
  1391   00007B                     ?_vfscanf:
  1392                           	callstack 0
  1393   00007B                     vfscanf@fp:
  1394                           	callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x1B
  1397   00007B                     	ds	1
  1398   00007C                     vfscanf@fmt:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x1C
  1402   00007C                     	ds	2
  1403   00007E                     vfscanf@ap:
  1404                           	callstack 0
  1405                           
  1406                           ; 1 bytes @ 0x1E
  1407   00007E                     	ds	1
  1408   00007F                     vfscanf@saved_errno:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x1F
  1412   00007F                     	ds	2
  1413   000081                     vfscanf@n:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x21
  1417   000081                     	ds	2
  1418   000083                     vfscanf@cfmt:
  1419                           	callstack 0
  1420                           
  1421                           ; 2 bytes @ 0x23
  1422   000083                     	ds	2
  1423   000085                     ?_sscanf:
  1424                           	callstack 0
  1425   000085                     sscanf@s:
  1426                           	callstack 0
  1427                           
  1428                           ; 1 bytes @ 0x25
  1429   000085                     	ds	1
  1430   000086                     sscanf@fmt:
  1431                           	callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x26
  1434   000086                     	ds	4
  1435   00008A                     sscanf@ap:
  1436                           	callstack 0
  1437                           
  1438                           ; 1 bytes @ 0x2A
  1439   00008A                     	ds	1
  1440   00008B                     sscanf@f:
  1441                           	callstack 0
  1442                           
  1443                           ; 11 bytes @ 0x2B
  1444   00008B                     	ds	11
  1445   000096                     ??_diagnostic_trouble_codes:
  1446                           
  1447                           ; 1 bytes @ 0x36
  1448   000096                     	ds	2
  1449   000098                     diagnostic_trouble_codes@byte1_str:
  1450                           	callstack 0
  1451                           
  1452                           ; 3 bytes @ 0x38
  1453   000098                     	ds	3
  1454   00009B                     diagnostic_trouble_codes@byte2_str:
  1455                           	callstack 0
  1456                           
  1457                           ; 3 bytes @ 0x3B
  1458   00009B                     	ds	3
  1459   00009E                     diagnostic_trouble_codes@byte1:
  1460                           	callstack 0
  1461                           
  1462                           ; 2 bytes @ 0x3E
  1463   00009E                     	ds	2
  1464   0000A0                     diagnostic_trouble_codes@byte2:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x40
  1468   0000A0                     	ds	2
  1469   0000A2                     diagnostic_trouble_codes@dtc_index:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x42
  1473   0000A2                     	ds	2
  1474   0000A4                     diagnostic_trouble_codes@i:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x44
  1478   0000A4                     	ds	2
  1479   0000A6                     ??_main_menu:
  1480                           
  1481                           ; 1 bytes @ 0x46
  1482   0000A6                     	ds	2
  1483   0000A8                     ??_main:
  1484                           
  1485                           ; 1 bytes @ 0x48
  1486   0000A8                     	ds	2
  1487                           
  1488                           	psect	cstackCOMRAM
  1489   000001                     __pcstackCOMRAM:
  1490                           	callstack 0
  1491   000001                     ??_UART_ISR:
  1492                           
  1493                           ; 1 bytes @ 0x0
  1494   000001                     	ds	2
  1495   000003                     ?_strchr:
  1496                           	callstack 0
  1497   000003                     ?_getch:
  1498                           	callstack 0
  1499   000003                     ?_strlen:
  1500                           	callstack 0
  1501   000003                     ?_strncmp:
  1502                           	callstack 0
  1503   000003                     ?_readADC:
  1504                           	callstack 0
  1505   000003                     ?___lwdiv:
  1506                           	callstack 0
  1507   000003                     ?___lwmod:
  1508                           	callstack 0
  1509   000003                     ?_read_prec_or_width:
  1510                           	callstack 0
  1511   000003                     ?___lmul:
  1512                           	callstack 0
  1513   000003                     ?___aldiv:
  1514                           	callstack 0
  1515   000003                     ?___almod:
  1516                           	callstack 0
  1517   000003                     ?___omul:
  1518                           	callstack 0
  1519   000003                     UART1_SendChar@c:
  1520                           	callstack 0
  1521   000003                     hex_char_to_value@c:
  1522                           	callstack 0
  1523   000003                     read_prec_or_width@fmt:
  1524                           	callstack 0
  1525   000003                     ___lwdiv@dividend:
  1526                           	callstack 0
  1527   000003                     ___lwmod@dividend:
  1528                           	callstack 0
  1529   000003                     fputc@c:
  1530                           	callstack 0
  1531   000003                     ungetc@c:
  1532                           	callstack 0
  1533   000003                     strchr@s:
  1534                           	callstack 0
  1535   000003                     strlen@s:
  1536                           	callstack 0
  1537   000003                     strncmp@l:
  1538                           	callstack 0
  1539   000003                     ___lmul@multiplier:
  1540                           	callstack 0
  1541   000003                     ___aldiv@dividend:
  1542                           	callstack 0
  1543   000003                     ___almod@dividend:
  1544                           	callstack 0
  1545   000003                     ___omul@multiplier:
  1546                           	callstack 0
  1547   000003                     ??_LCD_write_command:
  1548   000003                     ??_LCD_write_data:
  1549                           
  1550                           ; 1 bytes @ 0x2
  1551   000003                     	ds	1
  1552   000004                     read_prec_or_width@ap:
  1553                           	callstack 0
  1554   000004                     UART1_SendString@string:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x3
  1558   000004                     	ds	1
  1559   000005                     ?_fgetc:
  1560                           	callstack 0
  1561   000005                     LCD_write_command@command:
  1562                           	callstack 0
  1563   000005                     LCD_write_data@data:
  1564                           	callstack 0
  1565   000005                     fputc@fp:
  1566                           	callstack 0
  1567   000005                     fgetc@fp:
  1568                           	callstack 0
  1569   000005                     ungetc@fp:
  1570                           	callstack 0
  1571   000005                     ___lwdiv@divisor:
  1572                           	callstack 0
  1573   000005                     ___lwmod@divisor:
  1574                           	callstack 0
  1575   000005                     strchr@c:
  1576                           	callstack 0
  1577   000005                     strlen@a:
  1578                           	callstack 0
  1579   000005                     strncmp@r:
  1580                           	callstack 0
  1581   000005                     ??_readADC:
  1582   000005                     ??_read_prec_or_width:
  1583                           
  1584                           ; 1 bytes @ 0x4
  1585   000005                     	ds	1
  1586   000006                     LCD_cursor_set@column:
  1587                           	callstack 0
  1588   000006                     LCD_configure_cursor_blink@state:
  1589                           	callstack 0
  1590   000006                     LCD_write_string@string:
  1591                           	callstack 0
  1592   000006                     ??_LCD_clear:
  1593   000006                     ??_UART1_SendString:
  1594   000006                     ??_fputc:
  1595   000006                     ??_ungetc:
  1596                           
  1597                           ; 1 bytes @ 0x5
  1598   000006                     	ds	1
  1599   000007                     LCD_cursor_set@row:
  1600                           	callstack 0
  1601   000007                     ___lwmod@counter:
  1602                           	callstack 0
  1603   000007                     read_prec_or_width@c:
  1604                           	callstack 0
  1605   000007                     ___lwdiv@quotient:
  1606                           	callstack 0
  1607   000007                     strncmp@n:
  1608                           	callstack 0
  1609   000007                     ___lmul@multiplicand:
  1610                           	callstack 0
  1611   000007                     ___aldiv@divisor:
  1612                           	callstack 0
  1613   000007                     ___almod@divisor:
  1614                           	callstack 0
  1615   000007                     ??_LCD_init:
  1616   000007                     ??_fgetc:
  1617   000007                     
  1618                           ; 1 bytes @ 0x6
  1619   000007                     	ds	1
  1620   000008                     UART1_SendString@i:
  1621                           	callstack 0
  1622   000008                     read_prec_or_width@n:
  1623                           	callstack 0
  1624   000008                     ??_LCD_write_string:
  1625                           
  1626                           ; 1 bytes @ 0x7
  1627   000008                     	ds	1
  1628   000009                     ___lwdiv@counter:
  1629                           	callstack 0
  1630   000009                     ??_strncmp:
  1631                           
  1632                           ; 1 bytes @ 0x8
  1633   000009                     	ds	1
  1634   00000A                     ?_strstr:
  1635                           	callstack 0
  1636   00000A                     LCD_write_string@i:
  1637                           	callstack 0
  1638   00000A                     strstr@h:
  1639                           	callstack 0
  1640                           
  1641                           ; 2 bytes @ 0x9
  1642   00000A                     	ds	1
  1643   00000B                     ___aldiv@counter:
  1644                           	callstack 0
  1645   00000B                     ___almod@counter:
  1646                           	callstack 0
  1647   00000B                     ctoa@fp:
  1648                           	callstack 0
  1649   00000B                     fputs@s:
  1650                           	callstack 0
  1651   00000B                     ___lmul@product:
  1652                           	callstack 0
  1653   00000B                     ___omul@multiplicand:
  1654                           	callstack 0
  1655   00000B                     ??_clear_diagnostic_codes:
  1656   00000B                     ??_print_Vbatt:
  1657   00000B                     ??_print_ELMVer:
  1658   00000B                     ??_print_SAEVer:
  1659   00000B                     
  1660                           ; 1 bytes @ 0xA
  1661   00000B                     	ds	1
  1662   00000C                     ___aldiv@sign:
  1663                           	callstack 0
  1664   00000C                     ___almod@sign:
  1665                           	callstack 0
  1666   00000C                     ctoa@c:
  1667                           	callstack 0
  1668   00000C                     fgetc@c:
  1669                           	callstack 0
  1670   00000C                     strstr@n:
  1671                           	callstack 0
  1672   00000C                     
  1673                           ; 1 bytes @ 0xB
  1674   00000C                     	ds	1
  1675   00000D                     fputs@fp:
  1676                           	callstack 0
  1677   00000D                     clear_diagnostic_codes@opt_sel:
  1678                           	callstack 0
  1679   00000D                     ___aldiv@quotient:
  1680                           	callstack 0
  1681   00000D                     ??_ctoa:
  1682                           
  1683                           ; 1 bytes @ 0xC
  1684   00000D                     	ds	1
  1685   00000E                     fputs@c:
  1686                           	callstack 0
  1687   00000E                     skipws@fp:
  1688                           	callstack 0
  1689   00000E                     ctoa@l:
  1690                           	callstack 0
  1691   00000E                     strstr@nl:
  1692                           	callstack 0
  1693   00000E                     
  1694                           ; 1 bytes @ 0xD
  1695   00000E                     	ds	1
  1696   00000F                     fputs@i:
  1697                           	callstack 0
  1698   00000F                     ??_skipws:
  1699                           
  1700                           ; 1 bytes @ 0xE
  1701   00000F                     	ds	1
  1702   000010                     ctoa@w:
  1703                           	callstack 0
  1704   000010                     skipws@c:
  1705                           	callstack 0
  1706                           
  1707                           ; 2 bytes @ 0xF
  1708   000010                     	ds	1
  1709   000011                     pad@fp:
  1710                           	callstack 0
  1711   000011                     LCD_write_variable@variable:
  1712                           	callstack 0
  1713                           
  1714                           ; 4 bytes @ 0x10
  1715   000011                     	ds	1
  1716   000012                     pad@buf:
  1717                           	callstack 0
  1718                           
  1719                           ; 2 bytes @ 0x11
  1720   000012                     	ds	1
  1721   000013                     ___omul@product:
  1722                           	callstack 0
  1723   000013                     
  1724                           ; 1 bytes @ 0x12
  1725   000013                     	ds	1
  1726   000014                     pad@p:
  1727                           	callstack 0
  1728                           
  1729                           ; 2 bytes @ 0x13
  1730   000014                     	ds	1
  1731   000015                     LCD_write_variable@left_offset:
  1732                           	callstack 0
  1733                           
  1734                           ; 1 bytes @ 0x14
  1735   000015                     	ds	1
  1736   000016                     LCD_write_variable@i:
  1737                           	callstack 0
  1738   000016                     ??_pad:
  1739                           
  1740                           ; 1 bytes @ 0x15
  1741   000016                     	ds	1
  1742   000017                     LCD_write_variable@digits:
  1743                           	callstack 0
  1744   000017                     pad@i:
  1745                           	callstack 0
  1746                           
  1747                           ; 2 bytes @ 0x16
  1748   000017                     	ds	1
  1749   000018                     LCD_write_variable@temp_variable:
  1750                           	callstack 0
  1751                           
  1752                           ; 4 bytes @ 0x17
  1753   000018                     	ds	1
  1754   000019                     utoa@fp:
  1755                           	callstack 0
  1756   000019                     xtoa@fp:
  1757                           	callstack 0
  1758                           
  1759                           ; 1 bytes @ 0x18
  1760   000019                     	ds	1
  1761   00001A                     utoa@d:
  1762                           	callstack 0
  1763   00001A                     xtoa@d:
  1764                           	callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x19
  1767   00001A                     	ds	1
  1768   00001B                     ?___strtoxll:
  1769                           	callstack 0
  1770   00001B                     ___strtoxll@s:
  1771                           	callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x1A
  1774   00001B                     	ds	1
  1775   00001C                     utoa@p:
  1776                           	callstack 0
  1777   00001C                     ??_welcome_splash:
  1778   00001C                     ??_xtoa:
  1779                           
  1780                           ; 1 bytes @ 0x1B
  1781   00001C                     	ds	1
  1782   00001D                     ___strtoxll@endptr:
  1783                           	callstack 0
  1784   00001D                     utoa@w:
  1785                           	callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x1C
  1788   00001D                     	ds	1
  1789   00001E                     welcome_splash@plug_flag:
  1790                           	callstack 0
  1791   00001E                     ___strtoxll@base:
  1792                           	callstack 0
  1793                           
  1794                           ; 2 bytes @ 0x1D
  1795   00001E                     	ds	1
  1796   00001F                     xtoa@p:
  1797                           	callstack 0
  1798   00001F                     utoa@i:
  1799                           	callstack 0
  1800                           
  1801                           ; 2 bytes @ 0x1E
  1802   00001F                     	ds	1
  1803   000020                     ___strtoxll@is_signed:
  1804                           	callstack 0
  1805   000020                     welcome_splash@CCP1IF_counter:
  1806                           	callstack 0
  1807   000020                     xtoa@w:
  1808                           	callstack 0
  1809                           
  1810                           ; 2 bytes @ 0x1F
  1811   000020                     	ds	2
  1812   000022                     xtoa@c:
  1813                           	callstack 0
  1814                           
  1815                           ; 1 bytes @ 0x21
  1816   000022                     	ds	1
  1817   000023                     xtoa@i:
  1818                           	callstack 0
  1819   000023                     ??___strtoxll:
  1820                           
  1821                           ; 1 bytes @ 0x22
  1822   000023                     	ds	2
  1823   000025                     vfpfcnvrt@fp:
  1824                           	callstack 0
  1825                           
  1826                           ; 1 bytes @ 0x24
  1827   000025                     	ds	1
  1828   000026                     vfpfcnvrt@fmt:
  1829                           	callstack 0
  1830                           
  1831                           ; 1 bytes @ 0x25
  1832   000026                     	ds	1
  1833   000027                     vfpfcnvrt@ap:
  1834                           	callstack 0
  1835                           
  1836                           ; 1 bytes @ 0x26
  1837   000027                     	ds	1
  1838   000028                     ??_vfpfcnvrt:
  1839                           
  1840                           ; 1 bytes @ 0x27
  1841   000028                     	ds	2
  1842   00002A                     vfpfcnvrt@c:
  1843                           	callstack 0
  1844                           
  1845                           ; 1 bytes @ 0x29
  1846   00002A                     	ds	1
  1847   00002B                     vfpfcnvrt@done:
  1848                           	callstack 0
  1849   00002B                     ___strtoxll@prev_a:
  1850                           	callstack 0
  1851                           
  1852                           ; 8 bytes @ 0x2A
  1853   00002B                     	ds	1
  1854   00002C                     vfpfcnvrt@convarg:
  1855                           	callstack 0
  1856                           
  1857                           ; 4 bytes @ 0x2B
  1858   00002C                     	ds	4
  1859   000030                     vfpfcnvrt@cp:
  1860                           	callstack 0
  1861                           
  1862                           ; 2 bytes @ 0x2F
  1863   000030                     	ds	2
  1864   000032                     ?_vfprintf:
  1865                           	callstack 0
  1866   000032                     vfprintf@fp:
  1867                           	callstack 0
  1868                           
  1869                           ; 1 bytes @ 0x31
  1870   000032                     	ds	1
  1871   000033                     vfprintf@fmt:
  1872                           	callstack 0
  1873   000033                     ___strtoxll$2292:
  1874                           	callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x32
  1877   000033                     	ds	2
  1878   000035                     vfprintf@ap:
  1879                           	callstack 0
  1880   000035                     ___strtoxll$2293:
  1881                           	callstack 0
  1882                           
  1883                           ; 2 bytes @ 0x34
  1884   000035                     	ds	1
  1885   000036                     vfprintf@cfmt:
  1886                           	callstack 0
  1887   000036                     
  1888                           ; 1 bytes @ 0x35
  1889   000036                     	ds	1
  1890   000037                     ___strtoxll@limit:
  1891                           	callstack 0
  1892                           
  1893                           ; 8 bytes @ 0x36
  1894   000037                     	ds	1
  1895   000038                     ?_sprintf:
  1896                           	callstack 0
  1897   000038                     sprintf@s:
  1898                           	callstack 0
  1899                           
  1900                           ; 2 bytes @ 0x37
  1901   000038                     	ds	2
  1902   00003A                     sprintf@fmt:
  1903                           	callstack 0
  1904                           
  1905                           ; 2 bytes @ 0x39
  1906   00003A                     	ds	5
  1907   00003F                     ___strtoxll@flags:
  1908                           	callstack 0
  1909                           
  1910                           ; 1 bytes @ 0x3E
  1911   00003F                     	ds	1
  1912   000040                     ___strtoxll@a:
  1913                           	callstack 0
  1914                           
  1915                           ; 8 bytes @ 0x3F
  1916   000040                     	ds	2
  1917   000042                     sprintf@ap:
  1918                           	callstack 0
  1919   000042                     
  1920                           ; 1 bytes @ 0x41
  1921   000042                     	ds	1
  1922   000043                     sprintf@f:
  1923                           	callstack 0
  1924                           
  1925                           ; 11 bytes @ 0x42
  1926   000043                     	ds	5
  1927   000048                     ___strtoxll@cp:
  1928                           	callstack 0
  1929                           
  1930                           ; 2 bytes @ 0x47
  1931   000048                     	ds	2
  1932   00004A                     ___strtoxll@c:
  1933                           	callstack 0
  1934                           
  1935                           ; 1 bytes @ 0x49
  1936   00004A                     	ds	1
  1937   00004B                     ?_atox:
  1938                           	callstack 0
  1939   00004B                     atox@fp:
  1940                           	callstack 0
  1941                           
  1942                           ; 1 bytes @ 0x4A
  1943   00004B                     	ds	1
  1944   00004C                     atox@pll:
  1945                           	callstack 0
  1946                           
  1947                           ; 1 bytes @ 0x4B
  1948   00004C                     	ds	1
  1949   00004D                     ??_atox:
  1950                           
  1951                           ; 1 bytes @ 0x4C
  1952   00004D                     	ds	1
  1953   00004E                     decode_dtc@b1:
  1954                           	callstack 0
  1955   00004E                     ??_print_RPM:
  1956   00004E                     ??_print_AI_Temp:
  1957                           
  1958                           ; 1 bytes @ 0x4D
  1959   00004E                     	ds	2
  1960   000050                     decode_dtc@b2:
  1961                           	callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x4F
  1964   000050                     	ds	1
  1965   000051                     
  1966                           ; 1 bytes @ 0x50
  1967   000051                     	ds	1
  1968   000052                     decode_dtc@dtc:
  1969                           	callstack 0
  1970                           
  1971                           ; 2 bytes @ 0x51
  1972   000052                     	ds	2
  1973   000054                     ??_decode_dtc:
  1974                           
  1975                           ; 1 bytes @ 0x53
  1976   000054                     	ds	1
  1977   000055                     ??_vfsfcnvrt:
  1978                           
  1979                           ; 1 bytes @ 0x54
  1980   000055                     	ds	2
  1981   000057                     
  1982                           ; 1 bytes @ 0x56
  1983   000057                     	ds	2
  1984   000059                     decode_dtc@type:
  1985                           	callstack 0
  1986                           
  1987                           ; 1 bytes @ 0x58
  1988   000059                     	ds	1
  1989                           
  1990 ;;
  1991 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1992 ;;
  1993 ;; *************** function _main *****************
  1994 ;; Defined at:
  1995 ;;		line 72 in file "OBCII_PIC18F46K22.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;Total ram usage:        2 bytes
  2014 ;; Hardware stack levels required when called: 12
  2015 ;; This function calls:
  2016 ;;		_ADC_init
  2017 ;;		_LCD_clear
  2018 ;;		_LCD_init
  2019 ;;		_UART1_Init
  2020 ;;		_UART1_SendString
  2021 ;;		_input_init
  2022 ;;		_main_menu
  2023 ;;		_welcome_splash
  2024 ;; This function is called by:
  2025 ;;		Startup code after reset
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text0
  2030   002EEA                     __ptext0:
  2031                           	callstack 0
  2032   002EEA                     _main:
  2033                           	callstack 19
  2034   002EEA                     
  2035                           ;OBCII_PIC18F46K22.c: 75:     OSCCON = 0b01110000;
  2036   002EEA  0E70               	movlw	112
  2037   002EEC  6ED3               	movwf	211,c	;volatile
  2038   002EEE                     
  2039                           ;OBCII_PIC18F46K22.c: 79:     LCD_init();
  2040   002EEE  EC15  F016         	call	_LCD_init	;wreg free
  2041   002EF2                     
  2042                           ;OBCII_PIC18F46K22.c: 80:     LCD_clear();
  2043   002EF2  EC97  F019         	call	_LCD_clear	;wreg free
  2044   002EF6                     
  2045                           ;OBCII_PIC18F46K22.c: 81:     input_init();
  2046   002EF6  ECDA  F019         	call	_input_init	;wreg free
  2047                           
  2048                           ;OBCII_PIC18F46K22.c: 82:     ADC_init();
  2049   002EFA  ECEF  F019         	call	_ADC_init	;wreg free
  2050                           
  2051                           ;OBCII_PIC18F46K22.c: 83:     UART1_Init();
  2052   002EFE  EC6E  F019         	call	_UART1_Init	;wreg free
  2053   002F02                     
  2054                           ;OBCII_PIC18F46K22.c: 85:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  2055   002F02  0E29               	movlw	41
  2056   002F04  0100               	movlb	0	; () banked
  2057   002F06  6FA9               	movwf	(??_main+1)& (0+255),b
  2058   002F08  0E96               	movlw	150
  2059   002F0A  6FA8               	movwf	??_main& (0+255),b
  2060   002F0C  0E7F               	movlw	127
  2061   002F0E                     u6647:
  2062   002F0E  2EE8               	decfsz	wreg,f,c
  2063   002F10  D7FE               	bra	u6647
  2064   002F12  2FA8               	decfsz	??_main& (0+255),f,b
  2065   002F14  D7FC               	bra	u6647
  2066   002F16  2FA9               	decfsz	(??_main+1)& (0+255),f,b
  2067   002F18  D7FA               	bra	u6647
  2068   002F1A                     
  2069                           ;OBCII_PIC18F46K22.c: 86:     UART1_SendString("ATE0\r");
  2070   002F1A  0EA6               	movlw	low STR_1
  2071   002F1C  6E04               	movwf	UART1_SendString@string^0,c
  2072   002F1E  0EFF               	movlw	high STR_1
  2073   002F20  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2074   002F22  EC39  F018         	call	_UART1_SendString	;wreg free
  2075   002F26                     
  2076                           ;OBCII_PIC18F46K22.c: 87:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2077   002F26  0E02               	movlw	2
  2078   002F28  0100               	movlb	0	; () banked
  2079   002F2A  6FA9               	movwf	(??_main+1)& (0+255),b
  2080   002F2C  0E04               	movlw	4
  2081   002F2E  6FA8               	movwf	??_main& (0+255),b
  2082   002F30  0EBA               	movlw	186
  2083   002F32                     u6657:
  2084   002F32  2EE8               	decfsz	wreg,f,c
  2085   002F34  D7FE               	bra	u6657
  2086   002F36  2FA8               	decfsz	??_main& (0+255),f,b
  2087   002F38  D7FC               	bra	u6657
  2088   002F3A  2FA9               	decfsz	(??_main+1)& (0+255),f,b
  2089   002F3C  D7FA               	bra	u6657
  2090   002F3E  0000               	nop	
  2091   002F40                     l5840:
  2092                           
  2093                           ;OBCII_PIC18F46K22.c: 90:                 welcome_splash();
  2094   002F40  EC34  F00B         	call	_welcome_splash	;wreg free
  2095   002F44                     
  2096                           ;OBCII_PIC18F46K22.c: 91:                 main_menu();
  2097   002F44  EC0F  F008         	call	_main_menu	;wreg free
  2098   002F48  EFA0  F017         	goto	l5840
  2099   002F4C  EF6E  F000         	goto	start
  2100   002F50                     __end_of_main:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _welcome_splash *****************
  2104 ;; Defined at:
  2105 ;;		line 217 in file "OBCII_PIC18F46K22.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  CCP1IF_count    2   31[COMRAM] volatile unsigned int 
  2110 ;;  plug_flag       2   29[COMRAM] volatile int 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;Total ram usage:        6 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 4
  2127 ;; This function calls:
  2128 ;;		_LCD_clear
  2129 ;;		_LCD_cursor_set
  2130 ;;		_LCD_write_string
  2131 ;;		_LCD_write_variable
  2132 ;;		_UART1_SendString
  2133 ;;		___lwdiv
  2134 ;;		___lwmod
  2135 ;;		_ccp1_init
  2136 ;;		_tmr1_init
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text1
  2143   001668                     __ptext1:
  2144                           	callstack 0
  2145   001668                     _welcome_splash:
  2146                           	callstack 26
  2147   001668                     
  2148                           ;OBCII_PIC18F46K22.c: 218:     volatile int plug_flag = 0;
  2149   001668  0E00               	movlw	0
  2150   00166A  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2151   00166C  0E00               	movlw	0
  2152   00166E  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2153                           
  2154                           ;OBCII_PIC18F46K22.c: 219:     volatile unsigned int CCP1IF_counter = 0;
  2155   001670  0E00               	movlw	0
  2156   001672  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2157   001674  0E00               	movlw	0
  2158   001676  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2159   001678                     
  2160                           ;OBCII_PIC18F46K22.c: 222:     LCD_clear();
  2161   001678  EC97  F019         	call	_LCD_clear	;wreg free
  2162   00167C                     
  2163                           ;OBCII_PIC18F46K22.c: 223:     LCD_cursor_set(1, 1);
  2164   00167C  0E01               	movlw	1
  2165   00167E  6E06               	movwf	LCD_cursor_set@column^0,c
  2166   001680  0E01               	movlw	1
  2167   001682  ECDA  F017         	call	_LCD_cursor_set
  2168   001686                     
  2169                           ;OBCII_PIC18F46K22.c: 224:     LCD_write_string(">>> OBDIIPIC <<<");
  2170   001686  0EAA               	movlw	low STR_2
  2171   001688  6E06               	movwf	LCD_write_string@string^0,c
  2172   00168A  0EFE               	movlw	high STR_2
  2173   00168C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2174   00168E  EC94  F016         	call	_LCD_write_string	;wreg free
  2175   001692                     
  2176                           ;OBCII_PIC18F46K22.c: 225:     LCD_cursor_set(2, 1);
  2177   001692  0E01               	movlw	1
  2178   001694  6E06               	movwf	LCD_cursor_set@column^0,c
  2179   001696  0E02               	movlw	2
  2180   001698  ECDA  F017         	call	_LCD_cursor_set
  2181   00169C                     
  2182                           ;OBCII_PIC18F46K22.c: 226:     LCD_write_string(">>>> V1.0 <<<<");
  2183   00169C  0E2F               	movlw	low STR_3
  2184   00169E  6E06               	movwf	LCD_write_string@string^0,c
  2185   0016A0  0EFF               	movlw	high STR_3
  2186   0016A2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2187   0016A4  EC94  F016         	call	_LCD_write_string	;wreg free
  2188   0016A8                     
  2189                           ;OBCII_PIC18F46K22.c: 228:     UART1_SendString("ATL0\r");
  2190   0016A8  0EAC               	movlw	low STR_4
  2191   0016AA  6E04               	movwf	UART1_SendString@string^0,c
  2192   0016AC  0EFF               	movlw	high STR_4
  2193   0016AE  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2194   0016B0  EC39  F018         	call	_UART1_SendString	;wreg free
  2195   0016B4                     
  2196                           ;OBCII_PIC18F46K22.c: 230:     ccp1_init();
  2197   0016B4  ECC9  F019         	call	_ccp1_init	;wreg free
  2198   0016B8                     
  2199                           ;OBCII_PIC18F46K22.c: 231:     tmr1_init();
  2200   0016B8  ECD2  F019         	call	_tmr1_init	;wreg free
  2201   0016BC                     
  2202                           ;OBCII_PIC18F46K22.c: 233:     CCP1IF_counter = 0;
  2203   0016BC  0E00               	movlw	0
  2204   0016BE  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2205   0016C0  0E00               	movlw	0
  2206   0016C2  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2207   0016C4                     
  2208                           ;OBCII_PIC18F46K22.c: 234:     plug_flag = 0;
  2209   0016C4  0E00               	movlw	0
  2210   0016C6  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2211   0016C8  0E00               	movlw	0
  2212   0016CA  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2213   0016CC                     l4814:
  2214                           
  2215                           ;OBCII_PIC18F46K22.c: 237:         if (PIR1bits.CCP1IF) {
  2216   0016CC  A49E               	btfss	158,2,c	;volatile
  2217   0016CE  EF6B  F00B         	goto	u4961
  2218   0016D2  EF6D  F00B         	goto	u4960
  2219   0016D6                     u4961:
  2220   0016D6  EFA3  F00B         	goto	l4828
  2221   0016DA                     u4960:
  2222   0016DA                     
  2223                           ;OBCII_PIC18F46K22.c: 238:             PIR1bits.CCP1IF = 0;
  2224   0016DA  949E               	bcf	158,2,c	;volatile
  2225                           
  2226                           ;OBCII_PIC18F46K22.c: 239:             T1CONbits.TMR1ON = 1;
  2227   0016DC  80CD               	bsf	205,0,c	;volatile
  2228   0016DE                     
  2229                           ;OBCII_PIC18F46K22.c: 240:             CCP1IF_counter++;
  2230   0016DE  4A20               	infsnz	welcome_splash@CCP1IF_counter^0,f,c	;volatile
  2231   0016E0  2A21               	incf	(welcome_splash@CCP1IF_counter+1)^0,f,c	;volatile
  2232   0016E2                     
  2233                           ;OBCII_PIC18F46K22.c: 242:             LCD_cursor_set(2, 16);
  2234   0016E2  0E10               	movlw	16
  2235   0016E4  6E06               	movwf	LCD_cursor_set@column^0,c
  2236   0016E6  0E02               	movlw	2
  2237   0016E8  ECDA  F017         	call	_LCD_cursor_set
  2238   0016EC                     
  2239                           ;OBCII_PIC18F46K22.c: 243:             LCD_write_variable((CCP1IF_counter) / 10, 1);
  2240   0016EC  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwdiv@dividend	;volatile
  2241   0016F0  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwdiv@dividend+1	;volatile
  2242   0016F4  0E00               	movlw	0
  2243   0016F6  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  2244   0016F8  0E0A               	movlw	10
  2245   0016FA  6E05               	movwf	___lwdiv@divisor^0,c
  2246   0016FC  ECD1  F016         	call	___lwdiv	;wreg free
  2247   001700  C003  F011         	movff	?___lwdiv,LCD_write_variable@variable
  2248   001704  C004  F012         	movff	?___lwdiv+1,LCD_write_variable@variable+1
  2249   001708  6A13               	clrf	(LCD_write_variable@variable+2)^0,c
  2250   00170A  6A14               	clrf	(LCD_write_variable@variable+3)^0,c
  2251   00170C  0E01               	movlw	1
  2252   00170E  6E15               	movwf	LCD_write_variable@left_offset^0,c
  2253   001710  EC22  F00C         	call	_LCD_write_variable	;wreg free
  2254   001714                     
  2255                           ;OBCII_PIC18F46K22.c: 246:             if (CCP1IF_counter % 10 == 0) {
  2256   001714  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwmod@dividend	;volatile
  2257   001718  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwmod@dividend+1	;volatile
  2258   00171C  0E00               	movlw	0
  2259   00171E  6E06               	movwf	(___lwmod@divisor+1)^0,c
  2260   001720  0E0A               	movlw	10
  2261   001722  6E05               	movwf	___lwmod@divisor^0,c
  2262   001724  ECA8  F017         	call	___lwmod	;wreg free
  2263   001728  5003               	movf	?___lwmod^0,w,c
  2264   00172A  1004               	iorwf	(?___lwmod+1)^0,w,c
  2265   00172C  A4D8               	btfss	status,2,c
  2266   00172E  EF9B  F00B         	goto	u4971
  2267   001732  EF9D  F00B         	goto	u4970
  2268   001736                     u4971:
  2269   001736  EFA3  F00B         	goto	l4828
  2270   00173A                     u4970:
  2271   00173A                     
  2272                           ;OBCII_PIC18F46K22.c: 247:                 UART1_SendString("ATI\r");
  2273   00173A  0ED0               	movlw	low STR_5
  2274   00173C  6E04               	movwf	UART1_SendString@string^0,c
  2275   00173E  0EFF               	movlw	high STR_5
  2276   001740  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2277   001742  EC39  F018         	call	_UART1_SendString	;wreg free
  2278   001746                     l4828:
  2279                           
  2280                           ;OBCII_PIC18F46K22.c: 252:         if (message_complete) {
  2281   001746  0100               	movlb	0	; () banked
  2282   001748  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  2283   00174A  B4D8               	btfsc	status,2,c
  2284   00174C  EFAA  F00B         	goto	u4981
  2285   001750  EFAC  F00B         	goto	u4980
  2286   001754                     u4981:
  2287   001754  EFB2  F00B         	goto	l4836
  2288   001758                     u4980:
  2289   001758                     
  2290                           ; BSR set to: 0
  2291                           ;OBCII_PIC18F46K22.c: 253:             plug_flag = 1;
  2292   001758  0E00               	movlw	0
  2293   00175A  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2294   00175C  0E01               	movlw	1
  2295   00175E  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2296   001760                     
  2297                           ; BSR set to: 0
  2298                           ;OBCII_PIC18F46K22.c: 254:             buffer_count = 0;
  2299   001760  6BD2               	clrf	_buffer_count& (0+255),b
  2300   001762                     
  2301                           ; BSR set to: 0
  2302                           ;OBCII_PIC18F46K22.c: 255:             message_complete = 0;
  2303   001762  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  2304   001764                     l4836:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;OBCII_PIC18F46K22.c: 259:         if (plug_flag) {
  2308   001764  501E               	movf	welcome_splash@plug_flag^0,w,c	;volatile
  2309   001766  101F               	iorwf	(welcome_splash@plug_flag+1)^0,w,c	;volatile
  2310   001768  B4D8               	btfsc	status,2,c
  2311   00176A  EFB9  F00B         	goto	u4991
  2312   00176E  EFBB  F00B         	goto	u4990
  2313   001772                     u4991:
  2314   001772  EFC8  F00B         	goto	l4842
  2315   001776                     u4990:
  2316   001776                     
  2317                           ; BSR set to: 0
  2318                           ;OBCII_PIC18F46K22.c: 260:             if (CCP1IF_counter >= 4 * 10) {
  2319   001776  5021               	movf	(welcome_splash@CCP1IF_counter+1)^0,w,c	;volatile
  2320   001778  E109               	bnz	u5000
  2321   00177A  0E28               	movlw	40
  2322   00177C  5C20               	subwf	welcome_splash@CCP1IF_counter^0,w,c	;volatile
  2323   00177E  A0D8               	btfss	status,0,c
  2324   001780  EFC4  F00B         	goto	u5001
  2325   001784  EFC6  F00B         	goto	u5000
  2326   001788                     u5001:
  2327   001788  EF66  F00B         	goto	l4814
  2328   00178C                     u5000:
  2329   00178C  EFEB  F00B         	goto	l4852
  2330   001790                     l4842:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;OBCII_PIC18F46K22.c: 266:             CCP1IF_counter = 0;
  2334   001790  0E00               	movlw	0
  2335   001792  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2336   001794  0E00               	movlw	0
  2337   001796  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2338   001798                     
  2339                           ; BSR set to: 0
  2340                           ;OBCII_PIC18F46K22.c: 267:             LCD_cursor_set(2, 1);
  2341   001798  0E01               	movlw	1
  2342   00179A  6E06               	movwf	LCD_cursor_set@column^0,c
  2343   00179C  0E02               	movlw	2
  2344   00179E  ECDA  F017         	call	_LCD_cursor_set
  2345   0017A2                     
  2346                           ;OBCII_PIC18F46K22.c: 268:             LCD_write_string("OBDII Not Found ");
  2347   0017A2  0E99               	movlw	low STR_6
  2348   0017A4  6E06               	movwf	LCD_write_string@string^0,c
  2349   0017A6  0EFE               	movlw	high STR_6
  2350   0017A8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2351   0017AA  EC94  F016         	call	_LCD_write_string	;wreg free
  2352   0017AE                     
  2353                           ;OBCII_PIC18F46K22.c: 269:             UART1_SendString("ATI\r");
  2354   0017AE  0ED0               	movlw	low STR_5
  2355   0017B0  6E04               	movwf	UART1_SendString@string^0,c
  2356   0017B2  0EFF               	movlw	high STR_5
  2357   0017B4  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2358   0017B6  EC39  F018         	call	_UART1_SendString	;wreg free
  2359   0017BA                     
  2360                           ;OBCII_PIC18F46K22.c: 270:             _delay((unsigned long)((50)*(16000000/4000.0)));
  2361   0017BA  0E02               	movlw	2
  2362   0017BC  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2363   0017BE  0E04               	movlw	4
  2364   0017C0  6E1C               	movwf	??_welcome_splash^0,c
  2365   0017C2  0EBA               	movlw	186
  2366   0017C4                     u6667:
  2367   0017C4  2EE8               	decfsz	wreg,f,c
  2368   0017C6  D7FE               	bra	u6667
  2369   0017C8  2E1C               	decfsz	??_welcome_splash^0,f,c
  2370   0017CA  D7FC               	bra	u6667
  2371   0017CC  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2372   0017CE  D7FA               	bra	u6667
  2373   0017D0  D000               	nop2	
  2374   0017D2  EF66  F00B         	goto	l4814
  2375   0017D6                     l4852:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;OBCII_PIC18F46K22.c: 275:     LCD_clear();
  2379   0017D6  EC97  F019         	call	_LCD_clear	;wreg free
  2380                           
  2381                           ;OBCII_PIC18F46K22.c: 276:     LCD_cursor_set(1, 1);
  2382   0017DA  0E01               	movlw	1
  2383   0017DC  6E06               	movwf	LCD_cursor_set@column^0,c
  2384   0017DE  0E01               	movlw	1
  2385   0017E0  ECDA  F017         	call	_LCD_cursor_set
  2386   0017E4                     
  2387                           ;OBCII_PIC18F46K22.c: 277:     LCD_write_string("<OBDII Detected>");
  2388   0017E4  0EEE               	movlw	low STR_8
  2389   0017E6  6E06               	movwf	LCD_write_string@string^0,c
  2390   0017E8  0EFE               	movlw	high STR_8
  2391   0017EA  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2392   0017EC  EC94  F016         	call	_LCD_write_string	;wreg free
  2393   0017F0                     
  2394                           ;OBCII_PIC18F46K22.c: 278:     LCD_cursor_set(2,1);
  2395   0017F0  0E01               	movlw	1
  2396   0017F2  6E06               	movwf	LCD_cursor_set@column^0,c
  2397   0017F4  0E02               	movlw	2
  2398   0017F6  ECDA  F017         	call	_LCD_cursor_set
  2399                           
  2400                           ;OBCII_PIC18F46K22.c: 279:     LCD_write_string("================");
  2401   0017FA  0ECC               	movlw	low STR_9
  2402   0017FC  6E06               	movwf	LCD_write_string@string^0,c
  2403   0017FE  0EFE               	movlw	high STR_9
  2404   001800  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2405   001802  EC94  F016         	call	_LCD_write_string	;wreg free
  2406   001806                     
  2407                           ;OBCII_PIC18F46K22.c: 280:     _delay((unsigned long)((2 * 2000)*(16000000/4000.0)));
  2408   001806  0E52               	movlw	82
  2409   001808  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2410   00180A  0E2B               	movlw	43
  2411   00180C  6E1C               	movwf	??_welcome_splash^0,c
  2412   00180E  0E00               	movlw	0
  2413   001810                     u6677:
  2414   001810  2EE8               	decfsz	wreg,f,c
  2415   001812  D7FE               	bra	u6677
  2416   001814  2E1C               	decfsz	??_welcome_splash^0,f,c
  2417   001816  D7FC               	bra	u6677
  2418   001818  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2419   00181A  D7FA               	bra	u6677
  2420   00181C  D000               	nop2	
  2421   00181E                     
  2422                           ;OBCII_PIC18F46K22.c: 282:     UART1_SendString("ATE0\r");
  2423   00181E  0EA6               	movlw	low STR_1
  2424   001820  6E04               	movwf	UART1_SendString@string^0,c
  2425   001822  0EFF               	movlw	high STR_1
  2426   001824  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2427   001826  EC39  F018         	call	_UART1_SendString	;wreg free
  2428   00182A                     
  2429                           ;OBCII_PIC18F46K22.c: 283:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2430   00182A  0E02               	movlw	2
  2431   00182C  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2432   00182E  0E04               	movlw	4
  2433   001830  6E1C               	movwf	??_welcome_splash^0,c
  2434   001832  0EBA               	movlw	186
  2435   001834                     u6687:
  2436   001834  2EE8               	decfsz	wreg,f,c
  2437   001836  D7FE               	bra	u6687
  2438   001838  2E1C               	decfsz	??_welcome_splash^0,f,c
  2439   00183A  D7FC               	bra	u6687
  2440   00183C  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2441   00183E  D7FA               	bra	u6687
  2442   001840  D000               	nop2	
  2443   001842  0012               	return		;funcret
  2444   001844                     __end_of_welcome_splash:
  2445                           	callstack 0
  2446                           
  2447 ;; *************** function _tmr1_init *****************
  2448 ;; Defined at:
  2449 ;;		line 206 in file "OBCII_PIC18F46K22.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		None
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;Total ram usage:        0 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; Hardware stack levels required when called: 1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_welcome_splash
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text2
  2478   0033A4                     __ptext2:
  2479                           	callstack 0
  2480   0033A4                     _tmr1_init:
  2481                           	callstack 28
  2482   0033A4                     
  2483                           ;OBCII_PIC18F46K22.c: 208:     T1CONbits.T1CKPS1 = 1;
  2484   0033A4  8ACD               	bsf	205,5,c	;volatile
  2485                           
  2486                           ;OBCII_PIC18F46K22.c: 209:     T1CONbits.T1CKPS0 = 1;
  2487   0033A6  88CD               	bsf	205,4,c	;volatile
  2488                           
  2489                           ;OBCII_PIC18F46K22.c: 210:     T1CONbits.T1OSCEN = 0;
  2490   0033A8  96CD               	bcf	205,3,c	;volatile
  2491                           
  2492                           ;OBCII_PIC18F46K22.c: 211:     T1CONbits.T1SYNC = 1;
  2493   0033AA  84CD               	bsf	205,2,c	;volatile
  2494                           
  2495                           ;OBCII_PIC18F46K22.c: 212:     T1CONbits.TMR1CS1 = 0;
  2496   0033AC  9ECD               	bcf	205,7,c	;volatile
  2497                           
  2498                           ;OBCII_PIC18F46K22.c: 213:     T1CONbits.TMR1CS0 = 0;
  2499   0033AE  9CCD               	bcf	205,6,c	;volatile
  2500                           
  2501                           ;OBCII_PIC18F46K22.c: 214:     T1CONbits.TMR1ON = 1;
  2502   0033B0  80CD               	bsf	205,0,c	;volatile
  2503   0033B2  0012               	return		;funcret
  2504   0033B4                     __end_of_tmr1_init:
  2505                           	callstack 0
  2506                           
  2507 ;; *************** function _ccp1_init *****************
  2508 ;; Defined at:
  2509 ;;		line 193 in file "OBCII_PIC18F46K22.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;Total ram usage:        0 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_welcome_splash
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text3
  2538   003392                     __ptext3:
  2539                           	callstack 0
  2540   003392                     _ccp1_init:
  2541                           	callstack 28
  2542   003392                     
  2543                           ;OBCII_PIC18F46K22.c: 194:     CCP1CONbits.CCP1M3 = 1;
  2544   003392  86BD               	bsf	189,3,c	;volatile
  2545                           
  2546                           ;OBCII_PIC18F46K22.c: 195:     CCP1CONbits.CCP1M2 = 0;
  2547   003394  94BD               	bcf	189,2,c	;volatile
  2548                           
  2549                           ;OBCII_PIC18F46K22.c: 196:     CCP1CONbits.CCP1M1 = 1;
  2550   003396  82BD               	bsf	189,1,c	;volatile
  2551                           
  2552                           ;OBCII_PIC18F46K22.c: 197:     CCP1CONbits.CCP1M0 = 1;
  2553   003398  80BD               	bsf	189,0,c	;volatile
  2554   00339A                     
  2555                           ;OBCII_PIC18F46K22.c: 201:     CCPR1H = 195;
  2556   00339A  0EC3               	movlw	195
  2557   00339C  6EBF               	movwf	191,c	;volatile
  2558                           
  2559                           ;OBCII_PIC18F46K22.c: 202:     CCPR1L = 80;
  2560   00339E  0E50               	movlw	80
  2561   0033A0  6EBE               	movwf	190,c	;volatile
  2562   0033A2  0012               	return		;funcret
  2563   0033A4                     __end_of_ccp1_init:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _LCD_write_variable *****************
  2567 ;; Defined at:
  2568 ;;		line 392 in file "LCD.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  variable        4   16[COMRAM] long 
  2571 ;;  left_offset     1   20[COMRAM] unsigned char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  i               1   21[COMRAM] unsigned char 
  2574 ;;  temp_variabl    4   23[COMRAM] long 
  2575 ;;  digits          1   22[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2585 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;Total ram usage:       11 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 3
  2592 ;; This function calls:
  2593 ;;		_LCD_write_data
  2594 ;;		___aldiv
  2595 ;;		___almod
  2596 ;;		___lmul
  2597 ;; This function is called by:
  2598 ;;		_welcome_splash
  2599 ;;		_LCD_write_float
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text4
  2604   001844                     __ptext4:
  2605                           	callstack 0
  2606   001844                     _LCD_write_variable:
  2607                           	callstack 26
  2608   001844                     
  2609                           ;LCD.c: 394:     int32_t temp_variable;;LCD.c: 395:     uint8_t digits = 0;
  2610   001844  6A17               	clrf	LCD_write_variable@digits^0,c
  2611   001846                     
  2612                           ;LCD.c: 398:     if(variable < 0) variable *= -1;
  2613   001846  BE14               	btfsc	(LCD_write_variable@variable+3)^0,7,c
  2614   001848  EF2A  F00C         	goto	u4690
  2615   00184C  EF28  F00C         	goto	u4691
  2616   001850                     u4691:
  2617   001850  EF44  F00C         	goto	l4534
  2618   001854                     u4690:
  2619   001854  C011  F003         	movff	LCD_write_variable@variable,___lmul@multiplier
  2620   001858  C012  F004         	movff	LCD_write_variable@variable+1,___lmul@multiplier+1
  2621   00185C  C013  F005         	movff	LCD_write_variable@variable+2,___lmul@multiplier+2
  2622   001860  C014  F006         	movff	LCD_write_variable@variable+3,___lmul@multiplier+3
  2623   001864  0EFF               	movlw	255
  2624   001866  6E07               	movwf	___lmul@multiplicand^0,c
  2625   001868  0EFF               	movlw	255
  2626   00186A  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  2627   00186C  0EFF               	movlw	255
  2628   00186E  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  2629   001870  0EFF               	movlw	255
  2630   001872  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  2631   001874  EC0B  F017         	call	___lmul	;wreg free
  2632   001878  C003  F011         	movff	?___lmul,LCD_write_variable@variable
  2633   00187C  C004  F012         	movff	?___lmul+1,LCD_write_variable@variable+1
  2634   001880  C005  F013         	movff	?___lmul+2,LCD_write_variable@variable+2
  2635   001884  C006  F014         	movff	?___lmul+3,LCD_write_variable@variable+3
  2636   001888                     l4534:
  2637                           
  2638                           ;LCD.c: 401:     temp_variable = variable;
  2639   001888  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2640   00188C  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2641   001890  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2642   001894  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2643   001898                     l4536:
  2644                           
  2645                           ;LCD.c: 403:         digits++;
  2646   001898  2A17               	incf	LCD_write_variable@digits^0,f,c
  2647   00189A                     
  2648                           ;LCD.c: 404:         if(temp_variable < 10) break;
  2649   00189A  BE1B               	btfsc	(LCD_write_variable@temp_variable+3)^0,7,c
  2650   00189C  EF5D  F00C         	goto	u4700
  2651   0018A0  501B               	movf	(LCD_write_variable@temp_variable+3)^0,w,c
  2652   0018A2  101A               	iorwf	(LCD_write_variable@temp_variable+2)^0,w,c
  2653   0018A4  1019               	iorwf	(LCD_write_variable@temp_variable+1)^0,w,c
  2654   0018A6  E107               	bnz	u4701
  2655   0018A8  0E0A               	movlw	10
  2656   0018AA  5C18               	subwf	LCD_write_variable@temp_variable^0,w,c
  2657   0018AC  B0D8               	btfsc	status,0,c
  2658   0018AE  EF5B  F00C         	goto	u4701
  2659   0018B2  EF5D  F00C         	goto	u4700
  2660   0018B6                     u4701:
  2661   0018B6  EF5F  F00C         	goto	l4542
  2662   0018BA                     u4700:
  2663   0018BA  EF7B  F00C         	goto	l4544
  2664   0018BE                     l4542:
  2665                           
  2666                           ;LCD.c: 405:         temp_variable /= 10;
  2667   0018BE  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2668   0018C2  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2669   0018C6  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2670   0018CA  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2671   0018CE  0E0A               	movlw	10
  2672   0018D0  6E07               	movwf	___aldiv@divisor^0,c
  2673   0018D2  0E00               	movlw	0
  2674   0018D4  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2675   0018D6  0E00               	movlw	0
  2676   0018D8  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2677   0018DA  0E00               	movlw	0
  2678   0018DC  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2679   0018DE  EC16  F00E         	call	___aldiv	;wreg free
  2680   0018E2  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2681   0018E6  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2682   0018EA  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2683   0018EE  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2684   0018F2  EF4C  F00C         	goto	l4536
  2685   0018F6                     l4544:
  2686                           
  2687                           ;LCD.c: 410:         if(left_offset <= digits) break;
  2688   0018F6  5015               	movf	LCD_write_variable@left_offset^0,w,c
  2689   0018F8  5C17               	subwf	LCD_write_variable@digits^0,w,c
  2690   0018FA  A0D8               	btfss	status,0,c
  2691   0018FC  EF82  F00C         	goto	u4711
  2692   001900  EF84  F00C         	goto	u4710
  2693   001904                     u4711:
  2694   001904  EF86  F00C         	goto	l4548
  2695   001908                     u4710:
  2696   001908  EF8C  F00C         	goto	l463
  2697   00190C                     l4548:
  2698                           
  2699                           ;LCD.c: 411:         LCD_write_data(' ');
  2700   00190C  0E20               	movlw	32
  2701   00190E  EC9D  F00F         	call	_LCD_write_data
  2702   001912                     
  2703                           ;LCD.c: 412:         left_offset--;
  2704   001912  0615               	decf	LCD_write_variable@left_offset^0,f,c
  2705   001914  EF7B  F00C         	goto	l4544
  2706   001918                     l463:
  2707                           
  2708                           ;LCD.c: 417:         temp_variable = variable;
  2709   001918  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2710   00191C  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2711   001920  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2712   001924  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2713   001928                     
  2714                           ;LCD.c: 418:         for(uint8_t i = 1 ; i < digits ; i++){
  2715   001928  0E01               	movlw	1
  2716   00192A  6E16               	movwf	LCD_write_variable@i^0,c
  2717   00192C  EFB3  F00C         	goto	l4558
  2718   001930                     l4554:
  2719                           
  2720                           ;LCD.c: 419:             temp_variable /= 10;
  2721   001930  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2722   001934  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2723   001938  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2724   00193C  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2725   001940  0E0A               	movlw	10
  2726   001942  6E07               	movwf	___aldiv@divisor^0,c
  2727   001944  0E00               	movlw	0
  2728   001946  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2729   001948  0E00               	movlw	0
  2730   00194A  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2731   00194C  0E00               	movlw	0
  2732   00194E  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2733   001950  EC16  F00E         	call	___aldiv	;wreg free
  2734   001954  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2735   001958  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2736   00195C  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2737   001960  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2738   001964                     
  2739                           ;LCD.c: 420:         }
  2740   001964  2A16               	incf	LCD_write_variable@i^0,f,c
  2741   001966                     l4558:
  2742   001966  5017               	movf	LCD_write_variable@digits^0,w,c
  2743   001968  5C16               	subwf	LCD_write_variable@i^0,w,c
  2744   00196A  A0D8               	btfss	status,0,c
  2745   00196C  EFBA  F00C         	goto	u4721
  2746   001970  EFBC  F00C         	goto	u4720
  2747   001974                     u4721:
  2748   001974  EF98  F00C         	goto	l4554
  2749   001978                     u4720:
  2750   001978                     
  2751                           ;LCD.c: 421:         LCD_write_data( (temp_variable%10) + '0' );
  2752   001978  C018  F003         	movff	LCD_write_variable@temp_variable,___almod@dividend
  2753   00197C  C019  F004         	movff	LCD_write_variable@temp_variable+1,___almod@dividend+1
  2754   001980  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___almod@dividend+2
  2755   001984  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___almod@dividend+3
  2756   001988  0E0A               	movlw	10
  2757   00198A  6E07               	movwf	___almod@divisor^0,c
  2758   00198C  0E00               	movlw	0
  2759   00198E  6E08               	movwf	(___almod@divisor+1)^0,c
  2760   001990  0E00               	movlw	0
  2761   001992  6E09               	movwf	(___almod@divisor+2)^0,c
  2762   001994  0E00               	movlw	0
  2763   001996  6E0A               	movwf	(___almod@divisor+3)^0,c
  2764   001998  EC99  F010         	call	___almod	;wreg free
  2765   00199C  5003               	movf	?___almod^0,w,c
  2766   00199E  0F30               	addlw	48
  2767   0019A0  EC9D  F00F         	call	_LCD_write_data
  2768   0019A4                     
  2769                           ;LCD.c: 422:         digits --;
  2770   0019A4  0617               	decf	LCD_write_variable@digits^0,f,c
  2771   0019A6                     
  2772                           ;LCD.c: 423:         if(digits == 0) break;
  2773   0019A6  5017               	movf	LCD_write_variable@digits^0,w,c
  2774   0019A8  A4D8               	btfss	status,2,c
  2775   0019AA  EFD9  F00C         	goto	u4731
  2776   0019AE  EFDB  F00C         	goto	u4730
  2777   0019B2                     u4731:
  2778   0019B2  EF8C  F00C         	goto	l463
  2779   0019B6                     u4730:
  2780   0019B6  0012               	return		;funcret
  2781   0019B8                     __end_of_LCD_write_variable:
  2782                           	callstack 0
  2783                           
  2784 ;; *************** function ___lmul *****************
  2785 ;; Defined at:
  2786 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  multiplier      4    2[COMRAM] unsigned long 
  2789 ;;  multiplicand    4    6[COMRAM] unsigned long 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  product         4   10[COMRAM] unsigned long 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  4    2[COMRAM] unsigned long 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2801 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;Total ram usage:       12 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 1
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_LCD_write_variable
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text5
  2816   002E16                     __ptext5:
  2817                           	callstack 0
  2818   002E16                     ___lmul:
  2819                           	callstack 27
  2820   002E16  0E00               	movlw	0
  2821   002E18  6E0B               	movwf	___lmul@product^0,c
  2822   002E1A  0E00               	movlw	0
  2823   002E1C  6E0C               	movwf	(___lmul@product+1)^0,c
  2824   002E1E  0E00               	movlw	0
  2825   002E20  6E0D               	movwf	(___lmul@product+2)^0,c
  2826   002E22  0E00               	movlw	0
  2827   002E24  6E0E               	movwf	(___lmul@product+3)^0,c
  2828   002E26                     l4434:
  2829   002E26  A003               	btfss	___lmul@multiplier^0,0,c
  2830   002E28  EF18  F017         	goto	u4551
  2831   002E2C  EF1A  F017         	goto	u4550
  2832   002E30                     u4551:
  2833   002E30  EF22  F017         	goto	l4438
  2834   002E34                     u4550:
  2835   002E34  5007               	movf	___lmul@multiplicand^0,w,c
  2836   002E36  260B               	addwf	___lmul@product^0,f,c
  2837   002E38  5008               	movf	(___lmul@multiplicand+1)^0,w,c
  2838   002E3A  220C               	addwfc	(___lmul@product+1)^0,f,c
  2839   002E3C  5009               	movf	(___lmul@multiplicand+2)^0,w,c
  2840   002E3E  220D               	addwfc	(___lmul@product+2)^0,f,c
  2841   002E40  500A               	movf	(___lmul@multiplicand+3)^0,w,c
  2842   002E42  220E               	addwfc	(___lmul@product+3)^0,f,c
  2843   002E44                     l4438:
  2844   002E44  90D8               	bcf	status,0,c
  2845   002E46  3607               	rlcf	___lmul@multiplicand^0,f,c
  2846   002E48  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2847   002E4A  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2848   002E4C  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2849   002E4E  90D8               	bcf	status,0,c
  2850   002E50  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
  2851   002E52  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
  2852   002E54  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
  2853   002E56  3203               	rrcf	___lmul@multiplier^0,f,c
  2854   002E58  5003               	movf	___lmul@multiplier^0,w,c
  2855   002E5A  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
  2856   002E5C  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
  2857   002E5E  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
  2858   002E60  A4D8               	btfss	status,2,c
  2859   002E62  EF35  F017         	goto	u4561
  2860   002E66  EF37  F017         	goto	u4560
  2861   002E6A                     u4561:
  2862   002E6A  EF13  F017         	goto	l4434
  2863   002E6E                     u4560:
  2864   002E6E  C00B  F003         	movff	___lmul@product,?___lmul
  2865   002E72  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  2866   002E76  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  2867   002E7A  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  2868   002E7E  0012               	return		;funcret
  2869   002E80                     __end_of___lmul:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function ___almod *****************
  2873 ;; Defined at:
  2874 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  dividend        4    2[COMRAM] long 
  2877 ;;  divisor         4    6[COMRAM] long 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  sign            1   11[COMRAM] unsigned char 
  2880 ;;  counter         1   10[COMRAM] unsigned char 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  4    2[COMRAM] long 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2890 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;Total ram usage:       10 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; Hardware stack levels required when called: 1
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_LCD_write_variable
  2901 ;;		_LCD_write_float
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text6
  2906   002132                     __ptext6:
  2907                           	callstack 0
  2908   002132                     ___almod:
  2909                           	callstack 27
  2910   002132  6A0C               	clrf	___almod@sign^0,c
  2911   002134  BE06               	btfsc	(___almod@dividend+3)^0,7,c
  2912   002136  EFA1  F010         	goto	u4630
  2913   00213A  EF9F  F010         	goto	u4631
  2914   00213E                     u4631:
  2915   00213E  EFAB  F010         	goto	l4494
  2916   002142                     u4630:
  2917   002142  1E06               	comf	(___almod@dividend+3)^0,f,c
  2918   002144  1E05               	comf	(___almod@dividend+2)^0,f,c
  2919   002146  1E04               	comf	(___almod@dividend+1)^0,f,c
  2920   002148  6C03               	negf	___almod@dividend^0,c
  2921   00214A  0E00               	movlw	0
  2922   00214C  2204               	addwfc	(___almod@dividend+1)^0,f,c
  2923   00214E  2205               	addwfc	(___almod@dividend+2)^0,f,c
  2924   002150  2206               	addwfc	(___almod@dividend+3)^0,f,c
  2925   002152  0E01               	movlw	1
  2926   002154  6E0C               	movwf	___almod@sign^0,c
  2927   002156                     l4494:
  2928   002156  BE0A               	btfsc	(___almod@divisor+3)^0,7,c
  2929   002158  EFB2  F010         	goto	u4640
  2930   00215C  EFB0  F010         	goto	u4641
  2931   002160                     u4641:
  2932   002160  EFBA  F010         	goto	l4498
  2933   002164                     u4640:
  2934   002164  1E0A               	comf	(___almod@divisor+3)^0,f,c
  2935   002166  1E09               	comf	(___almod@divisor+2)^0,f,c
  2936   002168  1E08               	comf	(___almod@divisor+1)^0,f,c
  2937   00216A  6C07               	negf	___almod@divisor^0,c
  2938   00216C  0E00               	movlw	0
  2939   00216E  2208               	addwfc	(___almod@divisor+1)^0,f,c
  2940   002170  2209               	addwfc	(___almod@divisor+2)^0,f,c
  2941   002172  220A               	addwfc	(___almod@divisor+3)^0,f,c
  2942   002174                     l4498:
  2943   002174  5007               	movf	___almod@divisor^0,w,c
  2944   002176  1008               	iorwf	(___almod@divisor+1)^0,w,c
  2945   002178  1009               	iorwf	(___almod@divisor+2)^0,w,c
  2946   00217A  100A               	iorwf	(___almod@divisor+3)^0,w,c
  2947   00217C  B4D8               	btfsc	status,2,c
  2948   00217E  EFC3  F010         	goto	u4651
  2949   002182  EFC5  F010         	goto	u4650
  2950   002186                     u4651:
  2951   002186  EFF5  F010         	goto	l4514
  2952   00218A                     u4650:
  2953   00218A  0E01               	movlw	1
  2954   00218C  6E0B               	movwf	___almod@counter^0,c
  2955   00218E  EFCF  F010         	goto	l4504
  2956   002192                     l4502:
  2957   002192  90D8               	bcf	status,0,c
  2958   002194  3607               	rlcf	___almod@divisor^0,f,c
  2959   002196  3608               	rlcf	(___almod@divisor+1)^0,f,c
  2960   002198  3609               	rlcf	(___almod@divisor+2)^0,f,c
  2961   00219A  360A               	rlcf	(___almod@divisor+3)^0,f,c
  2962   00219C  2A0B               	incf	___almod@counter^0,f,c
  2963   00219E                     l4504:
  2964   00219E  AE0A               	btfss	(___almod@divisor+3)^0,7,c
  2965   0021A0  EFD4  F010         	goto	u4661
  2966   0021A4  EFD6  F010         	goto	u4660
  2967   0021A8                     u4661:
  2968   0021A8  EFC9  F010         	goto	l4502
  2969   0021AC                     u4660:
  2970   0021AC                     l4506:
  2971   0021AC  5007               	movf	___almod@divisor^0,w,c
  2972   0021AE  5C03               	subwf	___almod@dividend^0,w,c
  2973   0021B0  5008               	movf	(___almod@divisor+1)^0,w,c
  2974   0021B2  5804               	subwfb	(___almod@dividend+1)^0,w,c
  2975   0021B4  5009               	movf	(___almod@divisor+2)^0,w,c
  2976   0021B6  5805               	subwfb	(___almod@dividend+2)^0,w,c
  2977   0021B8  500A               	movf	(___almod@divisor+3)^0,w,c
  2978   0021BA  5806               	subwfb	(___almod@dividend+3)^0,w,c
  2979   0021BC  A0D8               	btfss	status,0,c
  2980   0021BE  EFE3  F010         	goto	u4671
  2981   0021C2  EFE5  F010         	goto	u4670
  2982   0021C6                     u4671:
  2983   0021C6  EFED  F010         	goto	l4510
  2984   0021CA                     u4670:
  2985   0021CA  5007               	movf	___almod@divisor^0,w,c
  2986   0021CC  5E03               	subwf	___almod@dividend^0,f,c
  2987   0021CE  5008               	movf	(___almod@divisor+1)^0,w,c
  2988   0021D0  5A04               	subwfb	(___almod@dividend+1)^0,f,c
  2989   0021D2  5009               	movf	(___almod@divisor+2)^0,w,c
  2990   0021D4  5A05               	subwfb	(___almod@dividend+2)^0,f,c
  2991   0021D6  500A               	movf	(___almod@divisor+3)^0,w,c
  2992   0021D8  5A06               	subwfb	(___almod@dividend+3)^0,f,c
  2993   0021DA                     l4510:
  2994   0021DA  90D8               	bcf	status,0,c
  2995   0021DC  320A               	rrcf	(___almod@divisor+3)^0,f,c
  2996   0021DE  3209               	rrcf	(___almod@divisor+2)^0,f,c
  2997   0021E0  3208               	rrcf	(___almod@divisor+1)^0,f,c
  2998   0021E2  3207               	rrcf	___almod@divisor^0,f,c
  2999   0021E4  2E0B               	decfsz	___almod@counter^0,f,c
  3000   0021E6  EFD6  F010         	goto	l4506
  3001   0021EA                     l4514:
  3002   0021EA  500C               	movf	___almod@sign^0,w,c
  3003   0021EC  B4D8               	btfsc	status,2,c
  3004   0021EE  EFFB  F010         	goto	u4681
  3005   0021F2  EFFD  F010         	goto	u4680
  3006   0021F6                     u4681:
  3007   0021F6  EF05  F011         	goto	l4518
  3008   0021FA                     u4680:
  3009   0021FA  1E06               	comf	(___almod@dividend+3)^0,f,c
  3010   0021FC  1E05               	comf	(___almod@dividend+2)^0,f,c
  3011   0021FE  1E04               	comf	(___almod@dividend+1)^0,f,c
  3012   002200  6C03               	negf	___almod@dividend^0,c
  3013   002202  0E00               	movlw	0
  3014   002204  2204               	addwfc	(___almod@dividend+1)^0,f,c
  3015   002206  2205               	addwfc	(___almod@dividend+2)^0,f,c
  3016   002208  2206               	addwfc	(___almod@dividend+3)^0,f,c
  3017   00220A                     l4518:
  3018   00220A  C003  F003         	movff	___almod@dividend,?___almod
  3019   00220E  C004  F004         	movff	___almod@dividend+1,?___almod+1
  3020   002212  C005  F005         	movff	___almod@dividend+2,?___almod+2
  3021   002216  C006  F006         	movff	___almod@dividend+3,?___almod+3
  3022   00221A  0012               	return		;funcret
  3023   00221C                     __end_of___almod:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function ___aldiv *****************
  3027 ;; Defined at:
  3028 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  dividend        4    2[COMRAM] long 
  3031 ;;  divisor         4    6[COMRAM] long 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  quotient        4   12[COMRAM] long 
  3034 ;;  sign            1   11[COMRAM] unsigned char 
  3035 ;;  counter         1   10[COMRAM] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  4    2[COMRAM] long 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3045 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;Total ram usage:       14 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; Hardware stack levels required when called: 1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_LCD_write_variable
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text7
  3060   001C2C                     __ptext7:
  3061                           	callstack 0
  3062   001C2C                     ___aldiv:
  3063                           	callstack 27
  3064   001C2C  6A0C               	clrf	___aldiv@sign^0,c
  3065   001C2E  BE0A               	btfsc	(___aldiv@divisor+3)^0,7,c
  3066   001C30  EF1E  F00E         	goto	u4570
  3067   001C34  EF1C  F00E         	goto	u4571
  3068   001C38                     u4571:
  3069   001C38  EF28  F00E         	goto	l4450
  3070   001C3C                     u4570:
  3071   001C3C  1E0A               	comf	(___aldiv@divisor+3)^0,f,c
  3072   001C3E  1E09               	comf	(___aldiv@divisor+2)^0,f,c
  3073   001C40  1E08               	comf	(___aldiv@divisor+1)^0,f,c
  3074   001C42  6C07               	negf	___aldiv@divisor^0,c
  3075   001C44  0E00               	movlw	0
  3076   001C46  2208               	addwfc	(___aldiv@divisor+1)^0,f,c
  3077   001C48  2209               	addwfc	(___aldiv@divisor+2)^0,f,c
  3078   001C4A  220A               	addwfc	(___aldiv@divisor+3)^0,f,c
  3079   001C4C  0E01               	movlw	1
  3080   001C4E  6E0C               	movwf	___aldiv@sign^0,c
  3081   001C50                     l4450:
  3082   001C50  BE06               	btfsc	(___aldiv@dividend+3)^0,7,c
  3083   001C52  EF2F  F00E         	goto	u4580
  3084   001C56  EF2D  F00E         	goto	u4581
  3085   001C5A                     u4581:
  3086   001C5A  EF39  F00E         	goto	l4456
  3087   001C5E                     u4580:
  3088   001C5E  1E06               	comf	(___aldiv@dividend+3)^0,f,c
  3089   001C60  1E05               	comf	(___aldiv@dividend+2)^0,f,c
  3090   001C62  1E04               	comf	(___aldiv@dividend+1)^0,f,c
  3091   001C64  6C03               	negf	___aldiv@dividend^0,c
  3092   001C66  0E00               	movlw	0
  3093   001C68  2204               	addwfc	(___aldiv@dividend+1)^0,f,c
  3094   001C6A  2205               	addwfc	(___aldiv@dividend+2)^0,f,c
  3095   001C6C  2206               	addwfc	(___aldiv@dividend+3)^0,f,c
  3096   001C6E  0E01               	movlw	1
  3097   001C70  1A0C               	xorwf	___aldiv@sign^0,f,c
  3098   001C72                     l4456:
  3099   001C72  0E00               	movlw	0
  3100   001C74  6E0D               	movwf	___aldiv@quotient^0,c
  3101   001C76  0E00               	movlw	0
  3102   001C78  6E0E               	movwf	(___aldiv@quotient+1)^0,c
  3103   001C7A  0E00               	movlw	0
  3104   001C7C  6E0F               	movwf	(___aldiv@quotient+2)^0,c
  3105   001C7E  0E00               	movlw	0
  3106   001C80  6E10               	movwf	(___aldiv@quotient+3)^0,c
  3107   001C82  5007               	movf	___aldiv@divisor^0,w,c
  3108   001C84  1008               	iorwf	(___aldiv@divisor+1)^0,w,c
  3109   001C86  1009               	iorwf	(___aldiv@divisor+2)^0,w,c
  3110   001C88  100A               	iorwf	(___aldiv@divisor+3)^0,w,c
  3111   001C8A  B4D8               	btfsc	status,2,c
  3112   001C8C  EF4A  F00E         	goto	u4591
  3113   001C90  EF4C  F00E         	goto	u4590
  3114   001C94                     u4591:
  3115   001C94  EF82  F00E         	goto	l4478
  3116   001C98                     u4590:
  3117   001C98  0E01               	movlw	1
  3118   001C9A  6E0B               	movwf	___aldiv@counter^0,c
  3119   001C9C  EF56  F00E         	goto	l4464
  3120   001CA0                     l4462:
  3121   001CA0  90D8               	bcf	status,0,c
  3122   001CA2  3607               	rlcf	___aldiv@divisor^0,f,c
  3123   001CA4  3608               	rlcf	(___aldiv@divisor+1)^0,f,c
  3124   001CA6  3609               	rlcf	(___aldiv@divisor+2)^0,f,c
  3125   001CA8  360A               	rlcf	(___aldiv@divisor+3)^0,f,c
  3126   001CAA  2A0B               	incf	___aldiv@counter^0,f,c
  3127   001CAC                     l4464:
  3128   001CAC  AE0A               	btfss	(___aldiv@divisor+3)^0,7,c
  3129   001CAE  EF5B  F00E         	goto	u4601
  3130   001CB2  EF5D  F00E         	goto	u4600
  3131   001CB6                     u4601:
  3132   001CB6  EF50  F00E         	goto	l4462
  3133   001CBA                     u4600:
  3134   001CBA                     l4466:
  3135   001CBA  90D8               	bcf	status,0,c
  3136   001CBC  360D               	rlcf	___aldiv@quotient^0,f,c
  3137   001CBE  360E               	rlcf	(___aldiv@quotient+1)^0,f,c
  3138   001CC0  360F               	rlcf	(___aldiv@quotient+2)^0,f,c
  3139   001CC2  3610               	rlcf	(___aldiv@quotient+3)^0,f,c
  3140   001CC4  5007               	movf	___aldiv@divisor^0,w,c
  3141   001CC6  5C03               	subwf	___aldiv@dividend^0,w,c
  3142   001CC8  5008               	movf	(___aldiv@divisor+1)^0,w,c
  3143   001CCA  5804               	subwfb	(___aldiv@dividend+1)^0,w,c
  3144   001CCC  5009               	movf	(___aldiv@divisor+2)^0,w,c
  3145   001CCE  5805               	subwfb	(___aldiv@dividend+2)^0,w,c
  3146   001CD0  500A               	movf	(___aldiv@divisor+3)^0,w,c
  3147   001CD2  5806               	subwfb	(___aldiv@dividend+3)^0,w,c
  3148   001CD4  A0D8               	btfss	status,0,c
  3149   001CD6  EF6F  F00E         	goto	u4611
  3150   001CDA  EF71  F00E         	goto	u4610
  3151   001CDE                     u4611:
  3152   001CDE  EF7A  F00E         	goto	l4474
  3153   001CE2                     u4610:
  3154   001CE2  5007               	movf	___aldiv@divisor^0,w,c
  3155   001CE4  5E03               	subwf	___aldiv@dividend^0,f,c
  3156   001CE6  5008               	movf	(___aldiv@divisor+1)^0,w,c
  3157   001CE8  5A04               	subwfb	(___aldiv@dividend+1)^0,f,c
  3158   001CEA  5009               	movf	(___aldiv@divisor+2)^0,w,c
  3159   001CEC  5A05               	subwfb	(___aldiv@dividend+2)^0,f,c
  3160   001CEE  500A               	movf	(___aldiv@divisor+3)^0,w,c
  3161   001CF0  5A06               	subwfb	(___aldiv@dividend+3)^0,f,c
  3162   001CF2  800D               	bsf	___aldiv@quotient^0,0,c
  3163   001CF4                     l4474:
  3164   001CF4  90D8               	bcf	status,0,c
  3165   001CF6  320A               	rrcf	(___aldiv@divisor+3)^0,f,c
  3166   001CF8  3209               	rrcf	(___aldiv@divisor+2)^0,f,c
  3167   001CFA  3208               	rrcf	(___aldiv@divisor+1)^0,f,c
  3168   001CFC  3207               	rrcf	___aldiv@divisor^0,f,c
  3169   001CFE  2E0B               	decfsz	___aldiv@counter^0,f,c
  3170   001D00  EF5D  F00E         	goto	l4466
  3171   001D04                     l4478:
  3172   001D04  500C               	movf	___aldiv@sign^0,w,c
  3173   001D06  B4D8               	btfsc	status,2,c
  3174   001D08  EF88  F00E         	goto	u4621
  3175   001D0C  EF8A  F00E         	goto	u4620
  3176   001D10                     u4621:
  3177   001D10  EF92  F00E         	goto	l4482
  3178   001D14                     u4620:
  3179   001D14  1E10               	comf	(___aldiv@quotient+3)^0,f,c
  3180   001D16  1E0F               	comf	(___aldiv@quotient+2)^0,f,c
  3181   001D18  1E0E               	comf	(___aldiv@quotient+1)^0,f,c
  3182   001D1A  6C0D               	negf	___aldiv@quotient^0,c
  3183   001D1C  0E00               	movlw	0
  3184   001D1E  220E               	addwfc	(___aldiv@quotient+1)^0,f,c
  3185   001D20  220F               	addwfc	(___aldiv@quotient+2)^0,f,c
  3186   001D22  2210               	addwfc	(___aldiv@quotient+3)^0,f,c
  3187   001D24                     l4482:
  3188   001D24  C00D  F003         	movff	___aldiv@quotient,?___aldiv
  3189   001D28  C00E  F004         	movff	___aldiv@quotient+1,?___aldiv+1
  3190   001D2C  C00F  F005         	movff	___aldiv@quotient+2,?___aldiv+2
  3191   001D30  C010  F006         	movff	___aldiv@quotient+3,?___aldiv+3
  3192   001D34  0012               	return		;funcret
  3193   001D36                     __end_of___aldiv:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _main_menu *****************
  3197 ;; Defined at:
  3198 ;;		line 312 in file "OBCII_PIC18F46K22.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;Total ram usage:        2 bytes
  3217 ;; Hardware stack levels used: 1
  3218 ;; Hardware stack levels required when called: 11
  3219 ;; This function calls:
  3220 ;;		_LCD_clear
  3221 ;;		_LCD_configure_cursor_blink
  3222 ;;		_LCD_cursor_set
  3223 ;;		_clear_diagnostic_codes
  3224 ;;		_diagnostic_trouble_codes
  3225 ;;		_display_mm
  3226 ;;		_display_system_info
  3227 ;;		_live_reading_mode
  3228 ;;		_readADC
  3229 ;; This function is called by:
  3230 ;;		_main
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text8
  3235   00101E                     __ptext8:
  3236                           	callstack 0
  3237   00101E                     _main_menu:
  3238                           	callstack 19
  3239   00101E                     
  3240                           ;OBCII_PIC18F46K22.c: 314:     LCD_clear();
  3241   00101E  EC97  F019         	call	_LCD_clear	;wreg free
  3242   001022                     
  3243                           ;OBCII_PIC18F46K22.c: 315:     display_mm();
  3244   001022  EC57  F019         	call	_display_mm	;wreg free
  3245   001026                     l5714:
  3246                           
  3247                           ;OBCII_PIC18F46K22.c: 318:         display_mm();
  3248   001026  EC57  F019         	call	_display_mm	;wreg free
  3249                           
  3250                           ;OBCII_PIC18F46K22.c: 319:         result = readADC();
  3251   00102A  EC23  F019         	call	_readADC	;wreg free
  3252   00102E  C003  F05A         	movff	?_readADC,_result
  3253   001032  C004  F05B         	movff	?_readADC+1,_result+1
  3254   001036                     
  3255                           ;OBCII_PIC18F46K22.c: 320:         if(result >= 0 && result <= 255){
  3256   001036  045B               	decf	(_result+1)^0,w,c
  3257   001038  B0D8               	btfsc	status,0,c
  3258   00103A  EF21  F008         	goto	u6491
  3259   00103E  EF23  F008         	goto	u6490
  3260   001042                     u6491:
  3261   001042  EF2D  F008         	goto	l5722
  3262   001046                     u6490:
  3263   001046                     
  3264                           ;OBCII_PIC18F46K22.c: 321:             menu_sel = 0;
  3265   001046  0E00               	movlw	0
  3266   001048  0100               	movlb	0	; () banked
  3267   00104A  6FF4               	movwf	(_menu_sel+1)& (0+255),b
  3268   00104C  0E00               	movlw	0
  3269   00104E  6FF3               	movwf	_menu_sel& (0+255),b
  3270   001050                     
  3271                           ; BSR set to: 0
  3272                           ;OBCII_PIC18F46K22.c: 322:             LCD_cursor_set(2,1);
  3273   001050  0E01               	movlw	1
  3274   001052  6E06               	movwf	LCD_cursor_set@column^0,c
  3275   001054  0E02               	movlw	2
  3276   001056  ECDA  F017         	call	_LCD_cursor_set
  3277   00105A                     l5722:
  3278                           
  3279                           ;OBCII_PIC18F46K22.c: 325:         if(result >= 256 && result <=511){
  3280   00105A  045B               	decf	(_result+1)^0,w,c
  3281   00105C  A0D8               	btfss	status,0,c
  3282   00105E  EF33  F008         	goto	u6501
  3283   001062  EF35  F008         	goto	u6500
  3284   001066                     u6501:
  3285   001066  EF48  F008         	goto	l5730
  3286   00106A                     u6500:
  3287   00106A  0E02               	movlw	2
  3288   00106C  5C5B               	subwf	(_result+1)^0,w,c
  3289   00106E  B0D8               	btfsc	status,0,c
  3290   001070  EF3C  F008         	goto	u6511
  3291   001074  EF3E  F008         	goto	u6510
  3292   001078                     u6511:
  3293   001078  EF48  F008         	goto	l5730
  3294   00107C                     u6510:
  3295   00107C                     
  3296                           ;OBCII_PIC18F46K22.c: 326:             menu_sel = 1;
  3297   00107C  0E00               	movlw	0
  3298   00107E  0100               	movlb	0	; () banked
  3299   001080  6FF4               	movwf	(_menu_sel+1)& (0+255),b
  3300   001082  0E01               	movlw	1
  3301   001084  6FF3               	movwf	_menu_sel& (0+255),b
  3302   001086                     
  3303                           ; BSR set to: 0
  3304                           ;OBCII_PIC18F46K22.c: 327:             LCD_cursor_set(2,5);
  3305   001086  0E05               	movlw	5
  3306   001088  6E06               	movwf	LCD_cursor_set@column^0,c
  3307   00108A  0E02               	movlw	2
  3308   00108C  ECDA  F017         	call	_LCD_cursor_set
  3309   001090                     l5730:
  3310                           
  3311                           ;OBCII_PIC18F46K22.c: 330:         if(result >=512 && result <=767){
  3312   001090  0E02               	movlw	2
  3313   001092  5C5B               	subwf	(_result+1)^0,w,c
  3314   001094  A0D8               	btfss	status,0,c
  3315   001096  EF4F  F008         	goto	u6521
  3316   00109A  EF51  F008         	goto	u6520
  3317   00109E                     u6521:
  3318   00109E  EF64  F008         	goto	l5738
  3319   0010A2                     u6520:
  3320   0010A2  0E03               	movlw	3
  3321   0010A4  5C5B               	subwf	(_result+1)^0,w,c
  3322   0010A6  B0D8               	btfsc	status,0,c
  3323   0010A8  EF58  F008         	goto	u6531
  3324   0010AC  EF5A  F008         	goto	u6530
  3325   0010B0                     u6531:
  3326   0010B0  EF64  F008         	goto	l5738
  3327   0010B4                     u6530:
  3328   0010B4                     
  3329                           ;OBCII_PIC18F46K22.c: 331:             menu_sel = 2;
  3330   0010B4  0E00               	movlw	0
  3331   0010B6  0100               	movlb	0	; () banked
  3332   0010B8  6FF4               	movwf	(_menu_sel+1)& (0+255),b
  3333   0010BA  0E02               	movlw	2
  3334   0010BC  6FF3               	movwf	_menu_sel& (0+255),b
  3335   0010BE                     
  3336                           ; BSR set to: 0
  3337                           ;OBCII_PIC18F46K22.c: 332:             LCD_cursor_set(2,9);
  3338   0010BE  0E09               	movlw	9
  3339   0010C0  6E06               	movwf	LCD_cursor_set@column^0,c
  3340   0010C2  0E02               	movlw	2
  3341   0010C4  ECDA  F017         	call	_LCD_cursor_set
  3342   0010C8                     l5738:
  3343                           
  3344                           ;OBCII_PIC18F46K22.c: 334:         if(result >= 768 && result <=1023 ){
  3345   0010C8  0E03               	movlw	3
  3346   0010CA  5C5B               	subwf	(_result+1)^0,w,c
  3347   0010CC  A0D8               	btfss	status,0,c
  3348   0010CE  EF6B  F008         	goto	u6541
  3349   0010D2  EF6D  F008         	goto	u6540
  3350   0010D6                     u6541:
  3351   0010D6  EF80  F008         	goto	l5746
  3352   0010DA                     u6540:
  3353   0010DA  0E04               	movlw	4
  3354   0010DC  5C5B               	subwf	(_result+1)^0,w,c
  3355   0010DE  B0D8               	btfsc	status,0,c
  3356   0010E0  EF74  F008         	goto	u6551
  3357   0010E4  EF76  F008         	goto	u6550
  3358   0010E8                     u6551:
  3359   0010E8  EF80  F008         	goto	l5746
  3360   0010EC                     u6550:
  3361   0010EC                     
  3362                           ;OBCII_PIC18F46K22.c: 335:             menu_sel = 3;
  3363   0010EC  0E00               	movlw	0
  3364   0010EE  0100               	movlb	0	; () banked
  3365   0010F0  6FF4               	movwf	(_menu_sel+1)& (0+255),b
  3366   0010F2  0E03               	movlw	3
  3367   0010F4  6FF3               	movwf	_menu_sel& (0+255),b
  3368   0010F6                     
  3369                           ; BSR set to: 0
  3370                           ;OBCII_PIC18F46K22.c: 336:             LCD_cursor_set(2,13);
  3371   0010F6  0E0D               	movlw	13
  3372   0010F8  6E06               	movwf	LCD_cursor_set@column^0,c
  3373   0010FA  0E02               	movlw	2
  3374   0010FC  ECDA  F017         	call	_LCD_cursor_set
  3375   001100                     l5746:
  3376                           
  3377                           ;OBCII_PIC18F46K22.c: 338:         LCD_configure_cursor_blink(1);
  3378   001100  0E01               	movlw	1
  3379   001102  EC84  F019         	call	_LCD_configure_cursor_blink
  3380   001106                     
  3381                           ;OBCII_PIC18F46K22.c: 340:         if (PORTBbits.RB4 == 0) {
  3382   001106  B881               	btfsc	129,4,c	;volatile
  3383   001108  EF88  F008         	goto	u6561
  3384   00110C  EF8A  F008         	goto	u6560
  3385   001110                     u6561:
  3386   001110  EF28  F009         	goto	l5820
  3387   001114                     u6560:
  3388   001114                     
  3389                           ;OBCII_PIC18F46K22.c: 341:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3390   001114  0E68               	movlw	104
  3391   001116  0100               	movlb	0	; () banked
  3392   001118  6FA6               	movwf	??_main_menu& (0+255),b
  3393   00111A  0EE4               	movlw	228
  3394   00111C                     u6697:
  3395   00111C  2EE8               	decfsz	wreg,f,c
  3396   00111E  D7FE               	bra	u6697
  3397   001120  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3398   001122  D7FC               	bra	u6697
  3399   001124  0000               	nop	
  3400   001126                     
  3401                           ;OBCII_PIC18F46K22.c: 342:             if (PORTBbits.RB4 == 0) {
  3402   001126  B881               	btfsc	129,4,c	;volatile
  3403   001128  EF98  F008         	goto	u6571
  3404   00112C  EF9A  F008         	goto	u6570
  3405   001130                     u6571:
  3406   001130  EF28  F009         	goto	l5820
  3407   001134                     u6570:
  3408   001134                     
  3409                           ;OBCII_PIC18F46K22.c: 343:                 LCD_configure_cursor_blink(0);
  3410   001134  0E00               	movlw	0
  3411   001136  EC84  F019         	call	_LCD_configure_cursor_blink
  3412                           
  3413                           ;OBCII_PIC18F46K22.c: 344:                 LCD_clear();
  3414   00113A  EC97  F019         	call	_LCD_clear	;wreg free
  3415                           
  3416                           ;OBCII_PIC18F46K22.c: 347:                 switch (menu_sel) {
  3417   00113E  EF09  F009         	goto	l5818
  3418   001142                     l5756:
  3419                           
  3420                           ;OBCII_PIC18F46K22.c: 350:                             live_reading_mode();
  3421   001142  ECE2  F019         	call	_live_reading_mode	;wreg free
  3422   001146                     
  3423                           ;OBCII_PIC18F46K22.c: 352:                             if (PORTCbits.RC5 == 0) {
  3424   001146  BA82               	btfsc	130,5,c	;volatile
  3425   001148  EFA8  F008         	goto	u6581
  3426   00114C  EFAA  F008         	goto	u6580
  3427   001150                     u6581:
  3428   001150  EFA1  F008         	goto	l5756
  3429   001154                     u6580:
  3430   001154                     
  3431                           ;OBCII_PIC18F46K22.c: 353:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  3432   001154  0E68               	movlw	104
  3433   001156  0100               	movlb	0	; () banked
  3434   001158  6FA6               	movwf	??_main_menu& (0+255),b
  3435   00115A  0EE4               	movlw	228
  3436   00115C                     u6707:
  3437   00115C  2EE8               	decfsz	wreg,f,c
  3438   00115E  D7FE               	bra	u6707
  3439   001160  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3440   001162  D7FC               	bra	u6707
  3441   001164  0000               	nop	
  3442   001166                     
  3443                           ;OBCII_PIC18F46K22.c: 354:                                 if (PORTCbits.RC5 == 0) {
  3444   001166  BA82               	btfsc	130,5,c	;volatile
  3445   001168  EFB8  F008         	goto	u6591
  3446   00116C  EFBA  F008         	goto	u6590
  3447   001170                     u6591:
  3448   001170  EFA1  F008         	goto	l5756
  3449   001174                     u6590:
  3450   001174                     l5764:
  3451                           
  3452                           ;OBCII_PIC18F46K22.c: 355:                                     LCD_clear();
  3453   001174  EC97  F019         	call	_LCD_clear	;wreg free
  3454   001178                     
  3455                           ;OBCII_PIC18F46K22.c: 356:                                     display_mm();
  3456   001178  EC57  F019         	call	_display_mm	;wreg free
  3457   00117C                     l5768:
  3458                           
  3459                           ;OBCII_PIC18F46K22.c: 357:                                     menu_sel = -1;
  3460   00117C  0100               	movlb	0	; () banked
  3461   00117E  69F3               	setf	_menu_sel& (0+255),b
  3462   001180  69F4               	setf	(_menu_sel+1)& (0+255),b
  3463                           
  3464                           ;OBCII_PIC18F46K22.c: 358:                                     break;
  3465   001182  EF28  F009         	goto	l5820
  3466   001186                     l5770:
  3467                           
  3468                           ;OBCII_PIC18F46K22.c: 367:                             diagnostic_trouble_codes();
  3469   001186  ECD8  F004         	call	_diagnostic_trouble_codes	;wreg free
  3470   00118A                     
  3471                           ;OBCII_PIC18F46K22.c: 369:                             if (PORTCbits.RC5 == 0) {
  3472   00118A  BA82               	btfsc	130,5,c	;volatile
  3473   00118C  EFCA  F008         	goto	u6601
  3474   001190  EFCC  F008         	goto	u6600
  3475   001194                     u6601:
  3476   001194  EFC3  F008         	goto	l5770
  3477   001198                     u6600:
  3478   001198                     
  3479                           ;OBCII_PIC18F46K22.c: 370:                                     _delay((unsigned long)((2
      +                          0)*(16000000/4000.0)));
  3480   001198  0E68               	movlw	104
  3481   00119A  0100               	movlb	0	; () banked
  3482   00119C  6FA6               	movwf	??_main_menu& (0+255),b
  3483   00119E  0EE4               	movlw	228
  3484   0011A0                     u6717:
  3485   0011A0  2EE8               	decfsz	wreg,f,c
  3486   0011A2  D7FE               	bra	u6717
  3487   0011A4  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3488   0011A6  D7FC               	bra	u6717
  3489   0011A8  0000               	nop	
  3490   0011AA                     
  3491                           ;OBCII_PIC18F46K22.c: 371:                                 if (PORTCbits.RC5 == 0) {
  3492   0011AA  BA82               	btfsc	130,5,c	;volatile
  3493   0011AC  EFDA  F008         	goto	u6611
  3494   0011B0  EFDC  F008         	goto	u6610
  3495   0011B4                     u6611:
  3496   0011B4  EFC3  F008         	goto	l5770
  3497   0011B8                     u6610:
  3498   0011B8  EFBA  F008         	goto	l5764
  3499   0011BC                     l5784:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;OBCII_PIC18F46K22.c: 383:                                 _delay((unsigned long)((200)*
      +                          (16000000/4000.0)));
  3503   0011BC  0E05               	movlw	5
  3504   0011BE  0100               	movlb	0	; () banked
  3505   0011C0  6FA7               	movwf	(??_main_menu+1)& (0+255),b
  3506   0011C2  0E0F               	movlw	15
  3507   0011C4  6FA6               	movwf	??_main_menu& (0+255),b
  3508   0011C6  0EF1               	movlw	241
  3509   0011C8                     u6727:
  3510   0011C8  2EE8               	decfsz	wreg,f,c
  3511   0011CA  D7FE               	bra	u6727
  3512   0011CC  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3513   0011CE  D7FC               	bra	u6727
  3514   0011D0  2FA7               	decfsz	(??_main_menu+1)& (0+255),f,b
  3515   0011D2  D7FA               	bra	u6727
  3516   0011D4                     
  3517                           ;OBCII_PIC18F46K22.c: 384:                                 clear_diagnostic_codes();
  3518   0011D4  EC3C  F00A         	call	_clear_diagnostic_codes	;wreg free
  3519   0011D8  EFBE  F008         	goto	l5768
  3520   0011DC                     l5802:
  3521                           
  3522                           ;OBCII_PIC18F46K22.c: 401:                             display_system_info();
  3523   0011DC  EC08  F019         	call	_display_system_info	;wreg free
  3524   0011E0                     
  3525                           ;OBCII_PIC18F46K22.c: 403:                             if (PORTCbits.RC5 == 0) {
  3526   0011E0  BA82               	btfsc	130,5,c	;volatile
  3527   0011E2  EFF5  F008         	goto	u6621
  3528   0011E6  EFF7  F008         	goto	u6620
  3529   0011EA                     u6621:
  3530   0011EA  EFEE  F008         	goto	l5802
  3531   0011EE                     u6620:
  3532   0011EE                     
  3533                           ;OBCII_PIC18F46K22.c: 404:                                _delay((unsigned long)((20)*(1
      +                          6000000/4000.0)));
  3534   0011EE  0E68               	movlw	104
  3535   0011F0  0100               	movlb	0	; () banked
  3536   0011F2  6FA6               	movwf	??_main_menu& (0+255),b
  3537   0011F4  0EE4               	movlw	228
  3538   0011F6                     u6737:
  3539   0011F6  2EE8               	decfsz	wreg,f,c
  3540   0011F8  D7FE               	bra	u6737
  3541   0011FA  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3542   0011FC  D7FC               	bra	u6737
  3543   0011FE  0000               	nop	
  3544   001200                     
  3545                           ;OBCII_PIC18F46K22.c: 405:                                 if (PORTCbits.RC5 == 0) {
  3546   001200  BA82               	btfsc	130,5,c	;volatile
  3547   001202  EF05  F009         	goto	u6631
  3548   001206  EF07  F009         	goto	u6630
  3549   00120A                     u6631:
  3550   00120A  EFEE  F008         	goto	l5802
  3551   00120E                     u6630:
  3552   00120E  EFBA  F008         	goto	l5764
  3553   001212                     l5818:
  3554   001212  C0F3  F0A6         	movff	_menu_sel,??_main_menu
  3555   001216  C0F4  F0A7         	movff	_menu_sel+1,??_main_menu+1
  3556                           
  3557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3558                           ; Switch size 1, requested type "simple"
  3559                           ; Number of cases is 1, Range of values is 0 to 0
  3560                           ; switch strategies available:
  3561                           ; Name         Instructions Cycles
  3562                           ; simple_byte            4     3 (average)
  3563                           ;	Chosen strategy is simple_byte
  3564   00121A  0100               	movlb	0	; () banked
  3565   00121C  51A7               	movf	(??_main_menu+1)& (0+255),w,b
  3566   00121E  0A00               	xorlw	0	; case 0
  3567   001220  B4D8               	btfsc	status,2,c
  3568   001222  EF15  F009         	goto	l5904
  3569   001226  EF28  F009         	goto	l218
  3570   00122A                     l5904:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ; Switch size 1, requested type "simple"
  3574                           ; Number of cases is 4, Range of values is 0 to 3
  3575                           ; switch strategies available:
  3576                           ; Name         Instructions Cycles
  3577                           ; simple_byte           13     7 (average)
  3578                           ;	Chosen strategy is simple_byte
  3579   00122A  51A6               	movf	??_main_menu& (0+255),w,b
  3580   00122C  0A00               	xorlw	0	; case 0
  3581   00122E  B4D8               	btfsc	status,2,c
  3582   001230  EFA1  F008         	goto	l5756
  3583   001234  0A01               	xorlw	1	; case 1
  3584   001236  B4D8               	btfsc	status,2,c
  3585   001238  EFC3  F008         	goto	l5770
  3586   00123C  0A03               	xorlw	3	; case 2
  3587   00123E  B4D8               	btfsc	status,2,c
  3588   001240  EFDE  F008         	goto	l5784
  3589   001244  0A01               	xorlw	1	; case 3
  3590   001246  B4D8               	btfsc	status,2,c
  3591   001248  EFEE  F008         	goto	l5802
  3592   00124C  EF28  F009         	goto	l218
  3593   001250                     l218:
  3594   001250                     l5820:
  3595                           
  3596                           ;OBCII_PIC18F46K22.c: 421:         _delay((unsigned long)((50)*(16000000/4000.0)));
  3597   001250  0E02               	movlw	2
  3598   001252  0100               	movlb	0	; () banked
  3599   001254  6FA7               	movwf	(??_main_menu+1)& (0+255),b
  3600   001256  0E04               	movlw	4
  3601   001258  6FA6               	movwf	??_main_menu& (0+255),b
  3602   00125A  0EBA               	movlw	186
  3603   00125C                     u6747:
  3604   00125C  2EE8               	decfsz	wreg,f,c
  3605   00125E  D7FE               	bra	u6747
  3606   001260  2FA6               	decfsz	??_main_menu& (0+255),f,b
  3607   001262  D7FC               	bra	u6747
  3608   001264  2FA7               	decfsz	(??_main_menu+1)& (0+255),f,b
  3609   001266  D7FA               	bra	u6747
  3610   001268  0000               	nop	
  3611   00126A  EF13  F008         	goto	l5714
  3612   00126E  0012               	return		;funcret
  3613   001270                     __end_of_main_menu:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function _live_reading_mode *****************
  3617 ;; Defined at:
  3618 ;;		line 548 in file "OBCII_PIC18F46K22.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;Total ram usage:        0 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 10
  3639 ;; This function calls:
  3640 ;;		_print_AI_Temp
  3641 ;;		_print_RPM
  3642 ;;		_print_Vbatt
  3643 ;; This function is called by:
  3644 ;;		_main_menu
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text9
  3649   0033C4                     __ptext9:
  3650                           	callstack 0
  3651   0033C4                     _live_reading_mode:
  3652                           	callstack 19
  3653   0033C4                     
  3654                           ;OBCII_PIC18F46K22.c: 549:             print_RPM();
  3655   0033C4  ECDC  F00C         	call	_print_RPM	;wreg free
  3656   0033C8                     
  3657                           ;OBCII_PIC18F46K22.c: 550:             print_Vbatt();
  3658   0033C8  EC0E  F011         	call	_print_Vbatt	;wreg free
  3659   0033CC                     
  3660                           ;OBCII_PIC18F46K22.c: 551:             print_AI_Temp();
  3661   0033CC  EC86  F00D         	call	_print_AI_Temp	;wreg free
  3662   0033D0  0012               	return		;funcret
  3663   0033D2                     __end_of_live_reading_mode:
  3664                           	callstack 0
  3665                           
  3666 ;; *************** function _print_Vbatt *****************
  3667 ;; Defined at:
  3668 ;;		line 475 in file "OBCII_PIC18F46K22.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;Total ram usage:        1 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 5
  3689 ;; This function calls:
  3690 ;;		_LCD_clear
  3691 ;;		_LCD_cursor_set
  3692 ;;		_LCD_write_string
  3693 ;;		_UART1_SendString
  3694 ;;		_clear_parsing_notif
  3695 ;;		_display_mm
  3696 ;;		_parsing_notif
  3697 ;;		_strchr
  3698 ;; This function is called by:
  3699 ;;		_live_reading_mode
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text10
  3704   00221C                     __ptext10:
  3705                           	callstack 0
  3706   00221C                     _print_Vbatt:
  3707                           	callstack 23
  3708   00221C                     
  3709                           ;OBCII_PIC18F46K22.c: 477:     UART1_SendString("ATRV\r");
  3710   00221C  0EC4               	movlw	low STR_19
  3711   00221E  6E04               	movwf	UART1_SendString@string^0,c
  3712   002220  0EFF               	movlw	high STR_19
  3713   002222  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3714   002224  EC39  F018         	call	_UART1_SendString	;wreg free
  3715                           
  3716                           ;OBCII_PIC18F46K22.c: 478:     while(!message_complete) {
  3717   002228  EF37  F011         	goto	l4260
  3718   00222C                     l266:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;OBCII_PIC18F46K22.c: 480:         if (PORTCbits.RC5 == 0) {
  3722   00222C  BA82               	btfsc	130,5,c	;volatile
  3723   00222E  EF1B  F011         	goto	u4361
  3724   002232  EF1D  F011         	goto	u4360
  3725   002236                     u4361:
  3726   002236  EF35  F011         	goto	l4258
  3727   00223A                     u4360:
  3728   00223A                     
  3729                           ; BSR set to: 0
  3730                           ;OBCII_PIC18F46K22.c: 481:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3731   00223A  0E68               	movlw	104
  3732   00223C  6E0B               	movwf	??_print_Vbatt^0,c
  3733   00223E  0EE4               	movlw	228
  3734   002240                     u6757:
  3735   002240  2EE8               	decfsz	wreg,f,c
  3736   002242  D7FE               	bra	u6757
  3737   002244  2E0B               	decfsz	??_print_Vbatt^0,f,c
  3738   002246  D7FC               	bra	u6757
  3739   002248  D000               	nop2	
  3740   00224A                     
  3741                           ;OBCII_PIC18F46K22.c: 482:             if (PORTCbits.RC5 == 0) {
  3742   00224A  BA82               	btfsc	130,5,c	;volatile
  3743   00224C  EF2A  F011         	goto	u4371
  3744   002250  EF2C  F011         	goto	u4370
  3745   002254                     u4371:
  3746   002254  EF35  F011         	goto	l4258
  3747   002258                     u4370:
  3748   002258                     
  3749                           ;OBCII_PIC18F46K22.c: 483:                 LCD_clear();
  3750   002258  EC97  F019         	call	_LCD_clear	;wreg free
  3751   00225C                     
  3752                           ;OBCII_PIC18F46K22.c: 484:                 display_mm();
  3753   00225C  EC57  F019         	call	_display_mm	;wreg free
  3754   002260                     
  3755                           ;OBCII_PIC18F46K22.c: 485:                 menu_sel = -1;
  3756   002260  0100               	movlb	0	; () banked
  3757   002262  69F3               	setf	_menu_sel& (0+255),b
  3758   002264  69F4               	setf	(_menu_sel+1)& (0+255),b
  3759                           
  3760                           ;OBCII_PIC18F46K22.c: 486:                 break;
  3761   002266  EF40  F011         	goto	l4262
  3762   00226A                     l4258:
  3763                           
  3764                           ;OBCII_PIC18F46K22.c: 489:         parsing_notif();
  3765   00226A  ECA6  F019         	call	_parsing_notif	;wreg free
  3766   00226E                     l4260:
  3767                           
  3768                           ;OBCII_PIC18F46K22.c: 478:     while(!message_complete) {
  3769   00226E  0100               	movlb	0	; () banked
  3770   002270  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  3771   002272  B4D8               	btfsc	status,2,c
  3772   002274  EF3E  F011         	goto	u4381
  3773   002278  EF40  F011         	goto	u4380
  3774   00227C                     u4381:
  3775   00227C  EF16  F011         	goto	l266
  3776   002280                     u4380:
  3777   002280                     l4262:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;OBCII_PIC18F46K22.c: 491:     clear_parsing_notif();
  3781   002280  ECB2  F019         	call	_clear_parsing_notif	;wreg free
  3782   002284                     
  3783                           ;OBCII_PIC18F46K22.c: 493:     LCD_cursor_set(2,7);
  3784   002284  0E07               	movlw	7
  3785   002286  6E06               	movwf	LCD_cursor_set@column^0,c
  3786   002288  0E02               	movlw	2
  3787   00228A  ECDA  F017         	call	_LCD_cursor_set
  3788   00228E                     
  3789                           ;OBCII_PIC18F46K22.c: 494:     LCD_write_string("     ");
  3790   00228E  0E55               	movlw	low (STR_33+8)
  3791   002290  6E06               	movwf	LCD_write_string@string^0,c
  3792   002292  0EFF               	movlw	high (STR_33+8)
  3793   002294  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3794   002296  EC94  F016         	call	_LCD_write_string	;wreg free
  3795                           
  3796                           ;OBCII_PIC18F46K22.c: 496:     LCD_cursor_set(1,7);
  3797   00229A  0E07               	movlw	7
  3798   00229C  6E06               	movwf	LCD_cursor_set@column^0,c
  3799   00229E  0E01               	movlw	1
  3800   0022A0  ECDA  F017         	call	_LCD_cursor_set
  3801   0022A4                     
  3802                           ;OBCII_PIC18F46K22.c: 497:     LCD_write_string("VBatt");
  3803   0022A4  0ECA               	movlw	low STR_21
  3804   0022A6  6E06               	movwf	LCD_write_string@string^0,c
  3805   0022A8  0EFF               	movlw	high STR_21
  3806   0022AA  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3807   0022AC  EC94  F016         	call	_LCD_write_string	;wreg free
  3808   0022B0                     
  3809                           ;OBCII_PIC18F46K22.c: 498:     LCD_cursor_set(2,7);
  3810   0022B0  0E07               	movlw	7
  3811   0022B2  6E06               	movwf	LCD_cursor_set@column^0,c
  3812   0022B4  0E02               	movlw	2
  3813   0022B6  ECDA  F017         	call	_LCD_cursor_set
  3814   0022BA                     
  3815                           ;OBCII_PIC18F46K22.c: 500:     if (!strchr(buffer, 'V')) {
  3816   0022BA  0E00               	movlw	low _buffer
  3817   0022BC  6E03               	movwf	strchr@s^0,c
  3818   0022BE  0E02               	movlw	high _buffer
  3819   0022C0  6E04               	movwf	(strchr@s+1)^0,c
  3820   0022C2  0E00               	movlw	0
  3821   0022C4  6E06               	movwf	(strchr@c+1)^0,c
  3822   0022C6  0E56               	movlw	86
  3823   0022C8  6E05               	movwf	strchr@c^0,c
  3824   0022CA  EC64  F018         	call	_strchr	;wreg free
  3825   0022CE  5003               	movf	?_strchr^0,w,c
  3826   0022D0  1004               	iorwf	(?_strchr+1)^0,w,c
  3827   0022D2  A4D8               	btfss	status,2,c
  3828   0022D4  EF6E  F011         	goto	u4391
  3829   0022D8  EF70  F011         	goto	u4390
  3830   0022DC                     u4391:
  3831   0022DC  EF78  F011         	goto	l4276
  3832   0022E0                     u4390:
  3833   0022E0                     
  3834                           ;OBCII_PIC18F46K22.c: 501:         LCD_write_string("N/A");
  3835   0022E0  0EE6               	movlw	low STR_22
  3836   0022E2  6E06               	movwf	LCD_write_string@string^0,c
  3837   0022E4  0EFF               	movlw	high STR_22
  3838   0022E6  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3839   0022E8  EC94  F016         	call	_LCD_write_string	;wreg free
  3840                           
  3841                           ;OBCII_PIC18F46K22.c: 502:     }
  3842   0022EC  EF7E  F011         	goto	l4278
  3843   0022F0                     l4276:
  3844                           
  3845                           ;OBCII_PIC18F46K22.c: 504:     LCD_write_string(buffer);
  3846   0022F0  0E00               	movlw	low _buffer
  3847   0022F2  6E06               	movwf	LCD_write_string@string^0,c
  3848   0022F4  0E02               	movlw	high _buffer
  3849   0022F6  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3850   0022F8  EC94  F016         	call	_LCD_write_string	;wreg free
  3851   0022FC                     l4278:
  3852                           
  3853                           ;OBCII_PIC18F46K22.c: 507:     buffer_count = 0;
  3854   0022FC  0100               	movlb	0	; () banked
  3855   0022FE  6BD2               	clrf	_buffer_count& (0+255),b
  3856   002300                     
  3857                           ; BSR set to: 0
  3858                           ;OBCII_PIC18F46K22.c: 508:     message_complete = 0;
  3859   002300  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  3860   002302                     
  3861                           ; BSR set to: 0
  3862   002302  0012               	return		;funcret
  3863   002304                     __end_of_print_Vbatt:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function _print_RPM *****************
  3867 ;; Defined at:
  3868 ;;		line 439 in file "OBCII_PIC18F46K22.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;Total ram usage:        3 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 9
  3889 ;; This function calls:
  3890 ;;		_LCD_clear
  3891 ;;		_LCD_cursor_set
  3892 ;;		_LCD_write_string
  3893 ;;		_UART1_SendString
  3894 ;;		_clear_parsing_notif
  3895 ;;		_display_mm
  3896 ;;		_hex_char_to_value
  3897 ;;		_parsing_notif
  3898 ;;		_sprintf
  3899 ;; This function is called by:
  3900 ;;		_live_reading_mode
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text11
  3905   0019B8                     __ptext11:
  3906                           	callstack 0
  3907   0019B8                     _print_RPM:
  3908                           	callstack 19
  3909   0019B8                     
  3910                           ;OBCII_PIC18F46K22.c: 441:     UART1_SendString("010C\r");
  3911   0019B8  0EB8               	movlw	low STR_15
  3912   0019BA  6E04               	movwf	UART1_SendString@string^0,c
  3913   0019BC  0EFF               	movlw	high STR_15
  3914   0019BE  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3915   0019C0  EC39  F018         	call	_UART1_SendString	;wreg free
  3916                           
  3917                           ;OBCII_PIC18F46K22.c: 442:     while(!message_complete) {
  3918   0019C4  EF05  F00D         	goto	l4218
  3919   0019C8                     l258:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;OBCII_PIC18F46K22.c: 444:         if (PORTCbits.RC5 == 0) {
  3923   0019C8  BA82               	btfsc	130,5,c	;volatile
  3924   0019CA  EFE9  F00C         	goto	u4331
  3925   0019CE  EFEB  F00C         	goto	u4330
  3926   0019D2                     u4331:
  3927   0019D2  EF03  F00D         	goto	l4216
  3928   0019D6                     u4330:
  3929   0019D6                     
  3930                           ; BSR set to: 0
  3931                           ;OBCII_PIC18F46K22.c: 445:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3932   0019D6  0E68               	movlw	104
  3933   0019D8  6E4E               	movwf	??_print_RPM^0,c
  3934   0019DA  0EE4               	movlw	228
  3935   0019DC                     u6767:
  3936   0019DC  2EE8               	decfsz	wreg,f,c
  3937   0019DE  D7FE               	bra	u6767
  3938   0019E0  2E4E               	decfsz	??_print_RPM^0,f,c
  3939   0019E2  D7FC               	bra	u6767
  3940   0019E4  D000               	nop2	
  3941   0019E6                     
  3942                           ;OBCII_PIC18F46K22.c: 446:             if (PORTCbits.RC5 == 0) {
  3943   0019E6  BA82               	btfsc	130,5,c	;volatile
  3944   0019E8  EFF8  F00C         	goto	u4341
  3945   0019EC  EFFA  F00C         	goto	u4340
  3946   0019F0                     u4341:
  3947   0019F0  EF03  F00D         	goto	l4216
  3948   0019F4                     u4340:
  3949   0019F4                     
  3950                           ;OBCII_PIC18F46K22.c: 447:                 LCD_clear();
  3951   0019F4  EC97  F019         	call	_LCD_clear	;wreg free
  3952   0019F8                     
  3953                           ;OBCII_PIC18F46K22.c: 448:                 display_mm();
  3954   0019F8  EC57  F019         	call	_display_mm	;wreg free
  3955   0019FC                     
  3956                           ;OBCII_PIC18F46K22.c: 449:                 menu_sel = -1;
  3957   0019FC  0100               	movlb	0	; () banked
  3958   0019FE  69F3               	setf	_menu_sel& (0+255),b
  3959   001A00  69F4               	setf	(_menu_sel+1)& (0+255),b
  3960                           
  3961                           ;OBCII_PIC18F46K22.c: 450:                 break;
  3962   001A02  EF0E  F00D         	goto	l4220
  3963   001A06                     l4216:
  3964                           
  3965                           ;OBCII_PIC18F46K22.c: 453:         parsing_notif();
  3966   001A06  ECA6  F019         	call	_parsing_notif	;wreg free
  3967   001A0A                     l4218:
  3968                           
  3969                           ;OBCII_PIC18F46K22.c: 442:     while(!message_complete) {
  3970   001A0A  0100               	movlb	0	; () banked
  3971   001A0C  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  3972   001A0E  B4D8               	btfsc	status,2,c
  3973   001A10  EF0C  F00D         	goto	u4351
  3974   001A14  EF0E  F00D         	goto	u4350
  3975   001A18                     u4351:
  3976   001A18  EFE4  F00C         	goto	l258
  3977   001A1C                     u4350:
  3978   001A1C                     l4220:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;OBCII_PIC18F46K22.c: 455:     clear_parsing_notif();
  3982   001A1C  ECB2  F019         	call	_clear_parsing_notif	;wreg free
  3983   001A20                     
  3984                           ;OBCII_PIC18F46K22.c: 457:     A_rpm = (hex_char_to_value(buffer[4]) << 4) | hex_char_to
      +                          _value(buffer[5]);
  3985   001A20  0102               	movlb	2	; () banked
  3986   001A22  5104               	movf	(_buffer+4)& (0+255),w,b
  3987   001A24  EC55  F016         	call	_hex_char_to_value
  3988   001A28  6E4E               	movwf	??_print_RPM^0,c
  3989   001A2A  6A4F               	clrf	(??_print_RPM+1)^0,c
  3990   001A2C  3A4E               	swapf	??_print_RPM^0,f,c
  3991   001A2E  3A4F               	swapf	(??_print_RPM+1)^0,f,c
  3992   001A30  0EF0               	movlw	240
  3993   001A32  164F               	andwf	(??_print_RPM+1)^0,f,c
  3994   001A34  504E               	movf	??_print_RPM^0,w,c
  3995   001A36  0B0F               	andlw	15
  3996   001A38  124F               	iorwf	(??_print_RPM+1)^0,f,c
  3997   001A3A  0EF0               	movlw	240
  3998   001A3C  164E               	andwf	??_print_RPM^0,f,c
  3999   001A3E  0102               	movlb	2	; () banked
  4000   001A40  5105               	movf	(_buffer+5)& (0+255),w,b
  4001   001A42  EC55  F016         	call	_hex_char_to_value
  4002   001A46  6E50               	movwf	(??_print_RPM+2)^0,c
  4003   001A48  5050               	movf	(??_print_RPM+2)^0,w,c
  4004   001A4A  104E               	iorwf	??_print_RPM^0,w,c
  4005   001A4C  0100               	movlb	0	; () banked
  4006   001A4E  6FCB               	movwf	_A_rpm& (0+255),b
  4007   001A50  504F               	movf	(??_print_RPM+1)^0,w,c
  4008   001A52  6FCC               	movwf	(_A_rpm+1)& (0+255),b
  4009   001A54                     
  4010                           ; BSR set to: 0
  4011                           ;OBCII_PIC18F46K22.c: 458:     B_rpm = (hex_char_to_value(buffer[6]) << 4) | hex_char_to
      +                          _value(buffer[7]);
  4012   001A54  0102               	movlb	2	; () banked
  4013   001A56  5106               	movf	(_buffer+6)& (0+255),w,b
  4014   001A58  EC55  F016         	call	_hex_char_to_value
  4015   001A5C  6E4E               	movwf	??_print_RPM^0,c
  4016   001A5E  6A4F               	clrf	(??_print_RPM+1)^0,c
  4017   001A60  3A4E               	swapf	??_print_RPM^0,f,c
  4018   001A62  3A4F               	swapf	(??_print_RPM+1)^0,f,c
  4019   001A64  0EF0               	movlw	240
  4020   001A66  164F               	andwf	(??_print_RPM+1)^0,f,c
  4021   001A68  504E               	movf	??_print_RPM^0,w,c
  4022   001A6A  0B0F               	andlw	15
  4023   001A6C  124F               	iorwf	(??_print_RPM+1)^0,f,c
  4024   001A6E  0EF0               	movlw	240
  4025   001A70  164E               	andwf	??_print_RPM^0,f,c
  4026   001A72  0102               	movlb	2	; () banked
  4027   001A74  5107               	movf	(_buffer+7)& (0+255),w,b
  4028   001A76  EC55  F016         	call	_hex_char_to_value
  4029   001A7A  6E50               	movwf	(??_print_RPM+2)^0,c
  4030   001A7C  5050               	movf	(??_print_RPM+2)^0,w,c
  4031   001A7E  104E               	iorwf	??_print_RPM^0,w,c
  4032   001A80  0100               	movlb	0	; () banked
  4033   001A82  6FC9               	movwf	_B_rpm& (0+255),b
  4034   001A84  504F               	movf	(??_print_RPM+1)^0,w,c
  4035   001A86  6FCA               	movwf	(_B_rpm+1)& (0+255),b
  4036   001A88                     
  4037                           ; BSR set to: 0
  4038                           ;OBCII_PIC18F46K22.c: 459:     RPM = ((A_rpm * 256) + B_rpm) / 4;
  4039   001A88  51CB               	movf	_A_rpm& (0+255),w,b
  4040   001A8A  6E4F               	movwf	(??_print_RPM+1)^0,c
  4041   001A8C  6A4E               	clrf	??_print_RPM^0,c
  4042   001A8E  51C9               	movf	_B_rpm& (0+255),w,b
  4043   001A90  264E               	addwf	??_print_RPM^0,f,c
  4044   001A92  51CA               	movf	(_B_rpm+1)& (0+255),w,b
  4045   001A94  224F               	addwfc	(??_print_RPM+1)^0,f,c
  4046   001A96  90D8               	bcf	status,0,c
  4047   001A98  324F               	rrcf	(??_print_RPM+1)^0,f,c
  4048   001A9A  324E               	rrcf	??_print_RPM^0,f,c
  4049   001A9C  90D8               	bcf	status,0,c
  4050   001A9E  324F               	rrcf	(??_print_RPM+1)^0,f,c
  4051   001AA0  324E               	rrcf	??_print_RPM^0,f,c
  4052   001AA2  C04E  F0C7         	movff	??_print_RPM,_RPM
  4053   001AA6  C04F  F0C8         	movff	??_print_RPM+1,_RPM+1
  4054   001AAA                     
  4055                           ; BSR set to: 0
  4056                           ;OBCII_PIC18F46K22.c: 461:     sprintf(rpm_string, "%u", RPM);
  4057   001AAA  0EE3               	movlw	low _rpm_string
  4058   001AAC  6E38               	movwf	sprintf@s^0,c
  4059   001AAE  6A39               	clrf	(sprintf@s+1)^0,c
  4060   001AB0  0EF2               	movlw	low STR_16
  4061   001AB2  6E3A               	movwf	sprintf@fmt^0,c
  4062   001AB4  0EFF               	movlw	high STR_16
  4063   001AB6  6E3B               	movwf	(sprintf@fmt+1)^0,c
  4064   001AB8  C0C7  F03C         	movff	_RPM,?_sprintf+4
  4065   001ABC  C0C8  F03D         	movff	_RPM+1,?_sprintf+5
  4066   001AC0  ECAB  F018         	call	_sprintf	;wreg free
  4067   001AC4                     
  4068                           ;OBCII_PIC18F46K22.c: 463:     LCD_cursor_set(2,1);
  4069   001AC4  0E01               	movlw	1
  4070   001AC6  6E06               	movwf	LCD_cursor_set@column^0,c
  4071   001AC8  0E02               	movlw	2
  4072   001ACA  ECDA  F017         	call	_LCD_cursor_set
  4073   001ACE                     
  4074                           ;OBCII_PIC18F46K22.c: 464:     LCD_write_string("     ");
  4075   001ACE  0E55               	movlw	low (STR_33+8)
  4076   001AD0  6E06               	movwf	LCD_write_string@string^0,c
  4077   001AD2  0EFF               	movlw	high (STR_33+8)
  4078   001AD4  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4079   001AD6  EC94  F016         	call	_LCD_write_string	;wreg free
  4080   001ADA                     
  4081                           ;OBCII_PIC18F46K22.c: 466:     LCD_cursor_set(1,1);
  4082   001ADA  0E01               	movlw	1
  4083   001ADC  6E06               	movwf	LCD_cursor_set@column^0,c
  4084   001ADE  0E01               	movlw	1
  4085   001AE0  ECDA  F017         	call	_LCD_cursor_set
  4086   001AE4                     
  4087                           ;OBCII_PIC18F46K22.c: 467:     LCD_write_string("RPM");
  4088   001AE4  0EEA               	movlw	low STR_18
  4089   001AE6  6E06               	movwf	LCD_write_string@string^0,c
  4090   001AE8  0EFF               	movlw	high STR_18
  4091   001AEA  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4092   001AEC  EC94  F016         	call	_LCD_write_string	;wreg free
  4093   001AF0                     
  4094                           ;OBCII_PIC18F46K22.c: 468:     LCD_cursor_set(2,1);
  4095   001AF0  0E01               	movlw	1
  4096   001AF2  6E06               	movwf	LCD_cursor_set@column^0,c
  4097   001AF4  0E02               	movlw	2
  4098   001AF6  ECDA  F017         	call	_LCD_cursor_set
  4099   001AFA                     
  4100                           ;OBCII_PIC18F46K22.c: 469:     LCD_write_string(rpm_string);
  4101   001AFA  0EE3               	movlw	low _rpm_string
  4102   001AFC  6E06               	movwf	LCD_write_string@string^0,c
  4103   001AFE  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4104   001B00  EC94  F016         	call	_LCD_write_string	;wreg free
  4105   001B04                     
  4106                           ;OBCII_PIC18F46K22.c: 471:     buffer_count = 0;
  4107   001B04  0100               	movlb	0	; () banked
  4108   001B06  6BD2               	clrf	_buffer_count& (0+255),b
  4109   001B08                     
  4110                           ; BSR set to: 0
  4111                           ;OBCII_PIC18F46K22.c: 472:     message_complete = 0;
  4112   001B08  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  4113   001B0A                     
  4114                           ; BSR set to: 0
  4115   001B0A  0012               	return		;funcret
  4116   001B0C                     __end_of_print_RPM:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function _print_AI_Temp *****************
  4120 ;; Defined at:
  4121 ;;		line 511 in file "OBCII_PIC18F46K22.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;Total ram usage:        3 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: 9
  4142 ;; This function calls:
  4143 ;;		_LCD_clear
  4144 ;;		_LCD_cursor_set
  4145 ;;		_LCD_write_string
  4146 ;;		_UART1_SendString
  4147 ;;		_clear_parsing_notif
  4148 ;;		_display_mm
  4149 ;;		_hex_char_to_value
  4150 ;;		_parsing_notif
  4151 ;;		_sprintf
  4152 ;; This function is called by:
  4153 ;;		_live_reading_mode
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text12
  4158   001B0C                     __ptext12:
  4159                           	callstack 0
  4160   001B0C                     _print_AI_Temp:
  4161                           	callstack 19
  4162   001B0C                     
  4163                           ;OBCII_PIC18F46K22.c: 513:     UART1_SendString("010F\r");
  4164   001B0C  0EBE               	movlw	low STR_23
  4165   001B0E  6E04               	movwf	UART1_SendString@string^0,c
  4166   001B10  0EFF               	movlw	high STR_23
  4167   001B12  6E05               	movwf	(UART1_SendString@string+1)^0,c
  4168   001B14  EC39  F018         	call	_UART1_SendString	;wreg free
  4169                           
  4170                           ;OBCII_PIC18F46K22.c: 514:      while(!message_complete) {
  4171   001B18  EFAF  F00D         	goto	l4296
  4172   001B1C                     l276:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;OBCII_PIC18F46K22.c: 515:         if (PORTCbits.RC5 == 0) {
  4176   001B1C  BA82               	btfsc	130,5,c	;volatile
  4177   001B1E  EF93  F00D         	goto	u4401
  4178   001B22  EF95  F00D         	goto	u4400
  4179   001B26                     u4401:
  4180   001B26  EFAD  F00D         	goto	l4294
  4181   001B2A                     u4400:
  4182   001B2A                     
  4183                           ; BSR set to: 0
  4184                           ;OBCII_PIC18F46K22.c: 516:             _delay((unsigned long)((20)*(16000000/4000.0)));
  4185   001B2A  0E68               	movlw	104
  4186   001B2C  6E4E               	movwf	??_print_AI_Temp^0,c
  4187   001B2E  0EE4               	movlw	228
  4188   001B30                     u6777:
  4189   001B30  2EE8               	decfsz	wreg,f,c
  4190   001B32  D7FE               	bra	u6777
  4191   001B34  2E4E               	decfsz	??_print_AI_Temp^0,f,c
  4192   001B36  D7FC               	bra	u6777
  4193   001B38  D000               	nop2	
  4194   001B3A                     
  4195                           ;OBCII_PIC18F46K22.c: 517:             if (PORTCbits.RC5 == 0) {
  4196   001B3A  BA82               	btfsc	130,5,c	;volatile
  4197   001B3C  EFA2  F00D         	goto	u4411
  4198   001B40  EFA4  F00D         	goto	u4410
  4199   001B44                     u4411:
  4200   001B44  EFAD  F00D         	goto	l4294
  4201   001B48                     u4410:
  4202   001B48                     
  4203                           ;OBCII_PIC18F46K22.c: 518:                 LCD_clear();
  4204   001B48  EC97  F019         	call	_LCD_clear	;wreg free
  4205   001B4C                     
  4206                           ;OBCII_PIC18F46K22.c: 519:                 display_mm();
  4207   001B4C  EC57  F019         	call	_display_mm	;wreg free
  4208   001B50                     
  4209                           ;OBCII_PIC18F46K22.c: 520:                 menu_sel = -1;
  4210   001B50  0100               	movlb	0	; () banked
  4211   001B52  69F3               	setf	_menu_sel& (0+255),b
  4212   001B54  69F4               	setf	(_menu_sel+1)& (0+255),b
  4213                           
  4214                           ;OBCII_PIC18F46K22.c: 521:                 break;
  4215   001B56  EFB8  F00D         	goto	l4298
  4216   001B5A                     l4294:
  4217                           
  4218                           ;OBCII_PIC18F46K22.c: 525:         parsing_notif();
  4219   001B5A  ECA6  F019         	call	_parsing_notif	;wreg free
  4220   001B5E                     l4296:
  4221                           
  4222                           ;OBCII_PIC18F46K22.c: 514:      while(!message_complete) {
  4223   001B5E  0100               	movlb	0	; () banked
  4224   001B60  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  4225   001B62  B4D8               	btfsc	status,2,c
  4226   001B64  EFB6  F00D         	goto	u4421
  4227   001B68  EFB8  F00D         	goto	u4420
  4228   001B6C                     u4421:
  4229   001B6C  EF8E  F00D         	goto	l276
  4230   001B70                     u4420:
  4231   001B70                     l4298:
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;OBCII_PIC18F46K22.c: 527:     clear_parsing_notif();
  4235   001B70  ECB2  F019         	call	_clear_parsing_notif	;wreg free
  4236   001B74                     
  4237                           ;OBCII_PIC18F46K22.c: 529:     LCD_cursor_set(2,13);
  4238   001B74  0E0D               	movlw	13
  4239   001B76  6E06               	movwf	LCD_cursor_set@column^0,c
  4240   001B78  0E02               	movlw	2
  4241   001B7A  ECDA  F017         	call	_LCD_cursor_set
  4242   001B7E                     
  4243                           ;OBCII_PIC18F46K22.c: 530:     LCD_write_string("   ");
  4244   001B7E  0E57               	movlw	low (STR_33+10)
  4245   001B80  6E06               	movwf	LCD_write_string@string^0,c
  4246   001B82  0EFF               	movlw	high (STR_33+10)
  4247   001B84  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4248   001B86  EC94  F016         	call	_LCD_write_string	;wreg free
  4249                           
  4250                           ;OBCII_PIC18F46K22.c: 532:     A_air_intake = (hex_char_to_value(buffer[4]) << 4) | hex_
      +                          char_to_value(buffer[5]);
  4251   001B8A  0102               	movlb	2	; () banked
  4252   001B8C  5104               	movf	(_buffer+4)& (0+255),w,b
  4253   001B8E  EC55  F016         	call	_hex_char_to_value
  4254   001B92  6E4E               	movwf	??_print_AI_Temp^0,c
  4255   001B94  6A4F               	clrf	(??_print_AI_Temp+1)^0,c
  4256   001B96  3A4E               	swapf	??_print_AI_Temp^0,f,c
  4257   001B98  3A4F               	swapf	(??_print_AI_Temp+1)^0,f,c
  4258   001B9A  0EF0               	movlw	240
  4259   001B9C  164F               	andwf	(??_print_AI_Temp+1)^0,f,c
  4260   001B9E  504E               	movf	??_print_AI_Temp^0,w,c
  4261   001BA0  0B0F               	andlw	15
  4262   001BA2  124F               	iorwf	(??_print_AI_Temp+1)^0,f,c
  4263   001BA4  0EF0               	movlw	240
  4264   001BA6  164E               	andwf	??_print_AI_Temp^0,f,c
  4265   001BA8  0102               	movlb	2	; () banked
  4266   001BAA  5105               	movf	(_buffer+5)& (0+255),w,b
  4267   001BAC  EC55  F016         	call	_hex_char_to_value
  4268   001BB0  6E50               	movwf	(??_print_AI_Temp+2)^0,c
  4269   001BB2  5050               	movf	(??_print_AI_Temp+2)^0,w,c
  4270   001BB4  104E               	iorwf	??_print_AI_Temp^0,w,c
  4271   001BB6  0100               	movlb	0	; () banked
  4272   001BB8  6FC5               	movwf	_A_air_intake& (0+255),b
  4273   001BBA  504F               	movf	(??_print_AI_Temp+1)^0,w,c
  4274   001BBC  6FC6               	movwf	(_A_air_intake+1)& (0+255),b
  4275   001BBE                     
  4276                           ; BSR set to: 0
  4277                           ;OBCII_PIC18F46K22.c: 533:     air_intake_temp = A_air_intake - 40;
  4278   001BBE  0ED8               	movlw	216
  4279   001BC0  25C5               	addwf	_A_air_intake& (0+255),w,b
  4280   001BC2  6FC3               	movwf	_air_intake_temp& (0+255),b
  4281   001BC4  0EFF               	movlw	255
  4282   001BC6  21C6               	addwfc	(_A_air_intake+1)& (0+255),w,b
  4283   001BC8  6FC4               	movwf	(_air_intake_temp+1)& (0+255),b
  4284   001BCA                     
  4285                           ; BSR set to: 0
  4286                           ;OBCII_PIC18F46K22.c: 535:     sprintf(air_intake_string, "%u", air_intake_temp);
  4287   001BCA  0ED3               	movlw	low _air_intake_string
  4288   001BCC  6E38               	movwf	sprintf@s^0,c
  4289   001BCE  6A39               	clrf	(sprintf@s+1)^0,c
  4290   001BD0  0EF2               	movlw	low STR_16
  4291   001BD2  6E3A               	movwf	sprintf@fmt^0,c
  4292   001BD4  0EFF               	movlw	high STR_16
  4293   001BD6  6E3B               	movwf	(sprintf@fmt+1)^0,c
  4294   001BD8  C0C3  F03C         	movff	_air_intake_temp,?_sprintf+4
  4295   001BDC  C0C4  F03D         	movff	_air_intake_temp+1,?_sprintf+5
  4296   001BE0  ECAB  F018         	call	_sprintf	;wreg free
  4297   001BE4                     
  4298                           ;OBCII_PIC18F46K22.c: 537:     LCD_cursor_set(1,13);
  4299   001BE4  0E0D               	movlw	13
  4300   001BE6  6E06               	movwf	LCD_cursor_set@column^0,c
  4301   001BE8  0E01               	movlw	1
  4302   001BEA  ECDA  F017         	call	_LCD_cursor_set
  4303   001BEE                     
  4304                           ;OBCII_PIC18F46K22.c: 538:     LCD_write_string("AIT");
  4305   001BEE  0EEE               	movlw	low STR_26
  4306   001BF0  6E06               	movwf	LCD_write_string@string^0,c
  4307   001BF2  0EFF               	movlw	high STR_26
  4308   001BF4  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4309   001BF6  EC94  F016         	call	_LCD_write_string	;wreg free
  4310   001BFA                     
  4311                           ;OBCII_PIC18F46K22.c: 539:     LCD_cursor_set(2,13);
  4312   001BFA  0E0D               	movlw	13
  4313   001BFC  6E06               	movwf	LCD_cursor_set@column^0,c
  4314   001BFE  0E02               	movlw	2
  4315   001C00  ECDA  F017         	call	_LCD_cursor_set
  4316   001C04                     
  4317                           ;OBCII_PIC18F46K22.c: 540:     LCD_write_string(air_intake_string);
  4318   001C04  0ED3               	movlw	low _air_intake_string
  4319   001C06  6E06               	movwf	LCD_write_string@string^0,c
  4320   001C08  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4321   001C0A  EC94  F016         	call	_LCD_write_string	;wreg free
  4322   001C0E                     
  4323                           ;OBCII_PIC18F46K22.c: 541:     LCD_cursor_set(2,15);
  4324   001C0E  0E0F               	movlw	15
  4325   001C10  6E06               	movwf	LCD_cursor_set@column^0,c
  4326   001C12  0E02               	movlw	2
  4327   001C14  ECDA  F017         	call	_LCD_cursor_set
  4328   001C18                     
  4329                           ;OBCII_PIC18F46K22.c: 542:     LCD_write_string("C");
  4330   001C18  0EF8               	movlw	low STR_27
  4331   001C1A  6E06               	movwf	LCD_write_string@string^0,c
  4332   001C1C  0EFF               	movlw	high STR_27
  4333   001C1E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4334   001C20  EC94  F016         	call	_LCD_write_string	;wreg free
  4335   001C24                     
  4336                           ;OBCII_PIC18F46K22.c: 544:     buffer_count = 0;
  4337   001C24  0100               	movlb	0	; () banked
  4338   001C26  6BD2               	clrf	_buffer_count& (0+255),b
  4339   001C28                     
  4340                           ; BSR set to: 0
  4341                           ;OBCII_PIC18F46K22.c: 545:     message_complete = 0;
  4342   001C28  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  4343   001C2A                     
  4344                           ; BSR set to: 0
  4345   001C2A  0012               	return		;funcret
  4346   001C2C                     __end_of_print_AI_Temp:
  4347                           	callstack 0
  4348                           
  4349 ;; *************** function _hex_char_to_value *****************
  4350 ;; Defined at:
  4351 ;;		line 432 in file "OBCII_PIC18F46K22.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  c               1    wreg     unsigned char 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  c               1    2[COMRAM] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      unsigned char 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;Total ram usage:        1 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; Hardware stack levels required when called: 1
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_print_RPM
  4376 ;;		_print_AI_Temp
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text13
  4381   002CAA                     __ptext13:
  4382                           	callstack 0
  4383   002CAA                     _hex_char_to_value:
  4384                           	callstack 26
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;incstack = 0
  4388                           ;hex_char_to_value@c stored from wreg
  4389   002CAA  6E03               	movwf	hex_char_to_value@c^0,c
  4390   002CAC                     
  4391                           ;OBCII_PIC18F46K22.c: 433:     if (c >= '0' && c <= '9') return c - '0';
  4392   002CAC  0E2F               	movlw	47
  4393   002CAE  6403               	cpfsgt	hex_char_to_value@c^0,c
  4394   002CB0  EF5C  F016         	goto	u4131
  4395   002CB4  EF5E  F016         	goto	u4130
  4396   002CB8                     u4131:
  4397   002CB8  EF6A  F016         	goto	l4090
  4398   002CBC                     u4130:
  4399   002CBC  0E3A               	movlw	58
  4400   002CBE  6003               	cpfslt	hex_char_to_value@c^0,c
  4401   002CC0  EF64  F016         	goto	u4141
  4402   002CC4  EF66  F016         	goto	u4140
  4403   002CC8                     u4141:
  4404   002CC8  EF6A  F016         	goto	l4090
  4405   002CCC                     u4140:
  4406   002CCC  5003               	movf	hex_char_to_value@c^0,w,c
  4407   002CCE  0FD0               	addlw	208
  4408   002CD0  EF93  F016         	goto	l252
  4409   002CD4                     l4090:
  4410                           
  4411                           ;OBCII_PIC18F46K22.c: 434:     if (c >= 'A' && c <= 'F') return c - 'A' + 10;
  4412   002CD4  0E40               	movlw	64
  4413   002CD6  6403               	cpfsgt	hex_char_to_value@c^0,c
  4414   002CD8  EF70  F016         	goto	u4151
  4415   002CDC  EF72  F016         	goto	u4150
  4416   002CE0                     u4151:
  4417   002CE0  EF7E  F016         	goto	l4098
  4418   002CE4                     u4150:
  4419   002CE4  0E47               	movlw	71
  4420   002CE6  6003               	cpfslt	hex_char_to_value@c^0,c
  4421   002CE8  EF78  F016         	goto	u4161
  4422   002CEC  EF7A  F016         	goto	u4160
  4423   002CF0                     u4161:
  4424   002CF0  EF7E  F016         	goto	l4098
  4425   002CF4                     u4160:
  4426   002CF4  5003               	movf	hex_char_to_value@c^0,w,c
  4427   002CF6  0FC9               	addlw	201
  4428   002CF8  EF93  F016         	goto	l252
  4429   002CFC                     l4098:
  4430                           
  4431                           ;OBCII_PIC18F46K22.c: 435:     if (c >= 'a' && c <= 'f') return c - 'a' + 10;
  4432   002CFC  0E60               	movlw	96
  4433   002CFE  6403               	cpfsgt	hex_char_to_value@c^0,c
  4434   002D00  EF84  F016         	goto	u4171
  4435   002D04  EF86  F016         	goto	u4170
  4436   002D08                     u4171:
  4437   002D08  EF92  F016         	goto	l4106
  4438   002D0C                     u4170:
  4439   002D0C  0E67               	movlw	103
  4440   002D0E  6003               	cpfslt	hex_char_to_value@c^0,c
  4441   002D10  EF8C  F016         	goto	u4181
  4442   002D14  EF8E  F016         	goto	u4180
  4443   002D18                     u4181:
  4444   002D18  EF92  F016         	goto	l4106
  4445   002D1C                     u4180:
  4446   002D1C  5003               	movf	hex_char_to_value@c^0,w,c
  4447   002D1E  0FA9               	addlw	169
  4448   002D20  EF93  F016         	goto	l252
  4449   002D24                     l4106:
  4450                           
  4451                           ;OBCII_PIC18F46K22.c: 436:     return 0;
  4452   002D24  0E00               	movlw	0
  4453   002D26                     l252:
  4454   002D26  0012               	return		;funcret
  4455   002D28                     __end_of_hex_char_to_value:
  4456                           	callstack 0
  4457                           
  4458 ;; *************** function _display_system_info *****************
  4459 ;; Defined at:
  4460 ;;		line 614 in file "OBCII_PIC18F46K22.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 6
  4481 ;; This function calls:
  4482 ;;		_LCD_cursor_set
  4483 ;;		_LCD_write_string
  4484 ;;		_print_ELMVer
  4485 ;;		_print_SAEVer
  4486 ;; This function is called by:
  4487 ;;		_main_menu
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text14
  4492   003210                     __ptext14:
  4493                           	callstack 0
  4494   003210                     _display_system_info:
  4495                           	callstack 23
  4496   003210                     
  4497                           ;OBCII_PIC18F46K22.c: 615:     LCD_cursor_set(1,4);
  4498   003210  0E04               	movlw	4
  4499   003212  6E06               	movwf	LCD_cursor_set@column^0,c
  4500   003214  0E01               	movlw	1
  4501   003216  ECDA  F017         	call	_LCD_cursor_set
  4502   00321A                     
  4503                           ;OBCII_PIC18F46K22.c: 616:     LCD_write_string("            ");
  4504   00321A  0E4E               	movlw	low (STR_33+1)
  4505   00321C  6E06               	movwf	LCD_write_string@string^0,c
  4506   00321E  0EFF               	movlw	high (STR_33+1)
  4507   003220  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4508   003222  EC94  F016         	call	_LCD_write_string	;wreg free
  4509   003226                     
  4510                           ;OBCII_PIC18F46K22.c: 617:     LCD_cursor_set(2,5);
  4511   003226  0E05               	movlw	5
  4512   003228  6E06               	movwf	LCD_cursor_set@column^0,c
  4513   00322A  0E02               	movlw	2
  4514   00322C  ECDA  F017         	call	_LCD_cursor_set
  4515                           
  4516                           ;OBCII_PIC18F46K22.c: 618:     LCD_write_string("             ");
  4517   003230  0E4D               	movlw	low STR_33
  4518   003232  6E06               	movwf	LCD_write_string@string^0,c
  4519   003234  0EFF               	movlw	high STR_33
  4520   003236  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4521   003238  EC94  F016         	call	_LCD_write_string	;wreg free
  4522                           
  4523                           ;OBCII_PIC18F46K22.c: 619:     print_ELMVer();
  4524   00323C  ECCC  F015         	call	_print_ELMVer	;wreg free
  4525                           
  4526                           ;OBCII_PIC18F46K22.c: 620:     print_SAEVer();
  4527   003240  EC83  F015         	call	_print_SAEVer	;wreg free
  4528   003244  0012               	return		;funcret
  4529   003246                     __end_of_display_system_info:
  4530                           	callstack 0
  4531                           
  4532 ;; *************** function _print_SAEVer *****************
  4533 ;; Defined at:
  4534 ;;		line 587 in file "OBCII_PIC18F46K22.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;Total ram usage:        1 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 5
  4555 ;; This function calls:
  4556 ;;		_LCD_clear
  4557 ;;		_LCD_cursor_set
  4558 ;;		_LCD_write_string
  4559 ;;		_UART1_SendString
  4560 ;;		_clear_parsing_notif
  4561 ;;		_display_mm
  4562 ;;		_parsing_notif
  4563 ;; This function is called by:
  4564 ;;		_display_system_info
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text15
  4569   002B06                     __ptext15:
  4570                           	callstack 0
  4571   002B06                     _print_SAEVer:
  4572                           	callstack 23
  4573   002B06                     
  4574                           ;OBCII_PIC18F46K22.c: 588:     UART1_SendString("0108\r");
  4575   002B06  0EB2               	movlw	low STR_30
  4576   002B08  6E04               	movwf	UART1_SendString@string^0,c
  4577   002B0A  0EFF               	movlw	high STR_30
  4578   002B0C  6E05               	movwf	(UART1_SendString@string+1)^0,c
  4579   002B0E  EC39  F018         	call	_UART1_SendString	;wreg free
  4580                           
  4581                           ;OBCII_PIC18F46K22.c: 590:     while(!message_complete) {
  4582   002B12  EFAC  F015         	goto	l4366
  4583   002B16                     l295:
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;OBCII_PIC18F46K22.c: 592:         if (PORTCbits.RC5 == 0) {
  4587   002B16  BA82               	btfsc	130,5,c	;volatile
  4588   002B18  EF90  F015         	goto	u4461
  4589   002B1C  EF92  F015         	goto	u4460
  4590   002B20                     u4461:
  4591   002B20  EFAA  F015         	goto	l4364
  4592   002B24                     u4460:
  4593   002B24                     
  4594                           ; BSR set to: 0
  4595                           ;OBCII_PIC18F46K22.c: 593:             _delay((unsigned long)((20)*(16000000/4000.0)));
  4596   002B24  0E68               	movlw	104
  4597   002B26  6E0B               	movwf	??_print_SAEVer^0,c
  4598   002B28  0EE4               	movlw	228
  4599   002B2A                     u6787:
  4600   002B2A  2EE8               	decfsz	wreg,f,c
  4601   002B2C  D7FE               	bra	u6787
  4602   002B2E  2E0B               	decfsz	??_print_SAEVer^0,f,c
  4603   002B30  D7FC               	bra	u6787
  4604   002B32  D000               	nop2	
  4605   002B34                     
  4606                           ;OBCII_PIC18F46K22.c: 594:             if (PORTCbits.RC5 == 0) {
  4607   002B34  BA82               	btfsc	130,5,c	;volatile
  4608   002B36  EF9F  F015         	goto	u4471
  4609   002B3A  EFA1  F015         	goto	u4470
  4610   002B3E                     u4471:
  4611   002B3E  EFAA  F015         	goto	l4364
  4612   002B42                     u4470:
  4613   002B42                     
  4614                           ;OBCII_PIC18F46K22.c: 595:                 LCD_clear();
  4615   002B42  EC97  F019         	call	_LCD_clear	;wreg free
  4616   002B46                     
  4617                           ;OBCII_PIC18F46K22.c: 596:                 display_mm();
  4618   002B46  EC57  F019         	call	_display_mm	;wreg free
  4619   002B4A                     
  4620                           ;OBCII_PIC18F46K22.c: 597:                 menu_sel = -1;
  4621   002B4A  0100               	movlb	0	; () banked
  4622   002B4C  69F3               	setf	_menu_sel& (0+255),b
  4623   002B4E  69F4               	setf	(_menu_sel+1)& (0+255),b
  4624                           
  4625                           ;OBCII_PIC18F46K22.c: 598:                 break;
  4626   002B50  EFB5  F015         	goto	l4368
  4627   002B54                     l4364:
  4628                           
  4629                           ;OBCII_PIC18F46K22.c: 601:         parsing_notif();
  4630   002B54  ECA6  F019         	call	_parsing_notif	;wreg free
  4631   002B58                     l4366:
  4632                           
  4633                           ;OBCII_PIC18F46K22.c: 590:     while(!message_complete) {
  4634   002B58  0100               	movlb	0	; () banked
  4635   002B5A  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  4636   002B5C  B4D8               	btfsc	status,2,c
  4637   002B5E  EFB3  F015         	goto	u4481
  4638   002B62  EFB5  F015         	goto	u4480
  4639   002B66                     u4481:
  4640   002B66  EF8B  F015         	goto	l295
  4641   002B6A                     u4480:
  4642   002B6A                     l4368:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;OBCII_PIC18F46K22.c: 603:     clear_parsing_notif();
  4646   002B6A  ECB2  F019         	call	_clear_parsing_notif	;wreg free
  4647   002B6E                     
  4648                           ;OBCII_PIC18F46K22.c: 605:     LCD_cursor_set(2,1);
  4649   002B6E  0E01               	movlw	1
  4650   002B70  6E06               	movwf	LCD_cursor_set@column^0,c
  4651   002B72  0E02               	movlw	2
  4652   002B74  ECDA  F017         	call	_LCD_cursor_set
  4653   002B78                     
  4654                           ;OBCII_PIC18F46K22.c: 606:     LCD_write_string("SAE:");
  4655   002B78  0ED5               	movlw	low STR_31
  4656   002B7A  6E06               	movwf	LCD_write_string@string^0,c
  4657   002B7C  0EFF               	movlw	high STR_31
  4658   002B7E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4659   002B80  EC94  F016         	call	_LCD_write_string	;wreg free
  4660   002B84                     
  4661                           ;OBCII_PIC18F46K22.c: 607:     LCD_write_string(buffer);
  4662   002B84  0E00               	movlw	low _buffer
  4663   002B86  6E06               	movwf	LCD_write_string@string^0,c
  4664   002B88  0E02               	movlw	high _buffer
  4665   002B8A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4666   002B8C  EC94  F016         	call	_LCD_write_string	;wreg free
  4667   002B90                     
  4668                           ;OBCII_PIC18F46K22.c: 610:     buffer_count = 0;
  4669   002B90  0100               	movlb	0	; () banked
  4670   002B92  6BD2               	clrf	_buffer_count& (0+255),b
  4671   002B94                     
  4672                           ; BSR set to: 0
  4673                           ;OBCII_PIC18F46K22.c: 611:     message_complete = 0;
  4674   002B94  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  4675   002B96                     
  4676                           ; BSR set to: 0
  4677   002B96  0012               	return		;funcret
  4678   002B98                     __end_of_print_SAEVer:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function _print_ELMVer *****************
  4682 ;; Defined at:
  4683 ;;		line 559 in file "OBCII_PIC18F46K22.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;Total ram usage:        1 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 5
  4704 ;; This function calls:
  4705 ;;		_LCD_clear
  4706 ;;		_LCD_cursor_set
  4707 ;;		_LCD_write_string
  4708 ;;		_UART1_SendString
  4709 ;;		_clear_parsing_notif
  4710 ;;		_display_mm
  4711 ;;		_parsing_notif
  4712 ;; This function is called by:
  4713 ;;		_display_system_info
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text16
  4718   002B98                     __ptext16:
  4719                           	callstack 0
  4720   002B98                     _print_ELMVer:
  4721                           	callstack 23
  4722   002B98                     
  4723                           ;OBCII_PIC18F46K22.c: 561:     UART1_SendString("ATI\r");
  4724   002B98  0ED0               	movlw	low STR_5
  4725   002B9A  6E04               	movwf	UART1_SendString@string^0,c
  4726   002B9C  0EFF               	movlw	high STR_5
  4727   002B9E  6E05               	movwf	(UART1_SendString@string+1)^0,c
  4728   002BA0  EC39  F018         	call	_UART1_SendString	;wreg free
  4729                           
  4730                           ;OBCII_PIC18F46K22.c: 563:     while(!message_complete) {
  4731   002BA4  EFF5  F015         	goto	l4338
  4732   002BA8                     l287:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;OBCII_PIC18F46K22.c: 565:         if (PORTCbits.RC5 == 0) {
  4736   002BA8  BA82               	btfsc	130,5,c	;volatile
  4737   002BAA  EFD9  F015         	goto	u4431
  4738   002BAE  EFDB  F015         	goto	u4430
  4739   002BB2                     u4431:
  4740   002BB2  EFF3  F015         	goto	l4336
  4741   002BB6                     u4430:
  4742   002BB6                     
  4743                           ; BSR set to: 0
  4744                           ;OBCII_PIC18F46K22.c: 566:             _delay((unsigned long)((20)*(16000000/4000.0)));
  4745   002BB6  0E68               	movlw	104
  4746   002BB8  6E0B               	movwf	??_print_ELMVer^0,c
  4747   002BBA  0EE4               	movlw	228
  4748   002BBC                     u6797:
  4749   002BBC  2EE8               	decfsz	wreg,f,c
  4750   002BBE  D7FE               	bra	u6797
  4751   002BC0  2E0B               	decfsz	??_print_ELMVer^0,f,c
  4752   002BC2  D7FC               	bra	u6797
  4753   002BC4  D000               	nop2	
  4754   002BC6                     
  4755                           ;OBCII_PIC18F46K22.c: 567:             if (PORTCbits.RC5 == 0) {
  4756   002BC6  BA82               	btfsc	130,5,c	;volatile
  4757   002BC8  EFE8  F015         	goto	u4441
  4758   002BCC  EFEA  F015         	goto	u4440
  4759   002BD0                     u4441:
  4760   002BD0  EFF3  F015         	goto	l4336
  4761   002BD4                     u4440:
  4762   002BD4                     
  4763                           ;OBCII_PIC18F46K22.c: 568:                 LCD_clear();
  4764   002BD4  EC97  F019         	call	_LCD_clear	;wreg free
  4765   002BD8                     
  4766                           ;OBCII_PIC18F46K22.c: 569:                 display_mm();
  4767   002BD8  EC57  F019         	call	_display_mm	;wreg free
  4768   002BDC                     
  4769                           ;OBCII_PIC18F46K22.c: 570:                 menu_sel = -1;
  4770   002BDC  0100               	movlb	0	; () banked
  4771   002BDE  69F3               	setf	_menu_sel& (0+255),b
  4772   002BE0  69F4               	setf	(_menu_sel+1)& (0+255),b
  4773                           
  4774                           ;OBCII_PIC18F46K22.c: 571:                 break;
  4775   002BE2  EFFE  F015         	goto	l4340
  4776   002BE6                     l4336:
  4777                           
  4778                           ;OBCII_PIC18F46K22.c: 574:         parsing_notif();
  4779   002BE6  ECA6  F019         	call	_parsing_notif	;wreg free
  4780   002BEA                     l4338:
  4781                           
  4782                           ;OBCII_PIC18F46K22.c: 563:     while(!message_complete) {
  4783   002BEA  0100               	movlb	0	; () banked
  4784   002BEC  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  4785   002BEE  B4D8               	btfsc	status,2,c
  4786   002BF0  EFFC  F015         	goto	u4451
  4787   002BF4  EFFE  F015         	goto	u4450
  4788   002BF8                     u4451:
  4789   002BF8  EFD4  F015         	goto	l287
  4790   002BFC                     u4450:
  4791   002BFC                     l4340:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;OBCII_PIC18F46K22.c: 576:     clear_parsing_notif();
  4795   002BFC  ECB2  F019         	call	_clear_parsing_notif	;wreg free
  4796   002C00                     
  4797                           ;OBCII_PIC18F46K22.c: 578:     LCD_cursor_set(1,1);
  4798   002C00  0E01               	movlw	1
  4799   002C02  6E06               	movwf	LCD_cursor_set@column^0,c
  4800   002C04  0E01               	movlw	1
  4801   002C06  ECDA  F017         	call	_LCD_cursor_set
  4802   002C0A                     
  4803                           ;OBCII_PIC18F46K22.c: 579:     LCD_write_string("OS:");
  4804   002C0A  0EE2               	movlw	low STR_29
  4805   002C0C  6E06               	movwf	LCD_write_string@string^0,c
  4806   002C0E  0EFF               	movlw	high STR_29
  4807   002C10  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4808   002C12  EC94  F016         	call	_LCD_write_string	;wreg free
  4809   002C16                     
  4810                           ;OBCII_PIC18F46K22.c: 580:     LCD_write_string(buffer);
  4811   002C16  0E00               	movlw	low _buffer
  4812   002C18  6E06               	movwf	LCD_write_string@string^0,c
  4813   002C1A  0E02               	movlw	high _buffer
  4814   002C1C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4815   002C1E  EC94  F016         	call	_LCD_write_string	;wreg free
  4816   002C22                     
  4817                           ;OBCII_PIC18F46K22.c: 583:     buffer_count = 0;
  4818   002C22  0100               	movlb	0	; () banked
  4819   002C24  6BD2               	clrf	_buffer_count& (0+255),b
  4820   002C26                     
  4821                           ; BSR set to: 0
  4822                           ;OBCII_PIC18F46K22.c: 584:     message_complete = 0;
  4823   002C26  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  4824   002C28                     
  4825                           ; BSR set to: 0
  4826   002C28  0012               	return		;funcret
  4827   002C2A                     __end_of_print_ELMVer:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _diagnostic_trouble_codes *****************
  4831 ;; Defined at:
  4832 ;;		line 643 in file "OBCII_PIC18F46K22.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;  byte2_str       3   59[BANK0 ] unsigned char [3]
  4837 ;;  byte1_str       3   56[BANK0 ] unsigned char [3]
  4838 ;;  byte2           2   64[BANK0 ] unsigned int 
  4839 ;;  byte1           2   62[BANK0 ] unsigned int 
  4840 ;;  i               2   68[BANK0 ] int 
  4841 ;;  dtc_index       2   66[BANK0 ] int 
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;Total ram usage:       16 bytes
  4856 ;; Hardware stack levels used: 1
  4857 ;; Hardware stack levels required when called: 10
  4858 ;; This function calls:
  4859 ;;		_LCD_clear
  4860 ;;		_LCD_cursor_set
  4861 ;;		_LCD_write_string
  4862 ;;		_UART1_SendString
  4863 ;;		_clear_parsing_notif
  4864 ;;		_decode_dtc
  4865 ;;		_parsing_notif
  4866 ;;		_sscanf
  4867 ;;		_strstr
  4868 ;; This function is called by:
  4869 ;;		_main_menu
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text17
  4874   0009B0                     __ptext17:
  4875                           	callstack 0
  4876   0009B0                     _diagnostic_trouble_codes:
  4877                           	callstack 19
  4878   0009B0                     
  4879                           ;OBCII_PIC18F46K22.c: 645:     int dtc_index = 0;
  4880   0009B0  0E00               	movlw	0
  4881   0009B2  0100               	movlb	0	; () banked
  4882   0009B4  6FA3               	movwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),b
  4883   0009B6  0E00               	movlw	0
  4884   0009B8  6FA2               	movwf	diagnostic_trouble_codes@dtc_index& (0+255),b
  4885                           
  4886                           ;OBCII_PIC18F46K22.c: 646:     int i = 0;
  4887   0009BA  0E00               	movlw	0
  4888   0009BC  6FA5               	movwf	(diagnostic_trouble_codes@i+1)& (0+255),b
  4889   0009BE  0E00               	movlw	0
  4890   0009C0  6FA4               	movwf	diagnostic_trouble_codes@i& (0+255),b
  4891   0009C2                     
  4892                           ; BSR set to: 0
  4893                           ;OBCII_PIC18F46K22.c: 648:     LCD_cursor_set(1,1);
  4894   0009C2  0E01               	movlw	1
  4895   0009C4  6E06               	movwf	LCD_cursor_set@column^0,c
  4896   0009C6  0E01               	movlw	1
  4897   0009C8  ECDA  F017         	call	_LCD_cursor_set
  4898   0009CC                     
  4899                           ;OBCII_PIC18F46K22.c: 649:     LCD_write_string("DTC's Requested");
  4900   0009CC  0E1F               	movlw	low STR_35
  4901   0009CE  6E06               	movwf	LCD_write_string@string^0,c
  4902   0009D0  0EFF               	movlw	high STR_35
  4903   0009D2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4904   0009D4  EC94  F016         	call	_LCD_write_string	;wreg free
  4905   0009D8                     
  4906                           ;OBCII_PIC18F46K22.c: 650:     LCD_cursor_set(2,1);
  4907   0009D8  0E01               	movlw	1
  4908   0009DA  6E06               	movwf	LCD_cursor_set@column^0,c
  4909   0009DC  0E02               	movlw	2
  4910   0009DE  ECDA  F017         	call	_LCD_cursor_set
  4911   0009E2                     
  4912                           ;OBCII_PIC18F46K22.c: 651:     LCD_write_string("Loading...");
  4913   0009E2  0E85               	movlw	low STR_36
  4914   0009E4  6E06               	movwf	LCD_write_string@string^0,c
  4915   0009E6  0EFF               	movlw	high STR_36
  4916   0009E8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4917   0009EA  EC94  F016         	call	_LCD_write_string	;wreg free
  4918   0009EE                     
  4919                           ;OBCII_PIC18F46K22.c: 652:     UART1_SendString("03\r");
  4920   0009EE  0EDA               	movlw	low STR_37
  4921   0009F0  6E04               	movwf	UART1_SendString@string^0,c
  4922   0009F2  0EFF               	movlw	high STR_37
  4923   0009F4  6E05               	movwf	(UART1_SendString@string+1)^0,c
  4924   0009F6  EC39  F018         	call	_UART1_SendString	;wreg free
  4925                           
  4926                           ;OBCII_PIC18F46K22.c: 654:     while (!message_complete) {
  4927   0009FA  EF01  F005         	goto	l5636
  4928   0009FE                     l5634:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;OBCII_PIC18F46K22.c: 655:         parsing_notif();
  4932   0009FE  ECA6  F019         	call	_parsing_notif	;wreg free
  4933   000A02                     l5636:
  4934                           
  4935                           ;OBCII_PIC18F46K22.c: 654:     while (!message_complete) {
  4936   000A02  0100               	movlb	0	; () banked
  4937   000A04  51D0               	movf	_message_complete& (0+255),w,b	;volatile
  4938   000A06  B4D8               	btfsc	status,2,c
  4939   000A08  EF08  F005         	goto	u6351
  4940   000A0C  EF0A  F005         	goto	u6350
  4941   000A10                     u6351:
  4942   000A10  EFFF  F004         	goto	l5634
  4943   000A14                     u6350:
  4944   000A14                     
  4945                           ; BSR set to: 0
  4946                           ;OBCII_PIC18F46K22.c: 657:     clear_parsing_notif();
  4947   000A14  ECB2  F019         	call	_clear_parsing_notif	;wreg free
  4948                           
  4949                           ;OBCII_PIC18F46K22.c: 660:     while (!(buffer[i] == '4' && buffer[i+1] == '3')) {
  4950   000A18  EF30  F005         	goto	l5646
  4951   000A1C                     l5640:
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;OBCII_PIC18F46K22.c: 661:         i++;
  4955   000A1C  4BA4               	infsnz	diagnostic_trouble_codes@i& (0+255),f,b
  4956   000A1E  2BA5               	incf	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  4957   000A20                     
  4958                           ; BSR set to: 0
  4959                           ;OBCII_PIC18F46K22.c: 662:         if (buffer[i] == '>' || buffer[i+1] == '>') return;
  4960   000A20  0E00               	movlw	low _buffer
  4961   000A22  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  4962   000A24  6ED9               	movwf	fsr2l,c
  4963   000A26  0E02               	movlw	high _buffer
  4964   000A28  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  4965   000A2A  6EDA               	movwf	fsr2h,c
  4966   000A2C  0E3E               	movlw	62
  4967   000A2E  18DE               	xorwf	postinc2,w,c
  4968   000A30  B4D8               	btfsc	status,2,c
  4969   000A32  EF1D  F005         	goto	u6361
  4970   000A36  EF1F  F005         	goto	u6360
  4971   000A3A                     u6361:
  4972   000A3A  EF80  F006         	goto	l323
  4973   000A3E                     u6360:
  4974   000A3E                     
  4975                           ; BSR set to: 0
  4976   000A3E  0E01               	movlw	low (_buffer+1)
  4977   000A40  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  4978   000A42  6ED9               	movwf	fsr2l,c
  4979   000A44  0E02               	movlw	high (_buffer+1)
  4980   000A46  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  4981   000A48  6EDA               	movwf	fsr2h,c
  4982   000A4A  0E3E               	movlw	62
  4983   000A4C  18DE               	xorwf	postinc2,w,c
  4984   000A4E  A4D8               	btfss	status,2,c
  4985   000A50  EF2C  F005         	goto	u6371
  4986   000A54  EF2E  F005         	goto	u6370
  4987   000A58                     u6371:
  4988   000A58  EF30  F005         	goto	l5646
  4989   000A5C                     u6370:
  4990   000A5C  EF80  F006         	goto	l323
  4991   000A60                     l5646:
  4992                           
  4993                           ;OBCII_PIC18F46K22.c: 660:     while (!(buffer[i] == '4' && buffer[i+1] == '3')) {
  4994   000A60  0E00               	movlw	low _buffer
  4995   000A62  0100               	movlb	0	; () banked
  4996   000A64  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  4997   000A66  6ED9               	movwf	fsr2l,c
  4998   000A68  0E02               	movlw	high _buffer
  4999   000A6A  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5000   000A6C  6EDA               	movwf	fsr2h,c
  5001   000A6E  0E34               	movlw	52
  5002   000A70  18DE               	xorwf	postinc2,w,c
  5003   000A72  A4D8               	btfss	status,2,c
  5004   000A74  EF3E  F005         	goto	u6381
  5005   000A78  EF40  F005         	goto	u6380
  5006   000A7C                     u6381:
  5007   000A7C  EF0E  F005         	goto	l5640
  5008   000A80                     u6380:
  5009   000A80                     
  5010                           ; BSR set to: 0
  5011   000A80  0E01               	movlw	low (_buffer+1)
  5012   000A82  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5013   000A84  6ED9               	movwf	fsr2l,c
  5014   000A86  0E02               	movlw	high (_buffer+1)
  5015   000A88  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5016   000A8A  6EDA               	movwf	fsr2h,c
  5017   000A8C  0E33               	movlw	51
  5018   000A8E  18DE               	xorwf	postinc2,w,c
  5019   000A90  A4D8               	btfss	status,2,c
  5020   000A92  EF4D  F005         	goto	u6391
  5021   000A96  EF4F  F005         	goto	u6390
  5022   000A9A                     u6391:
  5023   000A9A  EF0E  F005         	goto	l5640
  5024   000A9E                     u6390:
  5025   000A9E                     
  5026                           ; BSR set to: 0
  5027                           ;OBCII_PIC18F46K22.c: 664:     i += 2;
  5028   000A9E  0E02               	movlw	2
  5029   000AA0  27A4               	addwf	diagnostic_trouble_codes@i& (0+255),f,b
  5030   000AA2  0E00               	movlw	0
  5031   000AA4  23A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5032                           
  5033                           ;OBCII_PIC18F46K22.c: 667:     while (buffer[i] != '>' && dtc_index < 10) {
  5034   000AA6  EF05  F006         	goto	l5684
  5035   000AAA                     l5652:
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;OBCII_PIC18F46K22.c: 668:         if (buffer[i] == ' ' || buffer[i] == '\r' || buffer[i
      +                          ] == '\n') {
  5039   000AAA  0E00               	movlw	low _buffer
  5040   000AAC  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5041   000AAE  6ED9               	movwf	fsr2l,c
  5042   000AB0  0E02               	movlw	high _buffer
  5043   000AB2  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5044   000AB4  6EDA               	movwf	fsr2h,c
  5045   000AB6  0E20               	movlw	32
  5046   000AB8  18DE               	xorwf	postinc2,w,c
  5047   000ABA  B4D8               	btfsc	status,2,c
  5048   000ABC  EF62  F005         	goto	u6401
  5049   000AC0  EF64  F005         	goto	u6400
  5050   000AC4                     u6401:
  5051   000AC4  EF82  F005         	goto	l5658
  5052   000AC8                     u6400:
  5053   000AC8                     
  5054                           ; BSR set to: 0
  5055   000AC8  0E00               	movlw	low _buffer
  5056   000ACA  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5057   000ACC  6ED9               	movwf	fsr2l,c
  5058   000ACE  0E02               	movlw	high _buffer
  5059   000AD0  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5060   000AD2  6EDA               	movwf	fsr2h,c
  5061   000AD4  0E0D               	movlw	13
  5062   000AD6  18DE               	xorwf	postinc2,w,c
  5063   000AD8  B4D8               	btfsc	status,2,c
  5064   000ADA  EF71  F005         	goto	u6411
  5065   000ADE  EF73  F005         	goto	u6410
  5066   000AE2                     u6411:
  5067   000AE2  EF82  F005         	goto	l5658
  5068   000AE6                     u6410:
  5069   000AE6                     
  5070                           ; BSR set to: 0
  5071   000AE6  0E00               	movlw	low _buffer
  5072   000AE8  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5073   000AEA  6ED9               	movwf	fsr2l,c
  5074   000AEC  0E02               	movlw	high _buffer
  5075   000AEE  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5076   000AF0  6EDA               	movwf	fsr2h,c
  5077   000AF2  0E0A               	movlw	10
  5078   000AF4  18DE               	xorwf	postinc2,w,c
  5079   000AF6  A4D8               	btfss	status,2,c
  5080   000AF8  EF80  F005         	goto	u6421
  5081   000AFC  EF82  F005         	goto	u6420
  5082   000B00                     u6421:
  5083   000B00  EF86  F005         	goto	l5660
  5084   000B04                     u6420:
  5085   000B04                     l5658:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;OBCII_PIC18F46K22.c: 669:             i++;
  5089   000B04  4BA4               	infsnz	diagnostic_trouble_codes@i& (0+255),f,b
  5090   000B06  2BA5               	incf	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5091                           
  5092                           ;OBCII_PIC18F46K22.c: 670:             continue;
  5093   000B08  EF05  F006         	goto	l5684
  5094   000B0C                     l5660:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;OBCII_PIC18F46K22.c: 673:         if (buffer[i+3] == '>') break;
  5098   000B0C  0E03               	movlw	low (_buffer+3)
  5099   000B0E  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5100   000B10  6ED9               	movwf	fsr2l,c
  5101   000B12  0E02               	movlw	high (_buffer+3)
  5102   000B14  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5103   000B16  6EDA               	movwf	fsr2h,c
  5104   000B18  0E3E               	movlw	62
  5105   000B1A  18DE               	xorwf	postinc2,w,c
  5106   000B1C  A4D8               	btfss	status,2,c
  5107   000B1E  EF93  F005         	goto	u6431
  5108   000B22  EF95  F005         	goto	u6430
  5109   000B26                     u6431:
  5110   000B26  EF97  F005         	goto	l5664
  5111   000B2A                     u6430:
  5112   000B2A  EF22  F006         	goto	l5688
  5113   000B2E                     l5664:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;OBCII_PIC18F46K22.c: 675:         char byte1_str[3] = { buffer[i], buffer[i+1], '>' };
  5117   000B2E  0E00               	movlw	0
  5118   000B30  6F98               	movwf	diagnostic_trouble_codes@byte1_str& (0+255),b
  5119   000B32  0E00               	movlw	0
  5120   000B34  6F99               	movwf	(diagnostic_trouble_codes@byte1_str+1)& (0+255),b
  5121   000B36  0E00               	movlw	0
  5122   000B38  6F9A               	movwf	(diagnostic_trouble_codes@byte1_str+2)& (0+255),b
  5123   000B3A                     
  5124                           ; BSR set to: 0
  5125   000B3A  0E00               	movlw	low _buffer
  5126   000B3C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5127   000B3E  6ED9               	movwf	fsr2l,c
  5128   000B40  0E02               	movlw	high _buffer
  5129   000B42  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5130   000B44  6EDA               	movwf	fsr2h,c
  5131   000B46  50DF               	movf	indf2,w,c
  5132   000B48  6F98               	movwf	diagnostic_trouble_codes@byte1_str& (0+255),b
  5133   000B4A                     
  5134                           ; BSR set to: 0
  5135   000B4A  0E01               	movlw	low (_buffer+1)
  5136   000B4C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5137   000B4E  6ED9               	movwf	fsr2l,c
  5138   000B50  0E02               	movlw	high (_buffer+1)
  5139   000B52  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5140   000B54  6EDA               	movwf	fsr2h,c
  5141   000B56  50DF               	movf	indf2,w,c
  5142   000B58  6F99               	movwf	(diagnostic_trouble_codes@byte1_str+1)& (0+255),b
  5143   000B5A  0E3E               	movlw	62
  5144   000B5C  6F9A               	movwf	(diagnostic_trouble_codes@byte1_str+2)& (0+255),b
  5145                           
  5146                           ;OBCII_PIC18F46K22.c: 676:         char byte2_str[3] = { buffer[i+2], buffer[i+3], '>' }
      +                          ;
  5147   000B5E  0E00               	movlw	0
  5148   000B60  6F9B               	movwf	diagnostic_trouble_codes@byte2_str& (0+255),b
  5149   000B62  0E00               	movlw	0
  5150   000B64  6F9C               	movwf	(diagnostic_trouble_codes@byte2_str+1)& (0+255),b
  5151   000B66  0E00               	movlw	0
  5152   000B68  6F9D               	movwf	(diagnostic_trouble_codes@byte2_str+2)& (0+255),b
  5153   000B6A                     
  5154                           ; BSR set to: 0
  5155   000B6A  0E02               	movlw	low (_buffer+2)
  5156   000B6C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5157   000B6E  6ED9               	movwf	fsr2l,c
  5158   000B70  0E02               	movlw	high (_buffer+2)
  5159   000B72  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5160   000B74  6EDA               	movwf	fsr2h,c
  5161   000B76  50DF               	movf	indf2,w,c
  5162   000B78  6F9B               	movwf	diagnostic_trouble_codes@byte2_str& (0+255),b
  5163   000B7A                     
  5164                           ; BSR set to: 0
  5165   000B7A  0E03               	movlw	low (_buffer+3)
  5166   000B7C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5167   000B7E  6ED9               	movwf	fsr2l,c
  5168   000B80  0E02               	movlw	high (_buffer+3)
  5169   000B82  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5170   000B84  6EDA               	movwf	fsr2h,c
  5171   000B86  50DF               	movf	indf2,w,c
  5172   000B88  6F9C               	movwf	(diagnostic_trouble_codes@byte2_str+1)& (0+255),b
  5173   000B8A  0E3E               	movlw	62
  5174   000B8C  6F9D               	movwf	(diagnostic_trouble_codes@byte2_str+2)& (0+255),b
  5175                           
  5176                           ;OBCII_PIC18F46K22.c: 677:         unsigned int byte1 = 0, byte2 = 0;
  5177   000B8E  0E00               	movlw	0
  5178   000B90  6F9F               	movwf	(diagnostic_trouble_codes@byte1+1)& (0+255),b
  5179   000B92  0E00               	movlw	0
  5180   000B94  6F9E               	movwf	diagnostic_trouble_codes@byte1& (0+255),b
  5181   000B96  0E00               	movlw	0
  5182   000B98  6FA1               	movwf	(diagnostic_trouble_codes@byte2+1)& (0+255),b
  5183   000B9A  0E00               	movlw	0
  5184   000B9C  6FA0               	movwf	diagnostic_trouble_codes@byte2& (0+255),b
  5185   000B9E                     
  5186                           ; BSR set to: 0
  5187                           ;OBCII_PIC18F46K22.c: 679:         sscanf(byte1_str, "%x", &byte1);
  5188   000B9E  0E98               	movlw	low diagnostic_trouble_codes@byte1_str
  5189   000BA0  6F85               	movwf	sscanf@s& (0+255),b
  5190   000BA2  0EF5               	movlw	low STR_38
  5191   000BA4  6F86               	movwf	sscanf@fmt& (0+255),b
  5192   000BA6  0EFF               	movlw	high STR_38
  5193   000BA8  6F87               	movwf	(sscanf@fmt+1)& (0+255),b
  5194   000BAA  0E9E               	movlw	low diagnostic_trouble_codes@byte1
  5195   000BAC  6F88               	movwf	(?_sscanf+3)& (0+255),b
  5196   000BAE  6B89               	clrf	(?_sscanf+4)& (0+255),b
  5197   000BB0  EC3E  F019         	call	_sscanf	;wreg free
  5198   000BB4                     
  5199                           ;OBCII_PIC18F46K22.c: 680:         sscanf(byte2_str, "%x", &byte2);
  5200   000BB4  0E9B               	movlw	low diagnostic_trouble_codes@byte2_str
  5201   000BB6  0100               	movlb	0	; () banked
  5202   000BB8  6F85               	movwf	sscanf@s& (0+255),b
  5203   000BBA  0EF5               	movlw	low STR_38
  5204   000BBC  6F86               	movwf	sscanf@fmt& (0+255),b
  5205   000BBE  0EFF               	movlw	high STR_38
  5206   000BC0  6F87               	movwf	(sscanf@fmt+1)& (0+255),b
  5207   000BC2  0EA0               	movlw	low diagnostic_trouble_codes@byte2
  5208   000BC4  6F88               	movwf	(?_sscanf+3)& (0+255),b
  5209   000BC6  6B89               	clrf	(?_sscanf+4)& (0+255),b
  5210   000BC8  EC3E  F019         	call	_sscanf	;wreg free
  5211   000BCC                     
  5212                           ;OBCII_PIC18F46K22.c: 681:         decode_dtc((uint8_t)byte1, (uint8_t)byte2, dtc_codes[
      +                          dtc_index]);
  5213   000BCC  C09E  F04E         	movff	diagnostic_trouble_codes@byte1,decode_dtc@b1
  5214   000BD0  6A4F               	clrf	(decode_dtc@b1+1)^0,c
  5215   000BD2  C0A0  F050         	movff	diagnostic_trouble_codes@byte2,decode_dtc@b2
  5216   000BD6  6A51               	clrf	(decode_dtc@b2+1)^0,c
  5217   000BD8  0E06               	movlw	6
  5218   000BDA  0100               	movlb	0	; () banked
  5219   000BDC  03A2               	mulwf	diagnostic_trouble_codes@dtc_index& (0+255),b
  5220   000BDE  CFF3 F096          	movff	prodl,??_diagnostic_trouble_codes
  5221   000BE2  CFF4 F097          	movff	prodh,??_diagnostic_trouble_codes+1
  5222   000BE6  03A3               	mulwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),b
  5223   000BE8  50F3               	movf	prodl,w,c
  5224   000BEA  2797               	addwf	(??_diagnostic_trouble_codes+1)& (0+255),f,b
  5225   000BEC  0E00               	movlw	low _dtc_codes
  5226   000BEE  2596               	addwf	??_diagnostic_trouble_codes& (0+255),w,b
  5227   000BF0  6E52               	movwf	decode_dtc@dtc^0,c
  5228   000BF2  0E01               	movlw	high _dtc_codes
  5229   000BF4  2197               	addwfc	(??_diagnostic_trouble_codes+1)& (0+255),w,b
  5230   000BF6  6E53               	movwf	(decode_dtc@dtc+1)^0,c
  5231   000BF8  ECF6  F011         	call	_decode_dtc	;wreg free
  5232   000BFC                     
  5233                           ;OBCII_PIC18F46K22.c: 682:         dtc_index++;
  5234   000BFC  0100               	movlb	0	; () banked
  5235   000BFE  4BA2               	infsnz	diagnostic_trouble_codes@dtc_index& (0+255),f,b
  5236   000C00  2BA3               	incf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),f,b
  5237   000C02                     
  5238                           ; BSR set to: 0
  5239                           ;OBCII_PIC18F46K22.c: 683:         i += 4;
  5240   000C02  0E04               	movlw	4
  5241   000C04  27A4               	addwf	diagnostic_trouble_codes@i& (0+255),f,b
  5242   000C06  0E00               	movlw	0
  5243   000C08  23A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5244   000C0A                     l5684:
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;OBCII_PIC18F46K22.c: 667:     while (buffer[i] != '>' && dtc_index < 10) {
  5248   000C0A  0E00               	movlw	low _buffer
  5249   000C0C  25A4               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5250   000C0E  6ED9               	movwf	fsr2l,c
  5251   000C10  0E02               	movlw	high _buffer
  5252   000C12  21A5               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5253   000C14  6EDA               	movwf	fsr2h,c
  5254   000C16  0E3E               	movlw	62
  5255   000C18  18DE               	xorwf	postinc2,w,c
  5256   000C1A  B4D8               	btfsc	status,2,c
  5257   000C1C  EF12  F006         	goto	u6441
  5258   000C20  EF14  F006         	goto	u6440
  5259   000C24                     u6441:
  5260   000C24  EF22  F006         	goto	l5688
  5261   000C28                     u6440:
  5262   000C28                     
  5263                           ; BSR set to: 0
  5264   000C28  BFA3               	btfsc	(diagnostic_trouble_codes@dtc_index+1)& (0+255),7,b
  5265   000C2A  EF20  F006         	goto	u6451
  5266   000C2E  51A3               	movf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),w,b
  5267   000C30  E109               	bnz	u6450
  5268   000C32  0E0A               	movlw	10
  5269   000C34  5DA2               	subwf	diagnostic_trouble_codes@dtc_index& (0+255),w,b
  5270   000C36  A0D8               	btfss	status,0,c
  5271   000C38  EF20  F006         	goto	u6451
  5272   000C3C  EF22  F006         	goto	u6450
  5273   000C40                     u6451:
  5274   000C40  EF55  F005         	goto	l5652
  5275   000C44                     u6450:
  5276   000C44                     l5688:
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;OBCII_PIC18F46K22.c: 687:     if (dtc_index == 0 || strstr(buffer, "SEARCHING...STOPPED
      +                          ") != ((void*)0)) {
  5280   000C44  51A2               	movf	diagnostic_trouble_codes@dtc_index& (0+255),w,b
  5281   000C46  11A3               	iorwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),w,b
  5282   000C48  B4D8               	btfsc	status,2,c
  5283   000C4A  EF29  F006         	goto	u6461
  5284   000C4E  EF2B  F006         	goto	u6460
  5285   000C52                     u6461:
  5286   000C52  EF3E  F006         	goto	l5692
  5287   000C56                     u6460:
  5288   000C56                     
  5289                           ; BSR set to: 0
  5290   000C56  0E00               	movlw	low _buffer
  5291   000C58  6E0A               	movwf	strstr@h^0,c
  5292   000C5A  0E02               	movlw	high _buffer
  5293   000C5C  6E0B               	movwf	(strstr@h+1)^0,c
  5294   000C5E  0E85               	movlw	low STR_40
  5295   000C60  6E0C               	movwf	strstr@n^0,c
  5296   000C62  0EFE               	movlw	high STR_40
  5297   000C64  6E0D               	movwf	(strstr@n+1)^0,c
  5298   000C66  EC28  F013         	call	_strstr	;wreg free
  5299   000C6A  500A               	movf	?_strstr^0,w,c
  5300   000C6C  100B               	iorwf	(?_strstr+1)^0,w,c
  5301   000C6E  B4D8               	btfsc	status,2,c
  5302   000C70  EF3C  F006         	goto	u6471
  5303   000C74  EF3E  F006         	goto	u6470
  5304   000C78                     u6471:
  5305   000C78  EF4B  F006         	goto	l5696
  5306   000C7C                     u6470:
  5307   000C7C                     l5692:
  5308                           
  5309                           ;OBCII_PIC18F46K22.c: 688:         LCD_clear();
  5310   000C7C  EC97  F019         	call	_LCD_clear	;wreg free
  5311                           
  5312                           ;OBCII_PIC18F46K22.c: 689:         LCD_cursor_set(1,1);
  5313   000C80  0E01               	movlw	1
  5314   000C82  6E06               	movwf	LCD_cursor_set@column^0,c
  5315   000C84  0E01               	movlw	1
  5316   000C86  ECDA  F017         	call	_LCD_cursor_set
  5317   000C8A                     
  5318                           ;OBCII_PIC18F46K22.c: 690:         LCD_write_string("No DTCs Found");
  5319   000C8A  0E77               	movlw	low STR_41
  5320   000C8C  6E06               	movwf	LCD_write_string@string^0,c
  5321   000C8E  0EFF               	movlw	high STR_41
  5322   000C90  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5323   000C92  EC94  F016         	call	_LCD_write_string	;wreg free
  5324   000C96                     l5696:
  5325                           
  5326                           ;OBCII_PIC18F46K22.c: 692:     if(dtc_index >= 1) {
  5327   000C96  0100               	movlb	0	; () banked
  5328   000C98  BFA3               	btfsc	(diagnostic_trouble_codes@dtc_index+1)& (0+255),7,b
  5329   000C9A  EF57  F006         	goto	u6481
  5330   000C9E  51A3               	movf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),w,b
  5331   000CA0  E108               	bnz	u6480
  5332   000CA2  05A2               	decf	diagnostic_trouble_codes@dtc_index& (0+255),w,b
  5333   000CA4  A0D8               	btfss	status,0,c
  5334   000CA6  EF57  F006         	goto	u6481
  5335   000CAA  EF59  F006         	goto	u6480
  5336   000CAE                     u6481:
  5337   000CAE  EF7D  F006         	goto	l5706
  5338   000CB2                     u6480:
  5339   000CB2                     
  5340                           ; BSR set to: 0
  5341                           ;OBCII_PIC18F46K22.c: 693:             LCD_clear();
  5342   000CB2  EC97  F019         	call	_LCD_clear	;wreg free
  5343                           
  5344                           ;OBCII_PIC18F46K22.c: 694:             LCD_cursor_set(1,1);
  5345   000CB6  0E01               	movlw	1
  5346   000CB8  6E06               	movwf	LCD_cursor_set@column^0,c
  5347   000CBA  0E01               	movlw	1
  5348   000CBC  ECDA  F017         	call	_LCD_cursor_set
  5349   000CC0                     
  5350                           ;OBCII_PIC18F46K22.c: 695:             LCD_write_string("DTC(s) Found:");
  5351   000CC0  0E5B               	movlw	low STR_42
  5352   000CC2  6E06               	movwf	LCD_write_string@string^0,c
  5353   000CC4  0EFF               	movlw	high STR_42
  5354   000CC6  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5355   000CC8  EC94  F016         	call	_LCD_write_string	;wreg free
  5356   000CCC                     
  5357                           ;OBCII_PIC18F46K22.c: 696:             LCD_cursor_set(2,1);
  5358   000CCC  0E01               	movlw	1
  5359   000CCE  6E06               	movwf	LCD_cursor_set@column^0,c
  5360   000CD0  0E02               	movlw	2
  5361   000CD2  ECDA  F017         	call	_LCD_cursor_set
  5362   000CD6                     
  5363                           ;OBCII_PIC18F46K22.c: 697:             LCD_write_string(dtc_codes[dtc_index]);
  5364   000CD6  0E06               	movlw	6
  5365   000CD8  0100               	movlb	0	; () banked
  5366   000CDA  03A2               	mulwf	diagnostic_trouble_codes@dtc_index& (0+255),b
  5367   000CDC  CFF3 F096          	movff	prodl,??_diagnostic_trouble_codes
  5368   000CE0  CFF4 F097          	movff	prodh,??_diagnostic_trouble_codes+1
  5369   000CE4  03A3               	mulwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),b
  5370   000CE6  50F3               	movf	prodl,w,c
  5371   000CE8  2797               	addwf	(??_diagnostic_trouble_codes+1)& (0+255),f,b
  5372   000CEA  0E00               	movlw	low _dtc_codes
  5373   000CEC  2596               	addwf	??_diagnostic_trouble_codes& (0+255),w,b
  5374   000CEE  6E06               	movwf	LCD_write_string@string^0,c
  5375   000CF0  0E01               	movlw	high _dtc_codes
  5376   000CF2  2197               	addwfc	(??_diagnostic_trouble_codes+1)& (0+255),w,b
  5377   000CF4  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5378   000CF6  EC94  F016         	call	_LCD_write_string	;wreg free
  5379   000CFA                     l5706:
  5380                           
  5381                           ;OBCII_PIC18F46K22.c: 701:     buffer_count = 0;
  5382   000CFA  0100               	movlb	0	; () banked
  5383   000CFC  6BD2               	clrf	_buffer_count& (0+255),b
  5384   000CFE                     
  5385                           ; BSR set to: 0
  5386                           ;OBCII_PIC18F46K22.c: 702:     message_complete = 0;
  5387   000CFE  6BD0               	clrf	_message_complete& (0+255),b	;volatile
  5388   000D00                     l323:
  5389                           
  5390                           ; BSR set to: 0
  5391   000D00  0012               	return		;funcret
  5392   000D02                     __end_of_diagnostic_trouble_codes:
  5393                           	callstack 0
  5394                           
  5395 ;; *************** function _strstr *****************
  5396 ;; Defined at:
  5397 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  h               2    9[COMRAM] PTR const unsigned char 
  5400 ;;		 -> NULL(0), buffer(256), 
  5401 ;;  n               2   11[COMRAM] PTR const unsigned char 
  5402 ;;		 -> STR_40(20), 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  nl              2   13[COMRAM] unsigned int 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  2    9[COMRAM] PTR unsigned char 
  5407 ;; Registers used:
  5408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;Total ram usage:        6 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; Hardware stack levels required when called: 2
  5421 ;; This function calls:
  5422 ;;		_strchr
  5423 ;;		_strlen
  5424 ;;		_strncmp
  5425 ;; This function is called by:
  5426 ;;		_diagnostic_trouble_codes
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text18
  5431   002650                     __ptext18:
  5432                           	callstack 0
  5433   002650                     _strstr:
  5434                           	callstack 26
  5435   002650  500C               	movf	strstr@n^0,w,c
  5436   002652  100D               	iorwf	(strstr@n+1)^0,w,c
  5437   002654  B4D8               	btfsc	status,2,c
  5438   002656  EF2F  F013         	goto	u4511
  5439   00265A  EF31  F013         	goto	u4510
  5440   00265E                     u4511:
  5441   00265E  EF83  F013         	goto	l4428
  5442   002662                     u4510:
  5443   002662  C00C  F003         	movff	strstr@n,strlen@s
  5444   002666  C00D  F004         	movff	strstr@n+1,strlen@s+1
  5445   00266A  ECEB  F018         	call	_strlen	;wreg free
  5446   00266E  C003  F00E         	movff	?_strlen,strstr@nl
  5447   002672  C004  F00F         	movff	?_strlen+1,strstr@nl+1
  5448   002676  EF6E  F013         	goto	l4424
  5449   00267A                     l4416:
  5450   00267A  C00A  F003         	movff	strstr@h,strncmp@l
  5451   00267E  C00B  F004         	movff	strstr@h+1,strncmp@l+1
  5452   002682  C00C  F005         	movff	strstr@n,strncmp@r
  5453   002686  C00D  F006         	movff	strstr@n+1,strncmp@r+1
  5454   00268A  C00E  F007         	movff	strstr@nl,strncmp@n
  5455   00268E  C00F  F008         	movff	strstr@nl+1,strncmp@n+1
  5456   002692  EC63  F012         	call	_strncmp	;wreg free
  5457   002696  5003               	movf	?_strncmp^0,w,c
  5458   002698  1004               	iorwf	(?_strncmp+1)^0,w,c
  5459   00269A  A4D8               	btfss	status,2,c
  5460   00269C  EF52  F013         	goto	u4521
  5461   0026A0  EF54  F013         	goto	u4520
  5462   0026A4                     u4521:
  5463   0026A4  EF5A  F013         	goto	l4422
  5464   0026A8                     u4520:
  5465   0026A8  C00A  F00A         	movff	strstr@h,?_strstr
  5466   0026AC  C00B  F00B         	movff	strstr@h+1,?_strstr+1
  5467   0026B0  EF87  F013         	goto	l1502
  5468   0026B4                     l4422:
  5469   0026B4  0E01               	movlw	1
  5470   0026B6  240A               	addwf	strstr@h^0,w,c
  5471   0026B8  6E03               	movwf	strchr@s^0,c
  5472   0026BA  0E00               	movlw	0
  5473   0026BC  200B               	addwfc	(strstr@h+1)^0,w,c
  5474   0026BE  6E04               	movwf	(strchr@s+1)^0,c
  5475   0026C0  C00C  FFF6         	movff	strstr@n,tblptrl
  5476   0026C4  C00D  FFF7         	movff	strstr@n+1,tblptrh
  5477   0026C8                     	if	0	;tblptru may be non-zero
  5478   0026C8                     	endif
  5479   0026C8                     	if	0	;tblptru may be non-zero
  5480   0026C8                     	endif
  5481   0026C8  0008               	tblrd		*
  5482   0026CA  50F5               	movf	tablat,w,c
  5483   0026CC  6E05               	movwf	strchr@c^0,c
  5484   0026CE  6A06               	clrf	(strchr@c+1)^0,c
  5485   0026D0  EC64  F018         	call	_strchr	;wreg free
  5486   0026D4  C003  F00A         	movff	?_strchr,strstr@h
  5487   0026D8  C004  F00B         	movff	?_strchr+1,strstr@h+1
  5488   0026DC                     l4424:
  5489   0026DC  500A               	movf	strstr@h^0,w,c
  5490   0026DE  100B               	iorwf	(strstr@h+1)^0,w,c
  5491   0026E0  B4D8               	btfsc	status,2,c
  5492   0026E2  EF75  F013         	goto	u4531
  5493   0026E6  EF77  F013         	goto	u4530
  5494   0026EA                     u4531:
  5495   0026EA  EF83  F013         	goto	l4428
  5496   0026EE                     u4530:
  5497   0026EE  C00A  FFD9         	movff	strstr@h,fsr2l
  5498   0026F2  C00B  FFDA         	movff	strstr@h+1,fsr2h
  5499   0026F6  50DF               	movf	indf2,w,c
  5500   0026F8  A4D8               	btfss	status,2,c
  5501   0026FA  EF81  F013         	goto	u4541
  5502   0026FE  EF83  F013         	goto	u4540
  5503   002702                     u4541:
  5504   002702  EF3D  F013         	goto	l4416
  5505   002706                     u4540:
  5506   002706                     l4428:
  5507   002706  0E00               	movlw	0
  5508   002708  6E0A               	movwf	?_strstr^0,c
  5509   00270A  0E00               	movlw	0
  5510   00270C  6E0B               	movwf	(?_strstr+1)^0,c
  5511   00270E                     l1502:
  5512   00270E  0012               	return		;funcret
  5513   002710                     __end_of_strstr:
  5514                           	callstack 0
  5515                           
  5516 ;; *************** function _strncmp *****************
  5517 ;; Defined at:
  5518 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  l               2    2[COMRAM] PTR const unsigned char 
  5521 ;;		 -> NULL(0), buffer(256), 
  5522 ;;  r               2    4[COMRAM] PTR const unsigned char 
  5523 ;;		 -> STR_40(20), 
  5524 ;;  n               2    6[COMRAM] unsigned int 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  2    2[COMRAM] int 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5536 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;Total ram usage:        7 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; Hardware stack levels required when called: 1
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_strstr
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text19
  5551   0024C6                     __ptext19:
  5552                           	callstack 0
  5553   0024C6                     _strncmp:
  5554                           	callstack 26
  5555   0024C6  0607               	decf	strncmp@n^0,f,c
  5556   0024C8  A0D8               	btfss	status,0,c
  5557   0024CA  0608               	decf	(strncmp@n+1)^0,f,c
  5558   0024CC  2807               	incf	strncmp@n^0,w,c
  5559   0024CE  E106               	bnz	u4261
  5560   0024D0  2808               	incf	(strncmp@n+1)^0,w,c
  5561   0024D2  A4D8               	btfss	status,2,c
  5562   0024D4  EF6E  F012         	goto	u4261
  5563   0024D8  EF70  F012         	goto	u4260
  5564   0024DC                     u4261:
  5565   0024DC  EF7D  F012         	goto	l4176
  5566   0024E0                     u4260:
  5567   0024E0  0E00               	movlw	0
  5568   0024E2  6E04               	movwf	(?_strncmp+1)^0,c
  5569   0024E4  0E00               	movlw	0
  5570   0024E6  6E03               	movwf	?_strncmp^0,c
  5571   0024E8  EFC5  F012         	goto	l1515
  5572   0024EC                     l4174:
  5573   0024EC  4A03               	infsnz	strncmp@l^0,f,c
  5574   0024EE  2A04               	incf	(strncmp@l+1)^0,f,c
  5575   0024F0  4A05               	infsnz	strncmp@r^0,f,c
  5576   0024F2  2A06               	incf	(strncmp@r+1)^0,f,c
  5577   0024F4  0607               	decf	strncmp@n^0,f,c
  5578   0024F6  A0D8               	btfss	status,0,c
  5579   0024F8  0608               	decf	(strncmp@n+1)^0,f,c
  5580   0024FA                     l4176:
  5581   0024FA  C003  FFD9         	movff	strncmp@l,fsr2l
  5582   0024FE  C004  FFDA         	movff	strncmp@l+1,fsr2h
  5583   002502  50DF               	movf	indf2,w,c
  5584   002504  B4D8               	btfsc	status,2,c
  5585   002506  EF87  F012         	goto	u4271
  5586   00250A  EF89  F012         	goto	u4270
  5587   00250E                     u4271:
  5588   00250E  EFB4  F012         	goto	l4184
  5589   002512                     u4270:
  5590   002512  C005  FFF6         	movff	strncmp@r,tblptrl
  5591   002516  C006  FFF7         	movff	strncmp@r+1,tblptrh
  5592   00251A                     	if	0	;tblptru may be non-zero
  5593   00251A                     	endif
  5594   00251A                     	if	0	;tblptru may be non-zero
  5595   00251A                     	endif
  5596   00251A  0008               	tblrd		*
  5597   00251C  50F5               	movf	tablat,w,c
  5598   00251E  0900               	iorlw	0
  5599   002520  B4D8               	btfsc	status,2,c
  5600   002522  EF95  F012         	goto	u4281
  5601   002526  EF97  F012         	goto	u4280
  5602   00252A                     u4281:
  5603   00252A  EFB4  F012         	goto	l4184
  5604   00252E                     u4280:
  5605   00252E  5007               	movf	strncmp@n^0,w,c
  5606   002530  1008               	iorwf	(strncmp@n+1)^0,w,c
  5607   002532  B4D8               	btfsc	status,2,c
  5608   002534  EF9E  F012         	goto	u4291
  5609   002538  EFA0  F012         	goto	u4290
  5610   00253C                     u4291:
  5611   00253C  EFB4  F012         	goto	l4184
  5612   002540                     u4290:
  5613   002540  C003  FFD9         	movff	strncmp@l,fsr2l
  5614   002544  C004  FFDA         	movff	strncmp@l+1,fsr2h
  5615   002548  50DF               	movf	indf2,w,c
  5616   00254A  6E09               	movwf	??_strncmp^0,c
  5617   00254C  C005  FFF6         	movff	strncmp@r,tblptrl
  5618   002550  C006  FFF7         	movff	strncmp@r+1,tblptrh
  5619   002554                     	if	0	;tblptru may be non-zero
  5620   002554                     	endif
  5621   002554                     	if	0	;tblptru may be non-zero
  5622   002554                     	endif
  5623   002554  0008               	tblrd		*
  5624   002556  50F5               	movf	tablat,w,c
  5625   002558  1809               	xorwf	??_strncmp^0,w,c
  5626   00255A  B4D8               	btfsc	status,2,c
  5627   00255C  EFB2  F012         	goto	u4301
  5628   002560  EFB4  F012         	goto	u4300
  5629   002564                     u4301:
  5630   002564  EF76  F012         	goto	l4174
  5631   002568                     u4300:
  5632   002568                     l4184:
  5633   002568  C003  FFD9         	movff	strncmp@l,fsr2l
  5634   00256C  C004  FFDA         	movff	strncmp@l+1,fsr2h
  5635   002570  50DF               	movf	indf2,w,c
  5636   002572  6E09               	movwf	??_strncmp^0,c
  5637   002574  C005  FFF6         	movff	strncmp@r,tblptrl
  5638   002578  C006  FFF7         	movff	strncmp@r+1,tblptrh
  5639   00257C                     	if	0	;tblptru may be non-zero
  5640   00257C                     	endif
  5641   00257C                     	if	0	;tblptru may be non-zero
  5642   00257C                     	endif
  5643   00257C  0008               	tblrd		*
  5644   00257E  50F5               	movf	tablat,w,c
  5645   002580  5C09               	subwf	??_strncmp^0,w,c
  5646   002582  6E03               	movwf	?_strncmp^0,c
  5647   002584  6A04               	clrf	(?_strncmp+1)^0,c
  5648   002586  A0D8               	btfss	status,0,c
  5649   002588  0604               	decf	(?_strncmp+1)^0,f,c
  5650   00258A                     l1515:
  5651   00258A  0012               	return		;funcret
  5652   00258C                     __end_of_strncmp:
  5653                           	callstack 0
  5654                           
  5655 ;; *************** function _strlen *****************
  5656 ;; Defined at:
  5657 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5660 ;;		 -> STR_40(20), 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  a               2    4[COMRAM] PTR const unsigned char 
  5663 ;;		 -> STR_40(20), 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  2    2[COMRAM] unsigned int 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;Total ram usage:        4 bytes
  5678 ;; Hardware stack levels used: 1
  5679 ;; Hardware stack levels required when called: 1
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_strstr
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text20
  5688   0031D6                     __ptext20:
  5689                           	callstack 0
  5690   0031D6                     _strlen:
  5691                           	callstack 26
  5692   0031D6  C003  F005         	movff	strlen@s,strlen@a
  5693   0031DA  C004  F006         	movff	strlen@s+1,strlen@a+1
  5694   0031DE  EFF3  F018         	goto	l4162
  5695   0031E2                     l4160:
  5696   0031E2  4A03               	infsnz	strlen@s^0,f,c
  5697   0031E4  2A04               	incf	(strlen@s+1)^0,f,c
  5698   0031E6                     l4162:
  5699   0031E6  C003  FFF6         	movff	strlen@s,tblptrl
  5700   0031EA  C004  FFF7         	movff	strlen@s+1,tblptrh
  5701   0031EE                     	if	0	;tblptru may be non-zero
  5702   0031EE                     	endif
  5703   0031EE                     	if	0	;tblptru may be non-zero
  5704   0031EE                     	endif
  5705   0031EE  0008               	tblrd		*
  5706   0031F0  50F5               	movf	tablat,w,c
  5707   0031F2  0900               	iorlw	0
  5708   0031F4  A4D8               	btfss	status,2,c
  5709   0031F6  EFFF  F018         	goto	u4251
  5710   0031FA  EF01  F019         	goto	u4250
  5711   0031FE                     u4251:
  5712   0031FE  EFF1  F018         	goto	l4160
  5713   003202                     u4250:
  5714   003202  5005               	movf	strlen@a^0,w,c
  5715   003204  5C03               	subwf	strlen@s^0,w,c
  5716   003206  6E03               	movwf	?_strlen^0,c
  5717   003208  5006               	movf	(strlen@a+1)^0,w,c
  5718   00320A  5804               	subwfb	(strlen@s+1)^0,w,c
  5719   00320C  6E04               	movwf	(?_strlen+1)^0,c
  5720   00320E  0012               	return		;funcret
  5721   003210                     __end_of_strlen:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function _strchr *****************
  5725 ;; Defined at:
  5726 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5729 ;;		 -> NULL(0), buffer(256), 
  5730 ;;  c               2    4[COMRAM] int 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  2    2[COMRAM] PTR unsigned char 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;Total ram usage:        5 bytes
  5747 ;; Hardware stack levels used: 1
  5748 ;; Hardware stack levels required when called: 1
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_print_Vbatt
  5753 ;;		_strstr
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text21
  5758   0030C8                     __ptext21:
  5759                           	callstack 0
  5760   0030C8                     _strchr:
  5761                           	callstack 26
  5762   0030C8                     l1486:
  5763   0030C8  C003  FFD9         	movff	strchr@s,fsr2l
  5764   0030CC  C004  FFDA         	movff	strchr@s+1,fsr2h
  5765   0030D0  5005               	movf	strchr@c^0,w,c
  5766   0030D2  18DE               	xorwf	postinc2,w,c
  5767   0030D4  A4D8               	btfss	status,2,c
  5768   0030D6  EF6F  F018         	goto	u4191
  5769   0030DA  EF71  F018         	goto	u4190
  5770   0030DE                     u4191:
  5771   0030DE  EF77  F018         	goto	l4128
  5772   0030E2                     u4190:
  5773   0030E2  C003  F003         	movff	strchr@s,?_strchr
  5774   0030E6  C004  F004         	movff	strchr@s+1,?_strchr+1
  5775   0030EA  EF89  F018         	goto	l1488
  5776   0030EE                     l4128:
  5777   0030EE  C003  FFD9         	movff	strchr@s,fsr2l
  5778   0030F2  C004  FFDA         	movff	strchr@s+1,fsr2h
  5779   0030F6  4A03               	infsnz	strchr@s^0,f,c
  5780   0030F8  2A04               	incf	(strchr@s+1)^0,f,c
  5781   0030FA  50DF               	movf	indf2,w,c
  5782   0030FC  A4D8               	btfss	status,2,c
  5783   0030FE  EF83  F018         	goto	u4201
  5784   003102  EF85  F018         	goto	u4200
  5785   003106                     u4201:
  5786   003106  EF64  F018         	goto	l1486
  5787   00310A                     u4200:
  5788   00310A  0E00               	movlw	0
  5789   00310C  6E03               	movwf	?_strchr^0,c
  5790   00310E  0E00               	movlw	0
  5791   003110  6E04               	movwf	(?_strchr+1)^0,c
  5792   003112                     l1488:
  5793   003112  0012               	return		;funcret
  5794   003114                     __end_of_strchr:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function _sscanf *****************
  5798 ;; Defined at:
  5799 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sscanf.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  s               1   37[BANK0 ] PTR const unsigned char 
  5802 ;;		 -> diagnostic_trouble_codes@byte2_str(3), diagnostic_trouble_codes@byte1_str(3), 
  5803 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  5804 ;;		 -> STR_39(3), STR_38(3), 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  f              11   43[BANK0 ] struct _IO_FILE
  5807 ;;  ret             2    0        int 
  5808 ;;  ap              1   42[BANK0 ] PTR void [1]
  5809 ;;		 -> ?_sscanf(2), 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  2   37[BANK0 ] int 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5819 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;Total ram usage:       17 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 7
  5826 ;; This function calls:
  5827 ;;		_vfscanf
  5828 ;; This function is called by:
  5829 ;;		_diagnostic_trouble_codes
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text22
  5834   00327C                     __ptext22:
  5835                           	callstack 0
  5836   00327C                     _sscanf:
  5837                           	callstack 21
  5838   00327C  0E88               	movlw	low (?_sscanf+3)
  5839   00327E  0100               	movlb	0	; () banked
  5840   003280  6F8A               	movwf	sscanf@ap& (0+255),b
  5841   003282  C085  F08B         	movff	sscanf@s,sscanf@f
  5842   003286  6B8C               	clrf	(sscanf@f+1)& (0+255),b
  5843   003288                     
  5844                           ; BSR set to: 0
  5845   003288  0E00               	movlw	0
  5846   00328A  6F8E               	movwf	(sscanf@f+3)& (0+255),b
  5847   00328C  0E00               	movlw	0
  5848   00328E  6F8D               	movwf	(sscanf@f+2)& (0+255),b
  5849   003290                     
  5850                           ; BSR set to: 0
  5851   003290  0E00               	movlw	0
  5852   003292  6F93               	movwf	(sscanf@f+8)& (0+255),b
  5853   003294  0E00               	movlw	0
  5854   003296  6F92               	movwf	(sscanf@f+7)& (0+255),b
  5855   003298                     
  5856                           ; BSR set to: 0
  5857   003298  0E8B               	movlw	low sscanf@f
  5858   00329A  6F7B               	movwf	vfscanf@fp& (0+255),b
  5859   00329C  C086  F07C         	movff	sscanf@fmt,vfscanf@fmt
  5860   0032A0  C087  F07D         	movff	sscanf@fmt+1,vfscanf@fmt+1
  5861   0032A4  0E8A               	movlw	low sscanf@ap
  5862   0032A6  6F7E               	movwf	vfscanf@ap& (0+255),b
  5863   0032A8  ECC6  F012         	call	_vfscanf	;wreg free
  5864   0032AC  0012               	return		;funcret
  5865   0032AE                     __end_of_sscanf:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _vfscanf *****************
  5869 ;; Defined at:
  5870 ;;		line 1497 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  5873 ;;		 -> sscanf@f(11), 
  5874 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  5875 ;;		 -> STR_39(3), STR_38(3), 
  5876 ;;  ap              1   30[BANK0 ] PTR PTR void 
  5877 ;;		 -> sscanf@ap(1), 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  cfmt            2   35[BANK0 ] PTR unsigned char 
  5880 ;;		 -> STR_39(3), STR_38(3), 
  5881 ;;  n               2   33[BANK0 ] int 
  5882 ;;  saved_errno     2   31[BANK0 ] int 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  2   27[BANK0 ] int 
  5885 ;; Registers used:
  5886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5892 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;Total ram usage:       10 bytes
  5897 ;; Hardware stack levels used: 1
  5898 ;; Hardware stack levels required when called: 6
  5899 ;; This function calls:
  5900 ;;		_vfsfcnvrt
  5901 ;; This function is called by:
  5902 ;;		_sscanf
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text23
  5907   00258C                     __ptext23:
  5908                           	callstack 0
  5909   00258C                     _vfscanf:
  5910                           	callstack 21
  5911   00258C                     
  5912                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1497: int vfscanf
      +                          (FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doscan.c: 1498: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doscan.c: 1499:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doscan.c: 1500:     int n, saved_errno;;C:\Program Files\Microchip\xc8\v3.00\pic\s
      +                          ources\c99\common\doscan.c: 1502:     cfmt = (char *)fmt;
  5913   00258C  C07C  F083         	movff	vfscanf@fmt,vfscanf@cfmt
  5914   002590  C07D  F084         	movff	vfscanf@fmt+1,vfscanf@cfmt+1
  5915   002594                     
  5916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1503:     ncnv = 
      +                          nmatch = 0;
  5917   002594  0E00               	movlw	0
  5918   002596  0100               	movlb	0	; () banked
  5919   002598  6FB8               	movwf	(_nmatch+1)& (0+255),b
  5920   00259A  0E00               	movlw	0
  5921   00259C  6FB7               	movwf	_nmatch& (0+255),b
  5922   00259E  C0B7  F0B9         	movff	_nmatch,_ncnv
  5923   0025A2  C0B8  F0BA         	movff	_nmatch+1,_ncnv+1
  5924   0025A6                     
  5925                           ; BSR set to: 0
  5926                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1504:  saved_errn
      +                          o = errno;
  5927   0025A6  C0BD  F07F         	movff	_errno,vfscanf@saved_errno
  5928   0025AA  C0BE  F080         	movff	_errno+1,vfscanf@saved_errno+1
  5929                           
  5930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1505:     while (
      +                          *cfmt) {
  5931   0025AE  EFF8  F012         	goto	l5604
  5932   0025B2                     l5594:
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1506:   errno = 0
      +                          ;
  5936   0025B2  0E00               	movlw	0
  5937   0025B4  6FBE               	movwf	(_errno+1)& (0+255),b
  5938   0025B6  0E00               	movlw	0
  5939   0025B8  6FBD               	movwf	_errno& (0+255),b
  5940   0025BA                     
  5941                           ; BSR set to: 0
  5942                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1507:         n =
      +                           vfsfcnvrt(fp, &cfmt, ap);
  5943   0025BA  C07B  F06A         	movff	vfscanf@fp,vfsfcnvrt@fp
  5944   0025BE  0E83               	movlw	low vfscanf@cfmt
  5945   0025C0  6F6B               	movwf	vfsfcnvrt@fmt& (0+255),b
  5946   0025C2  C07E  F06C         	movff	vfscanf@ap,vfsfcnvrt@ap
  5947   0025C6  6B6D               	clrf	(vfsfcnvrt@ap+1)& (0+255),b
  5948   0025C8  EC81  F006         	call	_vfsfcnvrt	;wreg free
  5949   0025CC  C06A  F081         	movff	?_vfsfcnvrt,vfscanf@n
  5950   0025D0  C06B  F082         	movff	?_vfsfcnvrt+1,vfscanf@n+1
  5951   0025D4                     
  5952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1508:         if 
      +                          (n < 0) {
  5953   0025D4  0100               	movlb	0	; () banked
  5954   0025D6  BF82               	btfsc	(vfscanf@n+1)& (0+255),7,b
  5955   0025D8  EFF2  F012         	goto	u6310
  5956   0025DC  EFF0  F012         	goto	u6311
  5957   0025E0                     u6311:
  5958   0025E0  EFF4  F012         	goto	l5602
  5959   0025E4                     u6310:
  5960   0025E4  EF06  F013         	goto	l1384
  5961   0025E8                     l5602:
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1511:         ncn
      +                          v += n;
  5965   0025E8  5181               	movf	vfscanf@n& (0+255),w,b
  5966   0025EA  27B9               	addwf	_ncnv& (0+255),f,b
  5967   0025EC  5182               	movf	(vfscanf@n+1)& (0+255),w,b
  5968   0025EE  23BA               	addwfc	(_ncnv+1)& (0+255),f,b
  5969   0025F0                     l5604:
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1505:     while (
      +                          *cfmt) {
  5973   0025F0  C083  FFF6         	movff	vfscanf@cfmt,tblptrl
  5974   0025F4  C084  FFF7         	movff	vfscanf@cfmt+1,tblptrh
  5975   0025F8                     	if	0	;tblptru may be non-zero
  5976   0025F8                     	endif
  5977   0025F8                     	if	0	;tblptru may be non-zero
  5978   0025F8                     	endif
  5979   0025F8  0008               	tblrd		*
  5980   0025FA  50F5               	movf	tablat,w,c
  5981   0025FC  0900               	iorlw	0
  5982   0025FE  A4D8               	btfss	status,2,c
  5983   002600  EF04  F013         	goto	u6321
  5984   002604  EF06  F013         	goto	u6320
  5985   002608                     u6321:
  5986   002608  EFD9  F012         	goto	l5594
  5987   00260C                     u6320:
  5988   00260C                     l1384:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1513:  errno = sa
      +                          ved_errno;
  5992   00260C  C07F  F0BD         	movff	vfscanf@saved_errno,_errno
  5993   002610  C080  F0BE         	movff	vfscanf@saved_errno+1,_errno+1
  5994   002614                     
  5995                           ; BSR set to: 0
  5996                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1514:     if (n =
      +                          = (-1) && ncnv == 0) {
  5997   002614  2981               	incf	vfscanf@n& (0+255),w,b
  5998   002616  E106               	bnz	u6331
  5999   002618  2982               	incf	(vfscanf@n+1)& (0+255),w,b
  6000   00261A  A4D8               	btfss	status,2,c
  6001   00261C  EF12  F013         	goto	u6331
  6002   002620  EF14  F013         	goto	u6330
  6003   002624                     u6331:
  6004   002624  EF23  F013         	goto	l1385
  6005   002628                     u6330:
  6006   002628                     
  6007                           ; BSR set to: 0
  6008   002628  51B9               	movf	_ncnv& (0+255),w,b
  6009   00262A  11BA               	iorwf	(_ncnv+1)& (0+255),w,b
  6010   00262C  A4D8               	btfss	status,2,c
  6011   00262E  EF1B  F013         	goto	u6341
  6012   002632  EF1D  F013         	goto	u6340
  6013   002636                     u6341:
  6014   002636  EF23  F013         	goto	l1385
  6015   00263A                     u6340:
  6016   00263A                     
  6017                           ; BSR set to: 0
  6018                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1515:         ret
      +                          urn n;
  6019   00263A  C081  F07B         	movff	vfscanf@n,?_vfscanf
  6020   00263E  C082  F07C         	movff	vfscanf@n+1,?_vfscanf+1
  6021   002642  EF27  F013         	goto	l1386
  6022   002646                     l1385:
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1518:     return 
      +                          ncnv;
  6026   002646  C0B9  F07B         	movff	_ncnv,?_vfscanf
  6027   00264A  C0BA  F07C         	movff	_ncnv+1,?_vfscanf+1
  6028   00264E                     l1386:
  6029                           
  6030                           ; BSR set to: 0
  6031   00264E  0012               	return		;funcret
  6032   002650                     __end_of_vfscanf:
  6033                           	callstack 0
  6034                           
  6035 ;; *************** function _vfsfcnvrt *****************
  6036 ;; Defined at:
  6037 ;;		line 672 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  6040 ;;		 -> sscanf@f(11), 
  6041 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  6042 ;;		 -> vfscanf@cfmt(2), 
  6043 ;;  ap              2   12[BANK0 ] PTR PTR void 
  6044 ;;		 -> sscanf@ap(1), 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  llu             8   17[BANK0 ] unsigned long long 
  6047 ;;  ll              8    0        long long 
  6048 ;;  f               4    0        long long 
  6049 ;;  ct              3    0        unsigned char [3]
  6050 ;;  c               2   25[BANK0 ] int 
  6051 ;;  i               2   15[BANK0 ] int 
  6052 ;;  cp              2    0        PTR unsigned char 
  6053 ;;  vp              1   14[BANK0 ] PTR void 
  6054 ;;		 -> ?_sscanf(2), ?_sprintf(2), diagnostic_trouble_codes@byte2(2), diagnostic_trouble_codes@byte1(2), 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2   10[BANK0 ] int 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;Total ram usage:       19 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 5
  6071 ;; This function calls:
  6072 ;;		_atox
  6073 ;;		_fgetc
  6074 ;;		_skipws
  6075 ;;		_ungetc
  6076 ;; This function is called by:
  6077 ;;		_vfscanf
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text24
  6082   000D02                     __ptext24:
  6083                           	callstack 0
  6084   000D02                     _vfsfcnvrt:
  6085                           	callstack 21
  6086   000D02                     
  6087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 672: static int v
      +                          fsfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sou
      +                          rces\c99\common\doscan.c: 673: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doscan.c: 674:     char *cp, ct[3];;C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doscan.c: 675:     int c, i;;C:\Program Files\Microchip\xc8\v3.00\pic\sourc
      +                          es\c99\common\doscan.c: 676:     long long ll;;C:\Program Files\Microchip\xc8\v3.00\pic\
      +                          sources\c99\common\doscan.c: 677:     unsigned long long llu;
  6088   000D02  0100               	movlb	0	; () banked
  6089   000D04  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6090   000D06  6ED9               	movwf	fsr2l,c
  6091   000D08  6ADA               	clrf	fsr2h,c
  6092   000D0A  CFDE FFF6          	movff	postinc2,tblptrl
  6093   000D0E  CFDD FFF7          	movff	postdec2,tblptrh
  6094   000D12                     	if	0	;tblptru may be non-zero
  6095   000D12                     	endif
  6096   000D12                     	if	0	;tblptru may be non-zero
  6097   000D12                     	endif
  6098   000D12  0008               	tblrd		*
  6099   000D14  50F5               	movf	tablat,w,c
  6100   000D16  0A25               	xorlw	37
  6101   000D18  A4D8               	btfss	status,2,c
  6102   000D1A  EF91  F006         	goto	u6131
  6103   000D1E  EF93  F006         	goto	u6130
  6104   000D22                     u6131:
  6105   000D22  EF59  F007         	goto	l5544
  6106   000D26                     u6130:
  6107   000D26                     
  6108                           ; BSR set to: 0
  6109                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 683:         ++*f
      +                          mt;
  6110   000D26  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6111   000D28  6ED9               	movwf	fsr2l,c
  6112   000D2A  6ADA               	clrf	fsr2h,c
  6113   000D2C  2ADE               	incf	postinc2,f,c
  6114   000D2E  0E00               	movlw	0
  6115   000D30  22DD               	addwfc	postdec2,f,c
  6116   000D32                     
  6117                           ; BSR set to: 0
  6118                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 685:         asup
      +                           = width = 0;
  6119   000D32  0E00               	movlw	0
  6120   000D34  6FBC               	movwf	(_width@doscan$F2239+1)& (0+255),b
  6121   000D36  0E00               	movlw	0
  6122   000D38  6FBB               	movwf	_width@doscan$F2239& (0+255),b
  6123   000D3A  51BB               	movf	_width@doscan$F2239& (0+255),w,b
  6124   000D3C  11BC               	iorwf	(_width@doscan$F2239+1)& (0+255),w,b
  6125   000D3E  A4D8               	btfss	status,2,c
  6126   000D40  EFA4  F006         	goto	u6141
  6127   000D44  EFA7  F006         	goto	u6140
  6128   000D48                     u6141:
  6129   000D48  0E01               	movlw	1
  6130   000D4A  EFA8  F006         	goto	u6150
  6131   000D4E                     u6140:
  6132   000D4E  0E00               	movlw	0
  6133   000D50                     u6150:
  6134   000D50  6FCE               	movwf	_asup& (0+255),b
  6135   000D52                     
  6136                           ; BSR set to: 0
  6137                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1353:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6138   000D52  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6139   000D54  6ED9               	movwf	fsr2l,c
  6140   000D56  6ADA               	clrf	fsr2h,c
  6141   000D58  CFDE FFF6          	movff	postinc2,tblptrl
  6142   000D5C  CFDD FFF7          	movff	postdec2,tblptrh
  6143   000D60                     	if	0	;tblptru may be non-zero
  6144   000D60                     	endif
  6145   000D60                     	if	0	;tblptru may be non-zero
  6146   000D60                     	endif
  6147   000D60  0008               	tblrd		*
  6148   000D62  50F5               	movf	tablat,w,c
  6149   000D64  0A78               	xorlw	120
  6150   000D66  B4D8               	btfsc	status,2,c
  6151   000D68  EFB8  F006         	goto	u6161
  6152   000D6C  EFBA  F006         	goto	u6160
  6153   000D70                     u6161:
  6154   000D70  EFCB  F006         	goto	l5500
  6155   000D74                     u6160:
  6156   000D74                     
  6157                           ; BSR set to: 0
  6158   000D74  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6159   000D76  6ED9               	movwf	fsr2l,c
  6160   000D78  6ADA               	clrf	fsr2h,c
  6161   000D7A  CFDE FFF6          	movff	postinc2,tblptrl
  6162   000D7E  CFDD FFF7          	movff	postdec2,tblptrh
  6163   000D82                     	if	0	;tblptru may be non-zero
  6164   000D82                     	endif
  6165   000D82                     	if	0	;tblptru may be non-zero
  6166   000D82                     	endif
  6167   000D82  0008               	tblrd		*
  6168   000D84  50F5               	movf	tablat,w,c
  6169   000D86  0A58               	xorlw	88
  6170   000D88  A4D8               	btfss	status,2,c
  6171   000D8A  EFC9  F006         	goto	u6171
  6172   000D8E  EFCB  F006         	goto	u6170
  6173   000D92                     u6171:
  6174   000D92  EF01  F007         	goto	l5514
  6175   000D96                     u6170:
  6176   000D96                     l5500:
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1354:            
      +                           ++*fmt;
  6180   000D96  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6181   000D98  6ED9               	movwf	fsr2l,c
  6182   000D9A  6ADA               	clrf	fsr2h,c
  6183   000D9C  2ADE               	incf	postinc2,f,c
  6184   000D9E  0E00               	movlw	0
  6185   000DA0  22DD               	addwfc	postdec2,f,c
  6186   000DA2                     
  6187                           ; BSR set to: 0
  6188                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1355:            
      +                           i = atox(fp, &llu);
  6189   000DA2  C06A  F04B         	movff	vfsfcnvrt@fp,atox@fp
  6190   000DA6  0E71               	movlw	low vfsfcnvrt@llu
  6191   000DA8  6E4C               	movwf	atox@pll^0,c
  6192   000DAA  EC25  F003         	call	_atox	;wreg free
  6193   000DAE  C04B  F06F         	movff	?_atox,vfsfcnvrt@i
  6194   000DB2  C04C  F070         	movff	?_atox+1,vfsfcnvrt@i+1
  6195   000DB6                     
  6196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1356:            
      +                           if (!(i < 1)) {
  6197   000DB6  0100               	movlb	0	; () banked
  6198   000DB8  BF70               	btfsc	(vfsfcnvrt@i+1)& (0+255),7,b
  6199   000DBA  EFE7  F006         	goto	u6181
  6200   000DBE  5170               	movf	(vfsfcnvrt@i+1)& (0+255),w,b
  6201   000DC0  E108               	bnz	u6180
  6202   000DC2  056F               	decf	vfsfcnvrt@i& (0+255),w,b
  6203   000DC4  A0D8               	btfss	status,0,c
  6204   000DC6  EFE7  F006         	goto	u6181
  6205   000DCA  EFE9  F006         	goto	u6180
  6206   000DCE                     u6181:
  6207   000DCE  EFFB  F006         	goto	l5510
  6208   000DD2                     u6180:
  6209   000DD2                     
  6210                           ; BSR set to: 0
  6211                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1357:            
      +                               vp = (void *)(*(unsigned int * *)__va_arg(*(unsigned int * **)ap, (unsigned int *)0
      +                          ));
  6212   000DD2  C06C  FFD9         	movff	vfsfcnvrt@ap,fsr2l
  6213   000DD6  C06D  FFDA         	movff	vfsfcnvrt@ap+1,fsr2h
  6214   000DDA  0E02               	movlw	2
  6215   000DDC  26DF               	addwf	indf2,f,c
  6216   000DDE  5CDF               	subwf	indf2,w,c
  6217   000DE0  6ED9               	movwf	fsr2l,c
  6218   000DE2  6ADA               	clrf	fsr2h,c
  6219   000DE4  CFDE F06E          	movff	postinc2,vfsfcnvrt@vp
  6220   000DE8                     
  6221                           ; BSR set to: 0
  6222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1358:            
      +                               *(unsigned int *)vp = (unsigned int)llu;
  6223   000DE8  516E               	movf	vfsfcnvrt@vp& (0+255),w,b
  6224   000DEA  6ED9               	movwf	fsr2l,c
  6225   000DEC  6ADA               	clrf	fsr2h,c
  6226   000DEE  C071  FFDE         	movff	vfsfcnvrt@llu,postinc2
  6227   000DF2  C072  FFDD         	movff	vfsfcnvrt@llu+1,postdec2
  6228   000DF6                     l5510:
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1360:            
      +                           return i;
  6232   000DF6  C06F  F06A         	movff	vfsfcnvrt@i,?_vfsfcnvrt
  6233   000DFA  C070  F06B         	movff	vfsfcnvrt@i+1,?_vfsfcnvrt+1
  6234   000DFE  EF0E  F008         	goto	l1361
  6235   000E02                     l5514:
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1448:         if 
      +                          ((*fmt)[0] == '%') {
  6239   000E02  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6240   000E04  6ED9               	movwf	fsr2l,c
  6241   000E06  6ADA               	clrf	fsr2h,c
  6242   000E08  CFDE FFF6          	movff	postinc2,tblptrl
  6243   000E0C  CFDD FFF7          	movff	postdec2,tblptrh
  6244   000E10                     	if	0	;tblptru may be non-zero
  6245   000E10                     	endif
  6246   000E10                     	if	0	;tblptru may be non-zero
  6247   000E10                     	endif
  6248   000E10  0008               	tblrd		*
  6249   000E12  50F5               	movf	tablat,w,c
  6250   000E14  0A25               	xorlw	37
  6251   000E16  A4D8               	btfss	status,2,c
  6252   000E18  EF10  F007         	goto	u6191
  6253   000E1C  EF12  F007         	goto	u6190
  6254   000E20                     u6191:
  6255   000E20  EF51  F007         	goto	l5538
  6256   000E24                     u6190:
  6257   000E24                     
  6258                           ; BSR set to: 0
  6259                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1449:    skipws(f
      +                          p);
  6260   000E24  C06A  F00E         	movff	vfsfcnvrt@fp,skipws@fp
  6261   000E28  EC40  F017         	call	_skipws	;wreg free
  6262                           
  6263                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1450:    c = fget
      +                          c(fp);
  6264   000E2C  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6265   000E30  EC9B  F00E         	call	_fgetc	;wreg free
  6266   000E34  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6267   000E38  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6268   000E3C                     
  6269                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1451:    if (c ==
      +                           '%') {
  6270   000E3C  0E25               	movlw	37
  6271   000E3E  0100               	movlb	0	; () banked
  6272   000E40  1979               	xorwf	vfsfcnvrt@c& (0+255),w,b
  6273   000E42  117A               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
  6274   000E44  A4D8               	btfss	status,2,c
  6275   000E46  EF27  F007         	goto	u6201
  6276   000E4A  EF29  F007         	goto	u6200
  6277   000E4E                     u6201:
  6278   000E4E  EF38  F007         	goto	l5530
  6279   000E52                     u6200:
  6280   000E52                     l5520:
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1452:     ++*fmt;
  6284   000E52  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6285   000E54  6ED9               	movwf	fsr2l,c
  6286   000E56  6ADA               	clrf	fsr2h,c
  6287   000E58  2ADE               	incf	postinc2,f,c
  6288   000E5A  0E00               	movlw	0
  6289   000E5C  22DD               	addwfc	postdec2,f,c
  6290   000E5E                     
  6291                           ; BSR set to: 0
  6292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1453:     ++nmatc
      +                          h;
  6293   000E5E  4BB7               	infsnz	_nmatch& (0+255),f,b
  6294   000E60  2BB8               	incf	(_nmatch+1)& (0+255),f,b
  6295   000E62                     l5524:
  6296                           
  6297                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1454:     return 
      +                          0;
  6298   000E62  0E00               	movlw	0
  6299   000E64  0100               	movlb	0	; () banked
  6300   000E66  6F6B               	movwf	(?_vfsfcnvrt+1)& (0+255),b
  6301   000E68  0E00               	movlw	0
  6302   000E6A  6F6A               	movwf	?_vfsfcnvrt& (0+255),b
  6303   000E6C  EF0E  F008         	goto	l1361
  6304   000E70                     l5530:
  6305                           
  6306                           ; BSR set to: 0
  6307   000E70  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6308   000E72  E108               	bnz	u6210
  6309   000E74  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6310   000E76  B4D8               	btfsc	status,2,c
  6311   000E78  EF40  F007         	goto	u6211
  6312   000E7C  EF42  F007         	goto	u6210
  6313   000E80                     u6211:
  6314   000E80  EF4A  F007         	goto	l5534
  6315   000E84                     u6210:
  6316   000E84                     l5532:
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1457:     ungetc(
      +                          c, fp);
  6320   000E84  C079  F003         	movff	vfsfcnvrt@c,ungetc@c
  6321   000E88  C07A  F004         	movff	vfsfcnvrt@c+1,ungetc@c+1
  6322   000E8C  C06A  F005         	movff	vfsfcnvrt@fp,ungetc@fp
  6323   000E90  ECEA  F014         	call	_ungetc	;wreg free
  6324   000E94                     l5534:
  6325                           
  6326                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1459:    return (
      +                          -1) - 1;
  6327   000E94  0EFF               	movlw	255
  6328   000E96  0100               	movlb	0	; () banked
  6329   000E98  6F6B               	movwf	(?_vfsfcnvrt+1)& (0+255),b
  6330   000E9A  0EFE               	movlw	254
  6331   000E9C  6F6A               	movwf	?_vfsfcnvrt& (0+255),b
  6332   000E9E  EF0E  F008         	goto	l1361
  6333   000EA2                     l5538:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1463:         ++*
      +                          fmt;
  6337   000EA2  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6338   000EA4  6ED9               	movwf	fsr2l,c
  6339   000EA6  6ADA               	clrf	fsr2h,c
  6340   000EA8  2ADE               	incf	postinc2,f,c
  6341   000EAA  0E00               	movlw	0
  6342   000EAC  22DD               	addwfc	postdec2,f,c
  6343   000EAE  EF31  F007         	goto	l5524
  6344   000EB2                     l5544:
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1468:     c = fge
      +                          tc(fp);
  6348   000EB2  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6349   000EB6  EC9B  F00E         	call	_fgetc	;wreg free
  6350   000EBA  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6351   000EBE  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6352   000EC2                     
  6353                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1469:  if ((((*fm
      +                          t[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5)))) {
  6354   000EC2  0100               	movlb	0	; () banked
  6355   000EC4  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6356   000EC6  6ED9               	movwf	fsr2l,c
  6357   000EC8  6ADA               	clrf	fsr2h,c
  6358   000ECA  CFDE FFF6          	movff	postinc2,tblptrl
  6359   000ECE  CFDD FFF7          	movff	postdec2,tblptrh
  6360   000ED2                     	if	0	;tblptru may be non-zero
  6361   000ED2                     	endif
  6362   000ED2                     	if	0	;tblptru may be non-zero
  6363   000ED2                     	endif
  6364   000ED2  0008               	tblrd		*
  6365   000ED4  50F5               	movf	tablat,w,c
  6366   000ED6  0A20               	xorlw	32
  6367   000ED8  B4D8               	btfsc	status,2,c
  6368   000EDA  EF71  F007         	goto	u6221
  6369   000EDE  EF73  F007         	goto	u6220
  6370   000EE2                     u6221:
  6371   000EE2  EF87  F007         	goto	l5550
  6372   000EE6                     u6220:
  6373   000EE6                     
  6374                           ; BSR set to: 0
  6375   000EE6  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6376   000EE8  6ED9               	movwf	fsr2l,c
  6377   000EEA  6ADA               	clrf	fsr2h,c
  6378   000EEC  CFDE FFF6          	movff	postinc2,tblptrl
  6379   000EF0  CFDD FFF7          	movff	postdec2,tblptrh
  6380   000EF4                     	if	0	;tblptru may be non-zero
  6381   000EF4                     	endif
  6382   000EF4                     	if	0	;tblptru may be non-zero
  6383   000EF4                     	endif
  6384   000EF4  0008               	tblrd		*
  6385   000EF6  CFF5 F055          	movff	tablat,??_vfsfcnvrt
  6386   000EFA  0EF7               	movlw	247
  6387   000EFC  2655               	addwf	??_vfsfcnvrt^0,f,c
  6388   000EFE  0E05               	movlw	5
  6389   000F00  6055               	cpfslt	??_vfsfcnvrt^0,c
  6390   000F02  EF85  F007         	goto	u6231
  6391   000F06  EF87  F007         	goto	u6230
  6392   000F0A                     u6231:
  6393   000F0A  EFE9  F007         	goto	l5568
  6394   000F0E                     u6230:
  6395   000F0E                     l5550:
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1472:    ++*fmt;
  6399   000F0E  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6400   000F10  6ED9               	movwf	fsr2l,c
  6401   000F12  6ADA               	clrf	fsr2h,c
  6402   000F14  2ADE               	incf	postinc2,f,c
  6403   000F16  0E00               	movlw	0
  6404   000F18  22DD               	addwfc	postdec2,f,c
  6405   000F1A                     
  6406                           ; BSR set to: 0
  6407                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1473:   } while((
      +                          ((*fmt[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5))));
  6408   000F1A  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6409   000F1C  6ED9               	movwf	fsr2l,c
  6410   000F1E  6ADA               	clrf	fsr2h,c
  6411   000F20  CFDE FFF6          	movff	postinc2,tblptrl
  6412   000F24  CFDD FFF7          	movff	postdec2,tblptrh
  6413   000F28                     	if	0	;tblptru may be non-zero
  6414   000F28                     	endif
  6415   000F28                     	if	0	;tblptru may be non-zero
  6416   000F28                     	endif
  6417   000F28  0008               	tblrd		*
  6418   000F2A  50F5               	movf	tablat,w,c
  6419   000F2C  0A20               	xorlw	32
  6420   000F2E  B4D8               	btfsc	status,2,c
  6421   000F30  EF9C  F007         	goto	u6241
  6422   000F34  EF9E  F007         	goto	u6240
  6423   000F38                     u6241:
  6424   000F38  EF87  F007         	goto	l5550
  6425   000F3C                     u6240:
  6426   000F3C                     
  6427                           ; BSR set to: 0
  6428   000F3C  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6429   000F3E  6ED9               	movwf	fsr2l,c
  6430   000F40  6ADA               	clrf	fsr2h,c
  6431   000F42  CFDE FFF6          	movff	postinc2,tblptrl
  6432   000F46  CFDD FFF7          	movff	postdec2,tblptrh
  6433   000F4A                     	if	0	;tblptru may be non-zero
  6434   000F4A                     	endif
  6435   000F4A                     	if	0	;tblptru may be non-zero
  6436   000F4A                     	endif
  6437   000F4A  0008               	tblrd		*
  6438   000F4C  CFF5 F055          	movff	tablat,??_vfsfcnvrt
  6439   000F50  0EF7               	movlw	247
  6440   000F52  2655               	addwf	??_vfsfcnvrt^0,f,c
  6441   000F54  0E04               	movlw	4
  6442   000F56  6455               	cpfsgt	??_vfsfcnvrt^0,c
  6443   000F58  EFB0  F007         	goto	u6251
  6444   000F5C  EFB2  F007         	goto	u6250
  6445   000F60                     u6251:
  6446   000F60  EF87  F007         	goto	l5550
  6447   000F64                     u6250:
  6448   000F64  EFBE  F007         	goto	l5560
  6449   000F68                     l5556:
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1476:    ++nmatch
      +                          ;
  6453   000F68  4BB7               	infsnz	_nmatch& (0+255),f,b
  6454   000F6A  2BB8               	incf	(_nmatch+1)& (0+255),f,b
  6455   000F6C                     
  6456                           ; BSR set to: 0
  6457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1477:    c = fget
      +                          c(fp);
  6458   000F6C  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6459   000F70  EC9B  F00E         	call	_fgetc	;wreg free
  6460   000F74  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6461   000F78  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6462   000F7C                     l5560:
  6463                           
  6464                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1475:   while (((
      +                          (c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
  6465   000F7C  0E20               	movlw	32
  6466   000F7E  0100               	movlb	0	; () banked
  6467   000F80  1979               	xorwf	vfsfcnvrt@c& (0+255),w,b
  6468   000F82  117A               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
  6469   000F84  B4D8               	btfsc	status,2,c
  6470   000F86  EFC7  F007         	goto	u6261
  6471   000F8A  EFC9  F007         	goto	u6260
  6472   000F8E                     u6261:
  6473   000F8E  EFB4  F007         	goto	l5556
  6474   000F92                     u6260:
  6475   000F92                     
  6476                           ; BSR set to: 0
  6477   000F92  C079  F055         	movff	vfsfcnvrt@c,??_vfsfcnvrt
  6478   000F96  0EF7               	movlw	247
  6479   000F98  2655               	addwf	??_vfsfcnvrt^0,f,c
  6480   000F9A  0E04               	movlw	4
  6481   000F9C  6455               	cpfsgt	??_vfsfcnvrt^0,c
  6482   000F9E  EFD3  F007         	goto	u6271
  6483   000FA2  EFD5  F007         	goto	u6270
  6484   000FA6                     u6271:
  6485   000FA6  EFB4  F007         	goto	l5556
  6486   000FAA                     u6270:
  6487   000FAA                     
  6488                           ; BSR set to: 0
  6489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1479:   if (c != 
      +                          (-1)) {
  6490   000FAA  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6491   000FAC  E108               	bnz	u6280
  6492   000FAE  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6493   000FB0  B4D8               	btfsc	status,2,c
  6494   000FB2  EFDD  F007         	goto	u6281
  6495   000FB6  EFDF  F007         	goto	u6280
  6496   000FBA                     u6281:
  6497   000FBA  EF31  F007         	goto	l5524
  6498   000FBE                     u6280:
  6499   000FBE                     
  6500                           ; BSR set to: 0
  6501                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1480:    ungetc(c
      +                          , fp);
  6502   000FBE  C079  F003         	movff	vfsfcnvrt@c,ungetc@c
  6503   000FC2  C07A  F004         	movff	vfsfcnvrt@c+1,ungetc@c+1
  6504   000FC6  C06A  F005         	movff	vfsfcnvrt@fp,ungetc@fp
  6505   000FCA  ECEA  F014         	call	_ungetc	;wreg free
  6506   000FCE  EF31  F007         	goto	l5524
  6507   000FD2                     l5568:
  6508                           
  6509                           ; BSR set to: 0
  6510   000FD2  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6511   000FD4  6ED9               	movwf	fsr2l,c
  6512   000FD6  6ADA               	clrf	fsr2h,c
  6513   000FD8  CFDE FFF6          	movff	postinc2,tblptrl
  6514   000FDC  CFDD FFF7          	movff	postdec2,tblptrh
  6515   000FE0                     	if	0	;tblptru may be non-zero
  6516   000FE0                     	endif
  6517   000FE0                     	if	0	;tblptru may be non-zero
  6518   000FE0                     	endif
  6519   000FE0  0008               	tblrd		*
  6520   000FE2  50F5               	movf	tablat,w,c
  6521   000FE4  6E55               	movwf	??_vfsfcnvrt^0,c
  6522   000FE6  6A56               	clrf	(??_vfsfcnvrt+1)^0,c
  6523   000FE8  5179               	movf	vfsfcnvrt@c& (0+255),w,b
  6524   000FEA  1855               	xorwf	??_vfsfcnvrt^0,w,c
  6525   000FEC  E107               	bnz	u6291
  6526   000FEE  517A               	movf	(vfsfcnvrt@c+1)& (0+255),w,b
  6527   000FF0  1856               	xorwf	(??_vfsfcnvrt+1)^0,w,c
  6528   000FF2  A4D8               	btfss	status,2,c
  6529   000FF4  EFFE  F007         	goto	u6291
  6530   000FF8  EF00  F008         	goto	u6290
  6531   000FFC                     u6291:
  6532   000FFC  EF02  F008         	goto	l5574
  6533   001000                     u6290:
  6534   001000  EF29  F007         	goto	l5520
  6535   001004                     l5574:
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1487:   if (c == 
      +                          (-1)) {
  6539   001004  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6540   001006  E106               	bnz	u6301
  6541   001008  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6542   00100A  A4D8               	btfss	status,2,c
  6543   00100C  EF0A  F008         	goto	u6301
  6544   001010  EF0C  F008         	goto	u6300
  6545   001014                     u6301:
  6546   001014  EF42  F007         	goto	l5532
  6547   001018                     u6300:
  6548   001018                     
  6549                           ; BSR set to: 0
  6550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1488:    return (
      +                          -1);
  6551   001018  696A               	setf	?_vfsfcnvrt& (0+255),b
  6552   00101A  696B               	setf	(?_vfsfcnvrt+1)& (0+255),b
  6553   00101C                     l1361:
  6554                           
  6555                           ; BSR set to: 0
  6556   00101C  0012               	return		;funcret
  6557   00101E                     __end_of_vfsfcnvrt:
  6558                           	callstack 0
  6559                           
  6560 ;; *************** function _atox *****************
  6561 ;; Defined at:
  6562 ;;		line 528 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;  fp              1   74[COMRAM] PTR struct _IO_FILE
  6565 ;;		 -> sscanf@f(11), 
  6566 ;;  pll             1   75[COMRAM] PTR unsigned long long 
  6567 ;;		 -> vfsfcnvrt@llu(8), 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  c               2    8[BANK0 ] int 
  6570 ;;  i               2    6[BANK0 ] int 
  6571 ;;  seen_0x         2    4[BANK0 ] int 
  6572 ;;  ep              2    2[BANK0 ] PTR unsigned char 
  6573 ;;		 -> dbuf@doscan$F2242(32), 
  6574 ;;  w               2    0[BANK0 ] int 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  2   74[COMRAM] int 
  6577 ;; Registers used:
  6578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;Total ram usage:       20 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 4
  6591 ;; This function calls:
  6592 ;;		___strtoxll
  6593 ;;		_fgetc
  6594 ;;		_skipws
  6595 ;;		_ungetc
  6596 ;; This function is called by:
  6597 ;;		_vfsfcnvrt
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text25
  6602   00064A                     __ptext25:
  6603                           	callstack 0
  6604   00064A                     _atox:
  6605                           	callstack 21
  6606   00064A                     
  6607                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 528: static int a
      +                          tox(FILE *fp, unsigned long long *pll);C:\Program Files\Microchip\xc8\v3.00\pic\sources\
      +                          c99\common\doscan.c: 529: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\
      +                          doscan.c: 530:     char *ep;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doscan.c: 531:     int c, i, w, seen_0x = 0;
  6608   00064A  0E00               	movlw	0
  6609   00064C  0100               	movlb	0	; () banked
  6610   00064E  6F65               	movwf	(atox@seen_0x+1)& (0+255),b
  6611   000650  0E00               	movlw	0
  6612   000652  6F64               	movwf	atox@seen_0x& (0+255),b
  6613   000654                     
  6614                           ; BSR set to: 0
  6615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 534:     skipws(f
      +                          p);
  6616   000654  C04B  F00E         	movff	atox@fp,skipws@fp
  6617   000658  EC40  F017         	call	_skipws	;wreg free
  6618   00065C                     
  6619                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 537:     w = widt
      +                          h ? width : sizeof(dbuf) - 1;
  6620   00065C  0100               	movlb	0	; () banked
  6621   00065E  51BB               	movf	_width@doscan$F2239& (0+255),w,b
  6622   000660  11BC               	iorwf	(_width@doscan$F2239+1)& (0+255),w,b
  6623   000662  A4D8               	btfss	status,2,c
  6624   000664  EF36  F003         	goto	u5891
  6625   000668  EF38  F003         	goto	u5890
  6626   00066C                     u5891:
  6627   00066C  EF3E  F003         	goto	l1322
  6628   000670                     u5890:
  6629   000670                     
  6630                           ; BSR set to: 0
  6631   000670  0E00               	movlw	0
  6632   000672  6F61               	movwf	(atox@w+1)& (0+255),b
  6633   000674  0E1F               	movlw	31
  6634   000676  6F60               	movwf	atox@w& (0+255),b
  6635   000678  EF42  F003         	goto	l5410
  6636   00067C                     l1322:
  6637                           
  6638                           ; BSR set to: 0
  6639   00067C  C0BB  F060         	movff	_width@doscan$F2239,atox@w
  6640   000680  C0BC  F061         	movff	_width@doscan$F2239+1,atox@w+1
  6641   000684                     l5410:
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 538:     i = 0;
  6645   000684  0E00               	movlw	0
  6646   000686  6F67               	movwf	(atox@i+1)& (0+255),b
  6647   000688  0E00               	movlw	0
  6648   00068A  6F66               	movwf	atox@i& (0+255),b
  6649                           
  6650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 539:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
  6651   00068C  EF52  F004         	goto	l5470
  6652   000690                     l5412:
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 540:         c = 
      +                          fgetc(fp);
  6656   000690  C04B  F005         	movff	atox@fp,fgetc@fp
  6657   000694  EC9B  F00E         	call	_fgetc	;wreg free
  6658   000698  C005  F068         	movff	?_fgetc,atox@c
  6659   00069C  C006  F069         	movff	?_fgetc+1,atox@c+1
  6660   0006A0                     
  6661                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 541:         if (
      +                          c == (-1) && (width || i==0)) {
  6662   0006A0  0100               	movlb	0	; () banked
  6663   0006A2  2968               	incf	atox@c& (0+255),w,b
  6664   0006A4  E106               	bnz	u5901
  6665   0006A6  2969               	incf	(atox@c+1)& (0+255),w,b
  6666   0006A8  A4D8               	btfss	status,2,c
  6667   0006AA  EF59  F003         	goto	u5901
  6668   0006AE  EF5B  F003         	goto	u5900
  6669   0006B2                     u5901:
  6670   0006B2  EF73  F003         	goto	l5420
  6671   0006B6                     u5900:
  6672   0006B6                     
  6673                           ; BSR set to: 0
  6674   0006B6  51BB               	movf	_width@doscan$F2239& (0+255),w,b
  6675   0006B8  11BC               	iorwf	(_width@doscan$F2239+1)& (0+255),w,b
  6676   0006BA  A4D8               	btfss	status,2,c
  6677   0006BC  EF62  F003         	goto	u5911
  6678   0006C0  EF64  F003         	goto	u5910
  6679   0006C4                     u5911:
  6680   0006C4  EF6D  F003         	goto	l1329
  6681   0006C8                     u5910:
  6682   0006C8                     
  6683                           ; BSR set to: 0
  6684   0006C8  5166               	movf	atox@i& (0+255),w,b
  6685   0006CA  1167               	iorwf	(atox@i+1)& (0+255),w,b
  6686   0006CC  A4D8               	btfss	status,2,c
  6687   0006CE  EF6B  F003         	goto	u5921
  6688   0006D2  EF6D  F003         	goto	u5920
  6689   0006D6                     u5921:
  6690   0006D6  EF73  F003         	goto	l5420
  6691   0006DA                     u5920:
  6692   0006DA                     l1329:
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 542:             
      +                          return c;
  6696   0006DA  C068  F04B         	movff	atox@c,?_atox
  6697   0006DE  C069  F04C         	movff	atox@c+1,?_atox+1
  6698   0006E2  EFD7  F004         	goto	l1330
  6699   0006E6                     l5420:
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 544:   if (c == '
      +                          -' || c == '+') {
  6703   0006E6  0E2D               	movlw	45
  6704   0006E8  1968               	xorwf	atox@c& (0+255),w,b
  6705   0006EA  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6706   0006EC  B4D8               	btfsc	status,2,c
  6707   0006EE  EF7B  F003         	goto	u5931
  6708   0006F2  EF7D  F003         	goto	u5930
  6709   0006F6                     u5931:
  6710   0006F6  EF87  F003         	goto	l5424
  6711   0006FA                     u5930:
  6712   0006FA                     
  6713                           ; BSR set to: 0
  6714   0006FA  0E2B               	movlw	43
  6715   0006FC  1968               	xorwf	atox@c& (0+255),w,b
  6716   0006FE  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6717   000700  A4D8               	btfss	status,2,c
  6718   000702  EF85  F003         	goto	u5941
  6719   000706  EF87  F003         	goto	u5940
  6720   00070A                     u5941:
  6721   00070A  EF9E  F003         	goto	l5428
  6722   00070E                     u5940:
  6723   00070E                     l5424:
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 545:    if (i > 0
      +                          ) {
  6727   00070E  BF67               	btfsc	(atox@i+1)& (0+255),7,b
  6728   000710  EF92  F003         	goto	u5951
  6729   000714  5167               	movf	(atox@i+1)& (0+255),w,b
  6730   000716  E108               	bnz	u5950
  6731   000718  0566               	decf	atox@i& (0+255),w,b
  6732   00071A  A0D8               	btfss	status,0,c
  6733   00071C  EF92  F003         	goto	u5951
  6734   000720  EF94  F003         	goto	u5950
  6735   000724                     u5951:
  6736   000724  EF46  F004         	goto	l5464
  6737   000728                     u5950:
  6738   000728                     l5426:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 546:     ungetc(c
      +                          , fp);
  6742   000728  C068  F003         	movff	atox@c,ungetc@c
  6743   00072C  C069  F004         	movff	atox@c+1,ungetc@c+1
  6744   000730  C04B  F005         	movff	atox@fp,ungetc@fp
  6745   000734  ECEA  F014         	call	_ungetc	;wreg free
  6746                           
  6747                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 547:     break;
  6748   000738  EF6D  F004         	goto	l5474
  6749   00073C                     l5428:
  6750                           
  6751                           ; BSR set to: 0
  6752   00073C  0E30               	movlw	48
  6753   00073E  1968               	xorwf	atox@c& (0+255),w,b
  6754   000740  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6755   000742  A4D8               	btfss	status,2,c
  6756   000744  EFA6  F003         	goto	u5961
  6757   000748  EFA8  F003         	goto	u5960
  6758   00074C                     u5961:
  6759   00074C  EFF6  F003         	goto	l5450
  6760   000750                     u5960:
  6761   000750                     
  6762                           ; BSR set to: 0
  6763                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 551:    dbuf[i] =
      +                           (char)c;
  6764   000750  0E3C               	movlw	low _dbuf@doscan$F2242
  6765   000752  2566               	addwf	atox@i& (0+255),w,b
  6766   000754  6ED9               	movwf	fsr2l,c
  6767   000756  0E01               	movlw	high _dbuf@doscan$F2242
  6768   000758  2167               	addwfc	(atox@i+1)& (0+255),w,b
  6769   00075A  6EDA               	movwf	fsr2h,c
  6770   00075C  C068  FFDF         	movff	atox@c,indf2
  6771   000760                     
  6772                           ; BSR set to: 0
  6773                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 552:    ++i;
  6774   000760  4B66               	infsnz	atox@i& (0+255),f,b
  6775   000762  2B67               	incf	(atox@i+1)& (0+255),f,b
  6776   000764                     
  6777                           ; BSR set to: 0
  6778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 553:    ++nmatch;
  6779   000764  4BB7               	infsnz	_nmatch& (0+255),f,b
  6780   000766  2BB8               	incf	(_nmatch+1)& (0+255),f,b
  6781   000768                     
  6782                           ; BSR set to: 0
  6783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 554:    c = fgetc
      +                          (fp);
  6784   000768  C04B  F005         	movff	atox@fp,fgetc@fp
  6785   00076C  EC9B  F00E         	call	_fgetc	;wreg free
  6786   000770  C005  F068         	movff	?_fgetc,atox@c
  6787   000774  C006  F069         	movff	?_fgetc+1,atox@c+1
  6788   000778                     
  6789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 555:    if (c == 
      +                          'X' || c == 'x') {
  6790   000778  0E58               	movlw	88
  6791   00077A  0100               	movlb	0	; () banked
  6792   00077C  1968               	xorwf	atox@c& (0+255),w,b
  6793   00077E  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6794   000780  B4D8               	btfsc	status,2,c
  6795   000782  EFC5  F003         	goto	u5971
  6796   000786  EFC7  F003         	goto	u5970
  6797   00078A                     u5971:
  6798   00078A  EFD1  F003         	goto	l5442
  6799   00078E                     u5970:
  6800   00078E                     
  6801                           ; BSR set to: 0
  6802   00078E  0E78               	movlw	120
  6803   000790  1968               	xorwf	atox@c& (0+255),w,b
  6804   000792  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6805   000794  A4D8               	btfss	status,2,c
  6806   000796  EFCF  F003         	goto	u5981
  6807   00079A  EFD1  F003         	goto	u5980
  6808   00079E                     u5981:
  6809   00079E  EFE2  F003         	goto	l5446
  6810   0007A2                     u5980:
  6811   0007A2                     l5442:
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 556:     if (seen
      +                          _0x) {
  6815   0007A2  5164               	movf	atox@seen_0x& (0+255),w,b
  6816   0007A4  1165               	iorwf	(atox@seen_0x+1)& (0+255),w,b
  6817   0007A6  B4D8               	btfsc	status,2,c
  6818   0007A8  EFD8  F003         	goto	u5991
  6819   0007AC  EFDA  F003         	goto	u5990
  6820   0007B0                     u5991:
  6821   0007B0  EFDC  F003         	goto	l1341
  6822   0007B4                     u5990:
  6823   0007B4  EF94  F003         	goto	l5426
  6824   0007B8                     l1341:
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 560:     seen_0x 
      +                          = i;
  6828   0007B8  C066  F064         	movff	atox@i,atox@seen_0x
  6829   0007BC  C067  F065         	movff	atox@i+1,atox@seen_0x+1
  6830                           
  6831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 561:    }
  6832   0007C0  EF46  F004         	goto	l5464
  6833   0007C4                     l5446:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 563:     if (c !=
      +                           (-1)) {
  6837   0007C4  2968               	incf	atox@c& (0+255),w,b
  6838   0007C6  E108               	bnz	u6000
  6839   0007C8  2969               	incf	(atox@c+1)& (0+255),w,b
  6840   0007CA  B4D8               	btfsc	status,2,c
  6841   0007CC  EFEA  F003         	goto	u6001
  6842   0007D0  EFEC  F003         	goto	u6000
  6843   0007D4                     u6001:
  6844   0007D4  EF52  F004         	goto	l5470
  6845   0007D8                     u6000:
  6846   0007D8                     
  6847                           ; BSR set to: 0
  6848                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 564:      ungetc(
      +                          c, fp);
  6849   0007D8  C068  F003         	movff	atox@c,ungetc@c
  6850   0007DC  C069  F004         	movff	atox@c+1,ungetc@c+1
  6851   0007E0  C04B  F005         	movff	atox@fp,ungetc@fp
  6852   0007E4  ECEA  F014         	call	_ungetc	;wreg free
  6853   0007E8  EF52  F004         	goto	l5470
  6854   0007EC                     l5450:
  6855                           
  6856                           ; BSR set to: 0
  6857   0007EC  C068  F04D         	movff	atox@c,??_atox
  6858   0007F0  0ED0               	movlw	208
  6859   0007F2  264D               	addwf	??_atox^0,f,c
  6860   0007F4  0E09               	movlw	9
  6861   0007F6  644D               	cpfsgt	??_atox^0,c
  6862   0007F8  EF00  F004         	goto	u6011
  6863   0007FC  EF02  F004         	goto	u6010
  6864   000800                     u6011:
  6865   000800  EF46  F004         	goto	l5464
  6866   000804                     u6010:
  6867   000804                     
  6868                           ; BSR set to: 0
  6869   000804  C068  F04D         	movff	atox@c,??_atox
  6870   000808  0E20               	movlw	32
  6871   00080A  124D               	iorwf	??_atox^0,f,c
  6872   00080C  0E9F               	movlw	159
  6873   00080E  264D               	addwf	??_atox^0,f,c
  6874   000810  0E05               	movlw	5
  6875   000812  644D               	cpfsgt	??_atox^0,c
  6876   000814  EF0E  F004         	goto	u6021
  6877   000818  EF10  F004         	goto	u6020
  6878   00081C                     u6021:
  6879   00081C  EF46  F004         	goto	l5464
  6880   000820                     u6020:
  6881   000820                     
  6882                           ; BSR set to: 0
  6883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 570:    if (c != 
      +                          (-1)) {
  6884   000820  2968               	incf	atox@c& (0+255),w,b
  6885   000822  E108               	bnz	u6030
  6886   000824  2969               	incf	(atox@c+1)& (0+255),w,b
  6887   000826  B4D8               	btfsc	status,2,c
  6888   000828  EF18  F004         	goto	u6031
  6889   00082C  EF1A  F004         	goto	u6030
  6890   000830                     u6031:
  6891   000830  EF22  F004         	goto	l5458
  6892   000834                     u6030:
  6893   000834                     
  6894                           ; BSR set to: 0
  6895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 571:     ungetc(c
      +                          , fp);
  6896   000834  C068  F003         	movff	atox@c,ungetc@c
  6897   000838  C069  F004         	movff	atox@c+1,ungetc@c+1
  6898   00083C  C04B  F005         	movff	atox@fp,ungetc@fp
  6899   000840  ECEA  F014         	call	_ungetc	;wreg free
  6900   000844                     l5458:
  6901                           
  6902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 573:    if (seen_
      +                          0x && seen_0x == (i-1)) {
  6903   000844  0100               	movlb	0	; () banked
  6904   000846  5164               	movf	atox@seen_0x& (0+255),w,b
  6905   000848  1165               	iorwf	(atox@seen_0x+1)& (0+255),w,b
  6906   00084A  B4D8               	btfsc	status,2,c
  6907   00084C  EF2A  F004         	goto	u6041
  6908   000850  EF2C  F004         	goto	u6040
  6909   000854                     u6041:
  6910   000854  EF6D  F004         	goto	l5474
  6911   000858                     u6040:
  6912   000858                     
  6913                           ; BSR set to: 0
  6914   000858  0EFF               	movlw	255
  6915   00085A  2566               	addwf	atox@i& (0+255),w,b
  6916   00085C  6E4D               	movwf	??_atox^0,c
  6917   00085E  0EFF               	movlw	255
  6918   000860  2167               	addwfc	(atox@i+1)& (0+255),w,b
  6919   000862  6E4E               	movwf	(??_atox+1)^0,c
  6920   000864  5164               	movf	atox@seen_0x& (0+255),w,b
  6921   000866  184D               	xorwf	??_atox^0,w,c
  6922   000868  E107               	bnz	u6051
  6923   00086A  5165               	movf	(atox@seen_0x+1)& (0+255),w,b
  6924   00086C  184E               	xorwf	(??_atox+1)^0,w,c
  6925   00086E  A4D8               	btfss	status,2,c
  6926   000870  EF3C  F004         	goto	u6051
  6927   000874  EF3E  F004         	goto	u6050
  6928   000878                     u6051:
  6929   000878  EF6D  F004         	goto	l5474
  6930   00087C                     u6050:
  6931   00087C                     
  6932                           ; BSR set to: 0
  6933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 574:     i--;
  6934   00087C  0766               	decf	atox@i& (0+255),f,b
  6935   00087E  A0D8               	btfss	status,0,c
  6936   000880  0767               	decf	(atox@i+1)& (0+255),f,b
  6937                           
  6938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 575:     nmatch--
      +                          ;
  6939   000882  07B7               	decf	_nmatch& (0+255),f,b
  6940   000884  A0D8               	btfss	status,0,c
  6941   000886  07B8               	decf	(_nmatch+1)& (0+255),f,b
  6942   000888  EF6D  F004         	goto	l5474
  6943   00088C                     l5464:
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 579:         dbuf
      +                          [i] = (char)c;
  6947   00088C  0E3C               	movlw	low _dbuf@doscan$F2242
  6948   00088E  2566               	addwf	atox@i& (0+255),w,b
  6949   000890  6ED9               	movwf	fsr2l,c
  6950   000892  0E01               	movlw	high _dbuf@doscan$F2242
  6951   000894  2167               	addwfc	(atox@i+1)& (0+255),w,b
  6952   000896  6EDA               	movwf	fsr2h,c
  6953   000898  C068  FFDF         	movff	atox@c,indf2
  6954   00089C                     
  6955                           ; BSR set to: 0
  6956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 580:         ++i;
  6957   00089C  4B66               	infsnz	atox@i& (0+255),f,b
  6958   00089E  2B67               	incf	(atox@i+1)& (0+255),f,b
  6959   0008A0                     
  6960                           ; BSR set to: 0
  6961                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 581:         ++nm
      +                          atch;
  6962   0008A0  4BB7               	infsnz	_nmatch& (0+255),f,b
  6963   0008A2  2BB8               	incf	(_nmatch+1)& (0+255),f,b
  6964   0008A4                     l5470:
  6965                           
  6966                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 539:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
  6967   0008A4  0100               	movlb	0	; () banked
  6968   0008A6  5160               	movf	atox@w& (0+255),w,b
  6969   0008A8  5D66               	subwf	atox@i& (0+255),w,b
  6970   0008AA  5167               	movf	(atox@i+1)& (0+255),w,b
  6971   0008AC  0A80               	xorlw	128
  6972   0008AE  6E4D               	movwf	??_atox^0,c
  6973   0008B0  5161               	movf	(atox@w+1)& (0+255),w,b
  6974   0008B2  0A80               	xorlw	128
  6975   0008B4  584D               	subwfb	??_atox^0,w,c
  6976   0008B6  B0D8               	btfsc	status,0,c
  6977   0008B8  EF60  F004         	goto	u6061
  6978   0008BC  EF62  F004         	goto	u6060
  6979   0008C0                     u6061:
  6980   0008C0  EF6D  F004         	goto	l5474
  6981   0008C4                     u6060:
  6982   0008C4                     
  6983                           ; BSR set to: 0
  6984   0008C4  5167               	movf	(atox@i+1)& (0+255),w,b
  6985   0008C6  E109               	bnz	u6070
  6986   0008C8  0E1F               	movlw	31
  6987   0008CA  5D66               	subwf	atox@i& (0+255),w,b
  6988   0008CC  A0D8               	btfss	status,0,c
  6989   0008CE  EF6B  F004         	goto	u6071
  6990   0008D2  EF6D  F004         	goto	u6070
  6991   0008D6                     u6071:
  6992   0008D6  EF48  F003         	goto	l5412
  6993   0008DA                     u6070:
  6994   0008DA                     l5474:
  6995                           
  6996                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 583:     dbuf[i] 
      +                          = '\0';
  6997   0008DA  0E3C               	movlw	low _dbuf@doscan$F2242
  6998   0008DC  0100               	movlb	0	; () banked
  6999   0008DE  2566               	addwf	atox@i& (0+255),w,b
  7000   0008E0  6ED9               	movwf	fsr2l,c
  7001   0008E2  0E01               	movlw	high _dbuf@doscan$F2242
  7002   0008E4  2167               	addwfc	(atox@i+1)& (0+255),w,b
  7003   0008E6  6EDA               	movwf	fsr2h,c
  7004   0008E8  6ADF               	clrf	indf2,c
  7005   0008EA                     
  7006                           ; BSR set to: 0
  7007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 587:     *pll = _
      +                          _strtoxll(&dbuf[0],&ep,16,0);
  7008   0008EA  0E3C               	movlw	low _dbuf@doscan$F2242
  7009   0008EC  6E1B               	movwf	___strtoxll@s^0,c
  7010   0008EE  0E01               	movlw	high _dbuf@doscan$F2242
  7011   0008F0  6E1C               	movwf	(___strtoxll@s+1)^0,c
  7012   0008F2  0E62               	movlw	low atox@ep
  7013   0008F4  6E1D               	movwf	___strtoxll@endptr^0,c
  7014   0008F6  0E00               	movlw	0
  7015   0008F8  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7016   0008FA  0E10               	movlw	16
  7017   0008FC  6E1E               	movwf	___strtoxll@base^0,c
  7018   0008FE  0E00               	movlw	0
  7019   000900  6E20               	movwf	___strtoxll@is_signed^0,c
  7020   000902  EC70  F000         	call	___strtoxll	;wreg free
  7021   000906  C01B  F04D         	movff	?___strtoxll,??_atox
  7022   00090A  C01C  F04E         	movff	?___strtoxll+1,??_atox+1
  7023   00090E  C01D  F04F         	movff	?___strtoxll+2,??_atox+2
  7024   000912  C01E  F050         	movff	?___strtoxll+3,??_atox+3
  7025   000916  C01F  F051         	movff	?___strtoxll+4,??_atox+4
  7026   00091A  C020  F052         	movff	?___strtoxll+5,??_atox+5
  7027   00091E  C021  F053         	movff	?___strtoxll+6,??_atox+6
  7028   000922  C022  F054         	movff	?___strtoxll+7,??_atox+7
  7029   000926  504C               	movf	atox@pll^0,w,c
  7030   000928  6ED9               	movwf	fsr2l,c
  7031   00092A  6ADA               	clrf	fsr2h,c
  7032   00092C  C04D  FFDE         	movff	??_atox,postinc2
  7033   000930  C04E  FFDE         	movff	??_atox+1,postinc2
  7034   000934  C04F  FFDE         	movff	??_atox+2,postinc2
  7035   000938  C050  FFDE         	movff	??_atox+3,postinc2
  7036   00093C  C051  FFDE         	movff	??_atox+4,postinc2
  7037   000940  C052  FFDE         	movff	??_atox+5,postinc2
  7038   000944  C053  FFDE         	movff	??_atox+6,postinc2
  7039   000948  C054  FFDE         	movff	??_atox+7,postinc2
  7040   00094C                     
  7041                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 592:     return (
      +                          errno || !i || ep == &dbuf[0]) ? (-1) - 1 : !asup;
  7042   00094C  0100               	movlb	0	; () banked
  7043   00094E  51BD               	movf	_errno& (0+255),w,b
  7044   000950  11BE               	iorwf	(_errno+1)& (0+255),w,b
  7045   000952  A4D8               	btfss	status,2,c
  7046   000954  EFAE  F004         	goto	u6081
  7047   000958  EFB0  F004         	goto	u6080
  7048   00095C                     u6081:
  7049   00095C  EFD3  F004         	goto	l5486
  7050   000960                     u6080:
  7051   000960                     
  7052                           ; BSR set to: 0
  7053   000960  5166               	movf	atox@i& (0+255),w,b
  7054   000962  1167               	iorwf	(atox@i+1)& (0+255),w,b
  7055   000964  B4D8               	btfsc	status,2,c
  7056   000966  EFB7  F004         	goto	u6091
  7057   00096A  EFB9  F004         	goto	u6090
  7058   00096E                     u6091:
  7059   00096E  EFD3  F004         	goto	l5486
  7060   000972                     u6090:
  7061   000972                     
  7062                           ; BSR set to: 0
  7063   000972  0E3C               	movlw	low _dbuf@doscan$F2242
  7064   000974  1962               	xorwf	atox@ep& (0+255),w,b
  7065   000976  E109               	bnz	u6100
  7066   000978  0E01               	movlw	high _dbuf@doscan$F2242
  7067   00097A  1963               	xorwf	(atox@ep+1)& (0+255),w,b
  7068   00097C  B4D8               	btfsc	status,2,c
  7069   00097E  EFC3  F004         	goto	u6101
  7070   000982  EFC5  F004         	goto	u6100
  7071   000986                     u6101:
  7072   000986  EFD3  F004         	goto	l5486
  7073   00098A                     u6100:
  7074   00098A                     
  7075                           ; BSR set to: 0
  7076   00098A  51CE               	movf	_asup& (0+255),w,b
  7077   00098C  B4D8               	btfsc	status,2,c
  7078   00098E  EFCB  F004         	goto	u6111
  7079   000992  EFCE  F004         	goto	u6110
  7080   000996                     u6111:
  7081   000996  0E01               	movlw	1
  7082   000998  EFCF  F004         	goto	u6120
  7083   00099C                     u6110:
  7084   00099C  0E00               	movlw	0
  7085   00099E                     u6120:
  7086   00099E  6E4B               	movwf	?_atox^0,c
  7087   0009A0  6A4C               	clrf	(?_atox+1)^0,c
  7088   0009A2  EFD7  F004         	goto	l1330
  7089   0009A6                     l5486:
  7090                           
  7091                           ; BSR set to: 0
  7092   0009A6  0EFF               	movlw	255
  7093   0009A8  6E4C               	movwf	(?_atox+1)^0,c
  7094   0009AA  0EFE               	movlw	254
  7095   0009AC  6E4B               	movwf	?_atox^0,c
  7096   0009AE                     l1330:
  7097                           
  7098                           ; BSR set to: 0
  7099   0009AE  0012               	return		;funcret
  7100   0009B0                     __end_of_atox:
  7101                           	callstack 0
  7102                           
  7103 ;; *************** function _skipws *****************
  7104 ;; Defined at:
  7105 ;;		line 74 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  7108 ;;		 -> sscanf@f(11), 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  c               2   15[COMRAM] int 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7120 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;Total ram usage:        4 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; Hardware stack levels required when called: 3
  7127 ;; This function calls:
  7128 ;;		_fgetc
  7129 ;;		_ungetc
  7130 ;; This function is called by:
  7131 ;;		_atox
  7132 ;;		_vfsfcnvrt
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text26
  7137   002E80                     __ptext26:
  7138                           	callstack 0
  7139   002E80                     _skipws:
  7140                           	callstack 22
  7141   002E80                     
  7142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 74: static void s
      +                          kipws(FILE *fp);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 75
      +                          : {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 76:     int c;
      +                          ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
  7143   002E80  EF62  F017         	goto	l5272
  7144   002E84                     l5266:
  7145                           
  7146                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 79:         if (!
      +                          (((c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
  7147   002E84  0E20               	movlw	32
  7148   002E86  1810               	xorwf	skipws@c^0,w,c
  7149   002E88  1011               	iorwf	(skipws@c+1)^0,w,c
  7150   002E8A  B4D8               	btfsc	status,2,c
  7151   002E8C  EF4A  F017         	goto	u5521
  7152   002E90  EF4C  F017         	goto	u5520
  7153   002E94                     u5521:
  7154   002E94  EF62  F017         	goto	l5272
  7155   002E98                     u5520:
  7156   002E98  C010  F00F         	movff	skipws@c,??_skipws
  7157   002E9C  0EF7               	movlw	247
  7158   002E9E  260F               	addwf	??_skipws^0,f,c
  7159   002EA0  0E04               	movlw	4
  7160   002EA2  640F               	cpfsgt	??_skipws^0,c
  7161   002EA4  EF56  F017         	goto	u5531
  7162   002EA8  EF58  F017         	goto	u5530
  7163   002EAC                     u5531:
  7164   002EAC  EF62  F017         	goto	l5272
  7165   002EB0                     u5530:
  7166   002EB0                     
  7167                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 80:             u
      +                          ngetc(c, fp);
  7168   002EB0  C010  F003         	movff	skipws@c,ungetc@c
  7169   002EB4  C011  F004         	movff	skipws@c+1,ungetc@c+1
  7170   002EB8  C00E  F005         	movff	skipws@fp,ungetc@fp
  7171   002EBC  ECEA  F014         	call	_ungetc	;wreg free
  7172                           
  7173                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 81:             b
      +                          reak;
  7174   002EC0  EF74  F017         	goto	l1318
  7175   002EC4                     l5272:
  7176                           
  7177                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
  7178   002EC4  C00E  F005         	movff	skipws@fp,fgetc@fp
  7179   002EC8  EC9B  F00E         	call	_fgetc	;wreg free
  7180   002ECC  C005  F010         	movff	?_fgetc,skipws@c
  7181   002ED0  C006  F011         	movff	?_fgetc+1,skipws@c+1
  7182   002ED4  2810               	incf	skipws@c^0,w,c
  7183   002ED6  E106               	bnz	u5541
  7184   002ED8  2811               	incf	(skipws@c+1)^0,w,c
  7185   002EDA  A4D8               	btfss	status,2,c
  7186   002EDC  EF72  F017         	goto	u5541
  7187   002EE0  EF74  F017         	goto	u5540
  7188   002EE4                     u5541:
  7189   002EE4  EF42  F017         	goto	l5266
  7190   002EE8                     u5540:
  7191   002EE8                     l1318:
  7192   002EE8  0012               	return		;funcret
  7193   002EEA                     __end_of_skipws:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _ungetc *****************
  7197 ;; Defined at:
  7198 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_getc.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  c               2    2[COMRAM] int 
  7201 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7202 ;;		 -> sscanf@f(11), 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;		None
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2    2[COMRAM] int 
  7207 ;; Registers used:
  7208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7214 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7217 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7218 ;;Total ram usage:        5 bytes
  7219 ;; Hardware stack levels used: 1
  7220 ;; Hardware stack levels required when called: 1
  7221 ;; This function calls:
  7222 ;;		Nothing
  7223 ;; This function is called by:
  7224 ;;		_skipws
  7225 ;;		_atox
  7226 ;;		_vfsfcnvrt
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text27
  7231   0029D4                     __ptext27:
  7232                           	callstack 0
  7233   0029D4                     _ungetc:
  7234                           	callstack 24
  7235   0029D4  2803               	incf	ungetc@c^0,w,c
  7236   0029D6  E106               	bnz	u5441
  7237   0029D8  2804               	incf	(ungetc@c+1)^0,w,c
  7238   0029DA  A4D8               	btfss	status,2,c
  7239   0029DC  EFF2  F014         	goto	u5441
  7240   0029E0  EFF4  F014         	goto	u5440
  7241   0029E4                     u5441:
  7242   0029E4  EFF6  F014         	goto	l5228
  7243   0029E8                     u5440:
  7244   0029E8  EF37  F015         	goto	l1471
  7245   0029EC                     l5228:
  7246   0029EC  5005               	movf	ungetc@fp^0,w,c
  7247   0029EE  A4D8               	btfss	status,2,c
  7248   0029F0  EFFC  F014         	goto	u5451
  7249   0029F4  EFFE  F014         	goto	u5450
  7250   0029F8                     u5451:
  7251   0029F8  EF11  F015         	goto	l5236
  7252   0029FC                     u5450:
  7253   0029FC  0E03               	movlw	3
  7254   0029FE  0100               	movlb	0	; () banked
  7255   002A00  19CD               	xorwf	___ungetcnt& (0+255),w,b
  7256   002A02  B4D8               	btfsc	status,2,c
  7257   002A04  EF06  F015         	goto	u5461
  7258   002A08  EF08  F015         	goto	u5460
  7259   002A0C                     u5461:
  7260   002A0C  EF37  F015         	goto	l1471
  7261   002A10                     u5460:
  7262   002A10                     
  7263                           ; BSR set to: 0
  7264   002A10  51CD               	movf	___ungetcnt& (0+255),w,b
  7265   002A12  0FAE               	addlw	low ___ungetbuf
  7266   002A14  6ED9               	movwf	fsr2l,c
  7267   002A16  6ADA               	clrf	fsr2h,c
  7268   002A18  C003  FFDF         	movff	ungetc@c,indf2
  7269   002A1C                     
  7270                           ; BSR set to: 0
  7271   002A1C  2BCD               	incf	___ungetcnt& (0+255),f,b
  7272   002A1E  EF37  F015         	goto	l1471
  7273   002A22                     l5236:
  7274   002A22  5005               	movf	ungetc@fp^0,w,c
  7275   002A24  6ED9               	movwf	fsr2l,c
  7276   002A26  6ADA               	clrf	fsr2h,c
  7277   002A28  0E07               	movlw	7
  7278   002A2A  26D9               	addwf	fsr2l,f,c
  7279   002A2C  0E03               	movlw	3
  7280   002A2E  18DE               	xorwf	postinc2,w,c
  7281   002A30  10DE               	iorwf	postinc2,w,c
  7282   002A32  B4D8               	btfsc	status,2,c
  7283   002A34  EF1E  F015         	goto	u5471
  7284   002A38  EF20  F015         	goto	u5470
  7285   002A3C                     u5471:
  7286   002A3C  EF37  F015         	goto	l1471
  7287   002A40                     u5470:
  7288   002A40  5005               	movf	ungetc@fp^0,w,c
  7289   002A42  6ED9               	movwf	fsr2l,c
  7290   002A44  6ADA               	clrf	fsr2h,c
  7291   002A46  0E07               	movlw	7
  7292   002A48  26D9               	addwf	fsr2l,f,c
  7293   002A4A  50DF               	movf	indf2,w,c
  7294   002A4C  6E06               	movwf	??_ungetc^0,c
  7295   002A4E  5005               	movf	ungetc@fp^0,w,c
  7296   002A50  2406               	addwf	??_ungetc^0,w,c
  7297   002A52  6ED9               	movwf	fsr2l,c
  7298   002A54  6ADA               	clrf	fsr2h,c
  7299   002A56  0E04               	movlw	4
  7300   002A58  26D9               	addwf	fsr2l,f,c
  7301   002A5A  C003  FFDF         	movff	ungetc@c,indf2
  7302   002A5E  5005               	movf	ungetc@fp^0,w,c
  7303   002A60  6ED9               	movwf	fsr2l,c
  7304   002A62  6ADA               	clrf	fsr2h,c
  7305   002A64  0E07               	movlw	7
  7306   002A66  26D9               	addwf	fsr2l,f,c
  7307   002A68  2ADE               	incf	postinc2,f,c
  7308   002A6A  0E00               	movlw	0
  7309   002A6C  22DD               	addwfc	postdec2,f,c
  7310   002A6E                     l1471:
  7311   002A6E  0012               	return		;funcret
  7312   002A70                     __end_of_ungetc:
  7313                           	callstack 0
  7314                           
  7315 ;; *************** function _fgetc *****************
  7316 ;; Defined at:
  7317 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_getc.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7320 ;;		 -> sscanf@f(11), 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  c               2   11[COMRAM] int 
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  2    4[COMRAM] int 
  7325 ;; Registers used:
  7326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;Total ram usage:        9 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; Hardware stack levels required when called: 2
  7339 ;; This function calls:
  7340 ;;		_getch
  7341 ;; This function is called by:
  7342 ;;		_skipws
  7343 ;;		_atox
  7344 ;;		_vfsfcnvrt
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text28
  7349   001D36                     __ptext28:
  7350                           	callstack 0
  7351   001D36                     _fgetc:
  7352                           	callstack 22
  7353   001D36  5005               	movf	fgetc@fp^0,w,c
  7354   001D38  A4D8               	btfss	status,2,c
  7355   001D3A  EFA1  F00E         	goto	u5481
  7356   001D3E  EFA3  F00E         	goto	u5480
  7357   001D42                     u5481:
  7358   001D42  EFC0  F00E         	goto	l5248
  7359   001D46                     u5480:
  7360   001D46  0100               	movlb	0	; () banked
  7361   001D48  51CD               	movf	___ungetcnt& (0+255),w,b
  7362   001D4A  A4D8               	btfss	status,2,c
  7363   001D4C  EFAA  F00E         	goto	u5491
  7364   001D50  EFAC  F00E         	goto	u5490
  7365   001D54                     u5491:
  7366   001D54  EFB4  F00E         	goto	l5246
  7367   001D58                     u5490:
  7368   001D58                     
  7369                           ; BSR set to: 0
  7370   001D58  ECF5  F019         	call	_getch	;wreg free
  7371   001D5C  C003  F00C         	movff	?_getch,fgetc@c
  7372   001D60  C004  F00D         	movff	?_getch+1,fgetc@c+1
  7373   001D64  EF17  F00F         	goto	l5260
  7374   001D68                     l5246:
  7375                           
  7376                           ; BSR set to: 0
  7377   001D68  07CD               	decf	___ungetcnt& (0+255),f,b
  7378   001D6A  51CD               	movf	___ungetcnt& (0+255),w,b
  7379   001D6C  0FAE               	addlw	low ___ungetbuf
  7380   001D6E  6ED9               	movwf	fsr2l,c
  7381   001D70  6ADA               	clrf	fsr2h,c
  7382   001D72  50DF               	movf	indf2,w,c
  7383   001D74  6E07               	movwf	??_fgetc^0,c
  7384   001D76  5007               	movf	??_fgetc^0,w,c
  7385   001D78  6E0C               	movwf	fgetc@c^0,c
  7386   001D7A  6A0D               	clrf	(fgetc@c+1)^0,c
  7387   001D7C  EF17  F00F         	goto	l5260
  7388   001D80                     l5248:
  7389   001D80  5005               	movf	fgetc@fp^0,w,c
  7390   001D82  6ED9               	movwf	fsr2l,c
  7391   001D84  6ADA               	clrf	fsr2h,c
  7392   001D86  0E07               	movlw	7
  7393   001D88  26D9               	addwf	fsr2l,f,c
  7394   001D8A  50DE               	movf	postinc2,w,c
  7395   001D8C  10DE               	iorwf	postinc2,w,c
  7396   001D8E  B4D8               	btfsc	status,2,c
  7397   001D90  EFCC  F00E         	goto	u5501
  7398   001D94  EFCE  F00E         	goto	u5500
  7399   001D98                     u5501:
  7400   001D98  EFE7  F00E         	goto	l5252
  7401   001D9C                     u5500:
  7402   001D9C  5005               	movf	fgetc@fp^0,w,c
  7403   001D9E  6ED9               	movwf	fsr2l,c
  7404   001DA0  6ADA               	clrf	fsr2h,c
  7405   001DA2  0E07               	movlw	7
  7406   001DA4  26D9               	addwf	fsr2l,f,c
  7407   001DA6  06DE               	decf	postinc2,f,c
  7408   001DA8  0E00               	movlw	0
  7409   001DAA  5ADD               	subwfb	postdec2,f,c
  7410   001DAC  CFDE F007          	movff	postinc2,??_fgetc
  7411   001DB0  CFDD F008          	movff	postdec2,??_fgetc+1
  7412   001DB4  5005               	movf	fgetc@fp^0,w,c
  7413   001DB6  2407               	addwf	??_fgetc^0,w,c
  7414   001DB8  6ED9               	movwf	fsr2l,c
  7415   001DBA  6ADA               	clrf	fsr2h,c
  7416   001DBC  0E04               	movlw	4
  7417   001DBE  26D9               	addwf	fsr2l,f,c
  7418   001DC0  50DF               	movf	indf2,w,c
  7419   001DC2  6E09               	movwf	(??_fgetc+2)^0,c
  7420   001DC4  5009               	movf	(??_fgetc+2)^0,w,c
  7421   001DC6  6E0C               	movwf	fgetc@c^0,c
  7422   001DC8  6A0D               	clrf	(fgetc@c+1)^0,c
  7423   001DCA  EF17  F00F         	goto	l5260
  7424   001DCE                     l5252:
  7425   001DCE  5005               	movf	fgetc@fp^0,w,c
  7426   001DD0  6ED9               	movwf	fsr2l,c
  7427   001DD2  6ADA               	clrf	fsr2h,c
  7428   001DD4  0E02               	movlw	2
  7429   001DD6  26D9               	addwf	fsr2l,f,c
  7430   001DD8  CFDE F007          	movff	postinc2,??_fgetc
  7431   001DDC  CFDD F008          	movff	postdec2,??_fgetc+1
  7432   001DE0  5005               	movf	fgetc@fp^0,w,c
  7433   001DE2  6ED9               	movwf	fsr2l,c
  7434   001DE4  6ADA               	clrf	fsr2h,c
  7435   001DE6  CFDE F009          	movff	postinc2,??_fgetc+2
  7436   001DEA  CFDD F00A          	movff	postdec2,??_fgetc+3
  7437   001DEE  5007               	movf	??_fgetc^0,w,c
  7438   001DF0  2409               	addwf	(??_fgetc+2)^0,w,c
  7439   001DF2  6ED9               	movwf	fsr2l,c
  7440   001DF4  5008               	movf	(??_fgetc+1)^0,w,c
  7441   001DF6  200A               	addwfc	(??_fgetc+3)^0,w,c
  7442   001DF8  6EDA               	movwf	fsr2h,c
  7443   001DFA  50DF               	movf	indf2,w,c
  7444   001DFC  6E0B               	movwf	(??_fgetc+4)^0,c
  7445   001DFE  500B               	movf	(??_fgetc+4)^0,w,c
  7446   001E00  6E0C               	movwf	fgetc@c^0,c
  7447   001E02  6A0D               	clrf	(fgetc@c+1)^0,c
  7448   001E04  500C               	movf	fgetc@c^0,w,c
  7449   001E06  100D               	iorwf	(fgetc@c+1)^0,w,c
  7450   001E08  A4D8               	btfss	status,2,c
  7451   001E0A  EF09  F00F         	goto	u5511
  7452   001E0E  EF0B  F00F         	goto	u5510
  7453   001E12                     u5511:
  7454   001E12  EF0F  F00F         	goto	l5258
  7455   001E16                     u5510:
  7456   001E16  680C               	setf	fgetc@c^0,c
  7457   001E18  680D               	setf	(fgetc@c+1)^0,c
  7458   001E1A  EF17  F00F         	goto	l5260
  7459   001E1E                     l5258:
  7460   001E1E  5005               	movf	fgetc@fp^0,w,c
  7461   001E20  6ED9               	movwf	fsr2l,c
  7462   001E22  6ADA               	clrf	fsr2h,c
  7463   001E24  0E02               	movlw	2
  7464   001E26  26D9               	addwf	fsr2l,f,c
  7465   001E28  2ADE               	incf	postinc2,f,c
  7466   001E2A  0E00               	movlw	0
  7467   001E2C  22DD               	addwfc	postdec2,f,c
  7468   001E2E                     l5260:
  7469   001E2E  C00C  F005         	movff	fgetc@c,?_fgetc
  7470   001E32  C00D  F006         	movff	fgetc@c+1,?_fgetc+1
  7471   001E36  0012               	return		;funcret
  7472   001E38                     __end_of_fgetc:
  7473                           	callstack 0
  7474                           
  7475 ;; *************** function _getch *****************
  7476 ;; Defined at:
  7477 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\getch.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;		None
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;		None
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  2    2[COMRAM] int 
  7484 ;; Registers used:
  7485 ;;		None
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7495 ;;Total ram usage:        2 bytes
  7496 ;; Hardware stack levels used: 1
  7497 ;; Hardware stack levels required when called: 1
  7498 ;; This function calls:
  7499 ;;		Nothing
  7500 ;; This function is called by:
  7501 ;;		_fgetc
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           	psect	text29
  7506   0033EA                     __ptext29:
  7507                           	callstack 0
  7508   0033EA                     _getch:
  7509                           	callstack 22
  7510   0033EA  6803               	setf	?_getch^0,c
  7511   0033EC  6804               	setf	(?_getch+1)^0,c
  7512   0033EE  0012               	return		;funcret
  7513   0033F0                     __end_of_getch:
  7514                           	callstack 0
  7515                           
  7516 ;; *************** function ___strtoxll *****************
  7517 ;; Defined at:
  7518 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__strtoxll.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  s               2   26[COMRAM] PTR const unsigned char 
  7521 ;;		 -> dbuf@doscan$F2242(32), 
  7522 ;;  endptr          1   28[COMRAM] PTR PTR unsigned char 
  7523 ;;		 -> atox@ep(2), 
  7524 ;;  base            2   29[COMRAM] int 
  7525 ;;  is_signed       1   31[COMRAM] unsigned char 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  a               8   63[COMRAM] unsigned long long 
  7528 ;;  limit           8   54[COMRAM] unsigned long long 
  7529 ;;  prev_a          8   42[COMRAM] unsigned long long 
  7530 ;;  cp              2   71[COMRAM] PTR const unsigned char 
  7531 ;;		 -> dbuf@doscan$F2242(32), 
  7532 ;;  c               1   73[COMRAM] unsigned char 
  7533 ;;  flags           1   62[COMRAM] enum E246
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  8   26[COMRAM] unsigned long long 
  7536 ;; Registers used:
  7537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7543 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7544 ;;      Locals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7546 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7547 ;;Total ram usage:       48 bytes
  7548 ;; Hardware stack levels used: 1
  7549 ;; Hardware stack levels required when called: 2
  7550 ;; This function calls:
  7551 ;;		___omul
  7552 ;; This function is called by:
  7553 ;;		_atox
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text30
  7558   0000E0                     __ptext30:
  7559                           	callstack 0
  7560   0000E0                     ___strtoxll:
  7561                           	callstack 22
  7562   0000E0  6A3F               	clrf	___strtoxll@flags^0,c
  7563   0000E2  EE20  F040         	lfsr	2,___strtoxll@a
  7564   0000E6  0E07               	movlw	7
  7565   0000E8                     u5551:
  7566   0000E8  6ADE               	clrf	postinc2,c
  7567   0000EA  06E8               	decf	wreg,f,c
  7568   0000EC  E2FD               	bc	u5551
  7569   0000EE  C01B  F048         	movff	___strtoxll@s,___strtoxll@cp
  7570   0000F2  C01C  F049         	movff	___strtoxll@s+1,___strtoxll@cp+1
  7571   0000F6  BE1F               	btfsc	(___strtoxll@base+1)^0,7,c
  7572   0000F8  EF89  F000         	goto	u5560
  7573   0000FC  501F               	movf	(___strtoxll@base+1)^0,w,c
  7574   0000FE  E107               	bnz	u5561
  7575   000100  0E25               	movlw	37
  7576   000102  5C1E               	subwf	___strtoxll@base^0,w,c
  7577   000104  B0D8               	btfsc	status,0,c
  7578   000106  EF87  F000         	goto	u5561
  7579   00010A  EF89  F000         	goto	u5560
  7580   00010E                     u5561:
  7581   00010E  EF92  F000         	goto	l5284
  7582   000112                     u5560:
  7583   000112  041E               	decf	___strtoxll@base^0,w,c
  7584   000114  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7585   000116  A4D8               	btfss	status,2,c
  7586   000118  EF90  F000         	goto	u5571
  7587   00011C  EF92  F000         	goto	u5570
  7588   000120                     u5571:
  7589   000120  EF99  F000         	goto	l5286
  7590   000124                     u5570:
  7591   000124                     l5284:
  7592   000124  0E00               	movlw	0
  7593   000126  0100               	movlb	0	; () banked
  7594   000128  6FBE               	movwf	(_errno+1)& (0+255),b
  7595   00012A  0E16               	movlw	22
  7596   00012C  6FBD               	movwf	_errno& (0+255),b
  7597   00012E  EFFA  F002         	goto	l5390
  7598   000132                     l5286:
  7599   000132  5048               	movf	___strtoxll@cp^0,w,c
  7600   000134  1049               	iorwf	(___strtoxll@cp+1)^0,w,c
  7601   000136  B4D8               	btfsc	status,2,c
  7602   000138  EFA0  F000         	goto	u5581
  7603   00013C  EFA2  F000         	goto	u5580
  7604   000140                     u5581:
  7605   000140  EFFA  F002         	goto	l5390
  7606   000144                     u5580:
  7607   000144  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7608   000148  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7609   00014C  50DF               	movf	indf2,w,c
  7610   00014E  A4D8               	btfss	status,2,c
  7611   000150  EFAC  F000         	goto	u5591
  7612   000154  EFAE  F000         	goto	u5590
  7613   000158                     u5591:
  7614   000158  EFB0  F000         	goto	l5290
  7615   00015C                     u5590:
  7616   00015C  EFFA  F002         	goto	l5390
  7617   000160                     l5290:
  7618   000160  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7619   000164  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7620   000168  50DF               	movf	indf2,w,c
  7621   00016A  6E4A               	movwf	___strtoxll@c^0,c
  7622   00016C  EFC0  F000         	goto	l5294
  7623   000170                     l5292:
  7624   000170  4A48               	infsnz	___strtoxll@cp^0,f,c
  7625   000172  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7626   000174  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7627   000178  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7628   00017C  50DF               	movf	indf2,w,c
  7629   00017E  6E4A               	movwf	___strtoxll@c^0,c
  7630   000180                     l5294:
  7631   000180  0E20               	movlw	32
  7632   000182  184A               	xorwf	___strtoxll@c^0,w,c
  7633   000184  B4D8               	btfsc	status,2,c
  7634   000186  EFC7  F000         	goto	u5601
  7635   00018A  EFC9  F000         	goto	u5600
  7636   00018E                     u5601:
  7637   00018E  EFB8  F000         	goto	l5292
  7638   000192                     u5600:
  7639   000192  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7640   000196  0EF7               	movlw	247
  7641   000198  2623               	addwf	??___strtoxll^0,f,c
  7642   00019A  0E04               	movlw	4
  7643   00019C  6423               	cpfsgt	??___strtoxll^0,c
  7644   00019E  EFD3  F000         	goto	u5611
  7645   0001A2  EFD5  F000         	goto	u5610
  7646   0001A6                     u5611:
  7647   0001A6  EFB8  F000         	goto	l5292
  7648   0001AA                     u5610:
  7649   0001AA  0E2D               	movlw	45
  7650   0001AC  184A               	xorwf	___strtoxll@c^0,w,c
  7651   0001AE  A4D8               	btfss	status,2,c
  7652   0001B0  EFDC  F000         	goto	u5621
  7653   0001B4  EFDE  F000         	goto	u5620
  7654   0001B8                     u5621:
  7655   0001B8  EFE9  F000         	goto	l5304
  7656   0001BC                     u5620:
  7657   0001BC  803F               	bsf	___strtoxll@flags^0,0,c
  7658   0001BE                     l5302:
  7659   0001BE  4A48               	infsnz	___strtoxll@cp^0,f,c
  7660   0001C0  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7661   0001C2  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7662   0001C6  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7663   0001CA  50DF               	movf	indf2,w,c
  7664   0001CC  6E4A               	movwf	___strtoxll@c^0,c
  7665   0001CE  EFF4  F000         	goto	l5308
  7666   0001D2                     l5304:
  7667   0001D2  0E2B               	movlw	43
  7668   0001D4  184A               	xorwf	___strtoxll@c^0,w,c
  7669   0001D6  A4D8               	btfss	status,2,c
  7670   0001D8  EFF0  F000         	goto	u5631
  7671   0001DC  EFF2  F000         	goto	u5630
  7672   0001E0                     u5631:
  7673   0001E0  EFF4  F000         	goto	l5308
  7674   0001E4                     u5630:
  7675   0001E4  EFDF  F000         	goto	l5302
  7676   0001E8                     l5308:
  7677   0001E8  0E30               	movlw	48
  7678   0001EA  184A               	xorwf	___strtoxll@c^0,w,c
  7679   0001EC  A4D8               	btfss	status,2,c
  7680   0001EE  EFFB  F000         	goto	u5641
  7681   0001F2  EFFD  F000         	goto	u5640
  7682   0001F6                     u5641:
  7683   0001F6  EF96  F001         	goto	l5344
  7684   0001FA                     u5640:
  7685   0001FA  4A48               	infsnz	___strtoxll@cp^0,f,c
  7686   0001FC  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7687   0001FE  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7688   000202  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7689   000206  50DF               	movf	indf2,w,c
  7690   000208  6E4A               	movwf	___strtoxll@c^0,c
  7691   00020A  501E               	movf	___strtoxll@base^0,w,c
  7692   00020C  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7693   00020E  B4D8               	btfsc	status,2,c
  7694   000210  EF0C  F001         	goto	u5651
  7695   000214  EF0E  F001         	goto	u5650
  7696   000218                     u5651:
  7697   000218  EF18  F001         	goto	l5316
  7698   00021C                     u5650:
  7699   00021C  0E10               	movlw	16
  7700   00021E  181E               	xorwf	___strtoxll@base^0,w,c
  7701   000220  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7702   000222  A4D8               	btfss	status,2,c
  7703   000224  EF16  F001         	goto	u5661
  7704   000228  EF18  F001         	goto	u5660
  7705   00022C                     u5661:
  7706   00022C  EF88  F001         	goto	l5338
  7707   000230                     u5660:
  7708   000230                     l5316:
  7709   000230  0E78               	movlw	120
  7710   000232  184A               	xorwf	___strtoxll@c^0,w,c
  7711   000234  B4D8               	btfsc	status,2,c
  7712   000236  EF1F  F001         	goto	u5671
  7713   00023A  EF21  F001         	goto	u5670
  7714   00023E                     u5671:
  7715   00023E  EF2A  F001         	goto	l5320
  7716   000242                     u5670:
  7717   000242  0E58               	movlw	88
  7718   000244  184A               	xorwf	___strtoxll@c^0,w,c
  7719   000246  A4D8               	btfss	status,2,c
  7720   000248  EF28  F001         	goto	u5681
  7721   00024C  EF2A  F001         	goto	u5680
  7722   000250                     u5681:
  7723   000250  EF88  F001         	goto	l5338
  7724   000254                     u5680:
  7725   000254                     l5320:
  7726   000254  0E00               	movlw	0
  7727   000256  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7728   000258  0E10               	movlw	16
  7729   00025A  6E1E               	movwf	___strtoxll@base^0,c
  7730   00025C  4A48               	infsnz	___strtoxll@cp^0,f,c
  7731   00025E  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7732   000260  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7733   000264  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7734   000268  50DF               	movf	indf2,w,c
  7735   00026A  6E4A               	movwf	___strtoxll@c^0,c
  7736   00026C  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7737   000270  0E20               	movlw	32
  7738   000272  1223               	iorwf	??___strtoxll^0,f,c
  7739   000274  0E9F               	movlw	159
  7740   000276  2623               	addwf	??___strtoxll^0,f,c
  7741   000278  0E1A               	movlw	26
  7742   00027A  6023               	cpfslt	??___strtoxll^0,c
  7743   00027C  EF42  F001         	goto	u5691
  7744   000280  EF44  F001         	goto	u5690
  7745   000284                     u5691:
  7746   000284  EF68  F001         	goto	l5332
  7747   000288                     u5690:
  7748   000288  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7749   00028C  0E9F               	movlw	159
  7750   00028E  2623               	addwf	??___strtoxll^0,f,c
  7751   000290  0E19               	movlw	25
  7752   000292  6423               	cpfsgt	??___strtoxll^0,c
  7753   000294  EF4E  F001         	goto	u5701
  7754   000298  EF50  F001         	goto	u5700
  7755   00029C                     u5701:
  7756   00029C  EF55  F001         	goto	l5330
  7757   0002A0                     u5700:
  7758   0002A0  C04A  F033         	movff	___strtoxll@c,___strtoxll$2292
  7759   0002A4  6A34               	clrf	(___strtoxll$2292+1)^0,c
  7760   0002A6  EF5C  F001         	goto	l1418
  7761   0002AA                     l5330:
  7762   0002AA  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7763   0002AE  0E5F               	movlw	95
  7764   0002B0  1623               	andwf	??___strtoxll^0,f,c
  7765   0002B2  5023               	movf	??___strtoxll^0,w,c
  7766   0002B4  6E33               	movwf	___strtoxll$2292^0,c
  7767   0002B6  6A34               	clrf	(___strtoxll$2292+1)^0,c
  7768   0002B8                     l1418:
  7769   0002B8  C033  F023         	movff	___strtoxll$2292,??___strtoxll
  7770   0002BC  0EC9               	movlw	201
  7771   0002BE  2623               	addwf	??___strtoxll^0,f,c
  7772   0002C0  0E10               	movlw	16
  7773   0002C2  6023               	cpfslt	??___strtoxll^0,c
  7774   0002C4  EF66  F001         	goto	u5711
  7775   0002C8  EF68  F001         	goto	u5710
  7776   0002CC                     u5711:
  7777   0002CC  EF82  F001         	goto	l5336
  7778   0002D0                     u5710:
  7779   0002D0                     l5332:
  7780   0002D0  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7781   0002D4  0E20               	movlw	32
  7782   0002D6  1223               	iorwf	??___strtoxll^0,f,c
  7783   0002D8  0E9F               	movlw	159
  7784   0002DA  2623               	addwf	??___strtoxll^0,f,c
  7785   0002DC  0E19               	movlw	25
  7786   0002DE  6423               	cpfsgt	??___strtoxll^0,c
  7787   0002E0  EF74  F001         	goto	u5721
  7788   0002E4  EF76  F001         	goto	u5720
  7789   0002E8                     u5721:
  7790   0002E8  EF96  F001         	goto	l5344
  7791   0002EC                     u5720:
  7792   0002EC  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7793   0002F0  0ED0               	movlw	208
  7794   0002F2  2623               	addwf	??___strtoxll^0,f,c
  7795   0002F4  0E09               	movlw	9
  7796   0002F6  6423               	cpfsgt	??___strtoxll^0,c
  7797   0002F8  EF80  F001         	goto	u5731
  7798   0002FC  EF82  F001         	goto	u5730
  7799   000300                     u5731:
  7800   000300  EF96  F001         	goto	l5344
  7801   000304                     u5730:
  7802   000304                     l5336:
  7803   000304  843F               	bsf	___strtoxll@flags^0,2,c
  7804   000306  0648               	decf	___strtoxll@cp^0,f,c
  7805   000308  A0D8               	btfss	status,0,c
  7806   00030A  0649               	decf	(___strtoxll@cp+1)^0,f,c
  7807   00030C  EFFA  F002         	goto	l5390
  7808   000310                     l5338:
  7809   000310  843F               	bsf	___strtoxll@flags^0,2,c
  7810   000312  501E               	movf	___strtoxll@base^0,w,c
  7811   000314  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7812   000316  A4D8               	btfss	status,2,c
  7813   000318  EF90  F001         	goto	u5741
  7814   00031C  EF92  F001         	goto	u5740
  7815   000320                     u5741:
  7816   000320  EF96  F001         	goto	l5344
  7817   000324                     u5740:
  7818   000324  0E00               	movlw	0
  7819   000326  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7820   000328  0E08               	movlw	8
  7821   00032A  6E1E               	movwf	___strtoxll@base^0,c
  7822   00032C                     l5344:
  7823   00032C  501E               	movf	___strtoxll@base^0,w,c
  7824   00032E  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7825   000330  A4D8               	btfss	status,2,c
  7826   000332  EF9D  F001         	goto	u5751
  7827   000336  EF9F  F001         	goto	u5750
  7828   00033A                     u5751:
  7829   00033A  EFA3  F001         	goto	l1421
  7830   00033E                     u5750:
  7831   00033E  0E00               	movlw	0
  7832   000340  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7833   000342  0E0A               	movlw	10
  7834   000344  6E1E               	movwf	___strtoxll@base^0,c
  7835   000346                     l1421:
  7836   000346  5020               	movf	___strtoxll@is_signed^0,w,c
  7837   000348  B4D8               	btfsc	status,2,c
  7838   00034A  EFA9  F001         	goto	u5761
  7839   00034E  EFAB  F001         	goto	u5760
  7840   000352                     u5761:
  7841   000352  EFD6  F001         	goto	l1422
  7842   000356                     u5760:
  7843   000356  B03F               	btfsc	___strtoxll@flags^0,0,c
  7844   000358  EFB0  F001         	goto	u5771
  7845   00035C  EFB2  F001         	goto	u5770
  7846   000360                     u5771:
  7847   000360  EFC4  F001         	goto	l5352
  7848   000364                     u5770:
  7849   000364  0EFF               	movlw	255
  7850   000366  6E37               	movwf	___strtoxll@limit^0,c
  7851   000368  0EFF               	movlw	255
  7852   00036A  6E38               	movwf	(___strtoxll@limit+1)^0,c
  7853   00036C  0EFF               	movlw	255
  7854   00036E  6E39               	movwf	(___strtoxll@limit+2)^0,c
  7855   000370  0EFF               	movlw	255
  7856   000372  6E3A               	movwf	(___strtoxll@limit+3)^0,c
  7857   000374  0EFF               	movlw	255
  7858   000376  6E3B               	movwf	(___strtoxll@limit+4)^0,c
  7859   000378  0EFF               	movlw	255
  7860   00037A  6E3C               	movwf	(___strtoxll@limit+5)^0,c
  7861   00037C  0EFF               	movlw	255
  7862   00037E  6E3D               	movwf	(___strtoxll@limit+6)^0,c
  7863   000380  0E7F               	movlw	127
  7864   000382  6E3E               	movwf	(___strtoxll@limit+7)^0,c
  7865   000384  EFDE  F001         	goto	l1428
  7866   000388                     l5352:
  7867   000388  0E00               	movlw	0
  7868   00038A  6E37               	movwf	___strtoxll@limit^0,c
  7869   00038C  0E00               	movlw	0
  7870   00038E  6E38               	movwf	(___strtoxll@limit+1)^0,c
  7871   000390  0E00               	movlw	0
  7872   000392  6E39               	movwf	(___strtoxll@limit+2)^0,c
  7873   000394  0E00               	movlw	0
  7874   000396  6E3A               	movwf	(___strtoxll@limit+3)^0,c
  7875   000398  0E00               	movlw	0
  7876   00039A  6E3B               	movwf	(___strtoxll@limit+4)^0,c
  7877   00039C  0E00               	movlw	0
  7878   00039E  6E3C               	movwf	(___strtoxll@limit+5)^0,c
  7879   0003A0  0E00               	movlw	0
  7880   0003A2  6E3D               	movwf	(___strtoxll@limit+6)^0,c
  7881   0003A4  0E80               	movlw	128
  7882   0003A6  6E3E               	movwf	(___strtoxll@limit+7)^0,c
  7883   0003A8  EFDE  F001         	goto	l1428
  7884   0003AC                     l1422:
  7885   0003AC  6837               	setf	___strtoxll@limit^0,c
  7886   0003AE  6838               	setf	(___strtoxll@limit+1)^0,c
  7887   0003B0  6839               	setf	(___strtoxll@limit+2)^0,c
  7888   0003B2  683A               	setf	(___strtoxll@limit+3)^0,c
  7889   0003B4  683B               	setf	(___strtoxll@limit+4)^0,c
  7890   0003B6  683C               	setf	(___strtoxll@limit+5)^0,c
  7891   0003B8  683D               	setf	(___strtoxll@limit+6)^0,c
  7892   0003BA  683E               	setf	(___strtoxll@limit+7)^0,c
  7893   0003BC                     l1428:
  7894   0003BC  C040  F02B         	movff	___strtoxll@a,___strtoxll@prev_a
  7895   0003C0  C041  F02C         	movff	___strtoxll@a+1,___strtoxll@prev_a+1
  7896   0003C4  C042  F02D         	movff	___strtoxll@a+2,___strtoxll@prev_a+2
  7897   0003C8  C043  F02E         	movff	___strtoxll@a+3,___strtoxll@prev_a+3
  7898   0003CC  C044  F02F         	movff	___strtoxll@a+4,___strtoxll@prev_a+4
  7899   0003D0  C045  F030         	movff	___strtoxll@a+5,___strtoxll@prev_a+5
  7900   0003D4  C046  F031         	movff	___strtoxll@a+6,___strtoxll@prev_a+6
  7901   0003D8  C047  F032         	movff	___strtoxll@a+7,___strtoxll@prev_a+7
  7902   0003DC  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7903   0003E0  0E20               	movlw	32
  7904   0003E2  1223               	iorwf	??___strtoxll^0,f,c
  7905   0003E4  0E9F               	movlw	159
  7906   0003E6  2623               	addwf	??___strtoxll^0,f,c
  7907   0003E8  0E1A               	movlw	26
  7908   0003EA  6023               	cpfslt	??___strtoxll^0,c
  7909   0003EC  EFFA  F001         	goto	u5781
  7910   0003F0  EFFC  F001         	goto	u5780
  7911   0003F4                     u5781:
  7912   0003F4  EF19  F002         	goto	l5362
  7913   0003F8                     u5780:
  7914   0003F8  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7915   0003FC  0E9F               	movlw	159
  7916   0003FE  2623               	addwf	??___strtoxll^0,f,c
  7917   000400  0E19               	movlw	25
  7918   000402  6423               	cpfsgt	??___strtoxll^0,c
  7919   000404  EF06  F002         	goto	u5791
  7920   000408  EF08  F002         	goto	u5790
  7921   00040C                     u5791:
  7922   00040C  EF0D  F002         	goto	l5360
  7923   000410                     u5790:
  7924   000410  C04A  F035         	movff	___strtoxll@c,___strtoxll$2293
  7925   000414  6A36               	clrf	(___strtoxll$2293+1)^0,c
  7926   000416  EF14  F002         	goto	l1433
  7927   00041A                     l5360:
  7928   00041A  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7929   00041E  0E5F               	movlw	95
  7930   000420  1623               	andwf	??___strtoxll^0,f,c
  7931   000422  5023               	movf	??___strtoxll^0,w,c
  7932   000424  6E35               	movwf	___strtoxll$2293^0,c
  7933   000426  6A36               	clrf	(___strtoxll$2293+1)^0,c
  7934   000428                     l1433:
  7935   000428  5035               	movf	___strtoxll$2293^0,w,c
  7936   00042A  0FC9               	addlw	201
  7937   00042C  6E4A               	movwf	___strtoxll@c^0,c
  7938   00042E  EF27  F002         	goto	l5366
  7939   000432                     l5362:
  7940   000432  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7941   000436  0ED0               	movlw	208
  7942   000438  2623               	addwf	??___strtoxll^0,f,c
  7943   00043A  0E0A               	movlw	10
  7944   00043C  6023               	cpfslt	??___strtoxll^0,c
  7945   00043E  EF23  F002         	goto	u5801
  7946   000442  EF25  F002         	goto	u5800
  7947   000446                     u5801:
  7948   000446  EFE0  F002         	goto	l5386
  7949   00044A                     u5800:
  7950   00044A  0E30               	movlw	48
  7951   00044C  5E4A               	subwf	___strtoxll@c^0,f,c
  7952   00044E                     l5366:
  7953   00044E  504A               	movf	___strtoxll@c^0,w,c
  7954   000450  6E23               	movwf	??___strtoxll^0,c
  7955   000452  6A24               	clrf	(??___strtoxll+1)^0,c
  7956   000454  501E               	movf	___strtoxll@base^0,w,c
  7957   000456  5C23               	subwf	??___strtoxll^0,w,c
  7958   000458  5024               	movf	(??___strtoxll+1)^0,w,c
  7959   00045A  0A80               	xorlw	128
  7960   00045C  6E25               	movwf	(??___strtoxll+2)^0,c
  7961   00045E  501F               	movf	(___strtoxll@base+1)^0,w,c
  7962   000460  0A80               	xorlw	128
  7963   000462  5825               	subwfb	(??___strtoxll+2)^0,w,c
  7964   000464  A0D8               	btfss	status,0,c
  7965   000466  EF37  F002         	goto	u5811
  7966   00046A  EF39  F002         	goto	u5810
  7967   00046E                     u5811:
  7968   00046E  EF3B  F002         	goto	l1438
  7969   000472                     u5810:
  7970   000472  EFE0  F002         	goto	l5386
  7971   000476                     l1438:
  7972   000476  B23F               	btfsc	___strtoxll@flags^0,1,c
  7973   000478  EF40  F002         	goto	u5821
  7974   00047C  EF42  F002         	goto	u5820
  7975   000480                     u5821:
  7976   000480  EFD5  F002         	goto	l5382
  7977   000484                     u5820:
  7978   000484  C01E  F003         	movff	___strtoxll@base,___omul@multiplier
  7979   000488  C01F  F004         	movff	___strtoxll@base+1,___omul@multiplier+1
  7980   00048C  0E00               	movlw	0
  7981   00048E  BE04               	btfsc	(___omul@multiplier+1)^0,7,c
  7982   000490  0EFF               	movlw	-1
  7983   000492  6E05               	movwf	(___omul@multiplier+2)^0,c
  7984   000494  6E06               	movwf	(___omul@multiplier+3)^0,c
  7985   000496  6E07               	movwf	(___omul@multiplier+4)^0,c
  7986   000498  6E08               	movwf	(___omul@multiplier+5)^0,c
  7987   00049A  6E09               	movwf	(___omul@multiplier+6)^0,c
  7988   00049C  6E0A               	movwf	(___omul@multiplier+7)^0,c
  7989   00049E  C040  F00B         	movff	___strtoxll@a,___omul@multiplicand
  7990   0004A2  C041  F00C         	movff	___strtoxll@a+1,___omul@multiplicand+1
  7991   0004A6  C042  F00D         	movff	___strtoxll@a+2,___omul@multiplicand+2
  7992   0004AA  C043  F00E         	movff	___strtoxll@a+3,___omul@multiplicand+3
  7993   0004AE  C044  F00F         	movff	___strtoxll@a+4,___omul@multiplicand+4
  7994   0004B2  C045  F010         	movff	___strtoxll@a+5,___omul@multiplicand+5
  7995   0004B6  C046  F011         	movff	___strtoxll@a+6,___omul@multiplicand+6
  7996   0004BA  C047  F012         	movff	___strtoxll@a+7,___omul@multiplicand+7
  7997   0004BE  EC9B  F014         	call	___omul	;wreg free
  7998   0004C2  C003  F023         	movff	?___omul,??___strtoxll
  7999   0004C6  C004  F024         	movff	?___omul+1,??___strtoxll+1
  8000   0004CA  C005  F025         	movff	?___omul+2,??___strtoxll+2
  8001   0004CE  C006  F026         	movff	?___omul+3,??___strtoxll+3
  8002   0004D2  C007  F027         	movff	?___omul+4,??___strtoxll+4
  8003   0004D6  C008  F028         	movff	?___omul+5,??___strtoxll+5
  8004   0004DA  C009  F029         	movff	?___omul+6,??___strtoxll+6
  8005   0004DE  C00A  F02A         	movff	?___omul+7,??___strtoxll+7
  8006   0004E2  504A               	movf	___strtoxll@c^0,w,c
  8007   0004E4  2423               	addwf	??___strtoxll^0,w,c
  8008   0004E6  6E40               	movwf	___strtoxll@a^0,c
  8009   0004E8  0E00               	movlw	0
  8010   0004EA  2024               	addwfc	(??___strtoxll+1)^0,w,c
  8011   0004EC  6E41               	movwf	(___strtoxll@a+1)^0,c
  8012   0004EE  0E00               	movlw	0
  8013   0004F0  2025               	addwfc	(??___strtoxll+2)^0,w,c
  8014   0004F2  6E42               	movwf	(___strtoxll@a+2)^0,c
  8015   0004F4  0E00               	movlw	0
  8016   0004F6  2026               	addwfc	(??___strtoxll+3)^0,w,c
  8017   0004F8  6E43               	movwf	(___strtoxll@a+3)^0,c
  8018   0004FA  0E00               	movlw	0
  8019   0004FC  2027               	addwfc	(??___strtoxll+4)^0,w,c
  8020   0004FE  6E44               	movwf	(___strtoxll@a+4)^0,c
  8021   000500  0E00               	movlw	0
  8022   000502  2028               	addwfc	(??___strtoxll+5)^0,w,c
  8023   000504  6E45               	movwf	(___strtoxll@a+5)^0,c
  8024   000506  0E00               	movlw	0
  8025   000508  2029               	addwfc	(??___strtoxll+6)^0,w,c
  8026   00050A  6E46               	movwf	(___strtoxll@a+6)^0,c
  8027   00050C  0E00               	movlw	0
  8028   00050E  202A               	addwfc	(??___strtoxll+7)^0,w,c
  8029   000510  6E47               	movwf	(___strtoxll@a+7)^0,c
  8030   000512  502B               	movf	___strtoxll@prev_a^0,w,c
  8031   000514  5C40               	subwf	___strtoxll@a^0,w,c
  8032   000516  502C               	movf	(___strtoxll@prev_a+1)^0,w,c
  8033   000518  5841               	subwfb	(___strtoxll@a+1)^0,w,c
  8034   00051A  502D               	movf	(___strtoxll@prev_a+2)^0,w,c
  8035   00051C  5842               	subwfb	(___strtoxll@a+2)^0,w,c
  8036   00051E  502E               	movf	(___strtoxll@prev_a+3)^0,w,c
  8037   000520  5843               	subwfb	(___strtoxll@a+3)^0,w,c
  8038   000522  502F               	movf	(___strtoxll@prev_a+4)^0,w,c
  8039   000524  5844               	subwfb	(___strtoxll@a+4)^0,w,c
  8040   000526  5030               	movf	(___strtoxll@prev_a+5)^0,w,c
  8041   000528  5845               	subwfb	(___strtoxll@a+5)^0,w,c
  8042   00052A  5031               	movf	(___strtoxll@prev_a+6)^0,w,c
  8043   00052C  5846               	subwfb	(___strtoxll@a+6)^0,w,c
  8044   00052E  5032               	movf	(___strtoxll@prev_a+7)^0,w,c
  8045   000530  5847               	subwfb	(___strtoxll@a+7)^0,w,c
  8046   000532  A0D8               	btfss	status,0,c
  8047   000534  EF9E  F002         	goto	u5831
  8048   000538  EFA0  F002         	goto	u5830
  8049   00053C                     u5831:
  8050   00053C  EFBF  F002         	goto	l1442
  8051   000540                     u5830:
  8052   000540  5020               	movf	___strtoxll@is_signed^0,w,c
  8053   000542  B4D8               	btfsc	status,2,c
  8054   000544  EFA6  F002         	goto	u5841
  8055   000548  EFA8  F002         	goto	u5840
  8056   00054C                     u5841:
  8057   00054C  EFD5  F002         	goto	l5382
  8058   000550                     u5840:
  8059   000550  5040               	movf	___strtoxll@a^0,w,c
  8060   000552  5C37               	subwf	___strtoxll@limit^0,w,c
  8061   000554  5041               	movf	(___strtoxll@a+1)^0,w,c
  8062   000556  5838               	subwfb	(___strtoxll@limit+1)^0,w,c
  8063   000558  5042               	movf	(___strtoxll@a+2)^0,w,c
  8064   00055A  5839               	subwfb	(___strtoxll@limit+2)^0,w,c
  8065   00055C  5043               	movf	(___strtoxll@a+3)^0,w,c
  8066   00055E  583A               	subwfb	(___strtoxll@limit+3)^0,w,c
  8067   000560  5044               	movf	(___strtoxll@a+4)^0,w,c
  8068   000562  583B               	subwfb	(___strtoxll@limit+4)^0,w,c
  8069   000564  5045               	movf	(___strtoxll@a+5)^0,w,c
  8070   000566  583C               	subwfb	(___strtoxll@limit+5)^0,w,c
  8071   000568  5046               	movf	(___strtoxll@a+6)^0,w,c
  8072   00056A  583D               	subwfb	(___strtoxll@limit+6)^0,w,c
  8073   00056C  5047               	movf	(___strtoxll@a+7)^0,w,c
  8074   00056E  583E               	subwfb	(___strtoxll@limit+7)^0,w,c
  8075   000570  B0D8               	btfsc	status,0,c
  8076   000572  EFBD  F002         	goto	u5851
  8077   000576  EFBF  F002         	goto	u5850
  8078   00057A                     u5851:
  8079   00057A  EFD5  F002         	goto	l5382
  8080   00057E                     u5850:
  8081   00057E                     l1442:
  8082   00057E  C037  F040         	movff	___strtoxll@limit,___strtoxll@a
  8083   000582  C038  F041         	movff	___strtoxll@limit+1,___strtoxll@a+1
  8084   000586  C039  F042         	movff	___strtoxll@limit+2,___strtoxll@a+2
  8085   00058A  C03A  F043         	movff	___strtoxll@limit+3,___strtoxll@a+3
  8086   00058E  C03B  F044         	movff	___strtoxll@limit+4,___strtoxll@a+4
  8087   000592  C03C  F045         	movff	___strtoxll@limit+5,___strtoxll@a+5
  8088   000596  C03D  F046         	movff	___strtoxll@limit+6,___strtoxll@a+6
  8089   00059A  C03E  F047         	movff	___strtoxll@limit+7,___strtoxll@a+7
  8090   00059E  0E00               	movlw	0
  8091   0005A0  0100               	movlb	0	; () banked
  8092   0005A2  6FBE               	movwf	(_errno+1)& (0+255),b
  8093   0005A4  0E22               	movlw	34
  8094   0005A6  6FBD               	movwf	_errno& (0+255),b
  8095   0005A8                     
  8096                           ; BSR set to: 0
  8097   0005A8  823F               	bsf	___strtoxll@flags^0,1,c
  8098   0005AA                     l5382:
  8099   0005AA  4A48               	infsnz	___strtoxll@cp^0,f,c
  8100   0005AC  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  8101   0005AE  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8102   0005B2  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8103   0005B6  50DF               	movf	indf2,w,c
  8104   0005B8  6E4A               	movwf	___strtoxll@c^0,c
  8105   0005BA  843F               	bsf	___strtoxll@flags^0,2,c
  8106   0005BC  EFDE  F001         	goto	l1428
  8107   0005C0                     l5386:
  8108   0005C0  503F               	movf	___strtoxll@flags^0,w,c
  8109   0005C2  0B03               	andlw	3
  8110   0005C4  06E8               	decf	wreg,f,c
  8111   0005C6  A4D8               	btfss	status,2,c
  8112   0005C8  EFE8  F002         	goto	u5861
  8113   0005CC  EFEA  F002         	goto	u5860
  8114   0005D0                     u5861:
  8115   0005D0  EFFA  F002         	goto	l5390
  8116   0005D4                     u5860:
  8117   0005D4  1E47               	comf	(___strtoxll@a+7)^0,f,c
  8118   0005D6  1E46               	comf	(___strtoxll@a+6)^0,f,c
  8119   0005D8  1E45               	comf	(___strtoxll@a+5)^0,f,c
  8120   0005DA  1E44               	comf	(___strtoxll@a+4)^0,f,c
  8121   0005DC  1E43               	comf	(___strtoxll@a+3)^0,f,c
  8122   0005DE  1E42               	comf	(___strtoxll@a+2)^0,f,c
  8123   0005E0  1E41               	comf	(___strtoxll@a+1)^0,f,c
  8124   0005E2  6C40               	negf	___strtoxll@a^0,c
  8125   0005E4  0E00               	movlw	0
  8126   0005E6  2241               	addwfc	(___strtoxll@a+1)^0,f,c
  8127   0005E8  2242               	addwfc	(___strtoxll@a+2)^0,f,c
  8128   0005EA  2243               	addwfc	(___strtoxll@a+3)^0,f,c
  8129   0005EC  2244               	addwfc	(___strtoxll@a+4)^0,f,c
  8130   0005EE  2245               	addwfc	(___strtoxll@a+5)^0,f,c
  8131   0005F0  2246               	addwfc	(___strtoxll@a+6)^0,f,c
  8132   0005F2  2247               	addwfc	(___strtoxll@a+7)^0,f,c
  8133   0005F4                     l5390:
  8134   0005F4  501D               	movf	___strtoxll@endptr^0,w,c
  8135   0005F6  B4D8               	btfsc	status,2,c
  8136   0005F8  EF00  F003         	goto	u5871
  8137   0005FC  EF02  F003         	goto	u5870
  8138   000600                     u5871:
  8139   000600  EF14  F003         	goto	l5398
  8140   000604                     u5870:
  8141   000604  B43F               	btfsc	___strtoxll@flags^0,2,c
  8142   000606  EF07  F003         	goto	u5881
  8143   00060A  EF09  F003         	goto	u5880
  8144   00060E                     u5881:
  8145   00060E  EF0D  F003         	goto	l5396
  8146   000612                     u5880:
  8147   000612  C01B  F048         	movff	___strtoxll@s,___strtoxll@cp
  8148   000616  C01C  F049         	movff	___strtoxll@s+1,___strtoxll@cp+1
  8149   00061A                     l5396:
  8150   00061A  501D               	movf	___strtoxll@endptr^0,w,c
  8151   00061C  6ED9               	movwf	fsr2l,c
  8152   00061E  6ADA               	clrf	fsr2h,c
  8153   000620  C048  FFDE         	movff	___strtoxll@cp,postinc2
  8154   000624  C049  FFDD         	movff	___strtoxll@cp+1,postdec2
  8155   000628                     l5398:
  8156   000628  C040  F01B         	movff	___strtoxll@a,?___strtoxll
  8157   00062C  C041  F01C         	movff	___strtoxll@a+1,?___strtoxll+1
  8158   000630  C042  F01D         	movff	___strtoxll@a+2,?___strtoxll+2
  8159   000634  C043  F01E         	movff	___strtoxll@a+3,?___strtoxll+3
  8160   000638  C044  F01F         	movff	___strtoxll@a+4,?___strtoxll+4
  8161   00063C  C045  F020         	movff	___strtoxll@a+5,?___strtoxll+5
  8162   000640  C046  F021         	movff	___strtoxll@a+6,?___strtoxll+6
  8163   000644  C047  F022         	movff	___strtoxll@a+7,?___strtoxll+7
  8164   000648  0012               	return		;funcret
  8165   00064A                     __end_of___strtoxll:
  8166                           	callstack 0
  8167                           
  8168 ;; *************** function ___omul *****************
  8169 ;; Defined at:
  8170 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul64.c"
  8171 ;; Parameters:    Size  Location     Type
  8172 ;;  multiplier      8    2[COMRAM] unsigned long long 
  8173 ;;  multiplicand    8   10[COMRAM] unsigned long long 
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;  product         8   18[COMRAM] unsigned long long 
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  8    2[COMRAM] unsigned long long 
  8178 ;; Registers used:
  8179 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8185 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8188 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;Total ram usage:       24 bytes
  8190 ;; Hardware stack levels used: 1
  8191 ;; Hardware stack levels required when called: 1
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		___strtoxll
  8196 ;; This function uses a non-reentrant model
  8197 ;;
  8198                           
  8199                           	psect	text31
  8200   002936                     __ptext31:
  8201                           	callstack 0
  8202   002936                     ___omul:
  8203                           	callstack 22
  8204   002936  EE20  F013         	lfsr	2,___omul@product
  8205   00293A  0E07               	movlw	7
  8206   00293C                     u5411:
  8207   00293C  6ADE               	clrf	postinc2,c
  8208   00293E  06E8               	decf	wreg,f,c
  8209   002940  E2FD               	bc	u5411
  8210   002942                     l5216:
  8211   002942  A003               	btfss	___omul@multiplier^0,0,c
  8212   002944  EFA6  F014         	goto	u5421
  8213   002948  EFA8  F014         	goto	u5420
  8214   00294C                     u5421:
  8215   00294C  EFB8  F014         	goto	l5220
  8216   002950                     u5420:
  8217   002950  500B               	movf	___omul@multiplicand^0,w,c
  8218   002952  2613               	addwf	___omul@product^0,f,c
  8219   002954  500C               	movf	(___omul@multiplicand+1)^0,w,c
  8220   002956  2214               	addwfc	(___omul@product+1)^0,f,c
  8221   002958  500D               	movf	(___omul@multiplicand+2)^0,w,c
  8222   00295A  2215               	addwfc	(___omul@product+2)^0,f,c
  8223   00295C  500E               	movf	(___omul@multiplicand+3)^0,w,c
  8224   00295E  2216               	addwfc	(___omul@product+3)^0,f,c
  8225   002960  500F               	movf	(___omul@multiplicand+4)^0,w,c
  8226   002962  2217               	addwfc	(___omul@product+4)^0,f,c
  8227   002964  5010               	movf	(___omul@multiplicand+5)^0,w,c
  8228   002966  2218               	addwfc	(___omul@product+5)^0,f,c
  8229   002968  5011               	movf	(___omul@multiplicand+6)^0,w,c
  8230   00296A  2219               	addwfc	(___omul@product+6)^0,f,c
  8231   00296C  5012               	movf	(___omul@multiplicand+7)^0,w,c
  8232   00296E  221A               	addwfc	(___omul@product+7)^0,f,c
  8233   002970                     l5220:
  8234   002970  90D8               	bcf	status,0,c
  8235   002972  360B               	rlcf	___omul@multiplicand^0,f,c
  8236   002974  360C               	rlcf	(___omul@multiplicand+1)^0,f,c
  8237   002976  360D               	rlcf	(___omul@multiplicand+2)^0,f,c
  8238   002978  360E               	rlcf	(___omul@multiplicand+3)^0,f,c
  8239   00297A  360F               	rlcf	(___omul@multiplicand+4)^0,f,c
  8240   00297C  3610               	rlcf	(___omul@multiplicand+5)^0,f,c
  8241   00297E  3611               	rlcf	(___omul@multiplicand+6)^0,f,c
  8242   002980  3612               	rlcf	(___omul@multiplicand+7)^0,f,c
  8243   002982  90D8               	bcf	status,0,c
  8244   002984  320A               	rrcf	(___omul@multiplier+7)^0,f,c
  8245   002986  3209               	rrcf	(___omul@multiplier+6)^0,f,c
  8246   002988  3208               	rrcf	(___omul@multiplier+5)^0,f,c
  8247   00298A  3207               	rrcf	(___omul@multiplier+4)^0,f,c
  8248   00298C  3206               	rrcf	(___omul@multiplier+3)^0,f,c
  8249   00298E  3205               	rrcf	(___omul@multiplier+2)^0,f,c
  8250   002990  3204               	rrcf	(___omul@multiplier+1)^0,f,c
  8251   002992  3203               	rrcf	___omul@multiplier^0,f,c
  8252   002994  5003               	movf	___omul@multiplier^0,w,c
  8253   002996  1004               	iorwf	(___omul@multiplier+1)^0,w,c
  8254   002998  1005               	iorwf	(___omul@multiplier+2)^0,w,c
  8255   00299A  1006               	iorwf	(___omul@multiplier+3)^0,w,c
  8256   00299C  1007               	iorwf	(___omul@multiplier+4)^0,w,c
  8257   00299E  1008               	iorwf	(___omul@multiplier+5)^0,w,c
  8258   0029A0  1009               	iorwf	(___omul@multiplier+6)^0,w,c
  8259   0029A2  100A               	iorwf	(___omul@multiplier+7)^0,w,c
  8260   0029A4  A4D8               	btfss	status,2,c
  8261   0029A6  EFD7  F014         	goto	u5431
  8262   0029AA  EFD9  F014         	goto	u5430
  8263   0029AE                     u5431:
  8264   0029AE  EFA1  F014         	goto	l5216
  8265   0029B2                     u5430:
  8266   0029B2  C013  F003         	movff	___omul@product,?___omul
  8267   0029B6  C014  F004         	movff	___omul@product+1,?___omul+1
  8268   0029BA  C015  F005         	movff	___omul@product+2,?___omul+2
  8269   0029BE  C016  F006         	movff	___omul@product+3,?___omul+3
  8270   0029C2  C017  F007         	movff	___omul@product+4,?___omul+4
  8271   0029C6  C018  F008         	movff	___omul@product+5,?___omul+5
  8272   0029CA  C019  F009         	movff	___omul@product+6,?___omul+6
  8273   0029CE  C01A  F00A         	movff	___omul@product+7,?___omul+7
  8274   0029D2  0012               	return		;funcret
  8275   0029D4                     __end_of___omul:
  8276                           	callstack 0
  8277                           
  8278 ;; *************** function _decode_dtc *****************
  8279 ;; Defined at:
  8280 ;;		line 624 in file "OBCII_PIC18F46K22.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;  b1              2   77[COMRAM] unsigned int 
  8283 ;;  b2              2   79[COMRAM] unsigned int 
  8284 ;;  dtc             2   81[COMRAM] PTR unsigned char 
  8285 ;;		 -> dtc_codes(60), 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  type            1   88[COMRAM] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8297 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;Total ram usage:       12 bytes
  8302 ;; Hardware stack levels used: 1
  8303 ;; Hardware stack levels required when called: 9
  8304 ;; This function calls:
  8305 ;;		_sprintf
  8306 ;; This function is called by:
  8307 ;;		_diagnostic_trouble_codes
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text32
  8312   0023EC                     __ptext32:
  8313                           	callstack 0
  8314   0023EC                     _decode_dtc:
  8315                           	callstack 19
  8316   0023EC                     
  8317                           ;OBCII_PIC18F46K22.c: 625:     char type;;OBCII_PIC18F46K22.c: 627:     switch ((b1 & 0x
      +                          C0) >> 6) {
  8318   0023EC  EF0C  F012         	goto	l4394
  8319   0023F0                     l4382:
  8320   0023F0  0E50               	movlw	80
  8321   0023F2  6E59               	movwf	decode_dtc@type^0,c
  8322   0023F4  EF36  F012         	goto	l4396
  8323   0023F8                     l4384:
  8324   0023F8  0E43               	movlw	67
  8325   0023FA  6E59               	movwf	decode_dtc@type^0,c
  8326   0023FC  EF36  F012         	goto	l4396
  8327   002400                     l4386:
  8328   002400  0E42               	movlw	66
  8329   002402  6E59               	movwf	decode_dtc@type^0,c
  8330   002404  EF36  F012         	goto	l4396
  8331   002408                     l4388:
  8332   002408  0E55               	movlw	85
  8333   00240A  6E59               	movwf	decode_dtc@type^0,c
  8334   00240C  EF36  F012         	goto	l4396
  8335   002410                     l4390:
  8336   002410  0E3F               	movlw	63
  8337   002412  6E59               	movwf	decode_dtc@type^0,c
  8338   002414  EF36  F012         	goto	l4396
  8339   002418                     l4394:
  8340   002418  C04E  F054         	movff	decode_dtc@b1,??_decode_dtc
  8341   00241C  C04F  F055         	movff	decode_dtc@b1+1,??_decode_dtc+1
  8342   002420  0E06               	movlw	6
  8343   002422  6E56               	movwf	(??_decode_dtc+2)^0,c
  8344   002424                     u4495:
  8345   002424  90D8               	bcf	status,0,c
  8346   002426  3255               	rrcf	(??_decode_dtc+1)^0,f,c
  8347   002428  3254               	rrcf	??_decode_dtc^0,f,c
  8348   00242A  2E56               	decfsz	(??_decode_dtc+2)^0,f,c
  8349   00242C  EF12  F012         	goto	u4495
  8350   002430  0E03               	movlw	3
  8351   002432  1654               	andwf	??_decode_dtc^0,f,c
  8352   002434  0E00               	movlw	0
  8353   002436  1655               	andwf	(??_decode_dtc+1)^0,f,c
  8354                           
  8355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8356                           ; Switch size 1, requested type "simple"
  8357                           ; Number of cases is 1, Range of values is 0 to 0
  8358                           ; switch strategies available:
  8359                           ; Name         Instructions Cycles
  8360                           ; simple_byte            4     3 (average)
  8361                           ;	Chosen strategy is simple_byte
  8362   002438  5055               	movf	(??_decode_dtc+1)^0,w,c
  8363   00243A  0A00               	xorlw	0	; case 0
  8364   00243C  B4D8               	btfsc	status,2,c
  8365   00243E  EF23  F012         	goto	l5906
  8366   002442  EF08  F012         	goto	l4390
  8367   002446                     l5906:
  8368                           
  8369                           ; Switch size 1, requested type "simple"
  8370                           ; Number of cases is 4, Range of values is 0 to 3
  8371                           ; switch strategies available:
  8372                           ; Name         Instructions Cycles
  8373                           ; simple_byte           13     7 (average)
  8374                           ;	Chosen strategy is simple_byte
  8375   002446  5054               	movf	??_decode_dtc^0,w,c
  8376   002448  0A00               	xorlw	0	; case 0
  8377   00244A  B4D8               	btfsc	status,2,c
  8378   00244C  EFF8  F011         	goto	l4382
  8379   002450  0A01               	xorlw	1	; case 1
  8380   002452  B4D8               	btfsc	status,2,c
  8381   002454  EFFC  F011         	goto	l4384
  8382   002458  0A03               	xorlw	3	; case 2
  8383   00245A  B4D8               	btfsc	status,2,c
  8384   00245C  EF00  F012         	goto	l4386
  8385   002460  0A01               	xorlw	1	; case 3
  8386   002462  B4D8               	btfsc	status,2,c
  8387   002464  EF04  F012         	goto	l4388
  8388   002468  EF08  F012         	goto	l4390
  8389   00246C                     l4396:
  8390                           
  8391                           ;OBCII_PIC18F46K22.c: 635:     sprintf(dtc, "%c%01X%02X", type, (b1 & 0x3F) >> 4, ((b1 &
      +                           0x0F) << 8 | b2));
  8392   00246C  C052  F038         	movff	decode_dtc@dtc,sprintf@s
  8393   002470  C053  F039         	movff	decode_dtc@dtc+1,sprintf@s+1
  8394   002474  0E9B               	movlw	low STR_34
  8395   002476  6E3A               	movwf	sprintf@fmt^0,c
  8396   002478  0EFF               	movlw	high STR_34
  8397   00247A  6E3B               	movwf	(sprintf@fmt+1)^0,c
  8398   00247C  C059  F03C         	movff	decode_dtc@type,?_sprintf+4
  8399   002480  6A3D               	clrf	(?_sprintf+5)^0,c
  8400   002482  C04E  F054         	movff	decode_dtc@b1,??_decode_dtc
  8401   002486  C04F  F055         	movff	decode_dtc@b1+1,??_decode_dtc+1
  8402   00248A  0E04               	movlw	4
  8403   00248C  6E56               	movwf	(??_decode_dtc+2)^0,c
  8404   00248E                     u4505:
  8405   00248E  90D8               	bcf	status,0,c
  8406   002490  3255               	rrcf	(??_decode_dtc+1)^0,f,c
  8407   002492  3254               	rrcf	??_decode_dtc^0,f,c
  8408   002494  2E56               	decfsz	(??_decode_dtc+2)^0,f,c
  8409   002496  EF47  F012         	goto	u4505
  8410   00249A  0E03               	movlw	3
  8411   00249C  1454               	andwf	??_decode_dtc^0,w,c
  8412   00249E  6E3E               	movwf	(?_sprintf+6)^0,c
  8413   0024A0  6A3F               	clrf	(?_sprintf+7)^0,c
  8414   0024A2  0E0F               	movlw	15
  8415   0024A4  144E               	andwf	decode_dtc@b1^0,w,c
  8416   0024A6  6E57               	movwf	(??_decode_dtc+3)^0,c
  8417   0024A8  0E00               	movlw	0
  8418   0024AA  144F               	andwf	(decode_dtc@b1+1)^0,w,c
  8419   0024AC  6E58               	movwf	(??_decode_dtc+4)^0,c
  8420   0024AE  C057  F058         	movff	??_decode_dtc+3,??_decode_dtc+4
  8421   0024B2  6A57               	clrf	(??_decode_dtc+3)^0,c
  8422   0024B4  5050               	movf	decode_dtc@b2^0,w,c
  8423   0024B6  1057               	iorwf	(??_decode_dtc+3)^0,w,c
  8424   0024B8  6E40               	movwf	(?_sprintf+8)^0,c
  8425   0024BA  5051               	movf	(decode_dtc@b2+1)^0,w,c
  8426   0024BC  1058               	iorwf	(??_decode_dtc+4)^0,w,c
  8427   0024BE  6E41               	movwf	(?_sprintf+9)^0,c
  8428   0024C0  ECAB  F018         	call	_sprintf	;wreg free
  8429   0024C4  0012               	return		;funcret
  8430   0024C6                     __end_of_decode_dtc:
  8431                           	callstack 0
  8432                           
  8433 ;; *************** function _sprintf *****************
  8434 ;; Defined at:
  8435 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  s               2   55[COMRAM] PTR unsigned char 
  8438 ;;		 -> dtc_codes(60), air_intake_string(16), rpm_string(16), 
  8439 ;;  fmt             2   57[COMRAM] PTR const unsigned char 
  8440 ;;		 -> STR_34(11), STR_25(3), STR_16(3), 
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  f              11   66[COMRAM] struct _IO_FILE
  8443 ;;  ret             2    0        int 
  8444 ;;  ap              1   65[COMRAM] PTR void [1]
  8445 ;;		 -> ?_sprintf(2), 
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  2   55[COMRAM] int 
  8448 ;; Registers used:
  8449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8455 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8458 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;Total ram usage:       22 bytes
  8460 ;; Hardware stack levels used: 1
  8461 ;; Hardware stack levels required when called: 8
  8462 ;; This function calls:
  8463 ;;		_vfprintf
  8464 ;; This function is called by:
  8465 ;;		_print_RPM
  8466 ;;		_print_AI_Temp
  8467 ;;		_decode_dtc
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           	psect	text33
  8472   003156                     __ptext33:
  8473                           	callstack 0
  8474   003156                     _sprintf:
  8475                           	callstack 19
  8476   003156  0E3C               	movlw	low (?_sprintf+4)
  8477   003158  6E42               	movwf	sprintf@ap^0,c
  8478   00315A  C038  F043         	movff	sprintf@s,sprintf@f
  8479   00315E  C039  F044         	movff	sprintf@s+1,sprintf@f+1
  8480   003162  0E00               	movlw	0
  8481   003164  6E46               	movwf	(sprintf@f+3)^0,c
  8482   003166  0E00               	movlw	0
  8483   003168  6E45               	movwf	(sprintf@f+2)^0,c
  8484   00316A  0E00               	movlw	0
  8485   00316C  6E4D               	movwf	(sprintf@f+10)^0,c
  8486   00316E  0E00               	movlw	0
  8487   003170  6E4C               	movwf	(sprintf@f+9)^0,c
  8488   003172  0E43               	movlw	low sprintf@f
  8489   003174  6E32               	movwf	vfprintf@fp^0,c
  8490   003176  C03A  F033         	movff	sprintf@fmt,vfprintf@fmt
  8491   00317A  C03B  F034         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8492   00317E  0E42               	movlw	low sprintf@ap
  8493   003180  6E35               	movwf	vfprintf@ap^0,c
  8494   003182  EC8A  F018         	call	_vfprintf	;wreg free
  8495   003186  5045               	movf	(sprintf@f+2)^0,w,c
  8496   003188  2438               	addwf	sprintf@s^0,w,c
  8497   00318A  6ED9               	movwf	fsr2l,c
  8498   00318C  5046               	movf	(sprintf@f+3)^0,w,c
  8499   00318E  2039               	addwfc	(sprintf@s+1)^0,w,c
  8500   003190  6EDA               	movwf	fsr2h,c
  8501   003192  6ADF               	clrf	indf2,c
  8502   003194  0012               	return		;funcret
  8503   003196                     __end_of_sprintf:
  8504                           	callstack 0
  8505                           
  8506 ;; *************** function _vfprintf *****************
  8507 ;; Defined at:
  8508 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8509 ;; Parameters:    Size  Location     Type
  8510 ;;  fp              1   49[COMRAM] PTR struct _IO_FILE
  8511 ;;		 -> sprintf@f(11), 
  8512 ;;  fmt             2   50[COMRAM] PTR const unsigned char 
  8513 ;;		 -> STR_34(11), STR_25(3), STR_16(3), 
  8514 ;;  ap              1   52[COMRAM] PTR PTR void 
  8515 ;;		 -> sprintf@ap(1), 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  cfmt            2   53[COMRAM] PTR unsigned char 
  8518 ;;		 -> STR_34(11), STR_25(3), STR_16(3), 
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  2   49[COMRAM] int 
  8521 ;; Registers used:
  8522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8532 ;;Total ram usage:        6 bytes
  8533 ;; Hardware stack levels used: 1
  8534 ;; Hardware stack levels required when called: 7
  8535 ;; This function calls:
  8536 ;;		_vfpfcnvrt
  8537 ;; This function is called by:
  8538 ;;		_sprintf
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           	psect	text34
  8543   003114                     __ptext34:
  8544                           	callstack 0
  8545   003114                     _vfprintf:
  8546                           	callstack 19
  8547   003114                     
  8548                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  8549   003114  C033  F036         	movff	vfprintf@fmt,vfprintf@cfmt
  8550   003118  C034  F037         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8551                           
  8552                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8553   00311C  EF98  F018         	goto	l3950
  8554   003120                     l3948:
  8555                           
  8556                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8557   003120  C032  F025         	movff	vfprintf@fp,vfpfcnvrt@fp
  8558   003124  0E36               	movlw	low vfprintf@cfmt
  8559   003126  6E26               	movwf	vfpfcnvrt@fmt^0,c
  8560   003128  C035  F027         	movff	vfprintf@ap,vfpfcnvrt@ap
  8561   00312C  EC38  F009         	call	_vfpfcnvrt	;wreg free
  8562   003130                     l3950:
  8563                           
  8564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8565   003130  C036  FFF6         	movff	vfprintf@cfmt,tblptrl
  8566   003134  C037  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8567   003138                     	if	0	;tblptru may be non-zero
  8568   003138                     	endif
  8569   003138                     	if	0	;tblptru may be non-zero
  8570   003138                     	endif
  8571   003138  0008               	tblrd		*
  8572   00313A  50F5               	movf	tablat,w,c
  8573   00313C  0900               	iorlw	0
  8574   00313E  A4D8               	btfss	status,2,c
  8575   003140  EFA4  F018         	goto	u3931
  8576   003144  EFA6  F018         	goto	u3930
  8577   003148                     u3931:
  8578   003148  EF90  F018         	goto	l3948
  8579   00314C                     u3930:
  8580   00314C                     
  8581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8582   00314C  0E00               	movlw	0
  8583   00314E  6E33               	movwf	(?_vfprintf+1)^0,c
  8584   003150  0E00               	movlw	0
  8585   003152  6E32               	movwf	?_vfprintf^0,c
  8586   003154  0012               	return		;funcret
  8587   003156                     __end_of_vfprintf:
  8588                           	callstack 0
  8589                           
  8590 ;; *************** function _vfpfcnvrt *****************
  8591 ;; Defined at:
  8592 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  fp              1   36[COMRAM] PTR struct _IO_FILE
  8595 ;;		 -> sprintf@f(11), 
  8596 ;;  fmt             1   37[COMRAM] PTR PTR unsigned char 
  8597 ;;		 -> vfprintf@cfmt(2), 
  8598 ;;  ap              1   38[COMRAM] PTR PTR void 
  8599 ;;		 -> sprintf@ap(1), 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  convarg         4   43[COMRAM] struct .
  8602 ;;  cp              2   47[COMRAM] PTR unsigned char 
  8603 ;;		 -> STR_34(11), STR_25(3), STR_16(3), 
  8604 ;;  done            1   42[COMRAM] _Bool 
  8605 ;;  c               1   41[COMRAM] unsigned char 
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      void 
  8608 ;; Registers used:
  8609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8615 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8616 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8618 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;Total ram usage:       13 bytes
  8620 ;; Hardware stack levels used: 1
  8621 ;; Hardware stack levels required when called: 6
  8622 ;; This function calls:
  8623 ;;		_ctoa
  8624 ;;		_fputc
  8625 ;;		_read_prec_or_width
  8626 ;;		_utoa
  8627 ;;		_xtoa
  8628 ;; This function is called by:
  8629 ;;		_vfprintf
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text35
  8634   001270                     __ptext35:
  8635                           	callstack 0
  8636   001270                     _vfpfcnvrt:
  8637                           	callstack 19
  8638   001270                     
  8639                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  8640   001270  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8641   001272  6ED9               	movwf	fsr2l,c
  8642   001274  6ADA               	clrf	fsr2h,c
  8643   001276  CFDE FFF6          	movff	postinc2,tblptrl
  8644   00127A  CFDD FFF7          	movff	postdec2,tblptrh
  8645   00127E                     	if	0	;tblptru may be non-zero
  8646   00127E                     	endif
  8647   00127E                     	if	0	;tblptru may be non-zero
  8648   00127E                     	endif
  8649   00127E  0008               	tblrd		*
  8650   001280  50F5               	movf	tablat,w,c
  8651   001282  0A25               	xorlw	37
  8652   001284  A4D8               	btfss	status,2,c
  8653   001286  EF47  F009         	goto	u3551
  8654   00128A  EF49  F009         	goto	u3550
  8655   00128E                     u3551:
  8656   00128E  EF2A  F00A         	goto	l3828
  8657   001292                     u3550:
  8658   001292                     
  8659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  8660   001292  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8661   001294  6ED9               	movwf	fsr2l,c
  8662   001296  6ADA               	clrf	fsr2h,c
  8663   001298  2ADE               	incf	postinc2,f,c
  8664   00129A  0E00               	movlw	0
  8665   00129C  22DD               	addwfc	postdec2,f,c
  8666   00129E                     
  8667                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  8668   00129E  0E00               	movlw	0
  8669   0012A0  0100               	movlb	0	; () banked
  8670   0012A2  6FC0               	movwf	(_width+1)& (0+255),b
  8671   0012A4  0E00               	movlw	0
  8672   0012A6  6FBF               	movwf	_width& (0+255),b
  8673   0012A8  C0BF  F0CF         	movff	_width,_flags
  8674   0012AC                     
  8675                           ; BSR set to: 0
  8676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  8677   0012AC  69C1               	setf	_prec& (0+255),b
  8678   0012AE  69C2               	setf	(_prec+1)& (0+255),b
  8679   0012B0                     
  8680                           ; BSR set to: 0
  8681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  8682   0012B0  6A2B               	clrf	vfpfcnvrt@done^0,c
  8683                           
  8684                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  8685   0012B2  EF78  F009         	goto	l3784
  8686   0012B6                     l3774:
  8687                           
  8688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  8689   0012B6  0100               	movlb	0	; () banked
  8690   0012B8  83CF               	bsf	_flags& (0+255),1,b
  8691   0012BA                     
  8692                           ; BSR set to: 0
  8693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  8694   0012BA  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8695   0012BC  6ED9               	movwf	fsr2l,c
  8696   0012BE  6ADA               	clrf	fsr2h,c
  8697   0012C0  2ADE               	incf	postinc2,f,c
  8698   0012C2  0E00               	movlw	0
  8699   0012C4  22DD               	addwfc	postdec2,f,c
  8700                           
  8701                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  8702   0012C6  EF78  F009         	goto	l3784
  8703   0012CA                     l3778:
  8704                           
  8705                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  8706   0012CA  0E01               	movlw	1
  8707   0012CC  6E2B               	movwf	vfpfcnvrt@done^0,c
  8708                           
  8709                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  8710   0012CE  EF78  F009         	goto	l3784
  8711   0012D2                     l3782:
  8712   0012D2  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8713   0012D4  6ED9               	movwf	fsr2l,c
  8714   0012D6  6ADA               	clrf	fsr2h,c
  8715   0012D8  CFDE FFF6          	movff	postinc2,tblptrl
  8716   0012DC  CFDD FFF7          	movff	postdec2,tblptrh
  8717   0012E0                     	if	0	;tblptru may be non-zero
  8718   0012E0                     	endif
  8719   0012E0                     	if	0	;tblptru may be non-zero
  8720   0012E0                     	endif
  8721   0012E0  0008               	tblrd		*
  8722   0012E2  50F5               	movf	tablat,w,c
  8723                           
  8724                           ; Switch size 1, requested type "simple"
  8725                           ; Number of cases is 1, Range of values is 48 to 48
  8726                           ; switch strategies available:
  8727                           ; Name         Instructions Cycles
  8728                           ; simple_byte            4     3 (average)
  8729                           ;	Chosen strategy is simple_byte
  8730   0012E4  0A30               	xorlw	48	; case 48
  8731   0012E6  B4D8               	btfsc	status,2,c
  8732   0012E8  EF5B  F009         	goto	l3774
  8733   0012EC  EF65  F009         	goto	l3778
  8734   0012F0                     l3784:
  8735                           
  8736                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  8737   0012F0  502B               	movf	vfpfcnvrt@done^0,w,c
  8738   0012F2  B4D8               	btfsc	status,2,c
  8739   0012F4  EF7E  F009         	goto	u3561
  8740   0012F8  EF80  F009         	goto	u3560
  8741   0012FC                     u3561:
  8742   0012FC  EF69  F009         	goto	l3782
  8743   001300                     u3560:
  8744   001300                     
  8745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  8746   001300  C026  F003         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8747   001304  C027  F004         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8748   001308  EC45  F014         	call	_read_prec_or_width	;wreg free
  8749   00130C  C003  F0BF         	movff	?_read_prec_or_width,_width
  8750   001310  C004  F0C0         	movff	?_read_prec_or_width+1,_width+1
  8751   001314                     
  8752                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  8753   001314  0100               	movlb	0	; () banked
  8754   001316  BFC0               	btfsc	(_width+1)& (0+255),7,b
  8755   001318  EF92  F009         	goto	u3570
  8756   00131C  EF90  F009         	goto	u3571
  8757   001320                     u3571:
  8758   001320  EF97  F009         	goto	l3792
  8759   001324                     u3570:
  8760   001324                     
  8761                           ; BSR set to: 0
  8762                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  8763   001324  81CF               	bsf	_flags& (0+255),0,b
  8764                           
  8765                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  8766   001326  6DBF               	negf	_width& (0+255),b
  8767   001328  1FC0               	comf	(_width+1)& (0+255),f,b
  8768   00132A  B0D8               	btfsc	status,0,c
  8769   00132C  2BC0               	incf	(_width+1)& (0+255),f,b
  8770   00132E                     l3792:
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  8774   00132E  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8775   001330  6ED9               	movwf	fsr2l,c
  8776   001332  6ADA               	clrf	fsr2h,c
  8777   001334  CFDE FFF6          	movff	postinc2,tblptrl
  8778   001338  CFDD FFF7          	movff	postdec2,tblptrh
  8779   00133C                     	if	0	;tblptru may be non-zero
  8780   00133C                     	endif
  8781   00133C                     	if	0	;tblptru may be non-zero
  8782   00133C                     	endif
  8783   00133C  0008               	tblrd		*
  8784   00133E  50F5               	movf	tablat,w,c
  8785   001340  0A63               	xorlw	99
  8786   001342  A4D8               	btfss	status,2,c
  8787   001344  EFA6  F009         	goto	u3581
  8788   001348  EFA8  F009         	goto	u3580
  8789   00134C                     u3581:
  8790   00134C  EFC0  F009         	goto	l3802
  8791   001350                     u3580:
  8792   001350                     
  8793                           ; BSR set to: 0
  8794                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  8795   001350  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8796   001352  6ED9               	movwf	fsr2l,c
  8797   001354  6ADA               	clrf	fsr2h,c
  8798   001356  2ADE               	incf	postinc2,f,c
  8799   001358  0E00               	movlw	0
  8800   00135A  22DD               	addwfc	postdec2,f,c
  8801   00135C                     
  8802                           ; BSR set to: 0
  8803                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8804   00135C  5027               	movf	vfpfcnvrt@ap^0,w,c
  8805   00135E  6ED9               	movwf	fsr2l,c
  8806   001360  6ADA               	clrf	fsr2h,c
  8807   001362  50DF               	movf	indf2,w,c
  8808   001364  2ADF               	incf	indf2,f,c
  8809   001366  2ADF               	incf	indf2,f,c
  8810   001368  6ED9               	movwf	fsr2l,c
  8811   00136A  6ADA               	clrf	fsr2h,c
  8812   00136C  50DF               	movf	indf2,w,c
  8813   00136E  6E2A               	movwf	vfpfcnvrt@c^0,c
  8814   001370                     
  8815                           ; BSR set to: 0
  8816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  8817   001370  C025  F00B         	movff	vfpfcnvrt@fp,ctoa@fp
  8818   001374  C02A  F00C         	movff	vfpfcnvrt@c,ctoa@c
  8819   001378  EC88  F013         	call	_ctoa	;wreg free
  8820   00137C  EF3B  F00A         	goto	l1251
  8821   001380                     l3802:
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  8825   001380  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8826   001382  6ED9               	movwf	fsr2l,c
  8827   001384  6ADA               	clrf	fsr2h,c
  8828   001386  CFDE F030          	movff	postinc2,vfpfcnvrt@cp
  8829   00138A  CFDD F031          	movff	postdec2,vfpfcnvrt@cp+1
  8830   00138E                     
  8831                           ; BSR set to: 0
  8832   00138E  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8833   001392  C031  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8834   001396                     	if	0	;tblptru may be non-zero
  8835   001396                     	endif
  8836   001396                     	if	0	;tblptru may be non-zero
  8837   001396                     	endif
  8838   001396  0008               	tblrd		*
  8839   001398  50F5               	movf	tablat,w,c
  8840   00139A  0A58               	xorlw	88
  8841   00139C  B4D8               	btfsc	status,2,c
  8842   00139E  EFD3  F009         	goto	u3591
  8843   0013A2  EFD5  F009         	goto	u3590
  8844   0013A6                     u3591:
  8845   0013A6  EFE3  F009         	goto	l3808
  8846   0013AA                     u3590:
  8847   0013AA                     
  8848                           ; BSR set to: 0
  8849   0013AA  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8850   0013AE  C031  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8851   0013B2                     	if	0	;tblptru may be non-zero
  8852   0013B2                     	endif
  8853   0013B2                     	if	0	;tblptru may be non-zero
  8854   0013B2                     	endif
  8855   0013B2  0008               	tblrd		*
  8856   0013B4  50F5               	movf	tablat,w,c
  8857   0013B6  0A75               	xorlw	117
  8858   0013B8  A4D8               	btfss	status,2,c
  8859   0013BA  EFE1  F009         	goto	u3601
  8860   0013BE  EFE3  F009         	goto	u3600
  8861   0013C2                     u3601:
  8862   0013C2  EF22  F00A         	goto	l3824
  8863   0013C6                     u3600:
  8864   0013C6                     l3808:
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  8868   0013C6  5027               	movf	vfpfcnvrt@ap^0,w,c
  8869   0013C8  6ED9               	movwf	fsr2l,c
  8870   0013CA  6ADA               	clrf	fsr2h,c
  8871   0013CC  0E02               	movlw	2
  8872   0013CE  26DF               	addwf	indf2,f,c
  8873   0013D0  5CDF               	subwf	indf2,w,c
  8874   0013D2  6ED9               	movwf	fsr2l,c
  8875   0013D4  6ADA               	clrf	fsr2h,c
  8876   0013D6  CFDE F02C          	movff	postinc2,vfpfcnvrt@convarg
  8877   0013DA  CFDE F02D          	movff	postinc2,vfpfcnvrt@convarg+1
  8878   0013DE                     
  8879                           ; BSR set to: 0
  8880                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  8881   0013DE  0E01               	movlw	1
  8882   0013E0  2430               	addwf	vfpfcnvrt@cp^0,w,c
  8883   0013E2  6E28               	movwf	??_vfpfcnvrt^0,c
  8884   0013E4  0E00               	movlw	0
  8885   0013E6  2031               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  8886   0013E8  6E29               	movwf	(??_vfpfcnvrt+1)^0,c
  8887   0013EA  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8888   0013EC  6ED9               	movwf	fsr2l,c
  8889   0013EE  6ADA               	clrf	fsr2h,c
  8890   0013F0  C028  FFDE         	movff	??_vfpfcnvrt,postinc2
  8891   0013F4  C029  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8892                           
  8893                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  8894   0013F8  EF12  F00A         	goto	l3822
  8895   0013FC                     l3812:
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  8899   0013FC  C025  F019         	movff	vfpfcnvrt@fp,utoa@fp
  8900   001400  C02C  F01A         	movff	vfpfcnvrt@convarg,utoa@d
  8901   001404  C02D  F01B         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  8902   001408  EC82  F011         	call	_utoa	;wreg free
  8903   00140C  EF3B  F00A         	goto	l1251
  8904   001410                     l3816:
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  8908   001410  C025  F019         	movff	vfpfcnvrt@fp,xtoa@fp
  8909   001414  C02C  F01A         	movff	vfpfcnvrt@convarg,xtoa@d
  8910   001418  C02D  F01B         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  8911   00141C  EC1C  F00F         	call	_xtoa	;wreg free
  8912   001420  EF3B  F00A         	goto	l1251
  8913   001424                     l3822:
  8914                           
  8915                           ; BSR set to: 0
  8916   001424  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8917   001428  C031  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8918   00142C                     	if	0	;tblptru may be non-zero
  8919   00142C                     	endif
  8920   00142C                     	if	0	;tblptru may be non-zero
  8921   00142C                     	endif
  8922   00142C  0008               	tblrd		*
  8923   00142E  50F5               	movf	tablat,w,c
  8924                           
  8925                           ; Switch size 1, requested type "simple"
  8926                           ; Number of cases is 2, Range of values is 88 to 117
  8927                           ; switch strategies available:
  8928                           ; Name         Instructions Cycles
  8929                           ; simple_byte            7     4 (average)
  8930                           ;	Chosen strategy is simple_byte
  8931   001430  0A58               	xorlw	88	; case 88
  8932   001432  B4D8               	btfsc	status,2,c
  8933   001434  EF08  F00A         	goto	l3816
  8934   001438  0A2D               	xorlw	45	; case 117
  8935   00143A  B4D8               	btfsc	status,2,c
  8936   00143C  EFFE  F009         	goto	l3812
  8937   001440  EF22  F00A         	goto	l3824
  8938   001444                     l3824:
  8939                           
  8940                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  8941   001444  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8942   001446  6ED9               	movwf	fsr2l,c
  8943   001448  6ADA               	clrf	fsr2h,c
  8944   00144A  2ADE               	incf	postinc2,f,c
  8945   00144C  0E00               	movlw	0
  8946   00144E  22DD               	addwfc	postdec2,f,c
  8947   001450  EF3B  F00A         	goto	l1251
  8948   001454                     l3828:
  8949                           
  8950                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  8951   001454  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8952   001456  6ED9               	movwf	fsr2l,c
  8953   001458  6ADA               	clrf	fsr2h,c
  8954   00145A  CFDE FFF6          	movff	postinc2,tblptrl
  8955   00145E  CFDD FFF7          	movff	postdec2,tblptrh
  8956   001462                     	if	0	;tblptru may be non-zero
  8957   001462                     	endif
  8958   001462                     	if	0	;tblptru may be non-zero
  8959   001462                     	endif
  8960   001462  0008               	tblrd		*
  8961   001464  50F5               	movf	tablat,w,c
  8962   001466  6E03               	movwf	fputc@c^0,c
  8963   001468  6A04               	clrf	(fputc@c+1)^0,c
  8964   00146A  C025  F005         	movff	vfpfcnvrt@fp,fputc@fp
  8965   00146E  ECE8  F013         	call	_fputc	;wreg free
  8966   001472  EF22  F00A         	goto	l3824
  8967   001476                     l1251:
  8968   001476  0012               	return		;funcret
  8969   001478                     __end_of_vfpfcnvrt:
  8970                           	callstack 0
  8971                           
  8972 ;; *************** function _xtoa *****************
  8973 ;; Defined at:
  8974 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  8977 ;;		 -> sprintf@f(11), 
  8978 ;;  d               2   25[COMRAM] unsigned int 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  i               2   34[COMRAM] int 
  8981 ;;  w               2   31[COMRAM] int 
  8982 ;;  c               1   33[COMRAM] unsigned char 
  8983 ;;  p               1   30[COMRAM] _Bool 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8993 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;Total ram usage:       12 bytes
  8998 ;; Hardware stack levels used: 1
  8999 ;; Hardware stack levels required when called: 5
  9000 ;; This function calls:
  9001 ;;		_pad
  9002 ;; This function is called by:
  9003 ;;		_vfpfcnvrt
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text36
  9008   001E38                     __ptext36:
  9009                           	callstack 0
  9010   001E38                     _xtoa:
  9011                           	callstack 19
  9012   001E38                     
  9013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
  9014   001E38  0E01               	movlw	1
  9015   001E3A  6E1F               	movwf	xtoa@p^0,c
  9016   001E3C                     
  9017                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  9018   001E3C  C0BF  F020         	movff	_width,xtoa@w
  9019   001E40  C0C0  F021         	movff	_width+1,xtoa@w+1
  9020                           
  9021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  9022   001E44  0E00               	movlw	0
  9023   001E46  6E24               	movwf	(xtoa@i+1)^0,c
  9024   001E48  0E1F               	movlw	31
  9025   001E4A  6E23               	movwf	xtoa@i^0,c
  9026   001E4C                     
  9027                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  9028   001E4C  0101               	movlb	1	; () banked
  9029   001E4E  6B7B               	clrf	(_dbuf+31)& (0+255),b
  9030                           
  9031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  9032   001E50  EF5A  F00F         	goto	l3566
  9033   001E54                     l3548:
  9034                           
  9035                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1107:         --i;
  9036   001E54  0623               	decf	xtoa@i^0,f,c
  9037   001E56  A0D8               	btfss	status,0,c
  9038   001E58  0624               	decf	(xtoa@i+1)^0,f,c
  9039   001E5A                     
  9040                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  9041   001E5A  501A               	movf	xtoa@d^0,w,c
  9042   001E5C  0B0F               	andlw	15
  9043   001E5E  6E22               	movwf	xtoa@c^0,c
  9044   001E60                     
  9045                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  9046   001E60  0E0A               	movlw	10
  9047   001E62  6022               	cpfslt	xtoa@c^0,c
  9048   001E64  EF36  F00F         	goto	u3031
  9049   001E68  EF38  F00F         	goto	u3030
  9050   001E6C                     u3031:
  9051   001E6C  EF3C  F00F         	goto	l3556
  9052   001E70                     u3030:
  9053   001E70                     
  9054                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  9055   001E70  0E30               	movlw	48
  9056   001E72  2622               	addwf	xtoa@c^0,f,c
  9057                           
  9058                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1111:   }
  9059   001E74  EF3E  F00F         	goto	l3558
  9060   001E78                     l3556:
  9061                           
  9062                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1118:    c += 'A'
      +                           - 10;
  9063   001E78  0E37               	movlw	55
  9064   001E7A  2622               	addwf	xtoa@c^0,f,c
  9065   001E7C                     l3558:
  9066                           
  9067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  9068   001E7C  0E5C               	movlw	low _dbuf
  9069   001E7E  2423               	addwf	xtoa@i^0,w,c
  9070   001E80  6ED9               	movwf	fsr2l,c
  9071   001E82  0E01               	movlw	high _dbuf
  9072   001E84  2024               	addwfc	(xtoa@i+1)^0,w,c
  9073   001E86  6EDA               	movwf	fsr2h,c
  9074   001E88  C022  FFDF         	movff	xtoa@c,indf2
  9075   001E8C                     
  9076                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
  9077   001E8C  6A1F               	clrf	xtoa@p^0,c
  9078   001E8E                     
  9079                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  9080   001E8E  0620               	decf	xtoa@w^0,f,c
  9081   001E90  A0D8               	btfss	status,0,c
  9082   001E92  0621               	decf	(xtoa@w+1)^0,f,c
  9083   001E94                     
  9084                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  9085   001E94  C01A  F01C         	movff	xtoa@d,??_xtoa
  9086   001E98  C01B  F01D         	movff	xtoa@d+1,??_xtoa+1
  9087   001E9C  0E04               	movlw	4
  9088   001E9E  6E1E               	movwf	(??_xtoa+2)^0,c
  9089   001EA0                     u3045:
  9090   001EA0  90D8               	bcf	status,0,c
  9091   001EA2  321D               	rrcf	(??_xtoa+1)^0,f,c
  9092   001EA4  321C               	rrcf	??_xtoa^0,f,c
  9093   001EA6  2E1E               	decfsz	(??_xtoa+2)^0,f,c
  9094   001EA8  EF50  F00F         	goto	u3045
  9095   001EAC  C01C  F01A         	movff	??_xtoa,xtoa@d
  9096   001EB0  C01D  F01B         	movff	??_xtoa+1,xtoa@d+1
  9097   001EB4                     l3566:
  9098                           
  9099                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  9100   001EB4  BE24               	btfsc	(xtoa@i+1)^0,7,c
  9101   001EB6  EF66  F00F         	goto	u3051
  9102   001EBA  5024               	movf	(xtoa@i+1)^0,w,c
  9103   001EBC  E109               	bnz	u3050
  9104   001EBE  0E02               	movlw	2
  9105   001EC0  5C23               	subwf	xtoa@i^0,w,c
  9106   001EC2  A0D8               	btfss	status,0,c
  9107   001EC4  EF66  F00F         	goto	u3051
  9108   001EC8  EF68  F00F         	goto	u3050
  9109   001ECC                     u3051:
  9110   001ECC  EF8E  F00F         	goto	l3576
  9111   001ED0                     u3050:
  9112   001ED0  501A               	movf	xtoa@d^0,w,c
  9113   001ED2  101B               	iorwf	(xtoa@d+1)^0,w,c
  9114   001ED4  A4D8               	btfss	status,2,c
  9115   001ED6  EF6F  F00F         	goto	u3061
  9116   001EDA  EF71  F00F         	goto	u3060
  9117   001EDE                     u3061:
  9118   001EDE  EF2A  F00F         	goto	l3548
  9119   001EE2                     u3060:
  9120   001EE2  501F               	movf	xtoa@p^0,w,c
  9121   001EE4  A4D8               	btfss	status,2,c
  9122   001EE6  EF77  F00F         	goto	u3071
  9123   001EEA  EF79  F00F         	goto	u3070
  9124   001EEE                     u3071:
  9125   001EEE  EF2A  F00F         	goto	l3548
  9126   001EF2                     u3070:
  9127   001EF2  BE21               	btfsc	(xtoa@w+1)^0,7,c
  9128   001EF4  EF84  F00F         	goto	u3081
  9129   001EF8  5021               	movf	(xtoa@w+1)^0,w,c
  9130   001EFA  E108               	bnz	u3080
  9131   001EFC  0420               	decf	xtoa@w^0,w,c
  9132   001EFE  A0D8               	btfss	status,0,c
  9133   001F00  EF84  F00F         	goto	u3081
  9134   001F04  EF86  F00F         	goto	u3080
  9135   001F08                     u3081:
  9136   001F08  EF8E  F00F         	goto	l3576
  9137   001F0C                     u3080:
  9138   001F0C  0100               	movlb	0	; () banked
  9139   001F0E  B3CF               	btfsc	_flags& (0+255),1,b
  9140   001F10  EF8C  F00F         	goto	u3091
  9141   001F14  EF8E  F00F         	goto	u3090
  9142   001F18                     u3091:
  9143   001F18  EF2A  F00F         	goto	l3548
  9144   001F1C                     u3090:
  9145   001F1C                     l3576:
  9146                           
  9147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  9148   001F1C  C019  F011         	movff	xtoa@fp,pad@fp
  9149   001F20  0E5C               	movlw	low _dbuf
  9150   001F22  2423               	addwf	xtoa@i^0,w,c
  9151   001F24  6E12               	movwf	pad@buf^0,c
  9152   001F26  0E01               	movlw	high _dbuf
  9153   001F28  2024               	addwfc	(xtoa@i+1)^0,w,c
  9154   001F2A  6E13               	movwf	(pad@buf+1)^0,c
  9155   001F2C  C020  F014         	movff	xtoa@w,pad@p
  9156   001F30  C021  F015         	movff	xtoa@w+1,pad@p+1
  9157   001F34  EC38  F015         	call	_pad	;wreg free
  9158   001F38  0012               	return		;funcret
  9159   001F3A                     __end_of_xtoa:
  9160                           	callstack 0
  9161                           
  9162 ;; *************** function _utoa *****************
  9163 ;; Defined at:
  9164 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  9167 ;;		 -> sprintf@f(11), 
  9168 ;;  d               2   25[COMRAM] unsigned int 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  i               2   30[COMRAM] int 
  9171 ;;  w               2   28[COMRAM] int 
  9172 ;;  p               1   27[COMRAM] _Bool 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      void 
  9175 ;; Registers used:
  9176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9182 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;Total ram usage:        8 bytes
  9187 ;; Hardware stack levels used: 1
  9188 ;; Hardware stack levels required when called: 5
  9189 ;; This function calls:
  9190 ;;		___lwdiv
  9191 ;;		___lwmod
  9192 ;;		_pad
  9193 ;; This function is called by:
  9194 ;;		_vfpfcnvrt
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text37
  9199   002304                     __ptext37:
  9200                           	callstack 0
  9201   002304                     _utoa:
  9202                           	callstack 19
  9203   002304                     
  9204                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  9205   002304  0E01               	movlw	1
  9206   002306  6E1C               	movwf	utoa@p^0,c
  9207   002308                     
  9208                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  9209   002308  C0BF  F01D         	movff	_width,utoa@w
  9210   00230C  C0C0  F01E         	movff	_width+1,utoa@w+1
  9211                           
  9212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  9213   002310  0E00               	movlw	0
  9214   002312  6E20               	movwf	(utoa@i+1)^0,c
  9215   002314  0E1F               	movlw	31
  9216   002316  6E1F               	movwf	utoa@i^0,c
  9217   002318                     
  9218                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  9219   002318  0101               	movlb	1	; () banked
  9220   00231A  6B7B               	clrf	(_dbuf+31)& (0+255),b
  9221                           
  9222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  9223   00231C  EFB8  F011         	goto	l3528
  9224   002320                     l3518:
  9225                           
  9226                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
  9227   002320  061F               	decf	utoa@i^0,f,c
  9228   002322  A0D8               	btfss	status,0,c
  9229   002324  0620               	decf	(utoa@i+1)^0,f,c
  9230   002326                     
  9231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  9232   002326  0E5C               	movlw	low _dbuf
  9233   002328  241F               	addwf	utoa@i^0,w,c
  9234   00232A  6ED9               	movwf	fsr2l,c
  9235   00232C  0E01               	movlw	high _dbuf
  9236   00232E  2020               	addwfc	(utoa@i+1)^0,w,c
  9237   002330  6EDA               	movwf	fsr2h,c
  9238   002332  C01A  F003         	movff	utoa@d,___lwmod@dividend
  9239   002336  C01B  F004         	movff	utoa@d+1,___lwmod@dividend+1
  9240   00233A  0E00               	movlw	0
  9241   00233C  6E06               	movwf	(___lwmod@divisor+1)^0,c
  9242   00233E  0E0A               	movlw	10
  9243   002340  6E05               	movwf	___lwmod@divisor^0,c
  9244   002342  ECA8  F017         	call	___lwmod	;wreg free
  9245   002346  5003               	movf	?___lwmod^0,w,c
  9246   002348  0F30               	addlw	48
  9247   00234A  6EDF               	movwf	indf2,c
  9248   00234C                     
  9249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  9250   00234C  6A1C               	clrf	utoa@p^0,c
  9251   00234E                     
  9252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  9253   00234E  061D               	decf	utoa@w^0,f,c
  9254   002350  A0D8               	btfss	status,0,c
  9255   002352  061E               	decf	(utoa@w+1)^0,f,c
  9256   002354                     
  9257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  9258   002354  C01A  F003         	movff	utoa@d,___lwdiv@dividend
  9259   002358  C01B  F004         	movff	utoa@d+1,___lwdiv@dividend+1
  9260   00235C  0E00               	movlw	0
  9261   00235E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  9262   002360  0E0A               	movlw	10
  9263   002362  6E05               	movwf	___lwdiv@divisor^0,c
  9264   002364  ECD1  F016         	call	___lwdiv	;wreg free
  9265   002368  C003  F01A         	movff	?___lwdiv,utoa@d
  9266   00236C  C004  F01B         	movff	?___lwdiv+1,utoa@d+1
  9267   002370                     l3528:
  9268                           
  9269                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  9270   002370  501F               	movf	utoa@i^0,w,c
  9271   002372  1020               	iorwf	(utoa@i+1)^0,w,c
  9272   002374  B4D8               	btfsc	status,2,c
  9273   002376  EFBF  F011         	goto	u2981
  9274   00237A  EFC1  F011         	goto	u2980
  9275   00237E                     u2981:
  9276   00237E  EFE7  F011         	goto	l3538
  9277   002382                     u2980:
  9278   002382  501A               	movf	utoa@d^0,w,c
  9279   002384  101B               	iorwf	(utoa@d+1)^0,w,c
  9280   002386  A4D8               	btfss	status,2,c
  9281   002388  EFC8  F011         	goto	u2991
  9282   00238C  EFCA  F011         	goto	u2990
  9283   002390                     u2991:
  9284   002390  EF90  F011         	goto	l3518
  9285   002394                     u2990:
  9286   002394  501C               	movf	utoa@p^0,w,c
  9287   002396  A4D8               	btfss	status,2,c
  9288   002398  EFD0  F011         	goto	u3001
  9289   00239C  EFD2  F011         	goto	u3000
  9290   0023A0                     u3001:
  9291   0023A0  EF90  F011         	goto	l3518
  9292   0023A4                     u3000:
  9293   0023A4  BE1E               	btfsc	(utoa@w+1)^0,7,c
  9294   0023A6  EFDD  F011         	goto	u3011
  9295   0023AA  501E               	movf	(utoa@w+1)^0,w,c
  9296   0023AC  E108               	bnz	u3010
  9297   0023AE  041D               	decf	utoa@w^0,w,c
  9298   0023B0  A0D8               	btfss	status,0,c
  9299   0023B2  EFDD  F011         	goto	u3011
  9300   0023B6  EFDF  F011         	goto	u3010
  9301   0023BA                     u3011:
  9302   0023BA  EFE7  F011         	goto	l3538
  9303   0023BE                     u3010:
  9304   0023BE  0100               	movlb	0	; () banked
  9305   0023C0  B3CF               	btfsc	_flags& (0+255),1,b
  9306   0023C2  EFE5  F011         	goto	u3021
  9307   0023C6  EFE7  F011         	goto	u3020
  9308   0023CA                     u3021:
  9309   0023CA  EF90  F011         	goto	l3518
  9310   0023CE                     u3020:
  9311   0023CE                     l3538:
  9312                           
  9313                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  9314   0023CE  C019  F011         	movff	utoa@fp,pad@fp
  9315   0023D2  0E5C               	movlw	low _dbuf
  9316   0023D4  241F               	addwf	utoa@i^0,w,c
  9317   0023D6  6E12               	movwf	pad@buf^0,c
  9318   0023D8  0E01               	movlw	high _dbuf
  9319   0023DA  2020               	addwfc	(utoa@i+1)^0,w,c
  9320   0023DC  6E13               	movwf	(pad@buf+1)^0,c
  9321   0023DE  C01D  F014         	movff	utoa@w,pad@p
  9322   0023E2  C01E  F015         	movff	utoa@w+1,pad@p+1
  9323   0023E6  EC38  F015         	call	_pad	;wreg free
  9324   0023EA  0012               	return		;funcret
  9325   0023EC                     __end_of_utoa:
  9326                           	callstack 0
  9327                           
  9328 ;; *************** function _pad *****************
  9329 ;; Defined at:
  9330 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  9333 ;;		 -> sprintf@f(11), 
  9334 ;;  buf             2   17[COMRAM] PTR unsigned char 
  9335 ;;		 -> dbuf(32), 
  9336 ;;  p               2   19[COMRAM] int 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;  i               2   22[COMRAM] int 
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  1    wreg      void 
  9341 ;; Registers used:
  9342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9348 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9351 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;Total ram usage:        8 bytes
  9353 ;; Hardware stack levels used: 1
  9354 ;; Hardware stack levels required when called: 4
  9355 ;; This function calls:
  9356 ;;		_fputc
  9357 ;;		_fputs
  9358 ;; This function is called by:
  9359 ;;		_utoa
  9360 ;;		_xtoa
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           	psect	text38
  9365   002A70                     __ptext38:
  9366                           	callstack 0
  9367   002A70                     _pad:
  9368                           	callstack 19
  9369   002A70                     
  9370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  9371   002A70  0100               	movlb	0	; () banked
  9372   002A72  A1CF               	btfss	_flags& (0+255),0,b
  9373   002A74  EF3E  F015         	goto	u2811
  9374   002A78  EF40  F015         	goto	u2810
  9375   002A7C                     u2811:
  9376   002A7C  EF48  F015         	goto	l3430
  9377   002A80                     u2810:
  9378   002A80                     
  9379                           ; BSR set to: 0
  9380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  9381   002A80  C012  F00B         	movff	pad@buf,fputs@s
  9382   002A84  C013  F00C         	movff	pad@buf+1,fputs@s+1
  9383   002A88  C011  F00D         	movff	pad@fp,fputs@fp
  9384   002A8C  ECCB  F018         	call	_fputs	;wreg free
  9385   002A90                     l3430:
  9386                           
  9387                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  9388   002A90  BE15               	btfsc	(pad@p+1)^0,7,c
  9389   002A92  EF4F  F015         	goto	u2820
  9390   002A96  EF4D  F015         	goto	u2821
  9391   002A9A                     u2821:
  9392   002A9A  EF53  F015         	goto	l1187
  9393   002A9E                     u2820:
  9394   002A9E                     
  9395                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9396   002A9E  0E00               	movlw	0
  9397   002AA0  6E15               	movwf	(pad@p+1)^0,c
  9398   002AA2  0E00               	movlw	0
  9399   002AA4  6E14               	movwf	pad@p^0,c
  9400   002AA6                     l1187:
  9401                           
  9402                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9403   002AA6  0E00               	movlw	0
  9404   002AA8  6E18               	movwf	(pad@i+1)^0,c
  9405   002AAA  0E00               	movlw	0
  9406   002AAC  6E17               	movwf	pad@i^0,c
  9407                           
  9408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9409   002AAE  EF63  F015         	goto	l3438
  9410   002AB2                     l3434:
  9411                           
  9412                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9413   002AB2  0E00               	movlw	0
  9414   002AB4  6E04               	movwf	(fputc@c+1)^0,c
  9415   002AB6  0E20               	movlw	32
  9416   002AB8  6E03               	movwf	fputc@c^0,c
  9417   002ABA  C011  F005         	movff	pad@fp,fputc@fp
  9418   002ABE  ECE8  F013         	call	_fputc	;wreg free
  9419   002AC2                     
  9420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9421   002AC2  4A17               	infsnz	pad@i^0,f,c
  9422   002AC4  2A18               	incf	(pad@i+1)^0,f,c
  9423   002AC6                     l3438:
  9424                           
  9425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9426   002AC6  5014               	movf	pad@p^0,w,c
  9427   002AC8  5C17               	subwf	pad@i^0,w,c
  9428   002ACA  5018               	movf	(pad@i+1)^0,w,c
  9429   002ACC  0A80               	xorlw	128
  9430   002ACE  6E16               	movwf	??_pad^0,c
  9431   002AD0  5015               	movf	(pad@p+1)^0,w,c
  9432   002AD2  0A80               	xorlw	128
  9433   002AD4  5816               	subwfb	??_pad^0,w,c
  9434   002AD6  A0D8               	btfss	status,0,c
  9435   002AD8  EF70  F015         	goto	u2831
  9436   002ADC  EF72  F015         	goto	u2830
  9437   002AE0                     u2831:
  9438   002AE0  EF59  F015         	goto	l3434
  9439   002AE4                     u2830:
  9440   002AE4                     
  9441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  9442   002AE4  0100               	movlb	0	; () banked
  9443   002AE6  B1CF               	btfsc	_flags& (0+255),0,b
  9444   002AE8  EF78  F015         	goto	u2841
  9445   002AEC  EF7A  F015         	goto	u2840
  9446   002AF0                     u2841:
  9447   002AF0  EF82  F015         	goto	l1192
  9448   002AF4                     u2840:
  9449   002AF4                     
  9450                           ; BSR set to: 0
  9451                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9452   002AF4  C012  F00B         	movff	pad@buf,fputs@s
  9453   002AF8  C013  F00C         	movff	pad@buf+1,fputs@s+1
  9454   002AFC  C011  F00D         	movff	pad@fp,fputs@fp
  9455   002B00  ECCB  F018         	call	_fputs	;wreg free
  9456   002B04                     l1192:
  9457   002B04  0012               	return		;funcret
  9458   002B06                     __end_of_pad:
  9459                           	callstack 0
  9460                           
  9461 ;; *************** function _fputs *****************
  9462 ;; Defined at:
  9463 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9466 ;;		 -> dbuf(32), 
  9467 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  9468 ;;		 -> sprintf@f(11), 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;  i               2   14[COMRAM] int 
  9471 ;;  c               1   13[COMRAM] unsigned char 
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  2   10[COMRAM] int 
  9474 ;; Registers used:
  9475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9481 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9485 ;;Total ram usage:        6 bytes
  9486 ;; Hardware stack levels used: 1
  9487 ;; Hardware stack levels required when called: 3
  9488 ;; This function calls:
  9489 ;;		_fputc
  9490 ;; This function is called by:
  9491 ;;		_pad
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           	psect	text39
  9496   003196                     __ptext39:
  9497                           	callstack 0
  9498   003196                     _fputs:
  9499                           	callstack 19
  9500   003196  0E00               	movlw	0
  9501   003198  6E10               	movwf	(fputs@i+1)^0,c
  9502   00319A  0E00               	movlw	0
  9503   00319C  6E0F               	movwf	fputs@i^0,c
  9504   00319E  EFDA  F018         	goto	l3374
  9505   0031A2                     l3370:
  9506   0031A2  C00E  F003         	movff	fputs@c,fputc@c
  9507   0031A6  6A04               	clrf	(fputc@c+1)^0,c
  9508   0031A8  C00D  F005         	movff	fputs@fp,fputc@fp
  9509   0031AC  ECE8  F013         	call	_fputc	;wreg free
  9510   0031B0  4A0F               	infsnz	fputs@i^0,f,c
  9511   0031B2  2A10               	incf	(fputs@i+1)^0,f,c
  9512   0031B4                     l3374:
  9513   0031B4  500F               	movf	fputs@i^0,w,c
  9514   0031B6  240B               	addwf	fputs@s^0,w,c
  9515   0031B8  6ED9               	movwf	fsr2l,c
  9516   0031BA  5010               	movf	(fputs@i+1)^0,w,c
  9517   0031BC  200C               	addwfc	(fputs@s+1)^0,w,c
  9518   0031BE  6EDA               	movwf	fsr2h,c
  9519   0031C0  50DF               	movf	indf2,w,c
  9520   0031C2  6E0E               	movwf	fputs@c^0,c
  9521   0031C4  500E               	movf	fputs@c^0,w,c
  9522   0031C6  A4D8               	btfss	status,2,c
  9523   0031C8  EFE8  F018         	goto	u2711
  9524   0031CC  EFEA  F018         	goto	u2710
  9525   0031D0                     u2711:
  9526   0031D0  EFD1  F018         	goto	l3370
  9527   0031D4                     u2710:
  9528   0031D4  0012               	return		;funcret
  9529   0031D6                     __end_of_fputs:
  9530                           	callstack 0
  9531                           
  9532 ;; *************** function ___lwmod *****************
  9533 ;; Defined at:
  9534 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  dividend        2    2[COMRAM] unsigned int 
  9537 ;;  divisor         2    4[COMRAM] unsigned int 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;  counter         1    6[COMRAM] unsigned char 
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  2    2[COMRAM] unsigned int 
  9542 ;; Registers used:
  9543 ;;		wreg, status,2, status,0
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9552 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;Total ram usage:        5 bytes
  9554 ;; Hardware stack levels used: 1
  9555 ;; Hardware stack levels required when called: 1
  9556 ;; This function calls:
  9557 ;;		Nothing
  9558 ;; This function is called by:
  9559 ;;		_welcome_splash
  9560 ;;		_utoa
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text40
  9565   002F50                     __ptext40:
  9566                           	callstack 0
  9567   002F50                     ___lwmod:
  9568                           	callstack 28
  9569   002F50  5005               	movf	___lwmod@divisor^0,w,c
  9570   002F52  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  9571   002F54  B4D8               	btfsc	status,2,c
  9572   002F56  EFAF  F017         	goto	u2781
  9573   002F5A  EFB1  F017         	goto	u2780
  9574   002F5E                     u2781:
  9575   002F5E  EFD5  F017         	goto	l983
  9576   002F62                     u2780:
  9577   002F62  0E01               	movlw	1
  9578   002F64  6E07               	movwf	___lwmod@counter^0,c
  9579   002F66  EFB9  F017         	goto	l3416
  9580   002F6A                     l3414:
  9581   002F6A  90D8               	bcf	status,0,c
  9582   002F6C  3605               	rlcf	___lwmod@divisor^0,f,c
  9583   002F6E  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  9584   002F70  2A07               	incf	___lwmod@counter^0,f,c
  9585   002F72                     l3416:
  9586   002F72  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  9587   002F74  EFBE  F017         	goto	u2791
  9588   002F78  EFC0  F017         	goto	u2790
  9589   002F7C                     u2791:
  9590   002F7C  EFB5  F017         	goto	l3414
  9591   002F80                     u2790:
  9592   002F80                     l3418:
  9593   002F80  5005               	movf	___lwmod@divisor^0,w,c
  9594   002F82  5C03               	subwf	___lwmod@dividend^0,w,c
  9595   002F84  5006               	movf	(___lwmod@divisor+1)^0,w,c
  9596   002F86  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  9597   002F88  A0D8               	btfss	status,0,c
  9598   002F8A  EFC9  F017         	goto	u2801
  9599   002F8E  EFCB  F017         	goto	u2800
  9600   002F92                     u2801:
  9601   002F92  EFCF  F017         	goto	l3422
  9602   002F96                     u2800:
  9603   002F96  5005               	movf	___lwmod@divisor^0,w,c
  9604   002F98  5E03               	subwf	___lwmod@dividend^0,f,c
  9605   002F9A  5006               	movf	(___lwmod@divisor+1)^0,w,c
  9606   002F9C  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  9607   002F9E                     l3422:
  9608   002F9E  90D8               	bcf	status,0,c
  9609   002FA0  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  9610   002FA2  3205               	rrcf	___lwmod@divisor^0,f,c
  9611   002FA4  2E07               	decfsz	___lwmod@counter^0,f,c
  9612   002FA6  EFC0  F017         	goto	l3418
  9613   002FAA                     l983:
  9614   002FAA  C003  F003         	movff	___lwmod@dividend,?___lwmod
  9615   002FAE  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  9616   002FB2  0012               	return		;funcret
  9617   002FB4                     __end_of___lwmod:
  9618                           	callstack 0
  9619                           
  9620 ;; *************** function ___lwdiv *****************
  9621 ;; Defined at:
  9622 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  dividend        2    2[COMRAM] unsigned int 
  9625 ;;  divisor         2    4[COMRAM] unsigned int 
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;  quotient        2    6[COMRAM] unsigned int 
  9628 ;;  counter         1    8[COMRAM] unsigned char 
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  2    2[COMRAM] unsigned int 
  9631 ;; Registers used:
  9632 ;;		wreg, status,2, status,0
  9633 ;; Tracked objects:
  9634 ;;		On entry : 0/0
  9635 ;;		On exit  : 0/0
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9639 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9641 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9642 ;;Total ram usage:        7 bytes
  9643 ;; Hardware stack levels used: 1
  9644 ;; Hardware stack levels required when called: 1
  9645 ;; This function calls:
  9646 ;;		Nothing
  9647 ;; This function is called by:
  9648 ;;		_welcome_splash
  9649 ;;		_utoa
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           	psect	text41
  9654   002DA2                     __ptext41:
  9655                           	callstack 0
  9656   002DA2                     ___lwdiv:
  9657                           	callstack 28
  9658   002DA2  0E00               	movlw	0
  9659   002DA4  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  9660   002DA6  0E00               	movlw	0
  9661   002DA8  6E07               	movwf	___lwdiv@quotient^0,c
  9662   002DAA  5005               	movf	___lwdiv@divisor^0,w,c
  9663   002DAC  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9664   002DAE  B4D8               	btfsc	status,2,c
  9665   002DB0  EFDC  F016         	goto	u2751
  9666   002DB4  EFDE  F016         	goto	u2750
  9667   002DB8                     u2751:
  9668   002DB8  EF06  F017         	goto	l973
  9669   002DBC                     u2750:
  9670   002DBC  0E01               	movlw	1
  9671   002DBE  6E09               	movwf	___lwdiv@counter^0,c
  9672   002DC0  EFE6  F016         	goto	l3396
  9673   002DC4                     l3394:
  9674   002DC4  90D8               	bcf	status,0,c
  9675   002DC6  3605               	rlcf	___lwdiv@divisor^0,f,c
  9676   002DC8  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9677   002DCA  2A09               	incf	___lwdiv@counter^0,f,c
  9678   002DCC                     l3396:
  9679   002DCC  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  9680   002DCE  EFEB  F016         	goto	u2761
  9681   002DD2  EFED  F016         	goto	u2760
  9682   002DD6                     u2761:
  9683   002DD6  EFE2  F016         	goto	l3394
  9684   002DDA                     u2760:
  9685   002DDA                     l3398:
  9686   002DDA  90D8               	bcf	status,0,c
  9687   002DDC  3607               	rlcf	___lwdiv@quotient^0,f,c
  9688   002DDE  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9689   002DE0  5005               	movf	___lwdiv@divisor^0,w,c
  9690   002DE2  5C03               	subwf	___lwdiv@dividend^0,w,c
  9691   002DE4  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  9692   002DE6  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9693   002DE8  A0D8               	btfss	status,0,c
  9694   002DEA  EFF9  F016         	goto	u2771
  9695   002DEE  EFFB  F016         	goto	u2770
  9696   002DF2                     u2771:
  9697   002DF2  EF00  F017         	goto	l3406
  9698   002DF6                     u2770:
  9699   002DF6  5005               	movf	___lwdiv@divisor^0,w,c
  9700   002DF8  5E03               	subwf	___lwdiv@dividend^0,f,c
  9701   002DFA  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  9702   002DFC  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9703   002DFE  8007               	bsf	___lwdiv@quotient^0,0,c
  9704   002E00                     l3406:
  9705   002E00  90D8               	bcf	status,0,c
  9706   002E02  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9707   002E04  3205               	rrcf	___lwdiv@divisor^0,f,c
  9708   002E06  2E09               	decfsz	___lwdiv@counter^0,f,c
  9709   002E08  EFED  F016         	goto	l3398
  9710   002E0C                     l973:
  9711   002E0C  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  9712   002E10  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9713   002E14  0012               	return		;funcret
  9714   002E16                     __end_of___lwdiv:
  9715                           	callstack 0
  9716                           
  9717 ;; *************** function _read_prec_or_width *****************
  9718 ;; Defined at:
  9719 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  fmt             1    2[COMRAM] PTR PTR const unsigned c
  9722 ;;		 -> vfprintf@cfmt(2), 
  9723 ;;  ap              1    3[COMRAM] PTR PTR void [1]
  9724 ;;		 -> sprintf@ap(1), 
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;  c               1    6[COMRAM] unsigned char 
  9727 ;;  n               2    7[COMRAM] int 
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  2    2[COMRAM] int 
  9730 ;; Registers used:
  9731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;Total ram usage:        7 bytes
  9742 ;; Hardware stack levels used: 1
  9743 ;; Hardware stack levels required when called: 1
  9744 ;; This function calls:
  9745 ;;		Nothing
  9746 ;; This function is called by:
  9747 ;;		_vfpfcnvrt
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           	psect	text42
  9752   00288A                     __ptext42:
  9753                           	callstack 0
  9754   00288A                     _read_prec_or_width:
  9755                           	callstack 23
  9756   00288A                     
  9757                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  9758   00288A  0E00               	movlw	0
  9759   00288C  6E09               	movwf	(read_prec_or_width@n+1)^0,c
  9760   00288E  0E00               	movlw	0
  9761   002890  6E08               	movwf	read_prec_or_width@n^0,c
  9762   002892                     
  9763                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  9764   002892  5003               	movf	read_prec_or_width@fmt^0,w,c
  9765   002894  6ED9               	movwf	fsr2l,c
  9766   002896  6ADA               	clrf	fsr2h,c
  9767   002898  CFDE FFF6          	movff	postinc2,tblptrl
  9768   00289C  CFDD FFF7          	movff	postdec2,tblptrh
  9769   0028A0                     	if	0	;tblptru may be non-zero
  9770   0028A0                     	endif
  9771   0028A0                     	if	0	;tblptru may be non-zero
  9772   0028A0                     	endif
  9773   0028A0  0008               	tblrd		*
  9774   0028A2  50F5               	movf	tablat,w,c
  9775   0028A4  0A2A               	xorlw	42
  9776   0028A6  A4D8               	btfss	status,2,c
  9777   0028A8  EF58  F014         	goto	u3101
  9778   0028AC  EF5A  F014         	goto	u3100
  9779   0028B0                     u3101:
  9780   0028B0  EF83  F014         	goto	l3592
  9781   0028B4                     u3100:
  9782   0028B4                     
  9783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  9784   0028B4  5003               	movf	read_prec_or_width@fmt^0,w,c
  9785   0028B6  6ED9               	movwf	fsr2l,c
  9786   0028B8  6ADA               	clrf	fsr2h,c
  9787   0028BA  2ADE               	incf	postinc2,f,c
  9788   0028BC  0E00               	movlw	0
  9789   0028BE  22DD               	addwfc	postdec2,f,c
  9790   0028C0                     
  9791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  9792   0028C0  5004               	movf	read_prec_or_width@ap^0,w,c
  9793   0028C2  6ED9               	movwf	fsr2l,c
  9794   0028C4  6ADA               	clrf	fsr2h,c
  9795   0028C6  0E02               	movlw	2
  9796   0028C8  26DF               	addwf	indf2,f,c
  9797   0028CA  5CDF               	subwf	indf2,w,c
  9798   0028CC  6ED9               	movwf	fsr2l,c
  9799   0028CE  6ADA               	clrf	fsr2h,c
  9800   0028D0  CFDE F008          	movff	postinc2,read_prec_or_width@n
  9801   0028D4  CFDE F009          	movff	postinc2,read_prec_or_width@n+1
  9802                           
  9803                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  9804   0028D8  EF96  F014         	goto	l1234
  9805   0028DC                     l3588:
  9806                           
  9807                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  9808   0028DC  0E0A               	movlw	10
  9809   0028DE  0208               	mulwf	read_prec_or_width@n^0,c
  9810   0028E0  CFF3 F005          	movff	prodl,??_read_prec_or_width
  9811   0028E4  CFF4 F006          	movff	prodh,??_read_prec_or_width+1
  9812   0028E8  0209               	mulwf	(read_prec_or_width@n+1)^0,c
  9813   0028EA  50F3               	movf	prodl,w,c
  9814   0028EC  2606               	addwf	(??_read_prec_or_width+1)^0,f,c
  9815   0028EE  5007               	movf	read_prec_or_width@c^0,w,c
  9816   0028F0  2405               	addwf	??_read_prec_or_width^0,w,c
  9817   0028F2  6E08               	movwf	read_prec_or_width@n^0,c
  9818   0028F4  0E00               	movlw	0
  9819   0028F6  2006               	addwfc	(??_read_prec_or_width+1)^0,w,c
  9820   0028F8  6E09               	movwf	(read_prec_or_width@n+1)^0,c
  9821   0028FA                     
  9822                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  9823   0028FA  5003               	movf	read_prec_or_width@fmt^0,w,c
  9824   0028FC  6ED9               	movwf	fsr2l,c
  9825   0028FE  6ADA               	clrf	fsr2h,c
  9826   002900  2ADE               	incf	postinc2,f,c
  9827   002902  0E00               	movlw	0
  9828   002904  22DD               	addwfc	postdec2,f,c
  9829   002906                     l3592:
  9830                           
  9831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  9832   002906  5003               	movf	read_prec_or_width@fmt^0,w,c
  9833   002908  6ED9               	movwf	fsr2l,c
  9834   00290A  6ADA               	clrf	fsr2h,c
  9835   00290C  CFDE FFF6          	movff	postinc2,tblptrl
  9836   002910  CFDD FFF7          	movff	postdec2,tblptrh
  9837   002914                     	if	0	;tblptru may be non-zero
  9838   002914                     	endif
  9839   002914                     	if	0	;tblptru may be non-zero
  9840   002914                     	endif
  9841   002914  0008               	tblrd		*
  9842   002916  50F5               	movf	tablat,w,c
  9843   002918  0FD0               	addlw	208
  9844   00291A  6E07               	movwf	read_prec_or_width@c^0,c
  9845   00291C  0E09               	movlw	9
  9846   00291E  6407               	cpfsgt	read_prec_or_width@c^0,c
  9847   002920  EF94  F014         	goto	u3111
  9848   002924  EF96  F014         	goto	u3110
  9849   002928                     u3111:
  9850   002928  EF6E  F014         	goto	l3588
  9851   00292C                     u3110:
  9852   00292C                     l1234:
  9853                           
  9854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  9855   00292C  C008  F003         	movff	read_prec_or_width@n,?_read_prec_or_width
  9856   002930  C009  F004         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9857   002934  0012               	return		;funcret
  9858   002936                     __end_of_read_prec_or_width:
  9859                           	callstack 0
  9860                           
  9861 ;; *************** function _ctoa *****************
  9862 ;; Defined at:
  9863 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  9866 ;;		 -> sprintf@f(11), 
  9867 ;;  c               1   11[COMRAM] unsigned char 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;  w               2   15[COMRAM] int 
  9870 ;;  l               2   13[COMRAM] int 
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  1    wreg      void 
  9873 ;; Registers used:
  9874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9884 ;;Total ram usage:        7 bytes
  9885 ;; Hardware stack levels used: 1
  9886 ;; Hardware stack levels required when called: 3
  9887 ;; This function calls:
  9888 ;;		_fputc
  9889 ;; This function is called by:
  9890 ;;		_vfpfcnvrt
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text43
  9895   002710                     __ptext43:
  9896                           	callstack 0
  9897   002710                     _ctoa:
  9898                           	callstack 21
  9899   002710                     
  9900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 476: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 477: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 478:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 481:  
      +                             w = width ? width - 1 : width;
  9901   002710  0100               	movlb	0	; () banked
  9902   002712  51BF               	movf	_width& (0+255),w,b
  9903   002714  11C0               	iorwf	(_width+1)& (0+255),w,b
  9904   002716  A4D8               	btfss	status,2,c
  9905   002718  EF90  F013         	goto	u2931
  9906   00271C  EF92  F013         	goto	u2930
  9907   002720                     u2931:
  9908   002720  EF98  F013         	goto	l3492
  9909   002724                     u2930:
  9910   002724                     
  9911                           ; BSR set to: 0
  9912   002724  C0BF  F010         	movff	_width,ctoa@w
  9913   002728  C0C0  F011         	movff	_width+1,ctoa@w+1
  9914   00272C  EF9E  F013         	goto	l3494
  9915   002730                     l3492:
  9916                           
  9917                           ; BSR set to: 0
  9918   002730  0EFF               	movlw	255
  9919   002732  25BF               	addwf	_width& (0+255),w,b
  9920   002734  6E10               	movwf	ctoa@w^0,c
  9921   002736  0EFF               	movlw	255
  9922   002738  21C0               	addwfc	(_width+1)& (0+255),w,b
  9923   00273A  6E11               	movwf	(ctoa@w+1)^0,c
  9924   00273C                     l3494:
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
  9928   00273C  A1CF               	btfss	_flags& (0+255),0,b
  9929   00273E  EFA3  F013         	goto	u2941
  9930   002742  EFA5  F013         	goto	u2940
  9931   002746                     u2941:
  9932   002746  EFAC  F013         	goto	l3498
  9933   00274A                     u2940:
  9934   00274A                     
  9935                           ; BSR set to: 0
  9936                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
  9937   00274A  C00C  F003         	movff	ctoa@c,fputc@c
  9938   00274E  6A04               	clrf	(fputc@c+1)^0,c
  9939   002750  C00B  F005         	movff	ctoa@fp,fputc@fp
  9940   002754  ECE8  F013         	call	_fputc	;wreg free
  9941   002758                     l3498:
  9942                           
  9943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
  9944   002758  BE11               	btfsc	(ctoa@w+1)^0,7,c
  9945   00275A  EFB1  F013         	goto	u2951
  9946   00275E  EFB3  F013         	goto	u2950
  9947   002762                     u2951:
  9948   002762  EFB5  F013         	goto	l3502
  9949   002766                     u2950:
  9950   002766  EFB9  F013         	goto	l1203
  9951   00276A                     l3502:
  9952   00276A  0E00               	movlw	0
  9953   00276C  6E11               	movwf	(ctoa@w+1)^0,c
  9954   00276E  0E00               	movlw	0
  9955   002770  6E10               	movwf	ctoa@w^0,c
  9956   002772                     l1203:
  9957                           
  9958                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 492:     l = 0;
  9959   002772  0E00               	movlw	0
  9960   002774  6E0F               	movwf	(ctoa@l+1)^0,c
  9961   002776  0E00               	movlw	0
  9962   002778  6E0E               	movwf	ctoa@l^0,c
  9963                           
  9964                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  9965   00277A  EFC9  F013         	goto	l3508
  9966   00277E                     l3504:
  9967                           
  9968                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
  9969   00277E  0E00               	movlw	0
  9970   002780  6E04               	movwf	(fputc@c+1)^0,c
  9971   002782  0E20               	movlw	32
  9972   002784  6E03               	movwf	fputc@c^0,c
  9973   002786  C00B  F005         	movff	ctoa@fp,fputc@fp
  9974   00278A  ECE8  F013         	call	_fputc	;wreg free
  9975   00278E                     
  9976                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 495:         ++l;
  9977   00278E  4A0E               	infsnz	ctoa@l^0,f,c
  9978   002790  2A0F               	incf	(ctoa@l+1)^0,f,c
  9979   002792                     l3508:
  9980                           
  9981                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  9982   002792  5010               	movf	ctoa@w^0,w,c
  9983   002794  5C0E               	subwf	ctoa@l^0,w,c
  9984   002796  500F               	movf	(ctoa@l+1)^0,w,c
  9985   002798  0A80               	xorlw	128
  9986   00279A  6E0D               	movwf	??_ctoa^0,c
  9987   00279C  5011               	movf	(ctoa@w+1)^0,w,c
  9988   00279E  0A80               	xorlw	128
  9989   0027A0  580D               	subwfb	??_ctoa^0,w,c
  9990   0027A2  A0D8               	btfss	status,0,c
  9991   0027A4  EFD6  F013         	goto	u2961
  9992   0027A8  EFD8  F013         	goto	u2960
  9993   0027AC                     u2961:
  9994   0027AC  EFBF  F013         	goto	l3504
  9995   0027B0                     u2960:
  9996   0027B0                     
  9997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
  9998   0027B0  0100               	movlb	0	; () banked
  9999   0027B2  B1CF               	btfsc	_flags& (0+255),0,b
 10000   0027B4  EFDE  F013         	goto	u2971
 10001   0027B8  EFE0  F013         	goto	u2970
 10002   0027BC                     u2971:
 10003   0027BC  EFE7  F013         	goto	l1208
 10004   0027C0                     u2970:
 10005   0027C0                     
 10006                           ; BSR set to: 0
 10007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
 10008   0027C0  C00C  F003         	movff	ctoa@c,fputc@c
 10009   0027C4  6A04               	clrf	(fputc@c+1)^0,c
 10010   0027C6  C00B  F005         	movff	ctoa@fp,fputc@fp
 10011   0027CA  ECE8  F013         	call	_fputc	;wreg free
 10012   0027CE                     l1208:
 10013   0027CE  0012               	return		;funcret
 10014   0027D0                     __end_of_ctoa:
 10015                           	callstack 0
 10016                           
 10017 ;; *************** function _fputc *****************
 10018 ;; Defined at:
 10019 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  c               2    2[COMRAM] int 
 10022 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
 10023 ;;		 -> sprintf@f(11), 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  2    2[COMRAM] int 
 10028 ;; Registers used:
 10029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10035 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;Total ram usage:        8 bytes
 10040 ;; Hardware stack levels used: 1
 10041 ;; Hardware stack levels required when called: 2
 10042 ;; This function calls:
 10043 ;;		_putch
 10044 ;; This function is called by:
 10045 ;;		_pad
 10046 ;;		_ctoa
 10047 ;;		_vfpfcnvrt
 10048 ;;		_fputs
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           	psect	text44
 10053   0027D0                     __ptext44:
 10054                           	callstack 0
 10055   0027D0                     _fputc:
 10056                           	callstack 19
 10057   0027D0  5005               	movf	fputc@fp^0,w,c
 10058   0027D2  B4D8               	btfsc	status,2,c
 10059   0027D4  EFEE  F013         	goto	u2671
 10060   0027D8  EFF0  F013         	goto	u2670
 10061   0027DC                     u2671:
 10062   0027DC  EFF8  F013         	goto	l3358
 10063   0027E0                     u2670:
 10064   0027E0  5005               	movf	fputc@fp^0,w,c
 10065   0027E2  A4D8               	btfss	status,2,c
 10066   0027E4  EFF6  F013         	goto	u2681
 10067   0027E8  EFF8  F013         	goto	u2680
 10068   0027EC                     u2681:
 10069   0027EC  EFFD  F013         	goto	l3360
 10070   0027F0                     u2680:
 10071   0027F0                     l3358:
 10072   0027F0  5003               	movf	fputc@c^0,w,c
 10073   0027F2  ECFA  F019         	call	_putch
 10074   0027F6  EF44  F014         	goto	l1276
 10075   0027FA                     l3360:
 10076   0027FA  5005               	movf	fputc@fp^0,w,c
 10077   0027FC  6ED9               	movwf	fsr2l,c
 10078   0027FE  6ADA               	clrf	fsr2h,c
 10079   002800  0E09               	movlw	9
 10080   002802  26D9               	addwf	fsr2l,f,c
 10081   002804  50DE               	movf	postinc2,w,c
 10082   002806  10DE               	iorwf	postinc2,w,c
 10083   002808  B4D8               	btfsc	status,2,c
 10084   00280A  EF09  F014         	goto	u2691
 10085   00280E  EF0B  F014         	goto	u2690
 10086   002812                     u2691:
 10087   002812  EF24  F014         	goto	l3364
 10088   002816                     u2690:
 10089   002816  5005               	movf	fputc@fp^0,w,c
 10090   002818  6ED9               	movwf	fsr2l,c
 10091   00281A  6ADA               	clrf	fsr2h,c
 10092   00281C  0E09               	movlw	9
 10093   00281E  26D9               	addwf	fsr2l,f,c
 10094   002820  5005               	movf	fputc@fp^0,w,c
 10095   002822  6EE1               	movwf	fsr1l,c
 10096   002824  6AE2               	clrf	fsr1h,c
 10097   002826  0E02               	movlw	2
 10098   002828  26E1               	addwf	fsr1l,f,c
 10099   00282A  50DE               	movf	postinc2,w,c
 10100   00282C  5CE6               	subwf	postinc1,w,c
 10101   00282E  50E6               	movf	postinc1,w,c
 10102   002830  0A80               	xorlw	128
 10103   002832  6E0A               	movwf	(??_fputc+4)^0,c
 10104   002834  50DE               	movf	postinc2,w,c
 10105   002836  0A80               	xorlw	128
 10106   002838  580A               	subwfb	(??_fputc+4)^0,w,c
 10107   00283A  B0D8               	btfsc	status,0,c
 10108   00283C  EF22  F014         	goto	u2701
 10109   002840  EF24  F014         	goto	u2700
 10110   002844                     u2701:
 10111   002844  EF44  F014         	goto	l1276
 10112   002848                     u2700:
 10113   002848                     l3364:
 10114   002848  5005               	movf	fputc@fp^0,w,c
 10115   00284A  6ED9               	movwf	fsr2l,c
 10116   00284C  6ADA               	clrf	fsr2h,c
 10117   00284E  0E02               	movlw	2
 10118   002850  26D9               	addwf	fsr2l,f,c
 10119   002852  CFDE F006          	movff	postinc2,??_fputc
 10120   002856  CFDD F007          	movff	postdec2,??_fputc+1
 10121   00285A  5005               	movf	fputc@fp^0,w,c
 10122   00285C  6ED9               	movwf	fsr2l,c
 10123   00285E  6ADA               	clrf	fsr2h,c
 10124   002860  CFDE F008          	movff	postinc2,??_fputc+2
 10125   002864  CFDD F009          	movff	postdec2,??_fputc+3
 10126   002868  5006               	movf	??_fputc^0,w,c
 10127   00286A  2408               	addwf	(??_fputc+2)^0,w,c
 10128   00286C  6ED9               	movwf	fsr2l,c
 10129   00286E  5007               	movf	(??_fputc+1)^0,w,c
 10130   002870  2009               	addwfc	(??_fputc+3)^0,w,c
 10131   002872  6EDA               	movwf	fsr2h,c
 10132   002874  C003  FFDF         	movff	fputc@c,indf2
 10133   002878  5005               	movf	fputc@fp^0,w,c
 10134   00287A  6ED9               	movwf	fsr2l,c
 10135   00287C  6ADA               	clrf	fsr2h,c
 10136   00287E  0E02               	movlw	2
 10137   002880  26D9               	addwf	fsr2l,f,c
 10138   002882  2ADE               	incf	postinc2,f,c
 10139   002884  0E00               	movlw	0
 10140   002886  22DD               	addwfc	postdec2,f,c
 10141   002888                     l1276:
 10142   002888  0012               	return		;funcret
 10143   00288A                     __end_of_fputc:
 10144                           	callstack 0
 10145                           
 10146 ;; *************** function _putch *****************
 10147 ;; Defined at:
 10148 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  c               1    wreg     unsigned char 
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;  c               1    0[COMRAM] unsigned char 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  1    wreg      void 
 10155 ;; Registers used:
 10156 ;;		wreg
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;Total ram usage:        0 bytes
 10167 ;; Hardware stack levels used: 1
 10168 ;; Hardware stack levels required when called: 1
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_fputc
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text45
 10177   0033F4                     __ptext45:
 10178                           	callstack 0
 10179   0033F4                     _putch:
 10180                           	callstack 19
 10181   0033F4  0012               	return		;funcret
 10182   0033F6                     __end_of_putch:
 10183                           	callstack 0
 10184                           
 10185 ;; *************** function _clear_diagnostic_codes *****************
 10186 ;; Defined at:
 10187 ;;		line 710 in file "OBCII_PIC18F46K22.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;		None
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;  opt_sel         2   12[COMRAM] int 
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  1    wreg      void 
 10194 ;; Registers used:
 10195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;Total ram usage:        4 bytes
 10206 ;; Hardware stack levels used: 1
 10207 ;; Hardware stack levels required when called: 5
 10208 ;; This function calls:
 10209 ;;		_LCD_clear
 10210 ;;		_LCD_configure_cursor_blink
 10211 ;;		_LCD_cursor_set
 10212 ;;		_LCD_write_string
 10213 ;;		_UART1_SendString
 10214 ;;		_clear_parsing_notif
 10215 ;;		_display_mm
 10216 ;;		_parsing_notif
 10217 ;;		_readADC
 10218 ;; This function is called by:
 10219 ;;		_main_menu
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text46
 10224   001478                     __ptext46:
 10225                           	callstack 0
 10226   001478                     _clear_diagnostic_codes:
 10227                           	callstack 24
 10228   001478                     
 10229                           ;OBCII_PIC18F46K22.c: 712:     int opt_sel = 0;
 10230   001478  0E00               	movlw	0
 10231   00147A  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
 10232   00147C  0E00               	movlw	0
 10233   00147E  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
 10234   001480                     
 10235                           ;OBCII_PIC18F46K22.c: 713:     LCD_clear();
 10236   001480  EC97  F019         	call	_LCD_clear	;wreg free
 10237   001484                     
 10238                           ;OBCII_PIC18F46K22.c: 714:     LCD_cursor_set(1,1);
 10239   001484  0E01               	movlw	1
 10240   001486  6E06               	movwf	LCD_cursor_set@column^0,c
 10241   001488  0E01               	movlw	1
 10242   00148A  ECDA  F017         	call	_LCD_cursor_set
 10243   00148E                     
 10244                           ;OBCII_PIC18F46K22.c: 715:     LCD_write_string("Clear Code(s)?");
 10245   00148E  0E3E               	movlw	low STR_43
 10246   001490  6E06               	movwf	LCD_write_string@string^0,c
 10247   001492  0EFF               	movlw	high STR_43
 10248   001494  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10249   001496  EC94  F016         	call	_LCD_write_string	;wreg free
 10250   00149A                     
 10251                           ;OBCII_PIC18F46K22.c: 716:     LCD_cursor_set(2,1);
 10252   00149A  0E01               	movlw	1
 10253   00149C  6E06               	movwf	LCD_cursor_set@column^0,c
 10254   00149E  0E02               	movlw	2
 10255   0014A0  ECDA  F017         	call	_LCD_cursor_set
 10256   0014A4                     
 10257                           ;OBCII_PIC18F46K22.c: 717:     LCD_write_string("Y/N <<<<<<<<<<<<");
 10258   0014A4  0EBB               	movlw	low STR_44
 10259   0014A6  6E06               	movwf	LCD_write_string@string^0,c
 10260   0014A8  0EFE               	movlw	high STR_44
 10261   0014AA  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10262   0014AC  EC94  F016         	call	_LCD_write_string	;wreg free
 10263   0014B0                     
 10264                           ;OBCII_PIC18F46K22.c: 718:     LCD_configure_cursor_blink(1);
 10265   0014B0  0E01               	movlw	1
 10266   0014B2  EC84  F019         	call	_LCD_configure_cursor_blink
 10267   0014B6                     l4676:
 10268                           
 10269                           ;OBCII_PIC18F46K22.c: 721:         result = readADC();
 10270   0014B6  EC23  F019         	call	_readADC	;wreg free
 10271   0014BA  C003  F05A         	movff	?_readADC,_result
 10272   0014BE  C004  F05B         	movff	?_readADC+1,_result+1
 10273   0014C2                     
 10274                           ;OBCII_PIC18F46K22.c: 722:         if(result >= 0 && result <= 511){
 10275   0014C2  0E02               	movlw	2
 10276   0014C4  5C5B               	subwf	(_result+1)^0,w,c
 10277   0014C6  B0D8               	btfsc	status,0,c
 10278   0014C8  EF68  F00A         	goto	u4881
 10279   0014CC  EF6A  F00A         	goto	u4880
 10280   0014D0                     u4881:
 10281   0014D0  EF73  F00A         	goto	l4684
 10282   0014D4                     u4880:
 10283   0014D4                     
 10284                           ;OBCII_PIC18F46K22.c: 723:             opt_sel = 0;
 10285   0014D4  0E00               	movlw	0
 10286   0014D6  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
 10287   0014D8  0E00               	movlw	0
 10288   0014DA  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
 10289   0014DC                     
 10290                           ;OBCII_PIC18F46K22.c: 724:             LCD_cursor_set(2,1);
 10291   0014DC  0E01               	movlw	1
 10292   0014DE  6E06               	movwf	LCD_cursor_set@column^0,c
 10293   0014E0  0E02               	movlw	2
 10294   0014E2  ECDA  F017         	call	_LCD_cursor_set
 10295   0014E6                     l4684:
 10296                           
 10297                           ;OBCII_PIC18F46K22.c: 727:         if(result >= 512 && result <=1023){
 10298   0014E6  0E02               	movlw	2
 10299   0014E8  5C5B               	subwf	(_result+1)^0,w,c
 10300   0014EA  A0D8               	btfss	status,0,c
 10301   0014EC  EF7A  F00A         	goto	u4891
 10302   0014F0  EF7C  F00A         	goto	u4890
 10303   0014F4                     u4891:
 10304   0014F4  EF8E  F00A         	goto	l4692
 10305   0014F8                     u4890:
 10306   0014F8  0E04               	movlw	4
 10307   0014FA  5C5B               	subwf	(_result+1)^0,w,c
 10308   0014FC  B0D8               	btfsc	status,0,c
 10309   0014FE  EF83  F00A         	goto	u4901
 10310   001502  EF85  F00A         	goto	u4900
 10311   001506                     u4901:
 10312   001506  EF8E  F00A         	goto	l4692
 10313   00150A                     u4900:
 10314   00150A                     
 10315                           ;OBCII_PIC18F46K22.c: 728:             opt_sel = 1;
 10316   00150A  0E00               	movlw	0
 10317   00150C  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
 10318   00150E  0E01               	movlw	1
 10319   001510  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
 10320   001512                     
 10321                           ;OBCII_PIC18F46K22.c: 729:             LCD_cursor_set(2,3);
 10322   001512  0E03               	movlw	3
 10323   001514  6E06               	movwf	LCD_cursor_set@column^0,c
 10324   001516  0E02               	movlw	2
 10325   001518  ECDA  F017         	call	_LCD_cursor_set
 10326   00151C                     l4692:
 10327                           
 10328                           ;OBCII_PIC18F46K22.c: 731:             if (PORTCbits.RC5 == 0) {
 10329   00151C  BA82               	btfsc	130,5,c	;volatile
 10330   00151E  EF93  F00A         	goto	u4911
 10331   001522  EF95  F00A         	goto	u4910
 10332   001526                     u4911:
 10333   001526  EFAD  F00A         	goto	l347
 10334   00152A                     u4910:
 10335   00152A                     
 10336                           ;OBCII_PIC18F46K22.c: 732:                 _delay((unsigned long)((20)*(16000000/4000.0)
      +                          ));
 10337   00152A  0E68               	movlw	104
 10338   00152C  6E0B               	movwf	??_clear_diagnostic_codes^0,c
 10339   00152E  0EE4               	movlw	228
 10340   001530                     u6807:
 10341   001530  2EE8               	decfsz	wreg,f,c
 10342   001532  D7FE               	bra	u6807
 10343   001534  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
 10344   001536  D7FC               	bra	u6807
 10345   001538  D000               	nop2	
 10346   00153A                     
 10347                           ;OBCII_PIC18F46K22.c: 733:                 if (PORTCbits.RC5 == 0) {
 10348   00153A  BA82               	btfsc	130,5,c	;volatile
 10349   00153C  EFA2  F00A         	goto	u4921
 10350   001540  EFA4  F00A         	goto	u4920
 10351   001544                     u4921:
 10352   001544  EFAD  F00A         	goto	l347
 10353   001548                     u4920:
 10354   001548                     
 10355                           ;OBCII_PIC18F46K22.c: 734:                     LCD_clear();
 10356   001548  EC97  F019         	call	_LCD_clear	;wreg free
 10357   00154C                     
 10358                           ;OBCII_PIC18F46K22.c: 735:                     display_mm();
 10359   00154C  EC57  F019         	call	_display_mm	;wreg free
 10360   001550                     
 10361                           ;OBCII_PIC18F46K22.c: 736:                     menu_sel = -1;
 10362   001550  0100               	movlb	0	; () banked
 10363   001552  69F3               	setf	_menu_sel& (0+255),b
 10364   001554  69F4               	setf	(_menu_sel+1)& (0+255),b
 10365                           
 10366                           ;OBCII_PIC18F46K22.c: 737:                     break;
 10367   001556  EF33  F00B         	goto	l361
 10368   00155A                     l347:
 10369                           
 10370                           ;OBCII_PIC18F46K22.c: 741:         if (PORTBbits.RB4 == 0) {
 10371   00155A  B881               	btfsc	129,4,c	;volatile
 10372   00155C  EFB2  F00A         	goto	u4931
 10373   001560  EFB4  F00A         	goto	u4930
 10374   001564                     u4931:
 10375   001564  EF5B  F00A         	goto	l4676
 10376   001568                     u4930:
 10377   001568                     
 10378                           ;OBCII_PIC18F46K22.c: 742:             _delay((unsigned long)((20)*(16000000/4000.0)));
 10379   001568  0E68               	movlw	104
 10380   00156A  6E0B               	movwf	??_clear_diagnostic_codes^0,c
 10381   00156C  0EE4               	movlw	228
 10382   00156E                     u6817:
 10383   00156E  2EE8               	decfsz	wreg,f,c
 10384   001570  D7FE               	bra	u6817
 10385   001572  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
 10386   001574  D7FC               	bra	u6817
 10387   001576  D000               	nop2	
 10388   001578                     
 10389                           ;OBCII_PIC18F46K22.c: 743:             if (PORTBbits.RB4 == 0) {
 10390   001578  B881               	btfsc	129,4,c	;volatile
 10391   00157A  EFC1  F00A         	goto	u4941
 10392   00157E  EFC3  F00A         	goto	u4940
 10393   001582                     u4941:
 10394   001582  EF5B  F00A         	goto	l4676
 10395   001586                     u4940:
 10396   001586  EF1D  F00B         	goto	l4742
 10397   00158A                     l4710:
 10398                           
 10399                           ;OBCII_PIC18F46K22.c: 747:                     UART1_SendString("04\r");
 10400   00158A  0EDE               	movlw	low STR_45
 10401   00158C  6E04               	movwf	UART1_SendString@string^0,c
 10402   00158E  0EFF               	movlw	high STR_45
 10403   001590  6E05               	movwf	(UART1_SendString@string+1)^0,c
 10404   001592  EC39  F018         	call	_UART1_SendString	;wreg free
 10405                           
 10406                           ;OBCII_PIC18F46K22.c: 748:                     while(!message_complete){
 10407   001596  EFCF  F00A         	goto	l4714
 10408   00159A                     l4712:
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;OBCII_PIC18F46K22.c: 750:                         parsing_notif();
 10412   00159A  ECA6  F019         	call	_parsing_notif	;wreg free
 10413   00159E                     l4714:
 10414                           
 10415                           ;OBCII_PIC18F46K22.c: 748:                     while(!message_complete){
 10416   00159E  0100               	movlb	0	; () banked
 10417   0015A0  51D0               	movf	_message_complete& (0+255),w,b	;volatile
 10418   0015A2  B4D8               	btfsc	status,2,c
 10419   0015A4  EFD6  F00A         	goto	u4951
 10420   0015A8  EFD8  F00A         	goto	u4950
 10421   0015AC                     u4951:
 10422   0015AC  EFCD  F00A         	goto	l4712
 10423   0015B0                     u4950:
 10424   0015B0                     
 10425                           ; BSR set to: 0
 10426                           ;OBCII_PIC18F46K22.c: 752:                     clear_parsing_notif();
 10427   0015B0  ECB2  F019         	call	_clear_parsing_notif	;wreg free
 10428   0015B4                     
 10429                           ;OBCII_PIC18F46K22.c: 754:                     LCD_clear();
 10430   0015B4  EC97  F019         	call	_LCD_clear	;wreg free
 10431   0015B8                     
 10432                           ;OBCII_PIC18F46K22.c: 755:                     LCD_cursor_set(1,1);
 10433   0015B8  0E01               	movlw	1
 10434   0015BA  6E06               	movwf	LCD_cursor_set@column^0,c
 10435   0015BC  0E01               	movlw	1
 10436   0015BE  ECDA  F017         	call	_LCD_cursor_set
 10437                           
 10438                           ;OBCII_PIC18F46K22.c: 756:                     LCD_write_string("Codes Cleared");
 10439   0015C2  0E69               	movlw	low STR_46
 10440   0015C4  6E06               	movwf	LCD_write_string@string^0,c
 10441   0015C6  0EFF               	movlw	high STR_46
 10442   0015C8  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10443   0015CA  EC94  F016         	call	_LCD_write_string	;wreg free
 10444   0015CE                     
 10445                           ;OBCII_PIC18F46K22.c: 757:                     LCD_cursor_set(2,1);
 10446   0015CE  0E01               	movlw	1
 10447   0015D0  6E06               	movwf	LCD_cursor_set@column^0,c
 10448   0015D2  0E02               	movlw	2
 10449   0015D4  ECDA  F017         	call	_LCD_cursor_set
 10450   0015D8                     
 10451                           ;OBCII_PIC18F46K22.c: 758:                     LCD_write_string("To Menu...");
 10452   0015D8  0E90               	movlw	low STR_47
 10453   0015DA  6E06               	movwf	LCD_write_string@string^0,c
 10454   0015DC  0EFF               	movlw	high STR_47
 10455   0015DE  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10456   0015E0  EC94  F016         	call	_LCD_write_string	;wreg free
 10457   0015E4                     l4726:
 10458                           
 10459                           ;OBCII_PIC18F46K22.c: 760:                     menu_sel = -1;
 10460   0015E4  0100               	movlb	0	; () banked
 10461   0015E6  69F3               	setf	_menu_sel& (0+255),b
 10462   0015E8  69F4               	setf	(_menu_sel+1)& (0+255),b
 10463   0015EA                     
 10464                           ; BSR set to: 0
 10465                           ;OBCII_PIC18F46K22.c: 761:                     _delay((unsigned long)((2000)*(16000000/4
      +                          000.0)));
 10466   0015EA  0E29               	movlw	41
 10467   0015EC  6E0C               	movwf	(??_clear_diagnostic_codes+1)^0,c
 10468   0015EE  0E96               	movlw	150
 10469   0015F0  6E0B               	movwf	??_clear_diagnostic_codes^0,c
 10470   0015F2  0E7F               	movlw	127
 10471   0015F4                     u6827:
 10472   0015F4  2EE8               	decfsz	wreg,f,c
 10473   0015F6  D7FE               	bra	u6827
 10474   0015F8  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
 10475   0015FA  D7FC               	bra	u6827
 10476   0015FC  2E0C               	decfsz	(??_clear_diagnostic_codes+1)^0,f,c
 10477   0015FE  D7FA               	bra	u6827
 10478   001600  0000               	nop	
 10479                           
 10480                           ;OBCII_PIC18F46K22.c: 763:                         break;
 10481   001602  EF33  F00B         	goto	l361
 10482   001606                     l4730:
 10483                           
 10484                           ;OBCII_PIC18F46K22.c: 767:                     LCD_clear();
 10485   001606  EC97  F019         	call	_LCD_clear	;wreg free
 10486                           
 10487                           ;OBCII_PIC18F46K22.c: 768:                     LCD_cursor_set(1,1);
 10488   00160A  0E01               	movlw	1
 10489   00160C  6E06               	movwf	LCD_cursor_set@column^0,c
 10490   00160E  0E01               	movlw	1
 10491   001610  ECDA  F017         	call	_LCD_cursor_set
 10492   001614                     
 10493                           ;OBCII_PIC18F46K22.c: 769:                     LCD_write_string("Nothing Cleared");
 10494   001614  0E0F               	movlw	low STR_48
 10495   001616  6E06               	movwf	LCD_write_string@string^0,c
 10496   001618  0EFF               	movlw	high STR_48
 10497   00161A  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10498   00161C  EC94  F016         	call	_LCD_write_string	;wreg free
 10499   001620                     
 10500                           ;OBCII_PIC18F46K22.c: 770:                     LCD_cursor_set(2,1);
 10501   001620  0E01               	movlw	1
 10502   001622  6E06               	movwf	LCD_cursor_set@column^0,c
 10503   001624  0E02               	movlw	2
 10504   001626  ECDA  F017         	call	_LCD_cursor_set
 10505                           
 10506                           ;OBCII_PIC18F46K22.c: 771:                     LCD_write_string("To Menu...");
 10507   00162A  0E90               	movlw	low STR_47
 10508   00162C  6E06               	movwf	LCD_write_string@string^0,c
 10509   00162E  0EFF               	movlw	high STR_47
 10510   001630  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10511   001632  EC94  F016         	call	_LCD_write_string	;wreg free
 10512   001636  EFF2  F00A         	goto	l4726
 10513   00163A                     l4742:
 10514   00163A  C00D  F00B         	movff	clear_diagnostic_codes@opt_sel,??_clear_diagnostic_codes
 10515   00163E  C00E  F00C         	movff	clear_diagnostic_codes@opt_sel+1,??_clear_diagnostic_codes+1
 10516                           
 10517                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10518                           ; Switch size 1, requested type "simple"
 10519                           ; Number of cases is 1, Range of values is 0 to 0
 10520                           ; switch strategies available:
 10521                           ; Name         Instructions Cycles
 10522                           ; simple_byte            4     3 (average)
 10523                           ;	Chosen strategy is simple_byte
 10524   001642  500C               	movf	(??_clear_diagnostic_codes+1)^0,w,c
 10525   001644  0A00               	xorlw	0	; case 0
 10526   001646  B4D8               	btfsc	status,2,c
 10527   001648  EF28  F00B         	goto	l5908
 10528   00164C  EF33  F00B         	goto	l361
 10529   001650                     l5908:
 10530                           
 10531                           ; Switch size 1, requested type "simple"
 10532                           ; Number of cases is 2, Range of values is 0 to 1
 10533                           ; switch strategies available:
 10534                           ; Name         Instructions Cycles
 10535                           ; simple_byte            7     4 (average)
 10536                           ;	Chosen strategy is simple_byte
 10537   001650  500B               	movf	??_clear_diagnostic_codes^0,w,c
 10538   001652  0A00               	xorlw	0	; case 0
 10539   001654  B4D8               	btfsc	status,2,c
 10540   001656  EFC5  F00A         	goto	l4710
 10541   00165A  0A01               	xorlw	1	; case 1
 10542   00165C  B4D8               	btfsc	status,2,c
 10543   00165E  EF03  F00B         	goto	l4730
 10544   001662  EF33  F00B         	goto	l361
 10545   001666                     l361:
 10546   001666  0012               	return		;funcret
 10547   001668                     __end_of_clear_diagnostic_codes:
 10548                           	callstack 0
 10549                           
 10550 ;; *************** function _readADC *****************
 10551 ;; Defined at:
 10552 ;;		line 289 in file "OBCII_PIC18F46K22.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;		None
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;		None
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  2    2[COMRAM] unsigned int 
 10559 ;; Registers used:
 10560 ;;		wreg, status,2, status,0
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10569 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10570 ;;Total ram usage:        4 bytes
 10571 ;; Hardware stack levels used: 1
 10572 ;; Hardware stack levels required when called: 1
 10573 ;; This function calls:
 10574 ;;		Nothing
 10575 ;; This function is called by:
 10576 ;;		_main_menu
 10577 ;;		_clear_diagnostic_codes
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text47
 10582   003246                     __ptext47:
 10583                           	callstack 0
 10584   003246                     _readADC:
 10585                           	callstack 28
 10586   003246                     
 10587                           ;OBCII_PIC18F46K22.c: 290:     ADCON0bits.GO = 1;
 10588   003246  82C2               	bsf	194,1,c	;volatile
 10589   003248                     l197:
 10590   003248  B2C2               	btfsc	194,1,c	;volatile
 10591   00324A  EF29  F019         	goto	u4311
 10592   00324E  EF2B  F019         	goto	u4310
 10593   003252                     u4311:
 10594   003252  EF24  F019         	goto	l197
 10595   003256                     u4310:
 10596   003256                     
 10597                           ;OBCII_PIC18F46K22.c: 292:     _delay((unsigned long)((10)*(16000000/4000.0)));
 10598   003256  0E34               	movlw	52
 10599   003258  6E05               	movwf	??_readADC^0,c
 10600   00325A  0EF2               	movlw	242
 10601   00325C                     u6837:
 10602   00325C  2EE8               	decfsz	wreg,f,c
 10603   00325E  D7FE               	bra	u6837
 10604   003260  2E05               	decfsz	??_readADC^0,f,c
 10605   003262  D7FC               	bra	u6837
 10606   003264                     
 10607                           ;OBCII_PIC18F46K22.c: 293:     return ((ADRESH << 8) | ADRESL);
 10608   003264  50C3               	movf	195,w,c	;volatile
 10609   003266  CFC4 F005          	movff	4036,??_readADC	;volatile
 10610   00326A  6A06               	clrf	(??_readADC+1)^0,c
 10611   00326C  C005  F006         	movff	??_readADC,??_readADC+1
 10612   003270  6A05               	clrf	??_readADC^0,c
 10613   003272  1005               	iorwf	??_readADC^0,w,c
 10614   003274  6E03               	movwf	?_readADC^0,c
 10615   003276  5006               	movf	(??_readADC+1)^0,w,c
 10616   003278  6E04               	movwf	(?_readADC+1)^0,c
 10617   00327A  0012               	return		;funcret
 10618   00327C                     __end_of_readADC:
 10619                           	callstack 0
 10620                           
 10621 ;; *************** function _parsing_notif *****************
 10622 ;; Defined at:
 10623 ;;		line 303 in file "OBCII_PIC18F46K22.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;		None
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;		None
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  1    wreg      void 
 10630 ;; Registers used:
 10631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;Total ram usage:        0 bytes
 10642 ;; Hardware stack levels used: 1
 10643 ;; Hardware stack levels required when called: 4
 10644 ;; This function calls:
 10645 ;;		_LCD_cursor_set
 10646 ;;		_LCD_write_string
 10647 ;; This function is called by:
 10648 ;;		_print_RPM
 10649 ;;		_print_Vbatt
 10650 ;;		_print_AI_Temp
 10651 ;;		_print_ELMVer
 10652 ;;		_print_SAEVer
 10653 ;;		_diagnostic_trouble_codes
 10654 ;;		_clear_diagnostic_codes
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           	psect	text48
 10659   00334C                     __ptext48:
 10660                           	callstack 0
 10661   00334C                     _parsing_notif:
 10662                           	callstack 23
 10663   00334C                     
 10664                           ;OBCII_PIC18F46K22.c: 304:     LCD_cursor_set(1,16);
 10665   00334C  0E10               	movlw	16
 10666   00334E  6E06               	movwf	LCD_cursor_set@column^0,c
 10667   003350  0E01               	movlw	1
 10668   003352  ECDA  F017         	call	_LCD_cursor_set
 10669   003356                     
 10670                           ;OBCII_PIC18F46K22.c: 305:     LCD_write_string("~");
 10671   003356  0EFC               	movlw	low STR_13
 10672   003358  6E06               	movwf	LCD_write_string@string^0,c
 10673   00335A  0EFF               	movlw	high STR_13
 10674   00335C  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10675   00335E  EC94  F016         	call	_LCD_write_string	;wreg free
 10676   003362  0012               	return		;funcret
 10677   003364                     __end_of_parsing_notif:
 10678                           	callstack 0
 10679                           
 10680 ;; *************** function _display_mm *****************
 10681 ;; Defined at:
 10682 ;;		line 296 in file "OBCII_PIC18F46K22.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;		None
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;		None
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  1    wreg      void 
 10689 ;; Registers used:
 10690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10700 ;;Total ram usage:        0 bytes
 10701 ;; Hardware stack levels used: 1
 10702 ;; Hardware stack levels required when called: 4
 10703 ;; This function calls:
 10704 ;;		_LCD_cursor_set
 10705 ;;		_LCD_write_string
 10706 ;; This function is called by:
 10707 ;;		_main_menu
 10708 ;;		_print_RPM
 10709 ;;		_print_Vbatt
 10710 ;;		_print_AI_Temp
 10711 ;;		_print_ELMVer
 10712 ;;		_print_SAEVer
 10713 ;;		_clear_diagnostic_codes
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text49
 10718   0032AE                     __ptext49:
 10719                           	callstack 0
 10720   0032AE                     _display_mm:
 10721                           	callstack 23
 10722   0032AE                     
 10723                           ;OBCII_PIC18F46K22.c: 297:     LCD_cursor_set(1,1);
 10724   0032AE  0E01               	movlw	1
 10725   0032B0  6E06               	movwf	LCD_cursor_set@column^0,c
 10726   0032B2  0E01               	movlw	1
 10727   0032B4  ECDA  F017         	call	_LCD_cursor_set
 10728   0032B8                     
 10729                           ;OBCII_PIC18F46K22.c: 298:     LCD_write_string("MENU  <OBDIIPIC>");
 10730   0032B8  0EDD               	movlw	low STR_11
 10731   0032BA  6E06               	movwf	LCD_write_string@string^0,c
 10732   0032BC  0EFE               	movlw	high STR_11
 10733   0032BE  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10734   0032C0  EC94  F016         	call	_LCD_write_string	;wreg free
 10735   0032C4                     
 10736                           ;OBCII_PIC18F46K22.c: 299:     LCD_cursor_set(2,1);
 10737   0032C4  0E01               	movlw	1
 10738   0032C6  6E06               	movwf	LCD_cursor_set@column^0,c
 10739   0032C8  0E02               	movlw	2
 10740   0032CA  ECDA  F017         	call	_LCD_cursor_set
 10741                           
 10742                           ;OBCII_PIC18F46K22.c: 300:     LCD_write_string("LRM DTC CDC DSI");
 10743   0032CE  0EFF               	movlw	low STR_12
 10744   0032D0  6E06               	movwf	LCD_write_string@string^0,c
 10745   0032D2  0EFE               	movlw	high STR_12
 10746   0032D4  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10747   0032D6  EC94  F016         	call	_LCD_write_string	;wreg free
 10748   0032DA  0012               	return		;funcret
 10749   0032DC                     __end_of_display_mm:
 10750                           	callstack 0
 10751                           
 10752 ;; *************** function _clear_parsing_notif *****************
 10753 ;; Defined at:
 10754 ;;		line 307 in file "OBCII_PIC18F46K22.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;		None
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;		None
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;Total ram usage:        0 bytes
 10773 ;; Hardware stack levels used: 1
 10774 ;; Hardware stack levels required when called: 4
 10775 ;; This function calls:
 10776 ;;		_LCD_cursor_set
 10777 ;;		_LCD_write_string
 10778 ;; This function is called by:
 10779 ;;		_print_RPM
 10780 ;;		_print_Vbatt
 10781 ;;		_print_AI_Temp
 10782 ;;		_print_ELMVer
 10783 ;;		_print_SAEVer
 10784 ;;		_diagnostic_trouble_codes
 10785 ;;		_clear_diagnostic_codes
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           	psect	text50
 10790   003364                     __ptext50:
 10791                           	callstack 0
 10792   003364                     _clear_parsing_notif:
 10793                           	callstack 23
 10794   003364                     
 10795                           ;OBCII_PIC18F46K22.c: 308:     LCD_cursor_set(1,16);
 10796   003364  0E10               	movlw	16
 10797   003366  6E06               	movwf	LCD_cursor_set@column^0,c
 10798   003368  0E01               	movlw	1
 10799   00336A  ECDA  F017         	call	_LCD_cursor_set
 10800   00336E                     
 10801                           ;OBCII_PIC18F46K22.c: 309:     LCD_write_string("^");
 10802   00336E  0EFA               	movlw	low STR_14
 10803   003370  6E06               	movwf	LCD_write_string@string^0,c
 10804   003372  0EFF               	movlw	high STR_14
 10805   003374  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10806   003376  EC94  F016         	call	_LCD_write_string	;wreg free
 10807   00337A  0012               	return		;funcret
 10808   00337C                     __end_of_clear_parsing_notif:
 10809                           	callstack 0
 10810                           
 10811 ;; *************** function _LCD_write_string *****************
 10812 ;; Defined at:
 10813 ;;		line 362 in file "LCD.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;  string          2    5[COMRAM] PTR unsigned char 
 10816 ;;		 -> STR_49(11), STR_48(16), STR_47(11), STR_46(14), 
 10817 ;;		 -> STR_44(17), STR_43(15), STR_42(14), STR_41(14), 
 10818 ;;		 -> dtc_codes(60), STR_36(11), STR_35(16), STR_33(14), 
 10819 ;;		 -> STR_32(13), STR_31(5), STR_29(4), STR_27(2), 
 10820 ;;		 -> STR_26(4), air_intake_string(16), STR_24(4), STR_22(4), 
 10821 ;;		 -> STR_21(6), STR_20(6), STR_18(4), STR_17(6), 
 10822 ;;		 -> rpm_string(16), STR_14(2), STR_13(2), STR_12(16), 
 10823 ;;		 -> STR_11(17), STR_9(17), STR_8(17), STR_6(17), 
 10824 ;;		 -> STR_3(15), STR_2(17), buffer(256), 
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;  i               1    9[COMRAM] unsigned char 
 10827 ;; Return value:  Size  Location     Type
 10828 ;;                  1    wreg      void 
 10829 ;; Registers used:
 10830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10831 ;; Tracked objects:
 10832 ;;		On entry : 0/0
 10833 ;;		On exit  : 0/0
 10834 ;;		Unchanged: 0/0
 10835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10839 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10840 ;;Total ram usage:        5 bytes
 10841 ;; Hardware stack levels used: 1
 10842 ;; Hardware stack levels required when called: 3
 10843 ;; This function calls:
 10844 ;;		_LCD_write_data
 10845 ;; This function is called by:
 10846 ;;		_welcome_splash
 10847 ;;		_display_mm
 10848 ;;		_parsing_notif
 10849 ;;		_clear_parsing_notif
 10850 ;;		_print_RPM
 10851 ;;		_print_Vbatt
 10852 ;;		_print_AI_Temp
 10853 ;;		_print_ELMVer
 10854 ;;		_print_SAEVer
 10855 ;;		_display_system_info
 10856 ;;		_diagnostic_trouble_codes
 10857 ;;		_clear_diagnostic_codes
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text51
 10862   002D28                     __ptext51:
 10863                           	callstack 0
 10864   002D28                     _LCD_write_string:
 10865                           	callstack 26
 10866   002D28                     
 10867                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
 10868   002D28  6A0A               	clrf	LCD_write_string@i^0,c
 10869   002D2A  EFB1  F016         	goto	l3944
 10870   002D2E                     l3940:
 10871                           
 10872                           ;LCD.c: 366:         LCD_write_data(string[i]);
 10873   002D2E  500A               	movf	LCD_write_string@i^0,w,c
 10874   002D30  2406               	addwf	LCD_write_string@string^0,w,c
 10875   002D32  6E08               	movwf	??_LCD_write_string^0,c
 10876   002D34  0E00               	movlw	0
 10877   002D36  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
 10878   002D38  6E09               	movwf	(??_LCD_write_string+1)^0,c
 10879   002D3A  C008  FFF6         	movff	??_LCD_write_string,tblptrl
 10880   002D3E  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
 10881   002D42  0E00               	movlw	low (__mediumconst shr (0+16))
 10882   002D44  6EF8               	movwf	tblptru,c
 10883   002D46  0E0F               	movlw	(high __ramtop+-1)
 10884   002D48  64F7               	cpfsgt	tblptrh,c
 10885   002D4A  D003               	bra	u3907
 10886   002D4C  0008               	tblrd		*
 10887   002D4E  50F5               	movf	tablat,w,c
 10888   002D50  D005               	bra	u3900
 10889   002D52                     u3907:
 10890   002D52  CFF6 FFE9          	movff	tblptrl,fsr0l
 10891   002D56  CFF7 FFEA          	movff	tblptrh,fsr0h
 10892   002D5A  50EF               	movf	indf0,w,c
 10893   002D5C                     u3900:
 10894   002D5C  EC9D  F00F         	call	_LCD_write_data
 10895   002D60                     
 10896                           ;LCD.c: 367:     }
 10897   002D60  2A0A               	incf	LCD_write_string@i^0,f,c
 10898   002D62                     l3944:
 10899   002D62  500A               	movf	LCD_write_string@i^0,w,c
 10900   002D64  2406               	addwf	LCD_write_string@string^0,w,c
 10901   002D66  6E08               	movwf	??_LCD_write_string^0,c
 10902   002D68  0E00               	movlw	0
 10903   002D6A  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
 10904   002D6C  6E09               	movwf	(??_LCD_write_string+1)^0,c
 10905   002D6E  C008  FFF6         	movff	??_LCD_write_string,tblptrl
 10906   002D72  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
 10907   002D76  0E00               	movlw	low (__mediumconst shr (0+16))
 10908   002D78  6EF8               	movwf	tblptru,c
 10909   002D7A  0E0F               	movlw	(high __ramtop+-1)
 10910   002D7C  64F7               	cpfsgt	tblptrh,c
 10911   002D7E  D003               	bra	u3917
 10912   002D80  0008               	tblrd		*
 10913   002D82  50F5               	movf	tablat,w,c
 10914   002D84  D005               	bra	u3910
 10915   002D86                     u3917:
 10916   002D86  CFF6 FFE9          	movff	tblptrl,fsr0l
 10917   002D8A  CFF7 FFEA          	movff	tblptrh,fsr0h
 10918   002D8E  50EF               	movf	indf0,w,c
 10919   002D90                     u3910:
 10920   002D90  0900               	iorlw	0
 10921   002D92  A4D8               	btfss	status,2,c
 10922   002D94  EFCE  F016         	goto	u3921
 10923   002D98  EFD0  F016         	goto	u3920
 10924   002D9C                     u3921:
 10925   002D9C  EF97  F016         	goto	l3940
 10926   002DA0                     u3920:
 10927   002DA0  0012               	return		;funcret
 10928   002DA2                     __end_of_LCD_write_string:
 10929                           	callstack 0
 10930                           
 10931 ;; *************** function _LCD_write_data *****************
 10932 ;; Defined at:
 10933 ;;		line 74 in file "LCD.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;  data            1    wreg     unsigned char 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  data            1    4[COMRAM] unsigned char 
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  1    wreg      void 
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10950 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10951 ;;Total ram usage:        3 bytes
 10952 ;; Hardware stack levels used: 1
 10953 ;; Hardware stack levels required when called: 2
 10954 ;; This function calls:
 10955 ;;		_LCD_pulse_clock
 10956 ;; This function is called by:
 10957 ;;		_LCD_write_string
 10958 ;;		_LCD_write_variable
 10959 ;;		_LCD_add_character
 10960 ;;		_LCD_write_char
 10961 ;;		_LCD_write_float
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           	psect	text52
 10966   001F3A                     __ptext52:
 10967                           	callstack 0
 10968   001F3A                     _LCD_write_data:
 10969                           	callstack 26
 10970                           
 10971                           ;incstack = 0
 10972                           ;LCD_write_data@data stored from wreg
 10973   001F3A  6E05               	movwf	LCD_write_data@data^0,c
 10974   001F3C                     
 10975                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
 10976   001F3C  848C               	bsf	140,2,c	;volatile
 10977   001F3E                     
 10978                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
 10979   001F3E  6A03               	clrf	??_LCD_write_data^0,c
 10980   001F40  AE05               	btfss	LCD_write_data@data^0,7,c
 10981   001F42  D001               	bra	u3525
 10982   001F44  2A03               	incf	??_LCD_write_data^0,f,c
 10983   001F46                     u3525:
 10984   001F46  0E01               	movlw	1
 10985   001F48  1603               	andwf	??_LCD_write_data^0,f,c
 10986   001F4A  3203               	rrcf	??_LCD_write_data^0,f,c
 10987   001F4C  3203               	rrcf	??_LCD_write_data^0,f,c
 10988   001F4E  508C               	movf	140,w,c	;volatile
 10989   001F50  1803               	xorwf	??_LCD_write_data^0,w,c
 10990   001F52  0B7F               	andlw	-129
 10991   001F54  1803               	xorwf	??_LCD_write_data^0,w,c
 10992   001F56  6E8C               	movwf	140,c	;volatile
 10993                           
 10994                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
 10995   001F58  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 10996   001F5C  0E06               	movlw	6
 10997   001F5E  6E04               	movwf	(??_LCD_write_data+1)^0,c
 10998   001F60                     u3535:
 10999   001F60  90D8               	bcf	status,0,c
 11000   001F62  3203               	rrcf	??_LCD_write_data^0,f,c
 11001   001F64  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
 11002   001F66  EFB0  F00F         	goto	u3535
 11003   001F6A  0E01               	movlw	1
 11004   001F6C  1603               	andwf	??_LCD_write_data^0,f,c
 11005   001F6E  3A03               	swapf	??_LCD_write_data^0,f,c
 11006   001F70  4603               	rlncf	??_LCD_write_data^0,f,c
 11007   001F72  4603               	rlncf	??_LCD_write_data^0,f,c
 11008   001F74  508C               	movf	140,w,c	;volatile
 11009   001F76  1803               	xorwf	??_LCD_write_data^0,w,c
 11010   001F78  0BBF               	andlw	-65
 11011   001F7A  1803               	xorwf	??_LCD_write_data^0,w,c
 11012   001F7C  6E8C               	movwf	140,c	;volatile
 11013                           
 11014                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
 11015   001F7E  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11016   001F82  0E05               	movlw	5
 11017   001F84  6E04               	movwf	(??_LCD_write_data+1)^0,c
 11018   001F86                     u3545:
 11019   001F86  90D8               	bcf	status,0,c
 11020   001F88  3203               	rrcf	??_LCD_write_data^0,f,c
 11021   001F8A  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
 11022   001F8C  EFC3  F00F         	goto	u3545
 11023   001F90  0E01               	movlw	1
 11024   001F92  1603               	andwf	??_LCD_write_data^0,f,c
 11025   001F94  3A03               	swapf	??_LCD_write_data^0,f,c
 11026   001F96  4603               	rlncf	??_LCD_write_data^0,f,c
 11027   001F98  508C               	movf	140,w,c	;volatile
 11028   001F9A  1803               	xorwf	??_LCD_write_data^0,w,c
 11029   001F9C  0BDF               	andlw	-33
 11030   001F9E  1803               	xorwf	??_LCD_write_data^0,w,c
 11031   001FA0  6E8C               	movwf	140,c	;volatile
 11032                           
 11033                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
 11034   001FA2  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11035   001FA6  3A03               	swapf	??_LCD_write_data^0,f,c
 11036   001FA8  0E0F               	movlw	15
 11037   001FAA  1603               	andwf	??_LCD_write_data^0,f,c
 11038   001FAC  0E01               	movlw	1
 11039   001FAE  1603               	andwf	??_LCD_write_data^0,f,c
 11040   001FB0  3A03               	swapf	??_LCD_write_data^0,f,c
 11041   001FB2  508C               	movf	140,w,c	;volatile
 11042   001FB4  1803               	xorwf	??_LCD_write_data^0,w,c
 11043   001FB6  0BEF               	andlw	-17
 11044   001FB8  1803               	xorwf	??_LCD_write_data^0,w,c
 11045   001FBA  6E8C               	movwf	140,c	;volatile
 11046   001FBC                     
 11047                           ;LCD.c: 85:     LCD_pulse_clock();
 11048   001FBC  ECE9  F019         	call	_LCD_pulse_clock	;wreg free
 11049   001FC0                     
 11050                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
 11051   001FC0  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11052   001FC4  90D8               	bcf	status,0,c
 11053   001FC6  3203               	rrcf	??_LCD_write_data^0,f,c
 11054   001FC8  90D8               	bcf	status,0,c
 11055   001FCA  3203               	rrcf	??_LCD_write_data^0,f,c
 11056   001FCC  90D8               	bcf	status,0,c
 11057   001FCE  3203               	rrcf	??_LCD_write_data^0,f,c
 11058   001FD0  0E01               	movlw	1
 11059   001FD2  1603               	andwf	??_LCD_write_data^0,f,c
 11060   001FD4  3203               	rrcf	??_LCD_write_data^0,f,c
 11061   001FD6  3203               	rrcf	??_LCD_write_data^0,f,c
 11062   001FD8  508C               	movf	140,w,c	;volatile
 11063   001FDA  1803               	xorwf	??_LCD_write_data^0,w,c
 11064   001FDC  0B7F               	andlw	-129
 11065   001FDE  1803               	xorwf	??_LCD_write_data^0,w,c
 11066   001FE0  6E8C               	movwf	140,c	;volatile
 11067   001FE2                     
 11068                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
 11069   001FE2  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11070   001FE6  90D8               	bcf	status,0,c
 11071   001FE8  3203               	rrcf	??_LCD_write_data^0,f,c
 11072   001FEA  90D8               	bcf	status,0,c
 11073   001FEC  3203               	rrcf	??_LCD_write_data^0,f,c
 11074   001FEE  0E01               	movlw	1
 11075   001FF0  1603               	andwf	??_LCD_write_data^0,f,c
 11076   001FF2  3A03               	swapf	??_LCD_write_data^0,f,c
 11077   001FF4  4603               	rlncf	??_LCD_write_data^0,f,c
 11078   001FF6  4603               	rlncf	??_LCD_write_data^0,f,c
 11079   001FF8  508C               	movf	140,w,c	;volatile
 11080   001FFA  1803               	xorwf	??_LCD_write_data^0,w,c
 11081   001FFC  0BBF               	andlw	-65
 11082   001FFE  1803               	xorwf	??_LCD_write_data^0,w,c
 11083   002000  6E8C               	movwf	140,c	;volatile
 11084   002002                     
 11085                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
 11086   002002  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11087   002006  90D8               	bcf	status,0,c
 11088   002008  3203               	rrcf	??_LCD_write_data^0,f,c
 11089   00200A  0E01               	movlw	1
 11090   00200C  1603               	andwf	??_LCD_write_data^0,f,c
 11091   00200E  3A03               	swapf	??_LCD_write_data^0,f,c
 11092   002010  4603               	rlncf	??_LCD_write_data^0,f,c
 11093   002012  508C               	movf	140,w,c	;volatile
 11094   002014  1803               	xorwf	??_LCD_write_data^0,w,c
 11095   002016  0BDF               	andlw	-33
 11096   002018  1803               	xorwf	??_LCD_write_data^0,w,c
 11097   00201A  6E8C               	movwf	140,c	;volatile
 11098   00201C                     
 11099                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
 11100   00201C  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11101   002020  0E01               	movlw	1
 11102   002022  1603               	andwf	??_LCD_write_data^0,f,c
 11103   002024  3A03               	swapf	??_LCD_write_data^0,f,c
 11104   002026  508C               	movf	140,w,c	;volatile
 11105   002028  1803               	xorwf	??_LCD_write_data^0,w,c
 11106   00202A  0BEF               	andlw	-17
 11107   00202C  1803               	xorwf	??_LCD_write_data^0,w,c
 11108   00202E  6E8C               	movwf	140,c	;volatile
 11109   002030                     
 11110                           ;LCD.c: 94:     LCD_pulse_clock();
 11111   002030  ECE9  F019         	call	_LCD_pulse_clock	;wreg free
 11112   002034  0012               	return		;funcret
 11113   002036                     __end_of_LCD_write_data:
 11114                           	callstack 0
 11115                           
 11116 ;; *************** function _LCD_cursor_set *****************
 11117 ;; Defined at:
 11118 ;;		line 159 in file "LCD.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  row             1    wreg     unsigned char 
 11121 ;;  column          1    5[COMRAM] unsigned char 
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  row             1    6[COMRAM] unsigned char 
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  1    wreg      void 
 11126 ;; Registers used:
 11127 ;;		wreg, status,2, status,0, cstack
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11133 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;Total ram usage:        2 bytes
 11138 ;; Hardware stack levels used: 1
 11139 ;; Hardware stack levels required when called: 3
 11140 ;; This function calls:
 11141 ;;		_LCD_write_command
 11142 ;; This function is called by:
 11143 ;;		_welcome_splash
 11144 ;;		_display_mm
 11145 ;;		_parsing_notif
 11146 ;;		_clear_parsing_notif
 11147 ;;		_main_menu
 11148 ;;		_print_RPM
 11149 ;;		_print_Vbatt
 11150 ;;		_print_AI_Temp
 11151 ;;		_print_ELMVer
 11152 ;;		_print_SAEVer
 11153 ;;		_display_system_info
 11154 ;;		_diagnostic_trouble_codes
 11155 ;;		_clear_diagnostic_codes
 11156 ;;		_LCD_add_character
 11157 ;; This function uses a non-reentrant model
 11158 ;;
 11159                           
 11160                           	psect	text53
 11161   002FB4                     __ptext53:
 11162                           	callstack 0
 11163   002FB4                     _LCD_cursor_set:
 11164                           	callstack 26
 11165                           
 11166                           ;incstack = 0
 11167                           ;LCD_cursor_set@row stored from wreg
 11168   002FB4  6E07               	movwf	LCD_cursor_set@row^0,c
 11169   002FB6                     
 11170                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
 11171   002FB6  0407               	decf	LCD_cursor_set@row^0,w,c
 11172   002FB8  A4D8               	btfss	status,2,c
 11173   002FBA  EFE1  F017         	goto	u3861
 11174   002FBE  EFE3  F017         	goto	u3860
 11175   002FC2                     u3861:
 11176   002FC2  EFE5  F017         	goto	l390
 11177   002FC6                     u3860:
 11178   002FC6  0E7F               	movlw	127
 11179   002FC8  2606               	addwf	LCD_cursor_set@column^0,f,c
 11180   002FCA                     l390:
 11181                           
 11182                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
 11183   002FCA  0E02               	movlw	2
 11184   002FCC  1807               	xorwf	LCD_cursor_set@row^0,w,c
 11185   002FCE  A4D8               	btfss	status,2,c
 11186   002FD0  EFEC  F017         	goto	u3871
 11187   002FD4  EFEE  F017         	goto	u3870
 11188   002FD8                     u3871:
 11189   002FD8  EFF0  F017         	goto	l391
 11190   002FDC                     u3870:
 11191   002FDC  0EBF               	movlw	191
 11192   002FDE  2606               	addwf	LCD_cursor_set@column^0,f,c
 11193   002FE0                     l391:
 11194                           
 11195                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
 11196   002FE0  0E03               	movlw	3
 11197   002FE2  1807               	xorwf	LCD_cursor_set@row^0,w,c
 11198   002FE4  A4D8               	btfss	status,2,c
 11199   002FE6  EFF7  F017         	goto	u3881
 11200   002FEA  EFF9  F017         	goto	u3880
 11201   002FEE                     u3881:
 11202   002FEE  EFFB  F017         	goto	l392
 11203   002FF2                     u3880:
 11204   002FF2  0E93               	movlw	147
 11205   002FF4  2606               	addwf	LCD_cursor_set@column^0,f,c
 11206   002FF6                     l392:
 11207                           
 11208                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
 11209   002FF6  0E04               	movlw	4
 11210   002FF8  1807               	xorwf	LCD_cursor_set@row^0,w,c
 11211   002FFA  A4D8               	btfss	status,2,c
 11212   002FFC  EF02  F018         	goto	u3891
 11213   003000  EF04  F018         	goto	u3890
 11214   003004                     u3891:
 11215   003004  EF06  F018         	goto	l3936
 11216   003008                     u3890:
 11217   003008  0ED3               	movlw	211
 11218   00300A  2606               	addwf	LCD_cursor_set@column^0,f,c
 11219   00300C                     l3936:
 11220                           
 11221                           ;LCD.c: 168:    LCD_write_command(column);
 11222   00300C  5006               	movf	LCD_cursor_set@column^0,w,c
 11223   00300E  EC1B  F010         	call	_LCD_write_command
 11224   003012  0012               	return		;funcret
 11225   003014                     __end_of_LCD_cursor_set:
 11226                           	callstack 0
 11227                           
 11228 ;; *************** function _UART1_SendString *****************
 11229 ;; Defined at:
 11230 ;;		line 181 in file "OBCII_PIC18F46K22.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;  string          2    3[COMRAM] PTR unsigned char 
 11233 ;;		 -> STR_45(4), STR_37(4), STR_30(6), STR_28(5), 
 11234 ;;		 -> STR_23(6), STR_19(6), STR_15(6), STR_10(6), 
 11235 ;;		 -> STR_7(5), STR_5(5), STR_4(6), STR_1(6), 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;  i               2    7[COMRAM] unsigned int 
 11238 ;; Return value:  Size  Location     Type
 11239 ;;                  1    wreg      void 
 11240 ;; Registers used:
 11241 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11242 ;; Tracked objects:
 11243 ;;		On entry : 0/0
 11244 ;;		On exit  : 0/0
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11250 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11251 ;;Total ram usage:        6 bytes
 11252 ;; Hardware stack levels used: 1
 11253 ;; Hardware stack levels required when called: 2
 11254 ;; This function calls:
 11255 ;;		_UART1_SendChar
 11256 ;; This function is called by:
 11257 ;;		_main
 11258 ;;		_welcome_splash
 11259 ;;		_print_RPM
 11260 ;;		_print_Vbatt
 11261 ;;		_print_AI_Temp
 11262 ;;		_print_ELMVer
 11263 ;;		_print_SAEVer
 11264 ;;		_diagnostic_trouble_codes
 11265 ;;		_clear_diagnostic_codes
 11266 ;; This function uses a non-reentrant model
 11267 ;;
 11268                           
 11269                           	psect	text54
 11270   003072                     __ptext54:
 11271                           	callstack 0
 11272   003072                     _UART1_SendString:
 11273                           	callstack 27
 11274   003072                     
 11275                           ;OBCII_PIC18F46K22.c: 182:     for (unsigned int i = 0; string[i] != '\0'; i++){
 11276   003072  0E00               	movlw	0
 11277   003074  6E09               	movwf	(UART1_SendString@i+1)^0,c
 11278   003076  0E00               	movlw	0
 11279   003078  6E08               	movwf	UART1_SendString@i^0,c
 11280   00307A  EF4F  F018         	goto	l4066
 11281   00307E                     l4062:
 11282                           
 11283                           ;OBCII_PIC18F46K22.c: 183:         UART1_SendChar(string[i]);
 11284   00307E  5008               	movf	UART1_SendString@i^0,w,c
 11285   003080  2404               	addwf	UART1_SendString@string^0,w,c
 11286   003082  6E06               	movwf	??_UART1_SendString^0,c
 11287   003084  5009               	movf	(UART1_SendString@i+1)^0,w,c
 11288   003086  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
 11289   003088  6E07               	movwf	(??_UART1_SendString+1)^0,c
 11290   00308A  C006  FFF6         	movff	??_UART1_SendString,tblptrl
 11291   00308E  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
 11292   003092                     	if	0	;tblptru may be non-zero
 11293   003092                     	endif
 11294   003092                     	if	0	;tblptru may be non-zero
 11295   003092                     	endif
 11296   003092  0008               	tblrd		*
 11297   003094  50F5               	movf	tablat,w,c
 11298   003096  ECBE  F019         	call	_UART1_SendChar
 11299   00309A                     
 11300                           ;OBCII_PIC18F46K22.c: 184:     }
 11301   00309A  4A08               	infsnz	UART1_SendString@i^0,f,c
 11302   00309C  2A09               	incf	(UART1_SendString@i+1)^0,f,c
 11303   00309E                     l4066:
 11304   00309E  5008               	movf	UART1_SendString@i^0,w,c
 11305   0030A0  2404               	addwf	UART1_SendString@string^0,w,c
 11306   0030A2  6E06               	movwf	??_UART1_SendString^0,c
 11307   0030A4  5009               	movf	(UART1_SendString@i+1)^0,w,c
 11308   0030A6  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
 11309   0030A8  6E07               	movwf	(??_UART1_SendString+1)^0,c
 11310   0030AA  C006  FFF6         	movff	??_UART1_SendString,tblptrl
 11311   0030AE  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
 11312   0030B2                     	if	0	;tblptru may be non-zero
 11313   0030B2                     	endif
 11314   0030B2                     	if	0	;tblptru may be non-zero
 11315   0030B2                     	endif
 11316   0030B2  0008               	tblrd		*
 11317   0030B4  50F5               	movf	tablat,w,c
 11318   0030B6  0900               	iorlw	0
 11319   0030B8  A4D8               	btfss	status,2,c
 11320   0030BA  EF61  F018         	goto	u4121
 11321   0030BE  EF63  F018         	goto	u4120
 11322   0030C2                     u4121:
 11323   0030C2  EF3F  F018         	goto	l4062
 11324   0030C6                     u4120:
 11325   0030C6  0012               	return		;funcret
 11326   0030C8                     __end_of_UART1_SendString:
 11327                           	callstack 0
 11328                           
 11329 ;; *************** function _UART1_SendChar *****************
 11330 ;; Defined at:
 11331 ;;		line 187 in file "OBCII_PIC18F46K22.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;  c               1    wreg     unsigned char 
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;  c               1    2[COMRAM] unsigned char 
 11336 ;; Return value:  Size  Location     Type
 11337 ;;                  1    wreg      void 
 11338 ;; Registers used:
 11339 ;;		wreg
 11340 ;; Tracked objects:
 11341 ;;		On entry : 0/0
 11342 ;;		On exit  : 0/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11349 ;;Total ram usage:        1 bytes
 11350 ;; Hardware stack levels used: 1
 11351 ;; Hardware stack levels required when called: 1
 11352 ;; This function calls:
 11353 ;;		Nothing
 11354 ;; This function is called by:
 11355 ;;		_UART1_SendString
 11356 ;; This function uses a non-reentrant model
 11357 ;;
 11358                           
 11359                           	psect	text55
 11360   00337C                     __ptext55:
 11361                           	callstack 0
 11362   00337C                     _UART1_SendChar:
 11363                           	callstack 27
 11364                           
 11365                           ;incstack = 0
 11366                           ;UART1_SendChar@c stored from wreg
 11367   00337C  6E03               	movwf	UART1_SendChar@c^0,c
 11368   00337E                     l173:
 11369   00337E  A2AC               	btfss	172,1,c	;volatile
 11370   003380  EFC4  F019         	goto	u3851
 11371   003384  EFC6  F019         	goto	u3850
 11372   003388                     u3851:
 11373   003388  EFBF  F019         	goto	l173
 11374   00338C                     u3850:
 11375   00338C                     
 11376                           ;OBCII_PIC18F46K22.c: 189:         TXREG = c;
 11377   00338C  C003  FFAD         	movff	UART1_SendChar@c,4013	;volatile
 11378   003390  0012               	return		;funcret
 11379   003392                     __end_of_UART1_SendChar:
 11380                           	callstack 0
 11381                           
 11382 ;; *************** function _LCD_configure_cursor_blink *****************
 11383 ;; Defined at:
 11384 ;;		line 231 in file "LCD.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;  state           1    wreg     unsigned char 
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;  state           1    5[COMRAM] unsigned char 
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      void 
 11391 ;; Registers used:
 11392 ;;		wreg, status,2, status,0, cstack
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11402 ;;Total ram usage:        1 bytes
 11403 ;; Hardware stack levels used: 1
 11404 ;; Hardware stack levels required when called: 3
 11405 ;; This function calls:
 11406 ;;		_LCD_write_command
 11407 ;; This function is called by:
 11408 ;;		_main_menu
 11409 ;;		_clear_diagnostic_codes
 11410 ;; This function uses a non-reentrant model
 11411 ;;
 11412                           
 11413                           	psect	text56
 11414   003308                     __ptext56:
 11415                           	callstack 0
 11416   003308                     _LCD_configure_cursor_blink:
 11417                           	callstack 25
 11418                           
 11419                           ;incstack = 0
 11420                           ;LCD_configure_cursor_blink@state stored from wreg
 11421   003308  6E06               	movwf	LCD_configure_cursor_blink@state^0,c
 11422   00330A                     
 11423                           ;LCD.c: 234:     if(state){
 11424   00330A  5006               	movf	LCD_configure_cursor_blink@state^0,w,c
 11425   00330C  B4D8               	btfsc	status,2,c
 11426   00330E  EF8B  F019         	goto	u4321
 11427   003312  EF8D  F019         	goto	u4320
 11428   003316                     u4321:
 11429   003316  EF91  F019         	goto	l4200
 11430   00331A                     u4320:
 11431   00331A                     
 11432                           ;LCD.c: 235:         LCD_display_control |= 0b00000001;
 11433   00331A  0100               	movlb	0	; () banked
 11434   00331C  81F6               	bsf	_LCD_display_control& (0+255),0,b
 11435                           
 11436                           ;LCD.c: 236:     }
 11437   00331E  EF93  F019         	goto	l4202
 11438   003322                     l4200:
 11439                           
 11440                           ;LCD.c: 238:         LCD_display_control &= 0b11111110;
 11441   003322  0100               	movlb	0	; () banked
 11442   003324  91F6               	bcf	_LCD_display_control& (0+255),0,b
 11443   003326                     l4202:
 11444                           
 11445                           ; BSR set to: 0
 11446                           ;LCD.c: 242:     LCD_write_command(LCD_display_control);
 11447   003326  51F6               	movf	_LCD_display_control& (0+255),w,b
 11448   003328  EC1B  F010         	call	_LCD_write_command
 11449   00332C  0012               	return		;funcret
 11450   00332E                     __end_of_LCD_configure_cursor_blink:
 11451                           	callstack 0
 11452                           
 11453 ;; *************** function _input_init *****************
 11454 ;; Defined at:
 11455 ;;		line 97 in file "OBCII_PIC18F46K22.c"
 11456 ;; Parameters:    Size  Location     Type
 11457 ;;		None
 11458 ;; Auto vars:     Size  Location     Type
 11459 ;;		None
 11460 ;; Return value:  Size  Location     Type
 11461 ;;                  1    wreg      void 
 11462 ;; Registers used:
 11463 ;;		None
 11464 ;; Tracked objects:
 11465 ;;		On entry : 0/0
 11466 ;;		On exit  : 0/0
 11467 ;;		Unchanged: 0/0
 11468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;Total ram usage:        0 bytes
 11474 ;; Hardware stack levels used: 1
 11475 ;; Hardware stack levels required when called: 1
 11476 ;; This function calls:
 11477 ;;		Nothing
 11478 ;; This function is called by:
 11479 ;;		_main
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           	psect	text57
 11484   0033B4                     __ptext57:
 11485                           	callstack 0
 11486   0033B4                     _input_init:
 11487                           	callstack 29
 11488   0033B4                     
 11489                           ;OBCII_PIC18F46K22.c: 100:     TRISBbits.TRISB4 = 1;
 11490   0033B4  8893               	bsf	147,4,c	;volatile
 11491                           
 11492                           ;OBCII_PIC18F46K22.c: 101:     ANSELBbits.ANSB4 = 0;
 11493   0033B6  010F               	movlb	15	; () banked
 11494   0033B8  9939               	bcf	57,4,b	;volatile
 11495                           
 11496                           ;OBCII_PIC18F46K22.c: 103:     TRISCbits.TRISC5 = 1;
 11497   0033BA  8A94               	bsf	148,5,c	;volatile
 11498                           
 11499                           ;OBCII_PIC18F46K22.c: 104:     ANSELCbits.ANSC5 = 0;
 11500   0033BC  9B3A               	bcf	58,5,b	;volatile
 11501                           
 11502                           ;OBCII_PIC18F46K22.c: 106:     TRISAbits.TRISA0 = 1;
 11503   0033BE  8092               	bsf	146,0,c	;volatile
 11504                           
 11505                           ;OBCII_PIC18F46K22.c: 107:     ANSELAbits.ANSA0 = 1;
 11506   0033C0  8138               	bsf	56,0,b	;volatile
 11507   0033C2                     
 11508                           ; BSR set to: 15
 11509   0033C2  0012               	return		;funcret
 11510   0033C4                     __end_of_input_init:
 11511                           	callstack 0
 11512                           
 11513 ;; *************** function _UART1_Init *****************
 11514 ;; Defined at:
 11515 ;;		line 119 in file "OBCII_PIC18F46K22.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;		None
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;		None
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      void 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;Total ram usage:        0 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 1
 11536 ;; This function calls:
 11537 ;;		Nothing
 11538 ;; This function is called by:
 11539 ;;		_main
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text58
 11544   0032DC                     __ptext58:
 11545                           	callstack 0
 11546   0032DC                     _UART1_Init:
 11547                           	callstack 29
 11548   0032DC                     
 11549                           ;OBCII_PIC18F46K22.c: 120:     ANSELC = 0;
 11550   0032DC  010F               	movlb	15	; () banked
 11551   0032DE  6B3A               	clrf	58,b	;volatile
 11552                           
 11553                           ;OBCII_PIC18F46K22.c: 123:     TRISCbits.TRISC6 = 0;
 11554   0032E0  9C94               	bcf	148,6,c	;volatile
 11555                           
 11556                           ;OBCII_PIC18F46K22.c: 124:     TRISCbits.TRISC7 = 1;
 11557   0032E2  8E94               	bsf	148,7,c	;volatile
 11558                           
 11559                           ;OBCII_PIC18F46K22.c: 128:     TXSTA1bits.TXEN = 1;
 11560   0032E4  8AAC               	bsf	172,5,c	;volatile
 11561                           
 11562                           ;OBCII_PIC18F46K22.c: 129:     TXSTA1bits.TX9 = 0;
 11563   0032E6  9CAC               	bcf	172,6,c	;volatile
 11564                           
 11565                           ;OBCII_PIC18F46K22.c: 130:     TXSTA1bits.SYNC = 0;
 11566   0032E8  98AC               	bcf	172,4,c	;volatile
 11567                           
 11568                           ;OBCII_PIC18F46K22.c: 133:     TXSTA1bits.BRGH = 1;
 11569   0032EA  84AC               	bsf	172,2,c	;volatile
 11570                           
 11571                           ;OBCII_PIC18F46K22.c: 134:     BAUDCON1bits.BRG16 = 1;
 11572   0032EC  86B8               	bsf	184,3,c	;volatile
 11573   0032EE                     
 11574                           ; BSR set to: 15
 11575                           ;OBCII_PIC18F46K22.c: 137:     SPBRGH1 = 0b00000001;
 11576   0032EE  0E01               	movlw	1
 11577   0032F0  6EB0               	movwf	176,c	;volatile
 11578                           
 11579                           ;OBCII_PIC18F46K22.c: 138:     SPBRG1 = 0b10100000;
 11580   0032F2  0EA0               	movlw	160
 11581   0032F4  6EAF               	movwf	175,c	;volatile
 11582   0032F6                     
 11583                           ; BSR set to: 15
 11584                           ;OBCII_PIC18F46K22.c: 141:     BAUDCON1bits.CKTXP = 0;
 11585   0032F6  98B8               	bcf	184,4,c	;volatile
 11586   0032F8                     
 11587                           ; BSR set to: 15
 11588                           ;OBCII_PIC18F46K22.c: 142:     BAUDCON1bits.DTRXP = 0;
 11589   0032F8  9AB8               	bcf	184,5,c	;volatile
 11590   0032FA                     
 11591                           ; BSR set to: 15
 11592                           ;OBCII_PIC18F46K22.c: 145:     RCSTA1bits.SPEN = 1;
 11593   0032FA  8EAB               	bsf	171,7,c	;volatile
 11594   0032FC                     
 11595                           ; BSR set to: 15
 11596                           ;OBCII_PIC18F46K22.c: 146:     RCSTA1bits.CREN = 1;
 11597   0032FC  88AB               	bsf	171,4,c	;volatile
 11598   0032FE                     
 11599                           ; BSR set to: 15
 11600                           ;OBCII_PIC18F46K22.c: 147:     RCSTA1bits.RX9 = 0;
 11601   0032FE  9CAB               	bcf	171,6,c	;volatile
 11602   003300                     
 11603                           ; BSR set to: 15
 11604                           ;OBCII_PIC18F46K22.c: 150:     PIE1bits.RC1IE = 1;
 11605   003300  8A9D               	bsf	157,5,c	;volatile
 11606   003302                     
 11607                           ; BSR set to: 15
 11608                           ;OBCII_PIC18F46K22.c: 151:     INTCONbits.PEIE = 1;
 11609   003302  8CF2               	bsf	242,6,c	;volatile
 11610   003304                     
 11611                           ; BSR set to: 15
 11612                           ;OBCII_PIC18F46K22.c: 152:     INTCONbits.GIE = 1;
 11613   003304  8EF2               	bsf	242,7,c	;volatile
 11614   003306                     
 11615                           ; BSR set to: 15
 11616   003306  0012               	return		;funcret
 11617   003308                     __end_of_UART1_Init:
 11618                           	callstack 0
 11619                           
 11620 ;; *************** function _LCD_init *****************
 11621 ;; Defined at:
 11622 ;;		line 106 in file "LCD.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;		None
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  1    wreg      void 
 11629 ;; Registers used:
 11630 ;;		wreg, status,2, status,0, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11640 ;;Total ram usage:        2 bytes
 11641 ;; Hardware stack levels used: 1
 11642 ;; Hardware stack levels required when called: 4
 11643 ;; This function calls:
 11644 ;;		_LCD_clear
 11645 ;;		_LCD_pulse_clock
 11646 ;;		_LCD_write_command
 11647 ;; This function is called by:
 11648 ;;		_main
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text59
 11653   002C2A                     __ptext59:
 11654                           	callstack 0
 11655   002C2A                     _LCD_init:
 11656                           	callstack 26
 11657   002C2A                     
 11658                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
 11659   002C2A  9495               	bcf	149,2,c	;volatile
 11660   002C2C  948C               	bcf	140,2,c	;volatile
 11661                           
 11662                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
 11663   002C2E  9695               	bcf	149,3,c	;volatile
 11664   002C30  968C               	bcf	140,3,c	;volatile
 11665                           
 11666                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
 11667   002C32  9895               	bcf	149,4,c	;volatile
 11668   002C34  988C               	bcf	140,4,c	;volatile
 11669                           
 11670                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
 11671   002C36  9A95               	bcf	149,5,c	;volatile
 11672   002C38  9A8C               	bcf	140,5,c	;volatile
 11673                           
 11674                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
 11675   002C3A  9C95               	bcf	149,6,c	;volatile
 11676   002C3C  9C8C               	bcf	140,6,c	;volatile
 11677                           
 11678                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
 11679   002C3E  9E95               	bcf	149,7,c	;volatile
 11680   002C40  9E8C               	bcf	140,7,c	;volatile
 11681   002C42                     
 11682                           ;LCD.c: 121:     _delay((unsigned long)((60)*(16000000/4000.0)));
 11683   002C42  0E02               	movlw	2
 11684   002C44  6E08               	movwf	(??_LCD_init+1)^0,c
 11685   002C46  0E38               	movlw	56
 11686   002C48  6E07               	movwf	??_LCD_init^0,c
 11687   002C4A  0EAD               	movlw	173
 11688   002C4C                     u6847:
 11689   002C4C  2EE8               	decfsz	wreg,f,c
 11690   002C4E  D7FE               	bra	u6847
 11691   002C50  2E07               	decfsz	??_LCD_init^0,f,c
 11692   002C52  D7FC               	bra	u6847
 11693   002C54  2E08               	decfsz	(??_LCD_init+1)^0,f,c
 11694   002C56  D7FA               	bra	u6847
 11695   002C58  0000               	nop	
 11696   002C5A                     
 11697                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
 11698   002C5A  9E8C               	bcf	140,7,c	;volatile
 11699   002C5C  9C8C               	bcf	140,6,c	;volatile
 11700   002C5E  8A8C               	bsf	140,5,c	;volatile
 11701   002C60  888C               	bsf	140,4,c	;volatile
 11702   002C62                     
 11703                           ;LCD.c: 127:     LCD_pulse_clock();
 11704   002C62  ECE9  F019         	call	_LCD_pulse_clock	;wreg free
 11705   002C66                     
 11706                           ;LCD.c: 130:     _delay((unsigned long)((6)*(16000000/4000.0)));
 11707   002C66  0E20               	movlw	32
 11708   002C68  6E07               	movwf	??_LCD_init^0,c
 11709   002C6A  0E2A               	movlw	42
 11710   002C6C                     u6857:
 11711   002C6C  2EE8               	decfsz	wreg,f,c
 11712   002C6E  D7FE               	bra	u6857
 11713   002C70  2E07               	decfsz	??_LCD_init^0,f,c
 11714   002C72  D7FC               	bra	u6857
 11715                           
 11716                           ;LCD.c: 133:     LCD_pulse_clock();
 11717   002C74  ECE9  F019         	call	_LCD_pulse_clock	;wreg free
 11718   002C78                     
 11719                           ;LCD.c: 136:     _delay((unsigned long)((150)*(16000000/4000000.0)));
 11720   002C78  0EC8               	movlw	200
 11721   002C7A                     u6867:
 11722   002C7A  2EE8               	decfsz	wreg,f,c
 11723   002C7C  D7FE               	bra	u6867
 11724   002C7E                     
 11725                           ;LCD.c: 139:     LCD_pulse_clock();
 11726   002C7E  ECE9  F019         	call	_LCD_pulse_clock	;wreg free
 11727   002C82                     
 11728                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
 11729   002C82  9E8C               	bcf	140,7,c	;volatile
 11730   002C84  9C8C               	bcf	140,6,c	;volatile
 11731   002C86  8A8C               	bsf	140,5,c	;volatile
 11732   002C88  988C               	bcf	140,4,c	;volatile
 11733   002C8A                     
 11734                           ;LCD.c: 145:     LCD_pulse_clock();
 11735   002C8A  ECE9  F019         	call	_LCD_pulse_clock	;wreg free
 11736   002C8E                     
 11737                           ;LCD.c: 148:     LCD_write_command(0x28);
 11738   002C8E  0E28               	movlw	40
 11739   002C90  EC1B  F010         	call	_LCD_write_command
 11740   002C94                     
 11741                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
 11742   002C94  0100               	movlb	0	; () banked
 11743   002C96  51F6               	movf	_LCD_display_control& (0+255),w,b
 11744   002C98  EC1B  F010         	call	_LCD_write_command
 11745   002C9C                     
 11746                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
 11747   002C9C  0100               	movlb	0	; () banked
 11748   002C9E  51F5               	movf	_LCD_entry_mode& (0+255),w,b
 11749   002CA0  EC1B  F010         	call	_LCD_write_command
 11750   002CA4                     
 11751                           ;LCD.c: 151:     LCD_clear();
 11752   002CA4  EC97  F019         	call	_LCD_clear	;wreg free
 11753   002CA8  0012               	return		;funcret
 11754   002CAA                     __end_of_LCD_init:
 11755                           	callstack 0
 11756                           
 11757 ;; *************** function _LCD_clear *****************
 11758 ;; Defined at:
 11759 ;;		line 248 in file "LCD.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;		None
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      void 
 11766 ;; Registers used:
 11767 ;;		wreg, status,2, status,0, cstack
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;Total ram usage:        1 bytes
 11778 ;; Hardware stack levels used: 1
 11779 ;; Hardware stack levels required when called: 3
 11780 ;; This function calls:
 11781 ;;		_LCD_write_command
 11782 ;; This function is called by:
 11783 ;;		_main
 11784 ;;		_welcome_splash
 11785 ;;		_main_menu
 11786 ;;		_print_RPM
 11787 ;;		_print_Vbatt
 11788 ;;		_print_AI_Temp
 11789 ;;		_print_ELMVer
 11790 ;;		_print_SAEVer
 11791 ;;		_diagnostic_trouble_codes
 11792 ;;		_clear_diagnostic_codes
 11793 ;;		_LCD_init
 11794 ;; This function uses a non-reentrant model
 11795 ;;
 11796                           
 11797                           	psect	text60
 11798   00332E                     __ptext60:
 11799                           	callstack 0
 11800   00332E                     _LCD_clear:
 11801                           	callstack 26
 11802   00332E                     
 11803                           ;LCD.c: 251:     LCD_write_command(0x01);
 11804   00332E  0E01               	movlw	1
 11805   003330  EC1B  F010         	call	_LCD_write_command
 11806   003334                     
 11807                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(16000000/4000000.0)));
 11808   003334  0E0C               	movlw	12
 11809   003336  6E06               	movwf	??_LCD_clear^0,c
 11810   003338  0EA2               	movlw	162
 11811   00333A                     u6877:
 11812   00333A  2EE8               	decfsz	wreg,f,c
 11813   00333C  D7FE               	bra	u6877
 11814   00333E  2E06               	decfsz	??_LCD_clear^0,f,c
 11815   003340  D7FC               	bra	u6877
 11816   003342                     
 11817                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
 11818   003342  0100               	movlb	0	; () banked
 11819   003344  51F5               	movf	_LCD_entry_mode& (0+255),w,b
 11820   003346  EC1B  F010         	call	_LCD_write_command
 11821   00334A  0012               	return		;funcret
 11822   00334C                     __end_of_LCD_clear:
 11823                           	callstack 0
 11824                           
 11825 ;; *************** function _LCD_write_command *****************
 11826 ;; Defined at:
 11827 ;;		line 46 in file "LCD.c"
 11828 ;; Parameters:    Size  Location     Type
 11829 ;;  command         1    wreg     unsigned char 
 11830 ;; Auto vars:     Size  Location     Type
 11831 ;;  command         1    4[COMRAM] unsigned char 
 11832 ;; Return value:  Size  Location     Type
 11833 ;;                  1    wreg      void 
 11834 ;; Registers used:
 11835 ;;		wreg, status,2, status,0, cstack
 11836 ;; Tracked objects:
 11837 ;;		On entry : 0/0
 11838 ;;		On exit  : 0/0
 11839 ;;		Unchanged: 0/0
 11840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11844 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11845 ;;Total ram usage:        3 bytes
 11846 ;; Hardware stack levels used: 1
 11847 ;; Hardware stack levels required when called: 2
 11848 ;; This function calls:
 11849 ;;		_LCD_pulse_clock
 11850 ;; This function is called by:
 11851 ;;		_LCD_init
 11852 ;;		_LCD_cursor_set
 11853 ;;		_LCD_configure_cursor_blink
 11854 ;;		_LCD_clear
 11855 ;;		_LCD_cursor_increment
 11856 ;;		_LCD_cursor_decrement
 11857 ;;		_LCD_configure_lcd_display
 11858 ;;		_LCD_configure_cursor_display
 11859 ;;		_LCD_shift_reset
 11860 ;;		_LCD_shift_left
 11861 ;;		_LCD_shift_right
 11862 ;;		_LCD_configure_entry_id
 11863 ;;		_LCD_configure_entry_shift
 11864 ;;		_LCD_add_character
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           	psect	text61
 11869   002036                     __ptext61:
 11870                           	callstack 0
 11871   002036                     _LCD_write_command:
 11872                           	callstack 26
 11873                           
 11874                           ;incstack = 0
 11875                           ;LCD_write_command@command stored from wreg
 11876   002036  6E05               	movwf	LCD_write_command@command^0,c
 11877   002038                     
 11878                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
 11879   002038  948C               	bcf	140,2,c	;volatile
 11880   00203A                     
 11881                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
 11882   00203A  6A03               	clrf	??_LCD_write_command^0,c
 11883   00203C  AE05               	btfss	LCD_write_command@command^0,7,c
 11884   00203E  D001               	bra	u3495
 11885   002040  2A03               	incf	??_LCD_write_command^0,f,c
 11886   002042                     u3495:
 11887   002042  0E01               	movlw	1
 11888   002044  1603               	andwf	??_LCD_write_command^0,f,c
 11889   002046  3203               	rrcf	??_LCD_write_command^0,f,c
 11890   002048  3203               	rrcf	??_LCD_write_command^0,f,c
 11891   00204A  508C               	movf	140,w,c	;volatile
 11892   00204C  1803               	xorwf	??_LCD_write_command^0,w,c
 11893   00204E  0B7F               	andlw	-129
 11894   002050  1803               	xorwf	??_LCD_write_command^0,w,c
 11895   002052  6E8C               	movwf	140,c	;volatile
 11896                           
 11897                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
 11898   002054  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 11899   002058  0E06               	movlw	6
 11900   00205A  6E04               	movwf	(??_LCD_write_command+1)^0,c
 11901   00205C                     u3505:
 11902   00205C  90D8               	bcf	status,0,c
 11903   00205E  3203               	rrcf	??_LCD_write_command^0,f,c
 11904   002060  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
 11905   002062  EF2E  F010         	goto	u3505
 11906   002066  0E01               	movlw	1
 11907   002068  1603               	andwf	??_LCD_write_command^0,f,c
 11908   00206A  3A03               	swapf	??_LCD_write_command^0,f,c
 11909   00206C  4603               	rlncf	??_LCD_write_command^0,f,c
 11910   00206E  4603               	rlncf	??_LCD_write_command^0,f,c
 11911   002070  508C               	movf	140,w,c	;volatile
 11912   002072  1803               	xorwf	??_LCD_write_command^0,w,c
 11913   002074  0BBF               	andlw	-65
 11914   002076  1803               	xorwf	??_LCD_write_command^0,w,c
 11915   002078  6E8C               	movwf	140,c	;volatile
 11916                           
 11917                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
 11918   00207A  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 11919   00207E  0E05               	movlw	5
 11920   002080  6E04               	movwf	(??_LCD_write_command+1)^0,c
 11921   002082                     u3515:
 11922   002082  90D8               	bcf	status,0,c
 11923   002084  3203               	rrcf	??_LCD_write_command^0,f,c
 11924   002086  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
 11925   002088  EF41  F010         	goto	u3515
 11926   00208C  0E01               	movlw	1
 11927   00208E  1603               	andwf	??_LCD_write_command^0,f,c
 11928   002090  3A03               	swapf	??_LCD_write_command^0,f,c
 11929   002092  4603               	rlncf	??_LCD_write_command^0,f,c
 11930   002094  508C               	movf	140,w,c	;volatile
 11931   002096  1803               	xorwf	??_LCD_write_command^0,w,c
 11932   002098  0BDF               	andlw	-33
 11933   00209A  1803               	xorwf	??_LCD_write_command^0,w,c
 11934   00209C  6E8C               	movwf	140,c	;volatile
 11935                           
 11936                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
 11937   00209E  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 11938   0020A2  3A03               	swapf	??_LCD_write_command^0,f,c
 11939   0020A4  0E0F               	movlw	15
 11940   0020A6  1603               	andwf	??_LCD_write_command^0,f,c
 11941   0020A8  0E01               	movlw	1
 11942   0020AA  1603               	andwf	??_LCD_write_command^0,f,c
 11943   0020AC  3A03               	swapf	??_LCD_write_command^0,f,c
 11944   0020AE  508C               	movf	140,w,c	;volatile
 11945   0020B0  1803               	xorwf	??_LCD_write_command^0,w,c
 11946   0020B2  0BEF               	andlw	-17
 11947   0020B4  1803               	xorwf	??_LCD_write_command^0,w,c
 11948   0020B6  6E8C               	movwf	140,c	;volatile
 11949   0020B8                     
 11950                           ;LCD.c: 57:     LCD_pulse_clock();
 11951   0020B8  ECE9  F019         	call	_LCD_pulse_clock	;wreg free
 11952   0020BC                     
 11953                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
 11954   0020BC  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 11955   0020C0  90D8               	bcf	status,0,c
 11956   0020C2  3203               	rrcf	??_LCD_write_command^0,f,c
 11957   0020C4  90D8               	bcf	status,0,c
 11958   0020C6  3203               	rrcf	??_LCD_write_command^0,f,c
 11959   0020C8  90D8               	bcf	status,0,c
 11960   0020CA  3203               	rrcf	??_LCD_write_command^0,f,c
 11961   0020CC  0E01               	movlw	1
 11962   0020CE  1603               	andwf	??_LCD_write_command^0,f,c
 11963   0020D0  3203               	rrcf	??_LCD_write_command^0,f,c
 11964   0020D2  3203               	rrcf	??_LCD_write_command^0,f,c
 11965   0020D4  508C               	movf	140,w,c	;volatile
 11966   0020D6  1803               	xorwf	??_LCD_write_command^0,w,c
 11967   0020D8  0B7F               	andlw	-129
 11968   0020DA  1803               	xorwf	??_LCD_write_command^0,w,c
 11969   0020DC  6E8C               	movwf	140,c	;volatile
 11970   0020DE                     
 11971                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
 11972   0020DE  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 11973   0020E2  90D8               	bcf	status,0,c
 11974   0020E4  3203               	rrcf	??_LCD_write_command^0,f,c
 11975   0020E6  90D8               	bcf	status,0,c
 11976   0020E8  3203               	rrcf	??_LCD_write_command^0,f,c
 11977   0020EA  0E01               	movlw	1
 11978   0020EC  1603               	andwf	??_LCD_write_command^0,f,c
 11979   0020EE  3A03               	swapf	??_LCD_write_command^0,f,c
 11980   0020F0  4603               	rlncf	??_LCD_write_command^0,f,c
 11981   0020F2  4603               	rlncf	??_LCD_write_command^0,f,c
 11982   0020F4  508C               	movf	140,w,c	;volatile
 11983   0020F6  1803               	xorwf	??_LCD_write_command^0,w,c
 11984   0020F8  0BBF               	andlw	-65
 11985   0020FA  1803               	xorwf	??_LCD_write_command^0,w,c
 11986   0020FC  6E8C               	movwf	140,c	;volatile
 11987   0020FE                     
 11988                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
 11989   0020FE  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 11990   002102  90D8               	bcf	status,0,c
 11991   002104  3203               	rrcf	??_LCD_write_command^0,f,c
 11992   002106  0E01               	movlw	1
 11993   002108  1603               	andwf	??_LCD_write_command^0,f,c
 11994   00210A  3A03               	swapf	??_LCD_write_command^0,f,c
 11995   00210C  4603               	rlncf	??_LCD_write_command^0,f,c
 11996   00210E  508C               	movf	140,w,c	;volatile
 11997   002110  1803               	xorwf	??_LCD_write_command^0,w,c
 11998   002112  0BDF               	andlw	-33
 11999   002114  1803               	xorwf	??_LCD_write_command^0,w,c
 12000   002116  6E8C               	movwf	140,c	;volatile
 12001   002118                     
 12002                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
 12003   002118  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12004   00211C  0E01               	movlw	1
 12005   00211E  1603               	andwf	??_LCD_write_command^0,f,c
 12006   002120  3A03               	swapf	??_LCD_write_command^0,f,c
 12007   002122  508C               	movf	140,w,c	;volatile
 12008   002124  1803               	xorwf	??_LCD_write_command^0,w,c
 12009   002126  0BEF               	andlw	-17
 12010   002128  1803               	xorwf	??_LCD_write_command^0,w,c
 12011   00212A  6E8C               	movwf	140,c	;volatile
 12012   00212C                     
 12013                           ;LCD.c: 66:     LCD_pulse_clock();
 12014   00212C  ECE9  F019         	call	_LCD_pulse_clock	;wreg free
 12015   002130  0012               	return		;funcret
 12016   002132                     __end_of_LCD_write_command:
 12017                           	callstack 0
 12018                           
 12019 ;; *************** function _LCD_pulse_clock *****************
 12020 ;; Defined at:
 12021 ;;		line 34 in file "LCD.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;		None
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;		None
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      void 
 12028 ;; Registers used:
 12029 ;;		wreg
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;Total ram usage:        0 bytes
 12040 ;; Hardware stack levels used: 1
 12041 ;; Hardware stack levels required when called: 1
 12042 ;; This function calls:
 12043 ;;		Nothing
 12044 ;; This function is called by:
 12045 ;;		_LCD_write_command
 12046 ;;		_LCD_write_data
 12047 ;;		_LCD_init
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text62
 12052   0033D2                     __ptext62:
 12053                           	callstack 0
 12054   0033D2                     _LCD_pulse_clock:
 12055                           	callstack 26
 12056   0033D2                     
 12057                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
 12058   0033D2  868C               	bsf	140,3,c	;volatile
 12059   0033D4                     
 12060                           ;LCD.c: 37:   _delay((unsigned long)((60)*(16000000/4000000.0)));
 12061   0033D4  0E50               	movlw	80
 12062   0033D6                     u6887:
 12063   0033D6  2EE8               	decfsz	wreg,f,c
 12064   0033D8  D7FE               	bra	u6887
 12065   0033DA                     
 12066                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
 12067   0033DA  968C               	bcf	140,3,c	;volatile
 12068   0033DC  0012               	return		;funcret
 12069   0033DE                     __end_of_LCD_pulse_clock:
 12070                           	callstack 0
 12071                           
 12072 ;; *************** function _ADC_init *****************
 12073 ;; Defined at:
 12074 ;;		line 111 in file "OBCII_PIC18F46K22.c"
 12075 ;; Parameters:    Size  Location     Type
 12076 ;;		None
 12077 ;; Auto vars:     Size  Location     Type
 12078 ;;		None
 12079 ;; Return value:  Size  Location     Type
 12080 ;;                  1    wreg      void 
 12081 ;; Registers used:
 12082 ;;		wreg, status,2
 12083 ;; Tracked objects:
 12084 ;;		On entry : 0/0
 12085 ;;		On exit  : 0/0
 12086 ;;		Unchanged: 0/0
 12087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12092 ;;Total ram usage:        0 bytes
 12093 ;; Hardware stack levels used: 1
 12094 ;; Hardware stack levels required when called: 1
 12095 ;; This function calls:
 12096 ;;		Nothing
 12097 ;; This function is called by:
 12098 ;;		_main
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           	psect	text63
 12103   0033DE                     __ptext63:
 12104                           	callstack 0
 12105   0033DE                     _ADC_init:
 12106                           	callstack 29
 12107   0033DE                     
 12108                           ;OBCII_PIC18F46K22.c: 113:     ADCON0 = 0b00000001;
 12109   0033DE  0E01               	movlw	1
 12110   0033E0  6EC2               	movwf	194,c	;volatile
 12111   0033E2                     
 12112                           ;OBCII_PIC18F46K22.c: 114:     ADCON1 = 0b00000000;
 12113   0033E2  6AC1               	clrf	193,c	;volatile
 12114                           
 12115                           ;OBCII_PIC18F46K22.c: 115:     ADCON2 = 0b10101010;
 12116   0033E4  0EAA               	movlw	170
 12117   0033E6  6EC0               	movwf	192,c	;volatile
 12118   0033E8  0012               	return		;funcret
 12119   0033EA                     __end_of_ADC_init:
 12120                           	callstack 0
 12121                           
 12122 ;; *************** function _UART_ISR *****************
 12123 ;; Defined at:
 12124 ;;		line 157 in file "OBCII_PIC18F46K22.c"
 12125 ;; Parameters:    Size  Location     Type
 12126 ;;		None
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;		None
 12129 ;; Return value:  Size  Location     Type
 12130 ;;                  1    wreg      void 
 12131 ;; Registers used:
 12132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12133 ;; Tracked objects:
 12134 ;;		On entry : 0/0
 12135 ;;		On exit  : 0/0
 12136 ;;		Unchanged: 0/0
 12137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12142 ;;Total ram usage:        2 bytes
 12143 ;; Hardware stack levels used: 1
 12144 ;; This function calls:
 12145 ;;		Nothing
 12146 ;; This function is called by:
 12147 ;;		Interrupt level 2
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           	psect	intcode
 12152   000008                     __pintcode:
 12153                           	callstack 0
 12154   000008                     _UART_ISR:
 12155                           	callstack 19
 12156                           
 12157                           ;incstack = 0
 12158   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12159   00000A  CFD9 F001          	movff	fsr2l,??_UART_ISR
 12160   00000E  CFDA F002          	movff	fsr2h,??_UART_ISR+1
 12161   000012                     
 12162                           ;OBCII_PIC18F46K22.c: 158:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
 12163   000012  AA9D               	btfss	157,5,c	;volatile
 12164   000014  EF0E  F000         	goto	i2u516_41
 12165   000018  EF10  F000         	goto	i2u516_40
 12166   00001C                     i2u516_41:
 12167   00001C  EF68  F000         	goto	i2l164
 12168   000020                     i2u516_40:
 12169   000020  AA9E               	btfss	158,5,c	;volatile
 12170   000022  EF15  F000         	goto	i2u517_41
 12171   000026  EF17  F000         	goto	i2u517_40
 12172   00002A                     i2u517_41:
 12173   00002A  EF68  F000         	goto	i2l164
 12174   00002E                     i2u517_40:
 12175   00002E                     
 12176                           ;OBCII_PIC18F46K22.c: 159:         RX_char = RCREG1;
 12177   00002E  CFAE F0D1          	movff	4014,_RX_char	;volatile
 12178                           
 12179                           ;OBCII_PIC18F46K22.c: 162:         if (RCSTAbits.OERR) {
 12180   000032  A2AB               	btfss	171,1,c	;volatile
 12181   000034  EF1E  F000         	goto	i2u518_41
 12182   000038  EF20  F000         	goto	i2u518_40
 12183   00003C                     i2u518_41:
 12184   00003C  EF22  F000         	goto	i2l5008
 12185   000040                     i2u518_40:
 12186   000040                     
 12187                           ;OBCII_PIC18F46K22.c: 163:             RCSTAbits.CREN = 0;
 12188   000040  98AB               	bcf	171,4,c	;volatile
 12189                           
 12190                           ;OBCII_PIC18F46K22.c: 164:             RCSTAbits.CREN = 1;
 12191   000042  88AB               	bsf	171,4,c	;volatile
 12192   000044                     i2l5008:
 12193                           
 12194                           ;OBCII_PIC18F46K22.c: 168:         if ((RX_char >= 32 && RX_char <= 126) && RX_char != '
      +                          >') {
 12195   000044  0E1F               	movlw	31
 12196   000046  0100               	movlb	0	; () banked
 12197   000048  65D1               	cpfsgt	_RX_char& (0+255),b
 12198   00004A  EF29  F000         	goto	i2u519_41
 12199   00004E  EF2B  F000         	goto	i2u519_40
 12200   000052                     i2u519_41:
 12201   000052  EF45  F000         	goto	i2l5018
 12202   000056                     i2u519_40:
 12203   000056                     
 12204                           ; BSR set to: 0
 12205   000056  0E7F               	movlw	127
 12206   000058  61D1               	cpfslt	_RX_char& (0+255),b
 12207   00005A  EF31  F000         	goto	i2u520_41
 12208   00005E  EF33  F000         	goto	i2u520_40
 12209   000062                     i2u520_41:
 12210   000062  EF45  F000         	goto	i2l5018
 12211   000066                     i2u520_40:
 12212   000066                     
 12213                           ; BSR set to: 0
 12214   000066  0E3E               	movlw	62
 12215   000068  19D1               	xorwf	_RX_char& (0+255),w,b
 12216   00006A  B4D8               	btfsc	status,2,c
 12217   00006C  EF3A  F000         	goto	i2u521_41
 12218   000070  EF3C  F000         	goto	i2u521_40
 12219   000074                     i2u521_41:
 12220   000074  EF45  F000         	goto	i2l5018
 12221   000078                     i2u521_40:
 12222   000078                     
 12223                           ; BSR set to: 0
 12224                           ;OBCII_PIC18F46K22.c: 169:             buffer[buffer_count] = RX_char;
 12225   000078  0E00               	movlw	low _buffer
 12226   00007A  25D2               	addwf	_buffer_count& (0+255),w,b
 12227   00007C  6ED9               	movwf	fsr2l,c
 12228   00007E  6ADA               	clrf	fsr2h,c
 12229   000080  0E02               	movlw	high _buffer
 12230   000082  22DA               	addwfc	fsr2h,f,c
 12231   000084  C0D1  FFDF         	movff	_RX_char,indf2
 12232   000088                     
 12233                           ; BSR set to: 0
 12234                           ;OBCII_PIC18F46K22.c: 170:             buffer_count++;
 12235   000088  2BD2               	incf	_buffer_count& (0+255),f,b
 12236   00008A                     i2l5018:
 12237                           
 12238                           ; BSR set to: 0
 12239                           ;OBCII_PIC18F46K22.c: 173:         if (RX_char == '>' || RX_char == '\n' || buffer_count
      +                           >= 256 -1) {
 12240   00008A  0E3E               	movlw	62
 12241   00008C  19D1               	xorwf	_RX_char& (0+255),w,b
 12242   00008E  B4D8               	btfsc	status,2,c
 12243   000090  EF4C  F000         	goto	i2u522_41
 12244   000094  EF4E  F000         	goto	i2u522_40
 12245   000098                     i2u522_41:
 12246   000098  EF5F  F000         	goto	i2l5024
 12247   00009C                     i2u522_40:
 12248   00009C                     
 12249                           ; BSR set to: 0
 12250   00009C  0E0A               	movlw	10
 12251   00009E  19D1               	xorwf	_RX_char& (0+255),w,b
 12252   0000A0  B4D8               	btfsc	status,2,c
 12253   0000A2  EF55  F000         	goto	i2u523_41
 12254   0000A6  EF57  F000         	goto	i2u523_40
 12255   0000AA                     i2u523_41:
 12256   0000AA  EF5F  F000         	goto	i2l5024
 12257   0000AE                     i2u523_40:
 12258   0000AE                     
 12259                           ; BSR set to: 0
 12260   0000AE  29D2               	incf	_buffer_count& (0+255),w,b
 12261   0000B0  A4D8               	btfss	status,2,c
 12262   0000B2  EF5D  F000         	goto	i2u524_41
 12263   0000B6  EF5F  F000         	goto	i2u524_40
 12264   0000BA                     i2u524_41:
 12265   0000BA  EF68  F000         	goto	i2l164
 12266   0000BE                     i2u524_40:
 12267   0000BE                     i2l5024:
 12268                           
 12269                           ; BSR set to: 0
 12270                           ;OBCII_PIC18F46K22.c: 174:             buffer[buffer_count] = '\0';
 12271   0000BE  0E00               	movlw	low _buffer
 12272   0000C0  25D2               	addwf	_buffer_count& (0+255),w,b
 12273   0000C2  6ED9               	movwf	fsr2l,c
 12274   0000C4  6ADA               	clrf	fsr2h,c
 12275   0000C6  0E02               	movlw	high _buffer
 12276   0000C8  22DA               	addwfc	fsr2h,f,c
 12277   0000CA  6ADF               	clrf	indf2,c
 12278   0000CC                     
 12279                           ; BSR set to: 0
 12280                           ;OBCII_PIC18F46K22.c: 175:             message_complete = 1;
 12281   0000CC  0E01               	movlw	1
 12282   0000CE  6FD0               	movwf	_message_complete& (0+255),b	;volatile
 12283   0000D0                     i2l164:
 12284   0000D0  C002  FFDA         	movff	??_UART_ISR+1,fsr2h
 12285   0000D4  C001  FFD9         	movff	??_UART_ISR,fsr2l
 12286   0000D8  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12287   0000DA  0011               	retfie		f
 12288   0000DC                     __end_of_UART_ISR:
 12289                           	callstack 0
 12290                           
 12291                           	psect	rparam
 12292   000001                     ___rparam_used  equ	1
 12293   000000                     ___param_bank   equ	0
 12294   000000                     __Lparam        equ	__Lrparam
 12295   000000                     __Hparam        equ	__Hrparam
 12296                           
 12297                           	psect	temp
 12298   00005C                     btemp:
 12299                           	callstack 0
 12300   00005C                     	ds	1
 12301   00005C                     int$flags       set	btemp
 12302   00005D                     wtemp8          set	btemp+1
 12303   00005D                     ttemp5          set	btemp+1
 12304   000060                     ttemp6          set	btemp+4
 12305   000064                     ttemp7          set	btemp+8
 12306                           
 12307                           	psect	config
 12308                           
 12309                           ; Padding undefined space
 12310   300000                     	org	3145728
 12311   300000  FF                 	db	255
 12312                           
 12313                           ;Config register CONFIG1H @ 0x300001
 12314                           ;	Oscillator Selection bits
 12315                           ;	FOSC = INTIO67, Internal oscillator block
 12316                           ;	4X PLL Enable
 12317                           ;	PLLCFG = ON, Oscillator multiplied by 4
 12318                           ;	Primary clock enable bit
 12319                           ;	PRICLKEN = ON, Primary clock is always enabled
 12320                           ;	Fail-Safe Clock Monitor Enable bit
 12321                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12322                           ;	Internal/External Oscillator Switchover bit
 12323                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12324   300001                     	org	3145729
 12325   300001  38                 	db	56
 12326                           
 12327                           ;Config register CONFIG2L @ 0x300002
 12328                           ;	Power-up Timer Enable bit
 12329                           ;	PWRTEN = ON, Power up timer enabled
 12330                           ;	Brown-out Reset Enable bits
 12331                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12332                           ;	Brown Out Reset Voltage bits
 12333                           ;	BORV = 250, VBOR set to 2.50 V nominal
 12334   300002                     	org	3145730
 12335   300002  0E                 	db	14
 12336                           
 12337                           ;Config register CONFIG2H @ 0x300003
 12338                           ;	Watchdog Timer Enable bits
 12339                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12340                           ;	Watchdog Timer Postscale Select bits
 12341                           ;	WDTPS = 32768, 1:32768
 12342   300003                     	org	3145731
 12343   300003  3C                 	db	60
 12344                           
 12345                           ; Padding undefined space
 12346   300004                     	org	3145732
 12347   300004  FF                 	db	255
 12348                           
 12349                           ;Config register CONFIG3H @ 0x300005
 12350                           ;	CCP2 MUX bit
 12351                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 12352                           ;	PORTB A/D Enable bit
 12353                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 12354                           ;	P3A/CCP3 Mux bit
 12355                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 12356                           ;	HFINTOSC Fast Start-up
 12357                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 12358                           ;	Timer3 Clock input mux bit
 12359                           ;	T3CMX = PORTC0, T3CKI is on RC0
 12360                           ;	ECCP2 B output mux bit
 12361                           ;	P2BMX = PORTD2, P2B is on RD2
 12362                           ;	MCLR Pin Enable bit
 12363                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 12364   300005                     	org	3145733
 12365   300005  BF                 	db	191
 12366                           
 12367                           ;Config register CONFIG4L @ 0x300006
 12368                           ;	Stack Full/Underflow Reset Enable bit
 12369                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12370                           ;	Single-Supply ICSP Enable bit
 12371                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 12372                           ;	Extended Instruction Set Enable bit
 12373                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12374                           ;	Background Debug
 12375                           ;	DEBUG = 0x1, unprogrammed default
 12376   300006                     	org	3145734
 12377   300006  85                 	db	133
 12378                           
 12379                           ; Padding undefined space
 12380   300007                     	org	3145735
 12381   300007  FF                 	db	255
 12382                           
 12383                           ;Config register CONFIG5L @ 0x300008
 12384                           ;	Code Protection Block 0
 12385                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12386                           ;	Code Protection Block 1
 12387                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12388                           ;	Code Protection Block 2
 12389                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12390                           ;	Code Protection Block 3
 12391                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12392   300008                     	org	3145736
 12393   300008  0F                 	db	15
 12394                           
 12395                           ;Config register CONFIG5H @ 0x300009
 12396                           ;	Boot Block Code Protection bit
 12397                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12398                           ;	Data EEPROM Code Protection bit
 12399                           ;	CPD = OFF, Data EEPROM not code-protected
 12400   300009                     	org	3145737
 12401   300009  C0                 	db	192
 12402                           
 12403                           ;Config register CONFIG6L @ 0x30000A
 12404                           ;	Write Protection Block 0
 12405                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12406                           ;	Write Protection Block 1
 12407                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12408                           ;	Write Protection Block 2
 12409                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12410                           ;	Write Protection Block 3
 12411                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12412   30000A                     	org	3145738
 12413   30000A  0F                 	db	15
 12414                           
 12415                           ;Config register CONFIG6H @ 0x30000B
 12416                           ;	Configuration Register Write Protection bit
 12417                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12418                           ;	Boot Block Write Protection bit
 12419                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12420                           ;	Data EEPROM Write Protection bit
 12421                           ;	WRTD = OFF, Data EEPROM not write-protected
 12422   30000B                     	org	3145739
 12423   30000B  E0                 	db	224
 12424                           
 12425                           ;Config register CONFIG7L @ 0x30000C
 12426                           ;	Table Read Protection Block 0
 12427                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12428                           ;	Table Read Protection Block 1
 12429                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12430                           ;	Table Read Protection Block 2
 12431                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12432                           ;	Table Read Protection Block 3
 12433                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12434   30000C                     	org	3145740
 12435   30000C  0F                 	db	15
 12436                           
 12437                           ;Config register CONFIG7H @ 0x30000D
 12438                           ;	Boot Block Table Read Protection bit
 12439                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12440   30000D                     	org	3145741
 12441   30000D  40                 	db	64
 12442                           tosu	equ	0xFFF
 12443                           tosh	equ	0xFFE
 12444                           tosl	equ	0xFFD
 12445                           stkptr	equ	0xFFC
 12446                           pclatu	equ	0xFFB
 12447                           pclath	equ	0xFFA
 12448                           pcl	equ	0xFF9
 12449                           tblptru	equ	0xFF8
 12450                           tblptrh	equ	0xFF7
 12451                           tblptrl	equ	0xFF6
 12452                           tablat	equ	0xFF5
 12453                           prodh	equ	0xFF4
 12454                           prodl	equ	0xFF3
 12455                           indf0	equ	0xFEF
 12456                           postinc0	equ	0xFEE
 12457                           postdec0	equ	0xFED
 12458                           preinc0	equ	0xFEC
 12459                           plusw0	equ	0xFEB
 12460                           fsr0h	equ	0xFEA
 12461                           fsr0l	equ	0xFE9
 12462                           wreg	equ	0xFE8
 12463                           indf1	equ	0xFE7
 12464                           postinc1	equ	0xFE6
 12465                           postdec1	equ	0xFE5
 12466                           preinc1	equ	0xFE4
 12467                           plusw1	equ	0xFE3
 12468                           fsr1h	equ	0xFE2
 12469                           fsr1l	equ	0xFE1
 12470                           bsr	equ	0xFE0
 12471                           indf2	equ	0xFDF
 12472                           postinc2	equ	0xFDE
 12473                           postdec2	equ	0xFDD
 12474                           preinc2	equ	0xFDC
 12475                           plusw2	equ	0xFDB
 12476                           fsr2h	equ	0xFDA
 12477                           fsr2l	equ	0xFD9
 12478                           status	equ	0xFD8

Data Sizes:
    Strings     377
    Constant    0
    Data        4
    BSS         455
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160     74     151
    BANK1           256      0     124
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    atox@ep	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2242(BANK1[32]), 

    atox@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    atox@pll	PTR unsigned long long  size(1) Largest target is 8
		 -> vfsfcnvrt@llu(BANK0[8]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    decode_dtc@dtc	PTR unsigned char  size(2) Largest target is 60
		 -> dtc_codes(BANK1[60]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fgetc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    fgetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    fgetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), dtc_codes(BANK1[60]), rpm_string(BANK0[16]), 
		 -> STR_11(CODE[17]), STR_12(CODE[16]), STR_13(CODE[2]), STR_14(CODE[2]), 
		 -> STR_17(CODE[6]), STR_18(CODE[4]), STR_2(CODE[17]), STR_20(CODE[6]), 
		 -> STR_21(CODE[6]), STR_22(CODE[4]), STR_24(CODE[4]), STR_26(CODE[4]), 
		 -> STR_27(CODE[2]), STR_29(CODE[4]), STR_3(CODE[15]), STR_31(CODE[5]), 
		 -> STR_32(CODE[13]), STR_33(CODE[14]), STR_35(CODE[16]), STR_36(CODE[11]), 
		 -> STR_41(CODE[14]), STR_42(CODE[14]), STR_43(CODE[15]), STR_44(CODE[17]), 
		 -> STR_46(CODE[14]), STR_47(CODE[11]), STR_48(CODE[16]), STR_49(CODE[11]), 
		 -> STR_6(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2031$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    S2031$source	PTR const unsigned char  size(2) Largest target is 0

    skipws@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_16(CODE[3]), STR_25(CODE[3]), STR_34(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), dtc_codes(BANK1[60]), rpm_string(BANK0[16]), 

    sscanf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sscanf(BANK0[2]), 

    sscanf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_38(CODE[3]), STR_39(CODE[3]), 

    sscanf@s	PTR const unsigned char  size(1) Largest target is 3
		 -> diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_40(CODE[20]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_40(CODE[20]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_40(CODE[20]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_40(CODE[20]), 

    __strtoxll@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2242(BANK1[32]), 

    __strtoxll@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> atox@ep(BANK0[2]), 

    __strtoxll@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2242(BANK1[32]), 

    UART1_SendString@string	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), STR_10(CODE[6]), STR_15(CODE[6]), STR_19(CODE[6]), 
		 -> STR_23(CODE[6]), STR_28(CODE[5]), STR_30(CODE[6]), STR_37(CODE[4]), 
		 -> STR_4(CODE[6]), STR_45(CODE[4]), STR_5(CODE[5]), STR_7(CODE[5]), 

    ungetc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    ungetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), dtc_codes(BANK1[60]), 
		 -> rpm_string(BANK0[16]), 

    ungetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_16(CODE[3]), STR_25(CODE[3]), STR_34(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_16(CODE[3]), STR_25(CODE[3]), STR_34(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_16(CODE[3]), STR_25(CODE[3]), STR_34(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfscanf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfscanf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_38(CODE[3]), STR_39(CODE[3]), 

    vfscanf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_38(CODE[3]), STR_39(CODE[3]), 

    vfscanf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    vfsfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfsfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfscanf@cfmt(BANK0[2]), 

    vfsfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    vfsfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> diagnostic_trouble_codes@byte1(BANK0[2]), diagnostic_trouble_codes@byte2(BANK0[2]), ?_sprintf(COMRAM[2]), ?_sscanf(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _welcome_splash->_LCD_write_variable
    _LCD_write_variable->___aldiv
    _live_reading_mode->_print_AI_Temp
    _live_reading_mode->_print_RPM
    _print_Vbatt->_LCD_write_string
    _print_RPM->_sprintf
    _print_AI_Temp->_sprintf
    _display_system_info->_print_ELMVer
    _display_system_info->_print_SAEVer
    _print_SAEVer->_LCD_write_string
    _print_ELMVer->_LCD_write_string
    _diagnostic_trouble_codes->_decode_dtc
    _strstr->_strncmp
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atox
    _atox->___strtoxll
    _skipws->_fgetc
    _fgetc->_getch
    ___strtoxll->___omul
    _decode_dtc->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _ctoa->_fputc
    _clear_diagnostic_codes->_LCD_write_string
    _parsing_notif->_LCD_write_string
    _display_mm->_LCD_write_string
    _clear_parsing_notif->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _UART1_SendString->_UART1_SendChar
    _LCD_configure_cursor_blink->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_menu
    _main_menu->_diagnostic_trouble_codes
    _diagnostic_trouble_codes->_sscanf
    _sscanf->_vfscanf
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atox

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   52826
                                             72 BANK0      2     2      0
                           _ADC_init
                          _LCD_clear
                           _LCD_init
                         _UART1_Init
                   _UART1_SendString
                         _input_init
                          _main_menu
                     _welcome_splash
 ---------------------------------------------------------------------------------
 (1) _welcome_splash                                       6     6      0    2793
                                             27 COMRAM     6     6      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                 _LCD_write_variable
                   _UART1_SendString
                            ___lwdiv
                            ___lwmod
                          _ccp1_init
                          _tmr1_init
 ---------------------------------------------------------------------------------
 (2) _tmr1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ccp1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_write_variable                                  11     6      5    1231
                                             16 COMRAM    11     6      5
                     _LCD_write_data
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8      94
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     300
                                              2 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            2     2      0   49206
                                             70 BANK0      2     2      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
             _clear_diagnostic_codes
           _diagnostic_trouble_codes
                         _display_mm
                _display_system_info
                  _live_reading_mode
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _live_reading_mode                                    0     0      0   19385
                      _print_AI_Temp
                          _print_RPM
                        _print_Vbatt
 ---------------------------------------------------------------------------------
 (3) _print_Vbatt                                          1     1      0    3555
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _print_RPM                                            3     3      0    7915
                                             77 COMRAM     3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                  _hex_char_to_value
                      _parsing_notif
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _print_AI_Temp                                        3     3      0    7915
                                             77 COMRAM     3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                  _hex_char_to_value
                      _parsing_notif
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _hex_char_to_value                                    1     1      0     261
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _display_system_info                                  0     0      0    7701
                     _LCD_cursor_set
                   _LCD_write_string
                       _print_ELMVer
                       _print_SAEVer
 ---------------------------------------------------------------------------------
 (3) _print_SAEVer                                         1     1      0    3463
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (3) _print_ELMVer                                         1     1      0    3463
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (2) _diagnostic_trouble_codes                            16    16      0   16687
                                             54 BANK0     16    16      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _decode_dtc
                      _parsing_notif
                             _sscanf
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               6     2      4     589
                                              9 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              7     1      6     182
                                              2 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2      91
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4      92
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _sscanf                                              19    14      5    8118
                                             37 BANK0     17    12      5
                            _vfscanf
 ---------------------------------------------------------------------------------
 (4) _vfscanf                                             10     6      4    7844
                                             27 BANK0     10     6      4
                          _vfsfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfsfcnvrt                                           36    32      4    7453
                                             84 COMRAM     2     2      0
                                             10 BANK0     17    13      4
                               _atox
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (6) _atox                                                20    18      2    4820
                                             74 COMRAM    10     8      2
                                              0 BANK0     10    10      0
                         ___strtoxll
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (6) _skipws                                               4     3      1     779
                                             13 COMRAM     4     3      1
                              _fgetc
                             _ungetc
 ---------------------------------------------------------------------------------
 (6) _ungetc                                               5     2      3     303
                                              2 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (7) _fgetc                                                9     7      2     312
                                              4 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (8) _getch                                                2     0      2       0
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) ___strtoxll                                          48    40      8    2113
                                             26 COMRAM    48    40      8
                             ___omul
 ---------------------------------------------------------------------------------
 (8) ___omul                                              24     8     16     142
                                              2 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) _decode_dtc                                          12     6      6    4331
                                             77 COMRAM    12     6      6
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             24    14     10    4191
                                             55 COMRAM    22    12     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             6     2      4    3982
                                             49 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           13    10      3    3845
                                             36 COMRAM    13    10      3
                               _ctoa
                              _fputc
                 _read_prec_or_width
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                12     9      3    1060
                                             24 COMRAM    12     9      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _utoa                                                 8     5      3    1342
                                             24 COMRAM     8     5      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  8     3      5     762
                                             16 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (9) _fputs                                                6     3      3     339
                                             10 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     163
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     166
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _read_prec_or_width                                   7     5      2     182
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     5      2     421
                                             10 COMRAM     7     5      2
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               8     5      3     238
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_diagnostic_codes                               4     4      0    3749
                                             10 COMRAM     4     4      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _parsing_notif                                        0     0      0     775
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _display_mm                                           0     0      0     775
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _clear_parsing_notif                                  0     0      0     775
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     5     3      2     359
                                              5 COMRAM     5     3      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (3) _LCD_write_data                                       3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_set                                       2     1      1     416
                                              5 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _UART1_SendString                                     6     4      2     131
                                              3 COMRAM     6     4      2
                     _UART1_SendChar
 ---------------------------------------------------------------------------------
 (3) _UART1_SendChar                                       1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_configure_cursor_blink                           1     1      0     261
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _input_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     464
                                              6 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     232
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_write_command                                    3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART_ISR                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _UART1_Init
   _UART1_SendString
     _UART1_SendChar
   _input_init
   _main_menu
     _LCD_clear
     _LCD_configure_cursor_blink
       _LCD_write_command
     _LCD_cursor_set
       _LCD_write_command
     _clear_diagnostic_codes
       _LCD_clear
       _LCD_configure_cursor_blink
       _LCD_cursor_set
       _LCD_write_string
         _LCD_write_data
           _LCD_pulse_clock
       _UART1_SendString
       _clear_parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _display_mm
         _LCD_cursor_set
         _LCD_write_string
       _parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _readADC
     _diagnostic_trouble_codes
       _LCD_clear
       _LCD_cursor_set
       _LCD_write_string
       _UART1_SendString
       _clear_parsing_notif
       _decode_dtc
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _fputc
                   _putch
               _fputc
               _read_prec_or_width
               _utoa
                 ___lwdiv
                 ___lwmod
                 _pad
                   _fputc
                   _fputs
                     _fputc
               _xtoa
                 _pad
       _parsing_notif
       _sscanf
         _vfscanf
           _vfsfcnvrt
             _atox
               ___strtoxll
                 ___omul
               _fgetc
                 _getch
               _skipws
                 _fgetc
                 _ungetc
               _ungetc
             _fgetc
             _skipws
             _ungetc
       _strstr
         _strchr
         _strlen
         _strncmp
     _display_mm
     _display_system_info
       _LCD_cursor_set
       _LCD_write_string
       _print_ELMVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
       _print_SAEVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
     _live_reading_mode
       _print_AI_Temp
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _hex_char_to_value
         _parsing_notif
         _sprintf
       _print_RPM
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _hex_char_to_value
         _parsing_notif
         _sprintf
       _print_Vbatt
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
         _strchr
     _readADC
   _welcome_splash
     _LCD_clear
     _LCD_cursor_set
     _LCD_write_string
     _LCD_write_variable
       _LCD_write_data
       ___aldiv
       ___almod
       ___lmul
       ___lwdiv (ARG)
     _UART1_SendString
     ___lwdiv
     ___lwmod
     _ccp1_init
     _tmr1_init

 _UART_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     124     48.4%
BITBANK0           160      0       0      0.0%
BANK0              160     74     151     94.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     89      91     96.8%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        70      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     616      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 01 00:10:50 2025

                               l200 327A                                 l203 32DA  
                               l150 33E8                                 l206 3362  
                               l302 3244                                 l312 24C4  
                               l153 3306                                 l209 337A  
                               l170 30C6                                 l218 1250  
                               l147 33C2                                 l323 0D00  
                               l500 29D2                                 l252 2D26  
                               l173 337E                                 l262 1B0A  
                               l182 33B2                                 l415 332C  
                               l176 3390                                 l280 1C2A  
                               l272 2302                                 l361 1666  
                               l418 334A                                 l258 19C8  
                               l266 222C                                 l194 1842  
                               l347 155A                                 l291 2C28  
                               l283 33D0                                 l179 33A2  
                               l276 1B1C                                 l381 2130  
                               l197 3248                                 l390 2FCA  
                               l470 19B6                                 l391 2FE0  
                               l287 2BA8                                 l295 2B16  
                               l463 1918                                 l392 2FF6  
                               l384 2034                                 l448 2DA0  
                               l561 1D34                                 l378 33DC  
                               l394 3012                                 l387 2CA8  
                               l299 2B96                                 l493 2E6E  
                               l574 221A                                 l494 2E7E  
                               l499 29B2                                 l980 2E14  
                               l973 2E0C                                 l990 2FB2  
                               l983 2FAA                                 _RPM 00C7  
                               _pad 2A70                                 wreg 0FE8  
                        _TXSTA1bits 0FAC                                l1203 2772  
                              l1206 27B0                                l1230 1F38  
                              l1208 27CE                                l1234 292C  
                              l1218 23EA                                l1330 09AE  
                              l1322 067C                                l1251 1476  
                              l1421 0346                                l1341 07B8  
                              l1238 2934                                l1190 2AE4  
                              l1422 03AC                                l1318 2EE8  
                              l1502 270E                                l1511 320E  
                              l1192 2B04                                l1264 3154  
                              l1169 3194                                l1433 0428  
                              l1329 06DA                                l1361 101C  
                              l1442 057E                                l1418 02B8  
                              l1187 2AA6                                l1291 32AC  
                              l1515 258A                                l1276 2888  
                              l1284 31D4                                l1428 03BC  
                              l4100 2D0C                                l4110 3156  
                              l1446 0648                                l1438 0476  
                              l4102 2D1C                                l1471 2A6E  
                              l4200 3322                                l3400 2DE0  
                              l4112 3162                                l1480 33EE  
                              l1384 260C                                l1385 2646  
                              l4202 3326                                l3402 2DF6  
                              l3410 2F50                                l4114 316A  
                              l1386 264E                                l4130 310A  
                              l4122 30C8                                l4106 2D24  
                              l4210 19F4                                l1483 33F4  
                              l1467 1E36                                l4060 3072  
                              l3404 2DFE                                l3420 2F96  
                              l3412 2F62                                l4116 3172  
                              l4124 30E2                                l4300 1B74  
                              l4220 1A1C                                l4212 19F8  
                              l4204 19B8                                l4054 332E  
                              l4062 307E                                l4070 32B8  
                              l3510 27C0                                l3502 276A  
                              l3406 2E00                                l3422 2F9E  
                              l3414 2F6A                                l3430 2A90  
                              l4118 3186                                l1486 30C8  
                              l4310 1BEE                                l4302 1B7E  
                              l4230 1AC4                                l4222 1A20  
                              l4214 19FC                                l4206 19D6  
                              l4056 3334                                l4064 309A  
                              l4080 336E                                l4072 32C4  
                              l3360 27FA                                l3504 277E  
                              l3408 2E06                                l3424 2FA4  
                              l3416 2F72                                l3440 2AF4  
                              l3432 2A9E                                l3520 2326  
                              l3512 2304                                l1488 3112  
                              l4128 30EE                                l4160 31E2  
                              l4320 1C24                                l4312 1BFA  
                              l4304 1BBE                                l4240 1AFA  
                              l4232 1ACE                                l4224 1A54  
                              l4208 19E6                                l4216 1A06  
                              l4058 3342                                l4066 309E  
                              l4074 334C                                l3362 2816  
                              l3354 27D0                                l3506 278E  
                              l3418 2F80                                l3370 31A2  
                              l3434 2AB2                                l3426 2A70  
                              l3530 2382                                l3522 234C  
                              l3514 2308                                l4162 31E6  
                              l4170 24E0                                l4330 2BD4  
                              l4090 2CD4                                l4082 2CAC  
                              l4322 1C28                                l4314 1C04  
                              l4306 1BCA                                l4242 1B04  
                              l4234 1ADA                                l4226 1A88  
                              l4218 1A0A                                l4250 224A  
                              l4068 32AE                                l4076 3356  
                              l3364 2848                                l3356 27E0  
                              l3508 2792                                l3372 31B0  
                              l3436 2AC2                                l3428 2A80  
                              l3532 2394                                l3524 234E  
                              l3516 2318                                l5220 2970  
                              l5300 01BC                                l5212 33EA  
                              l4164 3202                                l4180 252E  
                              l4412 2650                                l4340 2BFC  
                              l4332 2BD8                                l4324 2B98  
                              l4092 2CE4                                l4084 2CBC  
                              l4316 1C0E                                l4308 1BE4  
                              l4244 1B08                                l4236 1AE4  
                              l4228 1AAA                                l4252 2258  
                              l4260 226E                                l4500 218A  
                              l4078 3364                                l4190 3256  
                              l3358 27F0                                l3390 2DAA  
                              l3374 31B4                                l3438 2AC6  
                              l3534 23A4                                l3526 2354  
                              l3518 2320                                l3550 1E5A  
                              l3542 1E38                                l5222 2982  
                              l5214 2936                                l5310 01FA  
                              l5302 01BE                                l5230 29FC  
                              l4158 31D6                                l4182 2540  
                              l4174 24EC                                l4422 26B4  
                              l4414 2662                                l4350 2C26  
                              l4342 2C00                                l4334 2BDC  
                              l4326 2BB6                                l4094 2CF4  
                              l4086 2CCC                                l4318 1C18  
                              l4238 1AF0                                l4270 22B0  
                              l4262 2280                                l4254 225C  
                              l4246 221C                                l4510 21DA  
                              l4502 2192                                l4192 3264  
                              l3392 2DBC                                l3368 3196  
                              l3536 23BE                                l3528 2370  
                              l3560 1E8C                                l3552 1E60  
                              l3544 1E3C                                l5216 2942  
                              l5320 0254                                l5312 020A  
                              l5304 01D2                                l5240 1D36  
                              l5232 2A10                                l5224 29D4  
                              l4184 2568                                l4176 24FA  
                              l4168 24C6                                l4416 267A  
                              l4424 26DC                                l4344 2C0A  
                              l4328 2BC6                                l4336 2BE6  
                              l4360 2B46                                l4352 2B06  
                              l4280 2300                                l4272 22BA  
                              l4264 2284                                l4256 2260  
                              l4248 223A                                l4512 21E4  
                              l4504 219E                                l4440 2E4E  
                              l4432 2E16                                l3482 33D2  
                              l3490 2724                                l3394 2DC4  
                              l3538 23CE                                l3570 1EE2  
                              l3562 1E8E                                l3554 1E70  
                              l3546 1E4C                                l3810 13DE  
                              l3802 1380                                l5218 2950  
                              l5330 02AA                                l5322 025C  
                              l5314 021C                                l5250 1D9C  
                              l5242 1D46                                l5234 2A1C  
                              l5410 0684                                l5402 064A  
                              l4178 2512                                l4426 26EE  
                              l4418 26A8                                l4346 2C16  
                              l4338 2BEA                                l4370 2B6E  
                              l4362 2B4A                                l4354 2B24  
                              l4098 2CFC                                l4290 1B4C  
                              l4282 1B0C                                l4274 22E0  
                              l4266 228E                                l4258 226A  
                              l4450 1C50                                l4442 1C2C  
                              l4506 21AC                                l4514 21EA  
                              l4434 2E26                                l4530 1846  
                              l4522 3392                                l3484 33D4  
                              l3740 20DE                                l3732 2038  
                              l4196 330A                                l4188 3246  
                              l4700 154C                                l3492 2730  
                              l3580 288A                                l3396 2DCC  
                              l3388 2DA2                                l3572 1EF2  
                              l3564 1E94                                l3556 1E78  
                              l3548 1E54                                l3812 13FC  
                              l3804 138E                                l4380 23EC  
                              l5340 0312                                l5332 02D0  
                              l5324 026C                                l5316 0230  
                              l5308 01E8                                l5252 1DCE  
                              l5260 1E2E                                l5244 1D58  
                              l5236 2A22                                l5228 29EC  
                              l5420 06E6                                l5412 0690  
                              l5404 0654                                l5500 0D96  
                              l4428 2706                                l4348 2C22  
                              l4372 2B78                                l4356 2B34  
                              l4364 2B54                                l4292 1B50  
                              l4284 1B2A                                l4276 22F0  
                              l4268 22A4                                l4460 1C98  
                              l4452 1C5E                                l4444 1C2E  
                              l4516 21FA                                l4508 21CA  
                              l4436 2E34                                l4532 1854  
                              l4524 339A                                l3486 33DA  
                              l3742 20FE                                l3734 203A  
                              l4198 331A                                l3750 1F3E  
                              l4710 158A                                l4702 1550  
                              l3494 273C                                l3590 28FA  
                              l3582 2892                                l3398 2DDA  
                              l3574 1F0C                                l3558 1E7C  
                              l3566 1EB4                                l3822 1424  
                              l3806 13AA                                l4390 2410  
                              l4382 23F0                                l5350 0364  
                              l5342 0324                                l5334 02EC  
                              l5326 0288                                l5318 0242  
                              l5254 1E04                                l5246 1D68  
                              l5238 2A40                                l5270 2EB0  
                              l5430 0750                                l5422 06FA  
                              l5414 06A0                                l5406 065C  
                              l5510 0DF6                                l5502 0DA2  
                              l4374 2B84                                l4358 2B42  
                              l4366 2B58                                l4286 1B3A  
                              l4294 1B5A                                l4278 22FC  
                              l4470 1CE2                                l4462 1CA0  
                              l4454 1C6E                                l4446 1C3C  
                              l4518 220A                                l4438 2E44  
                              l4550 1912                                l4542 18BE  
                              l4534 1888                                l4526 33A4  
                              ?_pad 0011                                l3744 2118  
                              l3736 20B8                                l2960 32DC  
                              l3760 201C                                l3752 1FBC  
                              l4720 15B8                                l4712 159A  
                              l4704 1568                                l3496 274A  
                              l3488 2710                                l3584 28B4  
                              l3592 2906                                l3568 1ED0  
                              l3576 1F1C                                l3816 1410  
                              l3824 1444                                l3808 13C6  
                              l4384 23F8                                l5360 041A  
                              l5352 0388                                l5336 0304  
                              l5328 02A0                                l5344 032C  
                              l5280 00F6                                l5256 1E16  
                              l5248 1D80                                l5272 2EC4  
                              l5264 2E80                                l5440 078E  
                              l5432 0760                                l5424 070E  
                              l5416 06B6                                l5408 0670  
                              l5520 0E52                                l5504 0DB6  
                              l4376 2B90                                l4368 2B6A  
                              l4288 1B48                                l4296 1B5E  
                              l4480 1D14                                l4472 1CF2  
                              l4464 1CAC                                l4456 1C72  
                              l4448 1C4C                                l4560 1978  
                              l4552 1928                                l4544 18F6  
                              l4536 1898                                l4528 1844  
                              l4800 1692                                l3746 212C  
                              l3738 20BC                                l2970 32FC  
                              l2962 32EE                                l2954 33B4  
                              l3922 337E                                l3930 2FDC  
                              l3762 2030                                l3754 1FC0  
                              l4730 1606                                l4722 15CE  
                              l4714 159E                                l4706 1578  
                              l3498 2758                                l3586 28C0  
                              l3770 12AC                                l4386 2400  
                              l4394 2418                                l5370 0484  
                              l5362 0432                                l5354 03DC  
                              l5346 033E                                l5338 0310  
                              l5290 0160                                l5282 0112  
                              l5274 00E0                                l5258 1E1E  
                              l5266 2E84                                l5442 07A2  
                              l5434 0764                                l5450 07EC  
                              l5426 0728                                l5418 06C8  
                              l5522 0E5E                                l5530 0E70  
                              l5506 0DD2                                l5514 0E02  
                              l5610 263A                                l5602 25E8  
                              l4378 2B94                                l4298 1B70  
                              l4570 33C8                                l4482 1D24  
                              l4474 1CF4                                l4466 1CBA  
                              l4458 1C82                                l4490 2142  
                              l4562 19A4                                l4554 1930  
                              l4538 189A                                l4810 16BC  
                              l4802 169C                                l2956 33DE  
                              l2972 32FE                                l2964 32F6  
                              l3924 338C                                l3932 2FF2  
                              l3756 1FE2                                l3748 1F3C  
                              l3940 2D2E                                l4732 1614  
                              l4724 15D8                                l4716 15B0  
                              l3588 28DC                                l3772 12B0  
                              l3828 1454                                l3764 1270  
                              l4388 2408                                l4396 246C  
                              l5380 05A8                                l5372 0512  
                              l5364 044A                                l5356 03F8  
                              l5348 0356                                l5292 0170  
                              l5284 0124                                l5276 00E2  
                              l5268 2E98                                l5460 0858  
                              l5452 0804                                l5436 0768  
                              l5428 073C                                l5532 0E84  
                              l5524 0E62                                l5516 0E24  
                              l5508 0DE8                                l5604 25F0  
                              l5612 327C                                l5700 0CC0  
                              l4572 33CC                                l4476 1CFE  
                              l4468 1CC4                                l4492 2152  
                              l4564 19A6                                l4556 1964  
                              l4548 190C                                l4820 16E2  
                              l4812 16C4                                l4804 16A8  
                              l2958 33E2                                l2974 3300  
                              l2966 32F8                                l3934 3008  
                              l3926 2FB6                                l3758 2002  
                              l3942 2D60                                l4734 1620  
                              l4726 15E4                                l4718 15B4  
                              l4742 163A                                l4670 149A  
                              l4662 1478                                l3790 1324  
                              l3782 12D2                                l3774 12B6  
                              l3766 1292                                l3950 3130  
                              l5374 0540                                l5382 05AA  
                              l5366 044E                                l5358 0410  
                              l5294 0180                                l5390 05F4  
                              l5286 0132                                l5278 00EE  
                              l5462 087C                                l5454 0820  
                              l5446 07C4                                l5438 0778  
                              l5470 08A4                                l5550 0F0E  
                              l5534 0E94                                l5518 0E3C  
                              l5606 2614                                l5614 3288  
                              l5702 0CCC                                l5630 09E2  
                              l5622 09B0                                l4750 321A  
                              l5710 101E                                l4478 1D04  
                              l4494 2156                                l4486 2132  
                              l4558 1966                                l4830 1758  
                              l4822 16EC                                l4814 16CC  
                              l4806 16B4                                l4760 2C5C  
                              l2976 3302                                l2968 32FA  
                              l3936 300C                                l3928 2FC6  
                              l3944 2D62                                l4728 15EA  
                              l4680 14D4                                l4672 14A4  
                              l4664 1480                                l3792 132E  
                              l3776 12BA                                l3784 12F0  
                              l3768 129E                                l3952 314C  
                              l5392 0604                                l5384 05BA  
                              l5376 0550                                l5296 0192  
                              l5288 0144                                l5480 0960  
                              l5472 08C4                                l5456 0834  
                              l5448 07D8                                l5464 088C  
                              l5560 0F7C                                l5552 0F1A  
                              l5544 0EB2                                l5608 2628  
                              l5616 3290                                l5704 0CD6  
                              l5640 0A1C                                l5632 09EE  
                              l5624 09C2                                l4752 3226  
                              l4568 33C4                                l5720 1050  
                              l5712 1022                                l4496 2164  
                              l4488 2134                                l4832 1760  
                              l4824 1714                                l4816 16DA  
                              l4808 16B8                                l4770 2C78  
                              l4762 2C5E                                l4754 2C2A  
                              l2978 3304                                l3938 2D28  
                              l4690 1512                                l4682 14DC  
                              l4674 14B0                                l4666 1484  
                              l3794 1350                                l3786 1300  
                              l3778 12CA                                l3946 3114  
                              l5394 0612                                l5378 059E  
                              l5386 05C0                                l5298 01AA  
                              l5482 0972                                l5466 089C  
                              l5458 0844                                l5474 08DA  
                              l5562 0F92                                l5554 0F3C  
                              l5546 0EC2                                l5538 0EA2  
                              l5490 0D02                                l5618 3298  
                              l5706 0CFA                                l5650 0A9E  
                              l5642 0A20                                l5634 09FE  
                              l5626 09CC                                l5802 11DC  
                              l5730 1090                                l5722 105A  
                              l5714 1026                                l4498 2174  
                              l4850 17BA                                l4842 1790  
                              l4834 1762                                l4826 173A  
                              l4818 16DE                                l4780 2C88  
                              l4772 2C7E                                l4764 2C60  
                              l4756 2C42                                l4692 151C  
                              l4684 14E6                                l4676 14B6  
                              l4668 148E                                l3796 135C  
                              l3788 1314                                l3948 3120  
                              l5396 061A                                l5388 05D4  
                              l5484 098A                                l5476 08EA  
                              l5468 08A0                                l5564 0FAA  
                              l5556 0F68                                l5548 0EE6  
                              l5492 0D26                                l5708 0CFE  
                              l5660 0B0C                                l5652 0AAA  
                              l5644 0A3E                                l5636 0A02  
                              l5628 09D8                                l4748 3210  
                              l5804 11E0                                l5820 1250  
                              l5740 10DA                                l5732 10A2  
                              l5724 106A                                l5716 1036  
                              l4860 181E                                l4844 1798  
                              l4852 17D6                                l4836 1764  
                              l4828 1746                                l4790 2CA4  
                              l4782 2C8A                                l4774 2C82  
                              l4766 2C62                                l4758 2C5A  
                              l4694 152A                                l4686 14F8  
                              l4678 14C2                                l3798 1370  
                              l5398 0628                                l5486 09A6  
                              l5478 094C                                l5574 1004  
                              l5566 0FBE                                l5558 0F6C  
                              l5494 0D32                                l5590 2594  
                              l5670 0B6A                                l5654 0AC8  
                              l5646 0A60                                l5638 0A14  
                              l5806 11EE                                l5750 1114  
                              l5742 10EC                                l5734 10B4  
                              l5726 107C                                l5718 1046  
                              l4862 182A                                l4854 17E4  
                              l4846 17A2                                l4838 1776  
                              l5830 2EF2                                l4784 2C8E  
                              l4776 2C84                                l4768 2C66  
                              l4696 153A                                l4688 150A  
                              l5576 1018                                l5568 0FD2  
                              l5496 0D52                                l5592 25A6  
                              l5680 0BFC                                l5672 0B7A  
                              l5664 0B2E                                l5656 0AE6  
                              l5648 0A80                                l5904 122A  
                              l5808 1200                                l5760 1154  
                              l5752 1126                                l5744 10F6  
                              l5736 10BE                                l5728 1086  
                              l4856 17F0                                l4848 17AE  
                              l4792 1668                                l5840 2F40  
                              l5832 2EF6                                l4786 2C94  
                              l4778 2C86                                l4698 1548  
                              l5906 2446                                l5498 0D74  
                              l5594 25B2                                l5690 0C56  
                              l5682 0C02                                l5674 0B9E  
                              l5666 0B3A                                l5658 0B04  
                              l5770 1186                                l5762 1166  
                              l5818 1212                                l5754 1134  
                              l5746 1100                                l5738 10C8  
                              l4858 1806                                l4794 1678  
                              l5842 2F44                                l5834 2F02  
                              l5826 2EEA                                l4788 2C9C  
                              l5908 1650                                l5596 25BA  
                              l5588 258C                                l5692 0C7C  
                              l5676 0BB4                                l5668 0B4A  
                              l5684 0C0A                                l5772 118A  
                              l5764 1174                                l5756 1142  
                              l5748 1106                                l4796 167C  
                              l5836 2F1A                                l5828 2EEE  
                              l5598 25D4                                l5694 0C8A  
                              l5686 0C28                                l5678 0BCC  
                              l5774 1198                                l5766 1178  
                              l5758 1146                                l4798 1686  
                              l5838 2F26                                l5696 0C96  
                              l5688 0C44                                l5784 11BC  
                              l5776 11AA                                l5768 117C  
                              l5698 0CB2                                l5786 11D4  
                              STR_1 FFA6                                STR_2 FEAA  
                              STR_3 FF2F                                STR_4 FFAC  
                              STR_5 FFD0                                STR_6 FE99  
                              STR_7 FFD0                                STR_8 FEEE  
                              STR_9 FECC                                u3000 23A4  
                              u3001 23A0                                u3010 23BE  
                              u3011 23BA                                u3100 28B4  
                              u3020 23CE                                u3101 28B0  
                              u3021 23CA                                u3110 292C  
                              u3030 1E70                                u3111 2928  
                              u3031 1E6C                                u3050 1ED0  
                              u3051 1ECC                                u3060 1EE2  
                              u3061 1EDE                                u3045 1EA0  
                              u3070 1EF2                                u3071 1EEE  
                              u4120 30C6                                u3080 1F0C  
                              u4200 310A                                u5000 178C  
                              u4121 30C2                                u3081 1F08  
                              u4201 3106                                u5001 1788  
                              u3090 1F1C                                u4130 2CBC  
                              u3091 1F18                                u4131 2CB8  
                              u2700 2848                                u4300 2568  
                              u4140 2CCC                                u2701 2844  
                              u4301 2564                                u4141 2CC8  
                              u4310 3256                                u2710 31D4  
                              u4150 2CE4                                u4311 3252  
                              u2711 31D0                                u4151 2CE0  
                              u4320 331A                                u2800 2F96  
                              u3600 13C6                                u6000 07D8  
                              u4160 2CF4                                u4400 1B2A  
                              u3505 205C                                u4321 3316  
                              u2801 2F92                                u3601 13C2  
                              u6001 07D4                                u4161 2CF0  
                              u4401 1B26                                u2810 2A80  
                              u6010 0804                                u4250 3202  
                              u4170 2D0C                                u4410 1B48  
                              u4330 19D6                                u3515 2082  
                              u2811 2A7C                                u6011 0800  
                              u4251 31FE                                u4171 2D08  
                              u4411 1B44                                u4331 19D2  
                              u2820 2A9E                                u6100 098A  
                              u6020 0820                                u4260 24E0  
                              u4180 2D1C                                u4420 1B70  
                              u4340 19F4                                u3525 1F46  
                              u2821 2A9A                                u6101 0986  
                              u6021 081C                                u4261 24DC  
                              u4181 2D18                                u4421 1B6C  
                              u4341 19F0                                u2670 27E0  
                              u2750 2DBC                                u2830 2AE4  
                              u3550 1292                                u6110 099C  
                              u6030 0834                                u4190 30E2  
                              u4270 2512                                u4510 2662  
                              u4430 2BB6                                u4350 1A1C  
                              u3535 1F60                                u2671 27DC  
                              u2751 2DB8                                u2831 2AE0  
                              u3551 128E                                u6111 0996  
                              u6031 0830                                u4191 30DE  
                              u4271 250E                                u4511 265E  
                              u4431 2BB2                                u4351 1A18  
                              u2680 27F0                                u2760 2DDA  
                              u2840 2AF4                                u3560 1300  
                              u6120 099E                                u6040 0858  
                              u6200 0E52                                u4280 252E  
                              u4520 26A8                                u4440 2BD4  
                              u4360 223A                                u4600 1CBA  
                              u3545 1F86                                u2681 27EC  
                              u2761 2DD6                                u2841 2AF0  
                              u3561 12FC                                u4505 248E  
                              u6041 0854                                u6201 0E4E  
                              u4281 252A                                u4521 26A4  
                              u4441 2BD0                                u4361 2236  
                              u4601 1CB6                                u2690 2816  
                              u2930 2724                                u2770 2DF6  
                              u3570 1324                                u6050 087C  
                              u6210 0E84                                u6130 0D26  
                              u4290 2540                                u4530 26EE  
                              u4450 2BFC                                u4370 2258  
                              u4610 1CE2                                u2691 2812  
                              u2931 2720                                u2771 2DF2  
                              u3571 1320                                u5411 293C  
                              u6051 0878                                u6211 0E80  
                              u6131 0D22                                u4291 253C  
                              u4531 26EA                                u4451 2BF8  
                              u4371 2254                                u4611 1CDE  
                              u3900 2D5C                                u2940 274A  
                              u2780 2F62                                u3580 1350  
                              u5420 2950                                u5500 1D9C  
                              u6060 08C4                                u6300 1018  
                              u6220 0EE6                                u6140 0D4E  
                              u4540 2706                                u4460 2B24  
                              u4380 2280                                u4620 1D14  
                              u4700 18BA                                u2941 2746  
                              u2781 2F5E                                u3581 134C  
                              u5421 294C                                u5501 1D98  
                              u6061 08C0                                u6301 1014  
                              u6221 0EE2                                u6141 0D48  
                              u4541 2702                                u4461 2B20  
                              u4381 227C                                u4621 1D10  
                              u4701 18B6                                u3910 2D90  
                              u2950 2766                                u2790 2F80  
                              u3590 13AA                                u5430 29B2  
                              u5510 1E16                                u6070 08DA  
                              u6230 0F0E                                u6150 0D50  
                              u6310 25E4                                u4470 2B42  
                              u4390 22E0                                u4630 2142  
                              u4550 2E34                                u4710 1908  
                              u3495 2042                                u2951 2762  
                              u2791 2F7C                                u3591 13A6  
                              u5431 29AE                                u5511 1E12  
                              u6071 08D6                                u6231 0F0A  
                              u6311 25E0                                u4471 2B3E  
                              u4391 22DC                                u4631 213E  
                              u4551 2E30                                u4711 1904  
                              u3920 2DA0                                u2960 27B0  
                              u5600 0192                                u5440 29E8  
                              u5520 2E98                                u6080 0960  
                              u6240 0F3C                                u6160 0D74  
                              u6320 260C                                u6400 0AC8  
                              u4480 2B6A                                u4640 2164  
                              u4560 2E6E                                u4720 1978  
                              u3921 2D9C                                u2961 27AC  
                              u5601 018E                                u5441 29E4  
                              u5521 2E94                                u6081 095C  
                              u6241 0F38                                u6161 0D70  
                              u6321 2608                                u6401 0AC4  
                              u4481 2B66                                u4641 2160  
                              u4561 2E6A                                u4721 1974  
                              u3850 338C                                u2970 27C0  
                              u3930 314C                                u5610 01AA  
                              u5450 29FC                                u5530 2EB0  
                              u6090 0972                                u6250 0F64  
                              u6170 0D96                                u6330 2628  
                              u6410 0AE6                                u4570 1C3C  
                              u4650 218A                                u4730 19B6  
                              u3851 3388                                u3907 2D52  
                              u2971 27BC                                u3931 3148  
                              u5611 01A6                                u5451 29F8  
                              u5531 2EAC                                u6091 096E  
                              u6251 0F60                                u6171 0D92  
                              u6331 2624                                u6411 0AE2  
                              u4571 1C38                                u4651 2186  
                              u4731 19B2                                u3860 2FC6  
                              u4900 150A                                u2980 2382  
                              u5700 02A0                                u5620 01BC  
                              u5460 2A10                                u5540 2EE8  
                              u6260 0F92                                u6180 0DD2  
                              u6340 263A                                u6420 0B04  
                              u6500 106A                                u4580 1C5E  
                              u4660 21AC                                u3861 2FC2  
                              u3917 2D86                                u4901 1506  
                              u2981 237E                                u5701 029C  
                              u5621 01B8                                u5461 2A0C  
                              u5541 2EE4                                u6261 0F8E  
                              u6181 0DCE                                u6341 2636  
                              u6421 0B00                                u6501 1066  
                              u4581 1C5A                                u4661 21A8  
                              u3870 2FDC                                u4910 152A  
                              u2990 2394                                u5710 02D0  
                              u5630 01E4                                u5470 2A40  
                              u6270 0FAA                                u6190 0E24  
                              u6430 0B2A                                u6350 0A14  
                              u6510 107C                                u4590 1C98  
                              u4670 21CA                                u3871 2FD8  
                              u4911 1526                                u2991 2390  
                              u4495 2424                                u5711 02CC  
                              u5631 01E0                                u5551 00E8  
                              u5471 2A3C                                u6271 0FA6  
                              u6191 0E20                                u6431 0B26  
                              u6351 0A10                                u6511 1078  
                              u4591 1C94                                u4671 21C6  
                              u3880 2FF2                                u4920 1548  
                              u5800 044A                                u5720 02EC  
                              u5640 01FA                                u5560 0112  
                              u5480 1D46                                u6280 0FBE  
                              u6440 0C28                                u6360 0A3E  
                              u6600 1198                                u6520 10A2  
                              u4680 21FA                                u3881 2FEE  
                              u4921 1544                                u5801 0446  
                              u5721 02E8                                u5641 01F6  
                              u5561 010E                                u5481 1D42  
                              u6281 0FBA                                u6441 0C24  
                              u6361 0A3A                                u6601 1194  
                              u6521 109E                                u4681 21F6  
                              u3890 3008                                u4930 1568  
                              u5810 0472                                u5730 0304  
                              u5650 021C                                u5570 0124  
                              u5490 1D58                                u6290 1000  
                              u6450 0C44                                u6370 0A5C  
                              u6610 11B8                                u6530 10B4  
                              u4690 1854                                u3891 3004  
                              u4931 1564                                u5811 046E  
                              u5731 0300                                u5651 0218  
                              u5571 0120                                u5491 1D54  
                              u6291 0FFC                                u6451 0C40  
                              u6371 0A58                                u6611 11B4  
                              u6531 10B0                                u4691 1850  
                              u4940 1586                                u5820 0484  
                              u5740 0324                                u5660 0230  
                              u5580 0144                                u5900 06B6  
                              u6460 0C56                                u6380 0A80  
                              u6620 11EE                                u6540 10DA  
                              u4941 1582                                u5821 0480  
                              u5741 0320                                u5661 022C  
                              u5581 0140                                u5901 06B2  
                              u6461 0C52                                u6381 0A7C  
                              u6621 11EA                                u6541 10D6  
                              u4950 15B0                                u5830 0540  
                              u5750 033E                                u5670 0242  
                              u5590 015C                                u5910 06C8  
                              u6470 0C7C                                u6390 0A9E  
                              u6630 120E                                u6550 10EC  
                              u4951 15AC                                u5831 053C  
                              u5751 033A                                u5671 023E  
                              u5591 0158                                u5911 06C4  
                              u6471 0C78                                u6391 0A9A  
                              u6631 120A                                u6551 10E8  
                              u4880 14D4                                u5840 0550  
                              u5760 0356                                u5680 0254  
                              u5920 06DA                                u6480 0CB2  
                              u6560 1114                                u4960 16DA  
                              u4881 14D0                                u5841 054C  
                              u5761 0352                                u5681 0250  
                              u5921 06D6                                u6481 0CAE  
                              u6561 1110                                u4961 16D6  
                              u4890 14F8                                u5850 057E  
                              u5770 0364                                u5690 0288  
                              u5930 06FA                                u6570 1134  
                              u6490 1046                                u4970 173A  
                              u4891 14F4                                u5851 057A  
                              u5771 0360                                u5691 0284  
                              u5931 06F6                                u6707 115C  
                              u6571 1130                                u6491 1042  
                              u4971 1736                                u5860 05D4  
                              u5780 03F8                                u5940 070E  
                              u6580 1154                                u4980 1758  
                              u5861 05D0                                u5781 03F4  
                              u5941 070A                                u6717 11A0  
                              u6581 1150                                u4981 1754  
                              u5870 0604                                u5790 0410  
                              u5950 0728                                u6590 1174  
                              u4990 1776                                u6807 1530  
                              u5871 0600                                u5791 040C  
                              u5951 0724                                u6727 11C8  
                              u6591 1170                                u4991 1772  
                              u6647 2F0E                                u5880 0612  
                              u5960 0750                                u6817 156E  
                              u5881 060E                                u5961 074C  
                              u6737 11F6                                u6657 2F32  
                              u5970 078E                                u5890 0670  
                              u6827 15F4                                u5971 078A  
                              u5891 066C                                u6747 125C  
                              u6667 17C4                                u5980 07A2  
                              u6837 325C                                u5981 079E  
                              u6757 2240                                u6677 1810  
                              u5990 07B4                                u6847 2C4C  
                              u5991 07B0                                u6767 19DC  
                              u6687 1834                                u6857 2C6C  
                              u6777 1B30                                u6697 111C  
                              u6867 2C7A                                u6787 2B2A  
                              u6877 333A                                u6797 2BBC  
                              u6887 33D6                      _UART1_SendChar 337C  
                 _live_reading_mode 33C4                   _air_intake_string 00D3  
                              _dbuf 015C                                _ctoa 2710  
                              _main 2EEA                                _asup 00CE  
                              _atox 064A                                _ncnv 00B9  
                              _prec 00C1                                pad@i 0017  
                              pad@p 0014                                fsr0h 0FEA  
                              fsr1h 0FE2                     ??_print_AI_Temp 004E  
                              indf0 0FEF                                fsr2h 0FDA  
                              fsr0l 0FE9                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
                              btemp 005C                                _utoa 2304  
                              _xtoa 1E38                  ?_live_reading_mode 0001  
                       atox@seen_0x 0064                                prodh 0FF4  
                              prodl 0FF3               __end_of_parsing_notif 3364  
                              start 00DC                    __end_of_ADC_init 33EA  
                      ___param_bank 0000                 ??_live_reading_mode 0051  
                       ?_UART1_Init 0001                               ??_pad 0016  
                      _BAUDCON1bits 0FB8                    __end_of_LCD_init 2CAA  
          _diagnostic_trouble_codes 09B0                     __end_of___aldiv 1D36  
                   __end_of___almod 221C                               ?_ctoa 000B  
                             ?_main 0001                               ?_atox 004B  
                             STR_10 FFA6                               STR_11 FEDD  
                             STR_20 FF55                               STR_12 FEFF  
                             STR_13 FFFC                               STR_21 FFCA  
                             STR_14 FFFA                               STR_22 FFE6  
                             STR_30 FFB2                               STR_31 FFD5  
                             STR_23 FFBE                               STR_15 FFB8  
                             STR_24 FF57                               STR_32 FF4E  
                             STR_16 FFF2                               STR_40 FE85  
                             STR_17 FF55                               STR_25 FFF2  
                             STR_41 FF77                               STR_33 FF4D  
                             STR_26 FFEE                               STR_18 FFEA  
                             STR_34 FF9B                               STR_42 FF5B  
                             STR_27 FFF8                               STR_19 FFC4  
                             STR_43 FF3E                               STR_35 FF1F  
                             STR_28 FFD0                               STR_36 FF85  
                             STR_44 FEBB                               STR_29 FFE2  
                             STR_45 FFDE                               STR_37 FFDA  
                             STR_38 FFF5                               STR_46 FF69  
                             STR_39 FFF5                               STR_47 FF90  
                             STR_48 FF0F                               STR_49 FF90  
                             ?_utoa 0019                               ?_xtoa 0019  
                   __end_of___lwdiv 2E16                     __end_of___lwmod 2FB4  
                             i2l164 00D0                        vfpfcnvrt@fmt 0026  
                             _TXREG 0FAD                               _A_rpm 00CB  
                             _B_rpm 00C9                 ___lmul@multiplicand 0007  
                  __end_of_UART_ISR 00DC                     __end_of_readADC 327C  
                             _fgetc 1D36              __end_of_UART1_SendChar 3392  
                             _flags 00CF                               _getch 33EA  
      welcome_splash@CCP1IF_counter 0020                 read_prec_or_width@c 0007  
                             _errno 00BD                 read_prec_or_width@n 0008  
                             _fputc 27D0           __end_of_live_reading_mode 33D2  
                             _fputs 3196                               pad@fp 0011  
                             _width 00BF                               ctoa@c 000C  
                             _putch 33F4                               ctoa@l 000E  
                             ctoa@w 0010                               atox@c 0068  
                             atox@i 0066                               atox@w 0060  
                             tablat 0FF5                   UART1_SendString@i 0008  
           ?_clear_diagnostic_codes 0001                     __end_of_vfscanf 2650  
                             ttemp5 005D                               ttemp6 0060  
                             ttemp7 0064                               utoa@d 001A  
                             utoa@i 001F                               utoa@p 001C  
                             utoa@w 001D                               status 0FD8  
                             wtemp8 005D                     __end_of_sprintf 3196  
                             xtoa@c 0022                               xtoa@d 001A  
                             xtoa@i 0023                               xtoa@p 001F  
                             xtoa@w 0020                     __end_of_strncmp 258C  
                 _dbuf@doscan$F2242 013C                     __initialization 3014  
                      __end_of_ctoa 27D0                        __end_of_main 2F50  
                      __end_of_atox 09B0                        __end_of_utoa 23EC  
                      __end_of_xtoa 1F3A                        vfsfcnvrt@fmt 006B  
                      vfsfcnvrt@llu 0071                   ?_LCD_write_string 0006  
                            ??_ctoa 000D                              ??_main 00A8  
                            ??_atox 004D                              ??_utoa 001C  
                            ??_xtoa 001C                       __activetblptr 0002  
                ??_LCD_write_string 0008         __end_of_clear_parsing_notif 337C  
        __end_of_read_prec_or_width 2936                   __end_of_LCD_clear 334C  
                            ?_fgetc 0005                              ?_getch 0003  
                            _ADCON0 0FC2                              _ADCON1 0FC1  
                            _ADCON2 0FC0                     ?_UART1_SendChar 0001  
                            ?_fputc 0003                              ?_fputs 000B  
                            _ADRESH 0FC4                              _ADRESL 0FC3  
                            _CCPR1H 0FBF                              _CCPR1L 0FBE  
                            ?_putch 0001                              _ANSELC 0F3A  
    __end_of_clear_diagnostic_codes 1668                              i2l5000 0012  
                            i2l5010 0056                              i2l5002 0020  
                            i2l5020 009C                              i2l5012 0066  
                            i2l5004 002E                              i2l5022 00AE  
                            i2l5014 0078                              i2l5006 0040  
                            i2l5024 00BE                              i2l5016 0088  
                            i2l5008 0044                              i2l5026 00CC  
                            i2l5018 008A           diagnostic_trouble_codes@i 00A4  
                            _RCREG1 0FAE                 _display_system_info 3210  
            LCD_write_string@string 0006                              _OSCCON 0FD3  
                     vfpfcnvrt@done 002B                              _SPBRG1 0FAF  
     diagnostic_trouble_codes@F6622 00B4       diagnostic_trouble_codes@F6624 00B1  
     clear_diagnostic_codes@opt_sel 000D                    _UART1_SendString 3072  
   LCD_write_variable@temp_variable 0018                        vfprintf@cfmt 0036  
                      ___strtoxll@a 0040                        ___strtoxll@c 004A  
                      ___strtoxll@s 001B                              ___lmul 2E16  
                            ___omul 2936                           ??___aldiv 000B  
                         ??___almod 000B                           ??___lwdiv 0007  
      ??_LCD_configure_cursor_blink 0006                           ??___lwmod 0007  
                            _buffer 0200       diagnostic_trouble_codes@byte1 009E  
     diagnostic_trouble_codes@byte2 00A0                read_prec_or_width@ap 0004  
              ?_display_system_info 0001                              clear_0 303C  
                            clear_1 304E                              clear_2 305A  
                            _nmatch 00B7                              fgetc@c 000C  
                            isa$std 0001                              _result 005A  
                            _sscanf 327C                              pad@buf 0012  
                            _skipws 2E80                              _ungetc 29D4  
                            ctoa@fp 000B                              atox@ep 0062  
                            atox@fp 004B                              _strchr 30C8  
                            _strlen 31D6                              _strstr 2650  
                         ??_readADC 0005                              fputc@c 0003  
                            fputs@c 000E                              fputs@i 000F  
                            fputs@s 000B                    ??_welcome_splash 001C  
                      __mediumconst FE84                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                         ?_ADC_init 0001                              putch@c 0001  
                         ??_vfscanf 0057                    __end_of_vfprintf 3156  
                            utoa@fp 0019                    ___strtoxll@flags 003F  
                         ??_sprintf 0042                    ___strtoxll@limit 0037  
                            xtoa@fp 0019                           ??_strncmp 0009  
                      ?_print_Vbatt 0001                          __accesstop 0060  
           __end_of__initialization 3064                           ?_LCD_init 0001  
                     ___rparam_used 0001                     UART1_SendChar@c 0003  
                    __pcstackCOMRAM 0001                        __pidataBANK0 33F0  
                         ?_UART_ISR 0001                      _LCD_entry_mode 00F5  
                     __end_of_fgetc 1E38                   _LCD_write_command 2036  
                     __end_of_getch 33F0                       __end_of_fputc 288A  
                     __end_of_fputs 31D6               ??_display_system_info 000C  
                     __end_of_putch 33F6                      _LCD_cursor_set 2FB4  
                ?_LCD_write_command 0001          __end_of_LCD_write_variable 19B8  
                        ___ungetbuf 00AE                          ___ungetcnt 00CD  
                 _hex_char_to_value 2CAA                  ?_hex_char_to_value 0001  
               ??_LCD_write_command 0003                          ??_ADC_init 0003  
                        ___strtoxll 00E0                       decode_dtc@dtc 0052  
                           ??_fgetc 0007                             ??_getch 0005  
                _width@doscan$F2239 00BB                             ??_fputc 0006  
                           ??_fputs 000E                             ??_putch 0003  
                        __pbssBANK0 00AA                          __pbssBANK1 0100  
                        __pbssBANK2 0200                 ??_hex_char_to_value 0003  
                        _decode_dtc 23EC                          ??_LCD_init 0007  
        ??_diagnostic_trouble_codes 0096           __end_of_LCD_write_command 2132  
                           ?___lmul 0003                             ?___omul 0003  
                      ??_UART1_Init 0003                          ??_UART_ISR 0001  
            __end_of_LCD_cursor_set 3014                 ___omul@multiplicand 000B  
                    ___lmul@product 000B           __end_of_hex_char_to_value 2D28  
                 __end_of_ccp1_init 33A4                             ?_sscanf 0085  
                           ?_skipws 000E                             ?_ungetc 0003  
                           ?_strchr 0003                             ?_strlen 0003  
                           ?_strstr 000A                             _SPBRGH1 0FB0  
                        _display_mm 32AE            LCD_write_command@command 0005  
                __end_of_UART1_Init 3308                             _RX_char 00D1  
             __end_of_print_AI_Temp 1C2C                             __Hparam 0000  
                           __Lparam 0000  __end_of_LCD_configure_cursor_blink 332E  
        _LCD_configure_cursor_blink 3308                    _message_complete 00D0  
                     ___strtoxll@cp 0048                             ___aldiv 1C2C  
                           ___almod 2132                     ?_LCD_cursor_set 0006  
                    _LCD_write_data 1F3A                             ___lwdiv 2DA2  
        LCD_write_variable@variable 0011                             ___lwmod 2F50  
                         ?_vfprintf 0032                   __end_of_main_menu 1270  
                           __pcinit 3014                             __ramtop 1000  
                           __ptext0 2EEA                             __ptext1 1668  
                           __ptext2 33A4                             __ptext3 3392  
                           __ptext4 1844                             __ptext5 2E16  
                           __ptext6 2132                             __ptext7 1C2C  
                           __ptext8 101E                             __ptext9 33C4  
                           _readADC 3246                           _T1CONbits 0FCD  
                  ??_UART1_SendChar 0003               read_prec_or_width@fmt 0003  
                  ___aldiv@dividend 0003            __end_of_UART1_SendString 30C8  
                           fgetc@fp 0005                         ?___strtoxll 001B  
                           _vfscanf 258C                          _input_init 33B4  
                           _sprintf 3156                             atox@pll 004C  
                           _strncmp 24C6                           _LCD_clear 332E  
              end_of_initialization 3064                   __end_of_tmr1_init 33B4  
                       ?_decode_dtc 004E                      ___omul@product 0013  
                           fputc@fp 0005                       __Lmediumconst FE84  
                           fputs@fp 000D                  _read_prec_or_width 288A  
              LCD_cursor_set@column 0006                   __end_of_print_RPM 1B0C  
                     ?_print_ELMVer 0001                        _buffer_count 00D2  
               _LCD_display_control 00F6              __end_of_LCD_write_data 2036  
                 __end_of_vfpfcnvrt 1478                       ?_print_SAEVer 0001  
                         _RCSTAbits 0FAB                             sscanf@f 008B  
                           sscanf@s 0085                             skipws@c 0010  
                  ___aldiv@quotient 000D                   __end_of_vfsfcnvrt 101E  
                           postdec1 0FE5                             postdec2 0FDD  
               ?_read_prec_or_width 0003                             ungetc@c 0003  
                           postinc0 0FEE                             postinc1 0FE6  
                           postinc2 0FDE                    vfpfcnvrt@convarg 002C  
                        ??_vfprintf 0036                   ___strtoxll@endptr 001D  
                           strchr@c 0005                             strchr@s 0003  
                           strlen@a 0005                             strlen@s 0003  
                           strstr@h 000A                             strstr@n 000C  
                 ___strtoxll@prev_a 002B                           _PORTBbits 0F81  
                         _PORTCbits 0F82                   ??_LCD_pulse_clock 0003  
                        _rpm_string 00E3                           _TRISAbits 0F92  
                         _TRISBbits 0F93                           _TRISCbits 0F94  
                         _TRISDbits 0F95                  vfscanf@saved_errno 007F  
              ??_read_prec_or_width 0005                         ?_display_mm 0001  
                        ?_LCD_clear 0001                     _air_intake_temp 00C3  
                       _CCP1CONbits 0FBD                           _TXSTAbits 0FAC  
  __end_of_diagnostic_trouble_codes 0D02                      ??_print_ELMVer 000B  
                     _parsing_notif 334C                      ??_print_SAEVer 000B  
                       vfscanf@cfmt 0083                     ?_LCD_write_data 0001  
                    __end_of___lmul 2E80                      __end_of___omul 29D4  
                       vfpfcnvrt@ap 0027                         vfpfcnvrt@cp 0030  
                       vfpfcnvrt@fp 0025                      __end_of_sscanf 32AE  
                    __end_of_skipws 2EEA                      __end_of_ungetc 2A70  
                    __end_of_strchr 3114                      __end_of_strlen 3210  
                    __end_of_strstr 2710                 start_initialization 3014  
                       __end_of_pad 2B06                         ?_input_init 0001  
                       vfsfcnvrt@ap 006C                         vfsfcnvrt@fp 006A  
                       vfsfcnvrt@vp 006E                  _LCD_write_variable 1844  
                 ___omul@multiplier 0003                 LCD_write_variable@i 0016  
               ?_LCD_write_variable 0011                      ?_parsing_notif 0001  
       __end_of_display_system_info 3246                     ___strtoxll$2292 0033  
                   ___strtoxll$2293 0035                         vfprintf@fmt 0033  
                          ??___lmul 000B                            ??___omul 0013  
                    decode_dtc@type 0059                         __pdataBANK0 00F3  
                          ??_sscanf 0057                            ??_skipws 000F  
                   ___strtoxll@base 001E                            ??_ungetc 0006  
                          ??_strchr 0007                            ??_strlen 0005  
                          ??_strstr 000E                ??_LCD_write_variable 0016  
          ??_clear_diagnostic_codes 000B                         __pbssCOMRAM 005A  
                         _ccp1_init 3392                       __pcstackBANK0 0060  
                       ??_LCD_clear 0006                    _LCD_write_string 2D28  
                      decode_dtc@b1 004E                        decode_dtc@b2 0050  
                  ??_LCD_cursor_set 0007                    ___lwdiv@dividend 0003  
   LCD_configure_cursor_blink@state 0006                           __pintcode 0008  
                     __pmediumconst FE84                            ?___aldiv 0003  
                          ?___almod 0003         ?_LCD_configure_cursor_blink 0001  
                          ?___lwdiv 0003                            ?___lwmod 0003  
            UART1_SendString@string 0004                           _dtc_codes 0100  
                  ___almod@dividend 0003                            ?_readADC 0003  
                       __smallconst FE84                           _main_menu 101E  
                        ?_ccp1_init 0001           ?_diagnostic_trouble_codes 0001  
              __end_of_print_ELMVer 2C2A                        ??___strtoxll 0023  
                          _ADC_init 33DE                __end_of_print_SAEVer 2B98  
                 ?_UART1_SendString 0004                            ?_vfscanf 007B  
                  ___lwdiv@quotient 0007                            ?_sprintf 0038  
                LCD_write_data@data 0005                            ?_strncmp 0003  
                ??_UART1_SendString 0006                        ??_decode_dtc 0054  
                   ___aldiv@divisor 0007                     ___aldiv@counter 000B  
                   ??_parsing_notif 000B                            _LATDbits 0F8C  
                          _LCD_init 2C2A                            _PIE1bits 0F9D  
                         _tmr1_init 33A4                            i2u520_40 0066  
                          i2u520_41 0062                            i2u521_40 0078  
                          i2u521_41 0074                            _PIR1bits 0F9E  
                          i2u522_40 009C                            i2u522_41 0098  
                          i2u523_40 00AE                            i2u523_41 00AA  
                          i2u524_40 00BE                            i2u516_40 0020  
                          i2u524_41 00BA                            i2u516_41 001C  
                          i2u517_40 002E                            i2u517_41 002A  
                          i2u518_40 0040                            i2u518_41 003C  
                          i2u519_40 0056                            i2u519_41 0052  
                   _LCD_pulse_clock 33D2                            _UART_ISR 0008  
                __end_of___strtoxll 064A                           _print_RPM 19B8  
               _clear_parsing_notif 3364                           _vfpfcnvrt 1270  
                         _vfsfcnvrt 0D02                          _ADCON0bits 0FC2  
                __end_of_decode_dtc 24C6                          ?_main_menu 0001  
                        vfscanf@fmt 007C                        ??_display_mm 000B  
                        vfpfcnvrt@c 002A                       ??_print_Vbatt 000B  
                 ___lmul@multiplier 0003                           copy_data0 3028  
              ?_clear_parsing_notif 0001                          vfsfcnvrt@c 0079  
                        vfsfcnvrt@i 006F                    ??_LCD_write_data 0003  
                        ?_tmr1_init 0001                            __Hrparam 0000  
          LCD_write_variable@digits 0017                           modff@F522 00AA  
                        vfprintf@ap 0035                            __Lrparam 0000  
                        vfprintf@fp 0032                  hex_char_to_value@c 0003  
                 LCD_cursor_set@row 0007                          ?_print_RPM 0001  
                __end_of_display_mm 32DC                          ?_vfpfcnvrt 0025  
                        ?_vfsfcnvrt 006A                          _ANSELAbits 0F38  
                        _ANSELBbits 0F39                          _ANSELCbits 0F3A  
                        sprintf@fmt 003A                         ??_ccp1_init 0003  
                   ___lwdiv@divisor 0005                     ___lwdiv@counter 0009  
                      ??_input_init 0003                            __ptext10 221C  
                          __ptext11 19B8                            __ptext20 31D6  
                          __ptext12 1B0C                            __ptext21 30C8  
                          __ptext13 2CAA                            __ptext30 00E0  
                          __ptext22 327C                            __ptext14 3210  
                          __ptext31 2936                            __ptext23 258C  
                          __ptext15 2B06                            __ptext40 2F50  
                          __ptext32 23EC                            __ptext24 0D02  
                          __ptext16 2B98                            __ptext41 2DA2  
                          __ptext33 3156                            __ptext25 064A  
                          __ptext17 09B0                            __ptext50 3364  
                          __ptext42 288A                            __ptext34 3114  
                          __ptext26 2E80                            __ptext18 2650  
                          __ptext51 2D28                            __ptext43 2710  
                          __ptext35 1270                            __ptext27 29D4  
                          __ptext19 24C6                            __ptext60 332E  
                          __ptext52 1F3A                            __ptext44 27D0  
                          __ptext36 1E38                            __ptext28 1D36  
                          __ptext61 2036                            __ptext53 2FB4  
                          __ptext45 33F4                            __ptext37 2304  
                          __ptext29 33EA                            __ptext62 33D2  
                          __ptext54 3072                            __ptext46 1478  
                          __ptext38 2A70                            __ptext63 33DE  
                          __ptext55 337C                            __ptext47 3246  
                          __ptext39 3196                            __ptext56 3308  
                          __ptext48 334C                            __ptext57 33B4  
                          __ptext49 32AE                            __ptext58 32DC  
                          __ptext59 2C2A               ??_clear_parsing_notif 000B  
                   ___almod@divisor 0007                     ___almod@counter 000B  
                    _welcome_splash 1668                ___strtoxll@is_signed 0020  
           __end_of_LCD_pulse_clock 33DE                            _menu_sel 00F3  
               __end_of_print_Vbatt 2304              _clear_diagnostic_codes 1478  
                     _print_AI_Temp 1B0C                            isa$xinst 0000  
                          int$flags 005C                            _vfprintf 3114  
                __end_of_input_init 33C4                           sscanf@fmt 0086  
          __end_of_LCD_write_string 2DA2                           vfscanf@ap 007E  
                         vfscanf@fp 007B       LCD_write_variable@left_offset 0015  
                       ??_main_menu 00A6                          _INTCONbits 0FF2  
            __end_of_welcome_splash 1844                   LCD_write_string@i 000A  
                          intlevel2 0000                           sprintf@ap 0042  
                  ___lwmod@dividend 0003                         ??_tmr1_init 0003  
                        _RCSTA1bits 0FAB                      ?_print_AI_Temp 0001  
           welcome_splash@plug_flag 001E                        _print_ELMVer 2B98  
 diagnostic_trouble_codes@dtc_index 00A2                        _print_SAEVer 2B06  
                          sscanf@ap 008A                          _UART1_Init 32DC  
                          skipws@fp 000E                            vfscanf@n 0081  
                       ??_print_RPM 004E   diagnostic_trouble_codes@byte1_str 0098  
 diagnostic_trouble_codes@byte2_str 009B                            ungetc@fp 0005  
                       ??_vfpfcnvrt 0028                         ??_vfsfcnvrt 0055  
                          sprintf@f 0043                            sprintf@s 0038  
                   ___lwmod@divisor 0005                        _A_air_intake 00C5  
                   ___lwmod@counter 0007                            strncmp@l 0003  
                          strncmp@n 0007                            strncmp@r 0005  
                      ___aldiv@sign 000C                            strstr@nl 000E  
                   ?_welcome_splash 0001                         _print_Vbatt 221C  
                      ___almod@sign 000C                    ?_LCD_pulse_clock 0001  
