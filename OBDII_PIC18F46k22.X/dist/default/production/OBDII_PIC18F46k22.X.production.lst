

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 28 14:01:13 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 12/10/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F46K22 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000FE0                     bsr             equ	4064
    86   000FE9                     fsr0            equ	4073
    87   000FEA                     fsr0h           equ	4074
    88   000FE9                     fsr0l           equ	4073
    89   000FE1                     fsr1            equ	4065
    90   000FE2                     fsr1h           equ	4066
    91   000FE1                     fsr1l           equ	4065
    92   000FD9                     fsr2            equ	4057
    93   000FDA                     fsr2h           equ	4058
    94   000FD9                     fsr2l           equ	4057
    95   000FEF                     indf0           equ	4079
    96   000FE7                     indf1           equ	4071
    97   000FDF                     indf2           equ	4063
    98   000FF2                     intcon          equ	4082
    99   000000                     nvmcon          equ	0
   100   000FF9                     pcl             equ	4089
   101   000FFA                     pclath          equ	4090
   102   000FFB                     pclatu          equ	4091
   103   000FEB                     plusw0          equ	4075
   104   000FE3                     plusw1          equ	4067
   105   000FDB                     plusw2          equ	4059
   106   000FED                     postdec0        equ	4077
   107   000FE5                     postdec1        equ	4069
   108   000FDD                     postdec2        equ	4061
   109   000FEE                     postinc0        equ	4078
   110   000FE6                     postinc1        equ	4070
   111   000FDE                     postinc2        equ	4062
   112   000FEC                     preinc0         equ	4076
   113   000FE4                     preinc1         equ	4068
   114   000FDC                     preinc2         equ	4060
   115   000FF3                     prod            equ	4083
   116   000FF4                     prodh           equ	4084
   117   000FF3                     prodl           equ	4083
   118   000FD8                     status          equ	4056
   119   000FF5                     tablat          equ	4085
   120   000FF6                     tblptr          equ	4086
   121   000FF7                     tblptrh         equ	4087
   122   000FF6                     tblptrl         equ	4086
   123   000FF8                     tblptru         equ	4088
   124   000FFD                     tosl            equ	4093
   125   000FE8                     wreg            equ	4072
   126   000F38                     ANSELA          equ	3896	;# 
   127   000F39                     ANSELB          equ	3897	;# 
   128   000F3A                     ANSELC          equ	3898	;# 
   129   000F3B                     ANSELD          equ	3899	;# 
   130   000F3C                     ANSELE          equ	3900	;# 
   131   000F3D                     PMD2            equ	3901	;# 
   132   000F3E                     PMD1            equ	3902	;# 
   133   000F3F                     PMD0            equ	3903	;# 
   134   000F40                     VREFCON2        equ	3904	;# 
   135   000F40                     DACCON1         equ	3904	;# 
   136   000F41                     VREFCON1        equ	3905	;# 
   137   000F41                     DACCON0         equ	3905	;# 
   138   000F42                     VREFCON0        equ	3906	;# 
   139   000F42                     FVRCON          equ	3906	;# 
   140   000F43                     CTMUICON        equ	3907	;# 
   141   000F43                     CTMUICONH       equ	3907	;# 
   142   000F44                     CTMUCONL        equ	3908	;# 
   143   000F44                     CTMUCON1        equ	3908	;# 
   144   000F45                     CTMUCONH        equ	3909	;# 
   145   000F45                     CTMUCON0        equ	3909	;# 
   146   000F46                     SRCON1          equ	3910	;# 
   147   000F47                     SRCON0          equ	3911	;# 
   148   000F48                     CCPTMRS1        equ	3912	;# 
   149   000F49                     CCPTMRS0        equ	3913	;# 
   150   000F4A                     T6CON           equ	3914	;# 
   151   000F4B                     PR6             equ	3915	;# 
   152   000F4C                     TMR6            equ	3916	;# 
   153   000F4D                     T5GCON          equ	3917	;# 
   154   000F4E                     T5CON           equ	3918	;# 
   155   000F4F                     TMR5            equ	3919	;# 
   156   000F4F                     TMR5L           equ	3919	;# 
   157   000F50                     TMR5H           equ	3920	;# 
   158   000F51                     T4CON           equ	3921	;# 
   159   000F52                     PR4             equ	3922	;# 
   160   000F53                     TMR4            equ	3923	;# 
   161   000F54                     CCP5CON         equ	3924	;# 
   162   000F55                     CCPR5           equ	3925	;# 
   163   000F55                     CCPR5L          equ	3925	;# 
   164   000F56                     CCPR5H          equ	3926	;# 
   165   000F57                     CCP4CON         equ	3927	;# 
   166   000F58                     CCPR4           equ	3928	;# 
   167   000F58                     CCPR4L          equ	3928	;# 
   168   000F59                     CCPR4H          equ	3929	;# 
   169   000F5A                     PSTR3CON        equ	3930	;# 
   170   000F5B                     ECCP3AS         equ	3931	;# 
   171   000F5B                     CCP3AS          equ	3931	;# 
   172   000F5C                     PWM3CON         equ	3932	;# 
   173   000F5D                     CCP3CON         equ	3933	;# 
   174   000F5E                     CCPR3           equ	3934	;# 
   175   000F5E                     CCPR3L          equ	3934	;# 
   176   000F5F                     CCPR3H          equ	3935	;# 
   177   000F60                     SLRCON          equ	3936	;# 
   178   000F61                     WPUB            equ	3937	;# 
   179   000F62                     IOCB            equ	3938	;# 
   180   000F63                     PSTR2CON        equ	3939	;# 
   181   000F64                     ECCP2AS         equ	3940	;# 
   182   000F64                     CCP2AS          equ	3940	;# 
   183   000F65                     PWM2CON         equ	3941	;# 
   184   000F66                     CCP2CON         equ	3942	;# 
   185   000F67                     CCPR2           equ	3943	;# 
   186   000F67                     CCPR2L          equ	3943	;# 
   187   000F68                     CCPR2H          equ	3944	;# 
   188   000F69                     SSP2CON3        equ	3945	;# 
   189   000F6A                     SSP2MSK         equ	3946	;# 
   190   000F6B                     SSP2CON2        equ	3947	;# 
   191   000F6C                     SSP2CON1        equ	3948	;# 
   192   000F6D                     SSP2STAT        equ	3949	;# 
   193   000F6E                     SSP2ADD         equ	3950	;# 
   194   000F6F                     SSP2BUF         equ	3951	;# 
   195   000F70                     BAUDCON2        equ	3952	;# 
   196   000F70                     BAUD2CON        equ	3952	;# 
   197   000F71                     RCSTA2          equ	3953	;# 
   198   000F71                     RC2STA          equ	3953	;# 
   199   000F72                     TXSTA2          equ	3954	;# 
   200   000F72                     TX2STA          equ	3954	;# 
   201   000F73                     TXREG2          equ	3955	;# 
   202   000F73                     TX2REG          equ	3955	;# 
   203   000F74                     RCREG2          equ	3956	;# 
   204   000F74                     RC2REG          equ	3956	;# 
   205   000F75                     SPBRG2          equ	3957	;# 
   206   000F75                     SP2BRG          equ	3957	;# 
   207   000F76                     SPBRGH2         equ	3958	;# 
   208   000F76                     SP2BRGH         equ	3958	;# 
   209   000F77                     CM2CON1         equ	3959	;# 
   210   000F77                     CM12CON         equ	3959	;# 
   211   000F78                     CM2CON0         equ	3960	;# 
   212   000F78                     CM2CON          equ	3960	;# 
   213   000F79                     CM1CON0         equ	3961	;# 
   214   000F79                     CM1CON          equ	3961	;# 
   215   000F7A                     PIE4            equ	3962	;# 
   216   000F7B                     PIR4            equ	3963	;# 
   217   000F7C                     IPR4            equ	3964	;# 
   218   000F7D                     PIE5            equ	3965	;# 
   219   000F7E                     PIR5            equ	3966	;# 
   220   000F7F                     IPR5            equ	3967	;# 
   221   000F80                     PORTA           equ	3968	;# 
   222   000F81                     PORTB           equ	3969	;# 
   223   000F82                     PORTC           equ	3970	;# 
   224   000F83                     PORTD           equ	3971	;# 
   225   000F84                     PORTE           equ	3972	;# 
   226   000F89                     LATA            equ	3977	;# 
   227   000F8A                     LATB            equ	3978	;# 
   228   000F8B                     LATC            equ	3979	;# 
   229   000F8C                     LATD            equ	3980	;# 
   230   000F8D                     LATE            equ	3981	;# 
   231   000F92                     TRISA           equ	3986	;# 
   232   000F92                     DDRA            equ	3986	;# 
   233   000F93                     TRISB           equ	3987	;# 
   234   000F93                     DDRB            equ	3987	;# 
   235   000F94                     TRISC           equ	3988	;# 
   236   000F94                     DDRC            equ	3988	;# 
   237   000F95                     TRISD           equ	3989	;# 
   238   000F95                     DDRD            equ	3989	;# 
   239   000F96                     TRISE           equ	3990	;# 
   240   000F96                     DDRE            equ	3990	;# 
   241   000F9B                     OSCTUNE         equ	3995	;# 
   242   000F9C                     HLVDCON         equ	3996	;# 
   243   000F9C                     LVDCON          equ	3996	;# 
   244   000F9D                     PIE1            equ	3997	;# 
   245   000F9E                     PIR1            equ	3998	;# 
   246   000F9F                     IPR1            equ	3999	;# 
   247   000FA0                     PIE2            equ	4000	;# 
   248   000FA1                     PIR2            equ	4001	;# 
   249   000FA2                     IPR2            equ	4002	;# 
   250   000FA3                     PIE3            equ	4003	;# 
   251   000FA4                     PIR3            equ	4004	;# 
   252   000FA5                     IPR3            equ	4005	;# 
   253   000FA6                     EECON1          equ	4006	;# 
   254   000FA7                     EECON2          equ	4007	;# 
   255   000FA8                     EEDATA          equ	4008	;# 
   256   000FA9                     EEADR           equ	4009	;# 
   257   000FAA                     EEADRH          equ	4010	;# 
   258   000FAB                     RCSTA1          equ	4011	;# 
   259   000FAB                     RCSTA           equ	4011	;# 
   260   000FAB                     RC1STA          equ	4011	;# 
   261   000FAC                     TXSTA1          equ	4012	;# 
   262   000FAC                     TXSTA           equ	4012	;# 
   263   000FAC                     TX1STA          equ	4012	;# 
   264   000FAD                     TXREG1          equ	4013	;# 
   265   000FAD                     TXREG           equ	4013	;# 
   266   000FAD                     TX1REG          equ	4013	;# 
   267   000FAE                     RCREG1          equ	4014	;# 
   268   000FAE                     RCREG           equ	4014	;# 
   269   000FAE                     RC1REG          equ	4014	;# 
   270   000FAF                     SPBRG1          equ	4015	;# 
   271   000FAF                     SPBRG           equ	4015	;# 
   272   000FAF                     SP1BRG          equ	4015	;# 
   273   000FB0                     SPBRGH1         equ	4016	;# 
   274   000FB0                     SPBRGH          equ	4016	;# 
   275   000FB0                     SP1BRGH         equ	4016	;# 
   276   000FB1                     T3CON           equ	4017	;# 
   277   000FB2                     TMR3            equ	4018	;# 
   278   000FB2                     TMR3L           equ	4018	;# 
   279   000FB3                     TMR3H           equ	4019	;# 
   280   000FB4                     T3GCON          equ	4020	;# 
   281   000FB6                     ECCP1AS         equ	4022	;# 
   282   000FB6                     ECCPAS          equ	4022	;# 
   283   000FB7                     PWM1CON         equ	4023	;# 
   284   000FB7                     PWMCON          equ	4023	;# 
   285   000FB8                     BAUDCON1        equ	4024	;# 
   286   000FB8                     BAUDCON         equ	4024	;# 
   287   000FB8                     BAUDCTL         equ	4024	;# 
   288   000FB8                     BAUD1CON        equ	4024	;# 
   289   000FB9                     PSTR1CON        equ	4025	;# 
   290   000FB9                     PSTRCON         equ	4025	;# 
   291   000FBA                     T2CON           equ	4026	;# 
   292   000FBB                     PR2             equ	4027	;# 
   293   000FBC                     TMR2            equ	4028	;# 
   294   000FBD                     CCP1CON         equ	4029	;# 
   295   000FBE                     CCPR1           equ	4030	;# 
   296   000FBE                     CCPR1L          equ	4030	;# 
   297   000FBF                     CCPR1H          equ	4031	;# 
   298   000FC0                     ADCON2          equ	4032	;# 
   299   000FC1                     ADCON1          equ	4033	;# 
   300   000FC2                     ADCON0          equ	4034	;# 
   301   000FC3                     ADRES           equ	4035	;# 
   302   000FC3                     ADRESL          equ	4035	;# 
   303   000FC4                     ADRESH          equ	4036	;# 
   304   000FC5                     SSP1CON2        equ	4037	;# 
   305   000FC5                     SSPCON2         equ	4037	;# 
   306   000FC6                     SSP1CON1        equ	4038	;# 
   307   000FC6                     SSPCON1         equ	4038	;# 
   308   000FC7                     SSP1STAT        equ	4039	;# 
   309   000FC7                     SSPSTAT         equ	4039	;# 
   310   000FC8                     SSP1ADD         equ	4040	;# 
   311   000FC8                     SSPADD          equ	4040	;# 
   312   000FC9                     SSP1BUF         equ	4041	;# 
   313   000FC9                     SSPBUF          equ	4041	;# 
   314   000FCA                     SSP1MSK         equ	4042	;# 
   315   000FCA                     SSPMSK          equ	4042	;# 
   316   000FCB                     SSP1CON3        equ	4043	;# 
   317   000FCB                     SSPCON3         equ	4043	;# 
   318   000FCC                     T1GCON          equ	4044	;# 
   319   000FCD                     T1CON           equ	4045	;# 
   320   000FCE                     TMR1            equ	4046	;# 
   321   000FCE                     TMR1L           equ	4046	;# 
   322   000FCF                     TMR1H           equ	4047	;# 
   323   000FD0                     RCON            equ	4048	;# 
   324   000FD1                     WDTCON          equ	4049	;# 
   325   000FD2                     OSCCON2         equ	4050	;# 
   326   000FD3                     OSCCON          equ	4051	;# 
   327   000FD5                     T0CON           equ	4053	;# 
   328   000FD6                     TMR0            equ	4054	;# 
   329   000FD6                     TMR0L           equ	4054	;# 
   330   000FD7                     TMR0H           equ	4055	;# 
   331   000FD8                     STATUS          equ	4056	;# 
   332   000FD9                     FSR2            equ	4057	;# 
   333   000FD9                     FSR2L           equ	4057	;# 
   334   000FDA                     FSR2H           equ	4058	;# 
   335   000FDB                     PLUSW2          equ	4059	;# 
   336   000FDC                     PREINC2         equ	4060	;# 
   337   000FDD                     POSTDEC2        equ	4061	;# 
   338   000FDE                     POSTINC2        equ	4062	;# 
   339   000FDF                     INDF2           equ	4063	;# 
   340   000FE0                     BSR             equ	4064	;# 
   341   000FE1                     FSR1            equ	4065	;# 
   342   000FE1                     FSR1L           equ	4065	;# 
   343   000FE2                     FSR1H           equ	4066	;# 
   344   000FE3                     PLUSW1          equ	4067	;# 
   345   000FE4                     PREINC1         equ	4068	;# 
   346   000FE5                     POSTDEC1        equ	4069	;# 
   347   000FE6                     POSTINC1        equ	4070	;# 
   348   000FE7                     INDF1           equ	4071	;# 
   349   000FE8                     WREG            equ	4072	;# 
   350   000FE9                     FSR0            equ	4073	;# 
   351   000FE9                     FSR0L           equ	4073	;# 
   352   000FEA                     FSR0H           equ	4074	;# 
   353   000FEB                     PLUSW0          equ	4075	;# 
   354   000FEC                     PREINC0         equ	4076	;# 
   355   000FED                     POSTDEC0        equ	4077	;# 
   356   000FEE                     POSTINC0        equ	4078	;# 
   357   000FEF                     INDF0           equ	4079	;# 
   358   000FF0                     INTCON3         equ	4080	;# 
   359   000FF1                     INTCON2         equ	4081	;# 
   360   000FF2                     INTCON          equ	4082	;# 
   361   000FF3                     PROD            equ	4083	;# 
   362   000FF3                     PRODL           equ	4083	;# 
   363   000FF4                     PRODH           equ	4084	;# 
   364   000FF5                     TABLAT          equ	4085	;# 
   365   000FF6                     TBLPTR          equ	4086	;# 
   366   000FF6                     TBLPTRL         equ	4086	;# 
   367   000FF7                     TBLPTRH         equ	4087	;# 
   368   000FF8                     TBLPTRU         equ	4088	;# 
   369   000FF9                     PCLAT           equ	4089	;# 
   370   000FF9                     PC              equ	4089	;# 
   371   000FF9                     PCL             equ	4089	;# 
   372   000FFA                     PCLATH          equ	4090	;# 
   373   000FFB                     PCLATU          equ	4091	;# 
   374   000FFC                     STKPTR          equ	4092	;# 
   375   000FFD                     TOS             equ	4093	;# 
   376   000FFD                     TOSL            equ	4093	;# 
   377   000FFE                     TOSH            equ	4094	;# 
   378   000FFF                     TOSU            equ	4095	;# 
   379   000F38                     ANSELA          equ	3896	;# 
   380   000F39                     ANSELB          equ	3897	;# 
   381   000F3A                     ANSELC          equ	3898	;# 
   382   000F3B                     ANSELD          equ	3899	;# 
   383   000F3C                     ANSELE          equ	3900	;# 
   384   000F3D                     PMD2            equ	3901	;# 
   385   000F3E                     PMD1            equ	3902	;# 
   386   000F3F                     PMD0            equ	3903	;# 
   387   000F40                     VREFCON2        equ	3904	;# 
   388   000F40                     DACCON1         equ	3904	;# 
   389   000F41                     VREFCON1        equ	3905	;# 
   390   000F41                     DACCON0         equ	3905	;# 
   391   000F42                     VREFCON0        equ	3906	;# 
   392   000F42                     FVRCON          equ	3906	;# 
   393   000F43                     CTMUICON        equ	3907	;# 
   394   000F43                     CTMUICONH       equ	3907	;# 
   395   000F44                     CTMUCONL        equ	3908	;# 
   396   000F44                     CTMUCON1        equ	3908	;# 
   397   000F45                     CTMUCONH        equ	3909	;# 
   398   000F45                     CTMUCON0        equ	3909	;# 
   399   000F46                     SRCON1          equ	3910	;# 
   400   000F47                     SRCON0          equ	3911	;# 
   401   000F48                     CCPTMRS1        equ	3912	;# 
   402   000F49                     CCPTMRS0        equ	3913	;# 
   403   000F4A                     T6CON           equ	3914	;# 
   404   000F4B                     PR6             equ	3915	;# 
   405   000F4C                     TMR6            equ	3916	;# 
   406   000F4D                     T5GCON          equ	3917	;# 
   407   000F4E                     T5CON           equ	3918	;# 
   408   000F4F                     TMR5            equ	3919	;# 
   409   000F4F                     TMR5L           equ	3919	;# 
   410   000F50                     TMR5H           equ	3920	;# 
   411   000F51                     T4CON           equ	3921	;# 
   412   000F52                     PR4             equ	3922	;# 
   413   000F53                     TMR4            equ	3923	;# 
   414   000F54                     CCP5CON         equ	3924	;# 
   415   000F55                     CCPR5           equ	3925	;# 
   416   000F55                     CCPR5L          equ	3925	;# 
   417   000F56                     CCPR5H          equ	3926	;# 
   418   000F57                     CCP4CON         equ	3927	;# 
   419   000F58                     CCPR4           equ	3928	;# 
   420   000F58                     CCPR4L          equ	3928	;# 
   421   000F59                     CCPR4H          equ	3929	;# 
   422   000F5A                     PSTR3CON        equ	3930	;# 
   423   000F5B                     ECCP3AS         equ	3931	;# 
   424   000F5B                     CCP3AS          equ	3931	;# 
   425   000F5C                     PWM3CON         equ	3932	;# 
   426   000F5D                     CCP3CON         equ	3933	;# 
   427   000F5E                     CCPR3           equ	3934	;# 
   428   000F5E                     CCPR3L          equ	3934	;# 
   429   000F5F                     CCPR3H          equ	3935	;# 
   430   000F60                     SLRCON          equ	3936	;# 
   431   000F61                     WPUB            equ	3937	;# 
   432   000F62                     IOCB            equ	3938	;# 
   433   000F63                     PSTR2CON        equ	3939	;# 
   434   000F64                     ECCP2AS         equ	3940	;# 
   435   000F64                     CCP2AS          equ	3940	;# 
   436   000F65                     PWM2CON         equ	3941	;# 
   437   000F66                     CCP2CON         equ	3942	;# 
   438   000F67                     CCPR2           equ	3943	;# 
   439   000F67                     CCPR2L          equ	3943	;# 
   440   000F68                     CCPR2H          equ	3944	;# 
   441   000F69                     SSP2CON3        equ	3945	;# 
   442   000F6A                     SSP2MSK         equ	3946	;# 
   443   000F6B                     SSP2CON2        equ	3947	;# 
   444   000F6C                     SSP2CON1        equ	3948	;# 
   445   000F6D                     SSP2STAT        equ	3949	;# 
   446   000F6E                     SSP2ADD         equ	3950	;# 
   447   000F6F                     SSP2BUF         equ	3951	;# 
   448   000F70                     BAUDCON2        equ	3952	;# 
   449   000F70                     BAUD2CON        equ	3952	;# 
   450   000F71                     RCSTA2          equ	3953	;# 
   451   000F71                     RC2STA          equ	3953	;# 
   452   000F72                     TXSTA2          equ	3954	;# 
   453   000F72                     TX2STA          equ	3954	;# 
   454   000F73                     TXREG2          equ	3955	;# 
   455   000F73                     TX2REG          equ	3955	;# 
   456   000F74                     RCREG2          equ	3956	;# 
   457   000F74                     RC2REG          equ	3956	;# 
   458   000F75                     SPBRG2          equ	3957	;# 
   459   000F75                     SP2BRG          equ	3957	;# 
   460   000F76                     SPBRGH2         equ	3958	;# 
   461   000F76                     SP2BRGH         equ	3958	;# 
   462   000F77                     CM2CON1         equ	3959	;# 
   463   000F77                     CM12CON         equ	3959	;# 
   464   000F78                     CM2CON0         equ	3960	;# 
   465   000F78                     CM2CON          equ	3960	;# 
   466   000F79                     CM1CON0         equ	3961	;# 
   467   000F79                     CM1CON          equ	3961	;# 
   468   000F7A                     PIE4            equ	3962	;# 
   469   000F7B                     PIR4            equ	3963	;# 
   470   000F7C                     IPR4            equ	3964	;# 
   471   000F7D                     PIE5            equ	3965	;# 
   472   000F7E                     PIR5            equ	3966	;# 
   473   000F7F                     IPR5            equ	3967	;# 
   474   000F80                     PORTA           equ	3968	;# 
   475   000F81                     PORTB           equ	3969	;# 
   476   000F82                     PORTC           equ	3970	;# 
   477   000F83                     PORTD           equ	3971	;# 
   478   000F84                     PORTE           equ	3972	;# 
   479   000F89                     LATA            equ	3977	;# 
   480   000F8A                     LATB            equ	3978	;# 
   481   000F8B                     LATC            equ	3979	;# 
   482   000F8C                     LATD            equ	3980	;# 
   483   000F8D                     LATE            equ	3981	;# 
   484   000F92                     TRISA           equ	3986	;# 
   485   000F92                     DDRA            equ	3986	;# 
   486   000F93                     TRISB           equ	3987	;# 
   487   000F93                     DDRB            equ	3987	;# 
   488   000F94                     TRISC           equ	3988	;# 
   489   000F94                     DDRC            equ	3988	;# 
   490   000F95                     TRISD           equ	3989	;# 
   491   000F95                     DDRD            equ	3989	;# 
   492   000F96                     TRISE           equ	3990	;# 
   493   000F96                     DDRE            equ	3990	;# 
   494   000F9B                     OSCTUNE         equ	3995	;# 
   495   000F9C                     HLVDCON         equ	3996	;# 
   496   000F9C                     LVDCON          equ	3996	;# 
   497   000F9D                     PIE1            equ	3997	;# 
   498   000F9E                     PIR1            equ	3998	;# 
   499   000F9F                     IPR1            equ	3999	;# 
   500   000FA0                     PIE2            equ	4000	;# 
   501   000FA1                     PIR2            equ	4001	;# 
   502   000FA2                     IPR2            equ	4002	;# 
   503   000FA3                     PIE3            equ	4003	;# 
   504   000FA4                     PIR3            equ	4004	;# 
   505   000FA5                     IPR3            equ	4005	;# 
   506   000FA6                     EECON1          equ	4006	;# 
   507   000FA7                     EECON2          equ	4007	;# 
   508   000FA8                     EEDATA          equ	4008	;# 
   509   000FA9                     EEADR           equ	4009	;# 
   510   000FAA                     EEADRH          equ	4010	;# 
   511   000FAB                     RCSTA1          equ	4011	;# 
   512   000FAB                     RCSTA           equ	4011	;# 
   513   000FAB                     RC1STA          equ	4011	;# 
   514   000FAC                     TXSTA1          equ	4012	;# 
   515   000FAC                     TXSTA           equ	4012	;# 
   516   000FAC                     TX1STA          equ	4012	;# 
   517   000FAD                     TXREG1          equ	4013	;# 
   518   000FAD                     TXREG           equ	4013	;# 
   519   000FAD                     TX1REG          equ	4013	;# 
   520   000FAE                     RCREG1          equ	4014	;# 
   521   000FAE                     RCREG           equ	4014	;# 
   522   000FAE                     RC1REG          equ	4014	;# 
   523   000FAF                     SPBRG1          equ	4015	;# 
   524   000FAF                     SPBRG           equ	4015	;# 
   525   000FAF                     SP1BRG          equ	4015	;# 
   526   000FB0                     SPBRGH1         equ	4016	;# 
   527   000FB0                     SPBRGH          equ	4016	;# 
   528   000FB0                     SP1BRGH         equ	4016	;# 
   529   000FB1                     T3CON           equ	4017	;# 
   530   000FB2                     TMR3            equ	4018	;# 
   531   000FB2                     TMR3L           equ	4018	;# 
   532   000FB3                     TMR3H           equ	4019	;# 
   533   000FB4                     T3GCON          equ	4020	;# 
   534   000FB6                     ECCP1AS         equ	4022	;# 
   535   000FB6                     ECCPAS          equ	4022	;# 
   536   000FB7                     PWM1CON         equ	4023	;# 
   537   000FB7                     PWMCON          equ	4023	;# 
   538   000FB8                     BAUDCON1        equ	4024	;# 
   539   000FB8                     BAUDCON         equ	4024	;# 
   540   000FB8                     BAUDCTL         equ	4024	;# 
   541   000FB8                     BAUD1CON        equ	4024	;# 
   542   000FB9                     PSTR1CON        equ	4025	;# 
   543   000FB9                     PSTRCON         equ	4025	;# 
   544   000FBA                     T2CON           equ	4026	;# 
   545   000FBB                     PR2             equ	4027	;# 
   546   000FBC                     TMR2            equ	4028	;# 
   547   000FBD                     CCP1CON         equ	4029	;# 
   548   000FBE                     CCPR1           equ	4030	;# 
   549   000FBE                     CCPR1L          equ	4030	;# 
   550   000FBF                     CCPR1H          equ	4031	;# 
   551   000FC0                     ADCON2          equ	4032	;# 
   552   000FC1                     ADCON1          equ	4033	;# 
   553   000FC2                     ADCON0          equ	4034	;# 
   554   000FC3                     ADRES           equ	4035	;# 
   555   000FC3                     ADRESL          equ	4035	;# 
   556   000FC4                     ADRESH          equ	4036	;# 
   557   000FC5                     SSP1CON2        equ	4037	;# 
   558   000FC5                     SSPCON2         equ	4037	;# 
   559   000FC6                     SSP1CON1        equ	4038	;# 
   560   000FC6                     SSPCON1         equ	4038	;# 
   561   000FC7                     SSP1STAT        equ	4039	;# 
   562   000FC7                     SSPSTAT         equ	4039	;# 
   563   000FC8                     SSP1ADD         equ	4040	;# 
   564   000FC8                     SSPADD          equ	4040	;# 
   565   000FC9                     SSP1BUF         equ	4041	;# 
   566   000FC9                     SSPBUF          equ	4041	;# 
   567   000FCA                     SSP1MSK         equ	4042	;# 
   568   000FCA                     SSPMSK          equ	4042	;# 
   569   000FCB                     SSP1CON3        equ	4043	;# 
   570   000FCB                     SSPCON3         equ	4043	;# 
   571   000FCC                     T1GCON          equ	4044	;# 
   572   000FCD                     T1CON           equ	4045	;# 
   573   000FCE                     TMR1            equ	4046	;# 
   574   000FCE                     TMR1L           equ	4046	;# 
   575   000FCF                     TMR1H           equ	4047	;# 
   576   000FD0                     RCON            equ	4048	;# 
   577   000FD1                     WDTCON          equ	4049	;# 
   578   000FD2                     OSCCON2         equ	4050	;# 
   579   000FD3                     OSCCON          equ	4051	;# 
   580   000FD5                     T0CON           equ	4053	;# 
   581   000FD6                     TMR0            equ	4054	;# 
   582   000FD6                     TMR0L           equ	4054	;# 
   583   000FD7                     TMR0H           equ	4055	;# 
   584   000FD8                     STATUS          equ	4056	;# 
   585   000FD9                     FSR2            equ	4057	;# 
   586   000FD9                     FSR2L           equ	4057	;# 
   587   000FDA                     FSR2H           equ	4058	;# 
   588   000FDB                     PLUSW2          equ	4059	;# 
   589   000FDC                     PREINC2         equ	4060	;# 
   590   000FDD                     POSTDEC2        equ	4061	;# 
   591   000FDE                     POSTINC2        equ	4062	;# 
   592   000FDF                     INDF2           equ	4063	;# 
   593   000FE0                     BSR             equ	4064	;# 
   594   000FE1                     FSR1            equ	4065	;# 
   595   000FE1                     FSR1L           equ	4065	;# 
   596   000FE2                     FSR1H           equ	4066	;# 
   597   000FE3                     PLUSW1          equ	4067	;# 
   598   000FE4                     PREINC1         equ	4068	;# 
   599   000FE5                     POSTDEC1        equ	4069	;# 
   600   000FE6                     POSTINC1        equ	4070	;# 
   601   000FE7                     INDF1           equ	4071	;# 
   602   000FE8                     WREG            equ	4072	;# 
   603   000FE9                     FSR0            equ	4073	;# 
   604   000FE9                     FSR0L           equ	4073	;# 
   605   000FEA                     FSR0H           equ	4074	;# 
   606   000FEB                     PLUSW0          equ	4075	;# 
   607   000FEC                     PREINC0         equ	4076	;# 
   608   000FED                     POSTDEC0        equ	4077	;# 
   609   000FEE                     POSTINC0        equ	4078	;# 
   610   000FEF                     INDF0           equ	4079	;# 
   611   000FF0                     INTCON3         equ	4080	;# 
   612   000FF1                     INTCON2         equ	4081	;# 
   613   000FF2                     INTCON          equ	4082	;# 
   614   000FF3                     PROD            equ	4083	;# 
   615   000FF3                     PRODL           equ	4083	;# 
   616   000FF4                     PRODH           equ	4084	;# 
   617   000FF5                     TABLAT          equ	4085	;# 
   618   000FF6                     TBLPTR          equ	4086	;# 
   619   000FF6                     TBLPTRL         equ	4086	;# 
   620   000FF7                     TBLPTRH         equ	4087	;# 
   621   000FF8                     TBLPTRU         equ	4088	;# 
   622   000FF9                     PCLAT           equ	4089	;# 
   623   000FF9                     PC              equ	4089	;# 
   624   000FF9                     PCL             equ	4089	;# 
   625   000FFA                     PCLATH          equ	4090	;# 
   626   000FFB                     PCLATU          equ	4091	;# 
   627   000FFC                     STKPTR          equ	4092	;# 
   628   000FFD                     TOS             equ	4093	;# 
   629   000FFD                     TOSL            equ	4093	;# 
   630   000FFE                     TOSH            equ	4094	;# 
   631   000FFF                     TOSU            equ	4095	;# 
   632                           
   633                           	psect	idataCOMRAM
   634   001F1C                     __pidataCOMRAM:
   635                           	callstack 0
   636                           
   637                           ;initializer for _LCD_entry_mode
   638   001F1C  06                 	db	6
   639                           
   640                           ;initializer for _LCD_display_control
   641   001F1D  0C                 	db	12
   642   000F3A                     _ANSELC         set	3898
   643   000F38                     _ANSELAbits     set	3896
   644   000F3A                     _ANSELCbits     set	3898
   645   000F39                     _ANSELBbits     set	3897
   646   000F95                     _TRISDbits      set	3989
   647   000F8C                     _LATDbits       set	3980
   648   000F82                     _PORTCbits      set	3970
   649   000F81                     _PORTBbits      set	3969
   650   000FC3                     _ADRESL         set	4035
   651   000FC4                     _ADRESH         set	4036
   652   000FC2                     _ADCON0bits     set	4034
   653   000FAD                     _TXREG          set	4013
   654   000FAC                     _TXSTAbits      set	4012
   655   000FAB                     _RCSTAbits      set	4011
   656   000FAE                     _RCREG1         set	4014
   657   000F9E                     _PIR1bits       set	3998
   658   000FF2                     _INTCONbits     set	4082
   659   000F9D                     _PIE1bits       set	3997
   660   000FAB                     _RCSTA1bits     set	4011
   661   000FAF                     _SPBRG1         set	4015
   662   000FB0                     _SPBRGH1        set	4016
   663   000FB8                     _BAUDCON1bits   set	4024
   664   000FAC                     _TXSTA1bits     set	4012
   665   000FC0                     _ADCON2         set	4032
   666   000FC1                     _ADCON1         set	4033
   667   000FC2                     _ADCON0         set	4034
   668   000F92                     _TRISAbits      set	3986
   669   000F94                     _TRISCbits      set	3988
   670   000F93                     _TRISBbits      set	3987
   671   000FD3                     _OSCCON         set	4051
   672                           
   673                           	psect	smallconst
   674   001000                     __psmallconst:
   675                           	callstack 0
   676   001000  00                 	db	0
   677   001001                     STR_2:
   678   001001  4D                 	db	77	;'M'
   679   001002  45                 	db	69	;'E'
   680   001003  4E                 	db	78	;'N'
   681   001004  55                 	db	85	;'U'
   682   001005  3C                 	db	60	;'<'
   683   001006  3C                 	db	60	;'<'
   684   001007  4F                 	db	79	;'O'
   685   001008  42                 	db	66	;'B'
   686   001009  44                 	db	68	;'D'
   687   00100A  49                 	db	73	;'I'
   688   00100B  49                 	db	73	;'I'
   689   00100C  50                 	db	80	;'P'
   690   00100D  49                 	db	73	;'I'
   691   00100E  43                 	db	67	;'C'
   692   00100F  3E                 	db	62	;'>'
   693   001010  3E                 	db	62	;'>'
   694   001011  00                 	db	0
   695   001012                     STR_3:
   696   001012  4C                 	db	76	;'L'
   697   001013  52                 	db	82	;'R'
   698   001014  4D                 	db	77	;'M'
   699   001015  20                 	db	32
   700   001016  52                 	db	82	;'R'
   701   001017  44                 	db	68	;'D'
   702   001018  43                 	db	67	;'C'
   703   001019  20                 	db	32
   704   00101A  43                 	db	67	;'C'
   705   00101B  44                 	db	68	;'D'
   706   00101C  43                 	db	67	;'C'
   707   00101D  20                 	db	32
   708   00101E  44                 	db	68	;'D'
   709   00101F  53                 	db	83	;'S'
   710   001020  49                 	db	73	;'I'
   711   001021  00                 	db	0
   712   001022                     STR_1:
   713   001022  41                 	db	65	;'A'
   714   001023  54                 	db	84	;'T'
   715   001024  45                 	db	69	;'E'
   716   001025  30                 	db	48	;'0'
   717   001026  0D                 	db	13
   718   001027  00                 	db	0
   719   001028                     STR_19:
   720   001028  30                 	db	48	;'0'
   721   001029  31                 	db	49	;'1'
   722   00102A  30                 	db	48	;'0'
   723   00102B  38                 	db	56	;'8'
   724   00102C  0D                 	db	13
   725   00102D  00                 	db	0
   726   00102E                     STR_4:
   727   00102E  30                 	db	48	;'0'
   728   00102F  31                 	db	49	;'1'
   729   001030  30                 	db	48	;'0'
   730   001031  43                 	db	67	;'C'
   731   001032  0D                 	db	13
   732   001033  00                 	db	0
   733   001034                     STR_12:
   734   001034  30                 	db	48	;'0'
   735   001035  31                 	db	49	;'1'
   736   001036  30                 	db	48	;'0'
   737   001037  46                 	db	70	;'F'
   738   001038  0D                 	db	13
   739   001039  00                 	db	0
   740   00103A                     STR_8:
   741   00103A  41                 	db	65	;'A'
   742   00103B  54                 	db	84	;'T'
   743   00103C  52                 	db	82	;'R'
   744   00103D  56                 	db	86	;'V'
   745   00103E  0D                 	db	13
   746   00103F  00                 	db	0
   747   001040                     STR_6:
   748   001040  20                 	db	32
   749   001041  20                 	db	32
   750   001042  20                 	db	32
   751   001043  20                 	db	32
   752   001044  20                 	db	32
   753   001045  00                 	db	0
   754   001046                     STR_20:
   755   001046  53                 	db	83	;'S'
   756   001047  41                 	db	65	;'A'
   757   001048  45                 	db	69	;'E'
   758   001049  3A                 	db	58	;':'
   759   00104A  20                 	db	32
   760   00104B  00                 	db	0
   761   00104C                     STR_18:
   762   00104C  45                 	db	69	;'E'
   763   00104D  4C                 	db	76	;'L'
   764   00104E  4D                 	db	77	;'M'
   765   00104F  3A                 	db	58	;':'
   766   001050  20                 	db	32
   767   001051  00                 	db	0
   768   001052                     STR_10:
   769   001052  56                 	db	86	;'V'
   770   001053  42                 	db	66	;'B'
   771   001054  61                 	db	97	;'a'
   772   001055  74                 	db	116	;'t'
   773   001056  74                 	db	116	;'t'
   774   001057  00                 	db	0
   775   001058                     STR_17:
   776   001058  41                 	db	65	;'A'
   777   001059  54                 	db	84	;'T'
   778   00105A  49                 	db	73	;'I'
   779   00105B  0D                 	db	13
   780   00105C  00                 	db	0
   781   00105D                     STR_11:
   782   00105D  4E                 	db	78	;'N'
   783   00105E  2F                 	db	47
   784   00105F  41                 	db	65	;'A'
   785   001060  00                 	db	0
   786   001061                     STR_7:
   787   001061  52                 	db	82	;'R'
   788   001062  50                 	db	80	;'P'
   789   001063  4D                 	db	77	;'M'
   790   001064  00                 	db	0
   791   001065                     STR_15:
   792   001065  41                 	db	65	;'A'
   793   001066  49                 	db	73	;'I'
   794   001067  54                 	db	84	;'T'
   795   001068  00                 	db	0
   796   001069                     STR_5:
   797   001069  25                 	db	37
   798   00106A  75                 	db	117	;'u'
   799   00106B  00                 	db	0
   800   00106C                     STR_16:
   801   00106C  43                 	db	67	;'C'
   802   00106D  00                 	db	0
   803   001069                     STR_14          equ	STR_5
   804   001040                     STR_9           equ	STR_6
   805   001042                     STR_13          equ	STR_6+2
   806   00102E                     STR_21          equ	STR_4
   807   00106E  00                 	db	0	; dummy byte at the end
   808   001000                     __smallconst    set	__psmallconst
   809   001000                     __mediumconst   set	__psmallconst
   810   000002                     __activetblptr  equ	2
   811                           
   812                           ; #config settings
   813                           
   814                           	psect	cinit
   815   001D06                     __pcinit:
   816                           	callstack 0
   817   001D06                     start_initialization:
   818                           	callstack 0
   819   001D06                     __initialization:
   820                           	callstack 0
   821                           
   822                           ; Initialize objects allocated to COMRAM (2 bytes)
   823                           ; load TBLPTR registers with __pidataCOMRAM
   824   001D06  0E1C               	movlw	low __pidataCOMRAM
   825   001D08  6EF6               	movwf	tblptrl,c
   826   001D0A  0E1F               	movlw	high __pidataCOMRAM
   827   001D0C  6EF7               	movwf	tblptrh,c
   828   001D0E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   829   001D10  6EF8               	movwf	tblptru,c
   830   001D12  0009               	tblrd		*+	;fetch initializer
   831   001D14  CFF5 F05A          	movff	tablat,__pdataCOMRAM
   832   001D18  0009               	tblrd		*+	;fetch initializer
   833   001D1A  CFF5 F05B          	movff	tablat,__pdataCOMRAM+1
   834                           
   835                           ; Clear objects allocated to BANK0 (80 bytes)
   836   001D1E  EE00  F060         	lfsr	0,__pbssBANK0
   837   001D22  0E50               	movlw	80
   838   001D24                     clear_0:
   839   001D24  6AEE               	clrf	postinc0,c
   840   001D26  06E8               	decf	wreg,f,c
   841   001D28  E1FD               	bnz	clear_0
   842                           
   843                           ; Clear objects allocated to COMRAM (38 bytes)
   844   001D2A  EE00  F034         	lfsr	0,__pbssCOMRAM
   845   001D2E  0E26               	movlw	38
   846   001D30                     clear_1:
   847   001D30  6AEE               	clrf	postinc0,c
   848   001D32  06E8               	decf	wreg,f,c
   849   001D34  E1FD               	bnz	clear_1
   850   001D36                     end_of_initialization:
   851                           	callstack 0
   852   001D36                     __end_of__initialization:
   853                           	callstack 0
   854   001D36  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   855   001D38  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   856   001D3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   857   001D3C  6EF8               	movwf	tblptru,c
   858   001D3E  0100               	movlb	0
   859   001D40  EFEE  F00D         	goto	_main	;jump to C main() function
   860                           
   861                           	psect	bssCOMRAM
   862   000034                     __pbssCOMRAM:
   863                           	callstack 0
   864   000034                     	ds	4
   865   000038                     _width:
   866                           	callstack 0
   867   000038                     	ds	2
   868   00003A                     _prec:
   869                           	callstack 0
   870   00003A                     	ds	2
   871   00003C                     _air_intake_temp:
   872                           	callstack 0
   873   00003C                     	ds	2
   874   00003E                     _A_air_intake:
   875                           	callstack 0
   876   00003E                     	ds	2
   877   000040                     _RPM:
   878                           	callstack 0
   879   000040                     	ds	2
   880   000042                     _B_rpm:
   881                           	callstack 0
   882   000042                     	ds	2
   883   000044                     _A_rpm:
   884                           	callstack 0
   885   000044                     	ds	2
   886   000046                     _flags:
   887                           	callstack 0
   888   000046                     	ds	1
   889   000047                     _message_complete:
   890                           	callstack 0
   891   000047                     	ds	1
   892   000048                     _RX_char:
   893                           	callstack 0
   894   000048                     	ds	1
   895   000049                     _buffer_count:
   896                           	callstack 0
   897   000049                     	ds	1
   898   00004A                     _rpm_string:
   899                           	callstack 0
   900   00004A                     	ds	16
   901                           
   902                           	psect	dataCOMRAM
   903   00005A                     __pdataCOMRAM:
   904                           	callstack 0
   905   00005A                     _LCD_entry_mode:
   906                           	callstack 0
   907   00005A                     	ds	1
   908   00005B                     _LCD_display_control:
   909                           	callstack 0
   910   00005B                     	ds	1
   911                           
   912                           	psect	bssBANK0
   913   000060                     __pbssBANK0:
   914                           	callstack 0
   915   000060                     _dbuf:
   916                           	callstack 0
   917   000060                     	ds	32
   918   000080                     _buffer:
   919                           	callstack 0
   920   000080                     	ds	32
   921   0000A0                     _air_intake_string:
   922                           	callstack 0
   923   0000A0                     	ds	16
   924                           
   925                           	psect	cstackCOMRAM
   926   000001                     __pcstackCOMRAM:
   927                           	callstack 0
   928   000001                     ??_UART_ISR:
   929                           
   930                           ; 1 bytes @ 0x0
   931   000001                     	ds	2
   932   000003                     ?_readADC:
   933                           	callstack 0
   934   000003                     ?___lwdiv:
   935                           	callstack 0
   936   000003                     ?___lwmod:
   937                           	callstack 0
   938   000003                     UART1_SendChar@c:
   939                           	callstack 0
   940   000003                     hex_char_to_value@c:
   941                           	callstack 0
   942   000003                     strchr@s:
   943                           	callstack 0
   944   000003                     ___lwdiv@dividend:
   945                           	callstack 0
   946   000003                     ___lwmod@dividend:
   947                           	callstack 0
   948   000003                     fputc@c:
   949                           	callstack 0
   950   000003                     ??_LCD_write_command:
   951   000003                     ??_LCD_write_data:
   952                           
   953                           ; 1 bytes @ 0x2
   954   000003                     	ds	1
   955   000004                     UART1_SendString@string:
   956                           	callstack 0
   957   000004                     strchr@c:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x3
   961   000004                     	ds	1
   962   000005                     LCD_write_command@command:
   963                           	callstack 0
   964   000005                     LCD_write_data@data:
   965                           	callstack 0
   966   000005                     fputc@fp:
   967                           	callstack 0
   968   000005                     ___lwdiv@divisor:
   969                           	callstack 0
   970   000005                     ___lwmod@divisor:
   971                           	callstack 0
   972   000005                     ??_UART1_SendString:
   973   000005                     ??_readADC:
   974                           
   975                           ; 1 bytes @ 0x4
   976   000005                     	ds	1
   977   000006                     LCD_cursor_set@column:
   978                           	callstack 0
   979   000006                     LCD_configure_cursor_blink@state:
   980                           	callstack 0
   981   000006                     UART1_SendString@i:
   982                           	callstack 0
   983   000006                     LCD_write_string@string:
   984                           	callstack 0
   985   000006                     ??_LCD_clear:
   986   000006                     ??_fputc:
   987                           
   988                           ; 1 bytes @ 0x5
   989   000006                     	ds	1
   990   000007                     LCD_cursor_set@row:
   991                           	callstack 0
   992   000007                     ___lwmod@counter:
   993                           	callstack 0
   994   000007                     ___lwdiv@quotient:
   995                           	callstack 0
   996   000007                     ??_LCD_init:
   997   000007                     
   998                           ; 1 bytes @ 0x6
   999   000007                     	ds	1
  1000   000008                     ??_LCD_write_string:
  1001                           
  1002                           ; 1 bytes @ 0x7
  1003   000008                     	ds	1
  1004   000009                     ___lwdiv@counter:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x8
  1008   000009                     	ds	1
  1009   00000A                     LCD_write_string@i:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x9
  1013   00000A                     	ds	1
  1014   00000B                     vfpfcnvrt@fp:
  1015                           	callstack 0
  1016   00000B                     
  1017                           ; 1 bytes @ 0xA
  1018   00000B                     	ds	1
  1019   00000C                     vfpfcnvrt@fmt:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0xB
  1023   00000C                     	ds	1
  1024   00000D                     vfpfcnvrt@ap:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0xC
  1028   00000D                     	ds	1
  1029   00000E                     ??_vfpfcnvrt:
  1030                           
  1031                           ; 1 bytes @ 0xD
  1032   00000E                     	ds	1
  1033   00000F                     vfpfcnvrt@convarg:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0xE
  1037   00000F                     	ds	4
  1038   000013                     vfpfcnvrt@cp:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x12
  1042   000013                     	ds	1
  1043   000014                     vfpfcnvrt@c:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x13
  1047   000014                     	ds	1
  1048   000015                     ?_vfprintf:
  1049                           	callstack 0
  1050   000015                     vfprintf@fp:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x14
  1054   000015                     	ds	1
  1055   000016                     vfprintf@fmt:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x15
  1059   000016                     	ds	1
  1060   000017                     vfprintf@ap:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x16
  1064   000017                     	ds	1
  1065   000018                     vfprintf@cfmt:
  1066                           	callstack 0
  1067   000018                     
  1068                           ; 1 bytes @ 0x17
  1069   000018                     	ds	1
  1070   000019                     ?_sprintf:
  1071                           	callstack 0
  1072   000019                     sprintf@s:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x18
  1076   000019                     	ds	1
  1077   00001A                     sprintf@fmt:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x19
  1081   00001A                     	ds	3
  1082   00001D                     sprintf@ap:
  1083                           	callstack 0
  1084   00001D                     
  1085                           ; 1 bytes @ 0x1C
  1086   00001D                     	ds	1
  1087   00001E                     sprintf@f:
  1088                           	callstack 0
  1089                           
  1090                           ; 11 bytes @ 0x1D
  1091   00001E                     	ds	11
  1092   000029                     ??_print_RPM:
  1093   000029                     ??_print_AI_Temp:
  1094                           
  1095                           ; 1 bytes @ 0x28
  1096   000029                     	ds	3
  1097   00002C                     ??_main_menu:
  1098   00002C                     
  1099                           ; 1 bytes @ 0x2B
  1100   00002C                     	ds	2
  1101   00002E                     main_menu@menu_sel:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x2D
  1105   00002E                     	ds	2
  1106   000030                     main_menu@result:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x2F
  1110   000030                     	ds	2
  1111   000032                     ??_main:
  1112                           
  1113                           ; 1 bytes @ 0x31
  1114   000032                     	ds	2
  1115                           
  1116 ;;
  1117 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1118 ;;
  1119 ;; *************** function _main *****************
  1120 ;; Defined at:
  1121 ;;		line 57 in file "OBCII_PIC18F46K22.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;Total ram usage:        2 bytes
  1140 ;; Hardware stack levels required when called: 9
  1141 ;; This function calls:
  1142 ;;		_ADC_init
  1143 ;;		_LCD_clear
  1144 ;;		_LCD_init
  1145 ;;		_UART1_Init
  1146 ;;		_UART1_SendString
  1147 ;;		_input_init
  1148 ;;		_main_menu
  1149 ;; This function is called by:
  1150 ;;		Startup code after reset
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text0
  1155   001BDC                     __ptext0:
  1156                           	callstack 0
  1157   001BDC                     _main:
  1158                           	callstack 22
  1159   001BDC                     
  1160                           ;OBCII_PIC18F46K22.c: 60:     OSCCON = 0b01110000;
  1161   001BDC  0E70               	movlw	112
  1162   001BDE  6ED3               	movwf	211,c	;volatile
  1163   001BE0                     
  1164                           ;OBCII_PIC18F46K22.c: 64:     LCD_init();
  1165   001BE0  ECD7  F00C         	call	_LCD_init	;wreg free
  1166   001BE4                     
  1167                           ;OBCII_PIC18F46K22.c: 65:     LCD_clear();
  1168   001BE4  EC55  F00F         	call	_LCD_clear	;wreg free
  1169   001BE8                     
  1170                           ;OBCII_PIC18F46K22.c: 66:     input_init();
  1171   001BE8  EC6E  F00F         	call	_input_init	;wreg free
  1172                           
  1173                           ;OBCII_PIC18F46K22.c: 67:     ADC_init();
  1174   001BEC  EC83  F00F         	call	_ADC_init	;wreg free
  1175                           
  1176                           ;OBCII_PIC18F46K22.c: 68:     UART1_Init();
  1177   001BF0  EC2E  F00F         	call	_UART1_Init	;wreg free
  1178   001BF4                     
  1179                           ;OBCII_PIC18F46K22.c: 70:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  1180   001BF4  0E29               	movlw	41
  1181   001BF6  6E33               	movwf	(??_main+1)^0,c
  1182   001BF8  0E96               	movlw	150
  1183   001BFA  6E32               	movwf	??_main^0,c
  1184   001BFC  0E7F               	movlw	127
  1185   001BFE                     u1757:
  1186   001BFE  2EE8               	decfsz	wreg,f,c
  1187   001C00  D7FE               	bra	u1757
  1188   001C02  2E32               	decfsz	??_main^0,f,c
  1189   001C04  D7FC               	bra	u1757
  1190   001C06  2E33               	decfsz	(??_main+1)^0,f,c
  1191   001C08  D7FA               	bra	u1757
  1192   001C0A  0000               	nop	
  1193   001C0C                     
  1194                           ;OBCII_PIC18F46K22.c: 71:     UART1_SendString("ATE0\r");
  1195   001C0C  0E22               	movlw	low STR_1
  1196   001C0E  6E04               	movwf	UART1_SendString@string^0,c
  1197   001C10  EC1C  F00E         	call	_UART1_SendString	;wreg free
  1198   001C14                     
  1199                           ;OBCII_PIC18F46K22.c: 72:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1200   001C14  0E02               	movlw	2
  1201   001C16  6E33               	movwf	(??_main+1)^0,c
  1202   001C18  0E04               	movlw	4
  1203   001C1A  6E32               	movwf	??_main^0,c
  1204   001C1C  0EBA               	movlw	186
  1205   001C1E                     u1767:
  1206   001C1E  2EE8               	decfsz	wreg,f,c
  1207   001C20  D7FE               	bra	u1767
  1208   001C22  2E32               	decfsz	??_main^0,f,c
  1209   001C24  D7FC               	bra	u1767
  1210   001C26  2E33               	decfsz	(??_main+1)^0,f,c
  1211   001C28  D7FA               	bra	u1767
  1212   001C2A  D000               	nop2	
  1213   001C2C                     l2429:
  1214                           
  1215                           ;OBCII_PIC18F46K22.c: 75:                 main_menu();
  1216   001C2C  EC38  F008         	call	_main_menu	;wreg free
  1217   001C30  EF16  F00E         	goto	l2429
  1218   001C34  EF69  F000         	goto	start
  1219   001C38                     __end_of_main:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _main_menu *****************
  1223 ;; Defined at:
  1224 ;;		line 189 in file "OBCII_PIC18F46K22.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  result          2   47[COMRAM] unsigned int 
  1229 ;;  menu_sel        2   45[COMRAM] int 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;Total ram usage:        6 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 8
  1246 ;; This function calls:
  1247 ;;		_LCD_clear
  1248 ;;		_LCD_configure_cursor_blink
  1249 ;;		_LCD_cursor_set
  1250 ;;		_display_mm
  1251 ;;		_display_system_info
  1252 ;;		_live_reading_mode
  1253 ;;		_readADC
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text1
  1260   001070                     __ptext1:
  1261                           	callstack 0
  1262   001070                     _main_menu:
  1263                           	callstack 22
  1264   001070                     
  1265                           ;OBCII_PIC18F46K22.c: 192:     unsigned int result;;OBCII_PIC18F46K22.c: 193:     int me
      +                          nu_sel = -1;
  1266   001070  682E               	setf	main_menu@menu_sel^0,c
  1267   001072  682F               	setf	(main_menu@menu_sel+1)^0,c
  1268   001074                     
  1269                           ;OBCII_PIC18F46K22.c: 195:     LCD_clear();
  1270   001074  EC55  F00F         	call	_LCD_clear	;wreg free
  1271   001078                     
  1272                           ;OBCII_PIC18F46K22.c: 196:     display_mm();
  1273   001078  ECF9  F00E         	call	_display_mm	;wreg free
  1274   00107C                     l2273:
  1275                           
  1276                           ;OBCII_PIC18F46K22.c: 199:         result = readADC();
  1277   00107C  ECDE  F00E         	call	_readADC	;wreg free
  1278   001080  C003  F030         	movff	?_readADC,main_menu@result
  1279   001084  C004  F031         	movff	?_readADC+1,main_menu@result+1
  1280   001088                     
  1281                           ;OBCII_PIC18F46K22.c: 200:         if(result >= 0 && result <= 255){
  1282   001088  0431               	decf	(main_menu@result+1)^0,w,c
  1283   00108A  B0D8               	btfsc	status,0,c
  1284   00108C  EF4A  F008         	goto	u1351
  1285   001090  EF4C  F008         	goto	u1350
  1286   001094                     u1351:
  1287   001094  EF55  F008         	goto	l2281
  1288   001098                     u1350:
  1289   001098                     
  1290                           ;OBCII_PIC18F46K22.c: 201:             menu_sel = 0;
  1291   001098  0E00               	movlw	0
  1292   00109A  6E2F               	movwf	(main_menu@menu_sel+1)^0,c
  1293   00109C  0E00               	movlw	0
  1294   00109E  6E2E               	movwf	main_menu@menu_sel^0,c
  1295   0010A0                     
  1296                           ;OBCII_PIC18F46K22.c: 202:             LCD_cursor_set(2,1);
  1297   0010A0  0E01               	movlw	1
  1298   0010A2  6E06               	movwf	LCD_cursor_set@column^0,c
  1299   0010A4  0E02               	movlw	2
  1300   0010A6  ECBE  F00D         	call	_LCD_cursor_set
  1301   0010AA                     l2281:
  1302                           
  1303                           ;OBCII_PIC18F46K22.c: 205:         if(result >= 256 && result <=511){
  1304   0010AA  0431               	decf	(main_menu@result+1)^0,w,c
  1305   0010AC  A0D8               	btfss	status,0,c
  1306   0010AE  EF5B  F008         	goto	u1361
  1307   0010B2  EF5D  F008         	goto	u1360
  1308   0010B6                     u1361:
  1309   0010B6  EF6F  F008         	goto	l2289
  1310   0010BA                     u1360:
  1311   0010BA  0E02               	movlw	2
  1312   0010BC  5C31               	subwf	(main_menu@result+1)^0,w,c
  1313   0010BE  B0D8               	btfsc	status,0,c
  1314   0010C0  EF64  F008         	goto	u1371
  1315   0010C4  EF66  F008         	goto	u1370
  1316   0010C8                     u1371:
  1317   0010C8  EF6F  F008         	goto	l2289
  1318   0010CC                     u1370:
  1319   0010CC                     
  1320                           ;OBCII_PIC18F46K22.c: 206:             menu_sel = 1;
  1321   0010CC  0E00               	movlw	0
  1322   0010CE  6E2F               	movwf	(main_menu@menu_sel+1)^0,c
  1323   0010D0  0E01               	movlw	1
  1324   0010D2  6E2E               	movwf	main_menu@menu_sel^0,c
  1325   0010D4                     
  1326                           ;OBCII_PIC18F46K22.c: 207:             LCD_cursor_set(2,5);
  1327   0010D4  0E05               	movlw	5
  1328   0010D6  6E06               	movwf	LCD_cursor_set@column^0,c
  1329   0010D8  0E02               	movlw	2
  1330   0010DA  ECBE  F00D         	call	_LCD_cursor_set
  1331   0010DE                     l2289:
  1332                           
  1333                           ;OBCII_PIC18F46K22.c: 210:         if(result >=512 && result <=767){
  1334   0010DE  0E02               	movlw	2
  1335   0010E0  5C31               	subwf	(main_menu@result+1)^0,w,c
  1336   0010E2  A0D8               	btfss	status,0,c
  1337   0010E4  EF76  F008         	goto	u1381
  1338   0010E8  EF78  F008         	goto	u1380
  1339   0010EC                     u1381:
  1340   0010EC  EF8A  F008         	goto	l2297
  1341   0010F0                     u1380:
  1342   0010F0  0E03               	movlw	3
  1343   0010F2  5C31               	subwf	(main_menu@result+1)^0,w,c
  1344   0010F4  B0D8               	btfsc	status,0,c
  1345   0010F6  EF7F  F008         	goto	u1391
  1346   0010FA  EF81  F008         	goto	u1390
  1347   0010FE                     u1391:
  1348   0010FE  EF8A  F008         	goto	l2297
  1349   001102                     u1390:
  1350   001102                     
  1351                           ;OBCII_PIC18F46K22.c: 211:             menu_sel = 2;
  1352   001102  0E00               	movlw	0
  1353   001104  6E2F               	movwf	(main_menu@menu_sel+1)^0,c
  1354   001106  0E02               	movlw	2
  1355   001108  6E2E               	movwf	main_menu@menu_sel^0,c
  1356   00110A                     
  1357                           ;OBCII_PIC18F46K22.c: 212:             LCD_cursor_set(2,9);
  1358   00110A  0E09               	movlw	9
  1359   00110C  6E06               	movwf	LCD_cursor_set@column^0,c
  1360   00110E  0E02               	movlw	2
  1361   001110  ECBE  F00D         	call	_LCD_cursor_set
  1362   001114                     l2297:
  1363                           
  1364                           ;OBCII_PIC18F46K22.c: 214:         if(result >= 768 && result <=1023 ){
  1365   001114  0E03               	movlw	3
  1366   001116  5C31               	subwf	(main_menu@result+1)^0,w,c
  1367   001118  A0D8               	btfss	status,0,c
  1368   00111A  EF91  F008         	goto	u1401
  1369   00111E  EF93  F008         	goto	u1400
  1370   001122                     u1401:
  1371   001122  EFA5  F008         	goto	l2305
  1372   001126                     u1400:
  1373   001126  0E04               	movlw	4
  1374   001128  5C31               	subwf	(main_menu@result+1)^0,w,c
  1375   00112A  B0D8               	btfsc	status,0,c
  1376   00112C  EF9A  F008         	goto	u1411
  1377   001130  EF9C  F008         	goto	u1410
  1378   001134                     u1411:
  1379   001134  EFA5  F008         	goto	l2305
  1380   001138                     u1410:
  1381   001138                     
  1382                           ;OBCII_PIC18F46K22.c: 215:             menu_sel = 3;
  1383   001138  0E00               	movlw	0
  1384   00113A  6E2F               	movwf	(main_menu@menu_sel+1)^0,c
  1385   00113C  0E03               	movlw	3
  1386   00113E  6E2E               	movwf	main_menu@menu_sel^0,c
  1387   001140                     
  1388                           ;OBCII_PIC18F46K22.c: 216:             LCD_cursor_set(2,13);
  1389   001140  0E0D               	movlw	13
  1390   001142  6E06               	movwf	LCD_cursor_set@column^0,c
  1391   001144  0E02               	movlw	2
  1392   001146  ECBE  F00D         	call	_LCD_cursor_set
  1393   00114A                     l2305:
  1394                           
  1395                           ;OBCII_PIC18F46K22.c: 218:         LCD_configure_cursor_blink(1);
  1396   00114A  0E01               	movlw	1
  1397   00114C  EC44  F00F         	call	_LCD_configure_cursor_blink
  1398   001150                     
  1399                           ;OBCII_PIC18F46K22.c: 220:         if (PORTBbits.RB4 == 0) {
  1400   001150  B881               	btfsc	129,4,c	;volatile
  1401   001152  EFAD  F008         	goto	u1421
  1402   001156  EFAF  F008         	goto	u1420
  1403   00115A                     u1421:
  1404   00115A  EF4D  F009         	goto	l2367
  1405   00115E                     u1420:
  1406   00115E                     
  1407                           ;OBCII_PIC18F46K22.c: 221:             _delay((unsigned long)((20)*(16000000/4000.0)));
  1408   00115E  0E68               	movlw	104
  1409   001160  6E2C               	movwf	??_main_menu^0,c
  1410   001162  0EE4               	movlw	228
  1411   001164                     u1777:
  1412   001164  2EE8               	decfsz	wreg,f,c
  1413   001166  D7FE               	bra	u1777
  1414   001168  2E2C               	decfsz	??_main_menu^0,f,c
  1415   00116A  D7FC               	bra	u1777
  1416   00116C  D000               	nop2	
  1417   00116E                     
  1418                           ;OBCII_PIC18F46K22.c: 222:             if (PORTBbits.RB4 == 0) {
  1419   00116E  B881               	btfsc	129,4,c	;volatile
  1420   001170  EFBC  F008         	goto	u1431
  1421   001174  EFBE  F008         	goto	u1430
  1422   001178                     u1431:
  1423   001178  EF4D  F009         	goto	l2367
  1424   00117C                     u1430:
  1425   00117C                     
  1426                           ;OBCII_PIC18F46K22.c: 223:                 LCD_configure_cursor_blink(0);
  1427   00117C  0E00               	movlw	0
  1428   00117E  EC44  F00F         	call	_LCD_configure_cursor_blink
  1429                           
  1430                           ;OBCII_PIC18F46K22.c: 224:                 LCD_clear();
  1431   001182  EC55  F00F         	call	_LCD_clear	;wreg free
  1432                           
  1433                           ;OBCII_PIC18F46K22.c: 227:                 switch (menu_sel) {
  1434   001186  EF2F  F009         	goto	l2365
  1435   00118A                     l2315:
  1436                           
  1437                           ;OBCII_PIC18F46K22.c: 230:                             live_reading_mode();
  1438   00118A  EC76  F00F         	call	_live_reading_mode	;wreg free
  1439   00118E                     
  1440                           ;OBCII_PIC18F46K22.c: 232:                             if (PORTCbits.RC5 == 0) {
  1441   00118E  BA82               	btfsc	130,5,c	;volatile
  1442   001190  EFCC  F008         	goto	u1441
  1443   001194  EFCE  F008         	goto	u1440
  1444   001198                     u1441:
  1445   001198  EFC5  F008         	goto	l2315
  1446   00119C                     u1440:
  1447   00119C                     
  1448                           ;OBCII_PIC18F46K22.c: 233:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  1449   00119C  0E68               	movlw	104
  1450   00119E  6E2C               	movwf	??_main_menu^0,c
  1451   0011A0  0EE4               	movlw	228
  1452   0011A2                     u1787:
  1453   0011A2  2EE8               	decfsz	wreg,f,c
  1454   0011A4  D7FE               	bra	u1787
  1455   0011A6  2E2C               	decfsz	??_main_menu^0,f,c
  1456   0011A8  D7FC               	bra	u1787
  1457   0011AA  D000               	nop2	
  1458   0011AC                     
  1459                           ;OBCII_PIC18F46K22.c: 234:                                 if (PORTCbits.RC5 == 0) {
  1460   0011AC  BA82               	btfsc	130,5,c	;volatile
  1461   0011AE  EFDB  F008         	goto	u1451
  1462   0011B2  EFDD  F008         	goto	u1450
  1463   0011B6                     u1451:
  1464   0011B6  EFC5  F008         	goto	l2315
  1465   0011BA                     u1450:
  1466   0011BA                     l2323:
  1467                           
  1468                           ;OBCII_PIC18F46K22.c: 235:                                     LCD_clear();
  1469   0011BA  EC55  F00F         	call	_LCD_clear	;wreg free
  1470   0011BE                     
  1471                           ;OBCII_PIC18F46K22.c: 236:                                     display_mm();
  1472   0011BE  ECF9  F00E         	call	_display_mm	;wreg free
  1473   0011C2                     
  1474                           ;OBCII_PIC18F46K22.c: 237:                                     menu_sel = -1;
  1475   0011C2  682E               	setf	main_menu@menu_sel^0,c
  1476   0011C4  682F               	setf	(main_menu@menu_sel+1)^0,c
  1477                           
  1478                           ;OBCII_PIC18F46K22.c: 238:                                     break;
  1479   0011C6  EF4D  F009         	goto	l2367
  1480   0011CA                     l178:
  1481                           
  1482                           ;OBCII_PIC18F46K22.c: 249:                             if (PORTCbits.RC5 == 0) {
  1483   0011CA  BA82               	btfsc	130,5,c	;volatile
  1484   0011CC  EFEA  F008         	goto	u1461
  1485   0011D0  EFEC  F008         	goto	u1460
  1486   0011D4                     u1461:
  1487   0011D4  EFE5  F008         	goto	l178
  1488   0011D8                     u1460:
  1489   0011D8                     
  1490                           ;OBCII_PIC18F46K22.c: 250:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  1491   0011D8  0E68               	movlw	104
  1492   0011DA  6E2C               	movwf	??_main_menu^0,c
  1493   0011DC  0EE4               	movlw	228
  1494   0011DE                     u1797:
  1495   0011DE  2EE8               	decfsz	wreg,f,c
  1496   0011E0  D7FE               	bra	u1797
  1497   0011E2  2E2C               	decfsz	??_main_menu^0,f,c
  1498   0011E4  D7FC               	bra	u1797
  1499   0011E6  D000               	nop2	
  1500   0011E8                     
  1501                           ;OBCII_PIC18F46K22.c: 251:                                 if (PORTCbits.RC5 == 0) {
  1502   0011E8  BA82               	btfsc	130,5,c	;volatile
  1503   0011EA  EFF9  F008         	goto	u1471
  1504   0011EE  EFFB  F008         	goto	u1470
  1505   0011F2                     u1471:
  1506   0011F2  EFE5  F008         	goto	l178
  1507   0011F6                     u1470:
  1508   0011F6  EFDD  F008         	goto	l2323
  1509   0011FA                     l184:
  1510                           
  1511                           ;OBCII_PIC18F46K22.c: 265:                             if (PORTCbits.RC5 == 0) {
  1512   0011FA  BA82               	btfsc	130,5,c	;volatile
  1513   0011FC  EF02  F009         	goto	u1481
  1514   001200  EF04  F009         	goto	u1480
  1515   001204                     u1481:
  1516   001204  EFFD  F008         	goto	l184
  1517   001208                     u1480:
  1518   001208                     
  1519                           ;OBCII_PIC18F46K22.c: 266:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  1520   001208  0E68               	movlw	104
  1521   00120A  6E2C               	movwf	??_main_menu^0,c
  1522   00120C  0EE4               	movlw	228
  1523   00120E                     u1807:
  1524   00120E  2EE8               	decfsz	wreg,f,c
  1525   001210  D7FE               	bra	u1807
  1526   001212  2E2C               	decfsz	??_main_menu^0,f,c
  1527   001214  D7FC               	bra	u1807
  1528   001216  D000               	nop2	
  1529   001218                     
  1530                           ;OBCII_PIC18F46K22.c: 267:                                 if (PORTCbits.RC5 == 0) {
  1531   001218  BA82               	btfsc	130,5,c	;volatile
  1532   00121A  EF11  F009         	goto	u1491
  1533   00121E  EF13  F009         	goto	u1490
  1534   001222                     u1491:
  1535   001222  EFFD  F008         	goto	l184
  1536   001226                     u1490:
  1537   001226  EFDD  F008         	goto	l2323
  1538   00122A                     l2349:
  1539                           
  1540                           ;OBCII_PIC18F46K22.c: 279:                             display_system_info();
  1541   00122A  EC89  F00F         	call	_display_system_info	;wreg free
  1542   00122E                     
  1543                           ;OBCII_PIC18F46K22.c: 281:                             if (PORTCbits.RC5 == 0) {
  1544   00122E  BA82               	btfsc	130,5,c	;volatile
  1545   001230  EF1C  F009         	goto	u1501
  1546   001234  EF1E  F009         	goto	u1500
  1547   001238                     u1501:
  1548   001238  EF15  F009         	goto	l2349
  1549   00123C                     u1500:
  1550   00123C                     
  1551                           ;OBCII_PIC18F46K22.c: 282:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  1552   00123C  0E68               	movlw	104
  1553   00123E  6E2C               	movwf	??_main_menu^0,c
  1554   001240  0EE4               	movlw	228
  1555   001242                     u1817:
  1556   001242  2EE8               	decfsz	wreg,f,c
  1557   001244  D7FE               	bra	u1817
  1558   001246  2E2C               	decfsz	??_main_menu^0,f,c
  1559   001248  D7FC               	bra	u1817
  1560   00124A  D000               	nop2	
  1561   00124C                     
  1562                           ;OBCII_PIC18F46K22.c: 283:                                 if (PORTCbits.RC5 == 0) {
  1563   00124C  BA82               	btfsc	130,5,c	;volatile
  1564   00124E  EF2B  F009         	goto	u1511
  1565   001252  EF2D  F009         	goto	u1510
  1566   001256                     u1511:
  1567   001256  EF15  F009         	goto	l2349
  1568   00125A                     u1510:
  1569   00125A  EFDD  F008         	goto	l2323
  1570   00125E                     l2365:
  1571   00125E  C02E  F02C         	movff	main_menu@menu_sel,??_main_menu
  1572   001262  C02F  F02D         	movff	main_menu@menu_sel+1,??_main_menu+1
  1573                           
  1574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 1, Range of values is 0 to 0
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte            4     3 (average)
  1580                           ;	Chosen strategy is simple_byte
  1581   001266  502D               	movf	(??_main_menu+1)^0,w,c
  1582   001268  0A00               	xorlw	0	; case 0
  1583   00126A  B4D8               	btfsc	status,2,c
  1584   00126C  EF3A  F009         	goto	l2561
  1585   001270  EF4D  F009         	goto	l168
  1586   001274                     l2561:
  1587                           
  1588                           ; Switch size 1, requested type "simple"
  1589                           ; Number of cases is 4, Range of values is 0 to 3
  1590                           ; switch strategies available:
  1591                           ; Name         Instructions Cycles
  1592                           ; simple_byte           13     7 (average)
  1593                           ;	Chosen strategy is simple_byte
  1594   001274  502C               	movf	??_main_menu^0,w,c
  1595   001276  0A00               	xorlw	0	; case 0
  1596   001278  B4D8               	btfsc	status,2,c
  1597   00127A  EFC5  F008         	goto	l2315
  1598   00127E  0A01               	xorlw	1	; case 1
  1599   001280  B4D8               	btfsc	status,2,c
  1600   001282  EFE5  F008         	goto	l178
  1601   001286  0A03               	xorlw	3	; case 2
  1602   001288  B4D8               	btfsc	status,2,c
  1603   00128A  EFFD  F008         	goto	l184
  1604   00128E  0A01               	xorlw	1	; case 3
  1605   001290  B4D8               	btfsc	status,2,c
  1606   001292  EF15  F009         	goto	l2349
  1607   001296  EF4D  F009         	goto	l168
  1608   00129A                     l168:
  1609   00129A                     l2367:
  1610                           
  1611                           ;OBCII_PIC18F46K22.c: 299:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1612   00129A  0E02               	movlw	2
  1613   00129C  6E2D               	movwf	(??_main_menu+1)^0,c
  1614   00129E  0E04               	movlw	4
  1615   0012A0  6E2C               	movwf	??_main_menu^0,c
  1616   0012A2  0EBA               	movlw	186
  1617   0012A4                     u1827:
  1618   0012A4  2EE8               	decfsz	wreg,f,c
  1619   0012A6  D7FE               	bra	u1827
  1620   0012A8  2E2C               	decfsz	??_main_menu^0,f,c
  1621   0012AA  D7FC               	bra	u1827
  1622   0012AC  2E2D               	decfsz	(??_main_menu+1)^0,f,c
  1623   0012AE  D7FA               	bra	u1827
  1624   0012B0  D000               	nop2	
  1625   0012B2  EF3E  F008         	goto	l2273
  1626   0012B6  0012               	return		;funcret
  1627   0012B8                     __end_of_main_menu:
  1628                           	callstack 0
  1629                           
  1630 ;; *************** function _readADC *****************
  1631 ;; Defined at:
  1632 ;;		line 175 in file "OBCII_PIC18F46K22.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  2    2[COMRAM] unsigned int 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;Total ram usage:        4 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_main_menu
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text2
  1661   001DBC                     __ptext2:
  1662                           	callstack 0
  1663   001DBC                     _readADC:
  1664                           	callstack 28
  1665   001DBC                     
  1666                           ;OBCII_PIC18F46K22.c: 176:     ADCON0bits.GO = 1;
  1667   001DBC  82C2               	bsf	194,1,c	;volatile
  1668   001DBE                     l153:
  1669   001DBE  B2C2               	btfsc	194,1,c	;volatile
  1670   001DC0  EFE4  F00E         	goto	u1331
  1671   001DC4  EFE6  F00E         	goto	u1330
  1672   001DC8                     u1331:
  1673   001DC8  EFDF  F00E         	goto	l153
  1674   001DCC                     u1330:
  1675   001DCC                     
  1676                           ;OBCII_PIC18F46K22.c: 178:     _delay((unsigned long)((10)*(16000000/4000.0)));
  1677   001DCC  0E34               	movlw	52
  1678   001DCE  6E05               	movwf	??_readADC^0,c
  1679   001DD0  0EF2               	movlw	242
  1680   001DD2                     u1837:
  1681   001DD2  2EE8               	decfsz	wreg,f,c
  1682   001DD4  D7FE               	bra	u1837
  1683   001DD6  2E05               	decfsz	??_readADC^0,f,c
  1684   001DD8  D7FC               	bra	u1837
  1685   001DDA                     
  1686                           ;OBCII_PIC18F46K22.c: 179:     return ((ADRESH << 8) | ADRESL);
  1687   001DDA  50C3               	movf	195,w,c	;volatile
  1688   001DDC  CFC4 F005          	movff	4036,??_readADC	;volatile
  1689   001DE0  6A06               	clrf	(??_readADC+1)^0,c
  1690   001DE2  C005  F006         	movff	??_readADC,??_readADC+1
  1691   001DE6  6A05               	clrf	??_readADC^0,c
  1692   001DE8  1005               	iorwf	??_readADC^0,w,c
  1693   001DEA  6E03               	movwf	?_readADC^0,c
  1694   001DEC  5006               	movf	(??_readADC+1)^0,w,c
  1695   001DEE  6E04               	movwf	(?_readADC+1)^0,c
  1696   001DF0  0012               	return		;funcret
  1697   001DF2                     __end_of_readADC:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _live_reading_mode *****************
  1701 ;; Defined at:
  1702 ;;		line 391 in file "OBCII_PIC18F46K22.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 7
  1723 ;; This function calls:
  1724 ;;		_print_AI_Temp
  1725 ;;		_print_RPM
  1726 ;;		_print_Vbatt
  1727 ;; This function is called by:
  1728 ;;		_main_menu
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text3
  1733   001EEC                     __ptext3:
  1734                           	callstack 0
  1735   001EEC                     _live_reading_mode:
  1736                           	callstack 22
  1737   001EEC                     
  1738                           ;OBCII_PIC18F46K22.c: 392:             print_RPM();
  1739   001EEC  EC11  F00A         	call	_print_RPM	;wreg free
  1740   001EF0                     
  1741                           ;OBCII_PIC18F46K22.c: 393:             print_Vbatt();
  1742   001EF0  EC4B  F00C         	call	_print_Vbatt	;wreg free
  1743   001EF4                     
  1744                           ;OBCII_PIC18F46K22.c: 394:             print_AI_Temp();
  1745   001EF4  EC8D  F00B         	call	_print_AI_Temp	;wreg free
  1746   001EF8  0012               	return		;funcret
  1747   001EFA                     __end_of_live_reading_mode:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _print_Vbatt *****************
  1751 ;; Defined at:
  1752 ;;		line 339 in file "OBCII_PIC18F46K22.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        0 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 4
  1773 ;; This function calls:
  1774 ;;		_LCD_cursor_set
  1775 ;;		_LCD_write_string
  1776 ;;		_UART1_SendString
  1777 ;;		_strchr
  1778 ;; This function is called by:
  1779 ;;		_live_reading_mode
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text4
  1784   001896                     __ptext4:
  1785                           	callstack 0
  1786   001896                     _print_Vbatt:
  1787                           	callstack 24
  1788   001896                     
  1789                           ;OBCII_PIC18F46K22.c: 341:     UART1_SendString("ATRV\r");
  1790   001896  0E3A               	movlw	low STR_8
  1791   001898  6E04               	movwf	UART1_SendString@string^0,c
  1792   00189A  EC1C  F00E         	call	_UART1_SendString	;wreg free
  1793   00189E                     l2115:
  1794                           
  1795                           ;OBCII_PIC18F46K22.c: 342:     while(!message_complete) {
  1796   00189E  5047               	movf	_message_complete^0,w,c	;volatile
  1797   0018A0  B4D8               	btfsc	status,2,c
  1798   0018A2  EF55  F00C         	goto	u1281
  1799   0018A6  EF57  F00C         	goto	u1280
  1800   0018AA                     u1281:
  1801   0018AA  EF4F  F00C         	goto	l2115
  1802   0018AE                     u1280:
  1803   0018AE                     
  1804                           ;OBCII_PIC18F46K22.c: 346:     LCD_cursor_set(2,7);
  1805   0018AE  0E07               	movlw	7
  1806   0018B0  6E06               	movwf	LCD_cursor_set@column^0,c
  1807   0018B2  0E02               	movlw	2
  1808   0018B4  ECBE  F00D         	call	_LCD_cursor_set
  1809   0018B8                     
  1810                           ;OBCII_PIC18F46K22.c: 347:     LCD_write_string("     ");
  1811   0018B8  0E40               	movlw	low STR_6
  1812   0018BA  6E06               	movwf	LCD_write_string@string^0,c
  1813   0018BC  5006               	movf	LCD_write_string@string^0,w,c
  1814   0018BE  A4D8               	btfss	status,2,c
  1815   0018C0  0E10               	movlw	high __smallconst
  1816   0018C2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1817   0018C4  EC15  F00D         	call	_LCD_write_string	;wreg free
  1818   0018C8                     
  1819                           ;OBCII_PIC18F46K22.c: 349:     LCD_cursor_set(1,7);
  1820   0018C8  0E07               	movlw	7
  1821   0018CA  6E06               	movwf	LCD_cursor_set@column^0,c
  1822   0018CC  0E01               	movlw	1
  1823   0018CE  ECBE  F00D         	call	_LCD_cursor_set
  1824                           
  1825                           ;OBCII_PIC18F46K22.c: 350:     LCD_write_string("VBatt");
  1826   0018D2  0E52               	movlw	low STR_10
  1827   0018D4  6E06               	movwf	LCD_write_string@string^0,c
  1828   0018D6  5006               	movf	LCD_write_string@string^0,w,c
  1829   0018D8  A4D8               	btfss	status,2,c
  1830   0018DA  0E10               	movlw	high __smallconst
  1831   0018DC  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1832   0018DE  EC15  F00D         	call	_LCD_write_string	;wreg free
  1833   0018E2                     
  1834                           ;OBCII_PIC18F46K22.c: 351:     LCD_cursor_set(2,7);
  1835   0018E2  0E07               	movlw	7
  1836   0018E4  6E06               	movwf	LCD_cursor_set@column^0,c
  1837   0018E6  0E02               	movlw	2
  1838   0018E8  ECBE  F00D         	call	_LCD_cursor_set
  1839   0018EC                     
  1840                           ;OBCII_PIC18F46K22.c: 353:     if (!strchr(buffer, 'V')) {
  1841   0018EC  0E80               	movlw	low _buffer
  1842   0018EE  6E03               	movwf	strchr@s^0,c
  1843   0018F0  0E00               	movlw	0
  1844   0018F2  6E05               	movwf	(strchr@c+1)^0,c
  1845   0018F4  0E56               	movlw	86
  1846   0018F6  6E04               	movwf	strchr@c^0,c
  1847   0018F8  ECC1  F00E         	call	_strchr	;wreg free
  1848   0018FC  0900               	iorlw	0
  1849   0018FE  A4D8               	btfss	status,2,c
  1850   001900  EF84  F00C         	goto	u1291
  1851   001904  EF86  F00C         	goto	u1290
  1852   001908                     u1291:
  1853   001908  EF90  F00C         	goto	l2129
  1854   00190C                     u1290:
  1855   00190C                     
  1856                           ;OBCII_PIC18F46K22.c: 354:         LCD_write_string("N/A");
  1857   00190C  0E5D               	movlw	low STR_11
  1858   00190E  6E06               	movwf	LCD_write_string@string^0,c
  1859   001910  5006               	movf	LCD_write_string@string^0,w,c
  1860   001912  A4D8               	btfss	status,2,c
  1861   001914  0E10               	movlw	high __smallconst
  1862   001916  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1863   001918  EC15  F00D         	call	_LCD_write_string	;wreg free
  1864                           
  1865                           ;OBCII_PIC18F46K22.c: 355:     }
  1866   00191C  EF95  F00C         	goto	l2131
  1867   001920                     l2129:
  1868                           
  1869                           ;OBCII_PIC18F46K22.c: 357:     LCD_write_string(buffer);
  1870   001920  0E80               	movlw	low _buffer
  1871   001922  6E06               	movwf	LCD_write_string@string^0,c
  1872   001924  6A07               	clrf	(LCD_write_string@string+1)^0,c
  1873   001926  EC15  F00D         	call	_LCD_write_string	;wreg free
  1874   00192A                     l2131:
  1875                           
  1876                           ;OBCII_PIC18F46K22.c: 360:     buffer_count = 0;
  1877   00192A  6A49               	clrf	_buffer_count^0,c
  1878   00192C                     
  1879                           ;OBCII_PIC18F46K22.c: 361:     message_complete = 0;
  1880   00192C  6A47               	clrf	_message_complete^0,c	;volatile
  1881   00192E  0012               	return		;funcret
  1882   001930                     __end_of_print_Vbatt:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _strchr *****************
  1886 ;; Defined at:
  1887 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  s               1    2[COMRAM] PTR const unsigned char 
  1890 ;;		 -> buffer(32), 
  1891 ;;  c               2    3[COMRAM] int 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    2[COMRAM] PTR unsigned char 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;Total ram usage:        4 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_print_Vbatt
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text5
  1918   001D82                     __ptext5:
  1919                           	callstack 0
  1920   001D82                     _strchr:
  1921                           	callstack 26
  1922   001D82                     l1126:
  1923   001D82  5003               	movf	strchr@s^0,w,c
  1924   001D84  6ED9               	movwf	fsr2l,c
  1925   001D86  6ADA               	clrf	fsr2h,c
  1926   001D88  5004               	movf	strchr@c^0,w,c
  1927   001D8A  18DE               	xorwf	postinc2,w,c
  1928   001D8C  A4D8               	btfss	status,2,c
  1929   001D8E  EFCB  F00E         	goto	u1251
  1930   001D92  EFCD  F00E         	goto	u1250
  1931   001D96                     u1251:
  1932   001D96  EFD0  F00E         	goto	l2081
  1933   001D9A                     u1250:
  1934   001D9A  5003               	movf	strchr@s^0,w,c
  1935   001D9C  EFDD  F00E         	goto	l1128
  1936   001DA0                     l2081:
  1937   001DA0  2A03               	incf	strchr@s^0,f,c
  1938   001DA2  0403               	decf	strchr@s^0,w,c
  1939   001DA4  6ED9               	movwf	fsr2l,c
  1940   001DA6  6ADA               	clrf	fsr2h,c
  1941   001DA8  50DF               	movf	indf2,w,c
  1942   001DAA  A4D8               	btfss	status,2,c
  1943   001DAC  EFDA  F00E         	goto	u1261
  1944   001DB0  EFDC  F00E         	goto	u1260
  1945   001DB4                     u1261:
  1946   001DB4  EFC1  F00E         	goto	l1126
  1947   001DB8                     u1260:
  1948   001DB8  0E00               	movlw	0
  1949   001DBA                     l1128:
  1950   001DBA  0012               	return		;funcret
  1951   001DBC                     __end_of_strchr:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _print_RPM *****************
  1955 ;; Defined at:
  1956 ;;		line 313 in file "OBCII_PIC18F46K22.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;Total ram usage:        3 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 6
  1977 ;; This function calls:
  1978 ;;		_LCD_cursor_set
  1979 ;;		_LCD_write_string
  1980 ;;		_UART1_SendString
  1981 ;;		_hex_char_to_value
  1982 ;;		_sprintf
  1983 ;; This function is called by:
  1984 ;;		_live_reading_mode
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text6
  1989   001422                     __ptext6:
  1990                           	callstack 0
  1991   001422                     _print_RPM:
  1992                           	callstack 22
  1993   001422                     
  1994                           ;OBCII_PIC18F46K22.c: 315:     UART1_SendString("010C\r");
  1995   001422  0E2E               	movlw	low STR_4
  1996   001424  6E04               	movwf	UART1_SendString@string^0,c
  1997   001426  EC1C  F00E         	call	_UART1_SendString	;wreg free
  1998   00142A                     l2089:
  1999                           
  2000                           ;OBCII_PIC18F46K22.c: 316:     while(!message_complete) {
  2001   00142A  5047               	movf	_message_complete^0,w,c	;volatile
  2002   00142C  B4D8               	btfsc	status,2,c
  2003   00142E  EF1B  F00A         	goto	u1271
  2004   001432  EF1D  F00A         	goto	u1270
  2005   001436                     u1271:
  2006   001436  EF15  F00A         	goto	l2089
  2007   00143A                     u1270:
  2008   00143A                     
  2009                           ;OBCII_PIC18F46K22.c: 320:     A_rpm = (hex_char_to_value(buffer[4]) << 4) | hex_char_to
      +                          _value(buffer[5]);
  2010   00143A  0100               	movlb	0	; () banked
  2011   00143C  5184               	movf	(_buffer+4)& (0+255),w,b
  2012   00143E  EC98  F00C         	call	_hex_char_to_value
  2013   001442  6E29               	movwf	??_print_RPM^0,c
  2014   001444  6A2A               	clrf	(??_print_RPM+1)^0,c
  2015   001446  3A29               	swapf	??_print_RPM^0,f,c
  2016   001448  3A2A               	swapf	(??_print_RPM+1)^0,f,c
  2017   00144A  0EF0               	movlw	240
  2018   00144C  162A               	andwf	(??_print_RPM+1)^0,f,c
  2019   00144E  5029               	movf	??_print_RPM^0,w,c
  2020   001450  0B0F               	andlw	15
  2021   001452  122A               	iorwf	(??_print_RPM+1)^0,f,c
  2022   001454  0EF0               	movlw	240
  2023   001456  1629               	andwf	??_print_RPM^0,f,c
  2024   001458  0100               	movlb	0	; () banked
  2025   00145A  5185               	movf	(_buffer+5)& (0+255),w,b
  2026   00145C  EC98  F00C         	call	_hex_char_to_value
  2027   001460  6E2B               	movwf	(??_print_RPM+2)^0,c
  2028   001462  502B               	movf	(??_print_RPM+2)^0,w,c
  2029   001464  1029               	iorwf	??_print_RPM^0,w,c
  2030   001466  6E44               	movwf	_A_rpm^0,c
  2031   001468  502A               	movf	(??_print_RPM+1)^0,w,c
  2032   00146A  6E45               	movwf	(_A_rpm+1)^0,c
  2033                           
  2034                           ;OBCII_PIC18F46K22.c: 321:     B_rpm = (hex_char_to_value(buffer[6]) << 4) | hex_char_to
      +                          _value(buffer[7]);
  2035   00146C  0100               	movlb	0	; () banked
  2036   00146E  5186               	movf	(_buffer+6)& (0+255),w,b
  2037   001470  EC98  F00C         	call	_hex_char_to_value
  2038   001474  6E29               	movwf	??_print_RPM^0,c
  2039   001476  6A2A               	clrf	(??_print_RPM+1)^0,c
  2040   001478  3A29               	swapf	??_print_RPM^0,f,c
  2041   00147A  3A2A               	swapf	(??_print_RPM+1)^0,f,c
  2042   00147C  0EF0               	movlw	240
  2043   00147E  162A               	andwf	(??_print_RPM+1)^0,f,c
  2044   001480  5029               	movf	??_print_RPM^0,w,c
  2045   001482  0B0F               	andlw	15
  2046   001484  122A               	iorwf	(??_print_RPM+1)^0,f,c
  2047   001486  0EF0               	movlw	240
  2048   001488  1629               	andwf	??_print_RPM^0,f,c
  2049   00148A  0100               	movlb	0	; () banked
  2050   00148C  5187               	movf	(_buffer+7)& (0+255),w,b
  2051   00148E  EC98  F00C         	call	_hex_char_to_value
  2052   001492  6E2B               	movwf	(??_print_RPM+2)^0,c
  2053   001494  502B               	movf	(??_print_RPM+2)^0,w,c
  2054   001496  1029               	iorwf	??_print_RPM^0,w,c
  2055   001498  6E42               	movwf	_B_rpm^0,c
  2056   00149A  502A               	movf	(??_print_RPM+1)^0,w,c
  2057   00149C  6E43               	movwf	(_B_rpm+1)^0,c
  2058   00149E                     
  2059                           ;OBCII_PIC18F46K22.c: 322:     RPM = ((A_rpm * 256) + B_rpm) / 4;
  2060   00149E  5044               	movf	_A_rpm^0,w,c
  2061   0014A0  6E2A               	movwf	(??_print_RPM+1)^0,c
  2062   0014A2  6A29               	clrf	??_print_RPM^0,c
  2063   0014A4  5042               	movf	_B_rpm^0,w,c
  2064   0014A6  2629               	addwf	??_print_RPM^0,f,c
  2065   0014A8  5043               	movf	(_B_rpm+1)^0,w,c
  2066   0014AA  222A               	addwfc	(??_print_RPM+1)^0,f,c
  2067   0014AC  90D8               	bcf	status,0,c
  2068   0014AE  322A               	rrcf	(??_print_RPM+1)^0,f,c
  2069   0014B0  3229               	rrcf	??_print_RPM^0,f,c
  2070   0014B2  90D8               	bcf	status,0,c
  2071   0014B4  322A               	rrcf	(??_print_RPM+1)^0,f,c
  2072   0014B6  3229               	rrcf	??_print_RPM^0,f,c
  2073   0014B8  C029  F040         	movff	??_print_RPM,_RPM
  2074   0014BC  C02A  F041         	movff	??_print_RPM+1,_RPM+1
  2075   0014C0                     
  2076                           ;OBCII_PIC18F46K22.c: 324:     sprintf(rpm_string, "%u", RPM);
  2077   0014C0  0E4A               	movlw	low _rpm_string
  2078   0014C2  6E19               	movwf	sprintf@s^0,c
  2079   0014C4  0E69               	movlw	low STR_5
  2080   0014C6  6E1A               	movwf	sprintf@fmt^0,c
  2081   0014C8  C040  F01B         	movff	_RPM,?_sprintf+2
  2082   0014CC  C041  F01C         	movff	_RPM+1,?_sprintf+3
  2083   0014D0  EC14  F00F         	call	_sprintf	;wreg free
  2084   0014D4                     
  2085                           ;OBCII_PIC18F46K22.c: 326:     LCD_cursor_set(2,1);
  2086   0014D4  0E01               	movlw	1
  2087   0014D6  6E06               	movwf	LCD_cursor_set@column^0,c
  2088   0014D8  0E02               	movlw	2
  2089   0014DA  ECBE  F00D         	call	_LCD_cursor_set
  2090   0014DE                     
  2091                           ;OBCII_PIC18F46K22.c: 327:     LCD_write_string("     ");
  2092   0014DE  0E40               	movlw	low STR_6
  2093   0014E0  6E06               	movwf	LCD_write_string@string^0,c
  2094   0014E2  5006               	movf	LCD_write_string@string^0,w,c
  2095   0014E4  A4D8               	btfss	status,2,c
  2096   0014E6  0E10               	movlw	high __smallconst
  2097   0014E8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2098   0014EA  EC15  F00D         	call	_LCD_write_string	;wreg free
  2099   0014EE                     
  2100                           ;OBCII_PIC18F46K22.c: 329:     LCD_cursor_set(1,1);
  2101   0014EE  0E01               	movlw	1
  2102   0014F0  6E06               	movwf	LCD_cursor_set@column^0,c
  2103   0014F2  0E01               	movlw	1
  2104   0014F4  ECBE  F00D         	call	_LCD_cursor_set
  2105   0014F8                     
  2106                           ;OBCII_PIC18F46K22.c: 330:     LCD_write_string("RPM");
  2107   0014F8  0E61               	movlw	low STR_7
  2108   0014FA  6E06               	movwf	LCD_write_string@string^0,c
  2109   0014FC  5006               	movf	LCD_write_string@string^0,w,c
  2110   0014FE  A4D8               	btfss	status,2,c
  2111   001500  0E10               	movlw	high __smallconst
  2112   001502  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2113   001504  EC15  F00D         	call	_LCD_write_string	;wreg free
  2114   001508                     
  2115                           ;OBCII_PIC18F46K22.c: 331:     LCD_cursor_set(2,1);
  2116   001508  0E01               	movlw	1
  2117   00150A  6E06               	movwf	LCD_cursor_set@column^0,c
  2118   00150C  0E02               	movlw	2
  2119   00150E  ECBE  F00D         	call	_LCD_cursor_set
  2120   001512                     
  2121                           ;OBCII_PIC18F46K22.c: 332:     LCD_write_string(rpm_string);
  2122   001512  0E4A               	movlw	low _rpm_string
  2123   001514  6E06               	movwf	LCD_write_string@string^0,c
  2124   001516  6A07               	clrf	(LCD_write_string@string+1)^0,c
  2125   001518  EC15  F00D         	call	_LCD_write_string	;wreg free
  2126   00151C                     
  2127                           ;OBCII_PIC18F46K22.c: 334:     buffer_count = 0;
  2128   00151C  6A49               	clrf	_buffer_count^0,c
  2129   00151E                     
  2130                           ;OBCII_PIC18F46K22.c: 335:     message_complete = 0;
  2131   00151E  6A47               	clrf	_message_complete^0,c	;volatile
  2132   001520  0012               	return		;funcret
  2133   001522                     __end_of_print_RPM:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _print_AI_Temp *****************
  2137 ;; Defined at:
  2138 ;;		line 365 in file "OBCII_PIC18F46K22.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:        3 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 6
  2159 ;; This function calls:
  2160 ;;		_LCD_cursor_set
  2161 ;;		_LCD_write_string
  2162 ;;		_UART1_SendString
  2163 ;;		_hex_char_to_value
  2164 ;;		_sprintf
  2165 ;; This function is called by:
  2166 ;;		_live_reading_mode
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text7
  2171   00171A                     __ptext7:
  2172                           	callstack 0
  2173   00171A                     _print_AI_Temp:
  2174                           	callstack 22
  2175   00171A                     
  2176                           ;OBCII_PIC18F46K22.c: 367:     UART1_SendString("010F\r");
  2177   00171A  0E34               	movlw	low STR_12
  2178   00171C  6E04               	movwf	UART1_SendString@string^0,c
  2179   00171E  EC1C  F00E         	call	_UART1_SendString	;wreg free
  2180   001722                     l2137:
  2181                           
  2182                           ;OBCII_PIC18F46K22.c: 368:      while(!message_complete) {
  2183   001722  5047               	movf	_message_complete^0,w,c	;volatile
  2184   001724  B4D8               	btfsc	status,2,c
  2185   001726  EF97  F00B         	goto	u1301
  2186   00172A  EF99  F00B         	goto	u1300
  2187   00172E                     u1301:
  2188   00172E  EF91  F00B         	goto	l2137
  2189   001732                     u1300:
  2190   001732                     
  2191                           ;OBCII_PIC18F46K22.c: 372:     LCD_cursor_set(2,14);
  2192   001732  0E0E               	movlw	14
  2193   001734  6E06               	movwf	LCD_cursor_set@column^0,c
  2194   001736  0E02               	movlw	2
  2195   001738  ECBE  F00D         	call	_LCD_cursor_set
  2196   00173C                     
  2197                           ;OBCII_PIC18F46K22.c: 373:     LCD_write_string("   ");
  2198   00173C  0E42               	movlw	low (STR_6+2)
  2199   00173E  6E06               	movwf	LCD_write_string@string^0,c
  2200   001740  5006               	movf	LCD_write_string@string^0,w,c
  2201   001742  A4D8               	btfss	status,2,c
  2202   001744  0E10               	movlw	high __smallconst
  2203   001746  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2204   001748  EC15  F00D         	call	_LCD_write_string	;wreg free
  2205   00174C                     
  2206                           ;OBCII_PIC18F46K22.c: 375:     A_air_intake = (hex_char_to_value(buffer[4]) << 4) | hex_
      +                          char_to_value(buffer[5]);
  2207   00174C  0100               	movlb	0	; () banked
  2208   00174E  5184               	movf	(_buffer+4)& (0+255),w,b
  2209   001750  EC98  F00C         	call	_hex_char_to_value
  2210   001754  6E29               	movwf	??_print_AI_Temp^0,c
  2211   001756  6A2A               	clrf	(??_print_AI_Temp+1)^0,c
  2212   001758  3A29               	swapf	??_print_AI_Temp^0,f,c
  2213   00175A  3A2A               	swapf	(??_print_AI_Temp+1)^0,f,c
  2214   00175C  0EF0               	movlw	240
  2215   00175E  162A               	andwf	(??_print_AI_Temp+1)^0,f,c
  2216   001760  5029               	movf	??_print_AI_Temp^0,w,c
  2217   001762  0B0F               	andlw	15
  2218   001764  122A               	iorwf	(??_print_AI_Temp+1)^0,f,c
  2219   001766  0EF0               	movlw	240
  2220   001768  1629               	andwf	??_print_AI_Temp^0,f,c
  2221   00176A  0100               	movlb	0	; () banked
  2222   00176C  5185               	movf	(_buffer+5)& (0+255),w,b
  2223   00176E  EC98  F00C         	call	_hex_char_to_value
  2224   001772  6E2B               	movwf	(??_print_AI_Temp+2)^0,c
  2225   001774  502B               	movf	(??_print_AI_Temp+2)^0,w,c
  2226   001776  1029               	iorwf	??_print_AI_Temp^0,w,c
  2227   001778  6E3E               	movwf	_A_air_intake^0,c
  2228   00177A  502A               	movf	(??_print_AI_Temp+1)^0,w,c
  2229   00177C  6E3F               	movwf	(_A_air_intake+1)^0,c
  2230   00177E                     
  2231                           ;OBCII_PIC18F46K22.c: 376:     air_intake_temp = A_air_intake - 40;
  2232   00177E  0ED8               	movlw	216
  2233   001780  243E               	addwf	_A_air_intake^0,w,c
  2234   001782  6E3C               	movwf	_air_intake_temp^0,c
  2235   001784  0EFF               	movlw	255
  2236   001786  203F               	addwfc	(_A_air_intake+1)^0,w,c
  2237   001788  6E3D               	movwf	(_air_intake_temp+1)^0,c
  2238   00178A                     
  2239                           ;OBCII_PIC18F46K22.c: 378:     sprintf(air_intake_string, "%u", air_intake_temp);
  2240   00178A  0EA0               	movlw	low _air_intake_string
  2241   00178C  6E19               	movwf	sprintf@s^0,c
  2242   00178E  0E69               	movlw	low STR_5
  2243   001790  6E1A               	movwf	sprintf@fmt^0,c
  2244   001792  C03C  F01B         	movff	_air_intake_temp,?_sprintf+2
  2245   001796  C03D  F01C         	movff	_air_intake_temp+1,?_sprintf+3
  2246   00179A  EC14  F00F         	call	_sprintf	;wreg free
  2247   00179E                     
  2248                           ;OBCII_PIC18F46K22.c: 380:     LCD_cursor_set(1,14);
  2249   00179E  0E0E               	movlw	14
  2250   0017A0  6E06               	movwf	LCD_cursor_set@column^0,c
  2251   0017A2  0E01               	movlw	1
  2252   0017A4  ECBE  F00D         	call	_LCD_cursor_set
  2253   0017A8                     
  2254                           ;OBCII_PIC18F46K22.c: 381:     LCD_write_string("AIT");
  2255   0017A8  0E65               	movlw	low STR_15
  2256   0017AA  6E06               	movwf	LCD_write_string@string^0,c
  2257   0017AC  5006               	movf	LCD_write_string@string^0,w,c
  2258   0017AE  A4D8               	btfss	status,2,c
  2259   0017B0  0E10               	movlw	high __smallconst
  2260   0017B2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2261   0017B4  EC15  F00D         	call	_LCD_write_string	;wreg free
  2262   0017B8                     
  2263                           ;OBCII_PIC18F46K22.c: 382:     LCD_cursor_set(2,14);
  2264   0017B8  0E0E               	movlw	14
  2265   0017BA  6E06               	movwf	LCD_cursor_set@column^0,c
  2266   0017BC  0E02               	movlw	2
  2267   0017BE  ECBE  F00D         	call	_LCD_cursor_set
  2268   0017C2                     
  2269                           ;OBCII_PIC18F46K22.c: 383:     LCD_write_string(air_intake_string);
  2270   0017C2  0EA0               	movlw	low _air_intake_string
  2271   0017C4  6E06               	movwf	LCD_write_string@string^0,c
  2272   0017C6  6A07               	clrf	(LCD_write_string@string+1)^0,c
  2273   0017C8  EC15  F00D         	call	_LCD_write_string	;wreg free
  2274   0017CC                     
  2275                           ;OBCII_PIC18F46K22.c: 384:     LCD_cursor_set(2,16);
  2276   0017CC  0E10               	movlw	16
  2277   0017CE  6E06               	movwf	LCD_cursor_set@column^0,c
  2278   0017D0  0E02               	movlw	2
  2279   0017D2  ECBE  F00D         	call	_LCD_cursor_set
  2280   0017D6                     
  2281                           ;OBCII_PIC18F46K22.c: 385:     LCD_write_string("C");
  2282   0017D6  0E6C               	movlw	low STR_16
  2283   0017D8  6E06               	movwf	LCD_write_string@string^0,c
  2284   0017DA  5006               	movf	LCD_write_string@string^0,w,c
  2285   0017DC  A4D8               	btfss	status,2,c
  2286   0017DE  0E10               	movlw	high __smallconst
  2287   0017E0  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2288   0017E2  EC15  F00D         	call	_LCD_write_string	;wreg free
  2289   0017E6                     
  2290                           ;OBCII_PIC18F46K22.c: 387:     buffer_count = 0;
  2291   0017E6  6A49               	clrf	_buffer_count^0,c
  2292   0017E8                     
  2293                           ;OBCII_PIC18F46K22.c: 388:     message_complete = 0;
  2294   0017E8  6A47               	clrf	_message_complete^0,c	;volatile
  2295   0017EA  0012               	return		;funcret
  2296   0017EC                     __end_of_print_AI_Temp:
  2297                           	callstack 0
  2298                           
  2299 ;; *************** function _sprintf *****************
  2300 ;; Defined at:
  2301 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  s               1   24[COMRAM] PTR unsigned char 
  2304 ;;		 -> air_intake_string(16), rpm_string(16), 
  2305 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  2306 ;;		 -> STR_14(3), STR_5(3), 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  f              11   29[COMRAM] struct _IO_FILE
  2309 ;;  ret             2    0        int 
  2310 ;;  ap              1   28[COMRAM] PTR void [1]
  2311 ;;		 -> ?_sprintf(2), 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  2   24[COMRAM] int 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;Total ram usage:       16 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 5
  2328 ;; This function calls:
  2329 ;;		_vfprintf
  2330 ;; This function is called by:
  2331 ;;		_print_RPM
  2332 ;;		_print_AI_Temp
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text8
  2337   001E28                     __ptext8:
  2338                           	callstack 0
  2339   001E28                     _sprintf:
  2340                           	callstack 22
  2341   001E28  0E1B               	movlw	low (?_sprintf+2)
  2342   001E2A  6E1D               	movwf	sprintf@ap^0,c
  2343   001E2C  C019  F01E         	movff	sprintf@s,sprintf@f
  2344   001E30  0E00               	movlw	0
  2345   001E32  6E21               	movwf	(sprintf@f+3)^0,c
  2346   001E34  0E00               	movlw	0
  2347   001E36  6E20               	movwf	(sprintf@f+2)^0,c
  2348   001E38  0E00               	movlw	0
  2349   001E3A  6E28               	movwf	(sprintf@f+10)^0,c
  2350   001E3C  0E00               	movlw	0
  2351   001E3E  6E27               	movwf	(sprintf@f+9)^0,c
  2352   001E40  0E1E               	movlw	low sprintf@f
  2353   001E42  6E15               	movwf	vfprintf@fp^0,c
  2354   001E44  C01A  F016         	movff	sprintf@fmt,vfprintf@fmt
  2355   001E48  0E1D               	movlw	low sprintf@ap
  2356   001E4A  6E17               	movwf	vfprintf@ap^0,c
  2357   001E4C  ECA2  F00E         	call	_vfprintf	;wreg free
  2358   001E50  5019               	movf	sprintf@s^0,w,c
  2359   001E52  2420               	addwf	(sprintf@f+2)^0,w,c
  2360   001E54  6ED9               	movwf	fsr2l,c
  2361   001E56  6ADA               	clrf	fsr2h,c
  2362   001E58  6ADF               	clrf	indf2,c
  2363   001E5A  0012               	return		;funcret
  2364   001E5C                     __end_of_sprintf:
  2365                           	callstack 0
  2366                           
  2367 ;; *************** function _vfprintf *****************
  2368 ;; Defined at:
  2369 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2372 ;;		 -> sprintf@f(11), 
  2373 ;;  fmt             1   21[COMRAM] PTR const unsigned char 
  2374 ;;		 -> STR_14(3), STR_5(3), 
  2375 ;;  ap              1   22[COMRAM] PTR PTR void 
  2376 ;;		 -> sprintf@ap(1), 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  cfmt            1   23[COMRAM] PTR unsigned char 
  2379 ;;		 -> STR_14(3), STR_5(3), 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  2   20[COMRAM] int 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2389 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;Total ram usage:        4 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 4
  2396 ;; This function calls:
  2397 ;;		_vfpfcnvrt
  2398 ;; This function is called by:
  2399 ;;		_sprintf
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text9
  2404   001D44                     __ptext9:
  2405                           	callstack 0
  2406   001D44                     _vfprintf:
  2407                           	callstack 22
  2408   001D44                     
  2409                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2410   001D44  C016  F018         	movff	vfprintf@fmt,vfprintf@cfmt
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2413   001D48  EFAE  F00E         	goto	l2001
  2414   001D4C                     l1999:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2417   001D4C  C015  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2418   001D50  0E18               	movlw	low vfprintf@cfmt
  2419   001D52  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  2420   001D54  C017  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2421   001D58  EC5C  F009         	call	_vfpfcnvrt	;wreg free
  2422   001D5C                     l2001:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2425   001D5C  C018  FFF6         	movff	vfprintf@cfmt,tblptrl
  2426   001D60                     	if	1	;There is more than 1 active tblptr byte
  2427   001D60  0E10               	movlw	high __smallconst
  2428   001D62  6EF7               	movwf	tblptrh,c
  2429   001D64                     	endif
  2430   001D64                     	if	0	;tblptru may be non-zero
  2431   001D64                     	endif
  2432   001D64                     	if	0	;tblptru may be non-zero
  2433   001D64                     	endif
  2434   001D64  0008               	tblrd		*
  2435   001D66  50F5               	movf	tablat,w,c
  2436   001D68  0900               	iorlw	0
  2437   001D6A  A4D8               	btfss	status,2,c
  2438   001D6C  EFBA  F00E         	goto	u1101
  2439   001D70  EFBC  F00E         	goto	u1100
  2440   001D74                     u1101:
  2441   001D74  EFA6  F00E         	goto	l1999
  2442   001D78                     u1100:
  2443   001D78                     
  2444                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2445   001D78  0E00               	movlw	0
  2446   001D7A  6E16               	movwf	(?_vfprintf+1)^0,c
  2447   001D7C  0E00               	movlw	0
  2448   001D7E  6E15               	movwf	?_vfprintf^0,c
  2449   001D80  0012               	return		;funcret
  2450   001D82                     __end_of_vfprintf:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _vfpfcnvrt *****************
  2454 ;; Defined at:
  2455 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2458 ;;		 -> sprintf@f(11), 
  2459 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  2460 ;;		 -> vfprintf@cfmt(1), 
  2461 ;;  ap              1   12[COMRAM] PTR PTR void 
  2462 ;;		 -> sprintf@ap(1), 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  convarg         4   14[COMRAM] struct .
  2465 ;;  c               1   19[COMRAM] unsigned char 
  2466 ;;  cp              1   18[COMRAM] PTR unsigned char 
  2467 ;;		 -> STR_14(3), STR_5(3), 
  2468 ;;  done            1    0        _Bool 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2478 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;Total ram usage:       10 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 3
  2485 ;; This function calls:
  2486 ;;		___lwdiv
  2487 ;;		___lwmod
  2488 ;;		_fputc
  2489 ;; This function is called by:
  2490 ;;		_vfprintf
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text10
  2495   0012B8                     __ptext10:
  2496                           	callstack 0
  2497   0012B8                     _vfpfcnvrt:
  2498                           	callstack 22
  2499   0012B8                     
  2500                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2501   0012B8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2502   0012BA  6ED9               	movwf	fsr2l,c
  2503   0012BC  6ADA               	clrf	fsr2h,c
  2504   0012BE  CFDF FFF6          	movff	indf2,tblptrl
  2505   0012C2                     	if	1	;There is more than 1 active tblptr byte
  2506   0012C2  0E10               	movlw	high __smallconst
  2507   0012C4  6EF7               	movwf	tblptrh,c
  2508   0012C6                     	endif
  2509   0012C6                     	if	0	;tblptru may be non-zero
  2510   0012C6                     	endif
  2511   0012C6                     	if	0	;tblptru may be non-zero
  2512   0012C6                     	endif
  2513   0012C6  0008               	tblrd		*
  2514   0012C8  50F5               	movf	tablat,w,c
  2515   0012CA  0A25               	xorlw	37
  2516   0012CC  A4D8               	btfss	status,2,c
  2517   0012CE  EF6B  F009         	goto	u981
  2518   0012D2  EF6D  F009         	goto	u980
  2519   0012D6                     u981:
  2520   0012D6  EFFF  F009         	goto	l1955
  2521   0012DA                     u980:
  2522   0012DA                     
  2523                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2524   0012DA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2525   0012DC  6ED9               	movwf	fsr2l,c
  2526   0012DE  6ADA               	clrf	fsr2h,c
  2527   0012E0  2ADF               	incf	indf2,f,c
  2528   0012E2                     
  2529                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2530   0012E2  0E00               	movlw	0
  2531   0012E4  6E39               	movwf	(_width+1)^0,c
  2532   0012E6  0E00               	movlw	0
  2533   0012E8  6E38               	movwf	_width^0,c
  2534   0012EA  C038  F046         	movff	_width,_flags
  2535   0012EE                     
  2536                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2537   0012EE  683A               	setf	_prec^0,c
  2538   0012F0  683B               	setf	(_prec+1)^0,c
  2539   0012F2                     
  2540                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2541   0012F2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2542   0012F4  6ED9               	movwf	fsr2l,c
  2543   0012F6  6ADA               	clrf	fsr2h,c
  2544   0012F8  50DF               	movf	indf2,w,c
  2545   0012FA  6E13               	movwf	vfpfcnvrt@cp^0,c
  2546   0012FC  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2547   001300                     	if	1	;There is more than 1 active tblptr byte
  2548   001300  0E10               	movlw	high __smallconst
  2549   001302  6EF7               	movwf	tblptrh,c
  2550   001304                     	endif
  2551   001304                     	if	0	;tblptru may be non-zero
  2552   001304                     	endif
  2553   001304                     	if	0	;tblptru may be non-zero
  2554   001304                     	endif
  2555   001304  0008               	tblrd		*
  2556   001306  50F5               	movf	tablat,w,c
  2557   001308  0A75               	xorlw	117
  2558   00130A  A4D8               	btfss	status,2,c
  2559   00130C  EF8A  F009         	goto	u991
  2560   001310  EF8C  F009         	goto	u990
  2561   001314                     u991:
  2562   001314  EFF9  F009         	goto	l1951
  2563   001318                     u990:
  2564   001318                     
  2565                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2566   001318  500D               	movf	vfpfcnvrt@ap^0,w,c
  2567   00131A  6ED9               	movwf	fsr2l,c
  2568   00131C  6ADA               	clrf	fsr2h,c
  2569   00131E  0E02               	movlw	2
  2570   001320  26DF               	addwf	indf2,f,c
  2571   001322  5CDF               	subwf	indf2,w,c
  2572   001324  6ED9               	movwf	fsr2l,c
  2573   001326  6ADA               	clrf	fsr2h,c
  2574   001328  CFDE F00F          	movff	postinc2,vfpfcnvrt@convarg
  2575   00132C  CFDE F010          	movff	postinc2,vfpfcnvrt@convarg+1
  2576   001330                     
  2577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2578   001330  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2579   001332  6ED9               	movwf	fsr2l,c
  2580   001334  6ADA               	clrf	fsr2h,c
  2581   001336  2813               	incf	vfpfcnvrt@cp^0,w,c
  2582   001338  6EDF               	movwf	indf2,c
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2585   00133A  EFED  F009         	goto	l1949
  2586   00133E                     l1931:
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2589   00133E  0E20               	movlw	32
  2590   001340  6E14               	movwf	vfpfcnvrt@c^0,c
  2591   001342                     l1933:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2594   001342  0614               	decf	vfpfcnvrt@c^0,f,c
  2595   001344  5014               	movf	vfpfcnvrt@c^0,w,c
  2596   001346  0F60               	addlw	low _dbuf
  2597   001348  6ED9               	movwf	fsr2l,c
  2598   00134A  6ADA               	clrf	fsr2h,c
  2599   00134C  C00F  F003         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2600   001350  C010  F004         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2601   001354  0E00               	movlw	0
  2602   001356  6E06               	movwf	(___lwmod@divisor+1)^0,c
  2603   001358  0E0A               	movlw	10
  2604   00135A  6E05               	movwf	___lwmod@divisor^0,c
  2605   00135C  EC8C  F00D         	call	___lwmod	;wreg free
  2606   001360  5003               	movf	?___lwmod^0,w,c
  2607   001362  0F30               	addlw	48
  2608   001364  6EDF               	movwf	indf2,c
  2609   001366                     
  2610                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2611   001366  C00F  F003         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2612   00136A  C010  F004         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2613   00136E  0E00               	movlw	0
  2614   001370  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  2615   001372  0E0A               	movlw	10
  2616   001374  6E05               	movwf	___lwdiv@divisor^0,c
  2617   001376  EC52  F00D         	call	___lwdiv	;wreg free
  2618   00137A  C003  F00F         	movff	?___lwdiv,vfpfcnvrt@convarg
  2619   00137E  C004  F010         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2620   001382                     
  2621                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2622   001382  500F               	movf	vfpfcnvrt@convarg^0,w,c
  2623   001384  1010               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2624   001386  B4D8               	btfsc	status,2,c
  2625   001388  EFC8  F009         	goto	u1001
  2626   00138C  EFCA  F009         	goto	u1000
  2627   001390                     u1001:
  2628   001390  EFE2  F009         	goto	l1945
  2629   001394                     u1000:
  2630   001394  5014               	movf	vfpfcnvrt@c^0,w,c
  2631   001396  A4D8               	btfss	status,2,c
  2632   001398  EFD0  F009         	goto	u1011
  2633   00139C  EFD2  F009         	goto	u1010
  2634   0013A0                     u1011:
  2635   0013A0  EFA1  F009         	goto	l1933
  2636   0013A4                     u1010:
  2637   0013A4  EFE2  F009         	goto	l1945
  2638   0013A8                     l1941:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2641   0013A8  5014               	movf	vfpfcnvrt@c^0,w,c
  2642   0013AA  0F60               	addlw	low _dbuf
  2643   0013AC  6ED9               	movwf	fsr2l,c
  2644   0013AE  6ADA               	clrf	fsr2h,c
  2645   0013B0  50DF               	movf	indf2,w,c
  2646   0013B2  6E0E               	movwf	??_vfpfcnvrt^0,c
  2647   0013B4  500E               	movf	??_vfpfcnvrt^0,w,c
  2648   0013B6  6E03               	movwf	fputc@c^0,c
  2649   0013B8  6A04               	clrf	(fputc@c+1)^0,c
  2650   0013BA  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2651   0013BE  ECF6  F00B         	call	_fputc	;wreg free
  2652   0013C2  2A14               	incf	vfpfcnvrt@c^0,f,c
  2653   0013C4                     l1945:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2656   0013C4  0E20               	movlw	32
  2657   0013C6  1814               	xorwf	vfpfcnvrt@c^0,w,c
  2658   0013C8  A4D8               	btfss	status,2,c
  2659   0013CA  EFE9  F009         	goto	u1021
  2660   0013CE  EFEB  F009         	goto	u1020
  2661   0013D2                     u1021:
  2662   0013D2  EFD4  F009         	goto	l1941
  2663   0013D6                     u1020:
  2664   0013D6  EF10  F00A         	goto	l1093
  2665   0013DA                     l1949:
  2666   0013DA  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2667   0013DE                     	if	1	;There is more than 1 active tblptr byte
  2668   0013DE  0E10               	movlw	high __smallconst
  2669   0013E0  6EF7               	movwf	tblptrh,c
  2670   0013E2                     	endif
  2671   0013E2                     	if	0	;tblptru may be non-zero
  2672   0013E2                     	endif
  2673   0013E2                     	if	0	;tblptru may be non-zero
  2674   0013E2                     	endif
  2675   0013E2  0008               	tblrd		*
  2676   0013E4  50F5               	movf	tablat,w,c
  2677                           
  2678                           ; Switch size 1, requested type "simple"
  2679                           ; Number of cases is 1, Range of values is 117 to 117
  2680                           ; switch strategies available:
  2681                           ; Name         Instructions Cycles
  2682                           ; simple_byte            4     3 (average)
  2683                           ;	Chosen strategy is simple_byte
  2684   0013E6  0A75               	xorlw	117	; case 117
  2685   0013E8  B4D8               	btfsc	status,2,c
  2686   0013EA  EF9F  F009         	goto	l1931
  2687   0013EE  EFF9  F009         	goto	l1951
  2688   0013F2                     l1951:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2691   0013F2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2692   0013F4  6ED9               	movwf	fsr2l,c
  2693   0013F6  6ADA               	clrf	fsr2h,c
  2694   0013F8  2ADF               	incf	indf2,f,c
  2695   0013FA  EF10  F00A         	goto	l1093
  2696   0013FE                     l1955:
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2699   0013FE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2700   001400  6ED9               	movwf	fsr2l,c
  2701   001402  6ADA               	clrf	fsr2h,c
  2702   001404  CFDF FFF6          	movff	indf2,tblptrl
  2703   001408                     	if	1	;There is more than 1 active tblptr byte
  2704   001408  0E10               	movlw	high __smallconst
  2705   00140A  6EF7               	movwf	tblptrh,c
  2706   00140C                     	endif
  2707   00140C                     	if	0	;tblptru may be non-zero
  2708   00140C                     	endif
  2709   00140C                     	if	0	;tblptru may be non-zero
  2710   00140C                     	endif
  2711   00140C  0008               	tblrd		*
  2712   00140E  50F5               	movf	tablat,w,c
  2713   001410  6E03               	movwf	fputc@c^0,c
  2714   001412  6A04               	clrf	(fputc@c+1)^0,c
  2715   001414  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2716   001418  ECF6  F00B         	call	_fputc	;wreg free
  2717   00141C  EFF9  F009         	goto	l1951
  2718   001420                     l1093:
  2719   001420  0012               	return		;funcret
  2720   001422                     __end_of_vfpfcnvrt:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _fputc *****************
  2724 ;; Defined at:
  2725 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  c               2    2[COMRAM] int 
  2728 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  2729 ;;		 -> sprintf@f(11), 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  2    2[COMRAM] int 
  2734 ;; Registers used:
  2735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2741 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;Total ram usage:        8 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 2
  2748 ;; This function calls:
  2749 ;;		_putch
  2750 ;; This function is called by:
  2751 ;;		_vfpfcnvrt
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text11
  2756   0017EC                     __ptext11:
  2757                           	callstack 0
  2758   0017EC                     _fputc:
  2759                           	callstack 22
  2760   0017EC  5005               	movf	fputc@fp^0,w,c
  2761   0017EE  B4D8               	btfsc	status,2,c
  2762   0017F0  EFFC  F00B         	goto	u941
  2763   0017F4  EFFE  F00B         	goto	u940
  2764   0017F8                     u941:
  2765   0017F8  EF06  F00C         	goto	l1899
  2766   0017FC                     u940:
  2767   0017FC  5005               	movf	fputc@fp^0,w,c
  2768   0017FE  A4D8               	btfss	status,2,c
  2769   001800  EF04  F00C         	goto	u951
  2770   001804  EF06  F00C         	goto	u950
  2771   001808                     u951:
  2772   001808  EF0B  F00C         	goto	l1901
  2773   00180C                     u950:
  2774   00180C                     l1899:
  2775   00180C  5003               	movf	fputc@c^0,w,c
  2776   00180E  EC8F  F00F         	call	_putch
  2777   001812  EF4A  F00C         	goto	l1112
  2778   001816                     l1901:
  2779   001816  5005               	movf	fputc@fp^0,w,c
  2780   001818  6ED9               	movwf	fsr2l,c
  2781   00181A  6ADA               	clrf	fsr2h,c
  2782   00181C  0E09               	movlw	9
  2783   00181E  26D9               	addwf	fsr2l,f,c
  2784   001820  50DE               	movf	postinc2,w,c
  2785   001822  10DE               	iorwf	postinc2,w,c
  2786   001824  B4D8               	btfsc	status,2,c
  2787   001826  EF17  F00C         	goto	u961
  2788   00182A  EF19  F00C         	goto	u960
  2789   00182E                     u961:
  2790   00182E  EF32  F00C         	goto	l1905
  2791   001832                     u960:
  2792   001832  5005               	movf	fputc@fp^0,w,c
  2793   001834  6ED9               	movwf	fsr2l,c
  2794   001836  6ADA               	clrf	fsr2h,c
  2795   001838  0E09               	movlw	9
  2796   00183A  26D9               	addwf	fsr2l,f,c
  2797   00183C  5005               	movf	fputc@fp^0,w,c
  2798   00183E  6EE1               	movwf	fsr1l,c
  2799   001840  6AE2               	clrf	fsr1h,c
  2800   001842  0E02               	movlw	2
  2801   001844  26E1               	addwf	fsr1l,f,c
  2802   001846  50DE               	movf	postinc2,w,c
  2803   001848  5CE6               	subwf	postinc1,w,c
  2804   00184A  50E6               	movf	postinc1,w,c
  2805   00184C  0A80               	xorlw	128
  2806   00184E  6E0A               	movwf	(??_fputc+4)^0,c
  2807   001850  50DE               	movf	postinc2,w,c
  2808   001852  0A80               	xorlw	128
  2809   001854  580A               	subwfb	(??_fputc+4)^0,w,c
  2810   001856  B0D8               	btfsc	status,0,c
  2811   001858  EF30  F00C         	goto	u971
  2812   00185C  EF32  F00C         	goto	u970
  2813   001860                     u971:
  2814   001860  EF4A  F00C         	goto	l1112
  2815   001864                     u970:
  2816   001864                     l1905:
  2817   001864  5005               	movf	fputc@fp^0,w,c
  2818   001866  6ED9               	movwf	fsr2l,c
  2819   001868  6ADA               	clrf	fsr2h,c
  2820   00186A  0E02               	movlw	2
  2821   00186C  26D9               	addwf	fsr2l,f,c
  2822   00186E  50DF               	movf	indf2,w,c
  2823   001870  6E06               	movwf	??_fputc^0,c
  2824   001872  5005               	movf	fputc@fp^0,w,c
  2825   001874  6ED9               	movwf	fsr2l,c
  2826   001876  6ADA               	clrf	fsr2h,c
  2827   001878  50DF               	movf	indf2,w,c
  2828   00187A  2406               	addwf	??_fputc^0,w,c
  2829   00187C  6ED9               	movwf	fsr2l,c
  2830   00187E  6ADA               	clrf	fsr2h,c
  2831   001880  C003  FFDF         	movff	fputc@c,indf2
  2832   001884  5005               	movf	fputc@fp^0,w,c
  2833   001886  6ED9               	movwf	fsr2l,c
  2834   001888  6ADA               	clrf	fsr2h,c
  2835   00188A  0E02               	movlw	2
  2836   00188C  26D9               	addwf	fsr2l,f,c
  2837   00188E  2ADE               	incf	postinc2,f,c
  2838   001890  0E00               	movlw	0
  2839   001892  22DD               	addwfc	postdec2,f,c
  2840   001894                     l1112:
  2841   001894  0012               	return		;funcret
  2842   001896                     __end_of_fputc:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function _putch *****************
  2846 ;; Defined at:
  2847 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  c               1    wreg     unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  c               1    0[COMRAM] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:        0 bytes
  2866 ;; Hardware stack levels used: 1
  2867 ;; Hardware stack levels required when called: 1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_fputc
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text12
  2876   001F1E                     __ptext12:
  2877                           	callstack 0
  2878   001F1E                     _putch:
  2879                           	callstack 22
  2880   001F1E  0012               	return		;funcret
  2881   001F20                     __end_of_putch:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function ___lwmod *****************
  2885 ;; Defined at:
  2886 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  dividend        2    2[COMRAM] unsigned int 
  2889 ;;  divisor         2    4[COMRAM] unsigned int 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  counter         1    6[COMRAM] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  2    2[COMRAM] unsigned int 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;Total ram usage:        5 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; Hardware stack levels required when called: 1
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_vfpfcnvrt
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text13
  2916   001B18                     __ptext13:
  2917                           	callstack 0
  2918   001B18                     ___lwmod:
  2919                           	callstack 23
  2920   001B18  5005               	movf	___lwmod@divisor^0,w,c
  2921   001B1A  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  2922   001B1C  B4D8               	btfsc	status,2,c
  2923   001B1E  EF93  F00D         	goto	u911
  2924   001B22  EF95  F00D         	goto	u910
  2925   001B26                     u911:
  2926   001B26  EFB9  F00D         	goto	l870
  2927   001B2A                     u910:
  2928   001B2A  0E01               	movlw	1
  2929   001B2C  6E07               	movwf	___lwmod@counter^0,c
  2930   001B2E  EF9D  F00D         	goto	l1885
  2931   001B32                     l1883:
  2932   001B32  90D8               	bcf	status,0,c
  2933   001B34  3605               	rlcf	___lwmod@divisor^0,f,c
  2934   001B36  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  2935   001B38  2A07               	incf	___lwmod@counter^0,f,c
  2936   001B3A                     l1885:
  2937   001B3A  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  2938   001B3C  EFA2  F00D         	goto	u921
  2939   001B40  EFA4  F00D         	goto	u920
  2940   001B44                     u921:
  2941   001B44  EF99  F00D         	goto	l1883
  2942   001B48                     u920:
  2943   001B48                     l1887:
  2944   001B48  5005               	movf	___lwmod@divisor^0,w,c
  2945   001B4A  5C03               	subwf	___lwmod@dividend^0,w,c
  2946   001B4C  5006               	movf	(___lwmod@divisor+1)^0,w,c
  2947   001B4E  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  2948   001B50  A0D8               	btfss	status,0,c
  2949   001B52  EFAD  F00D         	goto	u931
  2950   001B56  EFAF  F00D         	goto	u930
  2951   001B5A                     u931:
  2952   001B5A  EFB3  F00D         	goto	l1891
  2953   001B5E                     u930:
  2954   001B5E  5005               	movf	___lwmod@divisor^0,w,c
  2955   001B60  5E03               	subwf	___lwmod@dividend^0,f,c
  2956   001B62  5006               	movf	(___lwmod@divisor+1)^0,w,c
  2957   001B64  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  2958   001B66                     l1891:
  2959   001B66  90D8               	bcf	status,0,c
  2960   001B68  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  2961   001B6A  3205               	rrcf	___lwmod@divisor^0,f,c
  2962   001B6C  2E07               	decfsz	___lwmod@counter^0,f,c
  2963   001B6E  EFA4  F00D         	goto	l1887
  2964   001B72                     l870:
  2965   001B72  C003  F003         	movff	___lwmod@dividend,?___lwmod
  2966   001B76  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  2967   001B7A  0012               	return		;funcret
  2968   001B7C                     __end_of___lwmod:
  2969                           	callstack 0
  2970                           
  2971 ;; *************** function ___lwdiv *****************
  2972 ;; Defined at:
  2973 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  dividend        2    2[COMRAM] unsigned int 
  2976 ;;  divisor         2    4[COMRAM] unsigned int 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  quotient        2    6[COMRAM] unsigned int 
  2979 ;;  counter         1    8[COMRAM] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  2    2[COMRAM] unsigned int 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        7 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_vfpfcnvrt
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text14
  3004   001AA4                     __ptext14:
  3005                           	callstack 0
  3006   001AA4                     ___lwdiv:
  3007                           	callstack 23
  3008   001AA4  0E00               	movlw	0
  3009   001AA6  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  3010   001AA8  0E00               	movlw	0
  3011   001AAA  6E07               	movwf	___lwdiv@quotient^0,c
  3012   001AAC  5005               	movf	___lwdiv@divisor^0,w,c
  3013   001AAE  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3014   001AB0  B4D8               	btfsc	status,2,c
  3015   001AB2  EF5D  F00D         	goto	u881
  3016   001AB6  EF5F  F00D         	goto	u880
  3017   001ABA                     u881:
  3018   001ABA  EF87  F00D         	goto	l860
  3019   001ABE                     u880:
  3020   001ABE  0E01               	movlw	1
  3021   001AC0  6E09               	movwf	___lwdiv@counter^0,c
  3022   001AC2  EF67  F00D         	goto	l1865
  3023   001AC6                     l1863:
  3024   001AC6  90D8               	bcf	status,0,c
  3025   001AC8  3605               	rlcf	___lwdiv@divisor^0,f,c
  3026   001ACA  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3027   001ACC  2A09               	incf	___lwdiv@counter^0,f,c
  3028   001ACE                     l1865:
  3029   001ACE  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  3030   001AD0  EF6C  F00D         	goto	u891
  3031   001AD4  EF6E  F00D         	goto	u890
  3032   001AD8                     u891:
  3033   001AD8  EF63  F00D         	goto	l1863
  3034   001ADC                     u890:
  3035   001ADC                     l1867:
  3036   001ADC  90D8               	bcf	status,0,c
  3037   001ADE  3607               	rlcf	___lwdiv@quotient^0,f,c
  3038   001AE0  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3039   001AE2  5005               	movf	___lwdiv@divisor^0,w,c
  3040   001AE4  5C03               	subwf	___lwdiv@dividend^0,w,c
  3041   001AE6  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  3042   001AE8  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3043   001AEA  A0D8               	btfss	status,0,c
  3044   001AEC  EF7A  F00D         	goto	u901
  3045   001AF0  EF7C  F00D         	goto	u900
  3046   001AF4                     u901:
  3047   001AF4  EF81  F00D         	goto	l1875
  3048   001AF8                     u900:
  3049   001AF8  5005               	movf	___lwdiv@divisor^0,w,c
  3050   001AFA  5E03               	subwf	___lwdiv@dividend^0,f,c
  3051   001AFC  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  3052   001AFE  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3053   001B00  8007               	bsf	___lwdiv@quotient^0,0,c
  3054   001B02                     l1875:
  3055   001B02  90D8               	bcf	status,0,c
  3056   001B04  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3057   001B06  3205               	rrcf	___lwdiv@divisor^0,f,c
  3058   001B08  2E09               	decfsz	___lwdiv@counter^0,f,c
  3059   001B0A  EF6E  F00D         	goto	l1867
  3060   001B0E                     l860:
  3061   001B0E  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  3062   001B12  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3063   001B16  0012               	return		;funcret
  3064   001B18                     __end_of___lwdiv:
  3065                           	callstack 0
  3066                           
  3067 ;; *************** function _hex_char_to_value *****************
  3068 ;; Defined at:
  3069 ;;		line 305 in file "OBCII_PIC18F46K22.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  c               1    wreg     unsigned char 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  c               1    2[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      unsigned char 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;Total ram usage:        1 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; Hardware stack levels required when called: 1
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_print_RPM
  3094 ;;		_print_AI_Temp
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text15
  3099   001930                     __ptext15:
  3100                           	callstack 0
  3101   001930                     _hex_char_to_value:
  3102                           	callstack 26
  3103                           
  3104                           ;incstack = 0
  3105                           ;hex_char_to_value@c stored from wreg
  3106   001930  6E03               	movwf	hex_char_to_value@c^0,c
  3107   001932                     
  3108                           ;OBCII_PIC18F46K22.c: 306:     if (c >= '0' && c <= '9') return c - '0';
  3109   001932  0E2F               	movlw	47
  3110   001934  6403               	cpfsgt	hex_char_to_value@c^0,c
  3111   001936  EF9F  F00C         	goto	u1191
  3112   00193A  EFA1  F00C         	goto	u1190
  3113   00193E                     u1191:
  3114   00193E  EFAD  F00C         	goto	l2043
  3115   001942                     u1190:
  3116   001942  0E3A               	movlw	58
  3117   001944  6003               	cpfslt	hex_char_to_value@c^0,c
  3118   001946  EFA7  F00C         	goto	u1201
  3119   00194A  EFA9  F00C         	goto	u1200
  3120   00194E                     u1201:
  3121   00194E  EFAD  F00C         	goto	l2043
  3122   001952                     u1200:
  3123   001952  5003               	movf	hex_char_to_value@c^0,w,c
  3124   001954  0FD0               	addlw	208
  3125   001956  EFD6  F00C         	goto	l202
  3126   00195A                     l2043:
  3127                           
  3128                           ;OBCII_PIC18F46K22.c: 307:     if (c >= 'A' && c <= 'F') return c - 'A' + 10;
  3129   00195A  0E40               	movlw	64
  3130   00195C  6403               	cpfsgt	hex_char_to_value@c^0,c
  3131   00195E  EFB3  F00C         	goto	u1211
  3132   001962  EFB5  F00C         	goto	u1210
  3133   001966                     u1211:
  3134   001966  EFC1  F00C         	goto	l2051
  3135   00196A                     u1210:
  3136   00196A  0E47               	movlw	71
  3137   00196C  6003               	cpfslt	hex_char_to_value@c^0,c
  3138   00196E  EFBB  F00C         	goto	u1221
  3139   001972  EFBD  F00C         	goto	u1220
  3140   001976                     u1221:
  3141   001976  EFC1  F00C         	goto	l2051
  3142   00197A                     u1220:
  3143   00197A  5003               	movf	hex_char_to_value@c^0,w,c
  3144   00197C  0FC9               	addlw	201
  3145   00197E  EFD6  F00C         	goto	l202
  3146   001982                     l2051:
  3147                           
  3148                           ;OBCII_PIC18F46K22.c: 308:     if (c >= 'a' && c <= 'f') return c - 'a' + 10;
  3149   001982  0E60               	movlw	96
  3150   001984  6403               	cpfsgt	hex_char_to_value@c^0,c
  3151   001986  EFC7  F00C         	goto	u1231
  3152   00198A  EFC9  F00C         	goto	u1230
  3153   00198E                     u1231:
  3154   00198E  EFD5  F00C         	goto	l2059
  3155   001992                     u1230:
  3156   001992  0E67               	movlw	103
  3157   001994  6003               	cpfslt	hex_char_to_value@c^0,c
  3158   001996  EFCF  F00C         	goto	u1241
  3159   00199A  EFD1  F00C         	goto	u1240
  3160   00199E                     u1241:
  3161   00199E  EFD5  F00C         	goto	l2059
  3162   0019A2                     u1240:
  3163   0019A2  5003               	movf	hex_char_to_value@c^0,w,c
  3164   0019A4  0FA9               	addlw	169
  3165   0019A6  EFD6  F00C         	goto	l202
  3166   0019AA                     l2059:
  3167                           
  3168                           ;OBCII_PIC18F46K22.c: 309:     return 0;
  3169   0019AA  0E00               	movlw	0
  3170   0019AC                     l202:
  3171   0019AC  0012               	return		;funcret
  3172   0019AE                     __end_of_hex_char_to_value:
  3173                           	callstack 0
  3174                           
  3175 ;; *************** function _display_system_info *****************
  3176 ;; Defined at:
  3177 ;;		line 432 in file "OBCII_PIC18F46K22.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 5
  3198 ;; This function calls:
  3199 ;;		_print_ELMVer
  3200 ;;		_print_SAEVer
  3201 ;; This function is called by:
  3202 ;;		_main_menu
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text16
  3207   001F12                     __ptext16:
  3208                           	callstack 0
  3209   001F12                     _display_system_info:
  3210                           	callstack 24
  3211   001F12                     
  3212                           ;OBCII_PIC18F46K22.c: 433:     print_ELMVer();
  3213   001F12  EC62  F00E         	call	_print_ELMVer	;wreg free
  3214                           
  3215                           ;OBCII_PIC18F46K22.c: 434:     print_SAEVer();
  3216   001F16  EC41  F00E         	call	_print_SAEVer	;wreg free
  3217   001F1A  0012               	return		;funcret
  3218   001F1C                     __end_of_display_system_info:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _print_SAEVer *****************
  3222 ;; Defined at:
  3223 ;;		line 416 in file "OBCII_PIC18F46K22.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 4
  3244 ;; This function calls:
  3245 ;;		_LCD_cursor_set
  3246 ;;		_LCD_write_string
  3247 ;;		_UART1_SendString
  3248 ;; This function is called by:
  3249 ;;		_display_system_info
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text17
  3254   001C82                     __ptext17:
  3255                           	callstack 0
  3256   001C82                     _print_SAEVer:
  3257                           	callstack 24
  3258   001C82                     
  3259                           ;OBCII_PIC18F46K22.c: 417:     UART1_SendString("0108\r");
  3260   001C82  0E28               	movlw	low STR_19
  3261   001C84  6E04               	movwf	UART1_SendString@string^0,c
  3262   001C86  EC1C  F00E         	call	_UART1_SendString	;wreg free
  3263   001C8A                     l2181:
  3264                           
  3265                           ;OBCII_PIC18F46K22.c: 419:     while(!message_complete) {
  3266   001C8A  5047               	movf	_message_complete^0,w,c	;volatile
  3267   001C8C  B4D8               	btfsc	status,2,c
  3268   001C8E  EF4B  F00E         	goto	u1321
  3269   001C92  EF4D  F00E         	goto	u1320
  3270   001C96                     u1321:
  3271   001C96  EF45  F00E         	goto	l2181
  3272   001C9A                     u1320:
  3273   001C9A                     
  3274                           ;OBCII_PIC18F46K22.c: 423:     LCD_cursor_set(2,1);
  3275   001C9A  0E01               	movlw	1
  3276   001C9C  6E06               	movwf	LCD_cursor_set@column^0,c
  3277   001C9E  0E02               	movlw	2
  3278   001CA0  ECBE  F00D         	call	_LCD_cursor_set
  3279   001CA4                     
  3280                           ;OBCII_PIC18F46K22.c: 424:     LCD_write_string("SAE: ");
  3281   001CA4  0E46               	movlw	low STR_20
  3282   001CA6  6E06               	movwf	LCD_write_string@string^0,c
  3283   001CA8  5006               	movf	LCD_write_string@string^0,w,c
  3284   001CAA  A4D8               	btfss	status,2,c
  3285   001CAC  0E10               	movlw	high __smallconst
  3286   001CAE  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3287   001CB0  EC15  F00D         	call	_LCD_write_string	;wreg free
  3288   001CB4                     
  3289                           ;OBCII_PIC18F46K22.c: 425:     LCD_write_string(buffer);
  3290   001CB4  0E80               	movlw	low _buffer
  3291   001CB6  6E06               	movwf	LCD_write_string@string^0,c
  3292   001CB8  6A07               	clrf	(LCD_write_string@string+1)^0,c
  3293   001CBA  EC15  F00D         	call	_LCD_write_string	;wreg free
  3294   001CBE                     
  3295                           ;OBCII_PIC18F46K22.c: 428:     buffer_count = 0;
  3296   001CBE  6A49               	clrf	_buffer_count^0,c
  3297   001CC0                     
  3298                           ;OBCII_PIC18F46K22.c: 429:     message_complete = 0;
  3299   001CC0  6A47               	clrf	_message_complete^0,c	;volatile
  3300   001CC2  0012               	return		;funcret
  3301   001CC4                     __end_of_print_SAEVer:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _print_ELMVer *****************
  3305 ;; Defined at:
  3306 ;;		line 399 in file "OBCII_PIC18F46K22.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 4
  3327 ;; This function calls:
  3328 ;;		_LCD_cursor_set
  3329 ;;		_LCD_write_string
  3330 ;;		_UART1_SendString
  3331 ;; This function is called by:
  3332 ;;		_display_system_info
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text18
  3337   001CC4                     __ptext18:
  3338                           	callstack 0
  3339   001CC4                     _print_ELMVer:
  3340                           	callstack 24
  3341   001CC4                     
  3342                           ;OBCII_PIC18F46K22.c: 401:     UART1_SendString("ATI\r");
  3343   001CC4  0E58               	movlw	low STR_17
  3344   001CC6  6E04               	movwf	UART1_SendString@string^0,c
  3345   001CC8  EC1C  F00E         	call	_UART1_SendString	;wreg free
  3346   001CCC                     l2167:
  3347                           
  3348                           ;OBCII_PIC18F46K22.c: 403:     while(!message_complete) {
  3349   001CCC  5047               	movf	_message_complete^0,w,c	;volatile
  3350   001CCE  B4D8               	btfsc	status,2,c
  3351   001CD0  EF6C  F00E         	goto	u1311
  3352   001CD4  EF6E  F00E         	goto	u1310
  3353   001CD8                     u1311:
  3354   001CD8  EF66  F00E         	goto	l2167
  3355   001CDC                     u1310:
  3356   001CDC                     
  3357                           ;OBCII_PIC18F46K22.c: 407:     LCD_cursor_set(1,1);
  3358   001CDC  0E01               	movlw	1
  3359   001CDE  6E06               	movwf	LCD_cursor_set@column^0,c
  3360   001CE0  0E01               	movlw	1
  3361   001CE2  ECBE  F00D         	call	_LCD_cursor_set
  3362   001CE6                     
  3363                           ;OBCII_PIC18F46K22.c: 408:     LCD_write_string("ELM: ");
  3364   001CE6  0E4C               	movlw	low STR_18
  3365   001CE8  6E06               	movwf	LCD_write_string@string^0,c
  3366   001CEA  5006               	movf	LCD_write_string@string^0,w,c
  3367   001CEC  A4D8               	btfss	status,2,c
  3368   001CEE  0E10               	movlw	high __smallconst
  3369   001CF0  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3370   001CF2  EC15  F00D         	call	_LCD_write_string	;wreg free
  3371   001CF6                     
  3372                           ;OBCII_PIC18F46K22.c: 409:     LCD_write_string(buffer);
  3373   001CF6  0E80               	movlw	low _buffer
  3374   001CF8  6E06               	movwf	LCD_write_string@string^0,c
  3375   001CFA  6A07               	clrf	(LCD_write_string@string+1)^0,c
  3376   001CFC  EC15  F00D         	call	_LCD_write_string	;wreg free
  3377   001D00                     
  3378                           ;OBCII_PIC18F46K22.c: 412:     buffer_count = 0;
  3379   001D00  6A49               	clrf	_buffer_count^0,c
  3380   001D02                     
  3381                           ;OBCII_PIC18F46K22.c: 413:     message_complete = 0;
  3382   001D02  6A47               	clrf	_message_complete^0,c	;volatile
  3383   001D04  0012               	return		;funcret
  3384   001D06                     __end_of_print_ELMVer:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _UART1_SendString *****************
  3388 ;; Defined at:
  3389 ;;		line 162 in file "OBCII_PIC18F46K22.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  string          1    3[COMRAM] PTR unsigned char 
  3392 ;;		 -> STR_21(6), STR_19(6), STR_17(5), STR_12(6), 
  3393 ;;		 -> STR_8(6), STR_4(6), STR_1(6), 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  i               2    5[COMRAM] unsigned int 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3405 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;Total ram usage:        4 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 2
  3412 ;; This function calls:
  3413 ;;		_UART1_SendChar
  3414 ;; This function is called by:
  3415 ;;		_main
  3416 ;;		_print_RPM
  3417 ;;		_print_Vbatt
  3418 ;;		_print_AI_Temp
  3419 ;;		_print_ELMVer
  3420 ;;		_print_SAEVer
  3421 ;;		_read_diagnostic_codes
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text19
  3426   001C38                     __ptext19:
  3427                           	callstack 0
  3428   001C38                     _UART1_SendString:
  3429                           	callstack 25
  3430   001C38                     
  3431                           ;OBCII_PIC18F46K22.c: 163:     for (unsigned int i = 0; string[i] != '\0'; i++){
  3432   001C38  0E00               	movlw	0
  3433   001C3A  6E07               	movwf	(UART1_SendString@i+1)^0,c
  3434   001C3C  0E00               	movlw	0
  3435   001C3E  6E06               	movwf	UART1_SendString@i^0,c
  3436   001C40  EF2F  F00E         	goto	l2013
  3437   001C44                     l2009:
  3438                           
  3439                           ;OBCII_PIC18F46K22.c: 164:         UART1_SendChar(string[i]);
  3440   001C44  5004               	movf	UART1_SendString@string^0,w,c
  3441   001C46  2406               	addwf	UART1_SendString@i^0,w,c
  3442   001C48  6E05               	movwf	??_UART1_SendString^0,c
  3443   001C4A  C005  FFF6         	movff	??_UART1_SendString,tblptrl
  3444   001C4E                     	if	1	;There is more than 1 active tblptr byte
  3445   001C4E  0E10               	movlw	high __smallconst
  3446   001C50  6EF7               	movwf	tblptrh,c
  3447   001C52                     	endif
  3448   001C52                     	if	0	;tblptru may be non-zero
  3449   001C52                     	endif
  3450   001C52                     	if	0	;tblptru may be non-zero
  3451   001C52                     	endif
  3452   001C52  0008               	tblrd		*
  3453   001C54  50F5               	movf	tablat,w,c
  3454   001C56  EC63  F00F         	call	_UART1_SendChar
  3455   001C5A                     
  3456                           ;OBCII_PIC18F46K22.c: 165:     }
  3457   001C5A  4A06               	infsnz	UART1_SendString@i^0,f,c
  3458   001C5C  2A07               	incf	(UART1_SendString@i+1)^0,f,c
  3459   001C5E                     l2013:
  3460   001C5E  5004               	movf	UART1_SendString@string^0,w,c
  3461   001C60  2406               	addwf	UART1_SendString@i^0,w,c
  3462   001C62  6E05               	movwf	??_UART1_SendString^0,c
  3463   001C64  C005  FFF6         	movff	??_UART1_SendString,tblptrl
  3464   001C68                     	if	1	;There is more than 1 active tblptr byte
  3465   001C68  0E10               	movlw	high __smallconst
  3466   001C6A  6EF7               	movwf	tblptrh,c
  3467   001C6C                     	endif
  3468   001C6C                     	if	0	;tblptru may be non-zero
  3469   001C6C                     	endif
  3470   001C6C                     	if	0	;tblptru may be non-zero
  3471   001C6C                     	endif
  3472   001C6C  0008               	tblrd		*
  3473   001C6E  50F5               	movf	tablat,w,c
  3474   001C70  0900               	iorlw	0
  3475   001C72  A4D8               	btfss	status,2,c
  3476   001C74  EF3E  F00E         	goto	u1111
  3477   001C78  EF40  F00E         	goto	u1110
  3478   001C7C                     u1111:
  3479   001C7C  EF22  F00E         	goto	l2009
  3480   001C80                     u1110:
  3481   001C80  0012               	return		;funcret
  3482   001C82                     __end_of_UART1_SendString:
  3483                           	callstack 0
  3484                           
  3485 ;; *************** function _UART1_SendChar *****************
  3486 ;; Defined at:
  3487 ;;		line 168 in file "OBCII_PIC18F46K22.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  c               1    wreg     unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  c               1    2[COMRAM] unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;Total ram usage:        1 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 1
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_UART1_SendString
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text20
  3516   001EC6                     __ptext20:
  3517                           	callstack 0
  3518   001EC6                     _UART1_SendChar:
  3519                           	callstack 25
  3520                           
  3521                           ;incstack = 0
  3522                           ;UART1_SendChar@c stored from wreg
  3523   001EC6  6E03               	movwf	UART1_SendChar@c^0,c
  3524   001EC8                     l147:
  3525   001EC8  A2AC               	btfss	172,1,c	;volatile
  3526   001ECA  EF69  F00F         	goto	u1031
  3527   001ECE  EF6B  F00F         	goto	u1030
  3528   001ED2                     u1031:
  3529   001ED2  EF64  F00F         	goto	l147
  3530   001ED6                     u1030:
  3531   001ED6                     
  3532                           ;OBCII_PIC18F46K22.c: 170:         TXREG = c;
  3533   001ED6  C003  FFAD         	movff	UART1_SendChar@c,4013	;volatile
  3534   001EDA  0012               	return		;funcret
  3535   001EDC                     __end_of_UART1_SendChar:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _display_mm *****************
  3539 ;; Defined at:
  3540 ;;		line 182 in file "OBCII_PIC18F46K22.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 4
  3561 ;; This function calls:
  3562 ;;		_LCD_cursor_set
  3563 ;;		_LCD_write_string
  3564 ;; This function is called by:
  3565 ;;		_main_menu
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text21
  3570   001DF2                     __ptext21:
  3571                           	callstack 0
  3572   001DF2                     _display_mm:
  3573                           	callstack 25
  3574   001DF2                     
  3575                           ;OBCII_PIC18F46K22.c: 183:     LCD_cursor_set(1,1);
  3576   001DF2  0E01               	movlw	1
  3577   001DF4  6E06               	movwf	LCD_cursor_set@column^0,c
  3578   001DF6  0E01               	movlw	1
  3579   001DF8  ECBE  F00D         	call	_LCD_cursor_set
  3580   001DFC                     
  3581                           ;OBCII_PIC18F46K22.c: 184:     LCD_write_string("MENU<<OBDIIPIC>>");
  3582   001DFC  0E01               	movlw	low STR_2
  3583   001DFE  6E06               	movwf	LCD_write_string@string^0,c
  3584   001E00  5006               	movf	LCD_write_string@string^0,w,c
  3585   001E02  A4D8               	btfss	status,2,c
  3586   001E04  0E10               	movlw	high __smallconst
  3587   001E06  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3588   001E08  EC15  F00D         	call	_LCD_write_string	;wreg free
  3589   001E0C                     
  3590                           ;OBCII_PIC18F46K22.c: 185:     LCD_cursor_set(2,1);
  3591   001E0C  0E01               	movlw	1
  3592   001E0E  6E06               	movwf	LCD_cursor_set@column^0,c
  3593   001E10  0E02               	movlw	2
  3594   001E12  ECBE  F00D         	call	_LCD_cursor_set
  3595                           
  3596                           ;OBCII_PIC18F46K22.c: 186:     LCD_write_string("LRM RDC CDC DSI");
  3597   001E16  0E12               	movlw	low STR_3
  3598   001E18  6E06               	movwf	LCD_write_string@string^0,c
  3599   001E1A  5006               	movf	LCD_write_string@string^0,w,c
  3600   001E1C  A4D8               	btfss	status,2,c
  3601   001E1E  0E10               	movlw	high __smallconst
  3602   001E20  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3603   001E22  EC15  F00D         	call	_LCD_write_string	;wreg free
  3604   001E26  0012               	return		;funcret
  3605   001E28                     __end_of_display_mm:
  3606                           	callstack 0
  3607                           
  3608 ;; *************** function _LCD_write_string *****************
  3609 ;; Defined at:
  3610 ;;		line 362 in file "LCD.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  string          2    5[COMRAM] PTR unsigned char 
  3613 ;;		 -> STR_20(6), STR_18(6), STR_16(2), STR_15(4), 
  3614 ;;		 -> air_intake_string(16), STR_13(4), STR_11(4), STR_10(6), 
  3615 ;;		 -> STR_9(6), STR_7(4), STR_6(6), rpm_string(16), 
  3616 ;;		 -> STR_3(16), STR_2(17), buffer(32), 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  i               1    9[COMRAM] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;Total ram usage:        5 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 3
  3635 ;; This function calls:
  3636 ;;		_LCD_write_data
  3637 ;; This function is called by:
  3638 ;;		_display_mm
  3639 ;;		_print_RPM
  3640 ;;		_print_Vbatt
  3641 ;;		_print_AI_Temp
  3642 ;;		_print_ELMVer
  3643 ;;		_print_SAEVer
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text22
  3648   001A2A                     __ptext22:
  3649                           	callstack 0
  3650   001A2A                     _LCD_write_string:
  3651                           	callstack 24
  3652   001A2A                     
  3653                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  3654   001A2A  6A0A               	clrf	LCD_write_string@i^0,c
  3655   001A2C  EF32  F00D         	goto	l2033
  3656   001A30                     l2029:
  3657                           
  3658                           ;LCD.c: 366:         LCD_write_data(string[i]);
  3659   001A30  500A               	movf	LCD_write_string@i^0,w,c
  3660   001A32  2406               	addwf	LCD_write_string@string^0,w,c
  3661   001A34  6E08               	movwf	??_LCD_write_string^0,c
  3662   001A36  0E00               	movlw	0
  3663   001A38  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  3664   001A3A  6E09               	movwf	(??_LCD_write_string+1)^0,c
  3665   001A3C  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  3666   001A40  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  3667   001A44  0E00               	movlw	low (__smallconst shr (0+16))
  3668   001A46  6EF8               	movwf	tblptru,c
  3669   001A48  0E0F               	movlw	(high __ramtop+-1)
  3670   001A4A  64F7               	cpfsgt	tblptrh,c
  3671   001A4C  D003               	bra	u1167
  3672   001A4E  0008               	tblrd		*
  3673   001A50  50F5               	movf	tablat,w,c
  3674   001A52  D005               	bra	u1160
  3675   001A54                     u1167:
  3676   001A54  CFF6 FFE9          	movff	tblptrl,fsr0l
  3677   001A58  CFF7 FFEA          	movff	tblptrh,fsr0h
  3678   001A5C  50EF               	movf	indf0,w,c
  3679   001A5E                     u1160:
  3680   001A5E  EC91  F00A         	call	_LCD_write_data
  3681   001A62                     
  3682                           ;LCD.c: 367:     }
  3683   001A62  2A0A               	incf	LCD_write_string@i^0,f,c
  3684   001A64                     l2033:
  3685   001A64  500A               	movf	LCD_write_string@i^0,w,c
  3686   001A66  2406               	addwf	LCD_write_string@string^0,w,c
  3687   001A68  6E08               	movwf	??_LCD_write_string^0,c
  3688   001A6A  0E00               	movlw	0
  3689   001A6C  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  3690   001A6E  6E09               	movwf	(??_LCD_write_string+1)^0,c
  3691   001A70  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  3692   001A74  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  3693   001A78  0E00               	movlw	low (__smallconst shr (0+16))
  3694   001A7A  6EF8               	movwf	tblptru,c
  3695   001A7C  0E0F               	movlw	(high __ramtop+-1)
  3696   001A7E  64F7               	cpfsgt	tblptrh,c
  3697   001A80  D003               	bra	u1177
  3698   001A82  0008               	tblrd		*
  3699   001A84  50F5               	movf	tablat,w,c
  3700   001A86  D005               	bra	u1170
  3701   001A88                     u1177:
  3702   001A88  CFF6 FFE9          	movff	tblptrl,fsr0l
  3703   001A8C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3704   001A90  50EF               	movf	indf0,w,c
  3705   001A92                     u1170:
  3706   001A92  0900               	iorlw	0
  3707   001A94  A4D8               	btfss	status,2,c
  3708   001A96  EF4F  F00D         	goto	u1181
  3709   001A9A  EF51  F00D         	goto	u1180
  3710   001A9E                     u1181:
  3711   001A9E  EF18  F00D         	goto	l2029
  3712   001AA2                     u1180:
  3713   001AA2  0012               	return		;funcret
  3714   001AA4                     __end_of_LCD_write_string:
  3715                           	callstack 0
  3716                           
  3717 ;; *************** function _LCD_write_data *****************
  3718 ;; Defined at:
  3719 ;;		line 74 in file "LCD.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  data            1    wreg     unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  data            1    4[COMRAM] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;Total ram usage:        3 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 2
  3740 ;; This function calls:
  3741 ;;		_LCD_pulse_clock
  3742 ;; This function is called by:
  3743 ;;		_LCD_write_string
  3744 ;;		_LCD_add_character
  3745 ;;		_LCD_write_char
  3746 ;;		_LCD_write_variable
  3747 ;;		_LCD_write_float
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text23
  3752   001522                     __ptext23:
  3753                           	callstack 0
  3754   001522                     _LCD_write_data:
  3755                           	callstack 24
  3756                           
  3757                           ;incstack = 0
  3758                           ;LCD_write_data@data stored from wreg
  3759   001522  6E05               	movwf	LCD_write_data@data^0,c
  3760   001524                     
  3761                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
  3762   001524  848C               	bsf	140,2,c	;volatile
  3763   001526                     
  3764                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
  3765   001526  6A03               	clrf	??_LCD_write_data^0,c
  3766   001528  AE05               	btfss	LCD_write_data@data^0,7,c
  3767   00152A  D001               	bra	u1075
  3768   00152C  2A03               	incf	??_LCD_write_data^0,f,c
  3769   00152E                     u1075:
  3770   00152E  0E01               	movlw	1
  3771   001530  1603               	andwf	??_LCD_write_data^0,f,c
  3772   001532  3203               	rrcf	??_LCD_write_data^0,f,c
  3773   001534  3203               	rrcf	??_LCD_write_data^0,f,c
  3774   001536  508C               	movf	140,w,c	;volatile
  3775   001538  1803               	xorwf	??_LCD_write_data^0,w,c
  3776   00153A  0B7F               	andlw	-129
  3777   00153C  1803               	xorwf	??_LCD_write_data^0,w,c
  3778   00153E  6E8C               	movwf	140,c	;volatile
  3779                           
  3780                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
  3781   001540  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  3782   001544  0E06               	movlw	6
  3783   001546  6E04               	movwf	(??_LCD_write_data+1)^0,c
  3784   001548                     u1085:
  3785   001548  90D8               	bcf	status,0,c
  3786   00154A  3203               	rrcf	??_LCD_write_data^0,f,c
  3787   00154C  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  3788   00154E  EFA4  F00A         	goto	u1085
  3789   001552  0E01               	movlw	1
  3790   001554  1603               	andwf	??_LCD_write_data^0,f,c
  3791   001556  3A03               	swapf	??_LCD_write_data^0,f,c
  3792   001558  4603               	rlncf	??_LCD_write_data^0,f,c
  3793   00155A  4603               	rlncf	??_LCD_write_data^0,f,c
  3794   00155C  508C               	movf	140,w,c	;volatile
  3795   00155E  1803               	xorwf	??_LCD_write_data^0,w,c
  3796   001560  0BBF               	andlw	-65
  3797   001562  1803               	xorwf	??_LCD_write_data^0,w,c
  3798   001564  6E8C               	movwf	140,c	;volatile
  3799                           
  3800                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
  3801   001566  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  3802   00156A  0E05               	movlw	5
  3803   00156C  6E04               	movwf	(??_LCD_write_data+1)^0,c
  3804   00156E                     u1095:
  3805   00156E  90D8               	bcf	status,0,c
  3806   001570  3203               	rrcf	??_LCD_write_data^0,f,c
  3807   001572  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  3808   001574  EFB7  F00A         	goto	u1095
  3809   001578  0E01               	movlw	1
  3810   00157A  1603               	andwf	??_LCD_write_data^0,f,c
  3811   00157C  3A03               	swapf	??_LCD_write_data^0,f,c
  3812   00157E  4603               	rlncf	??_LCD_write_data^0,f,c
  3813   001580  508C               	movf	140,w,c	;volatile
  3814   001582  1803               	xorwf	??_LCD_write_data^0,w,c
  3815   001584  0BDF               	andlw	-33
  3816   001586  1803               	xorwf	??_LCD_write_data^0,w,c
  3817   001588  6E8C               	movwf	140,c	;volatile
  3818                           
  3819                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
  3820   00158A  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  3821   00158E  3A03               	swapf	??_LCD_write_data^0,f,c
  3822   001590  0E0F               	movlw	15
  3823   001592  1603               	andwf	??_LCD_write_data^0,f,c
  3824   001594  0E01               	movlw	1
  3825   001596  1603               	andwf	??_LCD_write_data^0,f,c
  3826   001598  3A03               	swapf	??_LCD_write_data^0,f,c
  3827   00159A  508C               	movf	140,w,c	;volatile
  3828   00159C  1803               	xorwf	??_LCD_write_data^0,w,c
  3829   00159E  0BEF               	andlw	-17
  3830   0015A0  1803               	xorwf	??_LCD_write_data^0,w,c
  3831   0015A2  6E8C               	movwf	140,c	;volatile
  3832   0015A4                     
  3833                           ;LCD.c: 85:     LCD_pulse_clock();
  3834   0015A4  EC7D  F00F         	call	_LCD_pulse_clock	;wreg free
  3835   0015A8                     
  3836                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
  3837   0015A8  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  3838   0015AC  90D8               	bcf	status,0,c
  3839   0015AE  3203               	rrcf	??_LCD_write_data^0,f,c
  3840   0015B0  90D8               	bcf	status,0,c
  3841   0015B2  3203               	rrcf	??_LCD_write_data^0,f,c
  3842   0015B4  90D8               	bcf	status,0,c
  3843   0015B6  3203               	rrcf	??_LCD_write_data^0,f,c
  3844   0015B8  0E01               	movlw	1
  3845   0015BA  1603               	andwf	??_LCD_write_data^0,f,c
  3846   0015BC  3203               	rrcf	??_LCD_write_data^0,f,c
  3847   0015BE  3203               	rrcf	??_LCD_write_data^0,f,c
  3848   0015C0  508C               	movf	140,w,c	;volatile
  3849   0015C2  1803               	xorwf	??_LCD_write_data^0,w,c
  3850   0015C4  0B7F               	andlw	-129
  3851   0015C6  1803               	xorwf	??_LCD_write_data^0,w,c
  3852   0015C8  6E8C               	movwf	140,c	;volatile
  3853   0015CA                     
  3854                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
  3855   0015CA  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  3856   0015CE  90D8               	bcf	status,0,c
  3857   0015D0  3203               	rrcf	??_LCD_write_data^0,f,c
  3858   0015D2  90D8               	bcf	status,0,c
  3859   0015D4  3203               	rrcf	??_LCD_write_data^0,f,c
  3860   0015D6  0E01               	movlw	1
  3861   0015D8  1603               	andwf	??_LCD_write_data^0,f,c
  3862   0015DA  3A03               	swapf	??_LCD_write_data^0,f,c
  3863   0015DC  4603               	rlncf	??_LCD_write_data^0,f,c
  3864   0015DE  4603               	rlncf	??_LCD_write_data^0,f,c
  3865   0015E0  508C               	movf	140,w,c	;volatile
  3866   0015E2  1803               	xorwf	??_LCD_write_data^0,w,c
  3867   0015E4  0BBF               	andlw	-65
  3868   0015E6  1803               	xorwf	??_LCD_write_data^0,w,c
  3869   0015E8  6E8C               	movwf	140,c	;volatile
  3870   0015EA                     
  3871                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
  3872   0015EA  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  3873   0015EE  90D8               	bcf	status,0,c
  3874   0015F0  3203               	rrcf	??_LCD_write_data^0,f,c
  3875   0015F2  0E01               	movlw	1
  3876   0015F4  1603               	andwf	??_LCD_write_data^0,f,c
  3877   0015F6  3A03               	swapf	??_LCD_write_data^0,f,c
  3878   0015F8  4603               	rlncf	??_LCD_write_data^0,f,c
  3879   0015FA  508C               	movf	140,w,c	;volatile
  3880   0015FC  1803               	xorwf	??_LCD_write_data^0,w,c
  3881   0015FE  0BDF               	andlw	-33
  3882   001600  1803               	xorwf	??_LCD_write_data^0,w,c
  3883   001602  6E8C               	movwf	140,c	;volatile
  3884   001604                     
  3885                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
  3886   001604  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  3887   001608  0E01               	movlw	1
  3888   00160A  1603               	andwf	??_LCD_write_data^0,f,c
  3889   00160C  3A03               	swapf	??_LCD_write_data^0,f,c
  3890   00160E  508C               	movf	140,w,c	;volatile
  3891   001610  1803               	xorwf	??_LCD_write_data^0,w,c
  3892   001612  0BEF               	andlw	-17
  3893   001614  1803               	xorwf	??_LCD_write_data^0,w,c
  3894   001616  6E8C               	movwf	140,c	;volatile
  3895   001618                     
  3896                           ;LCD.c: 94:     LCD_pulse_clock();
  3897   001618  EC7D  F00F         	call	_LCD_pulse_clock	;wreg free
  3898   00161C  0012               	return		;funcret
  3899   00161E                     __end_of_LCD_write_data:
  3900                           	callstack 0
  3901                           
  3902 ;; *************** function _LCD_cursor_set *****************
  3903 ;; Defined at:
  3904 ;;		line 159 in file "LCD.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  row             1    wreg     unsigned char 
  3907 ;;  column          1    5[COMRAM] unsigned char 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  row             1    6[COMRAM] unsigned char 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2, status,0, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3919 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;Total ram usage:        2 bytes
  3924 ;; Hardware stack levels used: 1
  3925 ;; Hardware stack levels required when called: 3
  3926 ;; This function calls:
  3927 ;;		_LCD_write_command
  3928 ;; This function is called by:
  3929 ;;		_display_mm
  3930 ;;		_main_menu
  3931 ;;		_print_RPM
  3932 ;;		_print_Vbatt
  3933 ;;		_print_AI_Temp
  3934 ;;		_print_ELMVer
  3935 ;;		_print_SAEVer
  3936 ;;		_LCD_add_character
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text24
  3941   001B7C                     __ptext24:
  3942                           	callstack 0
  3943   001B7C                     _LCD_cursor_set:
  3944                           	callstack 24
  3945                           
  3946                           ;incstack = 0
  3947                           ;LCD_cursor_set@row stored from wreg
  3948   001B7C  6E07               	movwf	LCD_cursor_set@row^0,c
  3949   001B7E                     
  3950                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
  3951   001B7E  0407               	decf	LCD_cursor_set@row^0,w,c
  3952   001B80  A4D8               	btfss	status,2,c
  3953   001B82  EFC5  F00D         	goto	u1121
  3954   001B86  EFC7  F00D         	goto	u1120
  3955   001B8A                     u1121:
  3956   001B8A  EFC9  F00D         	goto	l277
  3957   001B8E                     u1120:
  3958   001B8E  0E7F               	movlw	127
  3959   001B90  2606               	addwf	LCD_cursor_set@column^0,f,c
  3960   001B92                     l277:
  3961                           
  3962                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
  3963   001B92  0E02               	movlw	2
  3964   001B94  1807               	xorwf	LCD_cursor_set@row^0,w,c
  3965   001B96  A4D8               	btfss	status,2,c
  3966   001B98  EFD0  F00D         	goto	u1131
  3967   001B9C  EFD2  F00D         	goto	u1130
  3968   001BA0                     u1131:
  3969   001BA0  EFD4  F00D         	goto	l278
  3970   001BA4                     u1130:
  3971   001BA4  0EBF               	movlw	191
  3972   001BA6  2606               	addwf	LCD_cursor_set@column^0,f,c
  3973   001BA8                     l278:
  3974                           
  3975                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
  3976   001BA8  0E03               	movlw	3
  3977   001BAA  1807               	xorwf	LCD_cursor_set@row^0,w,c
  3978   001BAC  A4D8               	btfss	status,2,c
  3979   001BAE  EFDB  F00D         	goto	u1141
  3980   001BB2  EFDD  F00D         	goto	u1140
  3981   001BB6                     u1141:
  3982   001BB6  EFDF  F00D         	goto	l279
  3983   001BBA                     u1140:
  3984   001BBA  0E93               	movlw	147
  3985   001BBC  2606               	addwf	LCD_cursor_set@column^0,f,c
  3986   001BBE                     l279:
  3987                           
  3988                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
  3989   001BBE  0E04               	movlw	4
  3990   001BC0  1807               	xorwf	LCD_cursor_set@row^0,w,c
  3991   001BC2  A4D8               	btfss	status,2,c
  3992   001BC4  EFE6  F00D         	goto	u1151
  3993   001BC8  EFE8  F00D         	goto	u1150
  3994   001BCC                     u1151:
  3995   001BCC  EFEA  F00D         	goto	l2025
  3996   001BD0                     u1150:
  3997   001BD0  0ED3               	movlw	211
  3998   001BD2  2606               	addwf	LCD_cursor_set@column^0,f,c
  3999   001BD4                     l2025:
  4000                           
  4001                           ;LCD.c: 168:    LCD_write_command(column);
  4002   001BD4  5006               	movf	LCD_cursor_set@column^0,w,c
  4003   001BD6  EC0F  F00B         	call	_LCD_write_command
  4004   001BDA  0012               	return		;funcret
  4005   001BDC                     __end_of_LCD_cursor_set:
  4006                           	callstack 0
  4007                           
  4008 ;; *************** function _LCD_configure_cursor_blink *****************
  4009 ;; Defined at:
  4010 ;;		line 231 in file "LCD.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  state           1    wreg     unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  state           1    5[COMRAM] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;Total ram usage:        1 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 3
  4031 ;; This function calls:
  4032 ;;		_LCD_write_command
  4033 ;; This function is called by:
  4034 ;;		_main_menu
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text25
  4039   001E88                     __ptext25:
  4040                           	callstack 0
  4041   001E88                     _LCD_configure_cursor_blink:
  4042                           	callstack 26
  4043                           
  4044                           ;incstack = 0
  4045                           ;LCD_configure_cursor_blink@state stored from wreg
  4046   001E88  6E06               	movwf	LCD_configure_cursor_blink@state^0,c
  4047   001E8A                     
  4048                           ;LCD.c: 234:     if(state){
  4049   001E8A  5006               	movf	LCD_configure_cursor_blink@state^0,w,c
  4050   001E8C  B4D8               	btfsc	status,2,c
  4051   001E8E  EF4B  F00F         	goto	u1341
  4052   001E92  EF4D  F00F         	goto	u1340
  4053   001E96                     u1341:
  4054   001E96  EF50  F00F         	goto	l2217
  4055   001E9A                     u1340:
  4056   001E9A                     
  4057                           ;LCD.c: 235:         LCD_display_control |= 0b00000001;
  4058   001E9A  805B               	bsf	_LCD_display_control^0,0,c
  4059                           
  4060                           ;LCD.c: 236:     }
  4061   001E9C  EF51  F00F         	goto	l2219
  4062   001EA0                     l2217:
  4063                           
  4064                           ;LCD.c: 238:         LCD_display_control &= 0b11111110;
  4065   001EA0  905B               	bcf	_LCD_display_control^0,0,c
  4066   001EA2                     l2219:
  4067                           
  4068                           ;LCD.c: 242:     LCD_write_command(LCD_display_control);
  4069   001EA2  505B               	movf	_LCD_display_control^0,w,c
  4070   001EA4  EC0F  F00B         	call	_LCD_write_command
  4071   001EA8  0012               	return		;funcret
  4072   001EAA                     __end_of_LCD_configure_cursor_blink:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _input_init *****************
  4076 ;; Defined at:
  4077 ;;		line 81 in file "OBCII_PIC18F46K22.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		None
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;Total ram usage:        0 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; Hardware stack levels required when called: 1
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_main
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text26
  4106   001EDC                     __ptext26:
  4107                           	callstack 0
  4108   001EDC                     _input_init:
  4109                           	callstack 29
  4110   001EDC                     
  4111                           ;OBCII_PIC18F46K22.c: 84:     TRISBbits.TRISB4 = 1;
  4112   001EDC  8893               	bsf	147,4,c	;volatile
  4113                           
  4114                           ;OBCII_PIC18F46K22.c: 85:     ANSELBbits.ANSB4 = 0;
  4115   001EDE  010F               	movlb	15	; () banked
  4116   001EE0  9939               	bcf	57,4,b	;volatile
  4117                           
  4118                           ;OBCII_PIC18F46K22.c: 87:     TRISCbits.TRISC5 = 1;
  4119   001EE2  8A94               	bsf	148,5,c	;volatile
  4120                           
  4121                           ;OBCII_PIC18F46K22.c: 88:     ANSELCbits.ANSC5 = 0;
  4122   001EE4  9B3A               	bcf	58,5,b	;volatile
  4123                           
  4124                           ;OBCII_PIC18F46K22.c: 90:     TRISAbits.TRISA0 = 1;
  4125   001EE6  8092               	bsf	146,0,c	;volatile
  4126                           
  4127                           ;OBCII_PIC18F46K22.c: 91:     ANSELAbits.ANSA0 = 1;
  4128   001EE8  8138               	bsf	56,0,b	;volatile
  4129   001EEA                     
  4130                           ; BSR set to: 15
  4131   001EEA  0012               	return		;funcret
  4132   001EEC                     __end_of_input_init:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _UART1_Init *****************
  4136 ;; Defined at:
  4137 ;;		line 103 in file "OBCII_PIC18F46K22.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;Total ram usage:        0 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; Hardware stack levels required when called: 1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text27
  4166   001E5C                     __ptext27:
  4167                           	callstack 0
  4168   001E5C                     _UART1_Init:
  4169                           	callstack 29
  4170   001E5C                     
  4171                           ;OBCII_PIC18F46K22.c: 104:     ANSELC = 0;
  4172   001E5C  010F               	movlb	15	; () banked
  4173   001E5E  6B3A               	clrf	58,b	;volatile
  4174                           
  4175                           ;OBCII_PIC18F46K22.c: 107:     TRISCbits.TRISC6 = 0;
  4176   001E60  9C94               	bcf	148,6,c	;volatile
  4177                           
  4178                           ;OBCII_PIC18F46K22.c: 108:     TRISCbits.TRISC7 = 1;
  4179   001E62  8E94               	bsf	148,7,c	;volatile
  4180                           
  4181                           ;OBCII_PIC18F46K22.c: 112:     TXSTA1bits.TXEN = 1;
  4182   001E64  8AAC               	bsf	172,5,c	;volatile
  4183                           
  4184                           ;OBCII_PIC18F46K22.c: 113:     TXSTA1bits.TX9 = 0;
  4185   001E66  9CAC               	bcf	172,6,c	;volatile
  4186                           
  4187                           ;OBCII_PIC18F46K22.c: 114:     TXSTA1bits.SYNC = 0;
  4188   001E68  98AC               	bcf	172,4,c	;volatile
  4189                           
  4190                           ;OBCII_PIC18F46K22.c: 117:     TXSTA1bits.BRGH = 1;
  4191   001E6A  84AC               	bsf	172,2,c	;volatile
  4192                           
  4193                           ;OBCII_PIC18F46K22.c: 118:     BAUDCON1bits.BRG16 = 1;
  4194   001E6C  86B8               	bsf	184,3,c	;volatile
  4195   001E6E                     
  4196                           ; BSR set to: 15
  4197                           ;OBCII_PIC18F46K22.c: 121:     SPBRGH1 = 0b00000001;
  4198   001E6E  0E01               	movlw	1
  4199   001E70  6EB0               	movwf	176,c	;volatile
  4200                           
  4201                           ;OBCII_PIC18F46K22.c: 122:     SPBRG1 = 0b10100000;
  4202   001E72  0EA0               	movlw	160
  4203   001E74  6EAF               	movwf	175,c	;volatile
  4204   001E76                     
  4205                           ; BSR set to: 15
  4206                           ;OBCII_PIC18F46K22.c: 125:     BAUDCON1bits.CKTXP = 0;
  4207   001E76  98B8               	bcf	184,4,c	;volatile
  4208   001E78                     
  4209                           ; BSR set to: 15
  4210                           ;OBCII_PIC18F46K22.c: 126:     BAUDCON1bits.DTRXP = 0;
  4211   001E78  9AB8               	bcf	184,5,c	;volatile
  4212   001E7A                     
  4213                           ; BSR set to: 15
  4214                           ;OBCII_PIC18F46K22.c: 129:     RCSTA1bits.SPEN = 1;
  4215   001E7A  8EAB               	bsf	171,7,c	;volatile
  4216   001E7C                     
  4217                           ; BSR set to: 15
  4218                           ;OBCII_PIC18F46K22.c: 130:     RCSTA1bits.CREN = 1;
  4219   001E7C  88AB               	bsf	171,4,c	;volatile
  4220   001E7E                     
  4221                           ; BSR set to: 15
  4222                           ;OBCII_PIC18F46K22.c: 131:     RCSTA1bits.RX9 = 0;
  4223   001E7E  9CAB               	bcf	171,6,c	;volatile
  4224   001E80                     
  4225                           ; BSR set to: 15
  4226                           ;OBCII_PIC18F46K22.c: 134:     PIE1bits.RC1IE = 1;
  4227   001E80  8A9D               	bsf	157,5,c	;volatile
  4228   001E82                     
  4229                           ; BSR set to: 15
  4230                           ;OBCII_PIC18F46K22.c: 135:     INTCONbits.PEIE = 1;
  4231   001E82  8CF2               	bsf	242,6,c	;volatile
  4232   001E84                     
  4233                           ; BSR set to: 15
  4234                           ;OBCII_PIC18F46K22.c: 136:     INTCONbits.GIE = 1;
  4235   001E84  8EF2               	bsf	242,7,c	;volatile
  4236   001E86                     
  4237                           ; BSR set to: 15
  4238   001E86  0012               	return		;funcret
  4239   001E88                     __end_of_UART1_Init:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _LCD_init *****************
  4243 ;; Defined at:
  4244 ;;		line 106 in file "LCD.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;Total ram usage:        2 bytes
  4263 ;; Hardware stack levels used: 1
  4264 ;; Hardware stack levels required when called: 4
  4265 ;; This function calls:
  4266 ;;		_LCD_clear
  4267 ;;		_LCD_pulse_clock
  4268 ;;		_LCD_write_command
  4269 ;; This function is called by:
  4270 ;;		_main
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text28
  4275   0019AE                     __ptext28:
  4276                           	callstack 0
  4277   0019AE                     _LCD_init:
  4278                           	callstack 26
  4279   0019AE                     
  4280                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
  4281   0019AE  9495               	bcf	149,2,c	;volatile
  4282   0019B0  948C               	bcf	140,2,c	;volatile
  4283                           
  4284                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
  4285   0019B2  9695               	bcf	149,3,c	;volatile
  4286   0019B4  968C               	bcf	140,3,c	;volatile
  4287                           
  4288                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
  4289   0019B6  9895               	bcf	149,4,c	;volatile
  4290   0019B8  988C               	bcf	140,4,c	;volatile
  4291                           
  4292                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
  4293   0019BA  9A95               	bcf	149,5,c	;volatile
  4294   0019BC  9A8C               	bcf	140,5,c	;volatile
  4295                           
  4296                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
  4297   0019BE  9C95               	bcf	149,6,c	;volatile
  4298   0019C0  9C8C               	bcf	140,6,c	;volatile
  4299                           
  4300                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
  4301   0019C2  9E95               	bcf	149,7,c	;volatile
  4302   0019C4  9E8C               	bcf	140,7,c	;volatile
  4303   0019C6                     
  4304                           ;LCD.c: 121:     _delay((unsigned long)((60)*(16000000/4000.0)));
  4305   0019C6  0E02               	movlw	2
  4306   0019C8  6E08               	movwf	(??_LCD_init+1)^0,c
  4307   0019CA  0E38               	movlw	56
  4308   0019CC  6E07               	movwf	??_LCD_init^0,c
  4309   0019CE  0EAD               	movlw	173
  4310   0019D0                     u1847:
  4311   0019D0  2EE8               	decfsz	wreg,f,c
  4312   0019D2  D7FE               	bra	u1847
  4313   0019D4  2E07               	decfsz	??_LCD_init^0,f,c
  4314   0019D6  D7FC               	bra	u1847
  4315   0019D8  2E08               	decfsz	(??_LCD_init+1)^0,f,c
  4316   0019DA  D7FA               	bra	u1847
  4317   0019DC  0000               	nop	
  4318   0019DE                     
  4319                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  4320   0019DE  9E8C               	bcf	140,7,c	;volatile
  4321   0019E0  9C8C               	bcf	140,6,c	;volatile
  4322   0019E2  8A8C               	bsf	140,5,c	;volatile
  4323   0019E4  888C               	bsf	140,4,c	;volatile
  4324   0019E6                     
  4325                           ;LCD.c: 127:     LCD_pulse_clock();
  4326   0019E6  EC7D  F00F         	call	_LCD_pulse_clock	;wreg free
  4327   0019EA                     
  4328                           ;LCD.c: 130:     _delay((unsigned long)((6)*(16000000/4000.0)));
  4329   0019EA  0E20               	movlw	32
  4330   0019EC  6E07               	movwf	??_LCD_init^0,c
  4331   0019EE  0E2A               	movlw	42
  4332   0019F0                     u1857:
  4333   0019F0  2EE8               	decfsz	wreg,f,c
  4334   0019F2  D7FE               	bra	u1857
  4335   0019F4  2E07               	decfsz	??_LCD_init^0,f,c
  4336   0019F6  D7FC               	bra	u1857
  4337                           
  4338                           ;LCD.c: 133:     LCD_pulse_clock();
  4339   0019F8  EC7D  F00F         	call	_LCD_pulse_clock	;wreg free
  4340   0019FC                     
  4341                           ;LCD.c: 136:     _delay((unsigned long)((150)*(16000000/4000000.0)));
  4342   0019FC  0EC8               	movlw	200
  4343   0019FE                     u1867:
  4344   0019FE  2EE8               	decfsz	wreg,f,c
  4345   001A00  D7FE               	bra	u1867
  4346   001A02                     
  4347                           ;LCD.c: 139:     LCD_pulse_clock();
  4348   001A02  EC7D  F00F         	call	_LCD_pulse_clock	;wreg free
  4349   001A06                     
  4350                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  4351   001A06  9E8C               	bcf	140,7,c	;volatile
  4352   001A08  9C8C               	bcf	140,6,c	;volatile
  4353   001A0A  8A8C               	bsf	140,5,c	;volatile
  4354   001A0C  988C               	bcf	140,4,c	;volatile
  4355   001A0E                     
  4356                           ;LCD.c: 145:     LCD_pulse_clock();
  4357   001A0E  EC7D  F00F         	call	_LCD_pulse_clock	;wreg free
  4358   001A12                     
  4359                           ;LCD.c: 148:     LCD_write_command(0x28);
  4360   001A12  0E28               	movlw	40
  4361   001A14  EC0F  F00B         	call	_LCD_write_command
  4362   001A18                     
  4363                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
  4364   001A18  505B               	movf	_LCD_display_control^0,w,c
  4365   001A1A  EC0F  F00B         	call	_LCD_write_command
  4366   001A1E                     
  4367                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
  4368   001A1E  505A               	movf	_LCD_entry_mode^0,w,c
  4369   001A20  EC0F  F00B         	call	_LCD_write_command
  4370   001A24                     
  4371                           ;LCD.c: 151:     LCD_clear();
  4372   001A24  EC55  F00F         	call	_LCD_clear	;wreg free
  4373   001A28  0012               	return		;funcret
  4374   001A2A                     __end_of_LCD_init:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _LCD_clear *****************
  4378 ;; Defined at:
  4379 ;;		line 248 in file "LCD.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;Total ram usage:        1 bytes
  4398 ;; Hardware stack levels used: 1
  4399 ;; Hardware stack levels required when called: 3
  4400 ;; This function calls:
  4401 ;;		_LCD_write_command
  4402 ;; This function is called by:
  4403 ;;		_main
  4404 ;;		_main_menu
  4405 ;;		_LCD_init
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text29
  4410   001EAA                     __ptext29:
  4411                           	callstack 0
  4412   001EAA                     _LCD_clear:
  4413                           	callstack 26
  4414   001EAA                     
  4415                           ;LCD.c: 251:     LCD_write_command(0x01);
  4416   001EAA  0E01               	movlw	1
  4417   001EAC  EC0F  F00B         	call	_LCD_write_command
  4418   001EB0                     
  4419                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(16000000/4000000.0)));
  4420   001EB0  0E0C               	movlw	12
  4421   001EB2  6E06               	movwf	??_LCD_clear^0,c
  4422   001EB4  0EA2               	movlw	162
  4423   001EB6                     u1877:
  4424   001EB6  2EE8               	decfsz	wreg,f,c
  4425   001EB8  D7FE               	bra	u1877
  4426   001EBA  2E06               	decfsz	??_LCD_clear^0,f,c
  4427   001EBC  D7FC               	bra	u1877
  4428   001EBE                     
  4429                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
  4430   001EBE  505A               	movf	_LCD_entry_mode^0,w,c
  4431   001EC0  EC0F  F00B         	call	_LCD_write_command
  4432   001EC4  0012               	return		;funcret
  4433   001EC6                     __end_of_LCD_clear:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function _LCD_write_command *****************
  4437 ;; Defined at:
  4438 ;;		line 46 in file "LCD.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  command         1    wreg     unsigned char 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  command         1    4[COMRAM] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;Total ram usage:        3 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 2
  4459 ;; This function calls:
  4460 ;;		_LCD_pulse_clock
  4461 ;; This function is called by:
  4462 ;;		_LCD_init
  4463 ;;		_LCD_cursor_set
  4464 ;;		_LCD_configure_cursor_blink
  4465 ;;		_LCD_clear
  4466 ;;		_LCD_cursor_increment
  4467 ;;		_LCD_cursor_decrement
  4468 ;;		_LCD_configure_lcd_display
  4469 ;;		_LCD_configure_cursor_display
  4470 ;;		_LCD_shift_reset
  4471 ;;		_LCD_shift_left
  4472 ;;		_LCD_shift_right
  4473 ;;		_LCD_configure_entry_id
  4474 ;;		_LCD_configure_entry_shift
  4475 ;;		_LCD_add_character
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text30
  4480   00161E                     __ptext30:
  4481                           	callstack 0
  4482   00161E                     _LCD_write_command:
  4483                           	callstack 24
  4484                           
  4485                           ;incstack = 0
  4486                           ;LCD_write_command@command stored from wreg
  4487   00161E  6E05               	movwf	LCD_write_command@command^0,c
  4488   001620                     
  4489                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
  4490   001620  948C               	bcf	140,2,c	;volatile
  4491   001622                     
  4492                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
  4493   001622  6A03               	clrf	??_LCD_write_command^0,c
  4494   001624  AE05               	btfss	LCD_write_command@command^0,7,c
  4495   001626  D001               	bra	u1045
  4496   001628  2A03               	incf	??_LCD_write_command^0,f,c
  4497   00162A                     u1045:
  4498   00162A  0E01               	movlw	1
  4499   00162C  1603               	andwf	??_LCD_write_command^0,f,c
  4500   00162E  3203               	rrcf	??_LCD_write_command^0,f,c
  4501   001630  3203               	rrcf	??_LCD_write_command^0,f,c
  4502   001632  508C               	movf	140,w,c	;volatile
  4503   001634  1803               	xorwf	??_LCD_write_command^0,w,c
  4504   001636  0B7F               	andlw	-129
  4505   001638  1803               	xorwf	??_LCD_write_command^0,w,c
  4506   00163A  6E8C               	movwf	140,c	;volatile
  4507                           
  4508                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
  4509   00163C  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  4510   001640  0E06               	movlw	6
  4511   001642  6E04               	movwf	(??_LCD_write_command+1)^0,c
  4512   001644                     u1055:
  4513   001644  90D8               	bcf	status,0,c
  4514   001646  3203               	rrcf	??_LCD_write_command^0,f,c
  4515   001648  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
  4516   00164A  EF22  F00B         	goto	u1055
  4517   00164E  0E01               	movlw	1
  4518   001650  1603               	andwf	??_LCD_write_command^0,f,c
  4519   001652  3A03               	swapf	??_LCD_write_command^0,f,c
  4520   001654  4603               	rlncf	??_LCD_write_command^0,f,c
  4521   001656  4603               	rlncf	??_LCD_write_command^0,f,c
  4522   001658  508C               	movf	140,w,c	;volatile
  4523   00165A  1803               	xorwf	??_LCD_write_command^0,w,c
  4524   00165C  0BBF               	andlw	-65
  4525   00165E  1803               	xorwf	??_LCD_write_command^0,w,c
  4526   001660  6E8C               	movwf	140,c	;volatile
  4527                           
  4528                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
  4529   001662  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  4530   001666  0E05               	movlw	5
  4531   001668  6E04               	movwf	(??_LCD_write_command+1)^0,c
  4532   00166A                     u1065:
  4533   00166A  90D8               	bcf	status,0,c
  4534   00166C  3203               	rrcf	??_LCD_write_command^0,f,c
  4535   00166E  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
  4536   001670  EF35  F00B         	goto	u1065
  4537   001674  0E01               	movlw	1
  4538   001676  1603               	andwf	??_LCD_write_command^0,f,c
  4539   001678  3A03               	swapf	??_LCD_write_command^0,f,c
  4540   00167A  4603               	rlncf	??_LCD_write_command^0,f,c
  4541   00167C  508C               	movf	140,w,c	;volatile
  4542   00167E  1803               	xorwf	??_LCD_write_command^0,w,c
  4543   001680  0BDF               	andlw	-33
  4544   001682  1803               	xorwf	??_LCD_write_command^0,w,c
  4545   001684  6E8C               	movwf	140,c	;volatile
  4546                           
  4547                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
  4548   001686  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  4549   00168A  3A03               	swapf	??_LCD_write_command^0,f,c
  4550   00168C  0E0F               	movlw	15
  4551   00168E  1603               	andwf	??_LCD_write_command^0,f,c
  4552   001690  0E01               	movlw	1
  4553   001692  1603               	andwf	??_LCD_write_command^0,f,c
  4554   001694  3A03               	swapf	??_LCD_write_command^0,f,c
  4555   001696  508C               	movf	140,w,c	;volatile
  4556   001698  1803               	xorwf	??_LCD_write_command^0,w,c
  4557   00169A  0BEF               	andlw	-17
  4558   00169C  1803               	xorwf	??_LCD_write_command^0,w,c
  4559   00169E  6E8C               	movwf	140,c	;volatile
  4560   0016A0                     
  4561                           ;LCD.c: 57:     LCD_pulse_clock();
  4562   0016A0  EC7D  F00F         	call	_LCD_pulse_clock	;wreg free
  4563   0016A4                     
  4564                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
  4565   0016A4  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  4566   0016A8  90D8               	bcf	status,0,c
  4567   0016AA  3203               	rrcf	??_LCD_write_command^0,f,c
  4568   0016AC  90D8               	bcf	status,0,c
  4569   0016AE  3203               	rrcf	??_LCD_write_command^0,f,c
  4570   0016B0  90D8               	bcf	status,0,c
  4571   0016B2  3203               	rrcf	??_LCD_write_command^0,f,c
  4572   0016B4  0E01               	movlw	1
  4573   0016B6  1603               	andwf	??_LCD_write_command^0,f,c
  4574   0016B8  3203               	rrcf	??_LCD_write_command^0,f,c
  4575   0016BA  3203               	rrcf	??_LCD_write_command^0,f,c
  4576   0016BC  508C               	movf	140,w,c	;volatile
  4577   0016BE  1803               	xorwf	??_LCD_write_command^0,w,c
  4578   0016C0  0B7F               	andlw	-129
  4579   0016C2  1803               	xorwf	??_LCD_write_command^0,w,c
  4580   0016C4  6E8C               	movwf	140,c	;volatile
  4581   0016C6                     
  4582                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
  4583   0016C6  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  4584   0016CA  90D8               	bcf	status,0,c
  4585   0016CC  3203               	rrcf	??_LCD_write_command^0,f,c
  4586   0016CE  90D8               	bcf	status,0,c
  4587   0016D0  3203               	rrcf	??_LCD_write_command^0,f,c
  4588   0016D2  0E01               	movlw	1
  4589   0016D4  1603               	andwf	??_LCD_write_command^0,f,c
  4590   0016D6  3A03               	swapf	??_LCD_write_command^0,f,c
  4591   0016D8  4603               	rlncf	??_LCD_write_command^0,f,c
  4592   0016DA  4603               	rlncf	??_LCD_write_command^0,f,c
  4593   0016DC  508C               	movf	140,w,c	;volatile
  4594   0016DE  1803               	xorwf	??_LCD_write_command^0,w,c
  4595   0016E0  0BBF               	andlw	-65
  4596   0016E2  1803               	xorwf	??_LCD_write_command^0,w,c
  4597   0016E4  6E8C               	movwf	140,c	;volatile
  4598   0016E6                     
  4599                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
  4600   0016E6  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  4601   0016EA  90D8               	bcf	status,0,c
  4602   0016EC  3203               	rrcf	??_LCD_write_command^0,f,c
  4603   0016EE  0E01               	movlw	1
  4604   0016F0  1603               	andwf	??_LCD_write_command^0,f,c
  4605   0016F2  3A03               	swapf	??_LCD_write_command^0,f,c
  4606   0016F4  4603               	rlncf	??_LCD_write_command^0,f,c
  4607   0016F6  508C               	movf	140,w,c	;volatile
  4608   0016F8  1803               	xorwf	??_LCD_write_command^0,w,c
  4609   0016FA  0BDF               	andlw	-33
  4610   0016FC  1803               	xorwf	??_LCD_write_command^0,w,c
  4611   0016FE  6E8C               	movwf	140,c	;volatile
  4612   001700                     
  4613                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
  4614   001700  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  4615   001704  0E01               	movlw	1
  4616   001706  1603               	andwf	??_LCD_write_command^0,f,c
  4617   001708  3A03               	swapf	??_LCD_write_command^0,f,c
  4618   00170A  508C               	movf	140,w,c	;volatile
  4619   00170C  1803               	xorwf	??_LCD_write_command^0,w,c
  4620   00170E  0BEF               	andlw	-17
  4621   001710  1803               	xorwf	??_LCD_write_command^0,w,c
  4622   001712  6E8C               	movwf	140,c	;volatile
  4623   001714                     
  4624                           ;LCD.c: 66:     LCD_pulse_clock();
  4625   001714  EC7D  F00F         	call	_LCD_pulse_clock	;wreg free
  4626   001718  0012               	return		;funcret
  4627   00171A                     __end_of_LCD_write_command:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _LCD_pulse_clock *****************
  4631 ;; Defined at:
  4632 ;;		line 34 in file "LCD.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used: 1
  4652 ;; Hardware stack levels required when called: 1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_LCD_write_command
  4657 ;;		_LCD_write_data
  4658 ;;		_LCD_init
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text31
  4663   001EFA                     __ptext31:
  4664                           	callstack 0
  4665   001EFA                     _LCD_pulse_clock:
  4666                           	callstack 24
  4667   001EFA                     
  4668                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
  4669   001EFA  868C               	bsf	140,3,c	;volatile
  4670   001EFC                     
  4671                           ;LCD.c: 37:   _delay((unsigned long)((60)*(16000000/4000000.0)));
  4672   001EFC  0E50               	movlw	80
  4673   001EFE                     u1887:
  4674   001EFE  2EE8               	decfsz	wreg,f,c
  4675   001F00  D7FE               	bra	u1887
  4676   001F02                     
  4677                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
  4678   001F02  968C               	bcf	140,3,c	;volatile
  4679   001F04  0012               	return		;funcret
  4680   001F06                     __end_of_LCD_pulse_clock:
  4681                           	callstack 0
  4682                           
  4683 ;; *************** function _ADC_init *****************
  4684 ;; Defined at:
  4685 ;;		line 95 in file "OBCII_PIC18F46K22.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;Total ram usage:        0 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; Hardware stack levels required when called: 1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_main
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text32
  4714   001F06                     __ptext32:
  4715                           	callstack 0
  4716   001F06                     _ADC_init:
  4717                           	callstack 29
  4718   001F06                     
  4719                           ;OBCII_PIC18F46K22.c: 97:     ADCON0 = 0b00000001;
  4720   001F06  0E01               	movlw	1
  4721   001F08  6EC2               	movwf	194,c	;volatile
  4722   001F0A                     
  4723                           ;OBCII_PIC18F46K22.c: 98:     ADCON1 = 0b00000000;
  4724   001F0A  6AC1               	clrf	193,c	;volatile
  4725                           
  4726                           ;OBCII_PIC18F46K22.c: 99:     ADCON2 = 0b10101010;
  4727   001F0C  0EAA               	movlw	170
  4728   001F0E  6EC0               	movwf	192,c	;volatile
  4729   001F10  0012               	return		;funcret
  4730   001F12                     __end_of_ADC_init:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function _UART_ISR *****************
  4734 ;; Defined at:
  4735 ;;		line 139 in file "OBCII_PIC18F46K22.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;		None
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;Total ram usage:        2 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		Interrupt level 2
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	intcode
  4763   000008                     __pintcode:
  4764                           	callstack 0
  4765   000008                     _UART_ISR:
  4766                           	callstack 22
  4767                           
  4768                           ;incstack = 0
  4769   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4770   00000A  CFD9 F001          	movff	fsr2l,??_UART_ISR
  4771   00000E  CFDA F002          	movff	fsr2h,??_UART_ISR+1
  4772   000012                     
  4773                           ;OBCII_PIC18F46K22.c: 140:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
  4774   000012  AA9D               	btfss	157,5,c	;volatile
  4775   000014  EF0E  F000         	goto	i2u157_41
  4776   000018  EF10  F000         	goto	i2u157_40
  4777   00001C                     i2u157_41:
  4778   00001C  EF63  F000         	goto	i2l138
  4779   000020                     i2u157_40:
  4780   000020  AA9E               	btfss	158,5,c	;volatile
  4781   000022  EF15  F000         	goto	i2u158_41
  4782   000026  EF17  F000         	goto	i2u158_40
  4783   00002A                     i2u158_41:
  4784   00002A  EF63  F000         	goto	i2l138
  4785   00002E                     i2u158_40:
  4786   00002E                     
  4787                           ;OBCII_PIC18F46K22.c: 141:         RX_char = RCREG1;
  4788   00002E  CFAE F048          	movff	4014,_RX_char	;volatile
  4789                           
  4790                           ;OBCII_PIC18F46K22.c: 144:         if (RCSTAbits.OERR) {
  4791   000032  A2AB               	btfss	171,1,c	;volatile
  4792   000034  EF1E  F000         	goto	i2u159_41
  4793   000038  EF20  F000         	goto	i2u159_40
  4794   00003C                     i2u159_41:
  4795   00003C  EF22  F000         	goto	i2l2439
  4796   000040                     i2u159_40:
  4797   000040                     
  4798                           ;OBCII_PIC18F46K22.c: 145:             RCSTAbits.CREN = 0;
  4799   000040  98AB               	bcf	171,4,c	;volatile
  4800                           
  4801                           ;OBCII_PIC18F46K22.c: 146:             RCSTAbits.CREN = 1;
  4802   000042  88AB               	bsf	171,4,c	;volatile
  4803   000044                     i2l2439:
  4804                           
  4805                           ;OBCII_PIC18F46K22.c: 150:         if ((RX_char >= 32 && RX_char <= 126) && RX_char != '
      +                          >') {
  4806   000044  0E1F               	movlw	31
  4807   000046  6448               	cpfsgt	_RX_char^0,c
  4808   000048  EF28  F000         	goto	i2u160_41
  4809   00004C  EF2A  F000         	goto	i2u160_40
  4810   000050                     i2u160_41:
  4811   000050  EF42  F000         	goto	i2l2449
  4812   000054                     i2u160_40:
  4813   000054  0E7F               	movlw	127
  4814   000056  6048               	cpfslt	_RX_char^0,c
  4815   000058  EF30  F000         	goto	i2u161_41
  4816   00005C  EF32  F000         	goto	i2u161_40
  4817   000060                     i2u161_41:
  4818   000060  EF42  F000         	goto	i2l2449
  4819   000064                     i2u161_40:
  4820   000064  0E3E               	movlw	62
  4821   000066  1848               	xorwf	_RX_char^0,w,c
  4822   000068  B4D8               	btfsc	status,2,c
  4823   00006A  EF39  F000         	goto	i2u162_41
  4824   00006E  EF3B  F000         	goto	i2u162_40
  4825   000072                     i2u162_41:
  4826   000072  EF42  F000         	goto	i2l2449
  4827   000076                     i2u162_40:
  4828   000076                     
  4829                           ;OBCII_PIC18F46K22.c: 151:             buffer[buffer_count] = RX_char;
  4830   000076  5049               	movf	_buffer_count^0,w,c
  4831   000078  0F80               	addlw	low _buffer
  4832   00007A  6ED9               	movwf	fsr2l,c
  4833   00007C  6ADA               	clrf	fsr2h,c
  4834   00007E  C048  FFDF         	movff	_RX_char,indf2
  4835   000082                     
  4836                           ;OBCII_PIC18F46K22.c: 152:             buffer_count++;
  4837   000082  2A49               	incf	_buffer_count^0,f,c
  4838   000084                     i2l2449:
  4839                           
  4840                           ;OBCII_PIC18F46K22.c: 155:         if (RX_char == '>' || RX_char == '\n' || buffer_count
      +                           >= 32 -1) {
  4841   000084  0E3E               	movlw	62
  4842   000086  1848               	xorwf	_RX_char^0,w,c
  4843   000088  B4D8               	btfsc	status,2,c
  4844   00008A  EF49  F000         	goto	i2u163_41
  4845   00008E  EF4B  F000         	goto	i2u163_40
  4846   000092                     i2u163_41:
  4847   000092  EF5C  F000         	goto	i2l2455
  4848   000096                     i2u163_40:
  4849   000096  0E0A               	movlw	10
  4850   000098  1848               	xorwf	_RX_char^0,w,c
  4851   00009A  B4D8               	btfsc	status,2,c
  4852   00009C  EF52  F000         	goto	i2u164_41
  4853   0000A0  EF54  F000         	goto	i2u164_40
  4854   0000A4                     i2u164_41:
  4855   0000A4  EF5C  F000         	goto	i2l2455
  4856   0000A8                     i2u164_40:
  4857   0000A8  0E1E               	movlw	30
  4858   0000AA  6449               	cpfsgt	_buffer_count^0,c
  4859   0000AC  EF5A  F000         	goto	i2u165_41
  4860   0000B0  EF5C  F000         	goto	i2u165_40
  4861   0000B4                     i2u165_41:
  4862   0000B4  EF63  F000         	goto	i2l138
  4863   0000B8                     i2u165_40:
  4864   0000B8                     i2l2455:
  4865                           
  4866                           ;OBCII_PIC18F46K22.c: 156:             buffer[buffer_count] = '\0';
  4867   0000B8  5049               	movf	_buffer_count^0,w,c
  4868   0000BA  0F80               	addlw	low _buffer
  4869   0000BC  6ED9               	movwf	fsr2l,c
  4870   0000BE  6ADA               	clrf	fsr2h,c
  4871   0000C0  6ADF               	clrf	indf2,c
  4872   0000C2                     
  4873                           ;OBCII_PIC18F46K22.c: 157:             message_complete = 1;
  4874   0000C2  0E01               	movlw	1
  4875   0000C4  6E47               	movwf	_message_complete^0,c	;volatile
  4876   0000C6                     i2l138:
  4877   0000C6  C002  FFDA         	movff	??_UART_ISR+1,fsr2h
  4878   0000CA  C001  FFD9         	movff	??_UART_ISR,fsr2l
  4879   0000CE  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4880   0000D0  0011               	retfie		f
  4881   0000D2                     __end_of_UART_ISR:
  4882                           	callstack 0
  4883                           
  4884                           	psect	rparam
  4885   000001                     ___rparam_used  equ	1
  4886   000000                     ___param_bank   equ	0
  4887   000000                     __Lparam        equ	__Lrparam
  4888   000000                     __Hparam        equ	__Hrparam
  4889                           
  4890                           	psect	temp
  4891   00005C                     btemp:
  4892                           	callstack 0
  4893   00005C                     	ds	1
  4894   00005C                     int$flags       set	btemp
  4895   00005D                     wtemp8          set	btemp+1
  4896   00005D                     ttemp5          set	btemp+1
  4897   000060                     ttemp6          set	btemp+4
  4898   000064                     ttemp7          set	btemp+8
  4899                           
  4900                           	psect	config
  4901                           
  4902                           ; Padding undefined space
  4903   300000                     	org	3145728
  4904   300000  FF                 	db	255
  4905                           
  4906                           ;Config register CONFIG1H @ 0x300001
  4907                           ;	Oscillator Selection bits
  4908                           ;	FOSC = INTIO67, Internal oscillator block
  4909                           ;	4X PLL Enable
  4910                           ;	PLLCFG = ON, Oscillator multiplied by 4
  4911                           ;	Primary clock enable bit
  4912                           ;	PRICLKEN = ON, Primary clock is always enabled
  4913                           ;	Fail-Safe Clock Monitor Enable bit
  4914                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4915                           ;	Internal/External Oscillator Switchover bit
  4916                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4917   300001                     	org	3145729
  4918   300001  38                 	db	56
  4919                           
  4920                           ;Config register CONFIG2L @ 0x300002
  4921                           ;	Power-up Timer Enable bit
  4922                           ;	PWRTEN = ON, Power up timer enabled
  4923                           ;	Brown-out Reset Enable bits
  4924                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4925                           ;	Brown Out Reset Voltage bits
  4926                           ;	BORV = 250, VBOR set to 2.50 V nominal
  4927   300002                     	org	3145730
  4928   300002  0E                 	db	14
  4929                           
  4930                           ;Config register CONFIG2H @ 0x300003
  4931                           ;	Watchdog Timer Enable bits
  4932                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4933                           ;	Watchdog Timer Postscale Select bits
  4934                           ;	WDTPS = 32768, 1:32768
  4935   300003                     	org	3145731
  4936   300003  3C                 	db	60
  4937                           
  4938                           ; Padding undefined space
  4939   300004                     	org	3145732
  4940   300004  FF                 	db	255
  4941                           
  4942                           ;Config register CONFIG3H @ 0x300005
  4943                           ;	CCP2 MUX bit
  4944                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4945                           ;	PORTB A/D Enable bit
  4946                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4947                           ;	P3A/CCP3 Mux bit
  4948                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4949                           ;	HFINTOSC Fast Start-up
  4950                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4951                           ;	Timer3 Clock input mux bit
  4952                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4953                           ;	ECCP2 B output mux bit
  4954                           ;	P2BMX = PORTD2, P2B is on RD2
  4955                           ;	MCLR Pin Enable bit
  4956                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4957   300005                     	org	3145733
  4958   300005  BF                 	db	191
  4959                           
  4960                           ;Config register CONFIG4L @ 0x300006
  4961                           ;	Stack Full/Underflow Reset Enable bit
  4962                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4963                           ;	Single-Supply ICSP Enable bit
  4964                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4965                           ;	Extended Instruction Set Enable bit
  4966                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4967                           ;	Background Debug
  4968                           ;	DEBUG = 0x1, unprogrammed default
  4969   300006                     	org	3145734
  4970   300006  85                 	db	133
  4971                           
  4972                           ; Padding undefined space
  4973   300007                     	org	3145735
  4974   300007  FF                 	db	255
  4975                           
  4976                           ;Config register CONFIG5L @ 0x300008
  4977                           ;	Code Protection Block 0
  4978                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4979                           ;	Code Protection Block 1
  4980                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4981                           ;	Code Protection Block 2
  4982                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4983                           ;	Code Protection Block 3
  4984                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4985   300008                     	org	3145736
  4986   300008  0F                 	db	15
  4987                           
  4988                           ;Config register CONFIG5H @ 0x300009
  4989                           ;	Boot Block Code Protection bit
  4990                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4991                           ;	Data EEPROM Code Protection bit
  4992                           ;	CPD = OFF, Data EEPROM not code-protected
  4993   300009                     	org	3145737
  4994   300009  C0                 	db	192
  4995                           
  4996                           ;Config register CONFIG6L @ 0x30000A
  4997                           ;	Write Protection Block 0
  4998                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4999                           ;	Write Protection Block 1
  5000                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5001                           ;	Write Protection Block 2
  5002                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5003                           ;	Write Protection Block 3
  5004                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5005   30000A                     	org	3145738
  5006   30000A  0F                 	db	15
  5007                           
  5008                           ;Config register CONFIG6H @ 0x30000B
  5009                           ;	Configuration Register Write Protection bit
  5010                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5011                           ;	Boot Block Write Protection bit
  5012                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5013                           ;	Data EEPROM Write Protection bit
  5014                           ;	WRTD = OFF, Data EEPROM not write-protected
  5015   30000B                     	org	3145739
  5016   30000B  E0                 	db	224
  5017                           
  5018                           ;Config register CONFIG7L @ 0x30000C
  5019                           ;	Table Read Protection Block 0
  5020                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5021                           ;	Table Read Protection Block 1
  5022                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5023                           ;	Table Read Protection Block 2
  5024                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5025                           ;	Table Read Protection Block 3
  5026                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5027   30000C                     	org	3145740
  5028   30000C  0F                 	db	15
  5029                           
  5030                           ;Config register CONFIG7H @ 0x30000D
  5031                           ;	Boot Block Table Read Protection bit
  5032                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5033   30000D                     	org	3145741
  5034   30000D  40                 	db	64
  5035                           tosu	equ	0xFFF
  5036                           tosh	equ	0xFFE
  5037                           tosl	equ	0xFFD
  5038                           stkptr	equ	0xFFC
  5039                           pclatu	equ	0xFFB
  5040                           pclath	equ	0xFFA
  5041                           pcl	equ	0xFF9
  5042                           tblptru	equ	0xFF8
  5043                           tblptrh	equ	0xFF7
  5044                           tblptrl	equ	0xFF6
  5045                           tablat	equ	0xFF5
  5046                           prodh	equ	0xFF4
  5047                           prodl	equ	0xFF3
  5048                           indf0	equ	0xFEF
  5049                           postinc0	equ	0xFEE
  5050                           postdec0	equ	0xFED
  5051                           preinc0	equ	0xFEC
  5052                           plusw0	equ	0xFEB
  5053                           fsr0h	equ	0xFEA
  5054                           fsr0l	equ	0xFE9
  5055                           wreg	equ	0xFE8
  5056                           indf1	equ	0xFE7
  5057                           postinc1	equ	0xFE6
  5058                           postdec1	equ	0xFE5
  5059                           preinc1	equ	0xFE4
  5060                           plusw1	equ	0xFE3
  5061                           fsr1h	equ	0xFE2
  5062                           fsr1l	equ	0xFE1
  5063                           bsr	equ	0xFE0
  5064                           indf2	equ	0xFDF
  5065                           postinc2	equ	0xFDE
  5066                           postdec2	equ	0xFDD
  5067                           preinc2	equ	0xFDC
  5068                           plusw2	equ	0xFDB
  5069                           fsr2h	equ	0xFDA
  5070                           fsr2l	equ	0xFD9
  5071                           status	equ	0xFD8

Data Sizes:
    Strings     109
    Constant    0
    Data        2
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      91
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(COMRAM[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(COMRAM[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 32
		 -> air_intake_string(BANK0[16]), buffer(BANK0[32]), rpm_string(COMRAM[16]), STR_10(CODE[6]), 
		 -> STR_11(CODE[4]), STR_13(CODE[4]), STR_15(CODE[4]), STR_16(CODE[2]), 
		 -> STR_18(CODE[6]), STR_2(CODE[17]), STR_20(CODE[6]), STR_3(CODE[16]), 
		 -> STR_6(CODE[6]), STR_7(CODE[4]), STR_9(CODE[6]), 

    S1841$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(COMRAM[16]), 

    S1841$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK0[32]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(COMRAM[16]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 32
		 -> buffer(BANK0[32]), 

    UART1_SendString@string	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), STR_12(CODE[6]), STR_17(CODE[5]), STR_19(CODE[6]), 
		 -> STR_21(CODE[6]), STR_4(CODE[6]), STR_8(CODE[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_5(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_5(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_5(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_main_menu
    _live_reading_mode->_print_AI_Temp
    _live_reading_mode->_print_RPM
    _print_Vbatt->_LCD_write_string
    _print_RPM->_sprintf
    _print_AI_Temp->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _print_SAEVer->_LCD_write_string
    _print_ELMVer->_LCD_write_string
    _UART1_SendString->_UART1_SendChar
    _display_mm->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _LCD_configure_cursor_blink->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10190
                                             49 COMRAM     2     2      0
                           _ADC_init
                          _LCD_clear
                           _LCD_init
                         _UART1_Init
                   _UART1_SendString
                         _input_init
                          _main_menu
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            6     6      0    9368
                                             43 COMRAM     6     6      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
                         _display_mm
                _display_system_info
                  _live_reading_mode
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _live_reading_mode                                    0     0      0    5848
                      _print_AI_Temp
                          _print_RPM
                        _print_Vbatt
 ---------------------------------------------------------------------------------
 (3) _print_Vbatt                                          0     0      0     948
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               4     1      3      90
                                              2 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _print_RPM                                            3     3      0    2450
                                             40 COMRAM     3     3      0
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                  _hex_char_to_value
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _print_AI_Temp                                        3     3      0    2450
                                             40 COMRAM     3     3      0
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                  _hex_char_to_value
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    14      4    1331
                                             24 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             4     1      3    1128
                                             20 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           11     8      3    1003
                                             10 COMRAM    10     7      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     230
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     164
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _hex_char_to_value                                    1     1      0     261
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _display_system_info                                  0     0      0    1716
                       _print_ELMVer
                       _print_SAEVer
 ---------------------------------------------------------------------------------
 (3) _print_SAEVer                                         0     0      0     858
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
 ---------------------------------------------------------------------------------
 (3) _print_ELMVer                                         0     0      0     858
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
 ---------------------------------------------------------------------------------
 (4) _UART1_SendString                                     4     3      1     126
                                              3 COMRAM     4     3      1
                     _UART1_SendChar
 ---------------------------------------------------------------------------------
 (5) _UART1_SendChar                                       1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _display_mm                                           0     0      0     732
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _LCD_write_string                                     5     3      2     339
                                              5 COMRAM     5     3      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (5) _LCD_write_data                                       3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_cursor_set                                       2     1      1     393
                                              5 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_configure_cursor_blink                           1     1      0     261
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _input_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     464
                                              6 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     232
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (5) _LCD_write_command                                    3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (6) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _UART_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _UART1_Init
   _UART1_SendString
     _UART1_SendChar
   _input_init
   _main_menu
     _LCD_clear
     _LCD_configure_cursor_blink
       _LCD_write_command
     _LCD_cursor_set
       _LCD_write_command
     _display_mm
       _LCD_cursor_set
       _LCD_write_string
         _LCD_write_data
           _LCD_pulse_clock
     _display_system_info
       _print_ELMVer
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
       _print_SAEVer
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
     _live_reading_mode
       _print_AI_Temp
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _hex_char_to_value
         _sprintf
           _vfprintf
             _vfpfcnvrt
               ___lwdiv
               ___lwmod
               _fputc
                 _putch
       _print_RPM
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _hex_char_to_value
         _sprintf
       _print_Vbatt
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _strchr
     _readADC

 _UART_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      80     50.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     51      91     96.8%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        70      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     171      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 28 14:01:13 2025

                               l121 1EEA                                 l202 19AC  
                               l210 1520                                 l124 1F10  
                               l302 1EA8                                 l150 1EDA  
                               l127 1E86                                 l144 1C80  
                               l224 17EA                                 l305 1EC4  
                               l233 1D04                                 l153 1DBE  
                               l242 1F1A                                 l218 192E  
                               l147 1EC8                                 l227 1EF8  
                               l156 1DF0                                 l271 161C  
                               l335 1AA2                                 l159 1E26  
                               l239 1CC2                                 l168 129A  
                               l184 11FA                                 l265 1F04  
                               l281 1BDA                                 l274 1A28  
                               l178 11CA                                 l268 1718  
                               l277 1B92                                 l278 1BA8  
                               l279 1BBE                                 l860 1B0E  
                               l870 1B72                                 l867 1B16  
                               l877 1B7A                                 u900 1AF8  
                               u901 1AF4                                 u910 1B2A  
                               u911 1B26                                 u920 1B48  
                               u921 1B44                                 u930 1B5E  
                               u931 1B5A                                 u940 17FC  
                               u941 17F8                                 u950 180C  
                               u951 1808                                 u880 1ABE  
                               u960 1832                                 u881 1ABA  
                               u961 182E                                 u890 1ADC  
                               u970 1864                                 u891 1AD8  
                               u971 1860                                 u980 12DA  
                               u981 12D6                                 _RPM 0040  
                               u990 1318                                 u991 1314  
                               wreg 0FE8                          _TXSTA1bits 0FAC  
                              l1100 1D80                                l1112 1894  
                              l2001 1D5C                                l2011 1C5A  
                              l1123 1F1E                                l2003 1D78  
                              l2021 1BBA                                l2013 1C5E  
                              l2101 14EE                                l1126 1D82  
                              l2023 1BD0                                l2015 1B7E  
                              l2031 1A62                                l2007 1C38  
                              l2111 151E                                l2103 14F8  
                              l1056 1E5A                                l1128 1DBA  
                              l2025 1BD4                                l2017 1B8E  
                              l2033 1A64                                l2009 1C44  
                              l2105 1508                                l2121 18C8  
                              l2113 1896                                l2201 1DCC  
                              l2019 1BA4                                l2027 1A2A  
                              l2211 1E0C                                l2051 1982  
                              l2043 195A                                l2035 1932  
                              l2107 1512                                l2131 192A  
                              l2123 18E2                                l2115 189E  
                              l2203 1DDA                                l2213 1E8A  
                              l2029 1A30                                l2053 1992  
                              l2045 196A                                l2037 1942  
                              l1093 1420                                l2141 173C  
                              l2109 151C                                l2133 192C  
                              l2125 18EC                                l2117 18AE  
                              l2221 1EEC                                l2301 1138  
                              l2231 19C6                                l2215 1E9A  
                              l2207 1DF2                                l2055 19A2  
                              l2047 197A                                l2039 1952  
                              l2071 1E50                                l2063 1E28  
                              l2151 17A8                                l2143 174C  
                              l2135 171A                                l2127 190C  
                              l2119 18B8                                l2223 1EF0  
                              l2311 116E                                l2303 1140  
                              l2241 19E6                                l2233 19DE  
                              l2217 1EA0                                l2209 1DFC  
                              l2065 1E30                                l2161 17E6  
                              l2153 17B8                                l2145 177E  
                              l2137 1722                                l2081 1DA0  
                              l2129 1920                                l2225 1EF4  
                              l2321 11AC                                l2313 117C  
                              l2305 114A                                l2251 1A08  
                              l2243 19EA                                l2235 19E0  
                              l2219 1EA2                                l2171 1CE6  
                              l2227 1F12                                l2059 19AA  
                              l2067 1E38                                l2163 17E8  
                              l2155 17C2                                l2147 178A  
                              l2139 1732                                l2091 143A  
                              l2083 1DB8                                l2075 1D82  
                              l2331 11E8                                l2323 11BA  
                              l2315 118A                                l2307 1150  
                              l1541 1F0A                                l2261 1A18  
                              l2253 1A0A                                l2245 19FC  
                              l2237 19E2                                l2229 19AE  
                              l2173 1CF6                                l2165 1CC4  
                              l2181 1C8A                                l2069 1E40  
                              l2157 17CC                                l2149 179E  
                              l2093 149E                                l2077 1D9A  
                              l2341 1218                                l2325 11BE  
                              l2317 118E                                l2309 115E  
                              l2421 1BE8                                l2263 1A1E  
                              l2255 1A0C                                l2247 1A02  
                              l2239 19E4                                l1551 1E7A  
                              l1543 1E5C                                l2175 1D00  
                              l2167 1CCC                                l2191 1CC0  
                              l2183 1C9A                                l2159 17D6  
                              l2095 14C0                                l2087 1422  
                              l2351 122E                                l2327 11C2  
                              l2319 119C                                l2271 1078  
                              l2423 1BF4                                l2415 1BDC  
                              l2193 1EAA                                l2265 1A24  
                              l2257 1A0E                                l2249 1A06  
                              l1561 1E84                                l1553 1E7C  
                              l1545 1E6E                                l1537 1EDC  
                              l2177 1D02                                l2169 1CDC  
                              l2185 1CA4                                l2097 14D4  
                              l2089 142A                                l2353 123C  
                              l2329 11D8                                l2281 10AA  
                              l2273 107C                                l2425 1C0C  
                              l2417 1BE0                                l1539 1F06  
                              l2195 1EB0                                l2259 1A12  
                              l1555 1E7E                                l1547 1E76  
                              l2187 1CB4                                l2179 1C82  
                              l2099 14DE                                l2355 124C  
                              l2339 1208                                l2291 10F0  
                              l2283 10BA                                l2275 1088  
                              l2267 1070                                l2427 1C14  
                              l2419 1BE4                                l2197 1EBE  
                              l1557 1E80                                l1549 1E78  
                              l2189 1CBE                                l1901 1816  
                              l2349 122A                                l2365 125E  
                              l2293 1102                                l2285 10CC  
                              l2277 1098                                l2269 1074  
                              l2429 1C2C                                l1911 1EFC  
                              l1559 1E82                                l1903 1832  
                              l2199 1DBC                                l2367 129A  
                              l2295 110A                                l2287 10D4  
                              l2279 10A0                                l1913 1F02  
                              l1905 1864                                l1921 12EE  
                              l2561 1274                                l2297 1114  
                              l2289 10DE                                l1931 133E  
                              l1923 12F2                                l1915 12B8  
                              l2299 1126                                l1909 1EFA  
                              l1861 1ABE                                l1941 13A8  
                              l1933 1342                                l1925 12FC  
                              l1917 12DA                                l1871 1AF8  
                              l1863 1AC6                                l1943 13C2  
                              l1935 1366                                l1927 1318  
                              l1951 13F2                                l1919 12E2  
                              l1961 1EC8                                l1873 1B00  
                              l1865 1ACE                                l1857 1AA4  
                              l1881 1B2A                                l1945 13C4  
                              l1937 1382                                l1929 1330  
                              l1971 16A4                                l1963 1ED6  
                              l1875 1B02                                l1867 1ADC  
                              l1859 1AAC                                l1891 1B66  
                              l1883 1B32                                l1939 1394  
                              l1955 13FE                                l1973 16C6  
                              l1965 1620                                l1981 1524  
                              l1877 1B08                                l1869 1AE2  
                              l1893 1B6C                                l1885 1B3A  
                              l1949 13DA                                l1975 16E6  
                              l1967 1622                                l1991 15EA  
                              l1983 1526                                l1887 1B48  
                              l1879 1B18                                l1895 17EC  
                              l1977 1700                                l1969 16A0  
                              l1993 1604                                l1985 15A4  
                              l1889 1B5E                                l1897 17FC  
                              l1979 1714                                l1995 1618  
                              l1987 15A8                                l1899 180C  
                              l1989 15CA                                l1997 1D44  
                              l1999 1D4C                                STR_1 1022  
                              STR_2 1001                                STR_3 1012  
                              STR_4 102E                                STR_5 1069  
                              STR_6 1040                                STR_7 1061  
                              STR_8 103A                                STR_9 1040  
                              u1000 1394                                u1001 1390  
                              u1010 13A4                                u1011 13A0  
                              u1020 13D6                                u1100 1D78  
                              u1021 13D2                                u1101 1D74  
                              u1030 1ED6                                u1110 1C80  
                              u1031 1ED2                                u1111 1C7C  
                              u1120 1B8E                                u1200 1952  
                              u1121 1B8A                                u1201 194E  
                              u1130 1BA4                                u1210 196A  
                              u1131 1BA0                                u1211 1966  
                              u1140 1BBA                                u1220 197A  
                              u1300 1732                                u1045 162A  
                              u1141 1BB6                                u1221 1976  
                              u1301 172E                                u1150 1BD0  
                              u1310 1CDC                                u1230 1992  
                              u1055 1644                                u1151 1BCC  
                              u1311 1CD8                                u1231 198E  
                              u1160 1A5E                                u1320 1C9A  
                              u1240 19A2                                u1400 1126  
                              u1065 166A                                u1321 1C96  
                              u1241 199E                                u1401 1122  
                              u1170 1A92                                u1250 1D9A  
                              u1330 1DCC                                u1410 1138  
                              u1075 152E                                u1251 1D96  
                              u1331 1DC8                                u1411 1134  
                              u1340 1E9A                                u1180 1AA2  
                              u1260 1DB8                                u1500 123C  
                              u1420 115E                                u1341 1E96  
                              u1085 1548                                u1181 1A9E  
                              u1261 1DB4                                u1501 1238  
                              u1421 115A                                u1190 1942  
                              u1270 143A                                u1510 125A  
                              u1430 117C                                u1350 1098  
                              u1095 156E                                u1167 1A54  
                              u1191 193E                                u1271 1436  
                              u1511 1256                                u1431 1178  
                              u1351 1094                                u1280 18AE  
                              u1440 119C                                u1360 10BA  
                              u1177 1A88                                u1281 18AA  
                              u1441 1198                                u1361 10B6  
                              u1290 190C                                u1450 11BA  
                              u1370 10CC                                u1291 1908  
                              u1451 11B6                                u1371 10C8  
                              u1460 11D8                                u1380 10F0  
                              u1461 11D4                                u1381 10EC  
                              u1470 11F6                                u1390 1102  
                              u1471 11F2                                u1391 10FE  
                              u1480 1208                                u1481 1204  
                              u1490 1226                                u1491 1222  
                              u1807 120E                                u1817 1242  
                              u1827 12A4                                u1837 1DD2  
                              u1757 1BFE                                u1847 19D0  
                              u1767 1C1E                                u1857 19F0  
                              u1777 1164                                u1867 19FE  
                              u1787 11A2                                u1877 1EB6  
                              u1797 11DE                                u1887 1EFE  
                    _UART1_SendChar 1EC6                   _live_reading_mode 1EEC  
                 _air_intake_string 00A0                                _dbuf 0060  
                              _main 1BDC                                _prec 003A  
                              fsr0h 0FEA                                fsr1h 0FE2  
                   ??_print_AI_Temp 0029                                indf0 0FEF  
                              fsr2h 0FDA                                fsr0l 0FE9  
                              indf2 0FDF                                fsr1l 0FE1  
                              fsr2l 0FD9                                btemp 005C  
                ?_live_reading_mode 0001                                start 00D2  
                  __end_of_ADC_init 1F12                        ___param_bank 0000  
               ??_live_reading_mode 002C                         ?_UART1_Init 0001  
                      _BAUDCON1bits 0FB8                    __end_of_LCD_init 1A2A  
                             ?_main 0001                               STR_10 1052  
                             STR_11 105D                               STR_20 1046  
                             STR_12 1034                               STR_13 1042  
                             STR_14 1069                               STR_15 1065  
                             STR_16 106C                               STR_17 1058  
                             STR_18 104C                               STR_19 1028  
                   __end_of___lwdiv 1B18                     __end_of___lwmod 1B7C  
                             i2l138 00C6                        vfpfcnvrt@fmt 000C  
                             _TXREG 0FAD                               _A_rpm 0044  
                             _B_rpm 0042                    __end_of_UART_ISR 00D2  
                   __end_of_readADC 1DF2              __end_of_UART1_SendChar 1EDC  
                             _flags 0046                               _fputc 17EC  
         __end_of_live_reading_mode 1EFA                               _width 0038  
                             _putch 1F1E                               tablat 0FF5  
                 UART1_SendString@i 0006                               ttemp5 005D  
                             ttemp6 0060                               ttemp7 0064  
                             status 0FD8                               wtemp8 005D  
                   __end_of_sprintf 1E5C                     __initialization 1D06  
                      __end_of_main 1C38                   ?_LCD_write_string 0006  
                            ??_main 0032                       __activetblptr 0002  
                ??_LCD_write_string 0008                   __end_of_LCD_clear 1EC6  
                 main_menu@menu_sel 002E                              _ADCON0 0FC2  
                            _ADCON1 0FC1                              _ADCON2 0FC0  
                   ?_UART1_SendChar 0001                              ?_fputc 0003  
                            _ADRESH 0FC4                              _ADRESL 0FC3  
                            ?_putch 0001                              _ANSELC 0F3A  
                            i2l2431 0012                              i2l2441 0054  
                            i2l2433 0020                              i2l2451 0096  
                            i2l2443 0064                              i2l2435 002E  
                            i2l2453 00A8                              i2l2445 0076  
                            i2l2437 0040                              i2l2455 00B8  
                            i2l2447 0082                              i2l2439 0044  
                            i2l2457 00C2                              i2l2449 0084  
                            _RCREG1 0FAE                 _display_system_info 1F12  
            LCD_write_string@string 0006                              _OSCCON 0FD3  
                            _SPBRG1 0FAF                    _UART1_SendString 1C38  
                      vfprintf@cfmt 0018                           ??___lwdiv 0007  
      ??_LCD_configure_cursor_blink 0006                           ??___lwmod 0007  
                            _buffer 0080                ?_display_system_info 0001  
                            clear_0 1D24                              clear_1 1D30  
                            isa$std 0001                              _strchr 1D82  
                         ??_readADC 0005                              fputc@c 0003  
                      __pdataCOMRAM 005A                        __mediumconst 1000  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                           ?_ADC_init 0001  
                            putch@c 0001                    __end_of_vfprintf 1D82  
                         ??_sprintf 001D                        ?_print_Vbatt 0001  
                        __accesstop 0060             __end_of__initialization 1D36  
                         ?_LCD_init 0001                       ___rparam_used 0001  
                   UART1_SendChar@c 0003                      __pcstackCOMRAM 0001  
                         ?_UART_ISR 0001                      _LCD_entry_mode 005A  
                 _LCD_write_command 161E                       __end_of_fputc 1896  
             ??_display_system_info 000B                       __end_of_putch 1F20  
                    _LCD_cursor_set 1B7C                  ?_LCD_write_command 0001  
                 _hex_char_to_value 1930                  ?_hex_char_to_value 0001  
               ??_LCD_write_command 0003                          ??_ADC_init 0003  
                           ??_fputc 0006                             ??_putch 0003  
                        __pbssBANK0 0060                 ??_hex_char_to_value 0003  
                        ??_LCD_init 0007           __end_of_LCD_write_command 171A  
                      ??_UART1_Init 0003                          ??_UART_ISR 0001  
            __end_of_LCD_cursor_set 1BDC           __end_of_hex_char_to_value 19AE  
                           ?_strchr 0003                             _SPBRGH1 0FB0  
                        _display_mm 1DF2            LCD_write_command@command 0005  
                __end_of_UART1_Init 1E88                             _RX_char 0048  
             __end_of_print_AI_Temp 17EC                             __Hparam 0000  
                           __Lparam 0000  __end_of_LCD_configure_cursor_blink 1EAA  
        _LCD_configure_cursor_blink 1E88                    _message_complete 0047  
                   ?_LCD_cursor_set 0006                      _LCD_write_data 1522  
                           ___lwdiv 1AA4                             ___lwmod 1B18  
                         ?_vfprintf 0015                        __psmallconst 1000  
                 __end_of_main_menu 12B8                             __pcinit 1D06  
                           __ramtop 1000                             __ptext0 1BDC  
                           __ptext1 1070                             __ptext2 1DBC  
                           __ptext3 1EEC                             __ptext4 1896  
                           __ptext5 1D82                             __ptext6 1422  
                           __ptext7 171A                             __ptext8 1E28  
                           __ptext9 1D44                             _readADC 1DBC  
                  ??_UART1_SendChar 0003            __end_of_UART1_SendString 1C82  
                        _input_init 1EDC                             _sprintf 1E28  
                         _LCD_clear 1EAA                end_of_initialization 1D36  
                           fputc@fp 0005                       __Lmediumconst 0000  
              LCD_cursor_set@column 0006                   __end_of_print_RPM 1522  
                     ?_print_ELMVer 0001                        _buffer_count 0049  
               _LCD_display_control 005B              __end_of_LCD_write_data 161E  
                 __end_of_vfpfcnvrt 1422                       ?_print_SAEVer 0001  
                         _RCSTAbits 0FAB                             postdec2 0FDD  
                           postinc0 0FEE                             postinc1 0FE6  
                           postinc2 0FDE                    vfpfcnvrt@convarg 000F  
                        ??_vfprintf 0018                             strchr@c 0004  
                           strchr@s 0003                           _PORTBbits 0F81  
                         _PORTCbits 0F82                   ??_LCD_pulse_clock 0003  
                        _rpm_string 004A                           _TRISAbits 0F92  
                         _TRISBbits 0F93                           _TRISCbits 0F94  
                         _TRISDbits 0F95                         ?_display_mm 0001  
                        ?_LCD_clear 0001                     _air_intake_temp 003C  
                         _TXSTAbits 0FAC                      ??_print_ELMVer 000B  
                    ??_print_SAEVer 000B                     ?_LCD_write_data 0001  
                       vfpfcnvrt@ap 000D                         vfpfcnvrt@cp 0013  
                       vfpfcnvrt@fp 000B                       __pidataCOMRAM 1F1C  
                    __end_of_strchr 1DBC                 start_initialization 1D06  
                       ?_input_init 0001         __end_of_display_system_info 1F1C  
                       vfprintf@fmt 0016                            ??_strchr 0006  
                       __pbssCOMRAM 0034                         ??_LCD_clear 0006  
                  _LCD_write_string 1A2A                    ??_LCD_cursor_set 0007  
                  ___lwdiv@dividend 0003     LCD_configure_cursor_blink@state 0006  
                         __pintcode 0008         ?_LCD_configure_cursor_blink 0001  
                          ?___lwdiv 0003                            ?___lwmod 0003  
            UART1_SendString@string 0004                            ?_readADC 0003  
                       __smallconst 1000                           _main_menu 1070  
              __end_of_print_ELMVer 1D06                            _ADC_init 1F06  
              __end_of_print_SAEVer 1CC4                   ?_UART1_SendString 0004  
                  ___lwdiv@quotient 0007                            ?_sprintf 0019  
                LCD_write_data@data 0005                  ??_UART1_SendString 0005  
                          _LATDbits 0F8C                            _LCD_init 19AE  
                          _PIE1bits 0F9D                            i2u160_40 0054  
                          i2u160_41 0050                            i2u161_40 0064  
                          i2u161_41 0060                            i2u162_40 0076  
                          i2u162_41 0072                            i2u163_40 0096  
                          i2u163_41 0092                            i2u164_40 00A8  
                          i2u164_41 00A4                            i2u165_40 00B8  
                          i2u157_40 0020                            i2u165_41 00B4  
                          i2u157_41 001C                            i2u158_40 002E  
                          i2u158_41 002A                            i2u159_40 0040  
                          i2u159_41 003C                            _PIR1bits 0F9E  
                   _LCD_pulse_clock 1EFA                            _UART_ISR 0008  
                         _print_RPM 1422                           _vfpfcnvrt 12B8  
                        _ADCON0bits 0FC2                          ?_main_menu 0001  
                      ??_display_mm 000B                          vfpfcnvrt@c 0014  
                     ??_print_Vbatt 000B                    ??_LCD_write_data 0003  
                          __Hrparam 0000                     main_menu@result 0030  
                         modff@F522 0034                          vfprintf@ap 0017  
                          __Lrparam 0000                          vfprintf@fp 0015  
                hex_char_to_value@c 0003                   LCD_cursor_set@row 0007  
                        ?_print_RPM 0001                  __end_of_display_mm 1E28  
                        ?_vfpfcnvrt 000B                          _ANSELAbits 0F38  
                        _ANSELBbits 0F39                          _ANSELCbits 0F3A  
                        sprintf@fmt 001A                     ___lwdiv@divisor 0005  
                   ___lwdiv@counter 0009                        ??_input_init 0003  
                          __ptext10 12B8                            __ptext11 17EC  
                          __ptext20 1EC6                            __ptext12 1F1E  
                          __ptext21 1DF2                            __ptext13 1B18  
                          __ptext30 161E                            __ptext22 1A2A  
                          __ptext14 1AA4                            __ptext31 1EFA  
                          __ptext23 1522                            __ptext15 1930  
                          __ptext32 1F06                            __ptext24 1B7C  
                          __ptext16 1F12                            __ptext25 1E88  
                          __ptext17 1C82                            __ptext26 1EDC  
                          __ptext18 1CC4                            __ptext27 1E5C  
                          __ptext19 1C38                            __ptext28 19AE  
                          __ptext29 1EAA             __end_of_LCD_pulse_clock 1F06  
               __end_of_print_Vbatt 1930                       _print_AI_Temp 171A  
                          isa$xinst 0000                            int$flags 005C  
                          _vfprintf 1D44                  __end_of_input_init 1EEC  
          __end_of_LCD_write_string 1AA4                         ??_main_menu 002C  
                        _INTCONbits 0FF2                   LCD_write_string@i 000A  
                          intlevel2 0000                           sprintf@ap 001D  
                  ___lwmod@dividend 0003                          _RCSTA1bits 0FAB  
                    ?_print_AI_Temp 0001                        _print_ELMVer 1CC4  
                      _print_SAEVer 1C82                          _UART1_Init 1E5C  
                       ??_print_RPM 0029                         ??_vfpfcnvrt 000E  
                          sprintf@f 001E                            sprintf@s 0019  
                   ___lwmod@divisor 0005                        _A_air_intake 003E  
                   ___lwmod@counter 0007                         _print_Vbatt 1896  
                  ?_LCD_pulse_clock 0001  
