

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Apr 26 19:59:35 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 12/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F46K22 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000FE0                     bsr             equ	4064
    63   000FE9                     fsr0            equ	4073
    64   000FEA                     fsr0h           equ	4074
    65   000FE9                     fsr0l           equ	4073
    66   000FE1                     fsr1            equ	4065
    67   000FE2                     fsr1h           equ	4066
    68   000FE1                     fsr1l           equ	4065
    69   000FD9                     fsr2            equ	4057
    70   000FDA                     fsr2h           equ	4058
    71   000FD9                     fsr2l           equ	4057
    72   000FEF                     indf0           equ	4079
    73   000FE7                     indf1           equ	4071
    74   000FDF                     indf2           equ	4063
    75   000FF2                     intcon          equ	4082
    76   000000                     nvmcon          equ	0
    77   000FF9                     pcl             equ	4089
    78   000FFA                     pclath          equ	4090
    79   000FFB                     pclatu          equ	4091
    80   000FEB                     plusw0          equ	4075
    81   000FE3                     plusw1          equ	4067
    82   000FDB                     plusw2          equ	4059
    83   000FED                     postdec0        equ	4077
    84   000FE5                     postdec1        equ	4069
    85   000FDD                     postdec2        equ	4061
    86   000FEE                     postinc0        equ	4078
    87   000FE6                     postinc1        equ	4070
    88   000FDE                     postinc2        equ	4062
    89   000FEC                     preinc0         equ	4076
    90   000FE4                     preinc1         equ	4068
    91   000FDC                     preinc2         equ	4060
    92   000FF3                     prod            equ	4083
    93   000FF4                     prodh           equ	4084
    94   000FF3                     prodl           equ	4083
    95   000FD8                     status          equ	4056
    96   000FF5                     tablat          equ	4085
    97   000FF6                     tblptr          equ	4086
    98   000FF7                     tblptrh         equ	4087
    99   000FF6                     tblptrl         equ	4086
   100   000FF8                     tblptru         equ	4088
   101   000FFD                     tosl            equ	4093
   102   000FE8                     wreg            equ	4072
   103   000F38                     ANSELA          equ	3896	;# 
   104   000F39                     ANSELB          equ	3897	;# 
   105   000F3A                     ANSELC          equ	3898	;# 
   106   000F3B                     ANSELD          equ	3899	;# 
   107   000F3C                     ANSELE          equ	3900	;# 
   108   000F3D                     PMD2            equ	3901	;# 
   109   000F3E                     PMD1            equ	3902	;# 
   110   000F3F                     PMD0            equ	3903	;# 
   111   000F40                     VREFCON2        equ	3904	;# 
   112   000F40                     DACCON1         equ	3904	;# 
   113   000F41                     VREFCON1        equ	3905	;# 
   114   000F41                     DACCON0         equ	3905	;# 
   115   000F42                     VREFCON0        equ	3906	;# 
   116   000F42                     FVRCON          equ	3906	;# 
   117   000F43                     CTMUICON        equ	3907	;# 
   118   000F43                     CTMUICONH       equ	3907	;# 
   119   000F44                     CTMUCONL        equ	3908	;# 
   120   000F44                     CTMUCON1        equ	3908	;# 
   121   000F45                     CTMUCONH        equ	3909	;# 
   122   000F45                     CTMUCON0        equ	3909	;# 
   123   000F46                     SRCON1          equ	3910	;# 
   124   000F47                     SRCON0          equ	3911	;# 
   125   000F48                     CCPTMRS1        equ	3912	;# 
   126   000F49                     CCPTMRS0        equ	3913	;# 
   127   000F4A                     T6CON           equ	3914	;# 
   128   000F4B                     PR6             equ	3915	;# 
   129   000F4C                     TMR6            equ	3916	;# 
   130   000F4D                     T5GCON          equ	3917	;# 
   131   000F4E                     T5CON           equ	3918	;# 
   132   000F4F                     TMR5            equ	3919	;# 
   133   000F4F                     TMR5L           equ	3919	;# 
   134   000F50                     TMR5H           equ	3920	;# 
   135   000F51                     T4CON           equ	3921	;# 
   136   000F52                     PR4             equ	3922	;# 
   137   000F53                     TMR4            equ	3923	;# 
   138   000F54                     CCP5CON         equ	3924	;# 
   139   000F55                     CCPR5           equ	3925	;# 
   140   000F55                     CCPR5L          equ	3925	;# 
   141   000F56                     CCPR5H          equ	3926	;# 
   142   000F57                     CCP4CON         equ	3927	;# 
   143   000F58                     CCPR4           equ	3928	;# 
   144   000F58                     CCPR4L          equ	3928	;# 
   145   000F59                     CCPR4H          equ	3929	;# 
   146   000F5A                     PSTR3CON        equ	3930	;# 
   147   000F5B                     ECCP3AS         equ	3931	;# 
   148   000F5B                     CCP3AS          equ	3931	;# 
   149   000F5C                     PWM3CON         equ	3932	;# 
   150   000F5D                     CCP3CON         equ	3933	;# 
   151   000F5E                     CCPR3           equ	3934	;# 
   152   000F5E                     CCPR3L          equ	3934	;# 
   153   000F5F                     CCPR3H          equ	3935	;# 
   154   000F60                     SLRCON          equ	3936	;# 
   155   000F61                     WPUB            equ	3937	;# 
   156   000F62                     IOCB            equ	3938	;# 
   157   000F63                     PSTR2CON        equ	3939	;# 
   158   000F64                     ECCP2AS         equ	3940	;# 
   159   000F64                     CCP2AS          equ	3940	;# 
   160   000F65                     PWM2CON         equ	3941	;# 
   161   000F66                     CCP2CON         equ	3942	;# 
   162   000F67                     CCPR2           equ	3943	;# 
   163   000F67                     CCPR2L          equ	3943	;# 
   164   000F68                     CCPR2H          equ	3944	;# 
   165   000F69                     SSP2CON3        equ	3945	;# 
   166   000F6A                     SSP2MSK         equ	3946	;# 
   167   000F6B                     SSP2CON2        equ	3947	;# 
   168   000F6C                     SSP2CON1        equ	3948	;# 
   169   000F6D                     SSP2STAT        equ	3949	;# 
   170   000F6E                     SSP2ADD         equ	3950	;# 
   171   000F6F                     SSP2BUF         equ	3951	;# 
   172   000F70                     BAUDCON2        equ	3952	;# 
   173   000F70                     BAUD2CON        equ	3952	;# 
   174   000F71                     RCSTA2          equ	3953	;# 
   175   000F71                     RC2STA          equ	3953	;# 
   176   000F72                     TXSTA2          equ	3954	;# 
   177   000F72                     TX2STA          equ	3954	;# 
   178   000F73                     TXREG2          equ	3955	;# 
   179   000F73                     TX2REG          equ	3955	;# 
   180   000F74                     RCREG2          equ	3956	;# 
   181   000F74                     RC2REG          equ	3956	;# 
   182   000F75                     SPBRG2          equ	3957	;# 
   183   000F75                     SP2BRG          equ	3957	;# 
   184   000F76                     SPBRGH2         equ	3958	;# 
   185   000F76                     SP2BRGH         equ	3958	;# 
   186   000F77                     CM2CON1         equ	3959	;# 
   187   000F77                     CM12CON         equ	3959	;# 
   188   000F78                     CM2CON0         equ	3960	;# 
   189   000F78                     CM2CON          equ	3960	;# 
   190   000F79                     CM1CON0         equ	3961	;# 
   191   000F79                     CM1CON          equ	3961	;# 
   192   000F7A                     PIE4            equ	3962	;# 
   193   000F7B                     PIR4            equ	3963	;# 
   194   000F7C                     IPR4            equ	3964	;# 
   195   000F7D                     PIE5            equ	3965	;# 
   196   000F7E                     PIR5            equ	3966	;# 
   197   000F7F                     IPR5            equ	3967	;# 
   198   000F80                     PORTA           equ	3968	;# 
   199   000F81                     PORTB           equ	3969	;# 
   200   000F82                     PORTC           equ	3970	;# 
   201   000F83                     PORTD           equ	3971	;# 
   202   000F84                     PORTE           equ	3972	;# 
   203   000F89                     LATA            equ	3977	;# 
   204   000F8A                     LATB            equ	3978	;# 
   205   000F8B                     LATC            equ	3979	;# 
   206   000F8C                     LATD            equ	3980	;# 
   207   000F8D                     LATE            equ	3981	;# 
   208   000F92                     TRISA           equ	3986	;# 
   209   000F92                     DDRA            equ	3986	;# 
   210   000F93                     TRISB           equ	3987	;# 
   211   000F93                     DDRB            equ	3987	;# 
   212   000F94                     TRISC           equ	3988	;# 
   213   000F94                     DDRC            equ	3988	;# 
   214   000F95                     TRISD           equ	3989	;# 
   215   000F95                     DDRD            equ	3989	;# 
   216   000F96                     TRISE           equ	3990	;# 
   217   000F96                     DDRE            equ	3990	;# 
   218   000F9B                     OSCTUNE         equ	3995	;# 
   219   000F9C                     HLVDCON         equ	3996	;# 
   220   000F9C                     LVDCON          equ	3996	;# 
   221   000F9D                     PIE1            equ	3997	;# 
   222   000F9E                     PIR1            equ	3998	;# 
   223   000F9F                     IPR1            equ	3999	;# 
   224   000FA0                     PIE2            equ	4000	;# 
   225   000FA1                     PIR2            equ	4001	;# 
   226   000FA2                     IPR2            equ	4002	;# 
   227   000FA3                     PIE3            equ	4003	;# 
   228   000FA4                     PIR3            equ	4004	;# 
   229   000FA5                     IPR3            equ	4005	;# 
   230   000FA6                     EECON1          equ	4006	;# 
   231   000FA7                     EECON2          equ	4007	;# 
   232   000FA8                     EEDATA          equ	4008	;# 
   233   000FA9                     EEADR           equ	4009	;# 
   234   000FAA                     EEADRH          equ	4010	;# 
   235   000FAB                     RCSTA1          equ	4011	;# 
   236   000FAB                     RCSTA           equ	4011	;# 
   237   000FAB                     RC1STA          equ	4011	;# 
   238   000FAC                     TXSTA1          equ	4012	;# 
   239   000FAC                     TXSTA           equ	4012	;# 
   240   000FAC                     TX1STA          equ	4012	;# 
   241   000FAD                     TXREG1          equ	4013	;# 
   242   000FAD                     TXREG           equ	4013	;# 
   243   000FAD                     TX1REG          equ	4013	;# 
   244   000FAE                     RCREG1          equ	4014	;# 
   245   000FAE                     RCREG           equ	4014	;# 
   246   000FAE                     RC1REG          equ	4014	;# 
   247   000FAF                     SPBRG1          equ	4015	;# 
   248   000FAF                     SPBRG           equ	4015	;# 
   249   000FAF                     SP1BRG          equ	4015	;# 
   250   000FB0                     SPBRGH1         equ	4016	;# 
   251   000FB0                     SPBRGH          equ	4016	;# 
   252   000FB0                     SP1BRGH         equ	4016	;# 
   253   000FB1                     T3CON           equ	4017	;# 
   254   000FB2                     TMR3            equ	4018	;# 
   255   000FB2                     TMR3L           equ	4018	;# 
   256   000FB3                     TMR3H           equ	4019	;# 
   257   000FB4                     T3GCON          equ	4020	;# 
   258   000FB6                     ECCP1AS         equ	4022	;# 
   259   000FB6                     ECCPAS          equ	4022	;# 
   260   000FB7                     PWM1CON         equ	4023	;# 
   261   000FB7                     PWMCON          equ	4023	;# 
   262   000FB8                     BAUDCON1        equ	4024	;# 
   263   000FB8                     BAUDCON         equ	4024	;# 
   264   000FB8                     BAUDCTL         equ	4024	;# 
   265   000FB8                     BAUD1CON        equ	4024	;# 
   266   000FB9                     PSTR1CON        equ	4025	;# 
   267   000FB9                     PSTRCON         equ	4025	;# 
   268   000FBA                     T2CON           equ	4026	;# 
   269   000FBB                     PR2             equ	4027	;# 
   270   000FBC                     TMR2            equ	4028	;# 
   271   000FBD                     CCP1CON         equ	4029	;# 
   272   000FBE                     CCPR1           equ	4030	;# 
   273   000FBE                     CCPR1L          equ	4030	;# 
   274   000FBF                     CCPR1H          equ	4031	;# 
   275   000FC0                     ADCON2          equ	4032	;# 
   276   000FC1                     ADCON1          equ	4033	;# 
   277   000FC2                     ADCON0          equ	4034	;# 
   278   000FC3                     ADRES           equ	4035	;# 
   279   000FC3                     ADRESL          equ	4035	;# 
   280   000FC4                     ADRESH          equ	4036	;# 
   281   000FC5                     SSP1CON2        equ	4037	;# 
   282   000FC5                     SSPCON2         equ	4037	;# 
   283   000FC6                     SSP1CON1        equ	4038	;# 
   284   000FC6                     SSPCON1         equ	4038	;# 
   285   000FC7                     SSP1STAT        equ	4039	;# 
   286   000FC7                     SSPSTAT         equ	4039	;# 
   287   000FC8                     SSP1ADD         equ	4040	;# 
   288   000FC8                     SSPADD          equ	4040	;# 
   289   000FC9                     SSP1BUF         equ	4041	;# 
   290   000FC9                     SSPBUF          equ	4041	;# 
   291   000FCA                     SSP1MSK         equ	4042	;# 
   292   000FCA                     SSPMSK          equ	4042	;# 
   293   000FCB                     SSP1CON3        equ	4043	;# 
   294   000FCB                     SSPCON3         equ	4043	;# 
   295   000FCC                     T1GCON          equ	4044	;# 
   296   000FCD                     T1CON           equ	4045	;# 
   297   000FCE                     TMR1            equ	4046	;# 
   298   000FCE                     TMR1L           equ	4046	;# 
   299   000FCF                     TMR1H           equ	4047	;# 
   300   000FD0                     RCON            equ	4048	;# 
   301   000FD1                     WDTCON          equ	4049	;# 
   302   000FD2                     OSCCON2         equ	4050	;# 
   303   000FD3                     OSCCON          equ	4051	;# 
   304   000FD5                     T0CON           equ	4053	;# 
   305   000FD6                     TMR0            equ	4054	;# 
   306   000FD6                     TMR0L           equ	4054	;# 
   307   000FD7                     TMR0H           equ	4055	;# 
   308   000FD8                     STATUS          equ	4056	;# 
   309   000FD9                     FSR2            equ	4057	;# 
   310   000FD9                     FSR2L           equ	4057	;# 
   311   000FDA                     FSR2H           equ	4058	;# 
   312   000FDB                     PLUSW2          equ	4059	;# 
   313   000FDC                     PREINC2         equ	4060	;# 
   314   000FDD                     POSTDEC2        equ	4061	;# 
   315   000FDE                     POSTINC2        equ	4062	;# 
   316   000FDF                     INDF2           equ	4063	;# 
   317   000FE0                     BSR             equ	4064	;# 
   318   000FE1                     FSR1            equ	4065	;# 
   319   000FE1                     FSR1L           equ	4065	;# 
   320   000FE2                     FSR1H           equ	4066	;# 
   321   000FE3                     PLUSW1          equ	4067	;# 
   322   000FE4                     PREINC1         equ	4068	;# 
   323   000FE5                     POSTDEC1        equ	4069	;# 
   324   000FE6                     POSTINC1        equ	4070	;# 
   325   000FE7                     INDF1           equ	4071	;# 
   326   000FE8                     WREG            equ	4072	;# 
   327   000FE9                     FSR0            equ	4073	;# 
   328   000FE9                     FSR0L           equ	4073	;# 
   329   000FEA                     FSR0H           equ	4074	;# 
   330   000FEB                     PLUSW0          equ	4075	;# 
   331   000FEC                     PREINC0         equ	4076	;# 
   332   000FED                     POSTDEC0        equ	4077	;# 
   333   000FEE                     POSTINC0        equ	4078	;# 
   334   000FEF                     INDF0           equ	4079	;# 
   335   000FF0                     INTCON3         equ	4080	;# 
   336   000FF1                     INTCON2         equ	4081	;# 
   337   000FF2                     INTCON          equ	4082	;# 
   338   000FF3                     PROD            equ	4083	;# 
   339   000FF3                     PRODL           equ	4083	;# 
   340   000FF4                     PRODH           equ	4084	;# 
   341   000FF5                     TABLAT          equ	4085	;# 
   342   000FF6                     TBLPTR          equ	4086	;# 
   343   000FF6                     TBLPTRL         equ	4086	;# 
   344   000FF7                     TBLPTRH         equ	4087	;# 
   345   000FF8                     TBLPTRU         equ	4088	;# 
   346   000FF9                     PCLAT           equ	4089	;# 
   347   000FF9                     PC              equ	4089	;# 
   348   000FF9                     PCL             equ	4089	;# 
   349   000FFA                     PCLATH          equ	4090	;# 
   350   000FFB                     PCLATU          equ	4091	;# 
   351   000FFC                     STKPTR          equ	4092	;# 
   352   000FFD                     TOS             equ	4093	;# 
   353   000FFD                     TOSL            equ	4093	;# 
   354   000FFE                     TOSH            equ	4094	;# 
   355   000FFF                     TOSU            equ	4095	;# 
   356   000F38                     ANSELA          equ	3896	;# 
   357   000F39                     ANSELB          equ	3897	;# 
   358   000F3A                     ANSELC          equ	3898	;# 
   359   000F3B                     ANSELD          equ	3899	;# 
   360   000F3C                     ANSELE          equ	3900	;# 
   361   000F3D                     PMD2            equ	3901	;# 
   362   000F3E                     PMD1            equ	3902	;# 
   363   000F3F                     PMD0            equ	3903	;# 
   364   000F40                     VREFCON2        equ	3904	;# 
   365   000F40                     DACCON1         equ	3904	;# 
   366   000F41                     VREFCON1        equ	3905	;# 
   367   000F41                     DACCON0         equ	3905	;# 
   368   000F42                     VREFCON0        equ	3906	;# 
   369   000F42                     FVRCON          equ	3906	;# 
   370   000F43                     CTMUICON        equ	3907	;# 
   371   000F43                     CTMUICONH       equ	3907	;# 
   372   000F44                     CTMUCONL        equ	3908	;# 
   373   000F44                     CTMUCON1        equ	3908	;# 
   374   000F45                     CTMUCONH        equ	3909	;# 
   375   000F45                     CTMUCON0        equ	3909	;# 
   376   000F46                     SRCON1          equ	3910	;# 
   377   000F47                     SRCON0          equ	3911	;# 
   378   000F48                     CCPTMRS1        equ	3912	;# 
   379   000F49                     CCPTMRS0        equ	3913	;# 
   380   000F4A                     T6CON           equ	3914	;# 
   381   000F4B                     PR6             equ	3915	;# 
   382   000F4C                     TMR6            equ	3916	;# 
   383   000F4D                     T5GCON          equ	3917	;# 
   384   000F4E                     T5CON           equ	3918	;# 
   385   000F4F                     TMR5            equ	3919	;# 
   386   000F4F                     TMR5L           equ	3919	;# 
   387   000F50                     TMR5H           equ	3920	;# 
   388   000F51                     T4CON           equ	3921	;# 
   389   000F52                     PR4             equ	3922	;# 
   390   000F53                     TMR4            equ	3923	;# 
   391   000F54                     CCP5CON         equ	3924	;# 
   392   000F55                     CCPR5           equ	3925	;# 
   393   000F55                     CCPR5L          equ	3925	;# 
   394   000F56                     CCPR5H          equ	3926	;# 
   395   000F57                     CCP4CON         equ	3927	;# 
   396   000F58                     CCPR4           equ	3928	;# 
   397   000F58                     CCPR4L          equ	3928	;# 
   398   000F59                     CCPR4H          equ	3929	;# 
   399   000F5A                     PSTR3CON        equ	3930	;# 
   400   000F5B                     ECCP3AS         equ	3931	;# 
   401   000F5B                     CCP3AS          equ	3931	;# 
   402   000F5C                     PWM3CON         equ	3932	;# 
   403   000F5D                     CCP3CON         equ	3933	;# 
   404   000F5E                     CCPR3           equ	3934	;# 
   405   000F5E                     CCPR3L          equ	3934	;# 
   406   000F5F                     CCPR3H          equ	3935	;# 
   407   000F60                     SLRCON          equ	3936	;# 
   408   000F61                     WPUB            equ	3937	;# 
   409   000F62                     IOCB            equ	3938	;# 
   410   000F63                     PSTR2CON        equ	3939	;# 
   411   000F64                     ECCP2AS         equ	3940	;# 
   412   000F64                     CCP2AS          equ	3940	;# 
   413   000F65                     PWM2CON         equ	3941	;# 
   414   000F66                     CCP2CON         equ	3942	;# 
   415   000F67                     CCPR2           equ	3943	;# 
   416   000F67                     CCPR2L          equ	3943	;# 
   417   000F68                     CCPR2H          equ	3944	;# 
   418   000F69                     SSP2CON3        equ	3945	;# 
   419   000F6A                     SSP2MSK         equ	3946	;# 
   420   000F6B                     SSP2CON2        equ	3947	;# 
   421   000F6C                     SSP2CON1        equ	3948	;# 
   422   000F6D                     SSP2STAT        equ	3949	;# 
   423   000F6E                     SSP2ADD         equ	3950	;# 
   424   000F6F                     SSP2BUF         equ	3951	;# 
   425   000F70                     BAUDCON2        equ	3952	;# 
   426   000F70                     BAUD2CON        equ	3952	;# 
   427   000F71                     RCSTA2          equ	3953	;# 
   428   000F71                     RC2STA          equ	3953	;# 
   429   000F72                     TXSTA2          equ	3954	;# 
   430   000F72                     TX2STA          equ	3954	;# 
   431   000F73                     TXREG2          equ	3955	;# 
   432   000F73                     TX2REG          equ	3955	;# 
   433   000F74                     RCREG2          equ	3956	;# 
   434   000F74                     RC2REG          equ	3956	;# 
   435   000F75                     SPBRG2          equ	3957	;# 
   436   000F75                     SP2BRG          equ	3957	;# 
   437   000F76                     SPBRGH2         equ	3958	;# 
   438   000F76                     SP2BRGH         equ	3958	;# 
   439   000F77                     CM2CON1         equ	3959	;# 
   440   000F77                     CM12CON         equ	3959	;# 
   441   000F78                     CM2CON0         equ	3960	;# 
   442   000F78                     CM2CON          equ	3960	;# 
   443   000F79                     CM1CON0         equ	3961	;# 
   444   000F79                     CM1CON          equ	3961	;# 
   445   000F7A                     PIE4            equ	3962	;# 
   446   000F7B                     PIR4            equ	3963	;# 
   447   000F7C                     IPR4            equ	3964	;# 
   448   000F7D                     PIE5            equ	3965	;# 
   449   000F7E                     PIR5            equ	3966	;# 
   450   000F7F                     IPR5            equ	3967	;# 
   451   000F80                     PORTA           equ	3968	;# 
   452   000F81                     PORTB           equ	3969	;# 
   453   000F82                     PORTC           equ	3970	;# 
   454   000F83                     PORTD           equ	3971	;# 
   455   000F84                     PORTE           equ	3972	;# 
   456   000F89                     LATA            equ	3977	;# 
   457   000F8A                     LATB            equ	3978	;# 
   458   000F8B                     LATC            equ	3979	;# 
   459   000F8C                     LATD            equ	3980	;# 
   460   000F8D                     LATE            equ	3981	;# 
   461   000F92                     TRISA           equ	3986	;# 
   462   000F92                     DDRA            equ	3986	;# 
   463   000F93                     TRISB           equ	3987	;# 
   464   000F93                     DDRB            equ	3987	;# 
   465   000F94                     TRISC           equ	3988	;# 
   466   000F94                     DDRC            equ	3988	;# 
   467   000F95                     TRISD           equ	3989	;# 
   468   000F95                     DDRD            equ	3989	;# 
   469   000F96                     TRISE           equ	3990	;# 
   470   000F96                     DDRE            equ	3990	;# 
   471   000F9B                     OSCTUNE         equ	3995	;# 
   472   000F9C                     HLVDCON         equ	3996	;# 
   473   000F9C                     LVDCON          equ	3996	;# 
   474   000F9D                     PIE1            equ	3997	;# 
   475   000F9E                     PIR1            equ	3998	;# 
   476   000F9F                     IPR1            equ	3999	;# 
   477   000FA0                     PIE2            equ	4000	;# 
   478   000FA1                     PIR2            equ	4001	;# 
   479   000FA2                     IPR2            equ	4002	;# 
   480   000FA3                     PIE3            equ	4003	;# 
   481   000FA4                     PIR3            equ	4004	;# 
   482   000FA5                     IPR3            equ	4005	;# 
   483   000FA6                     EECON1          equ	4006	;# 
   484   000FA7                     EECON2          equ	4007	;# 
   485   000FA8                     EEDATA          equ	4008	;# 
   486   000FA9                     EEADR           equ	4009	;# 
   487   000FAA                     EEADRH          equ	4010	;# 
   488   000FAB                     RCSTA1          equ	4011	;# 
   489   000FAB                     RCSTA           equ	4011	;# 
   490   000FAB                     RC1STA          equ	4011	;# 
   491   000FAC                     TXSTA1          equ	4012	;# 
   492   000FAC                     TXSTA           equ	4012	;# 
   493   000FAC                     TX1STA          equ	4012	;# 
   494   000FAD                     TXREG1          equ	4013	;# 
   495   000FAD                     TXREG           equ	4013	;# 
   496   000FAD                     TX1REG          equ	4013	;# 
   497   000FAE                     RCREG1          equ	4014	;# 
   498   000FAE                     RCREG           equ	4014	;# 
   499   000FAE                     RC1REG          equ	4014	;# 
   500   000FAF                     SPBRG1          equ	4015	;# 
   501   000FAF                     SPBRG           equ	4015	;# 
   502   000FAF                     SP1BRG          equ	4015	;# 
   503   000FB0                     SPBRGH1         equ	4016	;# 
   504   000FB0                     SPBRGH          equ	4016	;# 
   505   000FB0                     SP1BRGH         equ	4016	;# 
   506   000FB1                     T3CON           equ	4017	;# 
   507   000FB2                     TMR3            equ	4018	;# 
   508   000FB2                     TMR3L           equ	4018	;# 
   509   000FB3                     TMR3H           equ	4019	;# 
   510   000FB4                     T3GCON          equ	4020	;# 
   511   000FB6                     ECCP1AS         equ	4022	;# 
   512   000FB6                     ECCPAS          equ	4022	;# 
   513   000FB7                     PWM1CON         equ	4023	;# 
   514   000FB7                     PWMCON          equ	4023	;# 
   515   000FB8                     BAUDCON1        equ	4024	;# 
   516   000FB8                     BAUDCON         equ	4024	;# 
   517   000FB8                     BAUDCTL         equ	4024	;# 
   518   000FB8                     BAUD1CON        equ	4024	;# 
   519   000FB9                     PSTR1CON        equ	4025	;# 
   520   000FB9                     PSTRCON         equ	4025	;# 
   521   000FBA                     T2CON           equ	4026	;# 
   522   000FBB                     PR2             equ	4027	;# 
   523   000FBC                     TMR2            equ	4028	;# 
   524   000FBD                     CCP1CON         equ	4029	;# 
   525   000FBE                     CCPR1           equ	4030	;# 
   526   000FBE                     CCPR1L          equ	4030	;# 
   527   000FBF                     CCPR1H          equ	4031	;# 
   528   000FC0                     ADCON2          equ	4032	;# 
   529   000FC1                     ADCON1          equ	4033	;# 
   530   000FC2                     ADCON0          equ	4034	;# 
   531   000FC3                     ADRES           equ	4035	;# 
   532   000FC3                     ADRESL          equ	4035	;# 
   533   000FC4                     ADRESH          equ	4036	;# 
   534   000FC5                     SSP1CON2        equ	4037	;# 
   535   000FC5                     SSPCON2         equ	4037	;# 
   536   000FC6                     SSP1CON1        equ	4038	;# 
   537   000FC6                     SSPCON1         equ	4038	;# 
   538   000FC7                     SSP1STAT        equ	4039	;# 
   539   000FC7                     SSPSTAT         equ	4039	;# 
   540   000FC8                     SSP1ADD         equ	4040	;# 
   541   000FC8                     SSPADD          equ	4040	;# 
   542   000FC9                     SSP1BUF         equ	4041	;# 
   543   000FC9                     SSPBUF          equ	4041	;# 
   544   000FCA                     SSP1MSK         equ	4042	;# 
   545   000FCA                     SSPMSK          equ	4042	;# 
   546   000FCB                     SSP1CON3        equ	4043	;# 
   547   000FCB                     SSPCON3         equ	4043	;# 
   548   000FCC                     T1GCON          equ	4044	;# 
   549   000FCD                     T1CON           equ	4045	;# 
   550   000FCE                     TMR1            equ	4046	;# 
   551   000FCE                     TMR1L           equ	4046	;# 
   552   000FCF                     TMR1H           equ	4047	;# 
   553   000FD0                     RCON            equ	4048	;# 
   554   000FD1                     WDTCON          equ	4049	;# 
   555   000FD2                     OSCCON2         equ	4050	;# 
   556   000FD3                     OSCCON          equ	4051	;# 
   557   000FD5                     T0CON           equ	4053	;# 
   558   000FD6                     TMR0            equ	4054	;# 
   559   000FD6                     TMR0L           equ	4054	;# 
   560   000FD7                     TMR0H           equ	4055	;# 
   561   000FD8                     STATUS          equ	4056	;# 
   562   000FD9                     FSR2            equ	4057	;# 
   563   000FD9                     FSR2L           equ	4057	;# 
   564   000FDA                     FSR2H           equ	4058	;# 
   565   000FDB                     PLUSW2          equ	4059	;# 
   566   000FDC                     PREINC2         equ	4060	;# 
   567   000FDD                     POSTDEC2        equ	4061	;# 
   568   000FDE                     POSTINC2        equ	4062	;# 
   569   000FDF                     INDF2           equ	4063	;# 
   570   000FE0                     BSR             equ	4064	;# 
   571   000FE1                     FSR1            equ	4065	;# 
   572   000FE1                     FSR1L           equ	4065	;# 
   573   000FE2                     FSR1H           equ	4066	;# 
   574   000FE3                     PLUSW1          equ	4067	;# 
   575   000FE4                     PREINC1         equ	4068	;# 
   576   000FE5                     POSTDEC1        equ	4069	;# 
   577   000FE6                     POSTINC1        equ	4070	;# 
   578   000FE7                     INDF1           equ	4071	;# 
   579   000FE8                     WREG            equ	4072	;# 
   580   000FE9                     FSR0            equ	4073	;# 
   581   000FE9                     FSR0L           equ	4073	;# 
   582   000FEA                     FSR0H           equ	4074	;# 
   583   000FEB                     PLUSW0          equ	4075	;# 
   584   000FEC                     PREINC0         equ	4076	;# 
   585   000FED                     POSTDEC0        equ	4077	;# 
   586   000FEE                     POSTINC0        equ	4078	;# 
   587   000FEF                     INDF0           equ	4079	;# 
   588   000FF0                     INTCON3         equ	4080	;# 
   589   000FF1                     INTCON2         equ	4081	;# 
   590   000FF2                     INTCON          equ	4082	;# 
   591   000FF3                     PROD            equ	4083	;# 
   592   000FF3                     PRODL           equ	4083	;# 
   593   000FF4                     PRODH           equ	4084	;# 
   594   000FF5                     TABLAT          equ	4085	;# 
   595   000FF6                     TBLPTR          equ	4086	;# 
   596   000FF6                     TBLPTRL         equ	4086	;# 
   597   000FF7                     TBLPTRH         equ	4087	;# 
   598   000FF8                     TBLPTRU         equ	4088	;# 
   599   000FF9                     PCLAT           equ	4089	;# 
   600   000FF9                     PC              equ	4089	;# 
   601   000FF9                     PCL             equ	4089	;# 
   602   000FFA                     PCLATH          equ	4090	;# 
   603   000FFB                     PCLATU          equ	4091	;# 
   604   000FFC                     STKPTR          equ	4092	;# 
   605   000FFD                     TOS             equ	4093	;# 
   606   000FFD                     TOSL            equ	4093	;# 
   607   000FFE                     TOSH            equ	4094	;# 
   608   000FFF                     TOSU            equ	4095	;# 
   609                           
   610                           	psect	idataCOMRAM
   611   00152E                     __pidataCOMRAM:
   612                           	callstack 0
   613                           
   614                           ;initializer for _LCD_entry_mode
   615   00152E  06                 	db	6
   616                           
   617                           ;initializer for _LCD_display_control
   618   00152F  0C                 	db	12
   619   000F3A                     _ANSELC         set	3898
   620   000F95                     _TRISDbits      set	3989
   621   000F8C                     _LATDbits       set	3980
   622   000FAD                     _TXREG          set	4013
   623   000FAC                     _TXSTAbits      set	4012
   624   000FAE                     _RCREG1         set	4014
   625   000FAB                     _RCSTAbits      set	4011
   626   000F9E                     _PIR1bits       set	3998
   627   000FF2                     _INTCONbits     set	4082
   628   000F9D                     _PIE1bits       set	3997
   629   000FAB                     _RCSTA1bits     set	4011
   630   000FAF                     _SPBRG1         set	4015
   631   000FB0                     _SPBRGH1        set	4016
   632   000FB8                     _BAUDCON1bits   set	4024
   633   000FAC                     _TXSTA1bits     set	4012
   634   000F94                     _TRISCbits      set	3988
   635   000FD3                     _OSCCON         set	4051
   636                           
   637                           	psect	smallconst
   638   001000                     __psmallconst:
   639                           	callstack 0
   640   001000  00                 	db	0
   641   001001                     STR_2:
   642   001001  41                 	db	65	;'A'
   643   001002  54                 	db	84	;'T'
   644   001003  45                 	db	69	;'E'
   645   001004  30                 	db	48	;'0'
   646   001005  0D                 	db	13
   647   001006  00                 	db	0
   648   001007                     STR_3:
   649   001007  41                 	db	65	;'A'
   650   001008  54                 	db	84	;'T'
   651   001009  49                 	db	73	;'I'
   652   00100A  0D                 	db	13
   653   00100B  00                 	db	0
   654   00100C                     STR_1:
   655   00100C  41                 	db	65	;'A'
   656   00100D  54                 	db	84	;'T'
   657   00100E  5A                 	db	90	;'Z'
   658   00100F  0D                 	db	13
   659   001010  00                 	db	0
   660   001011  00                 	db	0	; dummy byte at the end
   661   001000                     __smallconst    set	__psmallconst
   662   001000                     __mediumconst   set	__psmallconst
   663   000001                     __activetblptr  equ	1
   664                           
   665                           ; #config settings
   666                           
   667                           	psect	cinit
   668   00143E                     __pcinit:
   669                           	callstack 0
   670   00143E                     start_initialization:
   671                           	callstack 0
   672   00143E                     __initialization:
   673                           	callstack 0
   674                           
   675                           ; Initialize objects allocated to COMRAM (2 bytes)
   676                           ; load TBLPTR registers with __pidataCOMRAM
   677   00143E  0E2E               	movlw	low __pidataCOMRAM
   678   001440  6EF6               	movwf	tblptrl,c
   679   001442  0E15               	movlw	high __pidataCOMRAM
   680   001444  6EF7               	movwf	tblptrh,c
   681   001446  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   682   001448  6EF8               	movwf	tblptru,c
   683   00144A  0009               	tblrd		*+	;fetch initializer
   684   00144C  CFF5 F02F          	movff	tablat,__pdataCOMRAM
   685   001450  0009               	tblrd		*+	;fetch initializer
   686   001452  CFF5 F030          	movff	tablat,__pdataCOMRAM+1
   687                           
   688                           ; Clear objects allocated to COMRAM (38 bytes)
   689   001456  EE00  F001         	lfsr	0,__pbssCOMRAM
   690   00145A  0E26               	movlw	38
   691   00145C                     clear_0:
   692   00145C  6AEE               	clrf	postinc0,c
   693   00145E  06E8               	decf	wreg,f,c
   694   001460  E1FD               	bnz	clear_0
   695   001462                     end_of_initialization:
   696                           	callstack 0
   697   001462                     __end_of__initialization:
   698                           	callstack 0
   699   001462  0E00               	movlw	low (__Lsmallconst shr (0+16))
   700   001464  6EF8               	movwf	tblptru,c
   701   001466  0E10               	movlw	high __Lsmallconst
   702   001468  6EF7               	movwf	tblptrh,c
   703   00146A  0100               	movlb	0
   704   00146C  EF92  F009         	goto	_main	;jump to C main() function
   705                           
   706                           	psect	bssCOMRAM
   707   000001                     __pbssCOMRAM:
   708                           	callstack 0
   709   000001                     	ds	4
   710   000005                     _RX_char:
   711                           	callstack 0
   712   000005                     	ds	1
   713   000006                     _buffer_count:
   714                           	callstack 0
   715   000006                     	ds	1
   716   000007                     _buffer:
   717                           	callstack 0
   718   000007                     	ds	32
   719                           
   720                           	psect	dataCOMRAM
   721   00002F                     __pdataCOMRAM:
   722                           	callstack 0
   723   00002F                     _LCD_entry_mode:
   724                           	callstack 0
   725   00002F                     	ds	1
   726   000030                     _LCD_display_control:
   727                           	callstack 0
   728   000030                     	ds	1
   729                           
   730                           	psect	cstackCOMRAM
   731   000027                     __pcstackCOMRAM:
   732                           	callstack 0
   733   000027                     UART1_SendChar@c:
   734                           	callstack 0
   735   000027                     ??_LCD_write_command:
   736   000027                     ??_LCD_write_data:
   737                           
   738                           ; 1 bytes @ 0x0
   739   000027                     	ds	1
   740   000028                     UART1_SendString@string:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0x1
   744   000028                     	ds	1
   745   000029                     LCD_write_command@command:
   746                           	callstack 0
   747   000029                     LCD_write_data@data:
   748                           	callstack 0
   749   000029                     ??_UART1_SendString:
   750                           
   751                           ; 1 bytes @ 0x2
   752   000029                     	ds	1
   753   00002A                     LCD_cursor_set@column:
   754                           	callstack 0
   755   00002A                     LCD_write_string@string:
   756                           	callstack 0
   757   00002A                     UART1_SendString@i:
   758                           	callstack 0
   759   00002A                     ??_LCD_clear:
   760                           
   761                           ; 1 bytes @ 0x3
   762   00002A                     	ds	1
   763   00002B                     LCD_cursor_set@row:
   764                           	callstack 0
   765   00002B                     LCD_write_string@i:
   766                           	callstack 0
   767   00002B                     ??_LCD_init:
   768   00002B                     
   769                           ; 1 bytes @ 0x4
   770   00002B                     	ds	1
   771   00002C                     
   772                           ; 1 bytes @ 0x5
   773   00002C                     	ds	1
   774   00002D                     ??_main:
   775                           
   776                           ; 1 bytes @ 0x6
   777   00002D                     	ds	2
   778                           
   779 ;;
   780 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   781 ;;
   782 ;; *************** function _main *****************
   783 ;; Defined at:
   784 ;;		line 21 in file "OBCII_PIC18F46K22.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;Total ram usage:        2 bytes
   803 ;; Hardware stack levels required when called: 4
   804 ;; This function calls:
   805 ;;		_LCD_clear
   806 ;;		_LCD_init
   807 ;;		_UART1_Init
   808 ;;		_UART1_Save_Buffer
   809 ;;		_UART1_SendString
   810 ;; This function is called by:
   811 ;;		Startup code after reset
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text0
   816   001324                     __ptext0:
   817                           	callstack 0
   818   001324                     _main:
   819                           	callstack 27
   820   001324                     
   821                           ;OBCII_PIC18F46K22.c: 23:     OSCCON = 0b01110000;
   822   001324  0E70               	movlw	112
   823   001326  6ED3               	movwf	211,c	;volatile
   824   001328                     
   825                           ;OBCII_PIC18F46K22.c: 26:     LCD_init();
   826   001328  EC54  F009         	call	_LCD_init	;wreg free
   827   00132C                     
   828                           ;OBCII_PIC18F46K22.c: 27:     LCD_clear();
   829   00132C  EC78  F00A         	call	_LCD_clear	;wreg free
   830   001330                     
   831                           ;OBCII_PIC18F46K22.c: 28:     UART1_Init();
   832   001330  EC50  F00A         	call	_UART1_Init	;wreg free
   833   001334                     
   834                           ;OBCII_PIC18F46K22.c: 30:     _delay((unsigned long)((2000)*(16000000/4000.0)));
   835   001334  0E29               	movlw	41
   836   001336  6E2E               	movwf	(??_main+1)^0,c
   837   001338  0E96               	movlw	150
   838   00133A  6E2D               	movwf	??_main^0,c
   839   00133C  0E7F               	movlw	127
   840   00133E                     u497:
   841   00133E  2EE8               	decfsz	wreg,f,c
   842   001340  D7FE               	bra	u497
   843   001342  2E2D               	decfsz	??_main^0,f,c
   844   001344  D7FC               	bra	u497
   845   001346  2E2E               	decfsz	(??_main+1)^0,f,c
   846   001348  D7FA               	bra	u497
   847   00134A  0000               	nop	
   848   00134C                     
   849                           ;OBCII_PIC18F46K22.c: 31:     UART1_SendString("ATZ\r");
   850   00134C  0E0C               	movlw	low STR_1
   851   00134E  6E28               	movwf	UART1_SendString@string^0,c
   852   001350  ECFE  F009         	call	_UART1_SendString	;wreg free
   853   001354                     
   854                           ;OBCII_PIC18F46K22.c: 32:     _delay((unsigned long)((500)*(16000000/4000.0)));
   855   001354  0E0B               	movlw	11
   856   001356  6E2E               	movwf	(??_main+1)^0,c
   857   001358  0E26               	movlw	38
   858   00135A  6E2D               	movwf	??_main^0,c
   859   00135C  0E5E               	movlw	94
   860   00135E                     u507:
   861   00135E  2EE8               	decfsz	wreg,f,c
   862   001360  D7FE               	bra	u507
   863   001362  2E2D               	decfsz	??_main^0,f,c
   864   001364  D7FC               	bra	u507
   865   001366  2E2E               	decfsz	(??_main+1)^0,f,c
   866   001368  D7FA               	bra	u507
   867   00136A                     
   868                           ;OBCII_PIC18F46K22.c: 33:     UART1_SendString("ATE0\r");
   869   00136A  0E01               	movlw	low STR_2
   870   00136C  6E28               	movwf	UART1_SendString@string^0,c
   871   00136E  ECFE  F009         	call	_UART1_SendString	;wreg free
   872   001372                     
   873                           ;OBCII_PIC18F46K22.c: 34:     _delay((unsigned long)((500)*(16000000/4000.0)));
   874   001372  0E0B               	movlw	11
   875   001374  6E2E               	movwf	(??_main+1)^0,c
   876   001376  0E26               	movlw	38
   877   001378  6E2D               	movwf	??_main^0,c
   878   00137A  0E5E               	movlw	94
   879   00137C                     u517:
   880   00137C  2EE8               	decfsz	wreg,f,c
   881   00137E  D7FE               	bra	u517
   882   001380  2E2D               	decfsz	??_main^0,f,c
   883   001382  D7FC               	bra	u517
   884   001384  2E2E               	decfsz	(??_main+1)^0,f,c
   885   001386  D7FA               	bra	u517
   886   001388                     
   887                           ;OBCII_PIC18F46K22.c: 35:     UART1_SendString("ATI\r");
   888   001388  0E07               	movlw	low STR_3
   889   00138A  6E28               	movwf	UART1_SendString@string^0,c
   890   00138C  ECFE  F009         	call	_UART1_SendString	;wreg free
   891   001390                     l1297:
   892                           
   893                           ;OBCII_PIC18F46K22.c: 38:         UART1_Save_Buffer();
   894   001390  EC05  F009         	call	_UART1_Save_Buffer	;wreg free
   895   001394  EFC8  F009         	goto	l1297
   896   001398  EFFE  F07F         	goto	start
   897   00139C                     __end_of_main:
   898                           	callstack 0
   899                           
   900 ;; *************** function _UART1_SendString *****************
   901 ;; Defined at:
   902 ;;		line 115 in file "OBCII_PIC18F46K22.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  string          1    1[COMRAM] PTR unsigned char 
   905 ;;		 -> STR_3(5), STR_2(6), STR_1(5), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  i               2    3[COMRAM] unsigned int 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   917 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;Total ram usage:        4 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 1
   924 ;; This function calls:
   925 ;;		_UART1_SendChar
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text1
   932   0013FC                     __ptext1:
   933                           	callstack 0
   934   0013FC                     _UART1_SendString:
   935                           	callstack 29
   936   0013FC                     
   937                           ;OBCII_PIC18F46K22.c: 116:     for (unsigned int i = 0; string[i] != '\0'; i++){
   938   0013FC  0E00               	movlw	0
   939   0013FE  6E2B               	movwf	(UART1_SendString@i+1)^0,c
   940   001400  0E00               	movlw	0
   941   001402  6E2A               	movwf	UART1_SendString@i^0,c
   942   001404  EF0F  F00A         	goto	l1245
   943   001408                     l1241:
   944                           
   945                           ;OBCII_PIC18F46K22.c: 117:         UART1_SendChar(string[i]);
   946   001408  5028               	movf	UART1_SendString@string^0,w,c
   947   00140A  242A               	addwf	UART1_SendString@i^0,w,c
   948   00140C  6E29               	movwf	??_UART1_SendString^0,c
   949   00140E  C029  FFF6         	movff	??_UART1_SendString,tblptrl
   950   001412                     	if	0	;There is only one active tblptr byte
   951   001412                     	endif
   952   001412                     	if	0	;tblptru may be non-zero
   953   001412                     	endif
   954   001412                     	if	0	;tblptru may be non-zero
   955   001412                     	endif
   956   001412  0008               	tblrd		*
   957   001414  50F5               	movf	tablat,w,c
   958   001416  EC86  F00A         	call	_UART1_SendChar
   959   00141A                     
   960                           ;OBCII_PIC18F46K22.c: 118:     }
   961   00141A  4A2A               	infsnz	UART1_SendString@i^0,f,c
   962   00141C  2A2B               	incf	(UART1_SendString@i+1)^0,f,c
   963   00141E                     l1245:
   964   00141E  5028               	movf	UART1_SendString@string^0,w,c
   965   001420  242A               	addwf	UART1_SendString@i^0,w,c
   966   001422  6E29               	movwf	??_UART1_SendString^0,c
   967   001424  C029  FFF6         	movff	??_UART1_SendString,tblptrl
   968   001428                     	if	0	;There is only one active tblptr byte
   969   001428                     	endif
   970   001428                     	if	0	;tblptru may be non-zero
   971   001428                     	endif
   972   001428                     	if	0	;tblptru may be non-zero
   973   001428                     	endif
   974   001428  0008               	tblrd		*
   975   00142A  50F5               	movf	tablat,w,c
   976   00142C  0900               	iorlw	0
   977   00142E  A4D8               	btfss	status,2,c
   978   001430  EF1C  F00A         	goto	u411
   979   001434  EF1E  F00A         	goto	u410
   980   001438                     u411:
   981   001438  EF04  F00A         	goto	l1241
   982   00143C                     u410:
   983   00143C  0012               	return		;funcret
   984   00143E                     __end_of_UART1_SendString:
   985                           	callstack 0
   986                           
   987 ;; *************** function _UART1_SendChar *****************
   988 ;; Defined at:
   989 ;;		line 121 in file "OBCII_PIC18F46K22.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  c               1    wreg     unsigned char 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  c               1    0[COMRAM] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;Total ram usage:        1 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_UART1_SendString
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text2
  1017   00150C                     __ptext2:
  1018                           	callstack 0
  1019   00150C                     _UART1_SendChar:
  1020                           	callstack 29
  1021                           
  1022                           ;incstack = 0
  1023                           ;UART1_SendChar@c stored from wreg
  1024   00150C  6E27               	movwf	UART1_SendChar@c^0,c
  1025   00150E                     l91:
  1026   00150E  A2AC               	btfss	172,1,c	;volatile
  1027   001510  EF8C  F00A         	goto	u141
  1028   001514  EF8E  F00A         	goto	u140
  1029   001518                     u141:
  1030   001518  EF87  F00A         	goto	l91
  1031   00151C                     u140:
  1032   00151C                     
  1033                           ;OBCII_PIC18F46K22.c: 123:         TXREG = c;
  1034   00151C  C027  FFAD         	movff	UART1_SendChar@c,4013	;volatile
  1035   001520  0012               	return		;funcret
  1036   001522                     __end_of_UART1_SendChar:
  1037                           	callstack 0
  1038                           
  1039 ;; *************** function _UART1_Save_Buffer *****************
  1040 ;; Defined at:
  1041 ;;		line 93 in file "OBCII_PIC18F46K22.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 3
  1062 ;; This function calls:
  1063 ;;		_LCD_clear
  1064 ;;		_LCD_cursor_set
  1065 ;;		_LCD_write_string
  1066 ;;		_UART1_Read
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text3
  1073   00120A                     __ptext3:
  1074                           	callstack 0
  1075   00120A                     _UART1_Save_Buffer:
  1076                           	callstack 27
  1077   00120A                     
  1078                           ;OBCII_PIC18F46K22.c: 94:     while (PIR1bits.RC1IF) {
  1079   00120A  EF4C  F009         	goto	l1275
  1080   00120E                     l1249:
  1081                           
  1082                           ;OBCII_PIC18F46K22.c: 96:         RX_char = UART1_Read();
  1083   00120E  EC66  F00A         	call	_UART1_Read	;wreg free
  1084   001212  6E05               	movwf	_RX_char^0,c
  1085   001214                     
  1086                           ;OBCII_PIC18F46K22.c: 98:         if (RX_char >= 32 && RX_char <= 126) {
  1087   001214  0E1F               	movlw	31
  1088   001216  6405               	cpfsgt	_RX_char^0,c
  1089   001218  EF10  F009         	goto	u421
  1090   00121C  EF12  F009         	goto	u420
  1091   001220                     u421:
  1092   001220  EF21  F009         	goto	l1259
  1093   001224                     u420:
  1094   001224  0E7F               	movlw	127
  1095   001226  6005               	cpfslt	_RX_char^0,c
  1096   001228  EF18  F009         	goto	u431
  1097   00122C  EF1A  F009         	goto	u430
  1098   001230                     u431:
  1099   001230  EF21  F009         	goto	l1259
  1100   001234                     u430:
  1101   001234                     
  1102                           ;OBCII_PIC18F46K22.c: 99:             buffer[buffer_count++] = RX_char;
  1103   001234  5006               	movf	_buffer_count^0,w,c
  1104   001236  0F07               	addlw	low _buffer
  1105   001238  6ED9               	movwf	fsr2l,c
  1106   00123A  6ADA               	clrf	fsr2h,c
  1107   00123C  C005  FFDF         	movff	_RX_char,indf2
  1108   001240  2A06               	incf	_buffer_count^0,f,c
  1109   001242                     l1259:
  1110                           
  1111                           ;OBCII_PIC18F46K22.c: 104:         if (RX_char == '>' || RX_char == '\n' || buffer_count
      +                           >= 32 -1) {
  1112   001242  0E3E               	movlw	62
  1113   001244  1805               	xorwf	_RX_char^0,w,c
  1114   001246  B4D8               	btfsc	status,2,c
  1115   001248  EF28  F009         	goto	u441
  1116   00124C  EF2A  F009         	goto	u440
  1117   001250                     u441:
  1118   001250  EF3B  F009         	goto	l1265
  1119   001254                     u440:
  1120   001254  0E0A               	movlw	10
  1121   001256  1805               	xorwf	_RX_char^0,w,c
  1122   001258  B4D8               	btfsc	status,2,c
  1123   00125A  EF31  F009         	goto	u451
  1124   00125E  EF33  F009         	goto	u450
  1125   001262                     u451:
  1126   001262  EF3B  F009         	goto	l1265
  1127   001266                     u450:
  1128   001266  0E1E               	movlw	30
  1129   001268  6406               	cpfsgt	_buffer_count^0,c
  1130   00126A  EF39  F009         	goto	u461
  1131   00126E  EF3B  F009         	goto	u460
  1132   001272                     u461:
  1133   001272  EF4C  F009         	goto	l1275
  1134   001276                     u460:
  1135   001276                     l1265:
  1136                           
  1137                           ;OBCII_PIC18F46K22.c: 105:             buffer[buffer_count] = '\0';
  1138   001276  5006               	movf	_buffer_count^0,w,c
  1139   001278  0F07               	addlw	low _buffer
  1140   00127A  6ED9               	movwf	fsr2l,c
  1141   00127C  6ADA               	clrf	fsr2h,c
  1142   00127E  6ADF               	clrf	indf2,c
  1143   001280                     
  1144                           ;OBCII_PIC18F46K22.c: 106:             buffer_count = 0;
  1145   001280  6A06               	clrf	_buffer_count^0,c
  1146   001282                     
  1147                           ;OBCII_PIC18F46K22.c: 108:             LCD_clear();
  1148   001282  EC78  F00A         	call	_LCD_clear	;wreg free
  1149   001286                     
  1150                           ;OBCII_PIC18F46K22.c: 109:             LCD_cursor_set(1,1);
  1151   001286  0E01               	movlw	1
  1152   001288  6E2A               	movwf	LCD_cursor_set@column^0,c
  1153   00128A  0E01               	movlw	1
  1154   00128C  ECCE  F009         	call	_LCD_cursor_set
  1155   001290                     
  1156                           ;OBCII_PIC18F46K22.c: 110:             LCD_write_string(buffer);
  1157   001290  0E07               	movlw	low _buffer
  1158   001292  6E2A               	movwf	LCD_write_string@string^0,c
  1159   001294  EC38  F00A         	call	_LCD_write_string	;wreg free
  1160   001298                     l1275:
  1161                           
  1162                           ;OBCII_PIC18F46K22.c: 94:     while (PIR1bits.RC1IF) {
  1163   001298  BA9E               	btfsc	158,5,c	;volatile
  1164   00129A  EF51  F009         	goto	u471
  1165   00129E  EF53  F009         	goto	u470
  1166   0012A2                     u471:
  1167   0012A2  EF07  F009         	goto	l1249
  1168   0012A6                     u470:
  1169   0012A6  0012               	return		;funcret
  1170   0012A8                     __end_of_UART1_Save_Buffer:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _UART1_Read *****************
  1174 ;; Defined at:
  1175 ;;		line 80 in file "OBCII_PIC18F46K22.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      unsigned char 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_UART1_Save_Buffer
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text4
  1203   0014CC                     __ptext4:
  1204                           	callstack 0
  1205   0014CC                     _UART1_Read:
  1206                           	callstack 29
  1207   0014CC                     l68:
  1208   0014CC  AA9E               	btfss	158,5,c	;volatile
  1209   0014CE  EF6B  F00A         	goto	u71
  1210   0014D2  EF6D  F00A         	goto	u70
  1211   0014D6                     u71:
  1212   0014D6  EF66  F00A         	goto	l68
  1213   0014DA                     u70:
  1214   0014DA                     
  1215                           ;OBCII_PIC18F46K22.c: 86:     if (RCSTAbits.OERR) {
  1216   0014DA  A2AB               	btfss	171,1,c	;volatile
  1217   0014DC  EF72  F00A         	goto	u81
  1218   0014E0  EF74  F00A         	goto	u80
  1219   0014E4                     u81:
  1220   0014E4  EF76  F00A         	goto	l945
  1221   0014E8                     u80:
  1222   0014E8                     
  1223                           ;OBCII_PIC18F46K22.c: 87:         RCSTAbits.CREN = 0;
  1224   0014E8  98AB               	bcf	171,4,c	;volatile
  1225                           
  1226                           ;OBCII_PIC18F46K22.c: 88:         RCSTAbits.CREN = 1;
  1227   0014EA  88AB               	bsf	171,4,c	;volatile
  1228   0014EC                     l945:
  1229                           
  1230                           ;OBCII_PIC18F46K22.c: 90:     return RCREG1;
  1231   0014EC  50AE               	movf	174,w,c	;volatile
  1232   0014EE  0012               	return		;funcret
  1233   0014F0                     __end_of_UART1_Read:
  1234                           	callstack 0
  1235                           
  1236 ;; *************** function _LCD_write_string *****************
  1237 ;; Defined at:
  1238 ;;		line 362 in file "LCD.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  string          1    3[COMRAM] PTR unsigned char 
  1241 ;;		 -> buffer(32), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  i               1    4[COMRAM] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:        2 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 2
  1260 ;; This function calls:
  1261 ;;		_LCD_write_data
  1262 ;; This function is called by:
  1263 ;;		_UART1_Save_Buffer
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text5
  1268   001470                     __ptext5:
  1269                           	callstack 0
  1270   001470                     _LCD_write_string:
  1271                           	callstack 27
  1272   001470                     
  1273                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  1274   001470  6A2B               	clrf	LCD_write_string@i^0,c
  1275   001472  EF43  F00A         	goto	l1237
  1276   001476                     l1233:
  1277                           
  1278                           ;LCD.c: 366:         LCD_write_data(string[i]);
  1279   001476  502A               	movf	LCD_write_string@string^0,w,c
  1280   001478  242B               	addwf	LCD_write_string@i^0,w,c
  1281   00147A  6ED9               	movwf	fsr2l,c
  1282   00147C  6ADA               	clrf	fsr2h,c
  1283   00147E  50DF               	movf	indf2,w,c
  1284   001480  EC09  F008         	call	_LCD_write_data
  1285   001484                     
  1286                           ;LCD.c: 367:     }
  1287   001484  2A2B               	incf	LCD_write_string@i^0,f,c
  1288   001486                     l1237:
  1289   001486  502A               	movf	LCD_write_string@string^0,w,c
  1290   001488  242B               	addwf	LCD_write_string@i^0,w,c
  1291   00148A  6ED9               	movwf	fsr2l,c
  1292   00148C  6ADA               	clrf	fsr2h,c
  1293   00148E  50DF               	movf	indf2,w,c
  1294   001490  A4D8               	btfss	status,2,c
  1295   001492  EF4D  F00A         	goto	u401
  1296   001496  EF4F  F00A         	goto	u400
  1297   00149A                     u401:
  1298   00149A  EF3B  F00A         	goto	l1233
  1299   00149E                     u400:
  1300   00149E  0012               	return		;funcret
  1301   0014A0                     __end_of_LCD_write_string:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _LCD_write_data *****************
  1305 ;; Defined at:
  1306 ;;		line 74 in file "LCD.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  data            1    wreg     unsigned char 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  data            1    2[COMRAM] unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        3 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 1
  1327 ;; This function calls:
  1328 ;;		_LCD_pulse_clock
  1329 ;; This function is called by:
  1330 ;;		_LCD_write_string
  1331 ;;		_LCD_add_character
  1332 ;;		_LCD_write_char
  1333 ;;		_LCD_write_variable
  1334 ;;		_LCD_write_float
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text6
  1339   001012                     __ptext6:
  1340                           	callstack 0
  1341   001012                     _LCD_write_data:
  1342                           	callstack 27
  1343                           
  1344                           ;incstack = 0
  1345                           ;LCD_write_data@data stored from wreg
  1346   001012  6E29               	movwf	LCD_write_data@data^0,c
  1347   001014                     
  1348                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
  1349   001014  848C               	bsf	140,2,c	;volatile
  1350   001016                     
  1351                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
  1352   001016  6A27               	clrf	??_LCD_write_data^0,c
  1353   001018  AE29               	btfss	LCD_write_data@data^0,7,c
  1354   00101A  D001               	bra	u45
  1355   00101C  2A27               	incf	??_LCD_write_data^0,f,c
  1356   00101E                     u45:
  1357   00101E  0E01               	movlw	1
  1358   001020  1627               	andwf	??_LCD_write_data^0,f,c
  1359   001022  3227               	rrcf	??_LCD_write_data^0,f,c
  1360   001024  3227               	rrcf	??_LCD_write_data^0,f,c
  1361   001026  508C               	movf	140,w,c	;volatile
  1362   001028  1827               	xorwf	??_LCD_write_data^0,w,c
  1363   00102A  0B7F               	andlw	-129
  1364   00102C  1827               	xorwf	??_LCD_write_data^0,w,c
  1365   00102E  6E8C               	movwf	140,c	;volatile
  1366                           
  1367                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
  1368   001030  C029  F027         	movff	LCD_write_data@data,??_LCD_write_data
  1369   001034  0E06               	movlw	6
  1370   001036  6E28               	movwf	(??_LCD_write_data+1)^0,c
  1371   001038                     u55:
  1372   001038  90D8               	bcf	status,0,c
  1373   00103A  3227               	rrcf	??_LCD_write_data^0,f,c
  1374   00103C  2E28               	decfsz	(??_LCD_write_data+1)^0,f,c
  1375   00103E  EF1C  F008         	goto	u55
  1376   001042  0E01               	movlw	1
  1377   001044  1627               	andwf	??_LCD_write_data^0,f,c
  1378   001046  3A27               	swapf	??_LCD_write_data^0,f,c
  1379   001048  4627               	rlncf	??_LCD_write_data^0,f,c
  1380   00104A  4627               	rlncf	??_LCD_write_data^0,f,c
  1381   00104C  508C               	movf	140,w,c	;volatile
  1382   00104E  1827               	xorwf	??_LCD_write_data^0,w,c
  1383   001050  0BBF               	andlw	-65
  1384   001052  1827               	xorwf	??_LCD_write_data^0,w,c
  1385   001054  6E8C               	movwf	140,c	;volatile
  1386                           
  1387                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
  1388   001056  C029  F027         	movff	LCD_write_data@data,??_LCD_write_data
  1389   00105A  0E05               	movlw	5
  1390   00105C  6E28               	movwf	(??_LCD_write_data+1)^0,c
  1391   00105E                     u65:
  1392   00105E  90D8               	bcf	status,0,c
  1393   001060  3227               	rrcf	??_LCD_write_data^0,f,c
  1394   001062  2E28               	decfsz	(??_LCD_write_data+1)^0,f,c
  1395   001064  EF2F  F008         	goto	u65
  1396   001068  0E01               	movlw	1
  1397   00106A  1627               	andwf	??_LCD_write_data^0,f,c
  1398   00106C  3A27               	swapf	??_LCD_write_data^0,f,c
  1399   00106E  4627               	rlncf	??_LCD_write_data^0,f,c
  1400   001070  508C               	movf	140,w,c	;volatile
  1401   001072  1827               	xorwf	??_LCD_write_data^0,w,c
  1402   001074  0BDF               	andlw	-33
  1403   001076  1827               	xorwf	??_LCD_write_data^0,w,c
  1404   001078  6E8C               	movwf	140,c	;volatile
  1405                           
  1406                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
  1407   00107A  C029  F027         	movff	LCD_write_data@data,??_LCD_write_data
  1408   00107E  3A27               	swapf	??_LCD_write_data^0,f,c
  1409   001080  0E0F               	movlw	15
  1410   001082  1627               	andwf	??_LCD_write_data^0,f,c
  1411   001084  0E01               	movlw	1
  1412   001086  1627               	andwf	??_LCD_write_data^0,f,c
  1413   001088  3A27               	swapf	??_LCD_write_data^0,f,c
  1414   00108A  508C               	movf	140,w,c	;volatile
  1415   00108C  1827               	xorwf	??_LCD_write_data^0,w,c
  1416   00108E  0BEF               	andlw	-17
  1417   001090  1827               	xorwf	??_LCD_write_data^0,w,c
  1418   001092  6E8C               	movwf	140,c	;volatile
  1419   001094                     
  1420                           ;LCD.c: 85:     LCD_pulse_clock();
  1421   001094  EC91  F00A         	call	_LCD_pulse_clock	;wreg free
  1422   001098                     
  1423                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
  1424   001098  C029  F027         	movff	LCD_write_data@data,??_LCD_write_data
  1425   00109C  90D8               	bcf	status,0,c
  1426   00109E  3227               	rrcf	??_LCD_write_data^0,f,c
  1427   0010A0  90D8               	bcf	status,0,c
  1428   0010A2  3227               	rrcf	??_LCD_write_data^0,f,c
  1429   0010A4  90D8               	bcf	status,0,c
  1430   0010A6  3227               	rrcf	??_LCD_write_data^0,f,c
  1431   0010A8  0E01               	movlw	1
  1432   0010AA  1627               	andwf	??_LCD_write_data^0,f,c
  1433   0010AC  3227               	rrcf	??_LCD_write_data^0,f,c
  1434   0010AE  3227               	rrcf	??_LCD_write_data^0,f,c
  1435   0010B0  508C               	movf	140,w,c	;volatile
  1436   0010B2  1827               	xorwf	??_LCD_write_data^0,w,c
  1437   0010B4  0B7F               	andlw	-129
  1438   0010B6  1827               	xorwf	??_LCD_write_data^0,w,c
  1439   0010B8  6E8C               	movwf	140,c	;volatile
  1440   0010BA                     
  1441                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
  1442   0010BA  C029  F027         	movff	LCD_write_data@data,??_LCD_write_data
  1443   0010BE  90D8               	bcf	status,0,c
  1444   0010C0  3227               	rrcf	??_LCD_write_data^0,f,c
  1445   0010C2  90D8               	bcf	status,0,c
  1446   0010C4  3227               	rrcf	??_LCD_write_data^0,f,c
  1447   0010C6  0E01               	movlw	1
  1448   0010C8  1627               	andwf	??_LCD_write_data^0,f,c
  1449   0010CA  3A27               	swapf	??_LCD_write_data^0,f,c
  1450   0010CC  4627               	rlncf	??_LCD_write_data^0,f,c
  1451   0010CE  4627               	rlncf	??_LCD_write_data^0,f,c
  1452   0010D0  508C               	movf	140,w,c	;volatile
  1453   0010D2  1827               	xorwf	??_LCD_write_data^0,w,c
  1454   0010D4  0BBF               	andlw	-65
  1455   0010D6  1827               	xorwf	??_LCD_write_data^0,w,c
  1456   0010D8  6E8C               	movwf	140,c	;volatile
  1457   0010DA                     
  1458                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
  1459   0010DA  C029  F027         	movff	LCD_write_data@data,??_LCD_write_data
  1460   0010DE  90D8               	bcf	status,0,c
  1461   0010E0  3227               	rrcf	??_LCD_write_data^0,f,c
  1462   0010E2  0E01               	movlw	1
  1463   0010E4  1627               	andwf	??_LCD_write_data^0,f,c
  1464   0010E6  3A27               	swapf	??_LCD_write_data^0,f,c
  1465   0010E8  4627               	rlncf	??_LCD_write_data^0,f,c
  1466   0010EA  508C               	movf	140,w,c	;volatile
  1467   0010EC  1827               	xorwf	??_LCD_write_data^0,w,c
  1468   0010EE  0BDF               	andlw	-33
  1469   0010F0  1827               	xorwf	??_LCD_write_data^0,w,c
  1470   0010F2  6E8C               	movwf	140,c	;volatile
  1471   0010F4                     
  1472                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
  1473   0010F4  C029  F027         	movff	LCD_write_data@data,??_LCD_write_data
  1474   0010F8  0E01               	movlw	1
  1475   0010FA  1627               	andwf	??_LCD_write_data^0,f,c
  1476   0010FC  3A27               	swapf	??_LCD_write_data^0,f,c
  1477   0010FE  508C               	movf	140,w,c	;volatile
  1478   001100  1827               	xorwf	??_LCD_write_data^0,w,c
  1479   001102  0BEF               	andlw	-17
  1480   001104  1827               	xorwf	??_LCD_write_data^0,w,c
  1481   001106  6E8C               	movwf	140,c	;volatile
  1482   001108                     
  1483                           ;LCD.c: 94:     LCD_pulse_clock();
  1484   001108  EC91  F00A         	call	_LCD_pulse_clock	;wreg free
  1485   00110C  0012               	return		;funcret
  1486   00110E                     __end_of_LCD_write_data:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _LCD_cursor_set *****************
  1490 ;; Defined at:
  1491 ;;		line 159 in file "LCD.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  row             1    wreg     unsigned char 
  1494 ;;  column          1    3[COMRAM] unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  row             1    4[COMRAM] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;Total ram usage:        2 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 2
  1513 ;; This function calls:
  1514 ;;		_LCD_write_command
  1515 ;; This function is called by:
  1516 ;;		_UART1_Save_Buffer
  1517 ;;		_LCD_add_character
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text7
  1522   00139C                     __ptext7:
  1523                           	callstack 0
  1524   00139C                     _LCD_cursor_set:
  1525                           	callstack 27
  1526                           
  1527                           ;incstack = 0
  1528                           ;LCD_cursor_set@row stored from wreg
  1529   00139C  6E2B               	movwf	LCD_cursor_set@row^0,c
  1530   00139E                     
  1531                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
  1532   00139E  042B               	decf	LCD_cursor_set@row^0,w,c
  1533   0013A0  A4D8               	btfss	status,2,c
  1534   0013A2  EFD5  F009         	goto	u361
  1535   0013A6  EFD7  F009         	goto	u360
  1536   0013AA                     u361:
  1537   0013AA  EFD9  F009         	goto	l123
  1538   0013AE                     u360:
  1539   0013AE  0E7F               	movlw	127
  1540   0013B0  262A               	addwf	LCD_cursor_set@column^0,f,c
  1541   0013B2                     l123:
  1542                           
  1543                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
  1544   0013B2  0E02               	movlw	2
  1545   0013B4  182B               	xorwf	LCD_cursor_set@row^0,w,c
  1546   0013B6  A4D8               	btfss	status,2,c
  1547   0013B8  EFE0  F009         	goto	u371
  1548   0013BC  EFE2  F009         	goto	u370
  1549   0013C0                     u371:
  1550   0013C0  EFE4  F009         	goto	l124
  1551   0013C4                     u370:
  1552   0013C4  0EBF               	movlw	191
  1553   0013C6  262A               	addwf	LCD_cursor_set@column^0,f,c
  1554   0013C8                     l124:
  1555                           
  1556                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
  1557   0013C8  0E03               	movlw	3
  1558   0013CA  182B               	xorwf	LCD_cursor_set@row^0,w,c
  1559   0013CC  A4D8               	btfss	status,2,c
  1560   0013CE  EFEB  F009         	goto	u381
  1561   0013D2  EFED  F009         	goto	u380
  1562   0013D6                     u381:
  1563   0013D6  EFEF  F009         	goto	l125
  1564   0013DA                     u380:
  1565   0013DA  0E93               	movlw	147
  1566   0013DC  262A               	addwf	LCD_cursor_set@column^0,f,c
  1567   0013DE                     l125:
  1568                           
  1569                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
  1570   0013DE  0E04               	movlw	4
  1571   0013E0  182B               	xorwf	LCD_cursor_set@row^0,w,c
  1572   0013E2  A4D8               	btfss	status,2,c
  1573   0013E4  EFF6  F009         	goto	u391
  1574   0013E8  EFF8  F009         	goto	u390
  1575   0013EC                     u391:
  1576   0013EC  EFFA  F009         	goto	l1229
  1577   0013F0                     u390:
  1578   0013F0  0ED3               	movlw	211
  1579   0013F2  262A               	addwf	LCD_cursor_set@column^0,f,c
  1580   0013F4                     l1229:
  1581                           
  1582                           ;LCD.c: 168:    LCD_write_command(column);
  1583   0013F4  502A               	movf	LCD_cursor_set@column^0,w,c
  1584   0013F6  EC87  F008         	call	_LCD_write_command
  1585   0013FA  0012               	return		;funcret
  1586   0013FC                     __end_of_LCD_cursor_set:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _UART1_Init *****************
  1590 ;; Defined at:
  1591 ;;		line 45 in file "OBCII_PIC18F46K22.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;Total ram usage:        0 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text8
  1619   0014A0                     __ptext8:
  1620                           	callstack 0
  1621   0014A0                     _UART1_Init:
  1622                           	callstack 30
  1623   0014A0                     
  1624                           ;OBCII_PIC18F46K22.c: 46:     ANSELC = 0;
  1625   0014A0  010F               	movlb	15	; () banked
  1626   0014A2  6B3A               	clrf	58,b	;volatile
  1627                           
  1628                           ;OBCII_PIC18F46K22.c: 49:     TRISCbits.TRISC6 = 0;
  1629   0014A4  9C94               	bcf	148,6,c	;volatile
  1630                           
  1631                           ;OBCII_PIC18F46K22.c: 50:     TRISCbits.TRISC7 = 1;
  1632   0014A6  8E94               	bsf	148,7,c	;volatile
  1633                           
  1634                           ;OBCII_PIC18F46K22.c: 54:     TXSTA1bits.TXEN = 1;
  1635   0014A8  8AAC               	bsf	172,5,c	;volatile
  1636                           
  1637                           ;OBCII_PIC18F46K22.c: 55:     TXSTA1bits.TX9 = 0;
  1638   0014AA  9CAC               	bcf	172,6,c	;volatile
  1639                           
  1640                           ;OBCII_PIC18F46K22.c: 56:     TXSTA1bits.SYNC = 0;
  1641   0014AC  98AC               	bcf	172,4,c	;volatile
  1642                           
  1643                           ;OBCII_PIC18F46K22.c: 58:     TXSTA1bits.BRGH = 1;
  1644   0014AE  84AC               	bsf	172,2,c	;volatile
  1645                           
  1646                           ;OBCII_PIC18F46K22.c: 59:     BAUDCON1bits.BRG16 = 1;
  1647   0014B0  86B8               	bsf	184,3,c	;volatile
  1648   0014B2                     
  1649                           ; BSR set to: 15
  1650                           ;OBCII_PIC18F46K22.c: 62:     SPBRGH1 = 0b00000001;
  1651   0014B2  0E01               	movlw	1
  1652   0014B4  6EB0               	movwf	176,c	;volatile
  1653                           
  1654                           ;OBCII_PIC18F46K22.c: 63:     SPBRG1 = 0b10100000;
  1655   0014B6  0EA0               	movlw	160
  1656   0014B8  6EAF               	movwf	175,c	;volatile
  1657   0014BA                     
  1658                           ; BSR set to: 15
  1659                           ;OBCII_PIC18F46K22.c: 66:     BAUDCON1bits.CKTXP = 0;
  1660   0014BA  98B8               	bcf	184,4,c	;volatile
  1661   0014BC                     
  1662                           ; BSR set to: 15
  1663                           ;OBCII_PIC18F46K22.c: 67:     BAUDCON1bits.DTRXP = 0;
  1664   0014BC  9AB8               	bcf	184,5,c	;volatile
  1665   0014BE                     
  1666                           ; BSR set to: 15
  1667                           ;OBCII_PIC18F46K22.c: 70:     RCSTA1bits.SPEN = 1;
  1668   0014BE  8EAB               	bsf	171,7,c	;volatile
  1669   0014C0                     
  1670                           ; BSR set to: 15
  1671                           ;OBCII_PIC18F46K22.c: 71:     RCSTA1bits.CREN = 1;
  1672   0014C0  88AB               	bsf	171,4,c	;volatile
  1673   0014C2                     
  1674                           ; BSR set to: 15
  1675                           ;OBCII_PIC18F46K22.c: 72:     RCSTA1bits.RX9 = 0;
  1676   0014C2  9CAB               	bcf	171,6,c	;volatile
  1677   0014C4                     
  1678                           ; BSR set to: 15
  1679                           ;OBCII_PIC18F46K22.c: 75:     PIE1bits.RC1IE = 0;
  1680   0014C4  9A9D               	bcf	157,5,c	;volatile
  1681   0014C6                     
  1682                           ; BSR set to: 15
  1683                           ;OBCII_PIC18F46K22.c: 76:     INTCONbits.PEIE = 0;
  1684   0014C6  9CF2               	bcf	242,6,c	;volatile
  1685   0014C8                     
  1686                           ; BSR set to: 15
  1687                           ;OBCII_PIC18F46K22.c: 77:     INTCONbits.GIE = 0;
  1688   0014C8  9EF2               	bcf	242,7,c	;volatile
  1689   0014CA                     
  1690                           ; BSR set to: 15
  1691   0014CA  0012               	return		;funcret
  1692   0014CC                     __end_of_UART1_Init:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _LCD_init *****************
  1696 ;; Defined at:
  1697 ;;		line 106 in file "LCD.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;Total ram usage:        2 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 3
  1718 ;; This function calls:
  1719 ;;		_LCD_clear
  1720 ;;		_LCD_pulse_clock
  1721 ;;		_LCD_write_command
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text9
  1728   0012A8                     __ptext9:
  1729                           	callstack 0
  1730   0012A8                     _LCD_init:
  1731                           	callstack 27
  1732   0012A8                     
  1733                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
  1734   0012A8  9495               	bcf	149,2,c	;volatile
  1735   0012AA  948C               	bcf	140,2,c	;volatile
  1736                           
  1737                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
  1738   0012AC  9695               	bcf	149,3,c	;volatile
  1739   0012AE  968C               	bcf	140,3,c	;volatile
  1740                           
  1741                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
  1742   0012B0  9895               	bcf	149,4,c	;volatile
  1743   0012B2  988C               	bcf	140,4,c	;volatile
  1744                           
  1745                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
  1746   0012B4  9A95               	bcf	149,5,c	;volatile
  1747   0012B6  9A8C               	bcf	140,5,c	;volatile
  1748                           
  1749                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
  1750   0012B8  9C95               	bcf	149,6,c	;volatile
  1751   0012BA  9C8C               	bcf	140,6,c	;volatile
  1752                           
  1753                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
  1754   0012BC  9E95               	bcf	149,7,c	;volatile
  1755   0012BE  9E8C               	bcf	140,7,c	;volatile
  1756   0012C0                     
  1757                           ;LCD.c: 121:     _delay((unsigned long)((60)*(16000000/4000.0)));
  1758   0012C0  0E02               	movlw	2
  1759   0012C2  6E2C               	movwf	(??_LCD_init+1)^0,c
  1760   0012C4  0E38               	movlw	56
  1761   0012C6  6E2B               	movwf	??_LCD_init^0,c
  1762   0012C8  0EAD               	movlw	173
  1763   0012CA                     u527:
  1764   0012CA  2EE8               	decfsz	wreg,f,c
  1765   0012CC  D7FE               	bra	u527
  1766   0012CE  2E2B               	decfsz	??_LCD_init^0,f,c
  1767   0012D0  D7FC               	bra	u527
  1768   0012D2  2E2C               	decfsz	(??_LCD_init+1)^0,f,c
  1769   0012D4  D7FA               	bra	u527
  1770   0012D6  0000               	nop	
  1771   0012D8                     
  1772                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  1773   0012D8  9E8C               	bcf	140,7,c	;volatile
  1774   0012DA  9C8C               	bcf	140,6,c	;volatile
  1775   0012DC  8A8C               	bsf	140,5,c	;volatile
  1776   0012DE  888C               	bsf	140,4,c	;volatile
  1777   0012E0                     
  1778                           ;LCD.c: 127:     LCD_pulse_clock();
  1779   0012E0  EC91  F00A         	call	_LCD_pulse_clock	;wreg free
  1780   0012E4                     
  1781                           ;LCD.c: 130:     _delay((unsigned long)((6)*(16000000/4000.0)));
  1782   0012E4  0E20               	movlw	32
  1783   0012E6  6E2B               	movwf	??_LCD_init^0,c
  1784   0012E8  0E2A               	movlw	42
  1785   0012EA                     u537:
  1786   0012EA  2EE8               	decfsz	wreg,f,c
  1787   0012EC  D7FE               	bra	u537
  1788   0012EE  2E2B               	decfsz	??_LCD_init^0,f,c
  1789   0012F0  D7FC               	bra	u537
  1790                           
  1791                           ;LCD.c: 133:     LCD_pulse_clock();
  1792   0012F2  EC91  F00A         	call	_LCD_pulse_clock	;wreg free
  1793   0012F6                     
  1794                           ;LCD.c: 136:     _delay((unsigned long)((150)*(16000000/4000000.0)));
  1795   0012F6  0EC8               	movlw	200
  1796   0012F8                     u547:
  1797   0012F8  2EE8               	decfsz	wreg,f,c
  1798   0012FA  D7FE               	bra	u547
  1799   0012FC                     
  1800                           ;LCD.c: 139:     LCD_pulse_clock();
  1801   0012FC  EC91  F00A         	call	_LCD_pulse_clock	;wreg free
  1802   001300                     
  1803                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  1804   001300  9E8C               	bcf	140,7,c	;volatile
  1805   001302  9C8C               	bcf	140,6,c	;volatile
  1806   001304  8A8C               	bsf	140,5,c	;volatile
  1807   001306  988C               	bcf	140,4,c	;volatile
  1808   001308                     
  1809                           ;LCD.c: 145:     LCD_pulse_clock();
  1810   001308  EC91  F00A         	call	_LCD_pulse_clock	;wreg free
  1811   00130C                     
  1812                           ;LCD.c: 148:     LCD_write_command(0x28);
  1813   00130C  0E28               	movlw	40
  1814   00130E  EC87  F008         	call	_LCD_write_command
  1815   001312                     
  1816                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
  1817   001312  5030               	movf	_LCD_display_control^0,w,c
  1818   001314  EC87  F008         	call	_LCD_write_command
  1819   001318                     
  1820                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
  1821   001318  502F               	movf	_LCD_entry_mode^0,w,c
  1822   00131A  EC87  F008         	call	_LCD_write_command
  1823   00131E                     
  1824                           ;LCD.c: 151:     LCD_clear();
  1825   00131E  EC78  F00A         	call	_LCD_clear	;wreg free
  1826   001322  0012               	return		;funcret
  1827   001324                     __end_of_LCD_init:
  1828                           	callstack 0
  1829                           
  1830 ;; *************** function _LCD_clear *****************
  1831 ;; Defined at:
  1832 ;;		line 248 in file "LCD.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;Total ram usage:        1 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 2
  1853 ;; This function calls:
  1854 ;;		_LCD_write_command
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;;		_UART1_Save_Buffer
  1858 ;;		_LCD_init
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text10
  1863   0014F0                     __ptext10:
  1864                           	callstack 0
  1865   0014F0                     _LCD_clear:
  1866                           	callstack 27
  1867   0014F0                     
  1868                           ;LCD.c: 251:     LCD_write_command(0x01);
  1869   0014F0  0E01               	movlw	1
  1870   0014F2  EC87  F008         	call	_LCD_write_command
  1871   0014F6                     
  1872                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(16000000/4000000.0)));
  1873   0014F6  0E0C               	movlw	12
  1874   0014F8  6E2A               	movwf	??_LCD_clear^0,c
  1875   0014FA  0EA2               	movlw	162
  1876   0014FC                     u557:
  1877   0014FC  2EE8               	decfsz	wreg,f,c
  1878   0014FE  D7FE               	bra	u557
  1879   001500  2E2A               	decfsz	??_LCD_clear^0,f,c
  1880   001502  D7FC               	bra	u557
  1881   001504                     
  1882                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
  1883   001504  502F               	movf	_LCD_entry_mode^0,w,c
  1884   001506  EC87  F008         	call	_LCD_write_command
  1885   00150A  0012               	return		;funcret
  1886   00150C                     __end_of_LCD_clear:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _LCD_write_command *****************
  1890 ;; Defined at:
  1891 ;;		line 46 in file "LCD.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  command         1    wreg     unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  command         1    2[COMRAM] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;Total ram usage:        3 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 1
  1912 ;; This function calls:
  1913 ;;		_LCD_pulse_clock
  1914 ;; This function is called by:
  1915 ;;		_LCD_init
  1916 ;;		_LCD_cursor_set
  1917 ;;		_LCD_clear
  1918 ;;		_LCD_cursor_increment
  1919 ;;		_LCD_cursor_decrement
  1920 ;;		_LCD_configure_lcd_display
  1921 ;;		_LCD_configure_cursor_display
  1922 ;;		_LCD_configure_cursor_blink
  1923 ;;		_LCD_shift_reset
  1924 ;;		_LCD_shift_left
  1925 ;;		_LCD_shift_right
  1926 ;;		_LCD_configure_entry_id
  1927 ;;		_LCD_configure_entry_shift
  1928 ;;		_LCD_add_character
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text11
  1933   00110E                     __ptext11:
  1934                           	callstack 0
  1935   00110E                     _LCD_write_command:
  1936                           	callstack 27
  1937                           
  1938                           ;incstack = 0
  1939                           ;LCD_write_command@command stored from wreg
  1940   00110E  6E29               	movwf	LCD_write_command@command^0,c
  1941   001110                     
  1942                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
  1943   001110  948C               	bcf	140,2,c	;volatile
  1944   001112                     
  1945                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
  1946   001112  6A27               	clrf	??_LCD_write_command^0,c
  1947   001114  AE29               	btfss	LCD_write_command@command^0,7,c
  1948   001116  D001               	bra	u15
  1949   001118  2A27               	incf	??_LCD_write_command^0,f,c
  1950   00111A                     u15:
  1951   00111A  0E01               	movlw	1
  1952   00111C  1627               	andwf	??_LCD_write_command^0,f,c
  1953   00111E  3227               	rrcf	??_LCD_write_command^0,f,c
  1954   001120  3227               	rrcf	??_LCD_write_command^0,f,c
  1955   001122  508C               	movf	140,w,c	;volatile
  1956   001124  1827               	xorwf	??_LCD_write_command^0,w,c
  1957   001126  0B7F               	andlw	-129
  1958   001128  1827               	xorwf	??_LCD_write_command^0,w,c
  1959   00112A  6E8C               	movwf	140,c	;volatile
  1960                           
  1961                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
  1962   00112C  C029  F027         	movff	LCD_write_command@command,??_LCD_write_command
  1963   001130  0E06               	movlw	6
  1964   001132  6E28               	movwf	(??_LCD_write_command+1)^0,c
  1965   001134                     u25:
  1966   001134  90D8               	bcf	status,0,c
  1967   001136  3227               	rrcf	??_LCD_write_command^0,f,c
  1968   001138  2E28               	decfsz	(??_LCD_write_command+1)^0,f,c
  1969   00113A  EF9A  F008         	goto	u25
  1970   00113E  0E01               	movlw	1
  1971   001140  1627               	andwf	??_LCD_write_command^0,f,c
  1972   001142  3A27               	swapf	??_LCD_write_command^0,f,c
  1973   001144  4627               	rlncf	??_LCD_write_command^0,f,c
  1974   001146  4627               	rlncf	??_LCD_write_command^0,f,c
  1975   001148  508C               	movf	140,w,c	;volatile
  1976   00114A  1827               	xorwf	??_LCD_write_command^0,w,c
  1977   00114C  0BBF               	andlw	-65
  1978   00114E  1827               	xorwf	??_LCD_write_command^0,w,c
  1979   001150  6E8C               	movwf	140,c	;volatile
  1980                           
  1981                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
  1982   001152  C029  F027         	movff	LCD_write_command@command,??_LCD_write_command
  1983   001156  0E05               	movlw	5
  1984   001158  6E28               	movwf	(??_LCD_write_command+1)^0,c
  1985   00115A                     u35:
  1986   00115A  90D8               	bcf	status,0,c
  1987   00115C  3227               	rrcf	??_LCD_write_command^0,f,c
  1988   00115E  2E28               	decfsz	(??_LCD_write_command+1)^0,f,c
  1989   001160  EFAD  F008         	goto	u35
  1990   001164  0E01               	movlw	1
  1991   001166  1627               	andwf	??_LCD_write_command^0,f,c
  1992   001168  3A27               	swapf	??_LCD_write_command^0,f,c
  1993   00116A  4627               	rlncf	??_LCD_write_command^0,f,c
  1994   00116C  508C               	movf	140,w,c	;volatile
  1995   00116E  1827               	xorwf	??_LCD_write_command^0,w,c
  1996   001170  0BDF               	andlw	-33
  1997   001172  1827               	xorwf	??_LCD_write_command^0,w,c
  1998   001174  6E8C               	movwf	140,c	;volatile
  1999                           
  2000                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
  2001   001176  C029  F027         	movff	LCD_write_command@command,??_LCD_write_command
  2002   00117A  3A27               	swapf	??_LCD_write_command^0,f,c
  2003   00117C  0E0F               	movlw	15
  2004   00117E  1627               	andwf	??_LCD_write_command^0,f,c
  2005   001180  0E01               	movlw	1
  2006   001182  1627               	andwf	??_LCD_write_command^0,f,c
  2007   001184  3A27               	swapf	??_LCD_write_command^0,f,c
  2008   001186  508C               	movf	140,w,c	;volatile
  2009   001188  1827               	xorwf	??_LCD_write_command^0,w,c
  2010   00118A  0BEF               	andlw	-17
  2011   00118C  1827               	xorwf	??_LCD_write_command^0,w,c
  2012   00118E  6E8C               	movwf	140,c	;volatile
  2013   001190                     
  2014                           ;LCD.c: 57:     LCD_pulse_clock();
  2015   001190  EC91  F00A         	call	_LCD_pulse_clock	;wreg free
  2016   001194                     
  2017                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
  2018   001194  C029  F027         	movff	LCD_write_command@command,??_LCD_write_command
  2019   001198  90D8               	bcf	status,0,c
  2020   00119A  3227               	rrcf	??_LCD_write_command^0,f,c
  2021   00119C  90D8               	bcf	status,0,c
  2022   00119E  3227               	rrcf	??_LCD_write_command^0,f,c
  2023   0011A0  90D8               	bcf	status,0,c
  2024   0011A2  3227               	rrcf	??_LCD_write_command^0,f,c
  2025   0011A4  0E01               	movlw	1
  2026   0011A6  1627               	andwf	??_LCD_write_command^0,f,c
  2027   0011A8  3227               	rrcf	??_LCD_write_command^0,f,c
  2028   0011AA  3227               	rrcf	??_LCD_write_command^0,f,c
  2029   0011AC  508C               	movf	140,w,c	;volatile
  2030   0011AE  1827               	xorwf	??_LCD_write_command^0,w,c
  2031   0011B0  0B7F               	andlw	-129
  2032   0011B2  1827               	xorwf	??_LCD_write_command^0,w,c
  2033   0011B4  6E8C               	movwf	140,c	;volatile
  2034   0011B6                     
  2035                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
  2036   0011B6  C029  F027         	movff	LCD_write_command@command,??_LCD_write_command
  2037   0011BA  90D8               	bcf	status,0,c
  2038   0011BC  3227               	rrcf	??_LCD_write_command^0,f,c
  2039   0011BE  90D8               	bcf	status,0,c
  2040   0011C0  3227               	rrcf	??_LCD_write_command^0,f,c
  2041   0011C2  0E01               	movlw	1
  2042   0011C4  1627               	andwf	??_LCD_write_command^0,f,c
  2043   0011C6  3A27               	swapf	??_LCD_write_command^0,f,c
  2044   0011C8  4627               	rlncf	??_LCD_write_command^0,f,c
  2045   0011CA  4627               	rlncf	??_LCD_write_command^0,f,c
  2046   0011CC  508C               	movf	140,w,c	;volatile
  2047   0011CE  1827               	xorwf	??_LCD_write_command^0,w,c
  2048   0011D0  0BBF               	andlw	-65
  2049   0011D2  1827               	xorwf	??_LCD_write_command^0,w,c
  2050   0011D4  6E8C               	movwf	140,c	;volatile
  2051   0011D6                     
  2052                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
  2053   0011D6  C029  F027         	movff	LCD_write_command@command,??_LCD_write_command
  2054   0011DA  90D8               	bcf	status,0,c
  2055   0011DC  3227               	rrcf	??_LCD_write_command^0,f,c
  2056   0011DE  0E01               	movlw	1
  2057   0011E0  1627               	andwf	??_LCD_write_command^0,f,c
  2058   0011E2  3A27               	swapf	??_LCD_write_command^0,f,c
  2059   0011E4  4627               	rlncf	??_LCD_write_command^0,f,c
  2060   0011E6  508C               	movf	140,w,c	;volatile
  2061   0011E8  1827               	xorwf	??_LCD_write_command^0,w,c
  2062   0011EA  0BDF               	andlw	-33
  2063   0011EC  1827               	xorwf	??_LCD_write_command^0,w,c
  2064   0011EE  6E8C               	movwf	140,c	;volatile
  2065   0011F0                     
  2066                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
  2067   0011F0  C029  F027         	movff	LCD_write_command@command,??_LCD_write_command
  2068   0011F4  0E01               	movlw	1
  2069   0011F6  1627               	andwf	??_LCD_write_command^0,f,c
  2070   0011F8  3A27               	swapf	??_LCD_write_command^0,f,c
  2071   0011FA  508C               	movf	140,w,c	;volatile
  2072   0011FC  1827               	xorwf	??_LCD_write_command^0,w,c
  2073   0011FE  0BEF               	andlw	-17
  2074   001200  1827               	xorwf	??_LCD_write_command^0,w,c
  2075   001202  6E8C               	movwf	140,c	;volatile
  2076   001204                     
  2077                           ;LCD.c: 66:     LCD_pulse_clock();
  2078   001204  EC91  F00A         	call	_LCD_pulse_clock	;wreg free
  2079   001208  0012               	return		;funcret
  2080   00120A                     __end_of_LCD_write_command:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _LCD_pulse_clock *****************
  2084 ;; Defined at:
  2085 ;;		line 34 in file "LCD.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_LCD_write_command
  2109 ;;		_LCD_write_data
  2110 ;;		_LCD_init
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text12
  2115   001522                     __ptext12:
  2116                           	callstack 0
  2117   001522                     _LCD_pulse_clock:
  2118                           	callstack 27
  2119   001522                     
  2120                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
  2121   001522  868C               	bsf	140,3,c	;volatile
  2122   001524                     
  2123                           ;LCD.c: 37:   _delay((unsigned long)((60)*(16000000/4000000.0)));
  2124   001524  0E50               	movlw	80
  2125   001526                     u567:
  2126   001526  2EE8               	decfsz	wreg,f,c
  2127   001528  D7FE               	bra	u567
  2128   00152A                     
  2129                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
  2130   00152A  968C               	bcf	140,3,c	;volatile
  2131   00152C  0012               	return		;funcret
  2132   00152E                     __end_of_LCD_pulse_clock:
  2133                           	callstack 0
  2134                           
  2135                           	psect	rparam
  2136   000001                     ___rparam_used  equ	1
  2137   000000                     ___param_bank   equ	0
  2138   000000                     __Lparam        equ	__Lrparam
  2139   000000                     __Hparam        equ	__Hrparam
  2140                           
  2141                           	psect	config
  2142                           
  2143                           ; Padding undefined space
  2144   300000                     	org	3145728
  2145   300000  FF                 	db	255
  2146                           
  2147                           ;Config register CONFIG1H @ 0x300001
  2148                           ;	Oscillator Selection bits
  2149                           ;	FOSC = INTIO67, Internal oscillator block
  2150                           ;	4X PLL Enable
  2151                           ;	PLLCFG = ON, Oscillator multiplied by 4
  2152                           ;	Primary clock enable bit
  2153                           ;	PRICLKEN = ON, Primary clock is always enabled
  2154                           ;	Fail-Safe Clock Monitor Enable bit
  2155                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2156                           ;	Internal/External Oscillator Switchover bit
  2157                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2158   300001                     	org	3145729
  2159   300001  38                 	db	56
  2160                           
  2161                           ;Config register CONFIG2L @ 0x300002
  2162                           ;	Power-up Timer Enable bit
  2163                           ;	PWRTEN = ON, Power up timer enabled
  2164                           ;	Brown-out Reset Enable bits
  2165                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2166                           ;	Brown Out Reset Voltage bits
  2167                           ;	BORV = 250, VBOR set to 2.50 V nominal
  2168   300002                     	org	3145730
  2169   300002  0E                 	db	14
  2170                           
  2171                           ;Config register CONFIG2H @ 0x300003
  2172                           ;	Watchdog Timer Enable bits
  2173                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2174                           ;	Watchdog Timer Postscale Select bits
  2175                           ;	WDTPS = 32768, 1:32768
  2176   300003                     	org	3145731
  2177   300003  3C                 	db	60
  2178                           
  2179                           ; Padding undefined space
  2180   300004                     	org	3145732
  2181   300004  FF                 	db	255
  2182                           
  2183                           ;Config register CONFIG3H @ 0x300005
  2184                           ;	CCP2 MUX bit
  2185                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2186                           ;	PORTB A/D Enable bit
  2187                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2188                           ;	P3A/CCP3 Mux bit
  2189                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2190                           ;	HFINTOSC Fast Start-up
  2191                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2192                           ;	Timer3 Clock input mux bit
  2193                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2194                           ;	ECCP2 B output mux bit
  2195                           ;	P2BMX = PORTD2, P2B is on RD2
  2196                           ;	MCLR Pin Enable bit
  2197                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2198   300005                     	org	3145733
  2199   300005  BF                 	db	191
  2200                           
  2201                           ;Config register CONFIG4L @ 0x300006
  2202                           ;	Stack Full/Underflow Reset Enable bit
  2203                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2204                           ;	Single-Supply ICSP Enable bit
  2205                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2206                           ;	Extended Instruction Set Enable bit
  2207                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2208                           ;	Background Debug
  2209                           ;	DEBUG = 0x1, unprogrammed default
  2210   300006                     	org	3145734
  2211   300006  85                 	db	133
  2212                           
  2213                           ; Padding undefined space
  2214   300007                     	org	3145735
  2215   300007  FF                 	db	255
  2216                           
  2217                           ;Config register CONFIG5L @ 0x300008
  2218                           ;	Code Protection Block 0
  2219                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2220                           ;	Code Protection Block 1
  2221                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2222                           ;	Code Protection Block 2
  2223                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2224                           ;	Code Protection Block 3
  2225                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2226   300008                     	org	3145736
  2227   300008  0F                 	db	15
  2228                           
  2229                           ;Config register CONFIG5H @ 0x300009
  2230                           ;	Boot Block Code Protection bit
  2231                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2232                           ;	Data EEPROM Code Protection bit
  2233                           ;	CPD = OFF, Data EEPROM not code-protected
  2234   300009                     	org	3145737
  2235   300009  C0                 	db	192
  2236                           
  2237                           ;Config register CONFIG6L @ 0x30000A
  2238                           ;	Write Protection Block 0
  2239                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2240                           ;	Write Protection Block 1
  2241                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2242                           ;	Write Protection Block 2
  2243                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2244                           ;	Write Protection Block 3
  2245                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2246   30000A                     	org	3145738
  2247   30000A  0F                 	db	15
  2248                           
  2249                           ;Config register CONFIG6H @ 0x30000B
  2250                           ;	Configuration Register Write Protection bit
  2251                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2252                           ;	Boot Block Write Protection bit
  2253                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2254                           ;	Data EEPROM Write Protection bit
  2255                           ;	WRTD = OFF, Data EEPROM not write-protected
  2256   30000B                     	org	3145739
  2257   30000B  E0                 	db	224
  2258                           
  2259                           ;Config register CONFIG7L @ 0x30000C
  2260                           ;	Table Read Protection Block 0
  2261                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2262                           ;	Table Read Protection Block 1
  2263                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2264                           ;	Table Read Protection Block 2
  2265                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2266                           ;	Table Read Protection Block 3
  2267                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2268   30000C                     	org	3145740
  2269   30000C  0F                 	db	15
  2270                           
  2271                           ;Config register CONFIG7H @ 0x30000D
  2272                           ;	Boot Block Table Read Protection bit
  2273                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2274   30000D                     	org	3145741
  2275   30000D  40                 	db	64
  2276                           tosu	equ	0xFFF
  2277                           tosh	equ	0xFFE
  2278                           tosl	equ	0xFFD
  2279                           stkptr	equ	0xFFC
  2280                           pclatu	equ	0xFFB
  2281                           pclath	equ	0xFFA
  2282                           pcl	equ	0xFF9
  2283                           tblptru	equ	0xFF8
  2284                           tblptrh	equ	0xFF7
  2285                           tblptrl	equ	0xFF6
  2286                           tablat	equ	0xFF5
  2287                           prodh	equ	0xFF4
  2288                           prodl	equ	0xFF3
  2289                           indf0	equ	0xFEF
  2290                           postinc0	equ	0xFEE
  2291                           postdec0	equ	0xFED
  2292                           preinc0	equ	0xFEC
  2293                           plusw0	equ	0xFEB
  2294                           fsr0h	equ	0xFEA
  2295                           fsr0l	equ	0xFE9
  2296                           wreg	equ	0xFE8
  2297                           indf1	equ	0xFE7
  2298                           postinc1	equ	0xFE6
  2299                           postdec1	equ	0xFE5
  2300                           preinc1	equ	0xFE4
  2301                           plusw1	equ	0xFE3
  2302                           fsr1h	equ	0xFE2
  2303                           fsr1l	equ	0xFE1
  2304                           bsr	equ	0xFE0
  2305                           indf2	equ	0xFDF
  2306                           postinc2	equ	0xFDE
  2307                           postdec2	equ	0xFDD
  2308                           preinc2	equ	0xFDC
  2309                           plusw2	equ	0xFDB
  2310                           fsr2h	equ	0xFDA
  2311                           fsr2l	equ	0xFD9
  2312                           status	equ	0xFD8

Data Sizes:
    Strings     16
    Constant    0
    Data        2
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    LCD_write_string@string	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(COMRAM[32]), 

    UART1_SendString@string	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[5]), STR_2(CODE[6]), STR_3(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_LCD_init
    _UART1_SendString->_UART1_SendChar
    _UART1_Save_Buffer->_LCD_cursor_set
    _UART1_Save_Buffer->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1063
                                              6 COMRAM     2     2      0
                          _LCD_clear
                           _LCD_init
                         _UART1_Init
                  _UART1_Save_Buffer
                   _UART1_SendString
 ---------------------------------------------------------------------------------
 (1) _UART1_SendString                                     4     3      1     108
                                              1 COMRAM     4     3      1
                     _UART1_SendChar
 ---------------------------------------------------------------------------------
 (2) _UART1_SendChar                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART1_Save_Buffer                                    0     0      0     595
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     1      1     211
                                              3 COMRAM     2     1      1
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (3) _LCD_write_data                                       3     3      0     120
                                              0 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_set                                       2     1      1     264
                                              3 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     240
                                              4 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     120
                                              3 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_write_command                                    3     3      0     120
                                              0 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _UART1_Init
   _UART1_Save_Buffer
     _LCD_clear
     _LCD_cursor_set
       _LCD_write_command
     _LCD_write_string
       _LCD_write_data
         _LCD_pulse_clock
     _UART1_Read
   _UART1_SendString
     _UART1_SendChar

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      8      48     50.5%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        81      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
BITBIGSFRlh         31      0       0      0.0%
BITBIGSFRlll         2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      48      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Apr 26 19:59:35 2025

                       l70 14DA                         l72 14EE                         l65 14CA  
                       l82 12A6                         l91 150E                         l68 14CC  
                       l94 1520                         l88 143C                         u15 111A  
                       u25 1134                         u35 115A                         u45 101E  
                       u70 14DA                         u55 1038                         u71 14D6  
                       u80 14E8                         u65 105E                         u81 14E4  
                      l111 152C                        l120 1322                        l114 1208  
                      l123 13B2                        l124 13C8                        l125 13DE  
                      l117 110C                        l151 150A                        l127 13FA  
                      l181 149E                        l901 152A                        l911 11B6  
                      l903 1110                        l913 11D6                        l905 1112  
                      l921 1016                        l915 11F0                        l907 1190  
                      l931 10F4                        l923 1094                        l917 1204  
                      l909 1194                        l933 1108                        l925 1098  
                      l941 14CC                        l935 14F0                        l927 10BA  
                      l919 1014                        l943 14E8                        l937 14F6  
                      l929 10DA                        l945 14EC                        l939 1504  
                      l971 151C                        l981 12DC                        l973 12A8  
                      l991 12FC                        l983 12DE                        l975 12C0  
                      l897 1522                        l993 1300                        l985 12E0  
                      l977 12D8                        l969 150E                        l899 1524  
                      l995 1302                        l987 12E4                        l979 12DA  
                      l997 1304                        l989 12F6                        l999 1306  
                      u140 151C                        u141 1518                        u400 149E  
                      u401 149A                        u410 143C                        u411 1438  
                      u420 1224                        u421 1220                        u430 1234  
                      u431 1230                        u360 13AE                        u440 1254  
                      u361 13AA                        u441 1250                        u370 13C4  
                      u450 1266                        u371 13C0                        u451 1262  
                      u507 135E                        u380 13DA                        u460 1276  
                      u381 13D6                        u461 1272                        u517 137C  
                      u390 13F0                        u470 12A6                        u527 12CA  
                      u391 13EC                        u471 12A2                        u537 12EA  
                      u547 12F8                        u557 14FC                        u567 1526  
                      u497 133E                        wreg 0FE8                 _TXSTA1bits 0FAC  
                     l1001 1308                       l1003 130C                       l1011 14A0  
                     l1005 1312                       l1021 14C0                       l1013 14B2  
                     l1007 1318                       l1023 14C2                       l1015 14BA  
                     l1009 131E                       l1025 14C4                       l1017 14BC  
                     l1027 14C6                       l1019 14BE                       l1029 14C8  
                     l1221 13AE                       l1223 13C4                       l1231 1470  
                     l1225 13DA                       l1233 1476                       l1241 1408  
                     l1227 13F0                       l1219 139E                       l1235 1484  
                     l1251 1214                       l1243 141A                       l1229 13F4  
                     l1237 1486                       l1261 1254                       l1253 1224  
                     l1245 141E                       l1271 1286                       l1263 1266  
                     l1255 1234                       l1247 120A                       l1239 13FC  
                     l1273 1290                       l1265 1276                       l1257 1240  
                     l1249 120E                       l1281 132C                       l1267 1280  
                     l1259 1242                       l1275 1298                       l1291 136A  
                     l1283 1330                       l1269 1282                       l1293 1372  
                     l1285 1334                       l1277 1324                       l1295 1388  
                     l1287 134C                       l1279 1328                       l1297 1390  
                     l1289 1354                       STR_1 100C                       STR_2 1001  
                     STR_3 1007             _UART1_SendChar 150C                       _main 1324  
                     fsr2h 0FDA                       indf2 0FDF                       fsr2l 0FD9  
                     start FFFC               ___param_bank 0000                ?_UART1_Init 0027  
              ?_UART1_Read 0027               _BAUDCON1bits 0FB8           __end_of_LCD_init 1324  
                    ?_main 0027                      _TXREG 0FAD     __end_of_UART1_SendChar 1522  
                    tablat 0FF5          UART1_SendString@i 002A                      status 0FD8  
          __initialization 143E               __end_of_main 139C          ?_LCD_write_string 002A  
                   ??_main 002D              __activetblptr 0001         ??_LCD_write_string 002B  
        __end_of_LCD_clear 150C            ?_UART1_SendChar 0027                     _ANSELC 0F3A  
                   _RCREG1 0FAE     LCD_write_string@string 002A                     _OSCCON 0FD3  
                   _SPBRG1 0FAF           _UART1_SendString 13FC                     _buffer 0007  
                   clear_0 145C                     isa$std 0001               __pdataCOMRAM 002F  
             __mediumconst 1000                     tblptrh 0FF7                     tblptrl 0FF6  
                   tblptru 0FF8                 __accesstop 0060    __end_of__initialization 1462  
                ?_LCD_init 0027              ___rparam_used 0001            UART1_SendChar@c 0027  
           __pcstackCOMRAM 0027             _LCD_entry_mode 002F          _LCD_write_command 110E  
           _LCD_cursor_set 139C         ?_LCD_write_command 0027        ??_LCD_write_command 0027  
               ??_LCD_init 002B  __end_of_LCD_write_command 120A               ??_UART1_Init 0027  
             ??_UART1_Read 0027     __end_of_LCD_cursor_set 13FC                    _SPBRGH1 0FB0  
 LCD_write_command@command 0029         __end_of_UART1_Init 14CC         __end_of_UART1_Read 14F0  
        _UART1_Save_Buffer 120A                    _RX_char 0005         ?_UART1_Save_Buffer 0027  
                  __Hparam 0000                    __Lparam 0000            ?_LCD_cursor_set 002A  
           _LCD_write_data 1012        ??_UART1_Save_Buffer 002C               __psmallconst 1000  
                  __pcinit 143E                    __ramtop 1000                    __ptext0 1324  
                  __ptext1 13FC                    __ptext2 150C                    __ptext3 120A  
                  __ptext4 14CC                    __ptext5 1470                    __ptext6 1012  
                  __ptext7 139C                    __ptext8 14A0                    __ptext9 12A8  
         ??_UART1_SendChar 0027   __end_of_UART1_SendString 143E                  _LCD_clear 14F0  
     end_of_initialization 1462  __end_of_UART1_Save_Buffer 12A8       LCD_cursor_set@column 002A  
             _buffer_count 0006        _LCD_display_control 0030     __end_of_LCD_write_data 110E  
                _RCSTAbits 0FAB                    postinc0 0FEE          ??_LCD_pulse_clock 0027  
                _TRISCbits 0F94                  _TRISDbits 0F95                 ?_LCD_clear 0027  
                _TXSTAbits 0FAC            ?_LCD_write_data 0027              __pidataCOMRAM 152E  
      start_initialization 143E                __pbssCOMRAM 0001                ??_LCD_clear 002A  
         _LCD_write_string 1470           ??_LCD_cursor_set 002B     UART1_SendString@string 0028  
              __smallconst 1000          ?_UART1_SendString 0028         LCD_write_data@data 0029  
       ??_UART1_SendString 0029                   _LATDbits 0F8C                   _LCD_init 12A8  
                 _PIE1bits 0F9D                   _PIR1bits 0F9E            _LCD_pulse_clock 1522  
         ??_LCD_write_data 0027                   __Hrparam 0000                  modff@F522 0001  
                 __Lrparam 0000               __Lsmallconst 1000          LCD_cursor_set@row 002B  
                 __ptext10 14F0                   __ptext11 110E                   __ptext12 1522  
  __end_of_LCD_pulse_clock 152E                   isa$xinst 0000   __end_of_LCD_write_string 14A0  
               _INTCONbits 0FF2          LCD_write_string@i 002B                 _RCSTA1bits 0FAB  
               _UART1_Init 14A0                 _UART1_Read 14CC           ?_LCD_pulse_clock 0027  
