

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 29 15:14:43 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 12/10/2023 GMT
    62                           ; 
    63                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F46K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000FE0                     bsr             equ	4064
    96   000FE9                     fsr0            equ	4073
    97   000FEA                     fsr0h           equ	4074
    98   000FE9                     fsr0l           equ	4073
    99   000FE1                     fsr1            equ	4065
   100   000FE2                     fsr1h           equ	4066
   101   000FE1                     fsr1l           equ	4065
   102   000FD9                     fsr2            equ	4057
   103   000FDA                     fsr2h           equ	4058
   104   000FD9                     fsr2l           equ	4057
   105   000FEF                     indf0           equ	4079
   106   000FE7                     indf1           equ	4071
   107   000FDF                     indf2           equ	4063
   108   000FF2                     intcon          equ	4082
   109   000000                     nvmcon          equ	0
   110   000FF9                     pcl             equ	4089
   111   000FFA                     pclath          equ	4090
   112   000FFB                     pclatu          equ	4091
   113   000FEB                     plusw0          equ	4075
   114   000FE3                     plusw1          equ	4067
   115   000FDB                     plusw2          equ	4059
   116   000FED                     postdec0        equ	4077
   117   000FE5                     postdec1        equ	4069
   118   000FDD                     postdec2        equ	4061
   119   000FEE                     postinc0        equ	4078
   120   000FE6                     postinc1        equ	4070
   121   000FDE                     postinc2        equ	4062
   122   000FEC                     preinc0         equ	4076
   123   000FE4                     preinc1         equ	4068
   124   000FDC                     preinc2         equ	4060
   125   000FF3                     prod            equ	4083
   126   000FF4                     prodh           equ	4084
   127   000FF3                     prodl           equ	4083
   128   000FD8                     status          equ	4056
   129   000FF5                     tablat          equ	4085
   130   000FF6                     tblptr          equ	4086
   131   000FF7                     tblptrh         equ	4087
   132   000FF6                     tblptrl         equ	4086
   133   000FF8                     tblptru         equ	4088
   134   000FFD                     tosl            equ	4093
   135   000FE8                     wreg            equ	4072
   136   000F38                     ANSELA          equ	3896	;# 
   137   000F39                     ANSELB          equ	3897	;# 
   138   000F3A                     ANSELC          equ	3898	;# 
   139   000F3B                     ANSELD          equ	3899	;# 
   140   000F3C                     ANSELE          equ	3900	;# 
   141   000F3D                     PMD2            equ	3901	;# 
   142   000F3E                     PMD1            equ	3902	;# 
   143   000F3F                     PMD0            equ	3903	;# 
   144   000F40                     VREFCON2        equ	3904	;# 
   145   000F40                     DACCON1         equ	3904	;# 
   146   000F41                     VREFCON1        equ	3905	;# 
   147   000F41                     DACCON0         equ	3905	;# 
   148   000F42                     VREFCON0        equ	3906	;# 
   149   000F42                     FVRCON          equ	3906	;# 
   150   000F43                     CTMUICON        equ	3907	;# 
   151   000F43                     CTMUICONH       equ	3907	;# 
   152   000F44                     CTMUCONL        equ	3908	;# 
   153   000F44                     CTMUCON1        equ	3908	;# 
   154   000F45                     CTMUCONH        equ	3909	;# 
   155   000F45                     CTMUCON0        equ	3909	;# 
   156   000F46                     SRCON1          equ	3910	;# 
   157   000F47                     SRCON0          equ	3911	;# 
   158   000F48                     CCPTMRS1        equ	3912	;# 
   159   000F49                     CCPTMRS0        equ	3913	;# 
   160   000F4A                     T6CON           equ	3914	;# 
   161   000F4B                     PR6             equ	3915	;# 
   162   000F4C                     TMR6            equ	3916	;# 
   163   000F4D                     T5GCON          equ	3917	;# 
   164   000F4E                     T5CON           equ	3918	;# 
   165   000F4F                     TMR5            equ	3919	;# 
   166   000F4F                     TMR5L           equ	3919	;# 
   167   000F50                     TMR5H           equ	3920	;# 
   168   000F51                     T4CON           equ	3921	;# 
   169   000F52                     PR4             equ	3922	;# 
   170   000F53                     TMR4            equ	3923	;# 
   171   000F54                     CCP5CON         equ	3924	;# 
   172   000F55                     CCPR5           equ	3925	;# 
   173   000F55                     CCPR5L          equ	3925	;# 
   174   000F56                     CCPR5H          equ	3926	;# 
   175   000F57                     CCP4CON         equ	3927	;# 
   176   000F58                     CCPR4           equ	3928	;# 
   177   000F58                     CCPR4L          equ	3928	;# 
   178   000F59                     CCPR4H          equ	3929	;# 
   179   000F5A                     PSTR3CON        equ	3930	;# 
   180   000F5B                     ECCP3AS         equ	3931	;# 
   181   000F5B                     CCP3AS          equ	3931	;# 
   182   000F5C                     PWM3CON         equ	3932	;# 
   183   000F5D                     CCP3CON         equ	3933	;# 
   184   000F5E                     CCPR3           equ	3934	;# 
   185   000F5E                     CCPR3L          equ	3934	;# 
   186   000F5F                     CCPR3H          equ	3935	;# 
   187   000F60                     SLRCON          equ	3936	;# 
   188   000F61                     WPUB            equ	3937	;# 
   189   000F62                     IOCB            equ	3938	;# 
   190   000F63                     PSTR2CON        equ	3939	;# 
   191   000F64                     ECCP2AS         equ	3940	;# 
   192   000F64                     CCP2AS          equ	3940	;# 
   193   000F65                     PWM2CON         equ	3941	;# 
   194   000F66                     CCP2CON         equ	3942	;# 
   195   000F67                     CCPR2           equ	3943	;# 
   196   000F67                     CCPR2L          equ	3943	;# 
   197   000F68                     CCPR2H          equ	3944	;# 
   198   000F69                     SSP2CON3        equ	3945	;# 
   199   000F6A                     SSP2MSK         equ	3946	;# 
   200   000F6B                     SSP2CON2        equ	3947	;# 
   201   000F6C                     SSP2CON1        equ	3948	;# 
   202   000F6D                     SSP2STAT        equ	3949	;# 
   203   000F6E                     SSP2ADD         equ	3950	;# 
   204   000F6F                     SSP2BUF         equ	3951	;# 
   205   000F70                     BAUDCON2        equ	3952	;# 
   206   000F70                     BAUD2CON        equ	3952	;# 
   207   000F71                     RCSTA2          equ	3953	;# 
   208   000F71                     RC2STA          equ	3953	;# 
   209   000F72                     TXSTA2          equ	3954	;# 
   210   000F72                     TX2STA          equ	3954	;# 
   211   000F73                     TXREG2          equ	3955	;# 
   212   000F73                     TX2REG          equ	3955	;# 
   213   000F74                     RCREG2          equ	3956	;# 
   214   000F74                     RC2REG          equ	3956	;# 
   215   000F75                     SPBRG2          equ	3957	;# 
   216   000F75                     SP2BRG          equ	3957	;# 
   217   000F76                     SPBRGH2         equ	3958	;# 
   218   000F76                     SP2BRGH         equ	3958	;# 
   219   000F77                     CM2CON1         equ	3959	;# 
   220   000F77                     CM12CON         equ	3959	;# 
   221   000F78                     CM2CON0         equ	3960	;# 
   222   000F78                     CM2CON          equ	3960	;# 
   223   000F79                     CM1CON0         equ	3961	;# 
   224   000F79                     CM1CON          equ	3961	;# 
   225   000F7A                     PIE4            equ	3962	;# 
   226   000F7B                     PIR4            equ	3963	;# 
   227   000F7C                     IPR4            equ	3964	;# 
   228   000F7D                     PIE5            equ	3965	;# 
   229   000F7E                     PIR5            equ	3966	;# 
   230   000F7F                     IPR5            equ	3967	;# 
   231   000F80                     PORTA           equ	3968	;# 
   232   000F81                     PORTB           equ	3969	;# 
   233   000F82                     PORTC           equ	3970	;# 
   234   000F83                     PORTD           equ	3971	;# 
   235   000F84                     PORTE           equ	3972	;# 
   236   000F89                     LATA            equ	3977	;# 
   237   000F8A                     LATB            equ	3978	;# 
   238   000F8B                     LATC            equ	3979	;# 
   239   000F8C                     LATD            equ	3980	;# 
   240   000F8D                     LATE            equ	3981	;# 
   241   000F92                     TRISA           equ	3986	;# 
   242   000F92                     DDRA            equ	3986	;# 
   243   000F93                     TRISB           equ	3987	;# 
   244   000F93                     DDRB            equ	3987	;# 
   245   000F94                     TRISC           equ	3988	;# 
   246   000F94                     DDRC            equ	3988	;# 
   247   000F95                     TRISD           equ	3989	;# 
   248   000F95                     DDRD            equ	3989	;# 
   249   000F96                     TRISE           equ	3990	;# 
   250   000F96                     DDRE            equ	3990	;# 
   251   000F9B                     OSCTUNE         equ	3995	;# 
   252   000F9C                     HLVDCON         equ	3996	;# 
   253   000F9C                     LVDCON          equ	3996	;# 
   254   000F9D                     PIE1            equ	3997	;# 
   255   000F9E                     PIR1            equ	3998	;# 
   256   000F9F                     IPR1            equ	3999	;# 
   257   000FA0                     PIE2            equ	4000	;# 
   258   000FA1                     PIR2            equ	4001	;# 
   259   000FA2                     IPR2            equ	4002	;# 
   260   000FA3                     PIE3            equ	4003	;# 
   261   000FA4                     PIR3            equ	4004	;# 
   262   000FA5                     IPR3            equ	4005	;# 
   263   000FA6                     EECON1          equ	4006	;# 
   264   000FA7                     EECON2          equ	4007	;# 
   265   000FA8                     EEDATA          equ	4008	;# 
   266   000FA9                     EEADR           equ	4009	;# 
   267   000FAA                     EEADRH          equ	4010	;# 
   268   000FAB                     RCSTA1          equ	4011	;# 
   269   000FAB                     RCSTA           equ	4011	;# 
   270   000FAB                     RC1STA          equ	4011	;# 
   271   000FAC                     TXSTA1          equ	4012	;# 
   272   000FAC                     TXSTA           equ	4012	;# 
   273   000FAC                     TX1STA          equ	4012	;# 
   274   000FAD                     TXREG1          equ	4013	;# 
   275   000FAD                     TXREG           equ	4013	;# 
   276   000FAD                     TX1REG          equ	4013	;# 
   277   000FAE                     RCREG1          equ	4014	;# 
   278   000FAE                     RCREG           equ	4014	;# 
   279   000FAE                     RC1REG          equ	4014	;# 
   280   000FAF                     SPBRG1          equ	4015	;# 
   281   000FAF                     SPBRG           equ	4015	;# 
   282   000FAF                     SP1BRG          equ	4015	;# 
   283   000FB0                     SPBRGH1         equ	4016	;# 
   284   000FB0                     SPBRGH          equ	4016	;# 
   285   000FB0                     SP1BRGH         equ	4016	;# 
   286   000FB1                     T3CON           equ	4017	;# 
   287   000FB2                     TMR3            equ	4018	;# 
   288   000FB2                     TMR3L           equ	4018	;# 
   289   000FB3                     TMR3H           equ	4019	;# 
   290   000FB4                     T3GCON          equ	4020	;# 
   291   000FB6                     ECCP1AS         equ	4022	;# 
   292   000FB6                     ECCPAS          equ	4022	;# 
   293   000FB7                     PWM1CON         equ	4023	;# 
   294   000FB7                     PWMCON          equ	4023	;# 
   295   000FB8                     BAUDCON1        equ	4024	;# 
   296   000FB8                     BAUDCON         equ	4024	;# 
   297   000FB8                     BAUDCTL         equ	4024	;# 
   298   000FB8                     BAUD1CON        equ	4024	;# 
   299   000FB9                     PSTR1CON        equ	4025	;# 
   300   000FB9                     PSTRCON         equ	4025	;# 
   301   000FBA                     T2CON           equ	4026	;# 
   302   000FBB                     PR2             equ	4027	;# 
   303   000FBC                     TMR2            equ	4028	;# 
   304   000FBD                     CCP1CON         equ	4029	;# 
   305   000FBE                     CCPR1           equ	4030	;# 
   306   000FBE                     CCPR1L          equ	4030	;# 
   307   000FBF                     CCPR1H          equ	4031	;# 
   308   000FC0                     ADCON2          equ	4032	;# 
   309   000FC1                     ADCON1          equ	4033	;# 
   310   000FC2                     ADCON0          equ	4034	;# 
   311   000FC3                     ADRES           equ	4035	;# 
   312   000FC3                     ADRESL          equ	4035	;# 
   313   000FC4                     ADRESH          equ	4036	;# 
   314   000FC5                     SSP1CON2        equ	4037	;# 
   315   000FC5                     SSPCON2         equ	4037	;# 
   316   000FC6                     SSP1CON1        equ	4038	;# 
   317   000FC6                     SSPCON1         equ	4038	;# 
   318   000FC7                     SSP1STAT        equ	4039	;# 
   319   000FC7                     SSPSTAT         equ	4039	;# 
   320   000FC8                     SSP1ADD         equ	4040	;# 
   321   000FC8                     SSPADD          equ	4040	;# 
   322   000FC9                     SSP1BUF         equ	4041	;# 
   323   000FC9                     SSPBUF          equ	4041	;# 
   324   000FCA                     SSP1MSK         equ	4042	;# 
   325   000FCA                     SSPMSK          equ	4042	;# 
   326   000FCB                     SSP1CON3        equ	4043	;# 
   327   000FCB                     SSPCON3         equ	4043	;# 
   328   000FCC                     T1GCON          equ	4044	;# 
   329   000FCD                     T1CON           equ	4045	;# 
   330   000FCE                     TMR1            equ	4046	;# 
   331   000FCE                     TMR1L           equ	4046	;# 
   332   000FCF                     TMR1H           equ	4047	;# 
   333   000FD0                     RCON            equ	4048	;# 
   334   000FD1                     WDTCON          equ	4049	;# 
   335   000FD2                     OSCCON2         equ	4050	;# 
   336   000FD3                     OSCCON          equ	4051	;# 
   337   000FD5                     T0CON           equ	4053	;# 
   338   000FD6                     TMR0            equ	4054	;# 
   339   000FD6                     TMR0L           equ	4054	;# 
   340   000FD7                     TMR0H           equ	4055	;# 
   341   000FD8                     STATUS          equ	4056	;# 
   342   000FD9                     FSR2            equ	4057	;# 
   343   000FD9                     FSR2L           equ	4057	;# 
   344   000FDA                     FSR2H           equ	4058	;# 
   345   000FDB                     PLUSW2          equ	4059	;# 
   346   000FDC                     PREINC2         equ	4060	;# 
   347   000FDD                     POSTDEC2        equ	4061	;# 
   348   000FDE                     POSTINC2        equ	4062	;# 
   349   000FDF                     INDF2           equ	4063	;# 
   350   000FE0                     BSR             equ	4064	;# 
   351   000FE1                     FSR1            equ	4065	;# 
   352   000FE1                     FSR1L           equ	4065	;# 
   353   000FE2                     FSR1H           equ	4066	;# 
   354   000FE3                     PLUSW1          equ	4067	;# 
   355   000FE4                     PREINC1         equ	4068	;# 
   356   000FE5                     POSTDEC1        equ	4069	;# 
   357   000FE6                     POSTINC1        equ	4070	;# 
   358   000FE7                     INDF1           equ	4071	;# 
   359   000FE8                     WREG            equ	4072	;# 
   360   000FE9                     FSR0            equ	4073	;# 
   361   000FE9                     FSR0L           equ	4073	;# 
   362   000FEA                     FSR0H           equ	4074	;# 
   363   000FEB                     PLUSW0          equ	4075	;# 
   364   000FEC                     PREINC0         equ	4076	;# 
   365   000FED                     POSTDEC0        equ	4077	;# 
   366   000FEE                     POSTINC0        equ	4078	;# 
   367   000FEF                     INDF0           equ	4079	;# 
   368   000FF0                     INTCON3         equ	4080	;# 
   369   000FF1                     INTCON2         equ	4081	;# 
   370   000FF2                     INTCON          equ	4082	;# 
   371   000FF3                     PROD            equ	4083	;# 
   372   000FF3                     PRODL           equ	4083	;# 
   373   000FF4                     PRODH           equ	4084	;# 
   374   000FF5                     TABLAT          equ	4085	;# 
   375   000FF6                     TBLPTR          equ	4086	;# 
   376   000FF6                     TBLPTRL         equ	4086	;# 
   377   000FF7                     TBLPTRH         equ	4087	;# 
   378   000FF8                     TBLPTRU         equ	4088	;# 
   379   000FF9                     PCLAT           equ	4089	;# 
   380   000FF9                     PC              equ	4089	;# 
   381   000FF9                     PCL             equ	4089	;# 
   382   000FFA                     PCLATH          equ	4090	;# 
   383   000FFB                     PCLATU          equ	4091	;# 
   384   000FFC                     STKPTR          equ	4092	;# 
   385   000FFD                     TOS             equ	4093	;# 
   386   000FFD                     TOSL            equ	4093	;# 
   387   000FFE                     TOSH            equ	4094	;# 
   388   000FFF                     TOSU            equ	4095	;# 
   389   000F38                     ANSELA          equ	3896	;# 
   390   000F39                     ANSELB          equ	3897	;# 
   391   000F3A                     ANSELC          equ	3898	;# 
   392   000F3B                     ANSELD          equ	3899	;# 
   393   000F3C                     ANSELE          equ	3900	;# 
   394   000F3D                     PMD2            equ	3901	;# 
   395   000F3E                     PMD1            equ	3902	;# 
   396   000F3F                     PMD0            equ	3903	;# 
   397   000F40                     VREFCON2        equ	3904	;# 
   398   000F40                     DACCON1         equ	3904	;# 
   399   000F41                     VREFCON1        equ	3905	;# 
   400   000F41                     DACCON0         equ	3905	;# 
   401   000F42                     VREFCON0        equ	3906	;# 
   402   000F42                     FVRCON          equ	3906	;# 
   403   000F43                     CTMUICON        equ	3907	;# 
   404   000F43                     CTMUICONH       equ	3907	;# 
   405   000F44                     CTMUCONL        equ	3908	;# 
   406   000F44                     CTMUCON1        equ	3908	;# 
   407   000F45                     CTMUCONH        equ	3909	;# 
   408   000F45                     CTMUCON0        equ	3909	;# 
   409   000F46                     SRCON1          equ	3910	;# 
   410   000F47                     SRCON0          equ	3911	;# 
   411   000F48                     CCPTMRS1        equ	3912	;# 
   412   000F49                     CCPTMRS0        equ	3913	;# 
   413   000F4A                     T6CON           equ	3914	;# 
   414   000F4B                     PR6             equ	3915	;# 
   415   000F4C                     TMR6            equ	3916	;# 
   416   000F4D                     T5GCON          equ	3917	;# 
   417   000F4E                     T5CON           equ	3918	;# 
   418   000F4F                     TMR5            equ	3919	;# 
   419   000F4F                     TMR5L           equ	3919	;# 
   420   000F50                     TMR5H           equ	3920	;# 
   421   000F51                     T4CON           equ	3921	;# 
   422   000F52                     PR4             equ	3922	;# 
   423   000F53                     TMR4            equ	3923	;# 
   424   000F54                     CCP5CON         equ	3924	;# 
   425   000F55                     CCPR5           equ	3925	;# 
   426   000F55                     CCPR5L          equ	3925	;# 
   427   000F56                     CCPR5H          equ	3926	;# 
   428   000F57                     CCP4CON         equ	3927	;# 
   429   000F58                     CCPR4           equ	3928	;# 
   430   000F58                     CCPR4L          equ	3928	;# 
   431   000F59                     CCPR4H          equ	3929	;# 
   432   000F5A                     PSTR3CON        equ	3930	;# 
   433   000F5B                     ECCP3AS         equ	3931	;# 
   434   000F5B                     CCP3AS          equ	3931	;# 
   435   000F5C                     PWM3CON         equ	3932	;# 
   436   000F5D                     CCP3CON         equ	3933	;# 
   437   000F5E                     CCPR3           equ	3934	;# 
   438   000F5E                     CCPR3L          equ	3934	;# 
   439   000F5F                     CCPR3H          equ	3935	;# 
   440   000F60                     SLRCON          equ	3936	;# 
   441   000F61                     WPUB            equ	3937	;# 
   442   000F62                     IOCB            equ	3938	;# 
   443   000F63                     PSTR2CON        equ	3939	;# 
   444   000F64                     ECCP2AS         equ	3940	;# 
   445   000F64                     CCP2AS          equ	3940	;# 
   446   000F65                     PWM2CON         equ	3941	;# 
   447   000F66                     CCP2CON         equ	3942	;# 
   448   000F67                     CCPR2           equ	3943	;# 
   449   000F67                     CCPR2L          equ	3943	;# 
   450   000F68                     CCPR2H          equ	3944	;# 
   451   000F69                     SSP2CON3        equ	3945	;# 
   452   000F6A                     SSP2MSK         equ	3946	;# 
   453   000F6B                     SSP2CON2        equ	3947	;# 
   454   000F6C                     SSP2CON1        equ	3948	;# 
   455   000F6D                     SSP2STAT        equ	3949	;# 
   456   000F6E                     SSP2ADD         equ	3950	;# 
   457   000F6F                     SSP2BUF         equ	3951	;# 
   458   000F70                     BAUDCON2        equ	3952	;# 
   459   000F70                     BAUD2CON        equ	3952	;# 
   460   000F71                     RCSTA2          equ	3953	;# 
   461   000F71                     RC2STA          equ	3953	;# 
   462   000F72                     TXSTA2          equ	3954	;# 
   463   000F72                     TX2STA          equ	3954	;# 
   464   000F73                     TXREG2          equ	3955	;# 
   465   000F73                     TX2REG          equ	3955	;# 
   466   000F74                     RCREG2          equ	3956	;# 
   467   000F74                     RC2REG          equ	3956	;# 
   468   000F75                     SPBRG2          equ	3957	;# 
   469   000F75                     SP2BRG          equ	3957	;# 
   470   000F76                     SPBRGH2         equ	3958	;# 
   471   000F76                     SP2BRGH         equ	3958	;# 
   472   000F77                     CM2CON1         equ	3959	;# 
   473   000F77                     CM12CON         equ	3959	;# 
   474   000F78                     CM2CON0         equ	3960	;# 
   475   000F78                     CM2CON          equ	3960	;# 
   476   000F79                     CM1CON0         equ	3961	;# 
   477   000F79                     CM1CON          equ	3961	;# 
   478   000F7A                     PIE4            equ	3962	;# 
   479   000F7B                     PIR4            equ	3963	;# 
   480   000F7C                     IPR4            equ	3964	;# 
   481   000F7D                     PIE5            equ	3965	;# 
   482   000F7E                     PIR5            equ	3966	;# 
   483   000F7F                     IPR5            equ	3967	;# 
   484   000F80                     PORTA           equ	3968	;# 
   485   000F81                     PORTB           equ	3969	;# 
   486   000F82                     PORTC           equ	3970	;# 
   487   000F83                     PORTD           equ	3971	;# 
   488   000F84                     PORTE           equ	3972	;# 
   489   000F89                     LATA            equ	3977	;# 
   490   000F8A                     LATB            equ	3978	;# 
   491   000F8B                     LATC            equ	3979	;# 
   492   000F8C                     LATD            equ	3980	;# 
   493   000F8D                     LATE            equ	3981	;# 
   494   000F92                     TRISA           equ	3986	;# 
   495   000F92                     DDRA            equ	3986	;# 
   496   000F93                     TRISB           equ	3987	;# 
   497   000F93                     DDRB            equ	3987	;# 
   498   000F94                     TRISC           equ	3988	;# 
   499   000F94                     DDRC            equ	3988	;# 
   500   000F95                     TRISD           equ	3989	;# 
   501   000F95                     DDRD            equ	3989	;# 
   502   000F96                     TRISE           equ	3990	;# 
   503   000F96                     DDRE            equ	3990	;# 
   504   000F9B                     OSCTUNE         equ	3995	;# 
   505   000F9C                     HLVDCON         equ	3996	;# 
   506   000F9C                     LVDCON          equ	3996	;# 
   507   000F9D                     PIE1            equ	3997	;# 
   508   000F9E                     PIR1            equ	3998	;# 
   509   000F9F                     IPR1            equ	3999	;# 
   510   000FA0                     PIE2            equ	4000	;# 
   511   000FA1                     PIR2            equ	4001	;# 
   512   000FA2                     IPR2            equ	4002	;# 
   513   000FA3                     PIE3            equ	4003	;# 
   514   000FA4                     PIR3            equ	4004	;# 
   515   000FA5                     IPR3            equ	4005	;# 
   516   000FA6                     EECON1          equ	4006	;# 
   517   000FA7                     EECON2          equ	4007	;# 
   518   000FA8                     EEDATA          equ	4008	;# 
   519   000FA9                     EEADR           equ	4009	;# 
   520   000FAA                     EEADRH          equ	4010	;# 
   521   000FAB                     RCSTA1          equ	4011	;# 
   522   000FAB                     RCSTA           equ	4011	;# 
   523   000FAB                     RC1STA          equ	4011	;# 
   524   000FAC                     TXSTA1          equ	4012	;# 
   525   000FAC                     TXSTA           equ	4012	;# 
   526   000FAC                     TX1STA          equ	4012	;# 
   527   000FAD                     TXREG1          equ	4013	;# 
   528   000FAD                     TXREG           equ	4013	;# 
   529   000FAD                     TX1REG          equ	4013	;# 
   530   000FAE                     RCREG1          equ	4014	;# 
   531   000FAE                     RCREG           equ	4014	;# 
   532   000FAE                     RC1REG          equ	4014	;# 
   533   000FAF                     SPBRG1          equ	4015	;# 
   534   000FAF                     SPBRG           equ	4015	;# 
   535   000FAF                     SP1BRG          equ	4015	;# 
   536   000FB0                     SPBRGH1         equ	4016	;# 
   537   000FB0                     SPBRGH          equ	4016	;# 
   538   000FB0                     SP1BRGH         equ	4016	;# 
   539   000FB1                     T3CON           equ	4017	;# 
   540   000FB2                     TMR3            equ	4018	;# 
   541   000FB2                     TMR3L           equ	4018	;# 
   542   000FB3                     TMR3H           equ	4019	;# 
   543   000FB4                     T3GCON          equ	4020	;# 
   544   000FB6                     ECCP1AS         equ	4022	;# 
   545   000FB6                     ECCPAS          equ	4022	;# 
   546   000FB7                     PWM1CON         equ	4023	;# 
   547   000FB7                     PWMCON          equ	4023	;# 
   548   000FB8                     BAUDCON1        equ	4024	;# 
   549   000FB8                     BAUDCON         equ	4024	;# 
   550   000FB8                     BAUDCTL         equ	4024	;# 
   551   000FB8                     BAUD1CON        equ	4024	;# 
   552   000FB9                     PSTR1CON        equ	4025	;# 
   553   000FB9                     PSTRCON         equ	4025	;# 
   554   000FBA                     T2CON           equ	4026	;# 
   555   000FBB                     PR2             equ	4027	;# 
   556   000FBC                     TMR2            equ	4028	;# 
   557   000FBD                     CCP1CON         equ	4029	;# 
   558   000FBE                     CCPR1           equ	4030	;# 
   559   000FBE                     CCPR1L          equ	4030	;# 
   560   000FBF                     CCPR1H          equ	4031	;# 
   561   000FC0                     ADCON2          equ	4032	;# 
   562   000FC1                     ADCON1          equ	4033	;# 
   563   000FC2                     ADCON0          equ	4034	;# 
   564   000FC3                     ADRES           equ	4035	;# 
   565   000FC3                     ADRESL          equ	4035	;# 
   566   000FC4                     ADRESH          equ	4036	;# 
   567   000FC5                     SSP1CON2        equ	4037	;# 
   568   000FC5                     SSPCON2         equ	4037	;# 
   569   000FC6                     SSP1CON1        equ	4038	;# 
   570   000FC6                     SSPCON1         equ	4038	;# 
   571   000FC7                     SSP1STAT        equ	4039	;# 
   572   000FC7                     SSPSTAT         equ	4039	;# 
   573   000FC8                     SSP1ADD         equ	4040	;# 
   574   000FC8                     SSPADD          equ	4040	;# 
   575   000FC9                     SSP1BUF         equ	4041	;# 
   576   000FC9                     SSPBUF          equ	4041	;# 
   577   000FCA                     SSP1MSK         equ	4042	;# 
   578   000FCA                     SSPMSK          equ	4042	;# 
   579   000FCB                     SSP1CON3        equ	4043	;# 
   580   000FCB                     SSPCON3         equ	4043	;# 
   581   000FCC                     T1GCON          equ	4044	;# 
   582   000FCD                     T1CON           equ	4045	;# 
   583   000FCE                     TMR1            equ	4046	;# 
   584   000FCE                     TMR1L           equ	4046	;# 
   585   000FCF                     TMR1H           equ	4047	;# 
   586   000FD0                     RCON            equ	4048	;# 
   587   000FD1                     WDTCON          equ	4049	;# 
   588   000FD2                     OSCCON2         equ	4050	;# 
   589   000FD3                     OSCCON          equ	4051	;# 
   590   000FD5                     T0CON           equ	4053	;# 
   591   000FD6                     TMR0            equ	4054	;# 
   592   000FD6                     TMR0L           equ	4054	;# 
   593   000FD7                     TMR0H           equ	4055	;# 
   594   000FD8                     STATUS          equ	4056	;# 
   595   000FD9                     FSR2            equ	4057	;# 
   596   000FD9                     FSR2L           equ	4057	;# 
   597   000FDA                     FSR2H           equ	4058	;# 
   598   000FDB                     PLUSW2          equ	4059	;# 
   599   000FDC                     PREINC2         equ	4060	;# 
   600   000FDD                     POSTDEC2        equ	4061	;# 
   601   000FDE                     POSTINC2        equ	4062	;# 
   602   000FDF                     INDF2           equ	4063	;# 
   603   000FE0                     BSR             equ	4064	;# 
   604   000FE1                     FSR1            equ	4065	;# 
   605   000FE1                     FSR1L           equ	4065	;# 
   606   000FE2                     FSR1H           equ	4066	;# 
   607   000FE3                     PLUSW1          equ	4067	;# 
   608   000FE4                     PREINC1         equ	4068	;# 
   609   000FE5                     POSTDEC1        equ	4069	;# 
   610   000FE6                     POSTINC1        equ	4070	;# 
   611   000FE7                     INDF1           equ	4071	;# 
   612   000FE8                     WREG            equ	4072	;# 
   613   000FE9                     FSR0            equ	4073	;# 
   614   000FE9                     FSR0L           equ	4073	;# 
   615   000FEA                     FSR0H           equ	4074	;# 
   616   000FEB                     PLUSW0          equ	4075	;# 
   617   000FEC                     PREINC0         equ	4076	;# 
   618   000FED                     POSTDEC0        equ	4077	;# 
   619   000FEE                     POSTINC0        equ	4078	;# 
   620   000FEF                     INDF0           equ	4079	;# 
   621   000FF0                     INTCON3         equ	4080	;# 
   622   000FF1                     INTCON2         equ	4081	;# 
   623   000FF2                     INTCON          equ	4082	;# 
   624   000FF3                     PROD            equ	4083	;# 
   625   000FF3                     PRODL           equ	4083	;# 
   626   000FF4                     PRODH           equ	4084	;# 
   627   000FF5                     TABLAT          equ	4085	;# 
   628   000FF6                     TBLPTR          equ	4086	;# 
   629   000FF6                     TBLPTRL         equ	4086	;# 
   630   000FF7                     TBLPTRH         equ	4087	;# 
   631   000FF8                     TBLPTRU         equ	4088	;# 
   632   000FF9                     PCLAT           equ	4089	;# 
   633   000FF9                     PC              equ	4089	;# 
   634   000FF9                     PCL             equ	4089	;# 
   635   000FFA                     PCLATH          equ	4090	;# 
   636   000FFB                     PCLATU          equ	4091	;# 
   637   000FFC                     STKPTR          equ	4092	;# 
   638   000FFD                     TOS             equ	4093	;# 
   639   000FFD                     TOSL            equ	4093	;# 
   640   000FFE                     TOSH            equ	4094	;# 
   641   000FFF                     TOSU            equ	4095	;# 
   642                           
   643                           	psect	idataCOMRAM
   644   001926                     __pidataCOMRAM:
   645                           	callstack 0
   646                           
   647                           ;initializer for _menu_sel
   648   001926  FFFF               	dw	65535
   649                           
   650                           ;initializer for _LCD_entry_mode
   651   001928  06                 	db	6
   652                           
   653                           ;initializer for _LCD_display_control
   654   001929  0C                 	db	12
   655   000F3A                     _ANSELC         set	3898
   656   000F38                     _ANSELAbits     set	3896
   657   000F3A                     _ANSELCbits     set	3898
   658   000F39                     _ANSELBbits     set	3897
   659   000F95                     _TRISDbits      set	3989
   660   000F8C                     _LATDbits       set	3980
   661   000F82                     _PORTCbits      set	3970
   662   000F81                     _PORTBbits      set	3969
   663   000FC3                     _ADRESL         set	4035
   664   000FC4                     _ADRESH         set	4036
   665   000FC2                     _ADCON0bits     set	4034
   666   000FCD                     _T1CONbits      set	4045
   667   000FBE                     _CCPR1L         set	4030
   668   000FBF                     _CCPR1H         set	4031
   669   000FBD                     _CCP1CONbits    set	4029
   670   000FAD                     _TXREG          set	4013
   671   000FAC                     _TXSTAbits      set	4012
   672   000FAB                     _RCSTAbits      set	4011
   673   000FAE                     _RCREG1         set	4014
   674   000F9E                     _PIR1bits       set	3998
   675   000FF2                     _INTCONbits     set	4082
   676   000F9D                     _PIE1bits       set	3997
   677   000FAB                     _RCSTA1bits     set	4011
   678   000FAF                     _SPBRG1         set	4015
   679   000FB0                     _SPBRGH1        set	4016
   680   000FB8                     _BAUDCON1bits   set	4024
   681   000FAC                     _TXSTA1bits     set	4012
   682   000FC0                     _ADCON2         set	4032
   683   000FC1                     _ADCON1         set	4033
   684   000FC2                     _ADCON0         set	4034
   685   000F92                     _TRISAbits      set	3986
   686   000F94                     _TRISCbits      set	3988
   687   000F93                     _TRISBbits      set	3987
   688   000FD3                     _OSCCON         set	4051
   689                           
   690                           	psect	mediumconst
   691   00FEE8                     __pmediumconst:
   692                           	callstack 0
   693   00FEE8  00                 	db	0
   694   00FEE9                     STR_5:
   695   00FEE9  4F                 	db	79	;'O'
   696   00FEEA  42                 	db	66	;'B'
   697   00FEEB  44                 	db	68	;'D'
   698   00FEEC  49                 	db	73	;'I'
   699   00FEED  49                 	db	73	;'I'
   700   00FEEE  20                 	db	32
   701   00FEEF  4E                 	db	78	;'N'
   702   00FEF0  6F                 	db	111	;'o'
   703   00FEF1  74                 	db	116	;'t'
   704   00FEF2  20                 	db	32
   705   00FEF3  46                 	db	70	;'F'
   706   00FEF4  6F                 	db	111	;'o'
   707   00FEF5  75                 	db	117	;'u'
   708   00FEF6  6E                 	db	110	;'n'
   709   00FEF7  64                 	db	100	;'d'
   710   00FEF8  20                 	db	32
   711   00FEF9  00                 	db	0
   712   00FEFA                     STR_2:
   713   00FEFA  3E                 	db	62	;'>'
   714   00FEFB  3E                 	db	62	;'>'
   715   00FEFC  3E                 	db	62	;'>'
   716   00FEFD  20                 	db	32
   717   00FEFE  4F                 	db	79	;'O'
   718   00FEFF  42                 	db	66	;'B'
   719   00FF00  44                 	db	68	;'D'
   720   00FF01  49                 	db	73	;'I'
   721   00FF02  49                 	db	73	;'I'
   722   00FF03  50                 	db	80	;'P'
   723   00FF04  49                 	db	73	;'I'
   724   00FF05  43                 	db	67	;'C'
   725   00FF06  20                 	db	32
   726   00FF07  3C                 	db	60	;'<'
   727   00FF08  3C                 	db	60	;'<'
   728   00FF09  3C                 	db	60	;'<'
   729   00FF0A  00                 	db	0
   730   00FF0B                     STR_34:
   731   00FF0B  59                 	db	89	;'Y'
   732   00FF0C  2F                 	db	47
   733   00FF0D  4E                 	db	78	;'N'
   734   00FF0E  20                 	db	32
   735   00FF0F  3C                 	db	60	;'<'
   736   00FF10  3C                 	db	60	;'<'
   737   00FF11  3C                 	db	60	;'<'
   738   00FF12  3C                 	db	60	;'<'
   739   00FF13  3C                 	db	60	;'<'
   740   00FF14  3C                 	db	60	;'<'
   741   00FF15  3C                 	db	60	;'<'
   742   00FF16  3C                 	db	60	;'<'
   743   00FF17  3C                 	db	60	;'<'
   744   00FF18  3C                 	db	60	;'<'
   745   00FF19  3C                 	db	60	;'<'
   746   00FF1A  3C                 	db	60	;'<'
   747   00FF1B  00                 	db	0
   748   00FF1C                     STR_8:
   749   00FF1C  3D                 	db	61	;'='
   750   00FF1D  3D                 	db	61	;'='
   751   00FF1E  3D                 	db	61	;'='
   752   00FF1F  3D                 	db	61	;'='
   753   00FF20  3D                 	db	61	;'='
   754   00FF21  3D                 	db	61	;'='
   755   00FF22  3D                 	db	61	;'='
   756   00FF23  3D                 	db	61	;'='
   757   00FF24  3D                 	db	61	;'='
   758   00FF25  3D                 	db	61	;'='
   759   00FF26  3D                 	db	61	;'='
   760   00FF27  3D                 	db	61	;'='
   761   00FF28  3D                 	db	61	;'='
   762   00FF29  3D                 	db	61	;'='
   763   00FF2A  3D                 	db	61	;'='
   764   00FF2B  3D                 	db	61	;'='
   765   00FF2C  00                 	db	0
   766   00FF2D                     STR_10:
   767   00FF2D  4D                 	db	77	;'M'
   768   00FF2E  45                 	db	69	;'E'
   769   00FF2F  4E                 	db	78	;'N'
   770   00FF30  55                 	db	85	;'U'
   771   00FF31  20                 	db	32
   772   00FF32  20                 	db	32
   773   00FF33  3C                 	db	60	;'<'
   774   00FF34  4F                 	db	79	;'O'
   775   00FF35  42                 	db	66	;'B'
   776   00FF36  44                 	db	68	;'D'
   777   00FF37  49                 	db	73	;'I'
   778   00FF38  49                 	db	73	;'I'
   779   00FF39  50                 	db	80	;'P'
   780   00FF3A  49                 	db	73	;'I'
   781   00FF3B  43                 	db	67	;'C'
   782   00FF3C  3E                 	db	62	;'>'
   783   00FF3D  00                 	db	0
   784   00FF3E                     STR_7:
   785   00FF3E  3C                 	db	60	;'<'
   786   00FF3F  4F                 	db	79	;'O'
   787   00FF40  42                 	db	66	;'B'
   788   00FF41  44                 	db	68	;'D'
   789   00FF42  49                 	db	73	;'I'
   790   00FF43  49                 	db	73	;'I'
   791   00FF44  20                 	db	32
   792   00FF45  44                 	db	68	;'D'
   793   00FF46  65                 	db	101	;'e'
   794   00FF47  74                 	db	116	;'t'
   795   00FF48  65                 	db	101	;'e'
   796   00FF49  63                 	db	99	;'c'
   797   00FF4A  74                 	db	116	;'t'
   798   00FF4B  65                 	db	101	;'e'
   799   00FF4C  64                 	db	100	;'d'
   800   00FF4D  3E                 	db	62	;'>'
   801   00FF4E  00                 	db	0
   802   00FF4F                     STR_11:
   803   00FF4F  4C                 	db	76	;'L'
   804   00FF50  52                 	db	82	;'R'
   805   00FF51  4D                 	db	77	;'M'
   806   00FF52  20                 	db	32
   807   00FF53  52                 	db	82	;'R'
   808   00FF54  44                 	db	68	;'D'
   809   00FF55  43                 	db	67	;'C'
   810   00FF56  20                 	db	32
   811   00FF57  43                 	db	67	;'C'
   812   00FF58  44                 	db	68	;'D'
   813   00FF59  43                 	db	67	;'C'
   814   00FF5A  20                 	db	32
   815   00FF5B  44                 	db	68	;'D'
   816   00FF5C  53                 	db	83	;'S'
   817   00FF5D  49                 	db	73	;'I'
   818   00FF5E  00                 	db	0
   819   00FF5F                     STR_38:
   820   00FF5F  4E                 	db	78	;'N'
   821   00FF60  6F                 	db	111	;'o'
   822   00FF61  74                 	db	116	;'t'
   823   00FF62  68                 	db	104	;'h'
   824   00FF63  69                 	db	105	;'i'
   825   00FF64  6E                 	db	110	;'n'
   826   00FF65  67                 	db	103	;'g'
   827   00FF66  20                 	db	32
   828   00FF67  43                 	db	67	;'C'
   829   00FF68  6C                 	db	108	;'l'
   830   00FF69  65                 	db	101	;'e'
   831   00FF6A  61                 	db	97	;'a'
   832   00FF6B  72                 	db	114	;'r'
   833   00FF6C  65                 	db	101	;'e'
   834   00FF6D  64                 	db	100	;'d'
   835   00FF6E  00                 	db	0
   836   00FF6F                     STR_3:
   837   00FF6F  3E                 	db	62	;'>'
   838   00FF70  3E                 	db	62	;'>'
   839   00FF71  3E                 	db	62	;'>'
   840   00FF72  3E                 	db	62	;'>'
   841   00FF73  20                 	db	32
   842   00FF74  56                 	db	86	;'V'
   843   00FF75  31                 	db	49	;'1'
   844   00FF76  2E                 	db	46
   845   00FF77  30                 	db	48	;'0'
   846   00FF78  20                 	db	32
   847   00FF79  3C                 	db	60	;'<'
   848   00FF7A  3C                 	db	60	;'<'
   849   00FF7B  3C                 	db	60	;'<'
   850   00FF7C  3C                 	db	60	;'<'
   851   00FF7D  00                 	db	0
   852   00FF7E                     STR_33:
   853   00FF7E  43                 	db	67	;'C'
   854   00FF7F  6C                 	db	108	;'l'
   855   00FF80  65                 	db	101	;'e'
   856   00FF81  61                 	db	97	;'a'
   857   00FF82  72                 	db	114	;'r'
   858   00FF83  20                 	db	32
   859   00FF84  43                 	db	67	;'C'
   860   00FF85  6F                 	db	111	;'o'
   861   00FF86  64                 	db	100	;'d'
   862   00FF87  65                 	db	101	;'e'
   863   00FF88  28                 	db	40
   864   00FF89  73                 	db	115	;'s'
   865   00FF8A  29                 	db	41
   866   00FF8B  3F                 	db	63	;'?'
   867   00FF8C  00                 	db	0
   868   00FF8D                     STR_32:
   869   00FF8D  20                 	db	32
   870   00FF8E  20                 	db	32
   871   00FF8F  20                 	db	32
   872   00FF90  20                 	db	32
   873   00FF91  20                 	db	32
   874   00FF92  20                 	db	32
   875   00FF93  20                 	db	32
   876   00FF94  20                 	db	32
   877   00FF95  20                 	db	32
   878   00FF96  20                 	db	32
   879   00FF97  20                 	db	32
   880   00FF98  20                 	db	32
   881   00FF99  20                 	db	32
   882   00FF9A  00                 	db	0
   883   00FF9B                     STR_36:
   884   00FF9B  43                 	db	67	;'C'
   885   00FF9C  6F                 	db	111	;'o'
   886   00FF9D  64                 	db	100	;'d'
   887   00FF9E  65                 	db	101	;'e'
   888   00FF9F  73                 	db	115	;'s'
   889   00FFA0  20                 	db	32
   890   00FFA1  43                 	db	67	;'C'
   891   00FFA2  6C                 	db	108	;'l'
   892   00FFA3  65                 	db	101	;'e'
   893   00FFA4  61                 	db	97	;'a'
   894   00FFA5  72                 	db	114	;'r'
   895   00FFA6  65                 	db	101	;'e'
   896   00FFA7  64                 	db	100	;'d'
   897   00FFA8  00                 	db	0
   898   00FFA9                     STR_37:
   899   00FFA9  54                 	db	84	;'T'
   900   00FFAA  6F                 	db	111	;'o'
   901   00FFAB  20                 	db	32
   902   00FFAC  4D                 	db	77	;'M'
   903   00FFAD  65                 	db	101	;'e'
   904   00FFAE  6E                 	db	110	;'n'
   905   00FFAF  75                 	db	117	;'u'
   906   00FFB0  2E                 	db	46
   907   00FFB1  2E                 	db	46
   908   00FFB2  2E                 	db	46
   909   00FFB3  00                 	db	0
   910   00FFB4                     STR_1:
   911   00FFB4  41                 	db	65	;'A'
   912   00FFB5  54                 	db	84	;'T'
   913   00FFB6  45                 	db	69	;'E'
   914   00FFB7  30                 	db	48	;'0'
   915   00FFB8  0D                 	db	13
   916   00FFB9  00                 	db	0
   917   00FFBA                     STR_29:
   918   00FFBA  30                 	db	48	;'0'
   919   00FFBB  31                 	db	49	;'1'
   920   00FFBC  30                 	db	48	;'0'
   921   00FFBD  38                 	db	56	;'8'
   922   00FFBE  0D                 	db	13
   923   00FFBF  00                 	db	0
   924   00FFC0                     STR_14:
   925   00FFC0  30                 	db	48	;'0'
   926   00FFC1  31                 	db	49	;'1'
   927   00FFC2  30                 	db	48	;'0'
   928   00FFC3  43                 	db	67	;'C'
   929   00FFC4  0D                 	db	13
   930   00FFC5  00                 	db	0
   931   00FFC6                     STR_22:
   932   00FFC6  30                 	db	48	;'0'
   933   00FFC7  31                 	db	49	;'1'
   934   00FFC8  30                 	db	48	;'0'
   935   00FFC9  46                 	db	70	;'F'
   936   00FFCA  0D                 	db	13
   937   00FFCB  00                 	db	0
   938   00FFCC                     STR_18:
   939   00FFCC  41                 	db	65	;'A'
   940   00FFCD  54                 	db	84	;'T'
   941   00FFCE  52                 	db	82	;'R'
   942   00FFCF  56                 	db	86	;'V'
   943   00FFD0  0D                 	db	13
   944   00FFD1  00                 	db	0
   945   00FFD2                     STR_20:
   946   00FFD2  56                 	db	86	;'V'
   947   00FFD3  42                 	db	66	;'B'
   948   00FFD4  61                 	db	97	;'a'
   949   00FFD5  74                 	db	116	;'t'
   950   00FFD6  74                 	db	116	;'t'
   951   00FFD7  00                 	db	0
   952   00FFD8                     STR_4:
   953   00FFD8  41                 	db	65	;'A'
   954   00FFD9  54                 	db	84	;'T'
   955   00FFDA  49                 	db	73	;'I'
   956   00FFDB  0D                 	db	13
   957   00FFDC  00                 	db	0
   958   00FFDD                     STR_30:
   959   00FFDD  53                 	db	83	;'S'
   960   00FFDE  41                 	db	65	;'A'
   961   00FFDF  45                 	db	69	;'E'
   962   00FFE0  3A                 	db	58	;':'
   963   00FFE1  00                 	db	0
   964   00FFE2                     STR_35:
   965   00FFE2  30                 	db	48	;'0'
   966   00FFE3  34                 	db	52	;'4'
   967   00FFE4  0D                 	db	13
   968   00FFE5  00                 	db	0
   969   00FFE6                     STR_28:
   970   00FFE6  4F                 	db	79	;'O'
   971   00FFE7  53                 	db	83	;'S'
   972   00FFE8  3A                 	db	58	;':'
   973   00FFE9  00                 	db	0
   974   00FFEA                     STR_21:
   975   00FFEA  4E                 	db	78	;'N'
   976   00FFEB  2F                 	db	47
   977   00FFEC  41                 	db	65	;'A'
   978   00FFED  00                 	db	0
   979   00FFEE                     STR_17:
   980   00FFEE  52                 	db	82	;'R'
   981   00FFEF  50                 	db	80	;'P'
   982   00FFF0  4D                 	db	77	;'M'
   983   00FFF1  00                 	db	0
   984   00FFF2                     STR_25:
   985   00FFF2  41                 	db	65	;'A'
   986   00FFF3  49                 	db	73	;'I'
   987   00FFF4  54                 	db	84	;'T'
   988   00FFF5  00                 	db	0
   989   00FFF6                     STR_15:
   990   00FFF6  25                 	db	37
   991   00FFF7  75                 	db	117	;'u'
   992   00FFF8  00                 	db	0
   993   00FFF9                     STR_26:
   994   00FFF9  43                 	db	67	;'C'
   995   00FFFA  00                 	db	0
   996   00FFFB                     STR_13:
   997   00FFFB  5E                 	db	94	;'^'
   998   00FFFC  00                 	db	0
   999   00FFFD                     STR_12:
  1000   00FFFD  7E                 	db	126
  1001   00FFFE  00                 	db	0
  1002   00FFF6                     STR_24          equ	STR_15
  1003   00FFA9                     STR_39          equ	STR_37
  1004   00FF8E                     STR_31          equ	STR_32+1
  1005   00FF95                     STR_16          equ	STR_32+8
  1006   00FF95                     STR_19          equ	STR_32+8
  1007   00FF97                     STR_23          equ	STR_32+10
  1008   00FFD8                     STR_6           equ	STR_4
  1009   00FFD8                     STR_27          equ	STR_4
  1010   00FFB4                     STR_9           equ	STR_1
  1011   00FFFF  00                 	db	0	; dummy byte at the end
  1012   00FEE8                     __smallconst    set	__pmediumconst
  1013   00FEE8                     __mediumconst   set	__pmediumconst
  1014   000002                     __activetblptr  equ	2
  1015                           
  1016                           ; #config settings
  1017                           
  1018                           	psect	cinit
  1019   001672                     __pcinit:
  1020                           	callstack 0
  1021   001672                     start_initialization:
  1022                           	callstack 0
  1023   001672                     __initialization:
  1024                           	callstack 0
  1025                           
  1026                           ; Initialize objects allocated to COMRAM (4 bytes)
  1027                           ; load TBLPTR registers with __pidataCOMRAM
  1028   001672  0E26               	movlw	low __pidataCOMRAM
  1029   001674  6EF6               	movwf	tblptrl,c
  1030   001676  0E19               	movlw	high __pidataCOMRAM
  1031   001678  6EF7               	movwf	tblptrh,c
  1032   00167A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1033   00167C  6EF8               	movwf	tblptru,c
  1034   00167E  EE00  F04F         	lfsr	0,__pdataCOMRAM
  1035   001682  EE10 F004          	lfsr	1,4
  1036   001686                     copy_data0:
  1037   001686  0009               	tblrd		*+
  1038   001688  CFF5 FFEE          	movff	tablat,postinc0
  1039   00168C  50E5               	movf	postdec1,w,c
  1040   00168E  50E1               	movf	fsr1l,w,c
  1041   001690  E1FA               	bnz	copy_data0
  1042                           
  1043                           ; Clear objects allocated to BANK0 (96 bytes)
  1044   001692  EE00  F060         	lfsr	0,__pbssBANK0
  1045   001696  0E60               	movlw	96
  1046   001698                     clear_0:
  1047   001698  6AEE               	clrf	postinc0,c
  1048   00169A  06E8               	decf	wreg,f,c
  1049   00169C  E1FD               	bnz	clear_0
  1050                           
  1051                           ; Clear objects allocated to COMRAM (24 bytes)
  1052   00169E  EE00  F037         	lfsr	0,__pbssCOMRAM
  1053   0016A2  0E18               	movlw	24
  1054   0016A4                     clear_1:
  1055   0016A4  6AEE               	clrf	postinc0,c
  1056   0016A6  06E8               	decf	wreg,f,c
  1057   0016A8  E1FD               	bnz	clear_1
  1058   0016AA                     end_of_initialization:
  1059                           	callstack 0
  1060   0016AA                     __end_of__initialization:
  1061                           	callstack 0
  1062   0016AA  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1063   0016AC  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1064   0016AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1065   0016B0  6EF8               	movwf	tblptru,c
  1066   0016B2  0100               	movlb	0
  1067   0016B4  EF7A  F00A         	goto	_main	;jump to C main() function
  1068                           
  1069                           	psect	bssCOMRAM
  1070   000037                     __pbssCOMRAM:
  1071                           	callstack 0
  1072   000037                     	ds	4
  1073   00003B                     _width:
  1074                           	callstack 0
  1075   00003B                     	ds	2
  1076   00003D                     _prec:
  1077                           	callstack 0
  1078   00003D                     	ds	2
  1079   00003F                     _air_intake_temp:
  1080                           	callstack 0
  1081   00003F                     	ds	2
  1082   000041                     _A_air_intake:
  1083                           	callstack 0
  1084   000041                     	ds	2
  1085   000043                     _RPM:
  1086                           	callstack 0
  1087   000043                     	ds	2
  1088   000045                     _B_rpm:
  1089                           	callstack 0
  1090   000045                     	ds	2
  1091   000047                     _A_rpm:
  1092                           	callstack 0
  1093   000047                     	ds	2
  1094   000049                     _result:
  1095                           	callstack 0
  1096   000049                     	ds	2
  1097   00004B                     _flags:
  1098                           	callstack 0
  1099   00004B                     	ds	1
  1100   00004C                     _message_complete:
  1101                           	callstack 0
  1102   00004C                     	ds	1
  1103   00004D                     _RX_char:
  1104                           	callstack 0
  1105   00004D                     	ds	1
  1106   00004E                     _buffer_count:
  1107                           	callstack 0
  1108   00004E                     	ds	1
  1109                           
  1110                           	psect	dataCOMRAM
  1111   00004F                     __pdataCOMRAM:
  1112                           	callstack 0
  1113   00004F                     _menu_sel:
  1114                           	callstack 0
  1115   00004F                     	ds	2
  1116   000051                     _LCD_entry_mode:
  1117                           	callstack 0
  1118   000051                     	ds	1
  1119   000052                     _LCD_display_control:
  1120                           	callstack 0
  1121   000052                     	ds	1
  1122                           
  1123                           	psect	bssBANK0
  1124   000060                     __pbssBANK0:
  1125                           	callstack 0
  1126   000060                     _dbuf:
  1127                           	callstack 0
  1128   000060                     	ds	32
  1129   000080                     _buffer:
  1130                           	callstack 0
  1131   000080                     	ds	32
  1132   0000A0                     _air_intake_string:
  1133                           	callstack 0
  1134   0000A0                     	ds	16
  1135   0000B0                     _rpm_string:
  1136                           	callstack 0
  1137   0000B0                     	ds	16
  1138                           
  1139                           	psect	cstackCOMRAM
  1140   000001                     __pcstackCOMRAM:
  1141                           	callstack 0
  1142   000001                     ??_UART_ISR:
  1143                           
  1144                           ; 1 bytes @ 0x0
  1145   000001                     	ds	2
  1146   000003                     ?_readADC:
  1147                           	callstack 0
  1148   000003                     ?___lwdiv:
  1149                           	callstack 0
  1150   000003                     ?___lwmod:
  1151                           	callstack 0
  1152   000003                     ?___lmul:
  1153                           	callstack 0
  1154   000003                     ?___aldiv:
  1155                           	callstack 0
  1156   000003                     ?___almod:
  1157                           	callstack 0
  1158   000003                     UART1_SendChar@c:
  1159                           	callstack 0
  1160   000003                     hex_char_to_value@c:
  1161                           	callstack 0
  1162   000003                     strchr@s:
  1163                           	callstack 0
  1164   000003                     ___lwdiv@dividend:
  1165                           	callstack 0
  1166   000003                     ___lwmod@dividend:
  1167                           	callstack 0
  1168   000003                     fputc@c:
  1169                           	callstack 0
  1170   000003                     ___lmul@multiplier:
  1171                           	callstack 0
  1172   000003                     ___aldiv@dividend:
  1173                           	callstack 0
  1174   000003                     ___almod@dividend:
  1175                           	callstack 0
  1176   000003                     ??_LCD_write_command:
  1177   000003                     ??_LCD_write_data:
  1178                           
  1179                           ; 1 bytes @ 0x2
  1180   000003                     	ds	1
  1181   000004                     UART1_SendString@string:
  1182                           	callstack 0
  1183   000004                     strchr@c:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x3
  1187   000004                     	ds	1
  1188   000005                     LCD_write_command@command:
  1189                           	callstack 0
  1190   000005                     LCD_write_data@data:
  1191                           	callstack 0
  1192   000005                     fputc@fp:
  1193                           	callstack 0
  1194   000005                     ___lwdiv@divisor:
  1195                           	callstack 0
  1196   000005                     ___lwmod@divisor:
  1197                           	callstack 0
  1198   000005                     ??_readADC:
  1199                           
  1200                           ; 1 bytes @ 0x4
  1201   000005                     	ds	1
  1202   000006                     LCD_cursor_set@column:
  1203                           	callstack 0
  1204   000006                     LCD_configure_cursor_blink@state:
  1205                           	callstack 0
  1206   000006                     LCD_write_string@string:
  1207                           	callstack 0
  1208   000006                     ??_LCD_clear:
  1209   000006                     ??_UART1_SendString:
  1210   000006                     ??_fputc:
  1211                           
  1212                           ; 1 bytes @ 0x5
  1213   000006                     	ds	1
  1214   000007                     LCD_cursor_set@row:
  1215                           	callstack 0
  1216   000007                     ___lwmod@counter:
  1217                           	callstack 0
  1218   000007                     ___lwdiv@quotient:
  1219                           	callstack 0
  1220   000007                     ___lmul@multiplicand:
  1221                           	callstack 0
  1222   000007                     ___aldiv@divisor:
  1223                           	callstack 0
  1224   000007                     ___almod@divisor:
  1225                           	callstack 0
  1226   000007                     ??_LCD_init:
  1227   000007                     
  1228                           ; 1 bytes @ 0x6
  1229   000007                     	ds	1
  1230   000008                     UART1_SendString@i:
  1231                           	callstack 0
  1232   000008                     ??_LCD_write_string:
  1233                           
  1234                           ; 1 bytes @ 0x7
  1235   000008                     	ds	1
  1236   000009                     ___lwdiv@counter:
  1237                           	callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x8
  1240   000009                     	ds	1
  1241   00000A                     LCD_write_string@i:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x9
  1245   00000A                     	ds	1
  1246   00000B                     ___aldiv@counter:
  1247                           	callstack 0
  1248   00000B                     ___almod@counter:
  1249                           	callstack 0
  1250   00000B                     vfpfcnvrt@fp:
  1251                           	callstack 0
  1252   00000B                     ___lmul@product:
  1253                           	callstack 0
  1254   00000B                     ??_clear_diagnostic_codes:
  1255   00000B                     ??_print_Vbatt:
  1256   00000B                     ??_print_ELMVer:
  1257   00000B                     ??_print_SAEVer:
  1258   00000B                     
  1259                           ; 1 bytes @ 0xA
  1260   00000B                     	ds	1
  1261   00000C                     ___aldiv@sign:
  1262                           	callstack 0
  1263   00000C                     ___almod@sign:
  1264                           	callstack 0
  1265   00000C                     vfpfcnvrt@fmt:
  1266                           	callstack 0
  1267   00000C                     
  1268                           ; 1 bytes @ 0xB
  1269   00000C                     	ds	1
  1270   00000D                     vfpfcnvrt@ap:
  1271                           	callstack 0
  1272   00000D                     clear_diagnostic_codes@opt_sel:
  1273                           	callstack 0
  1274   00000D                     ___aldiv@quotient:
  1275                           	callstack 0
  1276                           
  1277                           ; 4 bytes @ 0xC
  1278   00000D                     	ds	1
  1279   00000E                     ??_vfpfcnvrt:
  1280                           
  1281                           ; 1 bytes @ 0xD
  1282   00000E                     	ds	2
  1283   000010                     vfpfcnvrt@cp:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0xF
  1287   000010                     	ds	1
  1288   000011                     LCD_write_variable@variable:
  1289                           	callstack 0
  1290                           
  1291                           ; 4 bytes @ 0x10
  1292   000011                     	ds	1
  1293   000012                     vfpfcnvrt@convarg:
  1294                           	callstack 0
  1295                           
  1296                           ; 4 bytes @ 0x11
  1297   000012                     	ds	3
  1298   000015                     LCD_write_variable@left_offset:
  1299                           	callstack 0
  1300                           
  1301                           ; 1 bytes @ 0x14
  1302   000015                     	ds	1
  1303   000016                     LCD_write_variable@i:
  1304                           	callstack 0
  1305   000016                     vfpfcnvrt@c:
  1306                           	callstack 0
  1307   000016                     
  1308                           ; 1 bytes @ 0x15
  1309   000016                     	ds	1
  1310   000017                     ?_vfprintf:
  1311                           	callstack 0
  1312   000017                     LCD_write_variable@digits:
  1313                           	callstack 0
  1314   000017                     vfprintf@fp:
  1315                           	callstack 0
  1316                           
  1317                           ; 1 bytes @ 0x16
  1318   000017                     	ds	1
  1319   000018                     vfprintf@fmt:
  1320                           	callstack 0
  1321   000018                     LCD_write_variable@temp_variable:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x17
  1325   000018                     	ds	2
  1326   00001A                     vfprintf@ap:
  1327                           	callstack 0
  1328                           
  1329                           ; 1 bytes @ 0x19
  1330   00001A                     	ds	1
  1331   00001B                     vfprintf@cfmt:
  1332                           	callstack 0
  1333   00001B                     
  1334                           ; 1 bytes @ 0x1A
  1335   00001B                     	ds	1
  1336   00001C                     ??_welcome_splash:
  1337                           
  1338                           ; 1 bytes @ 0x1B
  1339   00001C                     	ds	1
  1340   00001D                     ?_sprintf:
  1341                           	callstack 0
  1342   00001D                     sprintf@s:
  1343                           	callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x1C
  1346   00001D                     	ds	1
  1347   00001E                     welcome_splash@plug_flag:
  1348                           	callstack 0
  1349   00001E                     sprintf@fmt:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x1D
  1353   00001E                     	ds	2
  1354   000020                     welcome_splash@CCP1IF_counter:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x1F
  1358   000020                     	ds	2
  1359   000022                     sprintf@ap:
  1360                           	callstack 0
  1361   000022                     
  1362                           ; 1 bytes @ 0x21
  1363   000022                     	ds	1
  1364   000023                     sprintf@f:
  1365                           	callstack 0
  1366                           
  1367                           ; 11 bytes @ 0x22
  1368   000023                     	ds	11
  1369   00002E                     ??_print_RPM:
  1370   00002E                     ??_print_AI_Temp:
  1371                           
  1372                           ; 1 bytes @ 0x2D
  1373   00002E                     	ds	3
  1374   000031                     ??_live_reading_mode:
  1375                           
  1376                           ; 1 bytes @ 0x30
  1377   000031                     	ds	2
  1378   000033                     ??_main_menu:
  1379                           
  1380                           ; 1 bytes @ 0x32
  1381   000033                     	ds	2
  1382   000035                     ??_main:
  1383                           
  1384                           ; 1 bytes @ 0x34
  1385   000035                     	ds	2
  1386                           
  1387 ;;
  1388 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1389 ;;
  1390 ;; *************** function _main *****************
  1391 ;; Defined at:
  1392 ;;		line 69 in file "OBCII_PIC18F46K22.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;Total ram usage:        2 bytes
  1411 ;; Hardware stack levels required when called: 9
  1412 ;; This function calls:
  1413 ;;		_ADC_init
  1414 ;;		_LCD_clear
  1415 ;;		_LCD_init
  1416 ;;		_UART1_Init
  1417 ;;		_UART1_SendString
  1418 ;;		_input_init
  1419 ;;		_main_menu
  1420 ;;		_welcome_splash
  1421 ;; This function is called by:
  1422 ;;		Startup code after reset
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text0
  1427   0014F4                     __ptext0:
  1428                           	callstack 0
  1429   0014F4                     _main:
  1430                           	callstack 22
  1431   0014F4                     
  1432                           ;OBCII_PIC18F46K22.c: 72:     OSCCON = 0b01110000;
  1433   0014F4  0E70               	movlw	112
  1434   0014F6  6ED3               	movwf	211,c	;volatile
  1435   0014F8                     
  1436                           ;OBCII_PIC18F46K22.c: 76:     LCD_init();
  1437   0014F8  EC90  F009         	call	_LCD_init	;wreg free
  1438   0014FC                     
  1439                           ;OBCII_PIC18F46K22.c: 77:     LCD_clear();
  1440   0014FC  EC3D  F00C         	call	_LCD_clear	;wreg free
  1441   001500                     
  1442                           ;OBCII_PIC18F46K22.c: 78:     input_init();
  1443   001500  EC7F  F00C         	call	_input_init	;wreg free
  1444                           
  1445                           ;OBCII_PIC18F46K22.c: 79:     ADC_init();
  1446   001504  EC8D  F00C         	call	_ADC_init	;wreg free
  1447                           
  1448                           ;OBCII_PIC18F46K22.c: 80:     UART1_Init();
  1449   001508  EC03  F00C         	call	_UART1_Init	;wreg free
  1450   00150C                     
  1451                           ;OBCII_PIC18F46K22.c: 82:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  1452   00150C  0E29               	movlw	41
  1453   00150E  6E36               	movwf	(??_main+1)^0,c
  1454   001510  0E96               	movlw	150
  1455   001512  6E35               	movwf	??_main^0,c
  1456   001514  0E7F               	movlw	127
  1457   001516                     u2437:
  1458   001516  2EE8               	decfsz	wreg,f,c
  1459   001518  D7FE               	bra	u2437
  1460   00151A  2E35               	decfsz	??_main^0,f,c
  1461   00151C  D7FC               	bra	u2437
  1462   00151E  2E36               	decfsz	(??_main+1)^0,f,c
  1463   001520  D7FA               	bra	u2437
  1464   001522  0000               	nop	
  1465   001524                     
  1466                           ;OBCII_PIC18F46K22.c: 83:     UART1_SendString("ATE0\r");
  1467   001524  0EB4               	movlw	low STR_1
  1468   001526  6E04               	movwf	UART1_SendString@string^0,c
  1469   001528  0EFF               	movlw	high STR_1
  1470   00152A  6E05               	movwf	(UART1_SendString@string+1)^0,c
  1471   00152C  EC0E  F00B         	call	_UART1_SendString	;wreg free
  1472   001530                     
  1473                           ;OBCII_PIC18F46K22.c: 84:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1474   001530  0E02               	movlw	2
  1475   001532  6E36               	movwf	(??_main+1)^0,c
  1476   001534  0E04               	movlw	4
  1477   001536  6E35               	movwf	??_main^0,c
  1478   001538  0EBA               	movlw	186
  1479   00153A                     u2447:
  1480   00153A  2EE8               	decfsz	wreg,f,c
  1481   00153C  D7FE               	bra	u2447
  1482   00153E  2E35               	decfsz	??_main^0,f,c
  1483   001540  D7FC               	bra	u2447
  1484   001542  2E36               	decfsz	(??_main+1)^0,f,c
  1485   001544  D7FA               	bra	u2447
  1486   001546  D000               	nop2	
  1487   001548                     l3194:
  1488                           
  1489                           ;OBCII_PIC18F46K22.c: 87:                 welcome_splash();
  1490   001548  EC7C  F002         	call	_welcome_splash	;wreg free
  1491   00154C                     
  1492                           ;OBCII_PIC18F46K22.c: 88:                 main_menu();
  1493   00154C  EC6B  F000         	call	_main_menu	;wreg free
  1494   001550  EFA4  F00A         	goto	l3194
  1495   001554  EF69  F000         	goto	start
  1496   001558                     __end_of_main:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function _welcome_splash *****************
  1500 ;; Defined at:
  1501 ;;		line 214 in file "OBCII_PIC18F46K22.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  CCP1IF_count    2   31[COMRAM] volatile unsigned int 
  1506 ;;  plug_flag       2   29[COMRAM] volatile int 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;Total ram usage:        6 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 4
  1523 ;; This function calls:
  1524 ;;		_LCD_clear
  1525 ;;		_LCD_cursor_set
  1526 ;;		_LCD_write_string
  1527 ;;		_LCD_write_variable
  1528 ;;		_UART1_SendString
  1529 ;;		___lwdiv
  1530 ;;		___lwmod
  1531 ;;		_ccp1_init
  1532 ;;		_tmr1_init
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text1
  1539   0004F8                     __ptext1:
  1540                           	callstack 0
  1541   0004F8                     _welcome_splash:
  1542                           	callstack 26
  1543   0004F8                     
  1544                           ;OBCII_PIC18F46K22.c: 215:     volatile int plug_flag = 0;
  1545   0004F8  0E00               	movlw	0
  1546   0004FA  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  1547   0004FC  0E00               	movlw	0
  1548   0004FE  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  1549                           
  1550                           ;OBCII_PIC18F46K22.c: 216:     volatile unsigned int CCP1IF_counter = 0;
  1551   000500  0E00               	movlw	0
  1552   000502  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  1553   000504  0E00               	movlw	0
  1554   000506  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  1555   000508                     
  1556                           ;OBCII_PIC18F46K22.c: 219:     LCD_clear();
  1557   000508  EC3D  F00C         	call	_LCD_clear	;wreg free
  1558   00050C                     
  1559                           ;OBCII_PIC18F46K22.c: 220:     LCD_cursor_set(1, 1);
  1560   00050C  0E01               	movlw	1
  1561   00050E  6E06               	movwf	LCD_cursor_set@column^0,c
  1562   000510  0E01               	movlw	1
  1563   000512  ECDE  F00A         	call	_LCD_cursor_set
  1564   000516                     
  1565                           ;OBCII_PIC18F46K22.c: 221:     LCD_write_string(">>> OBDIIPIC <<<");
  1566   000516  0EFA               	movlw	low STR_2
  1567   000518  6E06               	movwf	LCD_write_string@string^0,c
  1568   00051A  0EFE               	movlw	high STR_2
  1569   00051C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1570   00051E  ECCE  F009         	call	_LCD_write_string	;wreg free
  1571   000522                     
  1572                           ;OBCII_PIC18F46K22.c: 222:     LCD_cursor_set(2, 1);
  1573   000522  0E01               	movlw	1
  1574   000524  6E06               	movwf	LCD_cursor_set@column^0,c
  1575   000526  0E02               	movlw	2
  1576   000528  ECDE  F00A         	call	_LCD_cursor_set
  1577   00052C                     
  1578                           ;OBCII_PIC18F46K22.c: 223:     LCD_write_string(">>>> V1.0 <<<<");
  1579   00052C  0E6F               	movlw	low STR_3
  1580   00052E  6E06               	movwf	LCD_write_string@string^0,c
  1581   000530  0EFF               	movlw	high STR_3
  1582   000532  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1583   000534  ECCE  F009         	call	_LCD_write_string	;wreg free
  1584   000538                     
  1585                           ;OBCII_PIC18F46K22.c: 225:     ccp1_init();
  1586   000538  EC6E  F00C         	call	_ccp1_init	;wreg free
  1587   00053C                     
  1588                           ;OBCII_PIC18F46K22.c: 226:     tmr1_init();
  1589   00053C  EC77  F00C         	call	_tmr1_init	;wreg free
  1590   000540                     
  1591                           ;OBCII_PIC18F46K22.c: 228:     CCP1IF_counter = 0;
  1592   000540  0E00               	movlw	0
  1593   000542  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  1594   000544  0E00               	movlw	0
  1595   000546  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  1596   000548                     
  1597                           ;OBCII_PIC18F46K22.c: 229:     plug_flag = 0;
  1598   000548  0E00               	movlw	0
  1599   00054A  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  1600   00054C  0E00               	movlw	0
  1601   00054E  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  1602   000550                     l3016:
  1603                           
  1604                           ;OBCII_PIC18F46K22.c: 232:         if (PIR1bits.CCP1IF) {
  1605   000550  A49E               	btfss	158,2,c	;volatile
  1606   000552  EFAD  F002         	goto	u2061
  1607   000556  EFAF  F002         	goto	u2060
  1608   00055A                     u2061:
  1609   00055A  EFE5  F002         	goto	l3030
  1610   00055E                     u2060:
  1611   00055E                     
  1612                           ;OBCII_PIC18F46K22.c: 233:             PIR1bits.CCP1IF = 0;
  1613   00055E  949E               	bcf	158,2,c	;volatile
  1614                           
  1615                           ;OBCII_PIC18F46K22.c: 234:             T1CONbits.TMR1ON = 1;
  1616   000560  80CD               	bsf	205,0,c	;volatile
  1617   000562                     
  1618                           ;OBCII_PIC18F46K22.c: 235:             CCP1IF_counter++;
  1619   000562  4A20               	infsnz	welcome_splash@CCP1IF_counter^0,f,c	;volatile
  1620   000564  2A21               	incf	(welcome_splash@CCP1IF_counter+1)^0,f,c	;volatile
  1621   000566                     
  1622                           ;OBCII_PIC18F46K22.c: 237:             LCD_cursor_set(2, 16);
  1623   000566  0E10               	movlw	16
  1624   000568  6E06               	movwf	LCD_cursor_set@column^0,c
  1625   00056A  0E02               	movlw	2
  1626   00056C  ECDE  F00A         	call	_LCD_cursor_set
  1627   000570                     
  1628                           ;OBCII_PIC18F46K22.c: 238:             LCD_write_variable((CCP1IF_counter) / 10, 1);
  1629   000570  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwdiv@dividend	;volatile
  1630   000574  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwdiv@dividend+1	;volatile
  1631   000578  0E00               	movlw	0
  1632   00057A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1633   00057C  0E0A               	movlw	10
  1634   00057E  6E05               	movwf	___lwdiv@divisor^0,c
  1635   000580  EC0B  F00A         	call	___lwdiv	;wreg free
  1636   000584  C003  F011         	movff	?___lwdiv,LCD_write_variable@variable
  1637   000588  C004  F012         	movff	?___lwdiv+1,LCD_write_variable@variable+1
  1638   00058C  6A13               	clrf	(LCD_write_variable@variable+2)^0,c
  1639   00058E  6A14               	clrf	(LCD_write_variable@variable+3)^0,c
  1640   000590  0E01               	movlw	1
  1641   000592  6E15               	movwf	LCD_write_variable@left_offset^0,c
  1642   000594  EC26  F004         	call	_LCD_write_variable	;wreg free
  1643   000598                     
  1644                           ;OBCII_PIC18F46K22.c: 241:             if (CCP1IF_counter % 10 == 0) {
  1645   000598  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwmod@dividend	;volatile
  1646   00059C  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwmod@dividend+1	;volatile
  1647   0005A0  0E00               	movlw	0
  1648   0005A2  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1649   0005A4  0E0A               	movlw	10
  1650   0005A6  6E05               	movwf	___lwmod@divisor^0,c
  1651   0005A8  ECAC  F00A         	call	___lwmod	;wreg free
  1652   0005AC  5003               	movf	?___lwmod^0,w,c
  1653   0005AE  1004               	iorwf	(?___lwmod+1)^0,w,c
  1654   0005B0  A4D8               	btfss	status,2,c
  1655   0005B2  EFDD  F002         	goto	u2071
  1656   0005B6  EFDF  F002         	goto	u2070
  1657   0005BA                     u2071:
  1658   0005BA  EFE5  F002         	goto	l3030
  1659   0005BE                     u2070:
  1660   0005BE                     
  1661                           ;OBCII_PIC18F46K22.c: 242:                 UART1_SendString("ATI\r");
  1662   0005BE  0ED8               	movlw	low STR_4
  1663   0005C0  6E04               	movwf	UART1_SendString@string^0,c
  1664   0005C2  0EFF               	movlw	high STR_4
  1665   0005C4  6E05               	movwf	(UART1_SendString@string+1)^0,c
  1666   0005C6  EC0E  F00B         	call	_UART1_SendString	;wreg free
  1667   0005CA                     l3030:
  1668                           
  1669                           ;OBCII_PIC18F46K22.c: 247:         if (message_complete) {
  1670   0005CA  504C               	movf	_message_complete^0,w,c	;volatile
  1671   0005CC  B4D8               	btfsc	status,2,c
  1672   0005CE  EFEB  F002         	goto	u2081
  1673   0005D2  EFED  F002         	goto	u2080
  1674   0005D6                     u2081:
  1675   0005D6  EFF3  F002         	goto	l3038
  1676   0005DA                     u2080:
  1677   0005DA                     
  1678                           ;OBCII_PIC18F46K22.c: 248:             plug_flag = 1;
  1679   0005DA  0E00               	movlw	0
  1680   0005DC  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  1681   0005DE  0E01               	movlw	1
  1682   0005E0  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  1683   0005E2                     
  1684                           ;OBCII_PIC18F46K22.c: 249:             buffer_count = 0;
  1685   0005E2  6A4E               	clrf	_buffer_count^0,c
  1686   0005E4                     
  1687                           ;OBCII_PIC18F46K22.c: 250:             message_complete = 0;
  1688   0005E4  6A4C               	clrf	_message_complete^0,c	;volatile
  1689   0005E6                     l3038:
  1690                           
  1691                           ;OBCII_PIC18F46K22.c: 254:         if (plug_flag) {
  1692   0005E6  501E               	movf	welcome_splash@plug_flag^0,w,c	;volatile
  1693   0005E8  101F               	iorwf	(welcome_splash@plug_flag+1)^0,w,c	;volatile
  1694   0005EA  B4D8               	btfsc	status,2,c
  1695   0005EC  EFFA  F002         	goto	u2091
  1696   0005F0  EFFC  F002         	goto	u2090
  1697   0005F4                     u2091:
  1698   0005F4  EF09  F003         	goto	l3044
  1699   0005F8                     u2090:
  1700   0005F8                     
  1701                           ;OBCII_PIC18F46K22.c: 255:             if (CCP1IF_counter >= 4 * 10) {
  1702   0005F8  5021               	movf	(welcome_splash@CCP1IF_counter+1)^0,w,c	;volatile
  1703   0005FA  E109               	bnz	u2100
  1704   0005FC  0E28               	movlw	40
  1705   0005FE  5C20               	subwf	welcome_splash@CCP1IF_counter^0,w,c	;volatile
  1706   000600  A0D8               	btfss	status,0,c
  1707   000602  EF05  F003         	goto	u2101
  1708   000606  EF07  F003         	goto	u2100
  1709   00060A                     u2101:
  1710   00060A  EFA8  F002         	goto	l3016
  1711   00060E                     u2100:
  1712   00060E  EF2C  F003         	goto	l3054
  1713   000612                     l3044:
  1714                           
  1715                           ;OBCII_PIC18F46K22.c: 261:             CCP1IF_counter = 0;
  1716   000612  0E00               	movlw	0
  1717   000614  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  1718   000616  0E00               	movlw	0
  1719   000618  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  1720   00061A                     
  1721                           ;OBCII_PIC18F46K22.c: 262:             LCD_cursor_set(2, 1);
  1722   00061A  0E01               	movlw	1
  1723   00061C  6E06               	movwf	LCD_cursor_set@column^0,c
  1724   00061E  0E02               	movlw	2
  1725   000620  ECDE  F00A         	call	_LCD_cursor_set
  1726   000624                     
  1727                           ;OBCII_PIC18F46K22.c: 263:             LCD_write_string("OBDII Not Found ");
  1728   000624  0EE9               	movlw	low STR_5
  1729   000626  6E06               	movwf	LCD_write_string@string^0,c
  1730   000628  0EFE               	movlw	high STR_5
  1731   00062A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1732   00062C  ECCE  F009         	call	_LCD_write_string	;wreg free
  1733   000630                     
  1734                           ;OBCII_PIC18F46K22.c: 264:             UART1_SendString("ATI\r");
  1735   000630  0ED8               	movlw	low STR_4
  1736   000632  6E04               	movwf	UART1_SendString@string^0,c
  1737   000634  0EFF               	movlw	high STR_4
  1738   000636  6E05               	movwf	(UART1_SendString@string+1)^0,c
  1739   000638  EC0E  F00B         	call	_UART1_SendString	;wreg free
  1740   00063C                     
  1741                           ;OBCII_PIC18F46K22.c: 265:             _delay((unsigned long)((50)*(16000000/4000.0)));
  1742   00063C  0E02               	movlw	2
  1743   00063E  6E1D               	movwf	(??_welcome_splash+1)^0,c
  1744   000640  0E04               	movlw	4
  1745   000642  6E1C               	movwf	??_welcome_splash^0,c
  1746   000644  0EBA               	movlw	186
  1747   000646                     u2457:
  1748   000646  2EE8               	decfsz	wreg,f,c
  1749   000648  D7FE               	bra	u2457
  1750   00064A  2E1C               	decfsz	??_welcome_splash^0,f,c
  1751   00064C  D7FC               	bra	u2457
  1752   00064E  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  1753   000650  D7FA               	bra	u2457
  1754   000652  D000               	nop2	
  1755   000654  EFA8  F002         	goto	l3016
  1756   000658                     l3054:
  1757                           
  1758                           ;OBCII_PIC18F46K22.c: 270:     LCD_clear();
  1759   000658  EC3D  F00C         	call	_LCD_clear	;wreg free
  1760                           
  1761                           ;OBCII_PIC18F46K22.c: 271:     LCD_cursor_set(1, 1);
  1762   00065C  0E01               	movlw	1
  1763   00065E  6E06               	movwf	LCD_cursor_set@column^0,c
  1764   000660  0E01               	movlw	1
  1765   000662  ECDE  F00A         	call	_LCD_cursor_set
  1766   000666                     
  1767                           ;OBCII_PIC18F46K22.c: 272:     LCD_write_string("<OBDII Detected>");
  1768   000666  0E3E               	movlw	low STR_7
  1769   000668  6E06               	movwf	LCD_write_string@string^0,c
  1770   00066A  0EFF               	movlw	high STR_7
  1771   00066C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1772   00066E  ECCE  F009         	call	_LCD_write_string	;wreg free
  1773   000672                     
  1774                           ;OBCII_PIC18F46K22.c: 273:     LCD_cursor_set(2,1);
  1775   000672  0E01               	movlw	1
  1776   000674  6E06               	movwf	LCD_cursor_set@column^0,c
  1777   000676  0E02               	movlw	2
  1778   000678  ECDE  F00A         	call	_LCD_cursor_set
  1779                           
  1780                           ;OBCII_PIC18F46K22.c: 274:     LCD_write_string("================");
  1781   00067C  0E1C               	movlw	low STR_8
  1782   00067E  6E06               	movwf	LCD_write_string@string^0,c
  1783   000680  0EFF               	movlw	high STR_8
  1784   000682  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1785   000684  ECCE  F009         	call	_LCD_write_string	;wreg free
  1786   000688                     
  1787                           ;OBCII_PIC18F46K22.c: 275:     _delay((unsigned long)((2 * 2000)*(16000000/4000.0)));
  1788   000688  0E52               	movlw	82
  1789   00068A  6E1D               	movwf	(??_welcome_splash+1)^0,c
  1790   00068C  0E2B               	movlw	43
  1791   00068E  6E1C               	movwf	??_welcome_splash^0,c
  1792   000690  0E00               	movlw	0
  1793   000692                     u2467:
  1794   000692  2EE8               	decfsz	wreg,f,c
  1795   000694  D7FE               	bra	u2467
  1796   000696  2E1C               	decfsz	??_welcome_splash^0,f,c
  1797   000698  D7FC               	bra	u2467
  1798   00069A  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  1799   00069C  D7FA               	bra	u2467
  1800   00069E  D000               	nop2	
  1801   0006A0                     
  1802                           ;OBCII_PIC18F46K22.c: 277:     UART1_SendString("ATE0\r");
  1803   0006A0  0EB4               	movlw	low STR_1
  1804   0006A2  6E04               	movwf	UART1_SendString@string^0,c
  1805   0006A4  0EFF               	movlw	high STR_1
  1806   0006A6  6E05               	movwf	(UART1_SendString@string+1)^0,c
  1807   0006A8  EC0E  F00B         	call	_UART1_SendString	;wreg free
  1808   0006AC                     
  1809                           ;OBCII_PIC18F46K22.c: 278:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1810   0006AC  0E02               	movlw	2
  1811   0006AE  6E1D               	movwf	(??_welcome_splash+1)^0,c
  1812   0006B0  0E04               	movlw	4
  1813   0006B2  6E1C               	movwf	??_welcome_splash^0,c
  1814   0006B4  0EBA               	movlw	186
  1815   0006B6                     u2477:
  1816   0006B6  2EE8               	decfsz	wreg,f,c
  1817   0006B8  D7FE               	bra	u2477
  1818   0006BA  2E1C               	decfsz	??_welcome_splash^0,f,c
  1819   0006BC  D7FC               	bra	u2477
  1820   0006BE  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  1821   0006C0  D7FA               	bra	u2477
  1822   0006C2  D000               	nop2	
  1823   0006C4  0012               	return		;funcret
  1824   0006C6                     __end_of_welcome_splash:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _tmr1_init *****************
  1828 ;; Defined at:
  1829 ;;		line 203 in file "OBCII_PIC18F46K22.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		None
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_welcome_splash
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text2
  1858   0018EE                     __ptext2:
  1859                           	callstack 0
  1860   0018EE                     _tmr1_init:
  1861                           	callstack 28
  1862   0018EE                     
  1863                           ;OBCII_PIC18F46K22.c: 205:     T1CONbits.T1CKPS1 = 1;
  1864   0018EE  8ACD               	bsf	205,5,c	;volatile
  1865                           
  1866                           ;OBCII_PIC18F46K22.c: 206:     T1CONbits.T1CKPS0 = 1;
  1867   0018F0  88CD               	bsf	205,4,c	;volatile
  1868                           
  1869                           ;OBCII_PIC18F46K22.c: 207:     T1CONbits.T1OSCEN = 0;
  1870   0018F2  96CD               	bcf	205,3,c	;volatile
  1871                           
  1872                           ;OBCII_PIC18F46K22.c: 208:     T1CONbits.T1SYNC = 1;
  1873   0018F4  84CD               	bsf	205,2,c	;volatile
  1874                           
  1875                           ;OBCII_PIC18F46K22.c: 209:     T1CONbits.TMR1CS1 = 0;
  1876   0018F6  9ECD               	bcf	205,7,c	;volatile
  1877                           
  1878                           ;OBCII_PIC18F46K22.c: 210:     T1CONbits.TMR1CS0 = 0;
  1879   0018F8  9CCD               	bcf	205,6,c	;volatile
  1880                           
  1881                           ;OBCII_PIC18F46K22.c: 211:     T1CONbits.TMR1ON = 1;
  1882   0018FA  80CD               	bsf	205,0,c	;volatile
  1883   0018FC  0012               	return		;funcret
  1884   0018FE                     __end_of_tmr1_init:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _ccp1_init *****************
  1888 ;; Defined at:
  1889 ;;		line 190 in file "OBCII_PIC18F46K22.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_welcome_splash
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text3
  1918   0018DC                     __ptext3:
  1919                           	callstack 0
  1920   0018DC                     _ccp1_init:
  1921                           	callstack 28
  1922   0018DC                     
  1923                           ;OBCII_PIC18F46K22.c: 191:     CCP1CONbits.CCP1M3 = 1;
  1924   0018DC  86BD               	bsf	189,3,c	;volatile
  1925                           
  1926                           ;OBCII_PIC18F46K22.c: 192:     CCP1CONbits.CCP1M2 = 0;
  1927   0018DE  94BD               	bcf	189,2,c	;volatile
  1928                           
  1929                           ;OBCII_PIC18F46K22.c: 193:     CCP1CONbits.CCP1M1 = 1;
  1930   0018E0  82BD               	bsf	189,1,c	;volatile
  1931                           
  1932                           ;OBCII_PIC18F46K22.c: 194:     CCP1CONbits.CCP1M0 = 1;
  1933   0018E2  80BD               	bsf	189,0,c	;volatile
  1934   0018E4                     
  1935                           ;OBCII_PIC18F46K22.c: 198:     CCPR1H = 195;
  1936   0018E4  0EC3               	movlw	195
  1937   0018E6  6EBF               	movwf	191,c	;volatile
  1938                           
  1939                           ;OBCII_PIC18F46K22.c: 199:     CCPR1L = 80;
  1940   0018E8  0E50               	movlw	80
  1941   0018EA  6EBE               	movwf	190,c	;volatile
  1942   0018EC  0012               	return		;funcret
  1943   0018EE                     __end_of_ccp1_init:
  1944                           	callstack 0
  1945                           
  1946 ;; *************** function _LCD_write_variable *****************
  1947 ;; Defined at:
  1948 ;;		line 392 in file "LCD.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  variable        4   16[COMRAM] long 
  1951 ;;  left_offset     1   20[COMRAM] unsigned char 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  i               1   21[COMRAM] unsigned char 
  1954 ;;  temp_variabl    4   23[COMRAM] long 
  1955 ;;  digits          1   22[COMRAM] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1965 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;Total ram usage:       11 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 3
  1972 ;; This function calls:
  1973 ;;		_LCD_write_data
  1974 ;;		___aldiv
  1975 ;;		___almod
  1976 ;;		___lmul
  1977 ;; This function is called by:
  1978 ;;		_welcome_splash
  1979 ;;		_LCD_write_float
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text4
  1984   00084C                     __ptext4:
  1985                           	callstack 0
  1986   00084C                     _LCD_write_variable:
  1987                           	callstack 26
  1988   00084C                     
  1989                           ;LCD.c: 394:     int32_t temp_variable;;LCD.c: 395:     uint8_t digits = 0;
  1990   00084C  6A17               	clrf	LCD_write_variable@digits^0,c
  1991   00084E                     
  1992                           ;LCD.c: 398:     if(variable < 0) variable *= -1;
  1993   00084E  BE14               	btfsc	(LCD_write_variable@variable+3)^0,7,c
  1994   000850  EF2E  F004         	goto	u1930
  1995   000854  EF2C  F004         	goto	u1931
  1996   000858                     u1931:
  1997   000858  EF48  F004         	goto	l2824
  1998   00085C                     u1930:
  1999   00085C  C011  F003         	movff	LCD_write_variable@variable,___lmul@multiplier
  2000   000860  C012  F004         	movff	LCD_write_variable@variable+1,___lmul@multiplier+1
  2001   000864  C013  F005         	movff	LCD_write_variable@variable+2,___lmul@multiplier+2
  2002   000868  C014  F006         	movff	LCD_write_variable@variable+3,___lmul@multiplier+3
  2003   00086C  0EFF               	movlw	255
  2004   00086E  6E07               	movwf	___lmul@multiplicand^0,c
  2005   000870  0EFF               	movlw	255
  2006   000872  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  2007   000874  0EFF               	movlw	255
  2008   000876  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  2009   000878  0EFF               	movlw	255
  2010   00087A  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  2011   00087C  EC45  F00A         	call	___lmul	;wreg free
  2012   000880  C003  F011         	movff	?___lmul,LCD_write_variable@variable
  2013   000884  C004  F012         	movff	?___lmul+1,LCD_write_variable@variable+1
  2014   000888  C005  F013         	movff	?___lmul+2,LCD_write_variable@variable+2
  2015   00088C  C006  F014         	movff	?___lmul+3,LCD_write_variable@variable+3
  2016   000890                     l2824:
  2017                           
  2018                           ;LCD.c: 401:     temp_variable = variable;
  2019   000890  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2020   000894  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2021   000898  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2022   00089C  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2023   0008A0                     l2826:
  2024                           
  2025                           ;LCD.c: 403:         digits++;
  2026   0008A0  2A17               	incf	LCD_write_variable@digits^0,f,c
  2027   0008A2                     
  2028                           ;LCD.c: 404:         if(temp_variable < 10) break;
  2029   0008A2  BE1B               	btfsc	(LCD_write_variable@temp_variable+3)^0,7,c
  2030   0008A4  EF61  F004         	goto	u1940
  2031   0008A8  501B               	movf	(LCD_write_variable@temp_variable+3)^0,w,c
  2032   0008AA  101A               	iorwf	(LCD_write_variable@temp_variable+2)^0,w,c
  2033   0008AC  1019               	iorwf	(LCD_write_variable@temp_variable+1)^0,w,c
  2034   0008AE  E107               	bnz	u1941
  2035   0008B0  0E0A               	movlw	10
  2036   0008B2  5C18               	subwf	LCD_write_variable@temp_variable^0,w,c
  2037   0008B4  B0D8               	btfsc	status,0,c
  2038   0008B6  EF5F  F004         	goto	u1941
  2039   0008BA  EF61  F004         	goto	u1940
  2040   0008BE                     u1941:
  2041   0008BE  EF63  F004         	goto	l2832
  2042   0008C2                     u1940:
  2043   0008C2  EF7F  F004         	goto	l2834
  2044   0008C6                     l2832:
  2045                           
  2046                           ;LCD.c: 405:         temp_variable /= 10;
  2047   0008C6  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2048   0008CA  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2049   0008CE  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2050   0008D2  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2051   0008D6  0E0A               	movlw	10
  2052   0008D8  6E07               	movwf	___aldiv@divisor^0,c
  2053   0008DA  0E00               	movlw	0
  2054   0008DC  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2055   0008DE  0E00               	movlw	0
  2056   0008E0  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2057   0008E2  0E00               	movlw	0
  2058   0008E4  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2059   0008E6  EC0F  F006         	call	___aldiv	;wreg free
  2060   0008EA  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2061   0008EE  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2062   0008F2  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2063   0008F6  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2064   0008FA  EF50  F004         	goto	l2826
  2065   0008FE                     l2834:
  2066                           
  2067                           ;LCD.c: 410:         if(left_offset <= digits) break;
  2068   0008FE  5015               	movf	LCD_write_variable@left_offset^0,w,c
  2069   000900  5C17               	subwf	LCD_write_variable@digits^0,w,c
  2070   000902  A0D8               	btfss	status,0,c
  2071   000904  EF86  F004         	goto	u1951
  2072   000908  EF88  F004         	goto	u1950
  2073   00090C                     u1951:
  2074   00090C  EF8A  F004         	goto	l2838
  2075   000910                     u1950:
  2076   000910  EF90  F004         	goto	l419
  2077   000914                     l2838:
  2078                           
  2079                           ;LCD.c: 411:         LCD_write_data(' ');
  2080   000914  0E20               	movlw	32
  2081   000916  EC94  F006         	call	_LCD_write_data
  2082   00091A                     
  2083                           ;LCD.c: 412:         left_offset--;
  2084   00091A  0615               	decf	LCD_write_variable@left_offset^0,f,c
  2085   00091C  EF7F  F004         	goto	l2834
  2086   000920                     l419:
  2087                           
  2088                           ;LCD.c: 417:         temp_variable = variable;
  2089   000920  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2090   000924  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2091   000928  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2092   00092C  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2093   000930                     
  2094                           ;LCD.c: 418:         for(uint8_t i = 1 ; i < digits ; i++){
  2095   000930  0E01               	movlw	1
  2096   000932  6E16               	movwf	LCD_write_variable@i^0,c
  2097   000934  EFB7  F004         	goto	l2848
  2098   000938                     l2844:
  2099                           
  2100                           ;LCD.c: 419:             temp_variable /= 10;
  2101   000938  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2102   00093C  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2103   000940  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2104   000944  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2105   000948  0E0A               	movlw	10
  2106   00094A  6E07               	movwf	___aldiv@divisor^0,c
  2107   00094C  0E00               	movlw	0
  2108   00094E  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2109   000950  0E00               	movlw	0
  2110   000952  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2111   000954  0E00               	movlw	0
  2112   000956  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2113   000958  EC0F  F006         	call	___aldiv	;wreg free
  2114   00095C  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2115   000960  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2116   000964  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2117   000968  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2118   00096C                     
  2119                           ;LCD.c: 420:         }
  2120   00096C  2A16               	incf	LCD_write_variable@i^0,f,c
  2121   00096E                     l2848:
  2122   00096E  5017               	movf	LCD_write_variable@digits^0,w,c
  2123   000970  5C16               	subwf	LCD_write_variable@i^0,w,c
  2124   000972  A0D8               	btfss	status,0,c
  2125   000974  EFBE  F004         	goto	u1961
  2126   000978  EFC0  F004         	goto	u1960
  2127   00097C                     u1961:
  2128   00097C  EF9C  F004         	goto	l2844
  2129   000980                     u1960:
  2130   000980                     
  2131                           ;LCD.c: 421:         LCD_write_data( (temp_variable%10) + '0' );
  2132   000980  C018  F003         	movff	LCD_write_variable@temp_variable,___almod@dividend
  2133   000984  C019  F004         	movff	LCD_write_variable@temp_variable+1,___almod@dividend+1
  2134   000988  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___almod@dividend+2
  2135   00098C  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___almod@dividend+3
  2136   000990  0E0A               	movlw	10
  2137   000992  6E07               	movwf	___almod@divisor^0,c
  2138   000994  0E00               	movlw	0
  2139   000996  6E08               	movwf	(___almod@divisor+1)^0,c
  2140   000998  0E00               	movlw	0
  2141   00099A  6E09               	movwf	(___almod@divisor+2)^0,c
  2142   00099C  0E00               	movlw	0
  2143   00099E  6E0A               	movwf	(___almod@divisor+3)^0,c
  2144   0009A0  EC90  F007         	call	___almod	;wreg free
  2145   0009A4  5003               	movf	?___almod^0,w,c
  2146   0009A6  0F30               	addlw	48
  2147   0009A8  EC94  F006         	call	_LCD_write_data
  2148   0009AC                     
  2149                           ;LCD.c: 422:         digits --;
  2150   0009AC  0617               	decf	LCD_write_variable@digits^0,f,c
  2151   0009AE                     
  2152                           ;LCD.c: 423:         if(digits == 0) break;
  2153   0009AE  5017               	movf	LCD_write_variable@digits^0,w,c
  2154   0009B0  A4D8               	btfss	status,2,c
  2155   0009B2  EFDD  F004         	goto	u1971
  2156   0009B6  EFDF  F004         	goto	u1970
  2157   0009BA                     u1971:
  2158   0009BA  EF90  F004         	goto	l419
  2159   0009BE                     u1970:
  2160   0009BE  0012               	return		;funcret
  2161   0009C0                     __end_of_LCD_write_variable:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function ___lmul *****************
  2165 ;; Defined at:
  2166 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  multiplier      4    2[COMRAM] unsigned long 
  2169 ;;  multiplicand    4    6[COMRAM] unsigned long 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  product         4   10[COMRAM] unsigned long 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  4    2[COMRAM] unsigned long 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2181 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;Total ram usage:       12 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_LCD_write_variable
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text5
  2196   00148A                     __ptext5:
  2197                           	callstack 0
  2198   00148A                     ___lmul:
  2199                           	callstack 27
  2200   00148A  0E00               	movlw	0
  2201   00148C  6E0B               	movwf	___lmul@product^0,c
  2202   00148E  0E00               	movlw	0
  2203   001490  6E0C               	movwf	(___lmul@product+1)^0,c
  2204   001492  0E00               	movlw	0
  2205   001494  6E0D               	movwf	(___lmul@product+2)^0,c
  2206   001496  0E00               	movlw	0
  2207   001498  6E0E               	movwf	(___lmul@product+3)^0,c
  2208   00149A                     l2730:
  2209   00149A  A003               	btfss	___lmul@multiplier^0,0,c
  2210   00149C  EF52  F00A         	goto	u1791
  2211   0014A0  EF54  F00A         	goto	u1790
  2212   0014A4                     u1791:
  2213   0014A4  EF5C  F00A         	goto	l2734
  2214   0014A8                     u1790:
  2215   0014A8  5007               	movf	___lmul@multiplicand^0,w,c
  2216   0014AA  260B               	addwf	___lmul@product^0,f,c
  2217   0014AC  5008               	movf	(___lmul@multiplicand+1)^0,w,c
  2218   0014AE  220C               	addwfc	(___lmul@product+1)^0,f,c
  2219   0014B0  5009               	movf	(___lmul@multiplicand+2)^0,w,c
  2220   0014B2  220D               	addwfc	(___lmul@product+2)^0,f,c
  2221   0014B4  500A               	movf	(___lmul@multiplicand+3)^0,w,c
  2222   0014B6  220E               	addwfc	(___lmul@product+3)^0,f,c
  2223   0014B8                     l2734:
  2224   0014B8  90D8               	bcf	status,0,c
  2225   0014BA  3607               	rlcf	___lmul@multiplicand^0,f,c
  2226   0014BC  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2227   0014BE  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2228   0014C0  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2229   0014C2  90D8               	bcf	status,0,c
  2230   0014C4  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
  2231   0014C6  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
  2232   0014C8  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
  2233   0014CA  3203               	rrcf	___lmul@multiplier^0,f,c
  2234   0014CC  5003               	movf	___lmul@multiplier^0,w,c
  2235   0014CE  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
  2236   0014D0  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
  2237   0014D2  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
  2238   0014D4  A4D8               	btfss	status,2,c
  2239   0014D6  EF6F  F00A         	goto	u1801
  2240   0014DA  EF71  F00A         	goto	u1800
  2241   0014DE                     u1801:
  2242   0014DE  EF4D  F00A         	goto	l2730
  2243   0014E2                     u1800:
  2244   0014E2  C00B  F003         	movff	___lmul@product,?___lmul
  2245   0014E6  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  2246   0014EA  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  2247   0014EE  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  2248   0014F2  0012               	return		;funcret
  2249   0014F4                     __end_of___lmul:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function ___almod *****************
  2253 ;; Defined at:
  2254 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  dividend        4    2[COMRAM] long 
  2257 ;;  divisor         4    6[COMRAM] long 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  sign            1   11[COMRAM] unsigned char 
  2260 ;;  counter         1   10[COMRAM] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  4    2[COMRAM] long 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2270 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;Total ram usage:       10 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_LCD_write_variable
  2281 ;;		_LCD_write_float
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text6
  2286   000F20                     __ptext6:
  2287                           	callstack 0
  2288   000F20                     ___almod:
  2289                           	callstack 27
  2290   000F20  6A0C               	clrf	___almod@sign^0,c
  2291   000F22  BE06               	btfsc	(___almod@dividend+3)^0,7,c
  2292   000F24  EF98  F007         	goto	u1870
  2293   000F28  EF96  F007         	goto	u1871
  2294   000F2C                     u1871:
  2295   000F2C  EFA2  F007         	goto	l2790
  2296   000F30                     u1870:
  2297   000F30  1E06               	comf	(___almod@dividend+3)^0,f,c
  2298   000F32  1E05               	comf	(___almod@dividend+2)^0,f,c
  2299   000F34  1E04               	comf	(___almod@dividend+1)^0,f,c
  2300   000F36  6C03               	negf	___almod@dividend^0,c
  2301   000F38  0E00               	movlw	0
  2302   000F3A  2204               	addwfc	(___almod@dividend+1)^0,f,c
  2303   000F3C  2205               	addwfc	(___almod@dividend+2)^0,f,c
  2304   000F3E  2206               	addwfc	(___almod@dividend+3)^0,f,c
  2305   000F40  0E01               	movlw	1
  2306   000F42  6E0C               	movwf	___almod@sign^0,c
  2307   000F44                     l2790:
  2308   000F44  BE0A               	btfsc	(___almod@divisor+3)^0,7,c
  2309   000F46  EFA9  F007         	goto	u1880
  2310   000F4A  EFA7  F007         	goto	u1881
  2311   000F4E                     u1881:
  2312   000F4E  EFB1  F007         	goto	l2794
  2313   000F52                     u1880:
  2314   000F52  1E0A               	comf	(___almod@divisor+3)^0,f,c
  2315   000F54  1E09               	comf	(___almod@divisor+2)^0,f,c
  2316   000F56  1E08               	comf	(___almod@divisor+1)^0,f,c
  2317   000F58  6C07               	negf	___almod@divisor^0,c
  2318   000F5A  0E00               	movlw	0
  2319   000F5C  2208               	addwfc	(___almod@divisor+1)^0,f,c
  2320   000F5E  2209               	addwfc	(___almod@divisor+2)^0,f,c
  2321   000F60  220A               	addwfc	(___almod@divisor+3)^0,f,c
  2322   000F62                     l2794:
  2323   000F62  5007               	movf	___almod@divisor^0,w,c
  2324   000F64  1008               	iorwf	(___almod@divisor+1)^0,w,c
  2325   000F66  1009               	iorwf	(___almod@divisor+2)^0,w,c
  2326   000F68  100A               	iorwf	(___almod@divisor+3)^0,w,c
  2327   000F6A  B4D8               	btfsc	status,2,c
  2328   000F6C  EFBA  F007         	goto	u1891
  2329   000F70  EFBC  F007         	goto	u1890
  2330   000F74                     u1891:
  2331   000F74  EFEC  F007         	goto	l2810
  2332   000F78                     u1890:
  2333   000F78  0E01               	movlw	1
  2334   000F7A  6E0B               	movwf	___almod@counter^0,c
  2335   000F7C  EFC6  F007         	goto	l2800
  2336   000F80                     l2798:
  2337   000F80  90D8               	bcf	status,0,c
  2338   000F82  3607               	rlcf	___almod@divisor^0,f,c
  2339   000F84  3608               	rlcf	(___almod@divisor+1)^0,f,c
  2340   000F86  3609               	rlcf	(___almod@divisor+2)^0,f,c
  2341   000F88  360A               	rlcf	(___almod@divisor+3)^0,f,c
  2342   000F8A  2A0B               	incf	___almod@counter^0,f,c
  2343   000F8C                     l2800:
  2344   000F8C  AE0A               	btfss	(___almod@divisor+3)^0,7,c
  2345   000F8E  EFCB  F007         	goto	u1901
  2346   000F92  EFCD  F007         	goto	u1900
  2347   000F96                     u1901:
  2348   000F96  EFC0  F007         	goto	l2798
  2349   000F9A                     u1900:
  2350   000F9A                     l2802:
  2351   000F9A  5007               	movf	___almod@divisor^0,w,c
  2352   000F9C  5C03               	subwf	___almod@dividend^0,w,c
  2353   000F9E  5008               	movf	(___almod@divisor+1)^0,w,c
  2354   000FA0  5804               	subwfb	(___almod@dividend+1)^0,w,c
  2355   000FA2  5009               	movf	(___almod@divisor+2)^0,w,c
  2356   000FA4  5805               	subwfb	(___almod@dividend+2)^0,w,c
  2357   000FA6  500A               	movf	(___almod@divisor+3)^0,w,c
  2358   000FA8  5806               	subwfb	(___almod@dividend+3)^0,w,c
  2359   000FAA  A0D8               	btfss	status,0,c
  2360   000FAC  EFDA  F007         	goto	u1911
  2361   000FB0  EFDC  F007         	goto	u1910
  2362   000FB4                     u1911:
  2363   000FB4  EFE4  F007         	goto	l2806
  2364   000FB8                     u1910:
  2365   000FB8  5007               	movf	___almod@divisor^0,w,c
  2366   000FBA  5E03               	subwf	___almod@dividend^0,f,c
  2367   000FBC  5008               	movf	(___almod@divisor+1)^0,w,c
  2368   000FBE  5A04               	subwfb	(___almod@dividend+1)^0,f,c
  2369   000FC0  5009               	movf	(___almod@divisor+2)^0,w,c
  2370   000FC2  5A05               	subwfb	(___almod@dividend+2)^0,f,c
  2371   000FC4  500A               	movf	(___almod@divisor+3)^0,w,c
  2372   000FC6  5A06               	subwfb	(___almod@dividend+3)^0,f,c
  2373   000FC8                     l2806:
  2374   000FC8  90D8               	bcf	status,0,c
  2375   000FCA  320A               	rrcf	(___almod@divisor+3)^0,f,c
  2376   000FCC  3209               	rrcf	(___almod@divisor+2)^0,f,c
  2377   000FCE  3208               	rrcf	(___almod@divisor+1)^0,f,c
  2378   000FD0  3207               	rrcf	___almod@divisor^0,f,c
  2379   000FD2  2E0B               	decfsz	___almod@counter^0,f,c
  2380   000FD4  EFCD  F007         	goto	l2802
  2381   000FD8                     l2810:
  2382   000FD8  500C               	movf	___almod@sign^0,w,c
  2383   000FDA  B4D8               	btfsc	status,2,c
  2384   000FDC  EFF2  F007         	goto	u1921
  2385   000FE0  EFF4  F007         	goto	u1920
  2386   000FE4                     u1921:
  2387   000FE4  EFFC  F007         	goto	l2814
  2388   000FE8                     u1920:
  2389   000FE8  1E06               	comf	(___almod@dividend+3)^0,f,c
  2390   000FEA  1E05               	comf	(___almod@dividend+2)^0,f,c
  2391   000FEC  1E04               	comf	(___almod@dividend+1)^0,f,c
  2392   000FEE  6C03               	negf	___almod@dividend^0,c
  2393   000FF0  0E00               	movlw	0
  2394   000FF2  2204               	addwfc	(___almod@dividend+1)^0,f,c
  2395   000FF4  2205               	addwfc	(___almod@dividend+2)^0,f,c
  2396   000FF6  2206               	addwfc	(___almod@dividend+3)^0,f,c
  2397   000FF8                     l2814:
  2398   000FF8  C003  F003         	movff	___almod@dividend,?___almod
  2399   000FFC  C004  F004         	movff	___almod@dividend+1,?___almod+1
  2400   001000  C005  F005         	movff	___almod@dividend+2,?___almod+2
  2401   001004  C006  F006         	movff	___almod@dividend+3,?___almod+3
  2402   001008  0012               	return		;funcret
  2403   00100A                     __end_of___almod:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function ___aldiv *****************
  2407 ;; Defined at:
  2408 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  dividend        4    2[COMRAM] long 
  2411 ;;  divisor         4    6[COMRAM] long 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  quotient        4   12[COMRAM] long 
  2414 ;;  sign            1   11[COMRAM] unsigned char 
  2415 ;;  counter         1   10[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  4    2[COMRAM] long 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2425 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;Total ram usage:       14 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_LCD_write_variable
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text7
  2440   000C1E                     __ptext7:
  2441                           	callstack 0
  2442   000C1E                     ___aldiv:
  2443                           	callstack 27
  2444   000C1E  6A0C               	clrf	___aldiv@sign^0,c
  2445   000C20  BE0A               	btfsc	(___aldiv@divisor+3)^0,7,c
  2446   000C22  EF17  F006         	goto	u1810
  2447   000C26  EF15  F006         	goto	u1811
  2448   000C2A                     u1811:
  2449   000C2A  EF21  F006         	goto	l2746
  2450   000C2E                     u1810:
  2451   000C2E  1E0A               	comf	(___aldiv@divisor+3)^0,f,c
  2452   000C30  1E09               	comf	(___aldiv@divisor+2)^0,f,c
  2453   000C32  1E08               	comf	(___aldiv@divisor+1)^0,f,c
  2454   000C34  6C07               	negf	___aldiv@divisor^0,c
  2455   000C36  0E00               	movlw	0
  2456   000C38  2208               	addwfc	(___aldiv@divisor+1)^0,f,c
  2457   000C3A  2209               	addwfc	(___aldiv@divisor+2)^0,f,c
  2458   000C3C  220A               	addwfc	(___aldiv@divisor+3)^0,f,c
  2459   000C3E  0E01               	movlw	1
  2460   000C40  6E0C               	movwf	___aldiv@sign^0,c
  2461   000C42                     l2746:
  2462   000C42  BE06               	btfsc	(___aldiv@dividend+3)^0,7,c
  2463   000C44  EF28  F006         	goto	u1820
  2464   000C48  EF26  F006         	goto	u1821
  2465   000C4C                     u1821:
  2466   000C4C  EF32  F006         	goto	l2752
  2467   000C50                     u1820:
  2468   000C50  1E06               	comf	(___aldiv@dividend+3)^0,f,c
  2469   000C52  1E05               	comf	(___aldiv@dividend+2)^0,f,c
  2470   000C54  1E04               	comf	(___aldiv@dividend+1)^0,f,c
  2471   000C56  6C03               	negf	___aldiv@dividend^0,c
  2472   000C58  0E00               	movlw	0
  2473   000C5A  2204               	addwfc	(___aldiv@dividend+1)^0,f,c
  2474   000C5C  2205               	addwfc	(___aldiv@dividend+2)^0,f,c
  2475   000C5E  2206               	addwfc	(___aldiv@dividend+3)^0,f,c
  2476   000C60  0E01               	movlw	1
  2477   000C62  1A0C               	xorwf	___aldiv@sign^0,f,c
  2478   000C64                     l2752:
  2479   000C64  0E00               	movlw	0
  2480   000C66  6E0D               	movwf	___aldiv@quotient^0,c
  2481   000C68  0E00               	movlw	0
  2482   000C6A  6E0E               	movwf	(___aldiv@quotient+1)^0,c
  2483   000C6C  0E00               	movlw	0
  2484   000C6E  6E0F               	movwf	(___aldiv@quotient+2)^0,c
  2485   000C70  0E00               	movlw	0
  2486   000C72  6E10               	movwf	(___aldiv@quotient+3)^0,c
  2487   000C74  5007               	movf	___aldiv@divisor^0,w,c
  2488   000C76  1008               	iorwf	(___aldiv@divisor+1)^0,w,c
  2489   000C78  1009               	iorwf	(___aldiv@divisor+2)^0,w,c
  2490   000C7A  100A               	iorwf	(___aldiv@divisor+3)^0,w,c
  2491   000C7C  B4D8               	btfsc	status,2,c
  2492   000C7E  EF43  F006         	goto	u1831
  2493   000C82  EF45  F006         	goto	u1830
  2494   000C86                     u1831:
  2495   000C86  EF7B  F006         	goto	l2774
  2496   000C8A                     u1830:
  2497   000C8A  0E01               	movlw	1
  2498   000C8C  6E0B               	movwf	___aldiv@counter^0,c
  2499   000C8E  EF4F  F006         	goto	l2760
  2500   000C92                     l2758:
  2501   000C92  90D8               	bcf	status,0,c
  2502   000C94  3607               	rlcf	___aldiv@divisor^0,f,c
  2503   000C96  3608               	rlcf	(___aldiv@divisor+1)^0,f,c
  2504   000C98  3609               	rlcf	(___aldiv@divisor+2)^0,f,c
  2505   000C9A  360A               	rlcf	(___aldiv@divisor+3)^0,f,c
  2506   000C9C  2A0B               	incf	___aldiv@counter^0,f,c
  2507   000C9E                     l2760:
  2508   000C9E  AE0A               	btfss	(___aldiv@divisor+3)^0,7,c
  2509   000CA0  EF54  F006         	goto	u1841
  2510   000CA4  EF56  F006         	goto	u1840
  2511   000CA8                     u1841:
  2512   000CA8  EF49  F006         	goto	l2758
  2513   000CAC                     u1840:
  2514   000CAC                     l2762:
  2515   000CAC  90D8               	bcf	status,0,c
  2516   000CAE  360D               	rlcf	___aldiv@quotient^0,f,c
  2517   000CB0  360E               	rlcf	(___aldiv@quotient+1)^0,f,c
  2518   000CB2  360F               	rlcf	(___aldiv@quotient+2)^0,f,c
  2519   000CB4  3610               	rlcf	(___aldiv@quotient+3)^0,f,c
  2520   000CB6  5007               	movf	___aldiv@divisor^0,w,c
  2521   000CB8  5C03               	subwf	___aldiv@dividend^0,w,c
  2522   000CBA  5008               	movf	(___aldiv@divisor+1)^0,w,c
  2523   000CBC  5804               	subwfb	(___aldiv@dividend+1)^0,w,c
  2524   000CBE  5009               	movf	(___aldiv@divisor+2)^0,w,c
  2525   000CC0  5805               	subwfb	(___aldiv@dividend+2)^0,w,c
  2526   000CC2  500A               	movf	(___aldiv@divisor+3)^0,w,c
  2527   000CC4  5806               	subwfb	(___aldiv@dividend+3)^0,w,c
  2528   000CC6  A0D8               	btfss	status,0,c
  2529   000CC8  EF68  F006         	goto	u1851
  2530   000CCC  EF6A  F006         	goto	u1850
  2531   000CD0                     u1851:
  2532   000CD0  EF73  F006         	goto	l2770
  2533   000CD4                     u1850:
  2534   000CD4  5007               	movf	___aldiv@divisor^0,w,c
  2535   000CD6  5E03               	subwf	___aldiv@dividend^0,f,c
  2536   000CD8  5008               	movf	(___aldiv@divisor+1)^0,w,c
  2537   000CDA  5A04               	subwfb	(___aldiv@dividend+1)^0,f,c
  2538   000CDC  5009               	movf	(___aldiv@divisor+2)^0,w,c
  2539   000CDE  5A05               	subwfb	(___aldiv@dividend+2)^0,f,c
  2540   000CE0  500A               	movf	(___aldiv@divisor+3)^0,w,c
  2541   000CE2  5A06               	subwfb	(___aldiv@dividend+3)^0,f,c
  2542   000CE4  800D               	bsf	___aldiv@quotient^0,0,c
  2543   000CE6                     l2770:
  2544   000CE6  90D8               	bcf	status,0,c
  2545   000CE8  320A               	rrcf	(___aldiv@divisor+3)^0,f,c
  2546   000CEA  3209               	rrcf	(___aldiv@divisor+2)^0,f,c
  2547   000CEC  3208               	rrcf	(___aldiv@divisor+1)^0,f,c
  2548   000CEE  3207               	rrcf	___aldiv@divisor^0,f,c
  2549   000CF0  2E0B               	decfsz	___aldiv@counter^0,f,c
  2550   000CF2  EF56  F006         	goto	l2762
  2551   000CF6                     l2774:
  2552   000CF6  500C               	movf	___aldiv@sign^0,w,c
  2553   000CF8  B4D8               	btfsc	status,2,c
  2554   000CFA  EF81  F006         	goto	u1861
  2555   000CFE  EF83  F006         	goto	u1860
  2556   000D02                     u1861:
  2557   000D02  EF8B  F006         	goto	l2778
  2558   000D06                     u1860:
  2559   000D06  1E10               	comf	(___aldiv@quotient+3)^0,f,c
  2560   000D08  1E0F               	comf	(___aldiv@quotient+2)^0,f,c
  2561   000D0A  1E0E               	comf	(___aldiv@quotient+1)^0,f,c
  2562   000D0C  6C0D               	negf	___aldiv@quotient^0,c
  2563   000D0E  0E00               	movlw	0
  2564   000D10  220E               	addwfc	(___aldiv@quotient+1)^0,f,c
  2565   000D12  220F               	addwfc	(___aldiv@quotient+2)^0,f,c
  2566   000D14  2210               	addwfc	(___aldiv@quotient+3)^0,f,c
  2567   000D16                     l2778:
  2568   000D16  C00D  F003         	movff	___aldiv@quotient,?___aldiv
  2569   000D1A  C00E  F004         	movff	___aldiv@quotient+1,?___aldiv+1
  2570   000D1E  C00F  F005         	movff	___aldiv@quotient+2,?___aldiv+2
  2571   000D22  C010  F006         	movff	___aldiv@quotient+3,?___aldiv+3
  2572   000D26  0012               	return		;funcret
  2573   000D28                     __end_of___aldiv:
  2574                           	callstack 0
  2575                           
  2576 ;; *************** function _main_menu *****************
  2577 ;; Defined at:
  2578 ;;		line 307 in file "OBCII_PIC18F46K22.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;Total ram usage:        2 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 8
  2599 ;; This function calls:
  2600 ;;		_LCD_clear
  2601 ;;		_LCD_configure_cursor_blink
  2602 ;;		_LCD_cursor_set
  2603 ;;		_clear_diagnostic_codes
  2604 ;;		_display_mm
  2605 ;;		_display_system_info
  2606 ;;		_live_reading_mode
  2607 ;;		_readADC
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text8
  2614   0000D6                     __ptext8:
  2615                           	callstack 0
  2616   0000D6                     _main_menu:
  2617                           	callstack 22
  2618   0000D6                     
  2619                           ;OBCII_PIC18F46K22.c: 309:     LCD_clear();
  2620   0000D6  EC3D  F00C         	call	_LCD_clear	;wreg free
  2621   0000DA                     
  2622                           ;OBCII_PIC18F46K22.c: 310:     display_mm();
  2623   0000DA  ECEC  F00B         	call	_display_mm	;wreg free
  2624   0000DE                     l3070:
  2625                           
  2626                           ;OBCII_PIC18F46K22.c: 313:         display_mm();
  2627   0000DE  ECEC  F00B         	call	_display_mm	;wreg free
  2628                           
  2629                           ;OBCII_PIC18F46K22.c: 314:         result = readADC();
  2630   0000E2  ECD1  F00B         	call	_readADC	;wreg free
  2631   0000E6  C003  F049         	movff	?_readADC,_result
  2632   0000EA  C004  F04A         	movff	?_readADC+1,_result+1
  2633   0000EE                     
  2634                           ;OBCII_PIC18F46K22.c: 315:         if(result >= 0 && result <= 255){
  2635   0000EE  044A               	decf	(_result+1)^0,w,c
  2636   0000F0  B0D8               	btfsc	status,0,c
  2637   0000F2  EF7D  F000         	goto	u2111
  2638   0000F6  EF7F  F000         	goto	u2110
  2639   0000FA                     u2111:
  2640   0000FA  EF88  F000         	goto	l3078
  2641   0000FE                     u2110:
  2642   0000FE                     
  2643                           ;OBCII_PIC18F46K22.c: 316:             menu_sel = 0;
  2644   0000FE  0E00               	movlw	0
  2645   000100  6E50               	movwf	(_menu_sel+1)^0,c
  2646   000102  0E00               	movlw	0
  2647   000104  6E4F               	movwf	_menu_sel^0,c
  2648   000106                     
  2649                           ;OBCII_PIC18F46K22.c: 317:             LCD_cursor_set(2,1);
  2650   000106  0E01               	movlw	1
  2651   000108  6E06               	movwf	LCD_cursor_set@column^0,c
  2652   00010A  0E02               	movlw	2
  2653   00010C  ECDE  F00A         	call	_LCD_cursor_set
  2654   000110                     l3078:
  2655                           
  2656                           ;OBCII_PIC18F46K22.c: 320:         if(result >= 256 && result <=511){
  2657   000110  044A               	decf	(_result+1)^0,w,c
  2658   000112  A0D8               	btfss	status,0,c
  2659   000114  EF8E  F000         	goto	u2121
  2660   000118  EF90  F000         	goto	u2120
  2661   00011C                     u2121:
  2662   00011C  EFA2  F000         	goto	l3086
  2663   000120                     u2120:
  2664   000120  0E02               	movlw	2
  2665   000122  5C4A               	subwf	(_result+1)^0,w,c
  2666   000124  B0D8               	btfsc	status,0,c
  2667   000126  EF97  F000         	goto	u2131
  2668   00012A  EF99  F000         	goto	u2130
  2669   00012E                     u2131:
  2670   00012E  EFA2  F000         	goto	l3086
  2671   000132                     u2130:
  2672   000132                     
  2673                           ;OBCII_PIC18F46K22.c: 321:             menu_sel = 1;
  2674   000132  0E00               	movlw	0
  2675   000134  6E50               	movwf	(_menu_sel+1)^0,c
  2676   000136  0E01               	movlw	1
  2677   000138  6E4F               	movwf	_menu_sel^0,c
  2678   00013A                     
  2679                           ;OBCII_PIC18F46K22.c: 322:             LCD_cursor_set(2,5);
  2680   00013A  0E05               	movlw	5
  2681   00013C  6E06               	movwf	LCD_cursor_set@column^0,c
  2682   00013E  0E02               	movlw	2
  2683   000140  ECDE  F00A         	call	_LCD_cursor_set
  2684   000144                     l3086:
  2685                           
  2686                           ;OBCII_PIC18F46K22.c: 325:         if(result >=512 && result <=767){
  2687   000144  0E02               	movlw	2
  2688   000146  5C4A               	subwf	(_result+1)^0,w,c
  2689   000148  A0D8               	btfss	status,0,c
  2690   00014A  EFA9  F000         	goto	u2141
  2691   00014E  EFAB  F000         	goto	u2140
  2692   000152                     u2141:
  2693   000152  EFBD  F000         	goto	l3094
  2694   000156                     u2140:
  2695   000156  0E03               	movlw	3
  2696   000158  5C4A               	subwf	(_result+1)^0,w,c
  2697   00015A  B0D8               	btfsc	status,0,c
  2698   00015C  EFB2  F000         	goto	u2151
  2699   000160  EFB4  F000         	goto	u2150
  2700   000164                     u2151:
  2701   000164  EFBD  F000         	goto	l3094
  2702   000168                     u2150:
  2703   000168                     
  2704                           ;OBCII_PIC18F46K22.c: 326:             menu_sel = 2;
  2705   000168  0E00               	movlw	0
  2706   00016A  6E50               	movwf	(_menu_sel+1)^0,c
  2707   00016C  0E02               	movlw	2
  2708   00016E  6E4F               	movwf	_menu_sel^0,c
  2709   000170                     
  2710                           ;OBCII_PIC18F46K22.c: 327:             LCD_cursor_set(2,9);
  2711   000170  0E09               	movlw	9
  2712   000172  6E06               	movwf	LCD_cursor_set@column^0,c
  2713   000174  0E02               	movlw	2
  2714   000176  ECDE  F00A         	call	_LCD_cursor_set
  2715   00017A                     l3094:
  2716                           
  2717                           ;OBCII_PIC18F46K22.c: 329:         if(result >= 768 && result <=1023 ){
  2718   00017A  0E03               	movlw	3
  2719   00017C  5C4A               	subwf	(_result+1)^0,w,c
  2720   00017E  A0D8               	btfss	status,0,c
  2721   000180  EFC4  F000         	goto	u2161
  2722   000184  EFC6  F000         	goto	u2160
  2723   000188                     u2161:
  2724   000188  EFD8  F000         	goto	l3102
  2725   00018C                     u2160:
  2726   00018C  0E04               	movlw	4
  2727   00018E  5C4A               	subwf	(_result+1)^0,w,c
  2728   000190  B0D8               	btfsc	status,0,c
  2729   000192  EFCD  F000         	goto	u2171
  2730   000196  EFCF  F000         	goto	u2170
  2731   00019A                     u2171:
  2732   00019A  EFD8  F000         	goto	l3102
  2733   00019E                     u2170:
  2734   00019E                     
  2735                           ;OBCII_PIC18F46K22.c: 330:             menu_sel = 3;
  2736   00019E  0E00               	movlw	0
  2737   0001A0  6E50               	movwf	(_menu_sel+1)^0,c
  2738   0001A2  0E03               	movlw	3
  2739   0001A4  6E4F               	movwf	_menu_sel^0,c
  2740   0001A6                     
  2741                           ;OBCII_PIC18F46K22.c: 331:             LCD_cursor_set(2,13);
  2742   0001A6  0E0D               	movlw	13
  2743   0001A8  6E06               	movwf	LCD_cursor_set@column^0,c
  2744   0001AA  0E02               	movlw	2
  2745   0001AC  ECDE  F00A         	call	_LCD_cursor_set
  2746   0001B0                     l3102:
  2747                           
  2748                           ;OBCII_PIC18F46K22.c: 333:         LCD_configure_cursor_blink(1);
  2749   0001B0  0E01               	movlw	1
  2750   0001B2  EC2C  F00C         	call	_LCD_configure_cursor_blink
  2751   0001B6                     
  2752                           ;OBCII_PIC18F46K22.c: 335:         if (PORTBbits.RB4 == 0) {
  2753   0001B6  B881               	btfsc	129,4,c	;volatile
  2754   0001B8  EFE0  F000         	goto	u2181
  2755   0001BC  EFE2  F000         	goto	u2180
  2756   0001C0                     u2181:
  2757   0001C0  EF78  F001         	goto	l3172
  2758   0001C4                     u2180:
  2759   0001C4                     
  2760                           ;OBCII_PIC18F46K22.c: 336:             _delay((unsigned long)((20)*(16000000/4000.0)));
  2761   0001C4  0E68               	movlw	104
  2762   0001C6  6E33               	movwf	??_main_menu^0,c
  2763   0001C8  0EE4               	movlw	228
  2764   0001CA                     u2487:
  2765   0001CA  2EE8               	decfsz	wreg,f,c
  2766   0001CC  D7FE               	bra	u2487
  2767   0001CE  2E33               	decfsz	??_main_menu^0,f,c
  2768   0001D0  D7FC               	bra	u2487
  2769   0001D2  D000               	nop2	
  2770   0001D4                     
  2771                           ;OBCII_PIC18F46K22.c: 337:             if (PORTBbits.RB4 == 0) {
  2772   0001D4  B881               	btfsc	129,4,c	;volatile
  2773   0001D6  EFEF  F000         	goto	u2191
  2774   0001DA  EFF1  F000         	goto	u2190
  2775   0001DE                     u2191:
  2776   0001DE  EF78  F001         	goto	l3172
  2777   0001E2                     u2190:
  2778   0001E2                     
  2779                           ;OBCII_PIC18F46K22.c: 338:                 LCD_configure_cursor_blink(0);
  2780   0001E2  0E00               	movlw	0
  2781   0001E4  EC2C  F00C         	call	_LCD_configure_cursor_blink
  2782                           
  2783                           ;OBCII_PIC18F46K22.c: 339:                 LCD_clear();
  2784   0001E8  EC3D  F00C         	call	_LCD_clear	;wreg free
  2785                           
  2786                           ;OBCII_PIC18F46K22.c: 342:                 switch (menu_sel) {
  2787   0001EC  EF5A  F001         	goto	l3170
  2788   0001F0                     l3112:
  2789                           
  2790                           ;OBCII_PIC18F46K22.c: 345:                             live_reading_mode();
  2791   0001F0  EC19  F00C         	call	_live_reading_mode	;wreg free
  2792   0001F4                     
  2793                           ;OBCII_PIC18F46K22.c: 347:                             if (PORTCbits.RC5 == 0) {
  2794   0001F4  BA82               	btfsc	130,5,c	;volatile
  2795   0001F6  EFFF  F000         	goto	u2201
  2796   0001FA  EF01  F001         	goto	u2200
  2797   0001FE                     u2201:
  2798   0001FE  EFF8  F000         	goto	l3112
  2799   000202                     u2200:
  2800   000202                     
  2801                           ;OBCII_PIC18F46K22.c: 348:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  2802   000202  0E68               	movlw	104
  2803   000204  6E33               	movwf	??_main_menu^0,c
  2804   000206  0EE4               	movlw	228
  2805   000208                     u2497:
  2806   000208  2EE8               	decfsz	wreg,f,c
  2807   00020A  D7FE               	bra	u2497
  2808   00020C  2E33               	decfsz	??_main_menu^0,f,c
  2809   00020E  D7FC               	bra	u2497
  2810   000210  D000               	nop2	
  2811   000212                     
  2812                           ;OBCII_PIC18F46K22.c: 349:                                 if (PORTCbits.RC5 == 0) {
  2813   000212  BA82               	btfsc	130,5,c	;volatile
  2814   000214  EF0E  F001         	goto	u2211
  2815   000218  EF10  F001         	goto	u2210
  2816   00021C                     u2211:
  2817   00021C  EFF8  F000         	goto	l3112
  2818   000220                     u2210:
  2819   000220                     l3120:
  2820                           
  2821                           ;OBCII_PIC18F46K22.c: 350:                                     LCD_clear();
  2822   000220  EC3D  F00C         	call	_LCD_clear	;wreg free
  2823   000224                     
  2824                           ;OBCII_PIC18F46K22.c: 351:                                     display_mm();
  2825   000224  ECEC  F00B         	call	_display_mm	;wreg free
  2826   000228                     l3124:
  2827                           
  2828                           ;OBCII_PIC18F46K22.c: 352:                                     menu_sel = -1;
  2829   000228  684F               	setf	_menu_sel^0,c
  2830   00022A  6850               	setf	(_menu_sel+1)^0,c
  2831                           
  2832                           ;OBCII_PIC18F46K22.c: 353:                                     break;
  2833   00022C  EF78  F001         	goto	l3172
  2834   000230                     l220:
  2835                           
  2836                           ;OBCII_PIC18F46K22.c: 364:                             if (PORTCbits.RC5 == 0) {
  2837   000230  BA82               	btfsc	130,5,c	;volatile
  2838   000232  EF1D  F001         	goto	u2221
  2839   000236  EF1F  F001         	goto	u2220
  2840   00023A                     u2221:
  2841   00023A  EF18  F001         	goto	l220
  2842   00023E                     u2220:
  2843   00023E                     
  2844                           ;OBCII_PIC18F46K22.c: 365:                                     _delay((unsigned long)((2
      +                          0)*(16000000/4000.0)));
  2845   00023E  0E68               	movlw	104
  2846   000240  6E33               	movwf	??_main_menu^0,c
  2847   000242  0EE4               	movlw	228
  2848   000244                     u2507:
  2849   000244  2EE8               	decfsz	wreg,f,c
  2850   000246  D7FE               	bra	u2507
  2851   000248  2E33               	decfsz	??_main_menu^0,f,c
  2852   00024A  D7FC               	bra	u2507
  2853   00024C  D000               	nop2	
  2854   00024E                     
  2855                           ;OBCII_PIC18F46K22.c: 366:                                 if (PORTCbits.RC5 == 0) {
  2856   00024E  BA82               	btfsc	130,5,c	;volatile
  2857   000250  EF2C  F001         	goto	u2231
  2858   000254  EF2E  F001         	goto	u2230
  2859   000258                     u2231:
  2860   000258  EF18  F001         	goto	l220
  2861   00025C                     u2230:
  2862   00025C  EF10  F001         	goto	l3120
  2863   000260                     l3136:
  2864                           
  2865                           ;OBCII_PIC18F46K22.c: 378:                                 _delay((unsigned long)((200)*
      +                          (16000000/4000.0)));
  2866   000260  0E05               	movlw	5
  2867   000262  6E34               	movwf	(??_main_menu+1)^0,c
  2868   000264  0E0F               	movlw	15
  2869   000266  6E33               	movwf	??_main_menu^0,c
  2870   000268  0EF1               	movlw	241
  2871   00026A                     u2517:
  2872   00026A  2EE8               	decfsz	wreg,f,c
  2873   00026C  D7FE               	bra	u2517
  2874   00026E  2E33               	decfsz	??_main_menu^0,f,c
  2875   000270  D7FC               	bra	u2517
  2876   000272  2E34               	decfsz	(??_main_menu+1)^0,f,c
  2877   000274  D7FA               	bra	u2517
  2878   000276  0000               	nop	
  2879   000278                     
  2880                           ;OBCII_PIC18F46K22.c: 379:                                 clear_diagnostic_codes();
  2881   000278  EC87  F001         	call	_clear_diagnostic_codes	;wreg free
  2882   00027C  EF14  F001         	goto	l3124
  2883   000280                     l3154:
  2884                           
  2885                           ;OBCII_PIC18F46K22.c: 396:                             display_system_info();
  2886   000280  ECB6  F00B         	call	_display_system_info	;wreg free
  2887   000284                     
  2888                           ;OBCII_PIC18F46K22.c: 398:                             if (PORTCbits.RC5 == 0) {
  2889   000284  BA82               	btfsc	130,5,c	;volatile
  2890   000286  EF47  F001         	goto	u2241
  2891   00028A  EF49  F001         	goto	u2240
  2892   00028E                     u2241:
  2893   00028E  EF40  F001         	goto	l3154
  2894   000292                     u2240:
  2895   000292                     
  2896                           ;OBCII_PIC18F46K22.c: 399:                                _delay((unsigned long)((20)*(1
      +                          6000000/4000.0)));
  2897   000292  0E68               	movlw	104
  2898   000294  6E33               	movwf	??_main_menu^0,c
  2899   000296  0EE4               	movlw	228
  2900   000298                     u2527:
  2901   000298  2EE8               	decfsz	wreg,f,c
  2902   00029A  D7FE               	bra	u2527
  2903   00029C  2E33               	decfsz	??_main_menu^0,f,c
  2904   00029E  D7FC               	bra	u2527
  2905   0002A0  D000               	nop2	
  2906   0002A2                     
  2907                           ;OBCII_PIC18F46K22.c: 400:                                 if (PORTCbits.RC5 == 0) {
  2908   0002A2  BA82               	btfsc	130,5,c	;volatile
  2909   0002A4  EF56  F001         	goto	u2251
  2910   0002A8  EF58  F001         	goto	u2250
  2911   0002AC                     u2251:
  2912   0002AC  EF40  F001         	goto	l3154
  2913   0002B0                     u2250:
  2914   0002B0  EF10  F001         	goto	l3120
  2915   0002B4                     l3170:
  2916   0002B4  C04F  F033         	movff	_menu_sel,??_main_menu
  2917   0002B8  C050  F034         	movff	_menu_sel+1,??_main_menu+1
  2918                           
  2919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2920                           ; Switch size 1, requested type "simple"
  2921                           ; Number of cases is 1, Range of values is 0 to 0
  2922                           ; switch strategies available:
  2923                           ; Name         Instructions Cycles
  2924                           ; simple_byte            4     3 (average)
  2925                           ;	Chosen strategy is simple_byte
  2926   0002BC  5034               	movf	(??_main_menu+1)^0,w,c
  2927   0002BE  0A00               	xorlw	0	; case 0
  2928   0002C0  B4D8               	btfsc	status,2,c
  2929   0002C2  EF65  F001         	goto	l3344
  2930   0002C6  EF78  F001         	goto	l210
  2931   0002CA                     l3344:
  2932                           
  2933                           ; Switch size 1, requested type "simple"
  2934                           ; Number of cases is 4, Range of values is 0 to 3
  2935                           ; switch strategies available:
  2936                           ; Name         Instructions Cycles
  2937                           ; simple_byte           13     7 (average)
  2938                           ;	Chosen strategy is simple_byte
  2939   0002CA  5033               	movf	??_main_menu^0,w,c
  2940   0002CC  0A00               	xorlw	0	; case 0
  2941   0002CE  B4D8               	btfsc	status,2,c
  2942   0002D0  EFF8  F000         	goto	l3112
  2943   0002D4  0A01               	xorlw	1	; case 1
  2944   0002D6  B4D8               	btfsc	status,2,c
  2945   0002D8  EF18  F001         	goto	l220
  2946   0002DC  0A03               	xorlw	3	; case 2
  2947   0002DE  B4D8               	btfsc	status,2,c
  2948   0002E0  EF30  F001         	goto	l3136
  2949   0002E4  0A01               	xorlw	1	; case 3
  2950   0002E6  B4D8               	btfsc	status,2,c
  2951   0002E8  EF40  F001         	goto	l3154
  2952   0002EC  EF78  F001         	goto	l210
  2953   0002F0                     l210:
  2954   0002F0                     l3172:
  2955                           
  2956                           ;OBCII_PIC18F46K22.c: 416:         _delay((unsigned long)((50)*(16000000/4000.0)));
  2957   0002F0  0E02               	movlw	2
  2958   0002F2  6E34               	movwf	(??_main_menu+1)^0,c
  2959   0002F4  0E04               	movlw	4
  2960   0002F6  6E33               	movwf	??_main_menu^0,c
  2961   0002F8  0EBA               	movlw	186
  2962   0002FA                     u2537:
  2963   0002FA  2EE8               	decfsz	wreg,f,c
  2964   0002FC  D7FE               	bra	u2537
  2965   0002FE  2E33               	decfsz	??_main_menu^0,f,c
  2966   000300  D7FC               	bra	u2537
  2967   000302  2E34               	decfsz	(??_main_menu+1)^0,f,c
  2968   000304  D7FA               	bra	u2537
  2969   000306  D000               	nop2	
  2970   000308  EF6F  F000         	goto	l3070
  2971   00030C  0012               	return		;funcret
  2972   00030E                     __end_of_main_menu:
  2973                           	callstack 0
  2974                           
  2975 ;; *************** function _live_reading_mode *****************
  2976 ;; Defined at:
  2977 ;;		line 543 in file "OBCII_PIC18F46K22.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;Total ram usage:        2 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 7
  2998 ;; This function calls:
  2999 ;;		_print_AI_Temp
  3000 ;;		_print_RPM
  3001 ;;		_print_Vbatt
  3002 ;; This function is called by:
  3003 ;;		_main_menu
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text9
  3008   001832                     __ptext9:
  3009                           	callstack 0
  3010   001832                     _live_reading_mode:
  3011                           	callstack 22
  3012   001832                     
  3013                           ;OBCII_PIC18F46K22.c: 544:             print_RPM();
  3014   001832  ECE0  F004         	call	_print_RPM	;wreg free
  3015   001836                     
  3016                           ;OBCII_PIC18F46K22.c: 545:             print_Vbatt();
  3017   001836  EC05  F008         	call	_print_Vbatt	;wreg free
  3018   00183A                     
  3019                           ;OBCII_PIC18F46K22.c: 546:             print_AI_Temp();
  3020   00183A  EC84  F005         	call	_print_AI_Temp	;wreg free
  3021   00183E                     
  3022                           ;OBCII_PIC18F46K22.c: 547:             _delay((unsigned long)((50)*(16000000/4000.0)));
  3023   00183E  0E02               	movlw	2
  3024   001840  6E32               	movwf	(??_live_reading_mode+1)^0,c
  3025   001842  0E04               	movlw	4
  3026   001844  6E31               	movwf	??_live_reading_mode^0,c
  3027   001846  0EBA               	movlw	186
  3028   001848                     u2547:
  3029   001848  2EE8               	decfsz	wreg,f,c
  3030   00184A  D7FE               	bra	u2547
  3031   00184C  2E31               	decfsz	??_live_reading_mode^0,f,c
  3032   00184E  D7FC               	bra	u2547
  3033   001850  2E32               	decfsz	(??_live_reading_mode+1)^0,f,c
  3034   001852  D7FA               	bra	u2547
  3035   001854  D000               	nop2	
  3036   001856  0012               	return		;funcret
  3037   001858                     __end_of_live_reading_mode:
  3038                           	callstack 0
  3039                           
  3040 ;; *************** function _print_Vbatt *****************
  3041 ;; Defined at:
  3042 ;;		line 470 in file "OBCII_PIC18F46K22.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;Total ram usage:        1 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 5
  3063 ;; This function calls:
  3064 ;;		_LCD_clear
  3065 ;;		_LCD_cursor_set
  3066 ;;		_LCD_write_string
  3067 ;;		_UART1_SendString
  3068 ;;		_clear_parsing_notif
  3069 ;;		_display_mm
  3070 ;;		_parsing_notif
  3071 ;;		_strchr
  3072 ;; This function is called by:
  3073 ;;		_live_reading_mode
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text10
  3078   00100A                     __ptext10:
  3079                           	callstack 0
  3080   00100A                     _print_Vbatt:
  3081                           	callstack 23
  3082   00100A                     
  3083                           ;OBCII_PIC18F46K22.c: 472:     UART1_SendString("ATRV\r");
  3084   00100A  0ECC               	movlw	low STR_18
  3085   00100C  6E04               	movwf	UART1_SendString@string^0,c
  3086   00100E  0EFF               	movlw	high STR_18
  3087   001010  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3088   001012  EC0E  F00B         	call	_UART1_SendString	;wreg free
  3089                           
  3090                           ;OBCII_PIC18F46K22.c: 473:     while(!message_complete) {
  3091   001016  EF2D  F008         	goto	l2608
  3092   00101A                     l258:
  3093                           
  3094                           ;OBCII_PIC18F46K22.c: 475:         if (PORTCbits.RC5 == 0) {
  3095   00101A  BA82               	btfsc	130,5,c	;volatile
  3096   00101C  EF12  F008         	goto	u1661
  3097   001020  EF14  F008         	goto	u1660
  3098   001024                     u1661:
  3099   001024  EF2B  F008         	goto	l2606
  3100   001028                     u1660:
  3101   001028                     
  3102                           ;OBCII_PIC18F46K22.c: 476:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3103   001028  0E68               	movlw	104
  3104   00102A  6E0B               	movwf	??_print_Vbatt^0,c
  3105   00102C  0EE4               	movlw	228
  3106   00102E                     u2557:
  3107   00102E  2EE8               	decfsz	wreg,f,c
  3108   001030  D7FE               	bra	u2557
  3109   001032  2E0B               	decfsz	??_print_Vbatt^0,f,c
  3110   001034  D7FC               	bra	u2557
  3111   001036  D000               	nop2	
  3112   001038                     
  3113                           ;OBCII_PIC18F46K22.c: 477:             if (PORTCbits.RC5 == 0) {
  3114   001038  BA82               	btfsc	130,5,c	;volatile
  3115   00103A  EF21  F008         	goto	u1671
  3116   00103E  EF23  F008         	goto	u1670
  3117   001042                     u1671:
  3118   001042  EF2B  F008         	goto	l2606
  3119   001046                     u1670:
  3120   001046                     
  3121                           ;OBCII_PIC18F46K22.c: 478:                 LCD_clear();
  3122   001046  EC3D  F00C         	call	_LCD_clear	;wreg free
  3123   00104A                     
  3124                           ;OBCII_PIC18F46K22.c: 479:                 display_mm();
  3125   00104A  ECEC  F00B         	call	_display_mm	;wreg free
  3126   00104E                     
  3127                           ;OBCII_PIC18F46K22.c: 480:                 menu_sel = -1;
  3128   00104E  684F               	setf	_menu_sel^0,c
  3129   001050  6850               	setf	(_menu_sel+1)^0,c
  3130                           
  3131                           ;OBCII_PIC18F46K22.c: 481:                 break;
  3132   001052  EF35  F008         	goto	l2610
  3133   001056                     l2606:
  3134                           
  3135                           ;OBCII_PIC18F46K22.c: 484:         parsing_notif();
  3136   001056  EC4B  F00C         	call	_parsing_notif	;wreg free
  3137   00105A                     l2608:
  3138                           
  3139                           ;OBCII_PIC18F46K22.c: 473:     while(!message_complete) {
  3140   00105A  504C               	movf	_message_complete^0,w,c	;volatile
  3141   00105C  B4D8               	btfsc	status,2,c
  3142   00105E  EF33  F008         	goto	u1681
  3143   001062  EF35  F008         	goto	u1680
  3144   001066                     u1681:
  3145   001066  EF0D  F008         	goto	l258
  3146   00106A                     u1680:
  3147   00106A                     l2610:
  3148                           
  3149                           ;OBCII_PIC18F46K22.c: 486:     clear_parsing_notif();
  3150   00106A  EC57  F00C         	call	_clear_parsing_notif	;wreg free
  3151   00106E                     
  3152                           ;OBCII_PIC18F46K22.c: 488:     LCD_cursor_set(2,7);
  3153   00106E  0E07               	movlw	7
  3154   001070  6E06               	movwf	LCD_cursor_set@column^0,c
  3155   001072  0E02               	movlw	2
  3156   001074  ECDE  F00A         	call	_LCD_cursor_set
  3157   001078                     
  3158                           ;OBCII_PIC18F46K22.c: 489:     LCD_write_string("     ");
  3159   001078  0E95               	movlw	low (STR_32+8)
  3160   00107A  6E06               	movwf	LCD_write_string@string^0,c
  3161   00107C  0EFF               	movlw	high (STR_32+8)
  3162   00107E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3163   001080  ECCE  F009         	call	_LCD_write_string	;wreg free
  3164                           
  3165                           ;OBCII_PIC18F46K22.c: 491:     LCD_cursor_set(1,7);
  3166   001084  0E07               	movlw	7
  3167   001086  6E06               	movwf	LCD_cursor_set@column^0,c
  3168   001088  0E01               	movlw	1
  3169   00108A  ECDE  F00A         	call	_LCD_cursor_set
  3170   00108E                     
  3171                           ;OBCII_PIC18F46K22.c: 492:     LCD_write_string("VBatt");
  3172   00108E  0ED2               	movlw	low STR_20
  3173   001090  6E06               	movwf	LCD_write_string@string^0,c
  3174   001092  0EFF               	movlw	high STR_20
  3175   001094  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3176   001096  ECCE  F009         	call	_LCD_write_string	;wreg free
  3177   00109A                     
  3178                           ;OBCII_PIC18F46K22.c: 493:     LCD_cursor_set(2,7);
  3179   00109A  0E07               	movlw	7
  3180   00109C  6E06               	movwf	LCD_cursor_set@column^0,c
  3181   00109E  0E02               	movlw	2
  3182   0010A0  ECDE  F00A         	call	_LCD_cursor_set
  3183   0010A4                     
  3184                           ;OBCII_PIC18F46K22.c: 495:     if (!strchr(buffer, 'V')) {
  3185   0010A4  0E80               	movlw	low _buffer
  3186   0010A6  6E03               	movwf	strchr@s^0,c
  3187   0010A8  0E00               	movlw	0
  3188   0010AA  6E05               	movwf	(strchr@c+1)^0,c
  3189   0010AC  0E56               	movlw	86
  3190   0010AE  6E04               	movwf	strchr@c^0,c
  3191   0010B0  EC7D  F00B         	call	_strchr	;wreg free
  3192   0010B4  0900               	iorlw	0
  3193   0010B6  A4D8               	btfss	status,2,c
  3194   0010B8  EF60  F008         	goto	u1691
  3195   0010BC  EF62  F008         	goto	u1690
  3196   0010C0                     u1691:
  3197   0010C0  EF6A  F008         	goto	l2624
  3198   0010C4                     u1690:
  3199   0010C4                     
  3200                           ;OBCII_PIC18F46K22.c: 496:         LCD_write_string("N/A");
  3201   0010C4  0EEA               	movlw	low STR_21
  3202   0010C6  6E06               	movwf	LCD_write_string@string^0,c
  3203   0010C8  0EFF               	movlw	high STR_21
  3204   0010CA  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3205   0010CC  ECCE  F009         	call	_LCD_write_string	;wreg free
  3206                           
  3207                           ;OBCII_PIC18F46K22.c: 497:     }
  3208   0010D0  EF6F  F008         	goto	l2626
  3209   0010D4                     l2624:
  3210                           
  3211                           ;OBCII_PIC18F46K22.c: 499:     LCD_write_string(buffer);
  3212   0010D4  0E80               	movlw	low _buffer
  3213   0010D6  6E06               	movwf	LCD_write_string@string^0,c
  3214   0010D8  6A07               	clrf	(LCD_write_string@string+1)^0,c
  3215   0010DA  ECCE  F009         	call	_LCD_write_string	;wreg free
  3216   0010DE                     l2626:
  3217                           
  3218                           ;OBCII_PIC18F46K22.c: 502:     buffer_count = 0;
  3219   0010DE  6A4E               	clrf	_buffer_count^0,c
  3220   0010E0                     
  3221                           ;OBCII_PIC18F46K22.c: 503:     message_complete = 0;
  3222   0010E0  6A4C               	clrf	_message_complete^0,c	;volatile
  3223   0010E2  0012               	return		;funcret
  3224   0010E4                     __end_of_print_Vbatt:
  3225                           	callstack 0
  3226                           
  3227 ;; *************** function _strchr *****************
  3228 ;; Defined at:
  3229 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  s               1    2[COMRAM] PTR const unsigned char 
  3232 ;;		 -> buffer(32), 
  3233 ;;  c               2    3[COMRAM] int 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    2[COMRAM] PTR unsigned char 
  3238 ;; Registers used:
  3239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3245 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;Total ram usage:        4 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 1
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_print_Vbatt
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text11
  3260   0016FA                     __ptext11:
  3261                           	callstack 0
  3262   0016FA                     _strchr:
  3263                           	callstack 26
  3264   0016FA                     l1195:
  3265   0016FA  5003               	movf	strchr@s^0,w,c
  3266   0016FC  6ED9               	movwf	fsr2l,c
  3267   0016FE  6ADA               	clrf	fsr2h,c
  3268   001700  5004               	movf	strchr@c^0,w,c
  3269   001702  18DE               	xorwf	postinc2,w,c
  3270   001704  A4D8               	btfss	status,2,c
  3271   001706  EF87  F00B         	goto	u1591
  3272   00170A  EF89  F00B         	goto	u1590
  3273   00170E                     u1591:
  3274   00170E  EF8C  F00B         	goto	l2530
  3275   001712                     u1590:
  3276   001712  5003               	movf	strchr@s^0,w,c
  3277   001714  EF99  F00B         	goto	l1197
  3278   001718                     l2530:
  3279   001718  2A03               	incf	strchr@s^0,f,c
  3280   00171A  0403               	decf	strchr@s^0,w,c
  3281   00171C  6ED9               	movwf	fsr2l,c
  3282   00171E  6ADA               	clrf	fsr2h,c
  3283   001720  50DF               	movf	indf2,w,c
  3284   001722  A4D8               	btfss	status,2,c
  3285   001724  EF96  F00B         	goto	u1601
  3286   001728  EF98  F00B         	goto	u1600
  3287   00172C                     u1601:
  3288   00172C  EF7D  F00B         	goto	l1195
  3289   001730                     u1600:
  3290   001730  0E00               	movlw	0
  3291   001732                     l1197:
  3292   001732  0012               	return		;funcret
  3293   001734                     __end_of_strchr:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _print_RPM *****************
  3297 ;; Defined at:
  3298 ;;		line 434 in file "OBCII_PIC18F46K22.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;Total ram usage:        3 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 6
  3319 ;; This function calls:
  3320 ;;		_LCD_clear
  3321 ;;		_LCD_cursor_set
  3322 ;;		_LCD_write_string
  3323 ;;		_UART1_SendString
  3324 ;;		_clear_parsing_notif
  3325 ;;		_display_mm
  3326 ;;		_hex_char_to_value
  3327 ;;		_parsing_notif
  3328 ;;		_sprintf
  3329 ;; This function is called by:
  3330 ;;		_live_reading_mode
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text12
  3335   0009C0                     __ptext12:
  3336                           	callstack 0
  3337   0009C0                     _print_RPM:
  3338                           	callstack 22
  3339   0009C0                     
  3340                           ;OBCII_PIC18F46K22.c: 436:     UART1_SendString("010C\r");
  3341   0009C0  0EC0               	movlw	low STR_14
  3342   0009C2  6E04               	movwf	UART1_SendString@string^0,c
  3343   0009C4  0EFF               	movlw	high STR_14
  3344   0009C6  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3345   0009C8  EC0E  F00B         	call	_UART1_SendString	;wreg free
  3346                           
  3347                           ;OBCII_PIC18F46K22.c: 437:     while(!message_complete) {
  3348   0009CC  EF08  F005         	goto	l2566
  3349   0009D0                     l250:
  3350                           
  3351                           ;OBCII_PIC18F46K22.c: 439:         if (PORTCbits.RC5 == 0) {
  3352   0009D0  BA82               	btfsc	130,5,c	;volatile
  3353   0009D2  EFED  F004         	goto	u1631
  3354   0009D6  EFEF  F004         	goto	u1630
  3355   0009DA                     u1631:
  3356   0009DA  EF06  F005         	goto	l2564
  3357   0009DE                     u1630:
  3358   0009DE                     
  3359                           ;OBCII_PIC18F46K22.c: 440:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3360   0009DE  0E68               	movlw	104
  3361   0009E0  6E2E               	movwf	??_print_RPM^0,c
  3362   0009E2  0EE4               	movlw	228
  3363   0009E4                     u2567:
  3364   0009E4  2EE8               	decfsz	wreg,f,c
  3365   0009E6  D7FE               	bra	u2567
  3366   0009E8  2E2E               	decfsz	??_print_RPM^0,f,c
  3367   0009EA  D7FC               	bra	u2567
  3368   0009EC  D000               	nop2	
  3369   0009EE                     
  3370                           ;OBCII_PIC18F46K22.c: 441:             if (PORTCbits.RC5 == 0) {
  3371   0009EE  BA82               	btfsc	130,5,c	;volatile
  3372   0009F0  EFFC  F004         	goto	u1641
  3373   0009F4  EFFE  F004         	goto	u1640
  3374   0009F8                     u1641:
  3375   0009F8  EF06  F005         	goto	l2564
  3376   0009FC                     u1640:
  3377   0009FC                     
  3378                           ;OBCII_PIC18F46K22.c: 442:                 LCD_clear();
  3379   0009FC  EC3D  F00C         	call	_LCD_clear	;wreg free
  3380   000A00                     
  3381                           ;OBCII_PIC18F46K22.c: 443:                 display_mm();
  3382   000A00  ECEC  F00B         	call	_display_mm	;wreg free
  3383   000A04                     
  3384                           ;OBCII_PIC18F46K22.c: 444:                 menu_sel = -1;
  3385   000A04  684F               	setf	_menu_sel^0,c
  3386   000A06  6850               	setf	(_menu_sel+1)^0,c
  3387                           
  3388                           ;OBCII_PIC18F46K22.c: 445:                 break;
  3389   000A08  EF10  F005         	goto	l2568
  3390   000A0C                     l2564:
  3391                           
  3392                           ;OBCII_PIC18F46K22.c: 448:         parsing_notif();
  3393   000A0C  EC4B  F00C         	call	_parsing_notif	;wreg free
  3394   000A10                     l2566:
  3395                           
  3396                           ;OBCII_PIC18F46K22.c: 437:     while(!message_complete) {
  3397   000A10  504C               	movf	_message_complete^0,w,c	;volatile
  3398   000A12  B4D8               	btfsc	status,2,c
  3399   000A14  EF0E  F005         	goto	u1651
  3400   000A18  EF10  F005         	goto	u1650
  3401   000A1C                     u1651:
  3402   000A1C  EFE8  F004         	goto	l250
  3403   000A20                     u1650:
  3404   000A20                     l2568:
  3405                           
  3406                           ;OBCII_PIC18F46K22.c: 450:     clear_parsing_notif();
  3407   000A20  EC57  F00C         	call	_clear_parsing_notif	;wreg free
  3408   000A24                     
  3409                           ;OBCII_PIC18F46K22.c: 452:     A_rpm = (hex_char_to_value(buffer[4]) << 4) | hex_char_to
      +                          _value(buffer[5]);
  3410   000A24  0100               	movlb	0	; () banked
  3411   000A26  5184               	movf	(_buffer+4)& (0+255),w,b
  3412   000A28  EC51  F009         	call	_hex_char_to_value
  3413   000A2C  6E2E               	movwf	??_print_RPM^0,c
  3414   000A2E  6A2F               	clrf	(??_print_RPM+1)^0,c
  3415   000A30  3A2E               	swapf	??_print_RPM^0,f,c
  3416   000A32  3A2F               	swapf	(??_print_RPM+1)^0,f,c
  3417   000A34  0EF0               	movlw	240
  3418   000A36  162F               	andwf	(??_print_RPM+1)^0,f,c
  3419   000A38  502E               	movf	??_print_RPM^0,w,c
  3420   000A3A  0B0F               	andlw	15
  3421   000A3C  122F               	iorwf	(??_print_RPM+1)^0,f,c
  3422   000A3E  0EF0               	movlw	240
  3423   000A40  162E               	andwf	??_print_RPM^0,f,c
  3424   000A42  0100               	movlb	0	; () banked
  3425   000A44  5185               	movf	(_buffer+5)& (0+255),w,b
  3426   000A46  EC51  F009         	call	_hex_char_to_value
  3427   000A4A  6E30               	movwf	(??_print_RPM+2)^0,c
  3428   000A4C  5030               	movf	(??_print_RPM+2)^0,w,c
  3429   000A4E  102E               	iorwf	??_print_RPM^0,w,c
  3430   000A50  6E47               	movwf	_A_rpm^0,c
  3431   000A52  502F               	movf	(??_print_RPM+1)^0,w,c
  3432   000A54  6E48               	movwf	(_A_rpm+1)^0,c
  3433   000A56                     
  3434                           ;OBCII_PIC18F46K22.c: 453:     B_rpm = (hex_char_to_value(buffer[6]) << 4) | hex_char_to
      +                          _value(buffer[7]);
  3435   000A56  0100               	movlb	0	; () banked
  3436   000A58  5186               	movf	(_buffer+6)& (0+255),w,b
  3437   000A5A  EC51  F009         	call	_hex_char_to_value
  3438   000A5E  6E2E               	movwf	??_print_RPM^0,c
  3439   000A60  6A2F               	clrf	(??_print_RPM+1)^0,c
  3440   000A62  3A2E               	swapf	??_print_RPM^0,f,c
  3441   000A64  3A2F               	swapf	(??_print_RPM+1)^0,f,c
  3442   000A66  0EF0               	movlw	240
  3443   000A68  162F               	andwf	(??_print_RPM+1)^0,f,c
  3444   000A6A  502E               	movf	??_print_RPM^0,w,c
  3445   000A6C  0B0F               	andlw	15
  3446   000A6E  122F               	iorwf	(??_print_RPM+1)^0,f,c
  3447   000A70  0EF0               	movlw	240
  3448   000A72  162E               	andwf	??_print_RPM^0,f,c
  3449   000A74  0100               	movlb	0	; () banked
  3450   000A76  5187               	movf	(_buffer+7)& (0+255),w,b
  3451   000A78  EC51  F009         	call	_hex_char_to_value
  3452   000A7C  6E30               	movwf	(??_print_RPM+2)^0,c
  3453   000A7E  5030               	movf	(??_print_RPM+2)^0,w,c
  3454   000A80  102E               	iorwf	??_print_RPM^0,w,c
  3455   000A82  6E45               	movwf	_B_rpm^0,c
  3456   000A84  502F               	movf	(??_print_RPM+1)^0,w,c
  3457   000A86  6E46               	movwf	(_B_rpm+1)^0,c
  3458   000A88                     
  3459                           ;OBCII_PIC18F46K22.c: 454:     RPM = ((A_rpm * 256) + B_rpm) / 4;
  3460   000A88  5047               	movf	_A_rpm^0,w,c
  3461   000A8A  6E2F               	movwf	(??_print_RPM+1)^0,c
  3462   000A8C  6A2E               	clrf	??_print_RPM^0,c
  3463   000A8E  5045               	movf	_B_rpm^0,w,c
  3464   000A90  262E               	addwf	??_print_RPM^0,f,c
  3465   000A92  5046               	movf	(_B_rpm+1)^0,w,c
  3466   000A94  222F               	addwfc	(??_print_RPM+1)^0,f,c
  3467   000A96  90D8               	bcf	status,0,c
  3468   000A98  322F               	rrcf	(??_print_RPM+1)^0,f,c
  3469   000A9A  322E               	rrcf	??_print_RPM^0,f,c
  3470   000A9C  90D8               	bcf	status,0,c
  3471   000A9E  322F               	rrcf	(??_print_RPM+1)^0,f,c
  3472   000AA0  322E               	rrcf	??_print_RPM^0,f,c
  3473   000AA2  C02E  F043         	movff	??_print_RPM,_RPM
  3474   000AA6  C02F  F044         	movff	??_print_RPM+1,_RPM+1
  3475   000AAA                     
  3476                           ;OBCII_PIC18F46K22.c: 456:     sprintf(rpm_string, "%u", RPM);
  3477   000AAA  0EB0               	movlw	low _rpm_string
  3478   000AAC  6E1D               	movwf	sprintf@s^0,c
  3479   000AAE  0EF6               	movlw	low STR_15
  3480   000AB0  6E1E               	movwf	sprintf@fmt^0,c
  3481   000AB2  0EFF               	movlw	high STR_15
  3482   000AB4  6E1F               	movwf	(sprintf@fmt+1)^0,c
  3483   000AB6  C043  F020         	movff	_RPM,?_sprintf+3
  3484   000ABA  C044  F021         	movff	_RPM+1,?_sprintf+4
  3485   000ABE  EC9A  F00B         	call	_sprintf	;wreg free
  3486   000AC2                     
  3487                           ;OBCII_PIC18F46K22.c: 458:     LCD_cursor_set(2,1);
  3488   000AC2  0E01               	movlw	1
  3489   000AC4  6E06               	movwf	LCD_cursor_set@column^0,c
  3490   000AC6  0E02               	movlw	2
  3491   000AC8  ECDE  F00A         	call	_LCD_cursor_set
  3492   000ACC                     
  3493                           ;OBCII_PIC18F46K22.c: 459:     LCD_write_string("     ");
  3494   000ACC  0E95               	movlw	low (STR_32+8)
  3495   000ACE  6E06               	movwf	LCD_write_string@string^0,c
  3496   000AD0  0EFF               	movlw	high (STR_32+8)
  3497   000AD2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3498   000AD4  ECCE  F009         	call	_LCD_write_string	;wreg free
  3499   000AD8                     
  3500                           ;OBCII_PIC18F46K22.c: 461:     LCD_cursor_set(1,1);
  3501   000AD8  0E01               	movlw	1
  3502   000ADA  6E06               	movwf	LCD_cursor_set@column^0,c
  3503   000ADC  0E01               	movlw	1
  3504   000ADE  ECDE  F00A         	call	_LCD_cursor_set
  3505   000AE2                     
  3506                           ;OBCII_PIC18F46K22.c: 462:     LCD_write_string("RPM");
  3507   000AE2  0EEE               	movlw	low STR_17
  3508   000AE4  6E06               	movwf	LCD_write_string@string^0,c
  3509   000AE6  0EFF               	movlw	high STR_17
  3510   000AE8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3511   000AEA  ECCE  F009         	call	_LCD_write_string	;wreg free
  3512   000AEE                     
  3513                           ;OBCII_PIC18F46K22.c: 463:     LCD_cursor_set(2,1);
  3514   000AEE  0E01               	movlw	1
  3515   000AF0  6E06               	movwf	LCD_cursor_set@column^0,c
  3516   000AF2  0E02               	movlw	2
  3517   000AF4  ECDE  F00A         	call	_LCD_cursor_set
  3518   000AF8                     
  3519                           ;OBCII_PIC18F46K22.c: 464:     LCD_write_string(rpm_string);
  3520   000AF8  0EB0               	movlw	low _rpm_string
  3521   000AFA  6E06               	movwf	LCD_write_string@string^0,c
  3522   000AFC  6A07               	clrf	(LCD_write_string@string+1)^0,c
  3523   000AFE  ECCE  F009         	call	_LCD_write_string	;wreg free
  3524   000B02                     
  3525                           ;OBCII_PIC18F46K22.c: 466:     buffer_count = 0;
  3526   000B02  6A4E               	clrf	_buffer_count^0,c
  3527   000B04                     
  3528                           ;OBCII_PIC18F46K22.c: 467:     message_complete = 0;
  3529   000B04  6A4C               	clrf	_message_complete^0,c	;volatile
  3530   000B06  0012               	return		;funcret
  3531   000B08                     __end_of_print_RPM:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function _print_AI_Temp *****************
  3535 ;; Defined at:
  3536 ;;		line 506 in file "OBCII_PIC18F46K22.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;Total ram usage:        3 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 6
  3557 ;; This function calls:
  3558 ;;		_LCD_clear
  3559 ;;		_LCD_cursor_set
  3560 ;;		_LCD_write_string
  3561 ;;		_UART1_SendString
  3562 ;;		_clear_parsing_notif
  3563 ;;		_display_mm
  3564 ;;		_hex_char_to_value
  3565 ;;		_parsing_notif
  3566 ;;		_sprintf
  3567 ;; This function is called by:
  3568 ;;		_live_reading_mode
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text13
  3573   000B08                     __ptext13:
  3574                           	callstack 0
  3575   000B08                     _print_AI_Temp:
  3576                           	callstack 22
  3577   000B08                     
  3578                           ;OBCII_PIC18F46K22.c: 508:     UART1_SendString("010F\r");
  3579   000B08  0EC6               	movlw	low STR_22
  3580   000B0A  6E04               	movwf	UART1_SendString@string^0,c
  3581   000B0C  0EFF               	movlw	high STR_22
  3582   000B0E  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3583   000B10  EC0E  F00B         	call	_UART1_SendString	;wreg free
  3584                           
  3585                           ;OBCII_PIC18F46K22.c: 509:      while(!message_complete) {
  3586   000B14  EFAC  F005         	goto	l2644
  3587   000B18                     l268:
  3588                           
  3589                           ;OBCII_PIC18F46K22.c: 510:         if (PORTCbits.RC5 == 0) {
  3590   000B18  BA82               	btfsc	130,5,c	;volatile
  3591   000B1A  EF91  F005         	goto	u1701
  3592   000B1E  EF93  F005         	goto	u1700
  3593   000B22                     u1701:
  3594   000B22  EFAA  F005         	goto	l2642
  3595   000B26                     u1700:
  3596   000B26                     
  3597                           ;OBCII_PIC18F46K22.c: 511:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3598   000B26  0E68               	movlw	104
  3599   000B28  6E2E               	movwf	??_print_AI_Temp^0,c
  3600   000B2A  0EE4               	movlw	228
  3601   000B2C                     u2577:
  3602   000B2C  2EE8               	decfsz	wreg,f,c
  3603   000B2E  D7FE               	bra	u2577
  3604   000B30  2E2E               	decfsz	??_print_AI_Temp^0,f,c
  3605   000B32  D7FC               	bra	u2577
  3606   000B34  D000               	nop2	
  3607   000B36                     
  3608                           ;OBCII_PIC18F46K22.c: 512:             if (PORTCbits.RC5 == 0) {
  3609   000B36  BA82               	btfsc	130,5,c	;volatile
  3610   000B38  EFA0  F005         	goto	u1711
  3611   000B3C  EFA2  F005         	goto	u1710
  3612   000B40                     u1711:
  3613   000B40  EFAA  F005         	goto	l2642
  3614   000B44                     u1710:
  3615   000B44                     
  3616                           ;OBCII_PIC18F46K22.c: 513:                 LCD_clear();
  3617   000B44  EC3D  F00C         	call	_LCD_clear	;wreg free
  3618   000B48                     
  3619                           ;OBCII_PIC18F46K22.c: 514:                 display_mm();
  3620   000B48  ECEC  F00B         	call	_display_mm	;wreg free
  3621   000B4C                     
  3622                           ;OBCII_PIC18F46K22.c: 515:                 menu_sel = -1;
  3623   000B4C  684F               	setf	_menu_sel^0,c
  3624   000B4E  6850               	setf	(_menu_sel+1)^0,c
  3625                           
  3626                           ;OBCII_PIC18F46K22.c: 516:                 break;
  3627   000B50  EFB4  F005         	goto	l2646
  3628   000B54                     l2642:
  3629                           
  3630                           ;OBCII_PIC18F46K22.c: 520:         parsing_notif();
  3631   000B54  EC4B  F00C         	call	_parsing_notif	;wreg free
  3632   000B58                     l2644:
  3633                           
  3634                           ;OBCII_PIC18F46K22.c: 509:      while(!message_complete) {
  3635   000B58  504C               	movf	_message_complete^0,w,c	;volatile
  3636   000B5A  B4D8               	btfsc	status,2,c
  3637   000B5C  EFB2  F005         	goto	u1721
  3638   000B60  EFB4  F005         	goto	u1720
  3639   000B64                     u1721:
  3640   000B64  EF8C  F005         	goto	l268
  3641   000B68                     u1720:
  3642   000B68                     l2646:
  3643                           
  3644                           ;OBCII_PIC18F46K22.c: 522:     clear_parsing_notif();
  3645   000B68  EC57  F00C         	call	_clear_parsing_notif	;wreg free
  3646   000B6C                     
  3647                           ;OBCII_PIC18F46K22.c: 524:     LCD_cursor_set(2,13);
  3648   000B6C  0E0D               	movlw	13
  3649   000B6E  6E06               	movwf	LCD_cursor_set@column^0,c
  3650   000B70  0E02               	movlw	2
  3651   000B72  ECDE  F00A         	call	_LCD_cursor_set
  3652   000B76                     
  3653                           ;OBCII_PIC18F46K22.c: 525:     LCD_write_string("   ");
  3654   000B76  0E97               	movlw	low (STR_32+10)
  3655   000B78  6E06               	movwf	LCD_write_string@string^0,c
  3656   000B7A  0EFF               	movlw	high (STR_32+10)
  3657   000B7C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3658   000B7E  ECCE  F009         	call	_LCD_write_string	;wreg free
  3659                           
  3660                           ;OBCII_PIC18F46K22.c: 527:     A_air_intake = (hex_char_to_value(buffer[4]) << 4) | hex_
      +                          char_to_value(buffer[5]);
  3661   000B82  0100               	movlb	0	; () banked
  3662   000B84  5184               	movf	(_buffer+4)& (0+255),w,b
  3663   000B86  EC51  F009         	call	_hex_char_to_value
  3664   000B8A  6E2E               	movwf	??_print_AI_Temp^0,c
  3665   000B8C  6A2F               	clrf	(??_print_AI_Temp+1)^0,c
  3666   000B8E  3A2E               	swapf	??_print_AI_Temp^0,f,c
  3667   000B90  3A2F               	swapf	(??_print_AI_Temp+1)^0,f,c
  3668   000B92  0EF0               	movlw	240
  3669   000B94  162F               	andwf	(??_print_AI_Temp+1)^0,f,c
  3670   000B96  502E               	movf	??_print_AI_Temp^0,w,c
  3671   000B98  0B0F               	andlw	15
  3672   000B9A  122F               	iorwf	(??_print_AI_Temp+1)^0,f,c
  3673   000B9C  0EF0               	movlw	240
  3674   000B9E  162E               	andwf	??_print_AI_Temp^0,f,c
  3675   000BA0  0100               	movlb	0	; () banked
  3676   000BA2  5185               	movf	(_buffer+5)& (0+255),w,b
  3677   000BA4  EC51  F009         	call	_hex_char_to_value
  3678   000BA8  6E30               	movwf	(??_print_AI_Temp+2)^0,c
  3679   000BAA  5030               	movf	(??_print_AI_Temp+2)^0,w,c
  3680   000BAC  102E               	iorwf	??_print_AI_Temp^0,w,c
  3681   000BAE  6E41               	movwf	_A_air_intake^0,c
  3682   000BB0  502F               	movf	(??_print_AI_Temp+1)^0,w,c
  3683   000BB2  6E42               	movwf	(_A_air_intake+1)^0,c
  3684   000BB4                     
  3685                           ;OBCII_PIC18F46K22.c: 528:     air_intake_temp = A_air_intake - 40;
  3686   000BB4  0ED8               	movlw	216
  3687   000BB6  2441               	addwf	_A_air_intake^0,w,c
  3688   000BB8  6E3F               	movwf	_air_intake_temp^0,c
  3689   000BBA  0EFF               	movlw	255
  3690   000BBC  2042               	addwfc	(_A_air_intake+1)^0,w,c
  3691   000BBE  6E40               	movwf	(_air_intake_temp+1)^0,c
  3692   000BC0                     
  3693                           ;OBCII_PIC18F46K22.c: 530:     sprintf(air_intake_string, "%u", air_intake_temp);
  3694   000BC0  0EA0               	movlw	low _air_intake_string
  3695   000BC2  6E1D               	movwf	sprintf@s^0,c
  3696   000BC4  0EF6               	movlw	low STR_15
  3697   000BC6  6E1E               	movwf	sprintf@fmt^0,c
  3698   000BC8  0EFF               	movlw	high STR_15
  3699   000BCA  6E1F               	movwf	(sprintf@fmt+1)^0,c
  3700   000BCC  C03F  F020         	movff	_air_intake_temp,?_sprintf+3
  3701   000BD0  C040  F021         	movff	_air_intake_temp+1,?_sprintf+4
  3702   000BD4  EC9A  F00B         	call	_sprintf	;wreg free
  3703   000BD8                     
  3704                           ;OBCII_PIC18F46K22.c: 532:     LCD_cursor_set(1,13);
  3705   000BD8  0E0D               	movlw	13
  3706   000BDA  6E06               	movwf	LCD_cursor_set@column^0,c
  3707   000BDC  0E01               	movlw	1
  3708   000BDE  ECDE  F00A         	call	_LCD_cursor_set
  3709   000BE2                     
  3710                           ;OBCII_PIC18F46K22.c: 533:     LCD_write_string("AIT");
  3711   000BE2  0EF2               	movlw	low STR_25
  3712   000BE4  6E06               	movwf	LCD_write_string@string^0,c
  3713   000BE6  0EFF               	movlw	high STR_25
  3714   000BE8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3715   000BEA  ECCE  F009         	call	_LCD_write_string	;wreg free
  3716   000BEE                     
  3717                           ;OBCII_PIC18F46K22.c: 534:     LCD_cursor_set(2,13);
  3718   000BEE  0E0D               	movlw	13
  3719   000BF0  6E06               	movwf	LCD_cursor_set@column^0,c
  3720   000BF2  0E02               	movlw	2
  3721   000BF4  ECDE  F00A         	call	_LCD_cursor_set
  3722   000BF8                     
  3723                           ;OBCII_PIC18F46K22.c: 535:     LCD_write_string(air_intake_string);
  3724   000BF8  0EA0               	movlw	low _air_intake_string
  3725   000BFA  6E06               	movwf	LCD_write_string@string^0,c
  3726   000BFC  6A07               	clrf	(LCD_write_string@string+1)^0,c
  3727   000BFE  ECCE  F009         	call	_LCD_write_string	;wreg free
  3728   000C02                     
  3729                           ;OBCII_PIC18F46K22.c: 536:     LCD_cursor_set(2,15);
  3730   000C02  0E0F               	movlw	15
  3731   000C04  6E06               	movwf	LCD_cursor_set@column^0,c
  3732   000C06  0E02               	movlw	2
  3733   000C08  ECDE  F00A         	call	_LCD_cursor_set
  3734   000C0C                     
  3735                           ;OBCII_PIC18F46K22.c: 537:     LCD_write_string("C");
  3736   000C0C  0EF9               	movlw	low STR_26
  3737   000C0E  6E06               	movwf	LCD_write_string@string^0,c
  3738   000C10  0EFF               	movlw	high STR_26
  3739   000C12  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3740   000C14  ECCE  F009         	call	_LCD_write_string	;wreg free
  3741   000C18                     
  3742                           ;OBCII_PIC18F46K22.c: 539:     buffer_count = 0;
  3743   000C18  6A4E               	clrf	_buffer_count^0,c
  3744   000C1A                     
  3745                           ;OBCII_PIC18F46K22.c: 540:     message_complete = 0;
  3746   000C1A  6A4C               	clrf	_message_complete^0,c	;volatile
  3747   000C1C  0012               	return		;funcret
  3748   000C1E                     __end_of_print_AI_Temp:
  3749                           	callstack 0
  3750                           
  3751 ;; *************** function _sprintf *****************
  3752 ;; Defined at:
  3753 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  s               1   28[COMRAM] PTR unsigned char 
  3756 ;;		 -> air_intake_string(16), rpm_string(16), 
  3757 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
  3758 ;;		 -> STR_24(3), STR_15(3), 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  f              11   34[COMRAM] struct _IO_FILE
  3761 ;;  ret             2    0        int 
  3762 ;;  ap              1   33[COMRAM] PTR void [1]
  3763 ;;		 -> ?_sprintf(2), 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  2   28[COMRAM] int 
  3766 ;; Registers used:
  3767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3773 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;Total ram usage:       17 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; Hardware stack levels required when called: 5
  3780 ;; This function calls:
  3781 ;;		_vfprintf
  3782 ;; This function is called by:
  3783 ;;		_print_RPM
  3784 ;;		_print_AI_Temp
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text14
  3789   001734                     __ptext14:
  3790                           	callstack 0
  3791   001734                     _sprintf:
  3792                           	callstack 22
  3793   001734  0E20               	movlw	low (?_sprintf+3)
  3794   001736  6E22               	movwf	sprintf@ap^0,c
  3795   001738  C01D  F023         	movff	sprintf@s,sprintf@f
  3796   00173C  0E00               	movlw	0
  3797   00173E  6E26               	movwf	(sprintf@f+3)^0,c
  3798   001740  0E00               	movlw	0
  3799   001742  6E25               	movwf	(sprintf@f+2)^0,c
  3800   001744  0E00               	movlw	0
  3801   001746  6E2D               	movwf	(sprintf@f+10)^0,c
  3802   001748  0E00               	movlw	0
  3803   00174A  6E2C               	movwf	(sprintf@f+9)^0,c
  3804   00174C  0E23               	movlw	low sprintf@f
  3805   00174E  6E17               	movwf	vfprintf@fp^0,c
  3806   001750  C01E  F018         	movff	sprintf@fmt,vfprintf@fmt
  3807   001754  C01F  F019         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3808   001758  0E22               	movlw	low sprintf@ap
  3809   00175A  6E1A               	movwf	vfprintf@ap^0,c
  3810   00175C  EC5C  F00B         	call	_vfprintf	;wreg free
  3811   001760  501D               	movf	sprintf@s^0,w,c
  3812   001762  2425               	addwf	(sprintf@f+2)^0,w,c
  3813   001764  6ED9               	movwf	fsr2l,c
  3814   001766  6ADA               	clrf	fsr2h,c
  3815   001768  6ADF               	clrf	indf2,c
  3816   00176A  0012               	return		;funcret
  3817   00176C                     __end_of_sprintf:
  3818                           	callstack 0
  3819                           
  3820 ;; *************** function _vfprintf *****************
  3821 ;; Defined at:
  3822 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3825 ;;		 -> sprintf@f(11), 
  3826 ;;  fmt             2   23[COMRAM] PTR const unsigned char 
  3827 ;;		 -> STR_24(3), STR_15(3), 
  3828 ;;  ap              1   25[COMRAM] PTR PTR void 
  3829 ;;		 -> sprintf@ap(1), 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  cfmt            2   26[COMRAM] PTR unsigned char 
  3832 ;;		 -> STR_24(3), STR_15(3), 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2   22[COMRAM] int 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;Total ram usage:        6 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 4
  3849 ;; This function calls:
  3850 ;;		_vfpfcnvrt
  3851 ;; This function is called by:
  3852 ;;		_sprintf
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text15
  3857   0016B8                     __ptext15:
  3858                           	callstack 0
  3859   0016B8                     _vfprintf:
  3860                           	callstack 22
  3861   0016B8                     
  3862                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3863   0016B8  C018  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  3864   0016BC  C019  F01C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3867   0016C0  EF6A  F00B         	goto	l2450
  3868   0016C4                     l2448:
  3869                           
  3870                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3871   0016C4  C017  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  3872   0016C8  0E1B               	movlw	low vfprintf@cfmt
  3873   0016CA  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  3874   0016CC  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  3875   0016D0  EC63  F003         	call	_vfpfcnvrt	;wreg free
  3876   0016D4                     l2450:
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3879   0016D4  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  3880   0016D8  C01C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3881   0016DC                     	if	0	;tblptru may be non-zero
  3882   0016DC                     	endif
  3883   0016DC                     	if	0	;tblptru may be non-zero
  3884   0016DC                     	endif
  3885   0016DC  0008               	tblrd		*
  3886   0016DE  50F5               	movf	tablat,w,c
  3887   0016E0  0900               	iorlw	0
  3888   0016E2  A4D8               	btfss	status,2,c
  3889   0016E4  EF76  F00B         	goto	u1511
  3890   0016E8  EF78  F00B         	goto	u1510
  3891   0016EC                     u1511:
  3892   0016EC  EF62  F00B         	goto	l2448
  3893   0016F0                     u1510:
  3894   0016F0                     
  3895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3896   0016F0  0E00               	movlw	0
  3897   0016F2  6E18               	movwf	(?_vfprintf+1)^0,c
  3898   0016F4  0E00               	movlw	0
  3899   0016F6  6E17               	movwf	?_vfprintf^0,c
  3900   0016F8  0012               	return		;funcret
  3901   0016FA                     __end_of_vfprintf:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _vfpfcnvrt *****************
  3905 ;; Defined at:
  3906 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3909 ;;		 -> sprintf@f(11), 
  3910 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  3911 ;;		 -> vfprintf@cfmt(2), 
  3912 ;;  ap              1   12[COMRAM] PTR PTR void 
  3913 ;;		 -> sprintf@ap(1), 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  convarg         4   17[COMRAM] struct .
  3916 ;;  cp              2   15[COMRAM] PTR unsigned char 
  3917 ;;		 -> STR_24(3), STR_15(3), 
  3918 ;;  c               1   21[COMRAM] unsigned char 
  3919 ;;  done            1    0        _Bool 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3929 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;Total ram usage:       12 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 3
  3936 ;; This function calls:
  3937 ;;		___lwdiv
  3938 ;;		___lwmod
  3939 ;;		_fputc
  3940 ;; This function is called by:
  3941 ;;		_vfprintf
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text16
  3946   0006C6                     __ptext16:
  3947                           	callstack 0
  3948   0006C6                     _vfpfcnvrt:
  3949                           	callstack 22
  3950   0006C6                     
  3951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3952   0006C6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3953   0006C8  6ED9               	movwf	fsr2l,c
  3954   0006CA  6ADA               	clrf	fsr2h,c
  3955   0006CC  CFDE FFF6          	movff	postinc2,tblptrl
  3956   0006D0  CFDD FFF7          	movff	postdec2,tblptrh
  3957   0006D4                     	if	0	;tblptru may be non-zero
  3958   0006D4                     	endif
  3959   0006D4                     	if	0	;tblptru may be non-zero
  3960   0006D4                     	endif
  3961   0006D4  0008               	tblrd		*
  3962   0006D6  50F5               	movf	tablat,w,c
  3963   0006D8  0A25               	xorlw	37
  3964   0006DA  A4D8               	btfss	status,2,c
  3965   0006DC  EF72  F003         	goto	u1381
  3966   0006E0  EF74  F003         	goto	u1380
  3967   0006E4                     u1381:
  3968   0006E4  EF14  F004         	goto	l2416
  3969   0006E8                     u1380:
  3970   0006E8                     
  3971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3972   0006E8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3973   0006EA  6ED9               	movwf	fsr2l,c
  3974   0006EC  6ADA               	clrf	fsr2h,c
  3975   0006EE  2ADE               	incf	postinc2,f,c
  3976   0006F0  0E00               	movlw	0
  3977   0006F2  22DD               	addwfc	postdec2,f,c
  3978   0006F4                     
  3979                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3980   0006F4  0E00               	movlw	0
  3981   0006F6  6E3C               	movwf	(_width+1)^0,c
  3982   0006F8  0E00               	movlw	0
  3983   0006FA  6E3B               	movwf	_width^0,c
  3984   0006FC  C03B  F04B         	movff	_width,_flags
  3985   000700                     
  3986                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3987   000700  683D               	setf	_prec^0,c
  3988   000702  683E               	setf	(_prec+1)^0,c
  3989   000704                     
  3990                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  3991   000704  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3992   000706  6ED9               	movwf	fsr2l,c
  3993   000708  6ADA               	clrf	fsr2h,c
  3994   00070A  CFDE F010          	movff	postinc2,vfpfcnvrt@cp
  3995   00070E  CFDD F011          	movff	postdec2,vfpfcnvrt@cp+1
  3996   000712  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3997   000716  C011  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3998   00071A                     	if	0	;tblptru may be non-zero
  3999   00071A                     	endif
  4000   00071A                     	if	0	;tblptru may be non-zero
  4001   00071A                     	endif
  4002   00071A  0008               	tblrd		*
  4003   00071C  50F5               	movf	tablat,w,c
  4004   00071E  0A75               	xorlw	117
  4005   000720  A4D8               	btfss	status,2,c
  4006   000722  EF95  F003         	goto	u1391
  4007   000726  EF97  F003         	goto	u1390
  4008   00072A                     u1391:
  4009   00072A  EF0C  F004         	goto	l2412
  4010   00072E                     u1390:
  4011   00072E                     
  4012                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  4013   00072E  500D               	movf	vfpfcnvrt@ap^0,w,c
  4014   000730  6ED9               	movwf	fsr2l,c
  4015   000732  6ADA               	clrf	fsr2h,c
  4016   000734  0E02               	movlw	2
  4017   000736  26DF               	addwf	indf2,f,c
  4018   000738  5CDF               	subwf	indf2,w,c
  4019   00073A  6ED9               	movwf	fsr2l,c
  4020   00073C  6ADA               	clrf	fsr2h,c
  4021   00073E  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  4022   000742  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  4023   000746                     
  4024                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  4025   000746  0E01               	movlw	1
  4026   000748  2410               	addwf	vfpfcnvrt@cp^0,w,c
  4027   00074A  6E0E               	movwf	??_vfpfcnvrt^0,c
  4028   00074C  0E00               	movlw	0
  4029   00074E  2011               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  4030   000750  6E0F               	movwf	(??_vfpfcnvrt+1)^0,c
  4031   000752  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4032   000754  6ED9               	movwf	fsr2l,c
  4033   000756  6ADA               	clrf	fsr2h,c
  4034   000758  C00E  FFDE         	movff	??_vfpfcnvrt,postinc2
  4035   00075C  C00F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4036                           
  4037                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  4038   000760  EF00  F004         	goto	l2410
  4039   000764                     l2392:
  4040                           
  4041                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  4042   000764  0E20               	movlw	32
  4043   000766  6E16               	movwf	vfpfcnvrt@c^0,c
  4044   000768                     l2394:
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  4047   000768  0616               	decf	vfpfcnvrt@c^0,f,c
  4048   00076A  5016               	movf	vfpfcnvrt@c^0,w,c
  4049   00076C  0F60               	addlw	low _dbuf
  4050   00076E  6ED9               	movwf	fsr2l,c
  4051   000770  6ADA               	clrf	fsr2h,c
  4052   000772  C012  F003         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  4053   000776  C013  F004         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  4054   00077A  0E00               	movlw	0
  4055   00077C  6E06               	movwf	(___lwmod@divisor+1)^0,c
  4056   00077E  0E0A               	movlw	10
  4057   000780  6E05               	movwf	___lwmod@divisor^0,c
  4058   000782  ECAC  F00A         	call	___lwmod	;wreg free
  4059   000786  5003               	movf	?___lwmod^0,w,c
  4060   000788  0F30               	addlw	48
  4061   00078A  6EDF               	movwf	indf2,c
  4062   00078C                     
  4063                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  4064   00078C  C012  F003         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  4065   000790  C013  F004         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  4066   000794  0E00               	movlw	0
  4067   000796  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  4068   000798  0E0A               	movlw	10
  4069   00079A  6E05               	movwf	___lwdiv@divisor^0,c
  4070   00079C  EC0B  F00A         	call	___lwdiv	;wreg free
  4071   0007A0  C003  F012         	movff	?___lwdiv,vfpfcnvrt@convarg
  4072   0007A4  C004  F013         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  4073   0007A8                     
  4074                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  4075   0007A8  5012               	movf	vfpfcnvrt@convarg^0,w,c
  4076   0007AA  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  4077   0007AC  B4D8               	btfsc	status,2,c
  4078   0007AE  EFDB  F003         	goto	u1401
  4079   0007B2  EFDD  F003         	goto	u1400
  4080   0007B6                     u1401:
  4081   0007B6  EFF5  F003         	goto	l2406
  4082   0007BA                     u1400:
  4083   0007BA  5016               	movf	vfpfcnvrt@c^0,w,c
  4084   0007BC  A4D8               	btfss	status,2,c
  4085   0007BE  EFE3  F003         	goto	u1411
  4086   0007C2  EFE5  F003         	goto	u1410
  4087   0007C6                     u1411:
  4088   0007C6  EFB4  F003         	goto	l2394
  4089   0007CA                     u1410:
  4090   0007CA  EFF5  F003         	goto	l2406
  4091   0007CE                     l2402:
  4092                           
  4093                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  4094   0007CE  5016               	movf	vfpfcnvrt@c^0,w,c
  4095   0007D0  0F60               	addlw	low _dbuf
  4096   0007D2  6ED9               	movwf	fsr2l,c
  4097   0007D4  6ADA               	clrf	fsr2h,c
  4098   0007D6  50DF               	movf	indf2,w,c
  4099   0007D8  6E0E               	movwf	??_vfpfcnvrt^0,c
  4100   0007DA  500E               	movf	??_vfpfcnvrt^0,w,c
  4101   0007DC  6E03               	movwf	fputc@c^0,c
  4102   0007DE  6A04               	clrf	(fputc@c+1)^0,c
  4103   0007E0  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4104   0007E4  EC72  F008         	call	_fputc	;wreg free
  4105   0007E8  2A16               	incf	vfpfcnvrt@c^0,f,c
  4106   0007EA                     l2406:
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  4109   0007EA  0E20               	movlw	32
  4110   0007EC  1816               	xorwf	vfpfcnvrt@c^0,w,c
  4111   0007EE  A4D8               	btfss	status,2,c
  4112   0007F0  EFFC  F003         	goto	u1421
  4113   0007F4  EFFE  F003         	goto	u1420
  4114   0007F8                     u1421:
  4115   0007F8  EFE7  F003         	goto	l2402
  4116   0007FC                     u1420:
  4117   0007FC  EF25  F004         	goto	l1162
  4118   000800                     l2410:
  4119   000800  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4120   000804  C011  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4121   000808                     	if	0	;tblptru may be non-zero
  4122   000808                     	endif
  4123   000808                     	if	0	;tblptru may be non-zero
  4124   000808                     	endif
  4125   000808  0008               	tblrd		*
  4126   00080A  50F5               	movf	tablat,w,c
  4127                           
  4128                           ; Switch size 1, requested type "simple"
  4129                           ; Number of cases is 1, Range of values is 117 to 117
  4130                           ; switch strategies available:
  4131                           ; Name         Instructions Cycles
  4132                           ; simple_byte            4     3 (average)
  4133                           ;	Chosen strategy is simple_byte
  4134   00080C  0A75               	xorlw	117	; case 117
  4135   00080E  B4D8               	btfsc	status,2,c
  4136   000810  EFB2  F003         	goto	l2392
  4137   000814  EF0C  F004         	goto	l2412
  4138   000818                     l2412:
  4139                           
  4140                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4141   000818  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4142   00081A  6ED9               	movwf	fsr2l,c
  4143   00081C  6ADA               	clrf	fsr2h,c
  4144   00081E  2ADE               	incf	postinc2,f,c
  4145   000820  0E00               	movlw	0
  4146   000822  22DD               	addwfc	postdec2,f,c
  4147   000824  EF25  F004         	goto	l1162
  4148   000828                     l2416:
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4151   000828  500C               	movf	vfpfcnvrt@fmt^0,w,c
  4152   00082A  6ED9               	movwf	fsr2l,c
  4153   00082C  6ADA               	clrf	fsr2h,c
  4154   00082E  CFDE FFF6          	movff	postinc2,tblptrl
  4155   000832  CFDD FFF7          	movff	postdec2,tblptrh
  4156   000836                     	if	0	;tblptru may be non-zero
  4157   000836                     	endif
  4158   000836                     	if	0	;tblptru may be non-zero
  4159   000836                     	endif
  4160   000836  0008               	tblrd		*
  4161   000838  50F5               	movf	tablat,w,c
  4162   00083A  6E03               	movwf	fputc@c^0,c
  4163   00083C  6A04               	clrf	(fputc@c+1)^0,c
  4164   00083E  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4165   000842  EC72  F008         	call	_fputc	;wreg free
  4166   000846  EF0C  F004         	goto	l2412
  4167   00084A                     l1162:
  4168   00084A  0012               	return		;funcret
  4169   00084C                     __end_of_vfpfcnvrt:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _fputc *****************
  4173 ;; Defined at:
  4174 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  c               2    2[COMRAM] int 
  4177 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  4178 ;;		 -> sprintf@f(11), 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  2    2[COMRAM] int 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4190 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;Total ram usage:        8 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 2
  4197 ;; This function calls:
  4198 ;;		_putch
  4199 ;; This function is called by:
  4200 ;;		_vfpfcnvrt
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text17
  4205   0010E4                     __ptext17:
  4206                           	callstack 0
  4207   0010E4                     _fputc:
  4208                           	callstack 22
  4209   0010E4  5005               	movf	fputc@fp^0,w,c
  4210   0010E6  B4D8               	btfsc	status,2,c
  4211   0010E8  EF78  F008         	goto	u1281
  4212   0010EC  EF7A  F008         	goto	u1280
  4213   0010F0                     u1281:
  4214   0010F0  EF82  F008         	goto	l2334
  4215   0010F4                     u1280:
  4216   0010F4  5005               	movf	fputc@fp^0,w,c
  4217   0010F6  A4D8               	btfss	status,2,c
  4218   0010F8  EF80  F008         	goto	u1291
  4219   0010FC  EF82  F008         	goto	u1290
  4220   001100                     u1291:
  4221   001100  EF87  F008         	goto	l2336
  4222   001104                     u1290:
  4223   001104                     l2334:
  4224   001104  5003               	movf	fputc@c^0,w,c
  4225   001106  EC95  F00C         	call	_putch
  4226   00110A  EFC6  F008         	goto	l1181
  4227   00110E                     l2336:
  4228   00110E  5005               	movf	fputc@fp^0,w,c
  4229   001110  6ED9               	movwf	fsr2l,c
  4230   001112  6ADA               	clrf	fsr2h,c
  4231   001114  0E09               	movlw	9
  4232   001116  26D9               	addwf	fsr2l,f,c
  4233   001118  50DE               	movf	postinc2,w,c
  4234   00111A  10DE               	iorwf	postinc2,w,c
  4235   00111C  B4D8               	btfsc	status,2,c
  4236   00111E  EF93  F008         	goto	u1301
  4237   001122  EF95  F008         	goto	u1300
  4238   001126                     u1301:
  4239   001126  EFAE  F008         	goto	l2340
  4240   00112A                     u1300:
  4241   00112A  5005               	movf	fputc@fp^0,w,c
  4242   00112C  6ED9               	movwf	fsr2l,c
  4243   00112E  6ADA               	clrf	fsr2h,c
  4244   001130  0E09               	movlw	9
  4245   001132  26D9               	addwf	fsr2l,f,c
  4246   001134  5005               	movf	fputc@fp^0,w,c
  4247   001136  6EE1               	movwf	fsr1l,c
  4248   001138  6AE2               	clrf	fsr1h,c
  4249   00113A  0E02               	movlw	2
  4250   00113C  26E1               	addwf	fsr1l,f,c
  4251   00113E  50DE               	movf	postinc2,w,c
  4252   001140  5CE6               	subwf	postinc1,w,c
  4253   001142  50E6               	movf	postinc1,w,c
  4254   001144  0A80               	xorlw	128
  4255   001146  6E0A               	movwf	(??_fputc+4)^0,c
  4256   001148  50DE               	movf	postinc2,w,c
  4257   00114A  0A80               	xorlw	128
  4258   00114C  580A               	subwfb	(??_fputc+4)^0,w,c
  4259   00114E  B0D8               	btfsc	status,0,c
  4260   001150  EFAC  F008         	goto	u1311
  4261   001154  EFAE  F008         	goto	u1310
  4262   001158                     u1311:
  4263   001158  EFC6  F008         	goto	l1181
  4264   00115C                     u1310:
  4265   00115C                     l2340:
  4266   00115C  5005               	movf	fputc@fp^0,w,c
  4267   00115E  6ED9               	movwf	fsr2l,c
  4268   001160  6ADA               	clrf	fsr2h,c
  4269   001162  0E02               	movlw	2
  4270   001164  26D9               	addwf	fsr2l,f,c
  4271   001166  50DF               	movf	indf2,w,c
  4272   001168  6E06               	movwf	??_fputc^0,c
  4273   00116A  5005               	movf	fputc@fp^0,w,c
  4274   00116C  6ED9               	movwf	fsr2l,c
  4275   00116E  6ADA               	clrf	fsr2h,c
  4276   001170  50DF               	movf	indf2,w,c
  4277   001172  2406               	addwf	??_fputc^0,w,c
  4278   001174  6ED9               	movwf	fsr2l,c
  4279   001176  6ADA               	clrf	fsr2h,c
  4280   001178  C003  FFDF         	movff	fputc@c,indf2
  4281   00117C  5005               	movf	fputc@fp^0,w,c
  4282   00117E  6ED9               	movwf	fsr2l,c
  4283   001180  6ADA               	clrf	fsr2h,c
  4284   001182  0E02               	movlw	2
  4285   001184  26D9               	addwf	fsr2l,f,c
  4286   001186  2ADE               	incf	postinc2,f,c
  4287   001188  0E00               	movlw	0
  4288   00118A  22DD               	addwfc	postdec2,f,c
  4289   00118C                     l1181:
  4290   00118C  0012               	return		;funcret
  4291   00118E                     __end_of_fputc:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function _putch *****************
  4295 ;; Defined at:
  4296 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  c               1    wreg     unsigned char 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  c               1    0[COMRAM] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; Hardware stack levels required when called: 1
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_fputc
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text18
  4325   00192A                     __ptext18:
  4326                           	callstack 0
  4327   00192A                     _putch:
  4328                           	callstack 22
  4329   00192A  0012               	return		;funcret
  4330   00192C                     __end_of_putch:
  4331                           	callstack 0
  4332                           
  4333 ;; *************** function ___lwmod *****************
  4334 ;; Defined at:
  4335 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  dividend        2    2[COMRAM] unsigned int 
  4338 ;;  divisor         2    4[COMRAM] unsigned int 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  counter         1    6[COMRAM] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  2    2[COMRAM] unsigned int 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;Total ram usage:        5 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; Hardware stack levels required when called: 1
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_welcome_splash
  4361 ;;		_vfpfcnvrt
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text19
  4366   001558                     __ptext19:
  4367                           	callstack 0
  4368   001558                     ___lwmod:
  4369                           	callstack 28
  4370   001558  5005               	movf	___lwmod@divisor^0,w,c
  4371   00155A  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  4372   00155C  B4D8               	btfsc	status,2,c
  4373   00155E  EFB3  F00A         	goto	u1251
  4374   001562  EFB5  F00A         	goto	u1250
  4375   001566                     u1251:
  4376   001566  EFD9  F00A         	goto	l939
  4377   00156A                     u1250:
  4378   00156A  0E01               	movlw	1
  4379   00156C  6E07               	movwf	___lwmod@counter^0,c
  4380   00156E  EFBD  F00A         	goto	l2320
  4381   001572                     l2318:
  4382   001572  90D8               	bcf	status,0,c
  4383   001574  3605               	rlcf	___lwmod@divisor^0,f,c
  4384   001576  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  4385   001578  2A07               	incf	___lwmod@counter^0,f,c
  4386   00157A                     l2320:
  4387   00157A  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  4388   00157C  EFC2  F00A         	goto	u1261
  4389   001580  EFC4  F00A         	goto	u1260
  4390   001584                     u1261:
  4391   001584  EFB9  F00A         	goto	l2318
  4392   001588                     u1260:
  4393   001588                     l2322:
  4394   001588  5005               	movf	___lwmod@divisor^0,w,c
  4395   00158A  5C03               	subwf	___lwmod@dividend^0,w,c
  4396   00158C  5006               	movf	(___lwmod@divisor+1)^0,w,c
  4397   00158E  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  4398   001590  A0D8               	btfss	status,0,c
  4399   001592  EFCD  F00A         	goto	u1271
  4400   001596  EFCF  F00A         	goto	u1270
  4401   00159A                     u1271:
  4402   00159A  EFD3  F00A         	goto	l2326
  4403   00159E                     u1270:
  4404   00159E  5005               	movf	___lwmod@divisor^0,w,c
  4405   0015A0  5E03               	subwf	___lwmod@dividend^0,f,c
  4406   0015A2  5006               	movf	(___lwmod@divisor+1)^0,w,c
  4407   0015A4  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  4408   0015A6                     l2326:
  4409   0015A6  90D8               	bcf	status,0,c
  4410   0015A8  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  4411   0015AA  3205               	rrcf	___lwmod@divisor^0,f,c
  4412   0015AC  2E07               	decfsz	___lwmod@counter^0,f,c
  4413   0015AE  EFC4  F00A         	goto	l2322
  4414   0015B2                     l939:
  4415   0015B2  C003  F003         	movff	___lwmod@dividend,?___lwmod
  4416   0015B6  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  4417   0015BA  0012               	return		;funcret
  4418   0015BC                     __end_of___lwmod:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function ___lwdiv *****************
  4422 ;; Defined at:
  4423 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  dividend        2    2[COMRAM] unsigned int 
  4426 ;;  divisor         2    4[COMRAM] unsigned int 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  quotient        2    6[COMRAM] unsigned int 
  4429 ;;  counter         1    8[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  2    2[COMRAM] unsigned int 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;Total ram usage:        7 bytes
  4444 ;; Hardware stack levels used: 1
  4445 ;; Hardware stack levels required when called: 1
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_welcome_splash
  4450 ;;		_vfpfcnvrt
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text20
  4455   001416                     __ptext20:
  4456                           	callstack 0
  4457   001416                     ___lwdiv:
  4458                           	callstack 28
  4459   001416  0E00               	movlw	0
  4460   001418  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  4461   00141A  0E00               	movlw	0
  4462   00141C  6E07               	movwf	___lwdiv@quotient^0,c
  4463   00141E  5005               	movf	___lwdiv@divisor^0,w,c
  4464   001420  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4465   001422  B4D8               	btfsc	status,2,c
  4466   001424  EF16  F00A         	goto	u1221
  4467   001428  EF18  F00A         	goto	u1220
  4468   00142C                     u1221:
  4469   00142C  EF40  F00A         	goto	l929
  4470   001430                     u1220:
  4471   001430  0E01               	movlw	1
  4472   001432  6E09               	movwf	___lwdiv@counter^0,c
  4473   001434  EF20  F00A         	goto	l2300
  4474   001438                     l2298:
  4475   001438  90D8               	bcf	status,0,c
  4476   00143A  3605               	rlcf	___lwdiv@divisor^0,f,c
  4477   00143C  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4478   00143E  2A09               	incf	___lwdiv@counter^0,f,c
  4479   001440                     l2300:
  4480   001440  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  4481   001442  EF25  F00A         	goto	u1231
  4482   001446  EF27  F00A         	goto	u1230
  4483   00144A                     u1231:
  4484   00144A  EF1C  F00A         	goto	l2298
  4485   00144E                     u1230:
  4486   00144E                     l2302:
  4487   00144E  90D8               	bcf	status,0,c
  4488   001450  3607               	rlcf	___lwdiv@quotient^0,f,c
  4489   001452  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4490   001454  5005               	movf	___lwdiv@divisor^0,w,c
  4491   001456  5C03               	subwf	___lwdiv@dividend^0,w,c
  4492   001458  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  4493   00145A  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4494   00145C  A0D8               	btfss	status,0,c
  4495   00145E  EF33  F00A         	goto	u1241
  4496   001462  EF35  F00A         	goto	u1240
  4497   001466                     u1241:
  4498   001466  EF3A  F00A         	goto	l2310
  4499   00146A                     u1240:
  4500   00146A  5005               	movf	___lwdiv@divisor^0,w,c
  4501   00146C  5E03               	subwf	___lwdiv@dividend^0,f,c
  4502   00146E  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  4503   001470  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4504   001472  8007               	bsf	___lwdiv@quotient^0,0,c
  4505   001474                     l2310:
  4506   001474  90D8               	bcf	status,0,c
  4507   001476  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4508   001478  3205               	rrcf	___lwdiv@divisor^0,f,c
  4509   00147A  2E09               	decfsz	___lwdiv@counter^0,f,c
  4510   00147C  EF27  F00A         	goto	l2302
  4511   001480                     l929:
  4512   001480  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  4513   001484  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4514   001488  0012               	return		;funcret
  4515   00148A                     __end_of___lwdiv:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _hex_char_to_value *****************
  4519 ;; Defined at:
  4520 ;;		line 427 in file "OBCII_PIC18F46K22.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  c               1    wreg     unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  c               1    2[COMRAM] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      unsigned char 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;Total ram usage:        1 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 1
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_print_RPM
  4545 ;;		_print_AI_Temp
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text21
  4550   0012A2                     __ptext21:
  4551                           	callstack 0
  4552   0012A2                     _hex_char_to_value:
  4553                           	callstack 26
  4554                           
  4555                           ;incstack = 0
  4556                           ;hex_char_to_value@c stored from wreg
  4557   0012A2  6E03               	movwf	hex_char_to_value@c^0,c
  4558   0012A4                     
  4559                           ;OBCII_PIC18F46K22.c: 428:     if (c >= '0' && c <= '9') return c - '0';
  4560   0012A4  0E2F               	movlw	47
  4561   0012A6  6403               	cpfsgt	hex_char_to_value@c^0,c
  4562   0012A8  EF58  F009         	goto	u1531
  4563   0012AC  EF5A  F009         	goto	u1530
  4564   0012B0                     u1531:
  4565   0012B0  EF66  F009         	goto	l2492
  4566   0012B4                     u1530:
  4567   0012B4  0E3A               	movlw	58
  4568   0012B6  6003               	cpfslt	hex_char_to_value@c^0,c
  4569   0012B8  EF60  F009         	goto	u1541
  4570   0012BC  EF62  F009         	goto	u1540
  4571   0012C0                     u1541:
  4572   0012C0  EF66  F009         	goto	l2492
  4573   0012C4                     u1540:
  4574   0012C4  5003               	movf	hex_char_to_value@c^0,w,c
  4575   0012C6  0FD0               	addlw	208
  4576   0012C8  EF8F  F009         	goto	l244
  4577   0012CC                     l2492:
  4578                           
  4579                           ;OBCII_PIC18F46K22.c: 429:     if (c >= 'A' && c <= 'F') return c - 'A' + 10;
  4580   0012CC  0E40               	movlw	64
  4581   0012CE  6403               	cpfsgt	hex_char_to_value@c^0,c
  4582   0012D0  EF6C  F009         	goto	u1551
  4583   0012D4  EF6E  F009         	goto	u1550
  4584   0012D8                     u1551:
  4585   0012D8  EF7A  F009         	goto	l2500
  4586   0012DC                     u1550:
  4587   0012DC  0E47               	movlw	71
  4588   0012DE  6003               	cpfslt	hex_char_to_value@c^0,c
  4589   0012E0  EF74  F009         	goto	u1561
  4590   0012E4  EF76  F009         	goto	u1560
  4591   0012E8                     u1561:
  4592   0012E8  EF7A  F009         	goto	l2500
  4593   0012EC                     u1560:
  4594   0012EC  5003               	movf	hex_char_to_value@c^0,w,c
  4595   0012EE  0FC9               	addlw	201
  4596   0012F0  EF8F  F009         	goto	l244
  4597   0012F4                     l2500:
  4598                           
  4599                           ;OBCII_PIC18F46K22.c: 430:     if (c >= 'a' && c <= 'f') return c - 'a' + 10;
  4600   0012F4  0E60               	movlw	96
  4601   0012F6  6403               	cpfsgt	hex_char_to_value@c^0,c
  4602   0012F8  EF80  F009         	goto	u1571
  4603   0012FC  EF82  F009         	goto	u1570
  4604   001300                     u1571:
  4605   001300  EF8E  F009         	goto	l2508
  4606   001304                     u1570:
  4607   001304  0E67               	movlw	103
  4608   001306  6003               	cpfslt	hex_char_to_value@c^0,c
  4609   001308  EF88  F009         	goto	u1581
  4610   00130C  EF8A  F009         	goto	u1580
  4611   001310                     u1581:
  4612   001310  EF8E  F009         	goto	l2508
  4613   001314                     u1580:
  4614   001314  5003               	movf	hex_char_to_value@c^0,w,c
  4615   001316  0FA9               	addlw	169
  4616   001318  EF8F  F009         	goto	l244
  4617   00131C                     l2508:
  4618                           
  4619                           ;OBCII_PIC18F46K22.c: 431:     return 0;
  4620   00131C  0E00               	movlw	0
  4621   00131E                     l244:
  4622   00131E  0012               	return		;funcret
  4623   001320                     __end_of_hex_char_to_value:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _display_system_info *****************
  4627 ;; Defined at:
  4628 ;;		line 610 in file "OBCII_PIC18F46K22.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 6
  4649 ;; This function calls:
  4650 ;;		_LCD_cursor_set
  4651 ;;		_LCD_write_string
  4652 ;;		_print_ELMVer
  4653 ;;		_print_SAEVer
  4654 ;; This function is called by:
  4655 ;;		_main_menu
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text22
  4660   00176C                     __ptext22:
  4661                           	callstack 0
  4662   00176C                     _display_system_info:
  4663                           	callstack 23
  4664   00176C                     
  4665                           ;OBCII_PIC18F46K22.c: 611:     LCD_cursor_set(1,4);
  4666   00176C  0E04               	movlw	4
  4667   00176E  6E06               	movwf	LCD_cursor_set@column^0,c
  4668   001770  0E01               	movlw	1
  4669   001772  ECDE  F00A         	call	_LCD_cursor_set
  4670   001776                     
  4671                           ;OBCII_PIC18F46K22.c: 612:     LCD_write_string("            ");
  4672   001776  0E8E               	movlw	low (STR_32+1)
  4673   001778  6E06               	movwf	LCD_write_string@string^0,c
  4674   00177A  0EFF               	movlw	high (STR_32+1)
  4675   00177C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4676   00177E  ECCE  F009         	call	_LCD_write_string	;wreg free
  4677   001782                     
  4678                           ;OBCII_PIC18F46K22.c: 613:     LCD_cursor_set(2,5);
  4679   001782  0E05               	movlw	5
  4680   001784  6E06               	movwf	LCD_cursor_set@column^0,c
  4681   001786  0E02               	movlw	2
  4682   001788  ECDE  F00A         	call	_LCD_cursor_set
  4683                           
  4684                           ;OBCII_PIC18F46K22.c: 614:     LCD_write_string("             ");
  4685   00178C  0E8D               	movlw	low STR_32
  4686   00178E  6E06               	movwf	LCD_write_string@string^0,c
  4687   001790  0EFF               	movlw	high STR_32
  4688   001792  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4689   001794  ECCE  F009         	call	_LCD_write_string	;wreg free
  4690                           
  4691                           ;OBCII_PIC18F46K22.c: 615:     print_ELMVer();
  4692   001798  EC0C  F009         	call	_print_ELMVer	;wreg free
  4693                           
  4694                           ;OBCII_PIC18F46K22.c: 616:     print_SAEVer();
  4695   00179C  ECC7  F008         	call	_print_SAEVer	;wreg free
  4696   0017A0  0012               	return		;funcret
  4697   0017A2                     __end_of_display_system_info:
  4698                           	callstack 0
  4699                           
  4700 ;; *************** function _print_SAEVer *****************
  4701 ;; Defined at:
  4702 ;;		line 583 in file "OBCII_PIC18F46K22.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;Total ram usage:        1 bytes
  4721 ;; Hardware stack levels used: 1
  4722 ;; Hardware stack levels required when called: 5
  4723 ;; This function calls:
  4724 ;;		_LCD_clear
  4725 ;;		_LCD_cursor_set
  4726 ;;		_LCD_write_string
  4727 ;;		_UART1_SendString
  4728 ;;		_clear_parsing_notif
  4729 ;;		_display_mm
  4730 ;;		_parsing_notif
  4731 ;; This function is called by:
  4732 ;;		_display_system_info
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text23
  4737   00118E                     __ptext23:
  4738                           	callstack 0
  4739   00118E                     _print_SAEVer:
  4740                           	callstack 23
  4741   00118E                     
  4742                           ;OBCII_PIC18F46K22.c: 584:     UART1_SendString("0108\r");
  4743   00118E  0EBA               	movlw	low STR_29
  4744   001190  6E04               	movwf	UART1_SendString@string^0,c
  4745   001192  0EFF               	movlw	high STR_29
  4746   001194  6E05               	movwf	(UART1_SendString@string+1)^0,c
  4747   001196  EC0E  F00B         	call	_UART1_SendString	;wreg free
  4748                           
  4749                           ;OBCII_PIC18F46K22.c: 586:     while(!message_complete) {
  4750   00119A  EFEF  F008         	goto	l2714
  4751   00119E                     l287:
  4752                           
  4753                           ;OBCII_PIC18F46K22.c: 588:         if (PORTCbits.RC5 == 0) {
  4754   00119E  BA82               	btfsc	130,5,c	;volatile
  4755   0011A0  EFD4  F008         	goto	u1761
  4756   0011A4  EFD6  F008         	goto	u1760
  4757   0011A8                     u1761:
  4758   0011A8  EFED  F008         	goto	l2712
  4759   0011AC                     u1760:
  4760   0011AC                     
  4761                           ;OBCII_PIC18F46K22.c: 589:             _delay((unsigned long)((20)*(16000000/4000.0)));
  4762   0011AC  0E68               	movlw	104
  4763   0011AE  6E0B               	movwf	??_print_SAEVer^0,c
  4764   0011B0  0EE4               	movlw	228
  4765   0011B2                     u2587:
  4766   0011B2  2EE8               	decfsz	wreg,f,c
  4767   0011B4  D7FE               	bra	u2587
  4768   0011B6  2E0B               	decfsz	??_print_SAEVer^0,f,c
  4769   0011B8  D7FC               	bra	u2587
  4770   0011BA  D000               	nop2	
  4771   0011BC                     
  4772                           ;OBCII_PIC18F46K22.c: 590:             if (PORTCbits.RC5 == 0) {
  4773   0011BC  BA82               	btfsc	130,5,c	;volatile
  4774   0011BE  EFE3  F008         	goto	u1771
  4775   0011C2  EFE5  F008         	goto	u1770
  4776   0011C6                     u1771:
  4777   0011C6  EFED  F008         	goto	l2712
  4778   0011CA                     u1770:
  4779   0011CA                     
  4780                           ;OBCII_PIC18F46K22.c: 591:                 LCD_clear();
  4781   0011CA  EC3D  F00C         	call	_LCD_clear	;wreg free
  4782   0011CE                     
  4783                           ;OBCII_PIC18F46K22.c: 592:                 display_mm();
  4784   0011CE  ECEC  F00B         	call	_display_mm	;wreg free
  4785   0011D2                     
  4786                           ;OBCII_PIC18F46K22.c: 593:                 menu_sel = -1;
  4787   0011D2  684F               	setf	_menu_sel^0,c
  4788   0011D4  6850               	setf	(_menu_sel+1)^0,c
  4789                           
  4790                           ;OBCII_PIC18F46K22.c: 594:                 break;
  4791   0011D6  EFF7  F008         	goto	l2716
  4792   0011DA                     l2712:
  4793                           
  4794                           ;OBCII_PIC18F46K22.c: 597:         parsing_notif();
  4795   0011DA  EC4B  F00C         	call	_parsing_notif	;wreg free
  4796   0011DE                     l2714:
  4797                           
  4798                           ;OBCII_PIC18F46K22.c: 586:     while(!message_complete) {
  4799   0011DE  504C               	movf	_message_complete^0,w,c	;volatile
  4800   0011E0  B4D8               	btfsc	status,2,c
  4801   0011E2  EFF5  F008         	goto	u1781
  4802   0011E6  EFF7  F008         	goto	u1780
  4803   0011EA                     u1781:
  4804   0011EA  EFCF  F008         	goto	l287
  4805   0011EE                     u1780:
  4806   0011EE                     l2716:
  4807                           
  4808                           ;OBCII_PIC18F46K22.c: 599:     clear_parsing_notif();
  4809   0011EE  EC57  F00C         	call	_clear_parsing_notif	;wreg free
  4810   0011F2                     
  4811                           ;OBCII_PIC18F46K22.c: 601:     LCD_cursor_set(2,1);
  4812   0011F2  0E01               	movlw	1
  4813   0011F4  6E06               	movwf	LCD_cursor_set@column^0,c
  4814   0011F6  0E02               	movlw	2
  4815   0011F8  ECDE  F00A         	call	_LCD_cursor_set
  4816   0011FC                     
  4817                           ;OBCII_PIC18F46K22.c: 602:     LCD_write_string("SAE:");
  4818   0011FC  0EDD               	movlw	low STR_30
  4819   0011FE  6E06               	movwf	LCD_write_string@string^0,c
  4820   001200  0EFF               	movlw	high STR_30
  4821   001202  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4822   001204  ECCE  F009         	call	_LCD_write_string	;wreg free
  4823   001208                     
  4824                           ;OBCII_PIC18F46K22.c: 603:     LCD_write_string(buffer);
  4825   001208  0E80               	movlw	low _buffer
  4826   00120A  6E06               	movwf	LCD_write_string@string^0,c
  4827   00120C  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4828   00120E  ECCE  F009         	call	_LCD_write_string	;wreg free
  4829   001212                     
  4830                           ;OBCII_PIC18F46K22.c: 606:     buffer_count = 0;
  4831   001212  6A4E               	clrf	_buffer_count^0,c
  4832   001214                     
  4833                           ;OBCII_PIC18F46K22.c: 607:     message_complete = 0;
  4834   001214  6A4C               	clrf	_message_complete^0,c	;volatile
  4835   001216  0012               	return		;funcret
  4836   001218                     __end_of_print_SAEVer:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _print_ELMVer *****************
  4840 ;; Defined at:
  4841 ;;		line 555 in file "OBCII_PIC18F46K22.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;Total ram usage:        1 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 5
  4862 ;; This function calls:
  4863 ;;		_LCD_clear
  4864 ;;		_LCD_cursor_set
  4865 ;;		_LCD_write_string
  4866 ;;		_UART1_SendString
  4867 ;;		_clear_parsing_notif
  4868 ;;		_display_mm
  4869 ;;		_parsing_notif
  4870 ;; This function is called by:
  4871 ;;		_display_system_info
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text24
  4876   001218                     __ptext24:
  4877                           	callstack 0
  4878   001218                     _print_ELMVer:
  4879                           	callstack 23
  4880   001218                     
  4881                           ;OBCII_PIC18F46K22.c: 557:     UART1_SendString("ATI\r");
  4882   001218  0ED8               	movlw	low STR_4
  4883   00121A  6E04               	movwf	UART1_SendString@string^0,c
  4884   00121C  0EFF               	movlw	high STR_4
  4885   00121E  6E05               	movwf	(UART1_SendString@string+1)^0,c
  4886   001220  EC0E  F00B         	call	_UART1_SendString	;wreg free
  4887                           
  4888                           ;OBCII_PIC18F46K22.c: 559:     while(!message_complete) {
  4889   001224  EF34  F009         	goto	l2686
  4890   001228                     l279:
  4891                           
  4892                           ;OBCII_PIC18F46K22.c: 561:         if (PORTCbits.RC5 == 0) {
  4893   001228  BA82               	btfsc	130,5,c	;volatile
  4894   00122A  EF19  F009         	goto	u1731
  4895   00122E  EF1B  F009         	goto	u1730
  4896   001232                     u1731:
  4897   001232  EF32  F009         	goto	l2684
  4898   001236                     u1730:
  4899   001236                     
  4900                           ;OBCII_PIC18F46K22.c: 562:             _delay((unsigned long)((20)*(16000000/4000.0)));
  4901   001236  0E68               	movlw	104
  4902   001238  6E0B               	movwf	??_print_ELMVer^0,c
  4903   00123A  0EE4               	movlw	228
  4904   00123C                     u2597:
  4905   00123C  2EE8               	decfsz	wreg,f,c
  4906   00123E  D7FE               	bra	u2597
  4907   001240  2E0B               	decfsz	??_print_ELMVer^0,f,c
  4908   001242  D7FC               	bra	u2597
  4909   001244  D000               	nop2	
  4910   001246                     
  4911                           ;OBCII_PIC18F46K22.c: 563:             if (PORTCbits.RC5 == 0) {
  4912   001246  BA82               	btfsc	130,5,c	;volatile
  4913   001248  EF28  F009         	goto	u1741
  4914   00124C  EF2A  F009         	goto	u1740
  4915   001250                     u1741:
  4916   001250  EF32  F009         	goto	l2684
  4917   001254                     u1740:
  4918   001254                     
  4919                           ;OBCII_PIC18F46K22.c: 564:                 LCD_clear();
  4920   001254  EC3D  F00C         	call	_LCD_clear	;wreg free
  4921   001258                     
  4922                           ;OBCII_PIC18F46K22.c: 565:                 display_mm();
  4923   001258  ECEC  F00B         	call	_display_mm	;wreg free
  4924   00125C                     
  4925                           ;OBCII_PIC18F46K22.c: 566:                 menu_sel = -1;
  4926   00125C  684F               	setf	_menu_sel^0,c
  4927   00125E  6850               	setf	(_menu_sel+1)^0,c
  4928                           
  4929                           ;OBCII_PIC18F46K22.c: 567:                 break;
  4930   001260  EF3C  F009         	goto	l2688
  4931   001264                     l2684:
  4932                           
  4933                           ;OBCII_PIC18F46K22.c: 570:         parsing_notif();
  4934   001264  EC4B  F00C         	call	_parsing_notif	;wreg free
  4935   001268                     l2686:
  4936                           
  4937                           ;OBCII_PIC18F46K22.c: 559:     while(!message_complete) {
  4938   001268  504C               	movf	_message_complete^0,w,c	;volatile
  4939   00126A  B4D8               	btfsc	status,2,c
  4940   00126C  EF3A  F009         	goto	u1751
  4941   001270  EF3C  F009         	goto	u1750
  4942   001274                     u1751:
  4943   001274  EF14  F009         	goto	l279
  4944   001278                     u1750:
  4945   001278                     l2688:
  4946                           
  4947                           ;OBCII_PIC18F46K22.c: 572:     clear_parsing_notif();
  4948   001278  EC57  F00C         	call	_clear_parsing_notif	;wreg free
  4949   00127C                     
  4950                           ;OBCII_PIC18F46K22.c: 574:     LCD_cursor_set(1,1);
  4951   00127C  0E01               	movlw	1
  4952   00127E  6E06               	movwf	LCD_cursor_set@column^0,c
  4953   001280  0E01               	movlw	1
  4954   001282  ECDE  F00A         	call	_LCD_cursor_set
  4955   001286                     
  4956                           ;OBCII_PIC18F46K22.c: 575:     LCD_write_string("OS:");
  4957   001286  0EE6               	movlw	low STR_28
  4958   001288  6E06               	movwf	LCD_write_string@string^0,c
  4959   00128A  0EFF               	movlw	high STR_28
  4960   00128C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4961   00128E  ECCE  F009         	call	_LCD_write_string	;wreg free
  4962   001292                     
  4963                           ;OBCII_PIC18F46K22.c: 576:     LCD_write_string(buffer);
  4964   001292  0E80               	movlw	low _buffer
  4965   001294  6E06               	movwf	LCD_write_string@string^0,c
  4966   001296  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4967   001298  ECCE  F009         	call	_LCD_write_string	;wreg free
  4968   00129C                     
  4969                           ;OBCII_PIC18F46K22.c: 579:     buffer_count = 0;
  4970   00129C  6A4E               	clrf	_buffer_count^0,c
  4971   00129E                     
  4972                           ;OBCII_PIC18F46K22.c: 580:     message_complete = 0;
  4973   00129E  6A4C               	clrf	_message_complete^0,c	;volatile
  4974   0012A0  0012               	return		;funcret
  4975   0012A2                     __end_of_print_ELMVer:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function _clear_diagnostic_codes *****************
  4979 ;; Defined at:
  4980 ;;		line 626 in file "OBCII_PIC18F46K22.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;  opt_sel         2   12[COMRAM] int 
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4998 ;;Total ram usage:        4 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 5
  5001 ;; This function calls:
  5002 ;;		_LCD_clear
  5003 ;;		_LCD_configure_cursor_blink
  5004 ;;		_LCD_cursor_set
  5005 ;;		_LCD_write_string
  5006 ;;		_UART1_SendString
  5007 ;;		_clear_parsing_notif
  5008 ;;		_display_mm
  5009 ;;		_parsing_notif
  5010 ;;		_readADC
  5011 ;; This function is called by:
  5012 ;;		_main_menu
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text25
  5017   00030E                     __ptext25:
  5018                           	callstack 0
  5019   00030E                     _clear_diagnostic_codes:
  5020                           	callstack 24
  5021   00030E                     
  5022                           ;OBCII_PIC18F46K22.c: 628:     int opt_sel = 0;
  5023   00030E  0E00               	movlw	0
  5024   000310  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
  5025   000312  0E00               	movlw	0
  5026   000314  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
  5027   000316                     
  5028                           ;OBCII_PIC18F46K22.c: 629:     LCD_clear();
  5029   000316  EC3D  F00C         	call	_LCD_clear	;wreg free
  5030   00031A                     
  5031                           ;OBCII_PIC18F46K22.c: 630:     LCD_cursor_set(1,1);
  5032   00031A  0E01               	movlw	1
  5033   00031C  6E06               	movwf	LCD_cursor_set@column^0,c
  5034   00031E  0E01               	movlw	1
  5035   000320  ECDE  F00A         	call	_LCD_cursor_set
  5036   000324                     
  5037                           ;OBCII_PIC18F46K22.c: 631:     LCD_write_string("Clear Code(s)?");
  5038   000324  0E7E               	movlw	low STR_33
  5039   000326  6E06               	movwf	LCD_write_string@string^0,c
  5040   000328  0EFF               	movlw	high STR_33
  5041   00032A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5042   00032C  ECCE  F009         	call	_LCD_write_string	;wreg free
  5043   000330                     
  5044                           ;OBCII_PIC18F46K22.c: 632:     LCD_cursor_set(2,1);
  5045   000330  0E01               	movlw	1
  5046   000332  6E06               	movwf	LCD_cursor_set@column^0,c
  5047   000334  0E02               	movlw	2
  5048   000336  ECDE  F00A         	call	_LCD_cursor_set
  5049   00033A                     
  5050                           ;OBCII_PIC18F46K22.c: 633:     LCD_write_string("Y/N <<<<<<<<<<<<");
  5051   00033A  0E0B               	movlw	low STR_34
  5052   00033C  6E06               	movwf	LCD_write_string@string^0,c
  5053   00033E  0EFF               	movlw	high STR_34
  5054   000340  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5055   000342  ECCE  F009         	call	_LCD_write_string	;wreg free
  5056   000346                     
  5057                           ;OBCII_PIC18F46K22.c: 634:     LCD_configure_cursor_blink(1);
  5058   000346  0E01               	movlw	1
  5059   000348  EC2C  F00C         	call	_LCD_configure_cursor_blink
  5060   00034C                     l2880:
  5061                           
  5062                           ;OBCII_PIC18F46K22.c: 637:         result = readADC();
  5063   00034C  ECD1  F00B         	call	_readADC	;wreg free
  5064   000350  C003  F049         	movff	?_readADC,_result
  5065   000354  C004  F04A         	movff	?_readADC+1,_result+1
  5066   000358                     
  5067                           ;OBCII_PIC18F46K22.c: 638:         if(result >= 0 && result <= 511){
  5068   000358  0E02               	movlw	2
  5069   00035A  5C4A               	subwf	(_result+1)^0,w,c
  5070   00035C  B0D8               	btfsc	status,0,c
  5071   00035E  EFB3  F001         	goto	u1981
  5072   000362  EFB5  F001         	goto	u1980
  5073   000366                     u1981:
  5074   000366  EFBE  F001         	goto	l2888
  5075   00036A                     u1980:
  5076   00036A                     
  5077                           ;OBCII_PIC18F46K22.c: 639:             opt_sel = 0;
  5078   00036A  0E00               	movlw	0
  5079   00036C  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
  5080   00036E  0E00               	movlw	0
  5081   000370  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
  5082   000372                     
  5083                           ;OBCII_PIC18F46K22.c: 640:             LCD_cursor_set(2,1);
  5084   000372  0E01               	movlw	1
  5085   000374  6E06               	movwf	LCD_cursor_set@column^0,c
  5086   000376  0E02               	movlw	2
  5087   000378  ECDE  F00A         	call	_LCD_cursor_set
  5088   00037C                     l2888:
  5089                           
  5090                           ;OBCII_PIC18F46K22.c: 643:         if(result >= 512 && result <=1023){
  5091   00037C  0E02               	movlw	2
  5092   00037E  5C4A               	subwf	(_result+1)^0,w,c
  5093   000380  A0D8               	btfss	status,0,c
  5094   000382  EFC5  F001         	goto	u1991
  5095   000386  EFC7  F001         	goto	u1990
  5096   00038A                     u1991:
  5097   00038A  EFD9  F001         	goto	l2896
  5098   00038E                     u1990:
  5099   00038E  0E04               	movlw	4
  5100   000390  5C4A               	subwf	(_result+1)^0,w,c
  5101   000392  B0D8               	btfsc	status,0,c
  5102   000394  EFCE  F001         	goto	u2001
  5103   000398  EFD0  F001         	goto	u2000
  5104   00039C                     u2001:
  5105   00039C  EFD9  F001         	goto	l2896
  5106   0003A0                     u2000:
  5107   0003A0                     
  5108                           ;OBCII_PIC18F46K22.c: 644:             opt_sel = 1;
  5109   0003A0  0E00               	movlw	0
  5110   0003A2  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
  5111   0003A4  0E01               	movlw	1
  5112   0003A6  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
  5113   0003A8                     
  5114                           ;OBCII_PIC18F46K22.c: 645:             LCD_cursor_set(2,3);
  5115   0003A8  0E03               	movlw	3
  5116   0003AA  6E06               	movwf	LCD_cursor_set@column^0,c
  5117   0003AC  0E02               	movlw	2
  5118   0003AE  ECDE  F00A         	call	_LCD_cursor_set
  5119   0003B2                     l2896:
  5120                           
  5121                           ;OBCII_PIC18F46K22.c: 647:             if (PORTCbits.RC5 == 0) {
  5122   0003B2  BA82               	btfsc	130,5,c	;volatile
  5123   0003B4  EFDE  F001         	goto	u2011
  5124   0003B8  EFE0  F001         	goto	u2010
  5125   0003BC                     u2011:
  5126   0003BC  EFF7  F001         	goto	l303
  5127   0003C0                     u2010:
  5128   0003C0                     
  5129                           ;OBCII_PIC18F46K22.c: 648:                 _delay((unsigned long)((20)*(16000000/4000.0)
      +                          ));
  5130   0003C0  0E68               	movlw	104
  5131   0003C2  6E0B               	movwf	??_clear_diagnostic_codes^0,c
  5132   0003C4  0EE4               	movlw	228
  5133   0003C6                     u2607:
  5134   0003C6  2EE8               	decfsz	wreg,f,c
  5135   0003C8  D7FE               	bra	u2607
  5136   0003CA  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
  5137   0003CC  D7FC               	bra	u2607
  5138   0003CE  D000               	nop2	
  5139   0003D0                     
  5140                           ;OBCII_PIC18F46K22.c: 649:                 if (PORTCbits.RC5 == 0) {
  5141   0003D0  BA82               	btfsc	130,5,c	;volatile
  5142   0003D2  EFED  F001         	goto	u2021
  5143   0003D6  EFEF  F001         	goto	u2020
  5144   0003DA                     u2021:
  5145   0003DA  EFF7  F001         	goto	l303
  5146   0003DE                     u2020:
  5147   0003DE                     
  5148                           ;OBCII_PIC18F46K22.c: 650:                     LCD_clear();
  5149   0003DE  EC3D  F00C         	call	_LCD_clear	;wreg free
  5150   0003E2                     
  5151                           ;OBCII_PIC18F46K22.c: 651:                     display_mm();
  5152   0003E2  ECEC  F00B         	call	_display_mm	;wreg free
  5153   0003E6                     
  5154                           ;OBCII_PIC18F46K22.c: 652:                     menu_sel = -1;
  5155   0003E6  684F               	setf	_menu_sel^0,c
  5156   0003E8  6850               	setf	(_menu_sel+1)^0,c
  5157                           
  5158                           ;OBCII_PIC18F46K22.c: 653:                     break;
  5159   0003EA  EF7B  F002         	goto	l317
  5160   0003EE                     l303:
  5161                           
  5162                           ;OBCII_PIC18F46K22.c: 657:         if (PORTBbits.RB4 == 0) {
  5163   0003EE  B881               	btfsc	129,4,c	;volatile
  5164   0003F0  EFFC  F001         	goto	u2031
  5165   0003F4  EFFE  F001         	goto	u2030
  5166   0003F8                     u2031:
  5167   0003F8  EFA6  F001         	goto	l2880
  5168   0003FC                     u2030:
  5169   0003FC                     
  5170                           ;OBCII_PIC18F46K22.c: 658:             _delay((unsigned long)((20)*(16000000/4000.0)));
  5171   0003FC  0E68               	movlw	104
  5172   0003FE  6E0B               	movwf	??_clear_diagnostic_codes^0,c
  5173   000400  0EE4               	movlw	228
  5174   000402                     u2617:
  5175   000402  2EE8               	decfsz	wreg,f,c
  5176   000404  D7FE               	bra	u2617
  5177   000406  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
  5178   000408  D7FC               	bra	u2617
  5179   00040A  D000               	nop2	
  5180   00040C                     
  5181                           ;OBCII_PIC18F46K22.c: 659:             if (PORTBbits.RB4 == 0) {
  5182   00040C  B881               	btfsc	129,4,c	;volatile
  5183   00040E  EF0B  F002         	goto	u2041
  5184   000412  EF0D  F002         	goto	u2040
  5185   000416                     u2041:
  5186   000416  EFA6  F001         	goto	l2880
  5187   00041A                     u2040:
  5188   00041A  EF65  F002         	goto	l2946
  5189   00041E                     l2914:
  5190                           
  5191                           ;OBCII_PIC18F46K22.c: 663:                     UART1_SendString("04\r");
  5192   00041E  0EE2               	movlw	low STR_35
  5193   000420  6E04               	movwf	UART1_SendString@string^0,c
  5194   000422  0EFF               	movlw	high STR_35
  5195   000424  6E05               	movwf	(UART1_SendString@string+1)^0,c
  5196   000426  EC0E  F00B         	call	_UART1_SendString	;wreg free
  5197                           
  5198                           ;OBCII_PIC18F46K22.c: 664:                     while(!message_complete){
  5199   00042A  EF19  F002         	goto	l2918
  5200   00042E                     l2916:
  5201                           
  5202                           ;OBCII_PIC18F46K22.c: 666:                         parsing_notif();
  5203   00042E  EC4B  F00C         	call	_parsing_notif	;wreg free
  5204   000432                     l2918:
  5205                           
  5206                           ;OBCII_PIC18F46K22.c: 664:                     while(!message_complete){
  5207   000432  504C               	movf	_message_complete^0,w,c	;volatile
  5208   000434  B4D8               	btfsc	status,2,c
  5209   000436  EF1F  F002         	goto	u2051
  5210   00043A  EF21  F002         	goto	u2050
  5211   00043E                     u2051:
  5212   00043E  EF17  F002         	goto	l2916
  5213   000442                     u2050:
  5214   000442                     
  5215                           ;OBCII_PIC18F46K22.c: 668:                     clear_parsing_notif();
  5216   000442  EC57  F00C         	call	_clear_parsing_notif	;wreg free
  5217   000446                     
  5218                           ;OBCII_PIC18F46K22.c: 670:                     LCD_clear();
  5219   000446  EC3D  F00C         	call	_LCD_clear	;wreg free
  5220   00044A                     
  5221                           ;OBCII_PIC18F46K22.c: 671:                     LCD_cursor_set(1,1);
  5222   00044A  0E01               	movlw	1
  5223   00044C  6E06               	movwf	LCD_cursor_set@column^0,c
  5224   00044E  0E01               	movlw	1
  5225   000450  ECDE  F00A         	call	_LCD_cursor_set
  5226                           
  5227                           ;OBCII_PIC18F46K22.c: 672:                     LCD_write_string("Codes Cleared");
  5228   000454  0E9B               	movlw	low STR_36
  5229   000456  6E06               	movwf	LCD_write_string@string^0,c
  5230   000458  0EFF               	movlw	high STR_36
  5231   00045A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5232   00045C  ECCE  F009         	call	_LCD_write_string	;wreg free
  5233   000460                     
  5234                           ;OBCII_PIC18F46K22.c: 673:                     LCD_cursor_set(2,1);
  5235   000460  0E01               	movlw	1
  5236   000462  6E06               	movwf	LCD_cursor_set@column^0,c
  5237   000464  0E02               	movlw	2
  5238   000466  ECDE  F00A         	call	_LCD_cursor_set
  5239   00046A                     
  5240                           ;OBCII_PIC18F46K22.c: 674:                     LCD_write_string("To Menu...");
  5241   00046A  0EA9               	movlw	low STR_37
  5242   00046C  6E06               	movwf	LCD_write_string@string^0,c
  5243   00046E  0EFF               	movlw	high STR_37
  5244   000470  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5245   000472  ECCE  F009         	call	_LCD_write_string	;wreg free
  5246   000476                     l2930:
  5247                           
  5248                           ;OBCII_PIC18F46K22.c: 676:                     menu_sel = -1;
  5249   000476  684F               	setf	_menu_sel^0,c
  5250   000478  6850               	setf	(_menu_sel+1)^0,c
  5251   00047A                     
  5252                           ;OBCII_PIC18F46K22.c: 677:                     _delay((unsigned long)((2000)*(16000000/4
      +                          000.0)));
  5253   00047A  0E29               	movlw	41
  5254   00047C  6E0C               	movwf	(??_clear_diagnostic_codes+1)^0,c
  5255   00047E  0E96               	movlw	150
  5256   000480  6E0B               	movwf	??_clear_diagnostic_codes^0,c
  5257   000482  0E7F               	movlw	127
  5258   000484                     u2627:
  5259   000484  2EE8               	decfsz	wreg,f,c
  5260   000486  D7FE               	bra	u2627
  5261   000488  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
  5262   00048A  D7FC               	bra	u2627
  5263   00048C  2E0C               	decfsz	(??_clear_diagnostic_codes+1)^0,f,c
  5264   00048E  D7FA               	bra	u2627
  5265   000490  0000               	nop	
  5266                           
  5267                           ;OBCII_PIC18F46K22.c: 679:                         break;
  5268   000492  EF7B  F002         	goto	l317
  5269   000496                     l2934:
  5270                           
  5271                           ;OBCII_PIC18F46K22.c: 683:                     LCD_clear();
  5272   000496  EC3D  F00C         	call	_LCD_clear	;wreg free
  5273                           
  5274                           ;OBCII_PIC18F46K22.c: 684:                     LCD_cursor_set(1,1);
  5275   00049A  0E01               	movlw	1
  5276   00049C  6E06               	movwf	LCD_cursor_set@column^0,c
  5277   00049E  0E01               	movlw	1
  5278   0004A0  ECDE  F00A         	call	_LCD_cursor_set
  5279   0004A4                     
  5280                           ;OBCII_PIC18F46K22.c: 685:                     LCD_write_string("Nothing Cleared");
  5281   0004A4  0E5F               	movlw	low STR_38
  5282   0004A6  6E06               	movwf	LCD_write_string@string^0,c
  5283   0004A8  0EFF               	movlw	high STR_38
  5284   0004AA  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5285   0004AC  ECCE  F009         	call	_LCD_write_string	;wreg free
  5286   0004B0                     
  5287                           ;OBCII_PIC18F46K22.c: 686:                     LCD_cursor_set(2,1);
  5288   0004B0  0E01               	movlw	1
  5289   0004B2  6E06               	movwf	LCD_cursor_set@column^0,c
  5290   0004B4  0E02               	movlw	2
  5291   0004B6  ECDE  F00A         	call	_LCD_cursor_set
  5292                           
  5293                           ;OBCII_PIC18F46K22.c: 687:                     LCD_write_string("To Menu...");
  5294   0004BA  0EA9               	movlw	low STR_37
  5295   0004BC  6E06               	movwf	LCD_write_string@string^0,c
  5296   0004BE  0EFF               	movlw	high STR_37
  5297   0004C0  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5298   0004C2  ECCE  F009         	call	_LCD_write_string	;wreg free
  5299   0004C6  EF3B  F002         	goto	l2930
  5300   0004CA                     l2946:
  5301   0004CA  C00D  F00B         	movff	clear_diagnostic_codes@opt_sel,??_clear_diagnostic_codes
  5302   0004CE  C00E  F00C         	movff	clear_diagnostic_codes@opt_sel+1,??_clear_diagnostic_codes+1
  5303                           
  5304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5305                           ; Switch size 1, requested type "simple"
  5306                           ; Number of cases is 1, Range of values is 0 to 0
  5307                           ; switch strategies available:
  5308                           ; Name         Instructions Cycles
  5309                           ; simple_byte            4     3 (average)
  5310                           ;	Chosen strategy is simple_byte
  5311   0004D2  500C               	movf	(??_clear_diagnostic_codes+1)^0,w,c
  5312   0004D4  0A00               	xorlw	0	; case 0
  5313   0004D6  B4D8               	btfsc	status,2,c
  5314   0004D8  EF70  F002         	goto	l3346
  5315   0004DC  EF7B  F002         	goto	l317
  5316   0004E0                     l3346:
  5317                           
  5318                           ; Switch size 1, requested type "simple"
  5319                           ; Number of cases is 2, Range of values is 0 to 1
  5320                           ; switch strategies available:
  5321                           ; Name         Instructions Cycles
  5322                           ; simple_byte            7     4 (average)
  5323                           ;	Chosen strategy is simple_byte
  5324   0004E0  500B               	movf	??_clear_diagnostic_codes^0,w,c
  5325   0004E2  0A00               	xorlw	0	; case 0
  5326   0004E4  B4D8               	btfsc	status,2,c
  5327   0004E6  EF0F  F002         	goto	l2914
  5328   0004EA  0A01               	xorlw	1	; case 1
  5329   0004EC  B4D8               	btfsc	status,2,c
  5330   0004EE  EF4B  F002         	goto	l2934
  5331   0004F2  EF7B  F002         	goto	l317
  5332   0004F6                     l317:
  5333   0004F6  0012               	return		;funcret
  5334   0004F8                     __end_of_clear_diagnostic_codes:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _readADC *****************
  5338 ;; Defined at:
  5339 ;;		line 284 in file "OBCII_PIC18F46K22.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  2    2[COMRAM] unsigned int 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;Total ram usage:        4 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 1
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_main_menu
  5364 ;;		_clear_diagnostic_codes
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text26
  5369   0017A2                     __ptext26:
  5370                           	callstack 0
  5371   0017A2                     _readADC:
  5372                           	callstack 28
  5373   0017A2                     
  5374                           ;OBCII_PIC18F46K22.c: 285:     ADCON0bits.GO = 1;
  5375   0017A2  82C2               	bsf	194,1,c	;volatile
  5376   0017A4                     l189:
  5377   0017A4  B2C2               	btfsc	194,1,c	;volatile
  5378   0017A6  EFD7  F00B         	goto	u1611
  5379   0017AA  EFD9  F00B         	goto	u1610
  5380   0017AE                     u1611:
  5381   0017AE  EFD2  F00B         	goto	l189
  5382   0017B2                     u1610:
  5383   0017B2                     
  5384                           ;OBCII_PIC18F46K22.c: 287:     _delay((unsigned long)((10)*(16000000/4000.0)));
  5385   0017B2  0E34               	movlw	52
  5386   0017B4  6E05               	movwf	??_readADC^0,c
  5387   0017B6  0EF2               	movlw	242
  5388   0017B8                     u2637:
  5389   0017B8  2EE8               	decfsz	wreg,f,c
  5390   0017BA  D7FE               	bra	u2637
  5391   0017BC  2E05               	decfsz	??_readADC^0,f,c
  5392   0017BE  D7FC               	bra	u2637
  5393   0017C0                     
  5394                           ;OBCII_PIC18F46K22.c: 288:     return ((ADRESH << 8) | ADRESL);
  5395   0017C0  50C3               	movf	195,w,c	;volatile
  5396   0017C2  CFC4 F005          	movff	4036,??_readADC	;volatile
  5397   0017C6  6A06               	clrf	(??_readADC+1)^0,c
  5398   0017C8  C005  F006         	movff	??_readADC,??_readADC+1
  5399   0017CC  6A05               	clrf	??_readADC^0,c
  5400   0017CE  1005               	iorwf	??_readADC^0,w,c
  5401   0017D0  6E03               	movwf	?_readADC^0,c
  5402   0017D2  5006               	movf	(??_readADC+1)^0,w,c
  5403   0017D4  6E04               	movwf	(?_readADC+1)^0,c
  5404   0017D6  0012               	return		;funcret
  5405   0017D8                     __end_of_readADC:
  5406                           	callstack 0
  5407                           
  5408 ;; *************** function _parsing_notif *****************
  5409 ;; Defined at:
  5410 ;;		line 298 in file "OBCII_PIC18F46K22.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;		None
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;		None
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;Total ram usage:        0 bytes
  5429 ;; Hardware stack levels used: 1
  5430 ;; Hardware stack levels required when called: 4
  5431 ;; This function calls:
  5432 ;;		_LCD_cursor_set
  5433 ;;		_LCD_write_string
  5434 ;; This function is called by:
  5435 ;;		_print_RPM
  5436 ;;		_print_Vbatt
  5437 ;;		_print_AI_Temp
  5438 ;;		_print_ELMVer
  5439 ;;		_print_SAEVer
  5440 ;;		_clear_diagnostic_codes
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text27
  5445   001896                     __ptext27:
  5446                           	callstack 0
  5447   001896                     _parsing_notif:
  5448                           	callstack 23
  5449   001896                     
  5450                           ;OBCII_PIC18F46K22.c: 299:     LCD_cursor_set(1,16);
  5451   001896  0E10               	movlw	16
  5452   001898  6E06               	movwf	LCD_cursor_set@column^0,c
  5453   00189A  0E01               	movlw	1
  5454   00189C  ECDE  F00A         	call	_LCD_cursor_set
  5455   0018A0                     
  5456                           ;OBCII_PIC18F46K22.c: 300:     LCD_write_string("~");
  5457   0018A0  0EFD               	movlw	low STR_12
  5458   0018A2  6E06               	movwf	LCD_write_string@string^0,c
  5459   0018A4  0EFF               	movlw	high STR_12
  5460   0018A6  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5461   0018A8  ECCE  F009         	call	_LCD_write_string	;wreg free
  5462   0018AC  0012               	return		;funcret
  5463   0018AE                     __end_of_parsing_notif:
  5464                           	callstack 0
  5465                           
  5466 ;; *************** function _display_mm *****************
  5467 ;; Defined at:
  5468 ;;		line 291 in file "OBCII_PIC18F46K22.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;Total ram usage:        0 bytes
  5487 ;; Hardware stack levels used: 1
  5488 ;; Hardware stack levels required when called: 4
  5489 ;; This function calls:
  5490 ;;		_LCD_cursor_set
  5491 ;;		_LCD_write_string
  5492 ;; This function is called by:
  5493 ;;		_main_menu
  5494 ;;		_print_RPM
  5495 ;;		_print_Vbatt
  5496 ;;		_print_AI_Temp
  5497 ;;		_print_ELMVer
  5498 ;;		_print_SAEVer
  5499 ;;		_clear_diagnostic_codes
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text28
  5504   0017D8                     __ptext28:
  5505                           	callstack 0
  5506   0017D8                     _display_mm:
  5507                           	callstack 23
  5508   0017D8                     
  5509                           ;OBCII_PIC18F46K22.c: 292:     LCD_cursor_set(1,1);
  5510   0017D8  0E01               	movlw	1
  5511   0017DA  6E06               	movwf	LCD_cursor_set@column^0,c
  5512   0017DC  0E01               	movlw	1
  5513   0017DE  ECDE  F00A         	call	_LCD_cursor_set
  5514   0017E2                     
  5515                           ;OBCII_PIC18F46K22.c: 293:     LCD_write_string("MENU  <OBDIIPIC>");
  5516   0017E2  0E2D               	movlw	low STR_10
  5517   0017E4  6E06               	movwf	LCD_write_string@string^0,c
  5518   0017E6  0EFF               	movlw	high STR_10
  5519   0017E8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5520   0017EA  ECCE  F009         	call	_LCD_write_string	;wreg free
  5521   0017EE                     
  5522                           ;OBCII_PIC18F46K22.c: 294:     LCD_cursor_set(2,1);
  5523   0017EE  0E01               	movlw	1
  5524   0017F0  6E06               	movwf	LCD_cursor_set@column^0,c
  5525   0017F2  0E02               	movlw	2
  5526   0017F4  ECDE  F00A         	call	_LCD_cursor_set
  5527                           
  5528                           ;OBCII_PIC18F46K22.c: 295:     LCD_write_string("LRM RDC CDC DSI");
  5529   0017F8  0E4F               	movlw	low STR_11
  5530   0017FA  6E06               	movwf	LCD_write_string@string^0,c
  5531   0017FC  0EFF               	movlw	high STR_11
  5532   0017FE  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5533   001800  ECCE  F009         	call	_LCD_write_string	;wreg free
  5534   001804  0012               	return		;funcret
  5535   001806                     __end_of_display_mm:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function _clear_parsing_notif *****************
  5539 ;; Defined at:
  5540 ;;		line 302 in file "OBCII_PIC18F46K22.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;Total ram usage:        0 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; Hardware stack levels required when called: 4
  5561 ;; This function calls:
  5562 ;;		_LCD_cursor_set
  5563 ;;		_LCD_write_string
  5564 ;; This function is called by:
  5565 ;;		_print_RPM
  5566 ;;		_print_Vbatt
  5567 ;;		_print_AI_Temp
  5568 ;;		_print_ELMVer
  5569 ;;		_print_SAEVer
  5570 ;;		_clear_diagnostic_codes
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	text29
  5575   0018AE                     __ptext29:
  5576                           	callstack 0
  5577   0018AE                     _clear_parsing_notif:
  5578                           	callstack 23
  5579   0018AE                     
  5580                           ;OBCII_PIC18F46K22.c: 303:     LCD_cursor_set(1,16);
  5581   0018AE  0E10               	movlw	16
  5582   0018B0  6E06               	movwf	LCD_cursor_set@column^0,c
  5583   0018B2  0E01               	movlw	1
  5584   0018B4  ECDE  F00A         	call	_LCD_cursor_set
  5585   0018B8                     
  5586                           ;OBCII_PIC18F46K22.c: 304:     LCD_write_string("^");
  5587   0018B8  0EFB               	movlw	low STR_13
  5588   0018BA  6E06               	movwf	LCD_write_string@string^0,c
  5589   0018BC  0EFF               	movlw	high STR_13
  5590   0018BE  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5591   0018C0  ECCE  F009         	call	_LCD_write_string	;wreg free
  5592   0018C4  0012               	return		;funcret
  5593   0018C6                     __end_of_clear_parsing_notif:
  5594                           	callstack 0
  5595                           
  5596 ;; *************** function _LCD_write_string *****************
  5597 ;; Defined at:
  5598 ;;		line 362 in file "LCD.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  string          2    5[COMRAM] PTR unsigned char 
  5601 ;;		 -> STR_39(11), STR_38(16), STR_37(11), STR_36(14), 
  5602 ;;		 -> STR_34(17), STR_33(15), STR_32(14), STR_31(13), 
  5603 ;;		 -> STR_30(5), STR_28(4), STR_26(2), STR_25(4), 
  5604 ;;		 -> air_intake_string(16), STR_23(4), STR_21(4), STR_20(6), 
  5605 ;;		 -> STR_19(6), STR_17(4), STR_16(6), rpm_string(16), 
  5606 ;;		 -> STR_13(2), STR_12(2), STR_11(16), STR_10(17), 
  5607 ;;		 -> STR_8(17), STR_7(17), STR_5(17), STR_3(15), 
  5608 ;;		 -> STR_2(17), buffer(32), 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  i               1    9[COMRAM] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;Total ram usage:        5 bytes
  5625 ;; Hardware stack levels used: 1
  5626 ;; Hardware stack levels required when called: 3
  5627 ;; This function calls:
  5628 ;;		_LCD_write_data
  5629 ;; This function is called by:
  5630 ;;		_welcome_splash
  5631 ;;		_display_mm
  5632 ;;		_parsing_notif
  5633 ;;		_clear_parsing_notif
  5634 ;;		_print_RPM
  5635 ;;		_print_Vbatt
  5636 ;;		_print_AI_Temp
  5637 ;;		_print_ELMVer
  5638 ;;		_print_SAEVer
  5639 ;;		_display_system_info
  5640 ;;		_clear_diagnostic_codes
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text30
  5645   00139C                     __ptext30:
  5646                           	callstack 0
  5647   00139C                     _LCD_write_string:
  5648                           	callstack 26
  5649   00139C                     
  5650                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  5651   00139C  6A0A               	clrf	LCD_write_string@i^0,c
  5652   00139E  EFEB  F009         	goto	l2444
  5653   0013A2                     l2440:
  5654                           
  5655                           ;LCD.c: 366:         LCD_write_data(string[i]);
  5656   0013A2  500A               	movf	LCD_write_string@i^0,w,c
  5657   0013A4  2406               	addwf	LCD_write_string@string^0,w,c
  5658   0013A6  6E08               	movwf	??_LCD_write_string^0,c
  5659   0013A8  0E00               	movlw	0
  5660   0013AA  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  5661   0013AC  6E09               	movwf	(??_LCD_write_string+1)^0,c
  5662   0013AE  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  5663   0013B2  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  5664   0013B6  0E00               	movlw	low (__mediumconst shr (0+16))
  5665   0013B8  6EF8               	movwf	tblptru,c
  5666   0013BA  0E0F               	movlw	(high __ramtop+-1)
  5667   0013BC  64F7               	cpfsgt	tblptrh,c
  5668   0013BE  D003               	bra	u1487
  5669   0013C0  0008               	tblrd		*
  5670   0013C2  50F5               	movf	tablat,w,c
  5671   0013C4  D005               	bra	u1480
  5672   0013C6                     u1487:
  5673   0013C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5674   0013CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5675   0013CE  50EF               	movf	indf0,w,c
  5676   0013D0                     u1480:
  5677   0013D0  EC94  F006         	call	_LCD_write_data
  5678   0013D4                     
  5679                           ;LCD.c: 367:     }
  5680   0013D4  2A0A               	incf	LCD_write_string@i^0,f,c
  5681   0013D6                     l2444:
  5682   0013D6  500A               	movf	LCD_write_string@i^0,w,c
  5683   0013D8  2406               	addwf	LCD_write_string@string^0,w,c
  5684   0013DA  6E08               	movwf	??_LCD_write_string^0,c
  5685   0013DC  0E00               	movlw	0
  5686   0013DE  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  5687   0013E0  6E09               	movwf	(??_LCD_write_string+1)^0,c
  5688   0013E2  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  5689   0013E6  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  5690   0013EA  0E00               	movlw	low (__mediumconst shr (0+16))
  5691   0013EC  6EF8               	movwf	tblptru,c
  5692   0013EE  0E0F               	movlw	(high __ramtop+-1)
  5693   0013F0  64F7               	cpfsgt	tblptrh,c
  5694   0013F2  D003               	bra	u1497
  5695   0013F4  0008               	tblrd		*
  5696   0013F6  50F5               	movf	tablat,w,c
  5697   0013F8  D005               	bra	u1490
  5698   0013FA                     u1497:
  5699   0013FA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5700   0013FE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5701   001402  50EF               	movf	indf0,w,c
  5702   001404                     u1490:
  5703   001404  0900               	iorlw	0
  5704   001406  A4D8               	btfss	status,2,c
  5705   001408  EF08  F00A         	goto	u1501
  5706   00140C  EF0A  F00A         	goto	u1500
  5707   001410                     u1501:
  5708   001410  EFD1  F009         	goto	l2440
  5709   001414                     u1500:
  5710   001414  0012               	return		;funcret
  5711   001416                     __end_of_LCD_write_string:
  5712                           	callstack 0
  5713                           
  5714 ;; *************** function _LCD_write_data *****************
  5715 ;; Defined at:
  5716 ;;		line 74 in file "LCD.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  data            1    wreg     unsigned char 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  data            1    4[COMRAM] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;Total ram usage:        3 bytes
  5735 ;; Hardware stack levels used: 1
  5736 ;; Hardware stack levels required when called: 2
  5737 ;; This function calls:
  5738 ;;		_LCD_pulse_clock
  5739 ;; This function is called by:
  5740 ;;		_LCD_write_string
  5741 ;;		_LCD_write_variable
  5742 ;;		_LCD_add_character
  5743 ;;		_LCD_write_char
  5744 ;;		_LCD_write_float
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text31
  5749   000D28                     __ptext31:
  5750                           	callstack 0
  5751   000D28                     _LCD_write_data:
  5752                           	callstack 26
  5753                           
  5754                           ;incstack = 0
  5755                           ;LCD_write_data@data stored from wreg
  5756   000D28  6E05               	movwf	LCD_write_data@data^0,c
  5757   000D2A                     
  5758                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
  5759   000D2A  848C               	bsf	140,2,c	;volatile
  5760   000D2C                     
  5761                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
  5762   000D2C  6A03               	clrf	??_LCD_write_data^0,c
  5763   000D2E  AE05               	btfss	LCD_write_data@data^0,7,c
  5764   000D30  D001               	bra	u1355
  5765   000D32  2A03               	incf	??_LCD_write_data^0,f,c
  5766   000D34                     u1355:
  5767   000D34  0E01               	movlw	1
  5768   000D36  1603               	andwf	??_LCD_write_data^0,f,c
  5769   000D38  3203               	rrcf	??_LCD_write_data^0,f,c
  5770   000D3A  3203               	rrcf	??_LCD_write_data^0,f,c
  5771   000D3C  508C               	movf	140,w,c	;volatile
  5772   000D3E  1803               	xorwf	??_LCD_write_data^0,w,c
  5773   000D40  0B7F               	andlw	-129
  5774   000D42  1803               	xorwf	??_LCD_write_data^0,w,c
  5775   000D44  6E8C               	movwf	140,c	;volatile
  5776                           
  5777                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
  5778   000D46  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5779   000D4A  0E06               	movlw	6
  5780   000D4C  6E04               	movwf	(??_LCD_write_data+1)^0,c
  5781   000D4E                     u1365:
  5782   000D4E  90D8               	bcf	status,0,c
  5783   000D50  3203               	rrcf	??_LCD_write_data^0,f,c
  5784   000D52  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  5785   000D54  EFA7  F006         	goto	u1365
  5786   000D58  0E01               	movlw	1
  5787   000D5A  1603               	andwf	??_LCD_write_data^0,f,c
  5788   000D5C  3A03               	swapf	??_LCD_write_data^0,f,c
  5789   000D5E  4603               	rlncf	??_LCD_write_data^0,f,c
  5790   000D60  4603               	rlncf	??_LCD_write_data^0,f,c
  5791   000D62  508C               	movf	140,w,c	;volatile
  5792   000D64  1803               	xorwf	??_LCD_write_data^0,w,c
  5793   000D66  0BBF               	andlw	-65
  5794   000D68  1803               	xorwf	??_LCD_write_data^0,w,c
  5795   000D6A  6E8C               	movwf	140,c	;volatile
  5796                           
  5797                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
  5798   000D6C  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5799   000D70  0E05               	movlw	5
  5800   000D72  6E04               	movwf	(??_LCD_write_data+1)^0,c
  5801   000D74                     u1375:
  5802   000D74  90D8               	bcf	status,0,c
  5803   000D76  3203               	rrcf	??_LCD_write_data^0,f,c
  5804   000D78  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  5805   000D7A  EFBA  F006         	goto	u1375
  5806   000D7E  0E01               	movlw	1
  5807   000D80  1603               	andwf	??_LCD_write_data^0,f,c
  5808   000D82  3A03               	swapf	??_LCD_write_data^0,f,c
  5809   000D84  4603               	rlncf	??_LCD_write_data^0,f,c
  5810   000D86  508C               	movf	140,w,c	;volatile
  5811   000D88  1803               	xorwf	??_LCD_write_data^0,w,c
  5812   000D8A  0BDF               	andlw	-33
  5813   000D8C  1803               	xorwf	??_LCD_write_data^0,w,c
  5814   000D8E  6E8C               	movwf	140,c	;volatile
  5815                           
  5816                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
  5817   000D90  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5818   000D94  3A03               	swapf	??_LCD_write_data^0,f,c
  5819   000D96  0E0F               	movlw	15
  5820   000D98  1603               	andwf	??_LCD_write_data^0,f,c
  5821   000D9A  0E01               	movlw	1
  5822   000D9C  1603               	andwf	??_LCD_write_data^0,f,c
  5823   000D9E  3A03               	swapf	??_LCD_write_data^0,f,c
  5824   000DA0  508C               	movf	140,w,c	;volatile
  5825   000DA2  1803               	xorwf	??_LCD_write_data^0,w,c
  5826   000DA4  0BEF               	andlw	-17
  5827   000DA6  1803               	xorwf	??_LCD_write_data^0,w,c
  5828   000DA8  6E8C               	movwf	140,c	;volatile
  5829   000DAA                     
  5830                           ;LCD.c: 85:     LCD_pulse_clock();
  5831   000DAA  EC87  F00C         	call	_LCD_pulse_clock	;wreg free
  5832   000DAE                     
  5833                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
  5834   000DAE  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5835   000DB2  90D8               	bcf	status,0,c
  5836   000DB4  3203               	rrcf	??_LCD_write_data^0,f,c
  5837   000DB6  90D8               	bcf	status,0,c
  5838   000DB8  3203               	rrcf	??_LCD_write_data^0,f,c
  5839   000DBA  90D8               	bcf	status,0,c
  5840   000DBC  3203               	rrcf	??_LCD_write_data^0,f,c
  5841   000DBE  0E01               	movlw	1
  5842   000DC0  1603               	andwf	??_LCD_write_data^0,f,c
  5843   000DC2  3203               	rrcf	??_LCD_write_data^0,f,c
  5844   000DC4  3203               	rrcf	??_LCD_write_data^0,f,c
  5845   000DC6  508C               	movf	140,w,c	;volatile
  5846   000DC8  1803               	xorwf	??_LCD_write_data^0,w,c
  5847   000DCA  0B7F               	andlw	-129
  5848   000DCC  1803               	xorwf	??_LCD_write_data^0,w,c
  5849   000DCE  6E8C               	movwf	140,c	;volatile
  5850   000DD0                     
  5851                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
  5852   000DD0  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5853   000DD4  90D8               	bcf	status,0,c
  5854   000DD6  3203               	rrcf	??_LCD_write_data^0,f,c
  5855   000DD8  90D8               	bcf	status,0,c
  5856   000DDA  3203               	rrcf	??_LCD_write_data^0,f,c
  5857   000DDC  0E01               	movlw	1
  5858   000DDE  1603               	andwf	??_LCD_write_data^0,f,c
  5859   000DE0  3A03               	swapf	??_LCD_write_data^0,f,c
  5860   000DE2  4603               	rlncf	??_LCD_write_data^0,f,c
  5861   000DE4  4603               	rlncf	??_LCD_write_data^0,f,c
  5862   000DE6  508C               	movf	140,w,c	;volatile
  5863   000DE8  1803               	xorwf	??_LCD_write_data^0,w,c
  5864   000DEA  0BBF               	andlw	-65
  5865   000DEC  1803               	xorwf	??_LCD_write_data^0,w,c
  5866   000DEE  6E8C               	movwf	140,c	;volatile
  5867   000DF0                     
  5868                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
  5869   000DF0  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5870   000DF4  90D8               	bcf	status,0,c
  5871   000DF6  3203               	rrcf	??_LCD_write_data^0,f,c
  5872   000DF8  0E01               	movlw	1
  5873   000DFA  1603               	andwf	??_LCD_write_data^0,f,c
  5874   000DFC  3A03               	swapf	??_LCD_write_data^0,f,c
  5875   000DFE  4603               	rlncf	??_LCD_write_data^0,f,c
  5876   000E00  508C               	movf	140,w,c	;volatile
  5877   000E02  1803               	xorwf	??_LCD_write_data^0,w,c
  5878   000E04  0BDF               	andlw	-33
  5879   000E06  1803               	xorwf	??_LCD_write_data^0,w,c
  5880   000E08  6E8C               	movwf	140,c	;volatile
  5881   000E0A                     
  5882                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
  5883   000E0A  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5884   000E0E  0E01               	movlw	1
  5885   000E10  1603               	andwf	??_LCD_write_data^0,f,c
  5886   000E12  3A03               	swapf	??_LCD_write_data^0,f,c
  5887   000E14  508C               	movf	140,w,c	;volatile
  5888   000E16  1803               	xorwf	??_LCD_write_data^0,w,c
  5889   000E18  0BEF               	andlw	-17
  5890   000E1A  1803               	xorwf	??_LCD_write_data^0,w,c
  5891   000E1C  6E8C               	movwf	140,c	;volatile
  5892   000E1E                     
  5893                           ;LCD.c: 94:     LCD_pulse_clock();
  5894   000E1E  EC87  F00C         	call	_LCD_pulse_clock	;wreg free
  5895   000E22  0012               	return		;funcret
  5896   000E24                     __end_of_LCD_write_data:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function _LCD_cursor_set *****************
  5900 ;; Defined at:
  5901 ;;		line 159 in file "LCD.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  row             1    wreg     unsigned char 
  5904 ;;  column          1    5[COMRAM] unsigned char 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  row             1    6[COMRAM] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5916 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;Total ram usage:        2 bytes
  5921 ;; Hardware stack levels used: 1
  5922 ;; Hardware stack levels required when called: 3
  5923 ;; This function calls:
  5924 ;;		_LCD_write_command
  5925 ;; This function is called by:
  5926 ;;		_welcome_splash
  5927 ;;		_display_mm
  5928 ;;		_parsing_notif
  5929 ;;		_clear_parsing_notif
  5930 ;;		_main_menu
  5931 ;;		_print_RPM
  5932 ;;		_print_Vbatt
  5933 ;;		_print_AI_Temp
  5934 ;;		_print_ELMVer
  5935 ;;		_print_SAEVer
  5936 ;;		_display_system_info
  5937 ;;		_clear_diagnostic_codes
  5938 ;;		_LCD_add_character
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text32
  5943   0015BC                     __ptext32:
  5944                           	callstack 0
  5945   0015BC                     _LCD_cursor_set:
  5946                           	callstack 26
  5947                           
  5948                           ;incstack = 0
  5949                           ;LCD_cursor_set@row stored from wreg
  5950   0015BC  6E07               	movwf	LCD_cursor_set@row^0,c
  5951   0015BE                     
  5952                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
  5953   0015BE  0407               	decf	LCD_cursor_set@row^0,w,c
  5954   0015C0  A4D8               	btfss	status,2,c
  5955   0015C2  EFE5  F00A         	goto	u1441
  5956   0015C6  EFE7  F00A         	goto	u1440
  5957   0015CA                     u1441:
  5958   0015CA  EFE9  F00A         	goto	l346
  5959   0015CE                     u1440:
  5960   0015CE  0E7F               	movlw	127
  5961   0015D0  2606               	addwf	LCD_cursor_set@column^0,f,c
  5962   0015D2                     l346:
  5963                           
  5964                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
  5965   0015D2  0E02               	movlw	2
  5966   0015D4  1807               	xorwf	LCD_cursor_set@row^0,w,c
  5967   0015D6  A4D8               	btfss	status,2,c
  5968   0015D8  EFF0  F00A         	goto	u1451
  5969   0015DC  EFF2  F00A         	goto	u1450
  5970   0015E0                     u1451:
  5971   0015E0  EFF4  F00A         	goto	l347
  5972   0015E4                     u1450:
  5973   0015E4  0EBF               	movlw	191
  5974   0015E6  2606               	addwf	LCD_cursor_set@column^0,f,c
  5975   0015E8                     l347:
  5976                           
  5977                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
  5978   0015E8  0E03               	movlw	3
  5979   0015EA  1807               	xorwf	LCD_cursor_set@row^0,w,c
  5980   0015EC  A4D8               	btfss	status,2,c
  5981   0015EE  EFFB  F00A         	goto	u1461
  5982   0015F2  EFFD  F00A         	goto	u1460
  5983   0015F6                     u1461:
  5984   0015F6  EFFF  F00A         	goto	l348
  5985   0015FA                     u1460:
  5986   0015FA  0E93               	movlw	147
  5987   0015FC  2606               	addwf	LCD_cursor_set@column^0,f,c
  5988   0015FE                     l348:
  5989                           
  5990                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
  5991   0015FE  0E04               	movlw	4
  5992   001600  1807               	xorwf	LCD_cursor_set@row^0,w,c
  5993   001602  A4D8               	btfss	status,2,c
  5994   001604  EF06  F00B         	goto	u1471
  5995   001608  EF08  F00B         	goto	u1470
  5996   00160C                     u1471:
  5997   00160C  EF0A  F00B         	goto	l2436
  5998   001610                     u1470:
  5999   001610  0ED3               	movlw	211
  6000   001612  2606               	addwf	LCD_cursor_set@column^0,f,c
  6001   001614                     l2436:
  6002                           
  6003                           ;LCD.c: 168:    LCD_write_command(column);
  6004   001614  5006               	movf	LCD_cursor_set@column^0,w,c
  6005   001616  EC12  F007         	call	_LCD_write_command
  6006   00161A  0012               	return		;funcret
  6007   00161C                     __end_of_LCD_cursor_set:
  6008                           	callstack 0
  6009                           
  6010 ;; *************** function _UART1_SendString *****************
  6011 ;; Defined at:
  6012 ;;		line 178 in file "OBCII_PIC18F46K22.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  string          2    3[COMRAM] PTR unsigned char 
  6015 ;;		 -> STR_35(4), STR_29(6), STR_27(5), STR_22(6), 
  6016 ;;		 -> STR_18(6), STR_14(6), STR_9(6), STR_6(5), 
  6017 ;;		 -> STR_4(5), STR_1(6), 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  i               2    7[COMRAM] unsigned int 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;Total ram usage:        6 bytes
  6034 ;; Hardware stack levels used: 1
  6035 ;; Hardware stack levels required when called: 2
  6036 ;; This function calls:
  6037 ;;		_UART1_SendChar
  6038 ;; This function is called by:
  6039 ;;		_main
  6040 ;;		_welcome_splash
  6041 ;;		_print_RPM
  6042 ;;		_print_Vbatt
  6043 ;;		_print_AI_Temp
  6044 ;;		_print_ELMVer
  6045 ;;		_print_SAEVer
  6046 ;;		_clear_diagnostic_codes
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text33
  6051   00161C                     __ptext33:
  6052                           	callstack 0
  6053   00161C                     _UART1_SendString:
  6054                           	callstack 27
  6055   00161C                     
  6056                           ;OBCII_PIC18F46K22.c: 179:     for (unsigned int i = 0; string[i] != '\0'; i++){
  6057   00161C  0E00               	movlw	0
  6058   00161E  6E09               	movwf	(UART1_SendString@i+1)^0,c
  6059   001620  0E00               	movlw	0
  6060   001622  6E08               	movwf	UART1_SendString@i^0,c
  6061   001624  EF24  F00B         	goto	l2468
  6062   001628                     l2464:
  6063                           
  6064                           ;OBCII_PIC18F46K22.c: 180:         UART1_SendChar(string[i]);
  6065   001628  5008               	movf	UART1_SendString@i^0,w,c
  6066   00162A  2404               	addwf	UART1_SendString@string^0,w,c
  6067   00162C  6E06               	movwf	??_UART1_SendString^0,c
  6068   00162E  5009               	movf	(UART1_SendString@i+1)^0,w,c
  6069   001630  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
  6070   001632  6E07               	movwf	(??_UART1_SendString+1)^0,c
  6071   001634  C006  FFF6         	movff	??_UART1_SendString,tblptrl
  6072   001638  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
  6073   00163C                     	if	0	;tblptru may be non-zero
  6074   00163C                     	endif
  6075   00163C                     	if	0	;tblptru may be non-zero
  6076   00163C                     	endif
  6077   00163C  0008               	tblrd		*
  6078   00163E  50F5               	movf	tablat,w,c
  6079   001640  EC63  F00C         	call	_UART1_SendChar
  6080   001644                     
  6081                           ;OBCII_PIC18F46K22.c: 181:     }
  6082   001644  4A08               	infsnz	UART1_SendString@i^0,f,c
  6083   001646  2A09               	incf	(UART1_SendString@i+1)^0,f,c
  6084   001648                     l2468:
  6085   001648  5008               	movf	UART1_SendString@i^0,w,c
  6086   00164A  2404               	addwf	UART1_SendString@string^0,w,c
  6087   00164C  6E06               	movwf	??_UART1_SendString^0,c
  6088   00164E  5009               	movf	(UART1_SendString@i+1)^0,w,c
  6089   001650  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
  6090   001652  6E07               	movwf	(??_UART1_SendString+1)^0,c
  6091   001654  C006  FFF6         	movff	??_UART1_SendString,tblptrl
  6092   001658  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
  6093   00165C                     	if	0	;tblptru may be non-zero
  6094   00165C                     	endif
  6095   00165C                     	if	0	;tblptru may be non-zero
  6096   00165C                     	endif
  6097   00165C  0008               	tblrd		*
  6098   00165E  50F5               	movf	tablat,w,c
  6099   001660  0900               	iorlw	0
  6100   001662  A4D8               	btfss	status,2,c
  6101   001664  EF36  F00B         	goto	u1521
  6102   001668  EF38  F00B         	goto	u1520
  6103   00166C                     u1521:
  6104   00166C  EF14  F00B         	goto	l2464
  6105   001670                     u1520:
  6106   001670  0012               	return		;funcret
  6107   001672                     __end_of_UART1_SendString:
  6108                           	callstack 0
  6109                           
  6110 ;; *************** function _UART1_SendChar *****************
  6111 ;; Defined at:
  6112 ;;		line 184 in file "OBCII_PIC18F46K22.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  c               1    wreg     unsigned char 
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;  c               1    2[COMRAM] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  1    wreg      void 
  6119 ;; Registers used:
  6120 ;;		wreg
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;Total ram usage:        1 bytes
  6131 ;; Hardware stack levels used: 1
  6132 ;; Hardware stack levels required when called: 1
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_UART1_SendString
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text34
  6141   0018C6                     __ptext34:
  6142                           	callstack 0
  6143   0018C6                     _UART1_SendChar:
  6144                           	callstack 27
  6145                           
  6146                           ;incstack = 0
  6147                           ;UART1_SendChar@c stored from wreg
  6148   0018C6  6E03               	movwf	UART1_SendChar@c^0,c
  6149   0018C8                     l165:
  6150   0018C8  A2AC               	btfss	172,1,c	;volatile
  6151   0018CA  EF69  F00C         	goto	u1431
  6152   0018CE  EF6B  F00C         	goto	u1430
  6153   0018D2                     u1431:
  6154   0018D2  EF64  F00C         	goto	l165
  6155   0018D6                     u1430:
  6156   0018D6                     
  6157                           ;OBCII_PIC18F46K22.c: 186:         TXREG = c;
  6158   0018D6  C003  FFAD         	movff	UART1_SendChar@c,4013	;volatile
  6159   0018DA  0012               	return		;funcret
  6160   0018DC                     __end_of_UART1_SendChar:
  6161                           	callstack 0
  6162                           
  6163 ;; *************** function _LCD_configure_cursor_blink *****************
  6164 ;; Defined at:
  6165 ;;		line 231 in file "LCD.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  state           1    wreg     unsigned char 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  state           1    5[COMRAM] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      void 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;Total ram usage:        1 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; Hardware stack levels required when called: 3
  6186 ;; This function calls:
  6187 ;;		_LCD_write_command
  6188 ;; This function is called by:
  6189 ;;		_main_menu
  6190 ;;		_clear_diagnostic_codes
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text35
  6195   001858                     __ptext35:
  6196                           	callstack 0
  6197   001858                     _LCD_configure_cursor_blink:
  6198                           	callstack 25
  6199                           
  6200                           ;incstack = 0
  6201                           ;LCD_configure_cursor_blink@state stored from wreg
  6202   001858  6E06               	movwf	LCD_configure_cursor_blink@state^0,c
  6203   00185A                     
  6204                           ;LCD.c: 234:     if(state){
  6205   00185A  5006               	movf	LCD_configure_cursor_blink@state^0,w,c
  6206   00185C  B4D8               	btfsc	status,2,c
  6207   00185E  EF33  F00C         	goto	u1621
  6208   001862  EF35  F00C         	goto	u1620
  6209   001866                     u1621:
  6210   001866  EF38  F00C         	goto	l2548
  6211   00186A                     u1620:
  6212   00186A                     
  6213                           ;LCD.c: 235:         LCD_display_control |= 0b00000001;
  6214   00186A  8052               	bsf	_LCD_display_control^0,0,c
  6215                           
  6216                           ;LCD.c: 236:     }
  6217   00186C  EF39  F00C         	goto	l2550
  6218   001870                     l2548:
  6219                           
  6220                           ;LCD.c: 238:         LCD_display_control &= 0b11111110;
  6221   001870  9052               	bcf	_LCD_display_control^0,0,c
  6222   001872                     l2550:
  6223                           
  6224                           ;LCD.c: 242:     LCD_write_command(LCD_display_control);
  6225   001872  5052               	movf	_LCD_display_control^0,w,c
  6226   001874  EC12  F007         	call	_LCD_write_command
  6227   001878  0012               	return		;funcret
  6228   00187A                     __end_of_LCD_configure_cursor_blink:
  6229                           	callstack 0
  6230                           
  6231 ;; *************** function _input_init *****************
  6232 ;; Defined at:
  6233 ;;		line 94 in file "OBCII_PIC18F46K22.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;		None
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;		None
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      void 
  6240 ;; Registers used:
  6241 ;;		None
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;Total ram usage:        0 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 1
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_main
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text36
  6262   0018FE                     __ptext36:
  6263                           	callstack 0
  6264   0018FE                     _input_init:
  6265                           	callstack 29
  6266   0018FE                     
  6267                           ;OBCII_PIC18F46K22.c: 97:     TRISBbits.TRISB4 = 1;
  6268   0018FE  8893               	bsf	147,4,c	;volatile
  6269                           
  6270                           ;OBCII_PIC18F46K22.c: 98:     ANSELBbits.ANSB4 = 0;
  6271   001900  010F               	movlb	15	; () banked
  6272   001902  9939               	bcf	57,4,b	;volatile
  6273                           
  6274                           ;OBCII_PIC18F46K22.c: 100:     TRISCbits.TRISC5 = 1;
  6275   001904  8A94               	bsf	148,5,c	;volatile
  6276                           
  6277                           ;OBCII_PIC18F46K22.c: 101:     ANSELCbits.ANSC5 = 0;
  6278   001906  9B3A               	bcf	58,5,b	;volatile
  6279                           
  6280                           ;OBCII_PIC18F46K22.c: 103:     TRISAbits.TRISA0 = 1;
  6281   001908  8092               	bsf	146,0,c	;volatile
  6282                           
  6283                           ;OBCII_PIC18F46K22.c: 104:     ANSELAbits.ANSA0 = 1;
  6284   00190A  8138               	bsf	56,0,b	;volatile
  6285   00190C                     
  6286                           ; BSR set to: 15
  6287   00190C  0012               	return		;funcret
  6288   00190E                     __end_of_input_init:
  6289                           	callstack 0
  6290                           
  6291 ;; *************** function _UART1_Init *****************
  6292 ;; Defined at:
  6293 ;;		line 116 in file "OBCII_PIC18F46K22.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      void 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;Total ram usage:        0 bytes
  6312 ;; Hardware stack levels used: 1
  6313 ;; Hardware stack levels required when called: 1
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_main
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text37
  6322   001806                     __ptext37:
  6323                           	callstack 0
  6324   001806                     _UART1_Init:
  6325                           	callstack 29
  6326   001806                     
  6327                           ;OBCII_PIC18F46K22.c: 117:     ANSELC = 0;
  6328   001806  010F               	movlb	15	; () banked
  6329   001808  6B3A               	clrf	58,b	;volatile
  6330                           
  6331                           ;OBCII_PIC18F46K22.c: 120:     TRISCbits.TRISC6 = 0;
  6332   00180A  9C94               	bcf	148,6,c	;volatile
  6333                           
  6334                           ;OBCII_PIC18F46K22.c: 121:     TRISCbits.TRISC7 = 1;
  6335   00180C  8E94               	bsf	148,7,c	;volatile
  6336                           
  6337                           ;OBCII_PIC18F46K22.c: 125:     TXSTA1bits.TXEN = 1;
  6338   00180E  8AAC               	bsf	172,5,c	;volatile
  6339                           
  6340                           ;OBCII_PIC18F46K22.c: 126:     TXSTA1bits.TX9 = 0;
  6341   001810  9CAC               	bcf	172,6,c	;volatile
  6342                           
  6343                           ;OBCII_PIC18F46K22.c: 127:     TXSTA1bits.SYNC = 0;
  6344   001812  98AC               	bcf	172,4,c	;volatile
  6345                           
  6346                           ;OBCII_PIC18F46K22.c: 130:     TXSTA1bits.BRGH = 1;
  6347   001814  84AC               	bsf	172,2,c	;volatile
  6348                           
  6349                           ;OBCII_PIC18F46K22.c: 131:     BAUDCON1bits.BRG16 = 1;
  6350   001816  86B8               	bsf	184,3,c	;volatile
  6351   001818                     
  6352                           ; BSR set to: 15
  6353                           ;OBCII_PIC18F46K22.c: 134:     SPBRGH1 = 0b00000001;
  6354   001818  0E01               	movlw	1
  6355   00181A  6EB0               	movwf	176,c	;volatile
  6356                           
  6357                           ;OBCII_PIC18F46K22.c: 135:     SPBRG1 = 0b10100000;
  6358   00181C  0EA0               	movlw	160
  6359   00181E  6EAF               	movwf	175,c	;volatile
  6360   001820                     
  6361                           ; BSR set to: 15
  6362                           ;OBCII_PIC18F46K22.c: 138:     BAUDCON1bits.CKTXP = 0;
  6363   001820  98B8               	bcf	184,4,c	;volatile
  6364   001822                     
  6365                           ; BSR set to: 15
  6366                           ;OBCII_PIC18F46K22.c: 139:     BAUDCON1bits.DTRXP = 0;
  6367   001822  9AB8               	bcf	184,5,c	;volatile
  6368   001824                     
  6369                           ; BSR set to: 15
  6370                           ;OBCII_PIC18F46K22.c: 142:     RCSTA1bits.SPEN = 1;
  6371   001824  8EAB               	bsf	171,7,c	;volatile
  6372   001826                     
  6373                           ; BSR set to: 15
  6374                           ;OBCII_PIC18F46K22.c: 143:     RCSTA1bits.CREN = 1;
  6375   001826  88AB               	bsf	171,4,c	;volatile
  6376   001828                     
  6377                           ; BSR set to: 15
  6378                           ;OBCII_PIC18F46K22.c: 144:     RCSTA1bits.RX9 = 0;
  6379   001828  9CAB               	bcf	171,6,c	;volatile
  6380   00182A                     
  6381                           ; BSR set to: 15
  6382                           ;OBCII_PIC18F46K22.c: 147:     PIE1bits.RC1IE = 1;
  6383   00182A  8A9D               	bsf	157,5,c	;volatile
  6384   00182C                     
  6385                           ; BSR set to: 15
  6386                           ;OBCII_PIC18F46K22.c: 148:     INTCONbits.PEIE = 1;
  6387   00182C  8CF2               	bsf	242,6,c	;volatile
  6388   00182E                     
  6389                           ; BSR set to: 15
  6390                           ;OBCII_PIC18F46K22.c: 149:     INTCONbits.GIE = 1;
  6391   00182E  8EF2               	bsf	242,7,c	;volatile
  6392   001830                     
  6393                           ; BSR set to: 15
  6394   001830  0012               	return		;funcret
  6395   001832                     __end_of_UART1_Init:
  6396                           	callstack 0
  6397                           
  6398 ;; *************** function _LCD_init *****************
  6399 ;; Defined at:
  6400 ;;		line 106 in file "LCD.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;		None
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1    wreg      void 
  6407 ;; Registers used:
  6408 ;;		wreg, status,2, status,0, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;Total ram usage:        2 bytes
  6419 ;; Hardware stack levels used: 1
  6420 ;; Hardware stack levels required when called: 4
  6421 ;; This function calls:
  6422 ;;		_LCD_clear
  6423 ;;		_LCD_pulse_clock
  6424 ;;		_LCD_write_command
  6425 ;; This function is called by:
  6426 ;;		_main
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text38
  6431   001320                     __ptext38:
  6432                           	callstack 0
  6433   001320                     _LCD_init:
  6434                           	callstack 26
  6435   001320                     
  6436                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
  6437   001320  9495               	bcf	149,2,c	;volatile
  6438   001322  948C               	bcf	140,2,c	;volatile
  6439                           
  6440                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
  6441   001324  9695               	bcf	149,3,c	;volatile
  6442   001326  968C               	bcf	140,3,c	;volatile
  6443                           
  6444                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
  6445   001328  9895               	bcf	149,4,c	;volatile
  6446   00132A  988C               	bcf	140,4,c	;volatile
  6447                           
  6448                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
  6449   00132C  9A95               	bcf	149,5,c	;volatile
  6450   00132E  9A8C               	bcf	140,5,c	;volatile
  6451                           
  6452                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
  6453   001330  9C95               	bcf	149,6,c	;volatile
  6454   001332  9C8C               	bcf	140,6,c	;volatile
  6455                           
  6456                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
  6457   001334  9E95               	bcf	149,7,c	;volatile
  6458   001336  9E8C               	bcf	140,7,c	;volatile
  6459   001338                     
  6460                           ;LCD.c: 121:     _delay((unsigned long)((60)*(16000000/4000.0)));
  6461   001338  0E02               	movlw	2
  6462   00133A  6E08               	movwf	(??_LCD_init+1)^0,c
  6463   00133C  0E38               	movlw	56
  6464   00133E  6E07               	movwf	??_LCD_init^0,c
  6465   001340  0EAD               	movlw	173
  6466   001342                     u2647:
  6467   001342  2EE8               	decfsz	wreg,f,c
  6468   001344  D7FE               	bra	u2647
  6469   001346  2E07               	decfsz	??_LCD_init^0,f,c
  6470   001348  D7FC               	bra	u2647
  6471   00134A  2E08               	decfsz	(??_LCD_init+1)^0,f,c
  6472   00134C  D7FA               	bra	u2647
  6473   00134E  0000               	nop	
  6474   001350                     
  6475                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  6476   001350  9E8C               	bcf	140,7,c	;volatile
  6477   001352  9C8C               	bcf	140,6,c	;volatile
  6478   001354  8A8C               	bsf	140,5,c	;volatile
  6479   001356  888C               	bsf	140,4,c	;volatile
  6480   001358                     
  6481                           ;LCD.c: 127:     LCD_pulse_clock();
  6482   001358  EC87  F00C         	call	_LCD_pulse_clock	;wreg free
  6483   00135C                     
  6484                           ;LCD.c: 130:     _delay((unsigned long)((6)*(16000000/4000.0)));
  6485   00135C  0E20               	movlw	32
  6486   00135E  6E07               	movwf	??_LCD_init^0,c
  6487   001360  0E2A               	movlw	42
  6488   001362                     u2657:
  6489   001362  2EE8               	decfsz	wreg,f,c
  6490   001364  D7FE               	bra	u2657
  6491   001366  2E07               	decfsz	??_LCD_init^0,f,c
  6492   001368  D7FC               	bra	u2657
  6493                           
  6494                           ;LCD.c: 133:     LCD_pulse_clock();
  6495   00136A  EC87  F00C         	call	_LCD_pulse_clock	;wreg free
  6496   00136E                     
  6497                           ;LCD.c: 136:     _delay((unsigned long)((150)*(16000000/4000000.0)));
  6498   00136E  0EC8               	movlw	200
  6499   001370                     u2667:
  6500   001370  2EE8               	decfsz	wreg,f,c
  6501   001372  D7FE               	bra	u2667
  6502   001374                     
  6503                           ;LCD.c: 139:     LCD_pulse_clock();
  6504   001374  EC87  F00C         	call	_LCD_pulse_clock	;wreg free
  6505   001378                     
  6506                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  6507   001378  9E8C               	bcf	140,7,c	;volatile
  6508   00137A  9C8C               	bcf	140,6,c	;volatile
  6509   00137C  8A8C               	bsf	140,5,c	;volatile
  6510   00137E  988C               	bcf	140,4,c	;volatile
  6511   001380                     
  6512                           ;LCD.c: 145:     LCD_pulse_clock();
  6513   001380  EC87  F00C         	call	_LCD_pulse_clock	;wreg free
  6514   001384                     
  6515                           ;LCD.c: 148:     LCD_write_command(0x28);
  6516   001384  0E28               	movlw	40
  6517   001386  EC12  F007         	call	_LCD_write_command
  6518   00138A                     
  6519                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
  6520   00138A  5052               	movf	_LCD_display_control^0,w,c
  6521   00138C  EC12  F007         	call	_LCD_write_command
  6522   001390                     
  6523                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
  6524   001390  5051               	movf	_LCD_entry_mode^0,w,c
  6525   001392  EC12  F007         	call	_LCD_write_command
  6526   001396                     
  6527                           ;LCD.c: 151:     LCD_clear();
  6528   001396  EC3D  F00C         	call	_LCD_clear	;wreg free
  6529   00139A  0012               	return		;funcret
  6530   00139C                     __end_of_LCD_init:
  6531                           	callstack 0
  6532                           
  6533 ;; *************** function _LCD_clear *****************
  6534 ;; Defined at:
  6535 ;;		line 248 in file "LCD.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;Total ram usage:        1 bytes
  6554 ;; Hardware stack levels used: 1
  6555 ;; Hardware stack levels required when called: 3
  6556 ;; This function calls:
  6557 ;;		_LCD_write_command
  6558 ;; This function is called by:
  6559 ;;		_main
  6560 ;;		_welcome_splash
  6561 ;;		_main_menu
  6562 ;;		_print_RPM
  6563 ;;		_print_Vbatt
  6564 ;;		_print_AI_Temp
  6565 ;;		_print_ELMVer
  6566 ;;		_print_SAEVer
  6567 ;;		_clear_diagnostic_codes
  6568 ;;		_LCD_init
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text39
  6573   00187A                     __ptext39:
  6574                           	callstack 0
  6575   00187A                     _LCD_clear:
  6576                           	callstack 26
  6577   00187A                     
  6578                           ;LCD.c: 251:     LCD_write_command(0x01);
  6579   00187A  0E01               	movlw	1
  6580   00187C  EC12  F007         	call	_LCD_write_command
  6581   001880                     
  6582                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(16000000/4000000.0)));
  6583   001880  0E0C               	movlw	12
  6584   001882  6E06               	movwf	??_LCD_clear^0,c
  6585   001884  0EA2               	movlw	162
  6586   001886                     u2677:
  6587   001886  2EE8               	decfsz	wreg,f,c
  6588   001888  D7FE               	bra	u2677
  6589   00188A  2E06               	decfsz	??_LCD_clear^0,f,c
  6590   00188C  D7FC               	bra	u2677
  6591   00188E                     
  6592                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
  6593   00188E  5051               	movf	_LCD_entry_mode^0,w,c
  6594   001890  EC12  F007         	call	_LCD_write_command
  6595   001894  0012               	return		;funcret
  6596   001896                     __end_of_LCD_clear:
  6597                           	callstack 0
  6598                           
  6599 ;; *************** function _LCD_write_command *****************
  6600 ;; Defined at:
  6601 ;;		line 46 in file "LCD.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  command         1    wreg     unsigned char 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  command         1    4[COMRAM] unsigned char 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      void 
  6608 ;; Registers used:
  6609 ;;		wreg, status,2, status,0, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;Total ram usage:        3 bytes
  6620 ;; Hardware stack levels used: 1
  6621 ;; Hardware stack levels required when called: 2
  6622 ;; This function calls:
  6623 ;;		_LCD_pulse_clock
  6624 ;; This function is called by:
  6625 ;;		_LCD_init
  6626 ;;		_LCD_cursor_set
  6627 ;;		_LCD_configure_cursor_blink
  6628 ;;		_LCD_clear
  6629 ;;		_LCD_cursor_increment
  6630 ;;		_LCD_cursor_decrement
  6631 ;;		_LCD_configure_lcd_display
  6632 ;;		_LCD_configure_cursor_display
  6633 ;;		_LCD_shift_reset
  6634 ;;		_LCD_shift_left
  6635 ;;		_LCD_shift_right
  6636 ;;		_LCD_configure_entry_id
  6637 ;;		_LCD_configure_entry_shift
  6638 ;;		_LCD_add_character
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text40
  6643   000E24                     __ptext40:
  6644                           	callstack 0
  6645   000E24                     _LCD_write_command:
  6646                           	callstack 26
  6647                           
  6648                           ;incstack = 0
  6649                           ;LCD_write_command@command stored from wreg
  6650   000E24  6E05               	movwf	LCD_write_command@command^0,c
  6651   000E26                     
  6652                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
  6653   000E26  948C               	bcf	140,2,c	;volatile
  6654   000E28                     
  6655                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
  6656   000E28  6A03               	clrf	??_LCD_write_command^0,c
  6657   000E2A  AE05               	btfss	LCD_write_command@command^0,7,c
  6658   000E2C  D001               	bra	u1325
  6659   000E2E  2A03               	incf	??_LCD_write_command^0,f,c
  6660   000E30                     u1325:
  6661   000E30  0E01               	movlw	1
  6662   000E32  1603               	andwf	??_LCD_write_command^0,f,c
  6663   000E34  3203               	rrcf	??_LCD_write_command^0,f,c
  6664   000E36  3203               	rrcf	??_LCD_write_command^0,f,c
  6665   000E38  508C               	movf	140,w,c	;volatile
  6666   000E3A  1803               	xorwf	??_LCD_write_command^0,w,c
  6667   000E3C  0B7F               	andlw	-129
  6668   000E3E  1803               	xorwf	??_LCD_write_command^0,w,c
  6669   000E40  6E8C               	movwf	140,c	;volatile
  6670                           
  6671                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
  6672   000E42  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6673   000E46  0E06               	movlw	6
  6674   000E48  6E04               	movwf	(??_LCD_write_command+1)^0,c
  6675   000E4A                     u1335:
  6676   000E4A  90D8               	bcf	status,0,c
  6677   000E4C  3203               	rrcf	??_LCD_write_command^0,f,c
  6678   000E4E  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
  6679   000E50  EF25  F007         	goto	u1335
  6680   000E54  0E01               	movlw	1
  6681   000E56  1603               	andwf	??_LCD_write_command^0,f,c
  6682   000E58  3A03               	swapf	??_LCD_write_command^0,f,c
  6683   000E5A  4603               	rlncf	??_LCD_write_command^0,f,c
  6684   000E5C  4603               	rlncf	??_LCD_write_command^0,f,c
  6685   000E5E  508C               	movf	140,w,c	;volatile
  6686   000E60  1803               	xorwf	??_LCD_write_command^0,w,c
  6687   000E62  0BBF               	andlw	-65
  6688   000E64  1803               	xorwf	??_LCD_write_command^0,w,c
  6689   000E66  6E8C               	movwf	140,c	;volatile
  6690                           
  6691                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
  6692   000E68  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6693   000E6C  0E05               	movlw	5
  6694   000E6E  6E04               	movwf	(??_LCD_write_command+1)^0,c
  6695   000E70                     u1345:
  6696   000E70  90D8               	bcf	status,0,c
  6697   000E72  3203               	rrcf	??_LCD_write_command^0,f,c
  6698   000E74  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
  6699   000E76  EF38  F007         	goto	u1345
  6700   000E7A  0E01               	movlw	1
  6701   000E7C  1603               	andwf	??_LCD_write_command^0,f,c
  6702   000E7E  3A03               	swapf	??_LCD_write_command^0,f,c
  6703   000E80  4603               	rlncf	??_LCD_write_command^0,f,c
  6704   000E82  508C               	movf	140,w,c	;volatile
  6705   000E84  1803               	xorwf	??_LCD_write_command^0,w,c
  6706   000E86  0BDF               	andlw	-33
  6707   000E88  1803               	xorwf	??_LCD_write_command^0,w,c
  6708   000E8A  6E8C               	movwf	140,c	;volatile
  6709                           
  6710                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
  6711   000E8C  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6712   000E90  3A03               	swapf	??_LCD_write_command^0,f,c
  6713   000E92  0E0F               	movlw	15
  6714   000E94  1603               	andwf	??_LCD_write_command^0,f,c
  6715   000E96  0E01               	movlw	1
  6716   000E98  1603               	andwf	??_LCD_write_command^0,f,c
  6717   000E9A  3A03               	swapf	??_LCD_write_command^0,f,c
  6718   000E9C  508C               	movf	140,w,c	;volatile
  6719   000E9E  1803               	xorwf	??_LCD_write_command^0,w,c
  6720   000EA0  0BEF               	andlw	-17
  6721   000EA2  1803               	xorwf	??_LCD_write_command^0,w,c
  6722   000EA4  6E8C               	movwf	140,c	;volatile
  6723   000EA6                     
  6724                           ;LCD.c: 57:     LCD_pulse_clock();
  6725   000EA6  EC87  F00C         	call	_LCD_pulse_clock	;wreg free
  6726   000EAA                     
  6727                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
  6728   000EAA  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6729   000EAE  90D8               	bcf	status,0,c
  6730   000EB0  3203               	rrcf	??_LCD_write_command^0,f,c
  6731   000EB2  90D8               	bcf	status,0,c
  6732   000EB4  3203               	rrcf	??_LCD_write_command^0,f,c
  6733   000EB6  90D8               	bcf	status,0,c
  6734   000EB8  3203               	rrcf	??_LCD_write_command^0,f,c
  6735   000EBA  0E01               	movlw	1
  6736   000EBC  1603               	andwf	??_LCD_write_command^0,f,c
  6737   000EBE  3203               	rrcf	??_LCD_write_command^0,f,c
  6738   000EC0  3203               	rrcf	??_LCD_write_command^0,f,c
  6739   000EC2  508C               	movf	140,w,c	;volatile
  6740   000EC4  1803               	xorwf	??_LCD_write_command^0,w,c
  6741   000EC6  0B7F               	andlw	-129
  6742   000EC8  1803               	xorwf	??_LCD_write_command^0,w,c
  6743   000ECA  6E8C               	movwf	140,c	;volatile
  6744   000ECC                     
  6745                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
  6746   000ECC  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6747   000ED0  90D8               	bcf	status,0,c
  6748   000ED2  3203               	rrcf	??_LCD_write_command^0,f,c
  6749   000ED4  90D8               	bcf	status,0,c
  6750   000ED6  3203               	rrcf	??_LCD_write_command^0,f,c
  6751   000ED8  0E01               	movlw	1
  6752   000EDA  1603               	andwf	??_LCD_write_command^0,f,c
  6753   000EDC  3A03               	swapf	??_LCD_write_command^0,f,c
  6754   000EDE  4603               	rlncf	??_LCD_write_command^0,f,c
  6755   000EE0  4603               	rlncf	??_LCD_write_command^0,f,c
  6756   000EE2  508C               	movf	140,w,c	;volatile
  6757   000EE4  1803               	xorwf	??_LCD_write_command^0,w,c
  6758   000EE6  0BBF               	andlw	-65
  6759   000EE8  1803               	xorwf	??_LCD_write_command^0,w,c
  6760   000EEA  6E8C               	movwf	140,c	;volatile
  6761   000EEC                     
  6762                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
  6763   000EEC  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6764   000EF0  90D8               	bcf	status,0,c
  6765   000EF2  3203               	rrcf	??_LCD_write_command^0,f,c
  6766   000EF4  0E01               	movlw	1
  6767   000EF6  1603               	andwf	??_LCD_write_command^0,f,c
  6768   000EF8  3A03               	swapf	??_LCD_write_command^0,f,c
  6769   000EFA  4603               	rlncf	??_LCD_write_command^0,f,c
  6770   000EFC  508C               	movf	140,w,c	;volatile
  6771   000EFE  1803               	xorwf	??_LCD_write_command^0,w,c
  6772   000F00  0BDF               	andlw	-33
  6773   000F02  1803               	xorwf	??_LCD_write_command^0,w,c
  6774   000F04  6E8C               	movwf	140,c	;volatile
  6775   000F06                     
  6776                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
  6777   000F06  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6778   000F0A  0E01               	movlw	1
  6779   000F0C  1603               	andwf	??_LCD_write_command^0,f,c
  6780   000F0E  3A03               	swapf	??_LCD_write_command^0,f,c
  6781   000F10  508C               	movf	140,w,c	;volatile
  6782   000F12  1803               	xorwf	??_LCD_write_command^0,w,c
  6783   000F14  0BEF               	andlw	-17
  6784   000F16  1803               	xorwf	??_LCD_write_command^0,w,c
  6785   000F18  6E8C               	movwf	140,c	;volatile
  6786   000F1A                     
  6787                           ;LCD.c: 66:     LCD_pulse_clock();
  6788   000F1A  EC87  F00C         	call	_LCD_pulse_clock	;wreg free
  6789   000F1E  0012               	return		;funcret
  6790   000F20                     __end_of_LCD_write_command:
  6791                           	callstack 0
  6792                           
  6793 ;; *************** function _LCD_pulse_clock *****************
  6794 ;; Defined at:
  6795 ;;		line 34 in file "LCD.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;		None
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used: 1
  6815 ;; Hardware stack levels required when called: 1
  6816 ;; This function calls:
  6817 ;;		Nothing
  6818 ;; This function is called by:
  6819 ;;		_LCD_write_command
  6820 ;;		_LCD_write_data
  6821 ;;		_LCD_init
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text41
  6826   00190E                     __ptext41:
  6827                           	callstack 0
  6828   00190E                     _LCD_pulse_clock:
  6829                           	callstack 26
  6830   00190E                     
  6831                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
  6832   00190E  868C               	bsf	140,3,c	;volatile
  6833   001910                     
  6834                           ;LCD.c: 37:   _delay((unsigned long)((60)*(16000000/4000000.0)));
  6835   001910  0E50               	movlw	80
  6836   001912                     u2687:
  6837   001912  2EE8               	decfsz	wreg,f,c
  6838   001914  D7FE               	bra	u2687
  6839   001916                     
  6840                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
  6841   001916  968C               	bcf	140,3,c	;volatile
  6842   001918  0012               	return		;funcret
  6843   00191A                     __end_of_LCD_pulse_clock:
  6844                           	callstack 0
  6845                           
  6846 ;; *************** function _ADC_init *****************
  6847 ;; Defined at:
  6848 ;;		line 108 in file "OBCII_PIC18F46K22.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;Total ram usage:        0 bytes
  6867 ;; Hardware stack levels used: 1
  6868 ;; Hardware stack levels required when called: 1
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_main
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text42
  6877   00191A                     __ptext42:
  6878                           	callstack 0
  6879   00191A                     _ADC_init:
  6880                           	callstack 29
  6881   00191A                     
  6882                           ;OBCII_PIC18F46K22.c: 110:     ADCON0 = 0b00000001;
  6883   00191A  0E01               	movlw	1
  6884   00191C  6EC2               	movwf	194,c	;volatile
  6885   00191E                     
  6886                           ;OBCII_PIC18F46K22.c: 111:     ADCON1 = 0b00000000;
  6887   00191E  6AC1               	clrf	193,c	;volatile
  6888                           
  6889                           ;OBCII_PIC18F46K22.c: 112:     ADCON2 = 0b10101010;
  6890   001920  0EAA               	movlw	170
  6891   001922  6EC0               	movwf	192,c	;volatile
  6892   001924  0012               	return		;funcret
  6893   001926                     __end_of_ADC_init:
  6894                           	callstack 0
  6895                           
  6896 ;; *************** function _UART_ISR *****************
  6897 ;; Defined at:
  6898 ;;		line 154 in file "OBCII_PIC18F46K22.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;		None
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      void 
  6905 ;; Registers used:
  6906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;Total ram usage:        2 bytes
  6917 ;; Hardware stack levels used: 1
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		Interrupt level 2
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	intcode
  6926   000008                     __pintcode:
  6927                           	callstack 0
  6928   000008                     _UART_ISR:
  6929                           	callstack 22
  6930                           
  6931                           ;incstack = 0
  6932   000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6933   00000A  CFD9 F001          	movff	fsr2l,??_UART_ISR
  6934   00000E  CFDA F002          	movff	fsr2h,??_UART_ISR+1
  6935   000012                     
  6936                           ;OBCII_PIC18F46K22.c: 155:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
  6937   000012  AA9D               	btfss	157,5,c	;volatile
  6938   000014  EF0E  F000         	goto	i2u226_41
  6939   000018  EF10  F000         	goto	i2u226_40
  6940   00001C                     i2u226_41:
  6941   00001C  EF63  F000         	goto	i2l156
  6942   000020                     i2u226_40:
  6943   000020  AA9E               	btfss	158,5,c	;volatile
  6944   000022  EF15  F000         	goto	i2u227_41
  6945   000026  EF17  F000         	goto	i2u227_40
  6946   00002A                     i2u227_41:
  6947   00002A  EF63  F000         	goto	i2l156
  6948   00002E                     i2u227_40:
  6949   00002E                     
  6950                           ;OBCII_PIC18F46K22.c: 156:         RX_char = RCREG1;
  6951   00002E  CFAE F04D          	movff	4014,_RX_char	;volatile
  6952                           
  6953                           ;OBCII_PIC18F46K22.c: 159:         if (RCSTAbits.OERR) {
  6954   000032  A2AB               	btfss	171,1,c	;volatile
  6955   000034  EF1E  F000         	goto	i2u228_41
  6956   000038  EF20  F000         	goto	i2u228_40
  6957   00003C                     i2u228_41:
  6958   00003C  EF22  F000         	goto	i2l3206
  6959   000040                     i2u228_40:
  6960   000040                     
  6961                           ;OBCII_PIC18F46K22.c: 160:             RCSTAbits.CREN = 0;
  6962   000040  98AB               	bcf	171,4,c	;volatile
  6963                           
  6964                           ;OBCII_PIC18F46K22.c: 161:             RCSTAbits.CREN = 1;
  6965   000042  88AB               	bsf	171,4,c	;volatile
  6966   000044                     i2l3206:
  6967                           
  6968                           ;OBCII_PIC18F46K22.c: 165:         if ((RX_char >= 32 && RX_char <= 126) && RX_char != '
      +                          >') {
  6969   000044  0E1F               	movlw	31
  6970   000046  644D               	cpfsgt	_RX_char^0,c
  6971   000048  EF28  F000         	goto	i2u229_41
  6972   00004C  EF2A  F000         	goto	i2u229_40
  6973   000050                     i2u229_41:
  6974   000050  EF42  F000         	goto	i2l3216
  6975   000054                     i2u229_40:
  6976   000054  0E7F               	movlw	127
  6977   000056  604D               	cpfslt	_RX_char^0,c
  6978   000058  EF30  F000         	goto	i2u230_41
  6979   00005C  EF32  F000         	goto	i2u230_40
  6980   000060                     i2u230_41:
  6981   000060  EF42  F000         	goto	i2l3216
  6982   000064                     i2u230_40:
  6983   000064  0E3E               	movlw	62
  6984   000066  184D               	xorwf	_RX_char^0,w,c
  6985   000068  B4D8               	btfsc	status,2,c
  6986   00006A  EF39  F000         	goto	i2u231_41
  6987   00006E  EF3B  F000         	goto	i2u231_40
  6988   000072                     i2u231_41:
  6989   000072  EF42  F000         	goto	i2l3216
  6990   000076                     i2u231_40:
  6991   000076                     
  6992                           ;OBCII_PIC18F46K22.c: 166:             buffer[buffer_count] = RX_char;
  6993   000076  504E               	movf	_buffer_count^0,w,c
  6994   000078  0F80               	addlw	low _buffer
  6995   00007A  6ED9               	movwf	fsr2l,c
  6996   00007C  6ADA               	clrf	fsr2h,c
  6997   00007E  C04D  FFDF         	movff	_RX_char,indf2
  6998   000082                     
  6999                           ;OBCII_PIC18F46K22.c: 167:             buffer_count++;
  7000   000082  2A4E               	incf	_buffer_count^0,f,c
  7001   000084                     i2l3216:
  7002                           
  7003                           ;OBCII_PIC18F46K22.c: 170:         if (RX_char == '>' || RX_char == '\n' || buffer_count
      +                           >= 32 -1) {
  7004   000084  0E3E               	movlw	62
  7005   000086  184D               	xorwf	_RX_char^0,w,c
  7006   000088  B4D8               	btfsc	status,2,c
  7007   00008A  EF49  F000         	goto	i2u232_41
  7008   00008E  EF4B  F000         	goto	i2u232_40
  7009   000092                     i2u232_41:
  7010   000092  EF5C  F000         	goto	i2l3222
  7011   000096                     i2u232_40:
  7012   000096  0E0A               	movlw	10
  7013   000098  184D               	xorwf	_RX_char^0,w,c
  7014   00009A  B4D8               	btfsc	status,2,c
  7015   00009C  EF52  F000         	goto	i2u233_41
  7016   0000A0  EF54  F000         	goto	i2u233_40
  7017   0000A4                     i2u233_41:
  7018   0000A4  EF5C  F000         	goto	i2l3222
  7019   0000A8                     i2u233_40:
  7020   0000A8  0E1E               	movlw	30
  7021   0000AA  644E               	cpfsgt	_buffer_count^0,c
  7022   0000AC  EF5A  F000         	goto	i2u234_41
  7023   0000B0  EF5C  F000         	goto	i2u234_40
  7024   0000B4                     i2u234_41:
  7025   0000B4  EF63  F000         	goto	i2l156
  7026   0000B8                     i2u234_40:
  7027   0000B8                     i2l3222:
  7028                           
  7029                           ;OBCII_PIC18F46K22.c: 171:             buffer[buffer_count] = '\0';
  7030   0000B8  504E               	movf	_buffer_count^0,w,c
  7031   0000BA  0F80               	addlw	low _buffer
  7032   0000BC  6ED9               	movwf	fsr2l,c
  7033   0000BE  6ADA               	clrf	fsr2h,c
  7034   0000C0  6ADF               	clrf	indf2,c
  7035   0000C2                     
  7036                           ;OBCII_PIC18F46K22.c: 172:             message_complete = 1;
  7037   0000C2  0E01               	movlw	1
  7038   0000C4  6E4C               	movwf	_message_complete^0,c	;volatile
  7039   0000C6                     i2l156:
  7040   0000C6  C002  FFDA         	movff	??_UART_ISR+1,fsr2h
  7041   0000CA  C001  FFD9         	movff	??_UART_ISR,fsr2l
  7042   0000CE  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7043   0000D0  0011               	retfie		f
  7044   0000D2                     __end_of_UART_ISR:
  7045                           	callstack 0
  7046                           
  7047                           	psect	rparam
  7048   000001                     ___rparam_used  equ	1
  7049   000000                     ___param_bank   equ	0
  7050   000000                     __Lparam        equ	__Lrparam
  7051   000000                     __Hparam        equ	__Hrparam
  7052                           
  7053                           	psect	temp
  7054   000053                     btemp:
  7055                           	callstack 0
  7056   000053                     	ds	1
  7057   000053                     int$flags       set	btemp
  7058   000054                     wtemp8          set	btemp+1
  7059   000054                     ttemp5          set	btemp+1
  7060   000057                     ttemp6          set	btemp+4
  7061   00005B                     ttemp7          set	btemp+8
  7062                           
  7063                           	psect	config
  7064                           
  7065                           ; Padding undefined space
  7066   300000                     	org	3145728
  7067   300000  FF                 	db	255
  7068                           
  7069                           ;Config register CONFIG1H @ 0x300001
  7070                           ;	Oscillator Selection bits
  7071                           ;	FOSC = INTIO67, Internal oscillator block
  7072                           ;	4X PLL Enable
  7073                           ;	PLLCFG = ON, Oscillator multiplied by 4
  7074                           ;	Primary clock enable bit
  7075                           ;	PRICLKEN = ON, Primary clock is always enabled
  7076                           ;	Fail-Safe Clock Monitor Enable bit
  7077                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7078                           ;	Internal/External Oscillator Switchover bit
  7079                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7080   300001                     	org	3145729
  7081   300001  38                 	db	56
  7082                           
  7083                           ;Config register CONFIG2L @ 0x300002
  7084                           ;	Power-up Timer Enable bit
  7085                           ;	PWRTEN = ON, Power up timer enabled
  7086                           ;	Brown-out Reset Enable bits
  7087                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7088                           ;	Brown Out Reset Voltage bits
  7089                           ;	BORV = 250, VBOR set to 2.50 V nominal
  7090   300002                     	org	3145730
  7091   300002  0E                 	db	14
  7092                           
  7093                           ;Config register CONFIG2H @ 0x300003
  7094                           ;	Watchdog Timer Enable bits
  7095                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  7096                           ;	Watchdog Timer Postscale Select bits
  7097                           ;	WDTPS = 32768, 1:32768
  7098   300003                     	org	3145731
  7099   300003  3C                 	db	60
  7100                           
  7101                           ; Padding undefined space
  7102   300004                     	org	3145732
  7103   300004  FF                 	db	255
  7104                           
  7105                           ;Config register CONFIG3H @ 0x300005
  7106                           ;	CCP2 MUX bit
  7107                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  7108                           ;	PORTB A/D Enable bit
  7109                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7110                           ;	P3A/CCP3 Mux bit
  7111                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  7112                           ;	HFINTOSC Fast Start-up
  7113                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  7114                           ;	Timer3 Clock input mux bit
  7115                           ;	T3CMX = PORTC0, T3CKI is on RC0
  7116                           ;	ECCP2 B output mux bit
  7117                           ;	P2BMX = PORTD2, P2B is on RD2
  7118                           ;	MCLR Pin Enable bit
  7119                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  7120   300005                     	org	3145733
  7121   300005  BF                 	db	191
  7122                           
  7123                           ;Config register CONFIG4L @ 0x300006
  7124                           ;	Stack Full/Underflow Reset Enable bit
  7125                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7126                           ;	Single-Supply ICSP Enable bit
  7127                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  7128                           ;	Extended Instruction Set Enable bit
  7129                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7130                           ;	Background Debug
  7131                           ;	DEBUG = 0x1, unprogrammed default
  7132   300006                     	org	3145734
  7133   300006  85                 	db	133
  7134                           
  7135                           ; Padding undefined space
  7136   300007                     	org	3145735
  7137   300007  FF                 	db	255
  7138                           
  7139                           ;Config register CONFIG5L @ 0x300008
  7140                           ;	Code Protection Block 0
  7141                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7142                           ;	Code Protection Block 1
  7143                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7144                           ;	Code Protection Block 2
  7145                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7146                           ;	Code Protection Block 3
  7147                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7148   300008                     	org	3145736
  7149   300008  0F                 	db	15
  7150                           
  7151                           ;Config register CONFIG5H @ 0x300009
  7152                           ;	Boot Block Code Protection bit
  7153                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7154                           ;	Data EEPROM Code Protection bit
  7155                           ;	CPD = OFF, Data EEPROM not code-protected
  7156   300009                     	org	3145737
  7157   300009  C0                 	db	192
  7158                           
  7159                           ;Config register CONFIG6L @ 0x30000A
  7160                           ;	Write Protection Block 0
  7161                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7162                           ;	Write Protection Block 1
  7163                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7164                           ;	Write Protection Block 2
  7165                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7166                           ;	Write Protection Block 3
  7167                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7168   30000A                     	org	3145738
  7169   30000A  0F                 	db	15
  7170                           
  7171                           ;Config register CONFIG6H @ 0x30000B
  7172                           ;	Configuration Register Write Protection bit
  7173                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7174                           ;	Boot Block Write Protection bit
  7175                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7176                           ;	Data EEPROM Write Protection bit
  7177                           ;	WRTD = OFF, Data EEPROM not write-protected
  7178   30000B                     	org	3145739
  7179   30000B  E0                 	db	224
  7180                           
  7181                           ;Config register CONFIG7L @ 0x30000C
  7182                           ;	Table Read Protection Block 0
  7183                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7184                           ;	Table Read Protection Block 1
  7185                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7186                           ;	Table Read Protection Block 2
  7187                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7188                           ;	Table Read Protection Block 3
  7189                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7190   30000C                     	org	3145740
  7191   30000C  0F                 	db	15
  7192                           
  7193                           ;Config register CONFIG7H @ 0x30000D
  7194                           ;	Boot Block Table Read Protection bit
  7195                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7196   30000D                     	org	3145741
  7197   30000D  40                 	db	64
  7198                           tosu	equ	0xFFF
  7199                           tosh	equ	0xFFE
  7200                           tosl	equ	0xFFD
  7201                           stkptr	equ	0xFFC
  7202                           pclatu	equ	0xFFB
  7203                           pclath	equ	0xFFA
  7204                           pcl	equ	0xFF9
  7205                           tblptru	equ	0xFF8
  7206                           tblptrh	equ	0xFF7
  7207                           tblptrl	equ	0xFF6
  7208                           tablat	equ	0xFF5
  7209                           prodh	equ	0xFF4
  7210                           prodl	equ	0xFF3
  7211                           indf0	equ	0xFEF
  7212                           postinc0	equ	0xFEE
  7213                           postdec0	equ	0xFED
  7214                           preinc0	equ	0xFEC
  7215                           plusw0	equ	0xFEB
  7216                           fsr0h	equ	0xFEA
  7217                           fsr0l	equ	0xFE9
  7218                           wreg	equ	0xFE8
  7219                           indf1	equ	0xFE7
  7220                           postinc1	equ	0xFE6
  7221                           postdec1	equ	0xFE5
  7222                           preinc1	equ	0xFE4
  7223                           plusw1	equ	0xFE3
  7224                           fsr1h	equ	0xFE2
  7225                           fsr1l	equ	0xFE1
  7226                           bsr	equ	0xFE0
  7227                           indf2	equ	0xFDF
  7228                           postinc2	equ	0xFDE
  7229                           postdec2	equ	0xFDD
  7230                           preinc2	equ	0xFDC
  7231                           plusw2	equ	0xFDB
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8

Data Sizes:
    Strings     278
    Constant    0
    Data        4
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      82
    BANK0           160      0      96
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 32
		 -> air_intake_string(BANK0[16]), buffer(BANK0[32]), rpm_string(BANK0[16]), STR_10(CODE[17]), 
		 -> STR_11(CODE[16]), STR_12(CODE[2]), STR_13(CODE[2]), STR_16(CODE[6]), 
		 -> STR_17(CODE[4]), STR_19(CODE[6]), STR_2(CODE[17]), STR_20(CODE[6]), 
		 -> STR_21(CODE[4]), STR_23(CODE[4]), STR_25(CODE[4]), STR_26(CODE[2]), 
		 -> STR_28(CODE[4]), STR_3(CODE[15]), STR_30(CODE[5]), STR_31(CODE[13]), 
		 -> STR_32(CODE[14]), STR_33(CODE[15]), STR_34(CODE[17]), STR_36(CODE[14]), 
		 -> STR_37(CODE[11]), STR_38(CODE[16]), STR_39(CODE[11]), STR_5(CODE[17]), 
		 -> STR_7(CODE[17]), STR_8(CODE[17]), 

    S1989$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(BANK0[16]), 

    S1989$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK0[32]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), STR_24(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(BANK0[16]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 32
		 -> buffer(BANK0[32]), 

    UART1_SendString@string	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), STR_14(CODE[6]), STR_18(CODE[6]), STR_22(CODE[6]), 
		 -> STR_27(CODE[5]), STR_29(CODE[6]), STR_35(CODE[4]), STR_4(CODE[5]), 
		 -> STR_6(CODE[5]), STR_9(CODE[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), STR_24(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), STR_24(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), STR_24(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_main_menu
    _welcome_splash->_LCD_write_variable
    _LCD_write_variable->___aldiv
    _main_menu->_live_reading_mode
    _live_reading_mode->_print_AI_Temp
    _live_reading_mode->_print_RPM
    _print_Vbatt->_LCD_write_string
    _print_RPM->_sprintf
    _print_AI_Temp->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _display_system_info->_print_ELMVer
    _display_system_info->_print_SAEVer
    _print_SAEVer->_LCD_write_string
    _print_ELMVer->_LCD_write_string
    _clear_diagnostic_codes->_LCD_write_string
    _parsing_notif->_LCD_write_string
    _display_mm->_LCD_write_string
    _clear_parsing_notif->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _UART1_SendString->_UART1_SendChar
    _LCD_configure_cursor_blink->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   30134
                                             52 COMRAM     2     2      0
                           _ADC_init
                          _LCD_clear
                           _LCD_init
                         _UART1_Init
                   _UART1_SendString
                         _input_init
                          _main_menu
                     _welcome_splash
 ---------------------------------------------------------------------------------
 (1) _welcome_splash                                       6     6      0    2781
                                             27 COMRAM     6     6      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                 _LCD_write_variable
                   _UART1_SendString
                            ___lwdiv
                            ___lwmod
                          _ccp1_init
                          _tmr1_init
 ---------------------------------------------------------------------------------
 (2) _tmr1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ccp1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_write_variable                                  11     6      5    1231
                                             16 COMRAM    11     6      5
                     _LCD_write_data
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8      94
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     300
                                              2 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            2     2      0   26528
                                             50 COMRAM     2     2      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
             _clear_diagnostic_codes
                         _display_mm
                _display_system_info
                  _live_reading_mode
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _live_reading_mode                                    2     2      0   13545
                                             48 COMRAM     2     2      0
                      _print_AI_Temp
                          _print_RPM
                        _print_Vbatt
 ---------------------------------------------------------------------------------
 (3) _print_Vbatt                                          1     1      0    3511
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               4     1      3      90
                                              2 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _print_RPM                                            3     3      0    5017
                                             45 COMRAM     3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                  _hex_char_to_value
                      _parsing_notif
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _print_AI_Temp                                        3     3      0    5017
                                             45 COMRAM     3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                  _hex_char_to_value
                      _parsing_notif
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             19    14      5    1335
                                             28 COMRAM    17    12      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             6     2      4    1132
                                             22 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           13    10      3    1007
                                             10 COMRAM    12     9      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     230
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     163
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     166
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _hex_char_to_value                                    1     1      0     261
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _display_system_info                                  0     0      0    7607
                     _LCD_cursor_set
                   _LCD_write_string
                       _print_ELMVer
                       _print_SAEVer
 ---------------------------------------------------------------------------------
 (3) _print_SAEVer                                         1     1      0    3421
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (3) _print_ELMVer                                         1     1      0    3421
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (2) _clear_diagnostic_codes                               4     4      0    3707
                                             10 COMRAM     4     4      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _parsing_notif                                        0     0      0     765
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _display_mm                                           0     0      0     765
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _clear_parsing_notif                                  0     0      0     765
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     5     3      2     354
                                              5 COMRAM     5     3      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (3) _LCD_write_data                                       3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_set                                       2     1      1     411
                                              5 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _UART1_SendString                                     6     4      2     129
                                              3 COMRAM     6     4      2
                     _UART1_SendChar
 ---------------------------------------------------------------------------------
 (3) _UART1_SendChar                                       1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_configure_cursor_blink                           1     1      0     261
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _input_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     464
                                              6 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     232
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_write_command                                    3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _UART_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _UART1_Init
   _UART1_SendString
     _UART1_SendChar
   _input_init
   _main_menu
     _LCD_clear
     _LCD_configure_cursor_blink
       _LCD_write_command
     _LCD_cursor_set
       _LCD_write_command
     _clear_diagnostic_codes
       _LCD_clear
       _LCD_configure_cursor_blink
       _LCD_cursor_set
       _LCD_write_string
         _LCD_write_data
           _LCD_pulse_clock
       _UART1_SendString
       _clear_parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _display_mm
         _LCD_cursor_set
         _LCD_write_string
       _parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _readADC
     _display_mm
     _display_system_info
       _LCD_cursor_set
       _LCD_write_string
       _print_ELMVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
       _print_SAEVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
     _live_reading_mode
       _print_AI_Temp
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _hex_char_to_value
         _parsing_notif
         _sprintf
           _vfprintf
             _vfpfcnvrt
               ___lwdiv
               ___lwmod
               _fputc
                 _putch
       _print_RPM
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _hex_char_to_value
         _parsing_notif
         _sprintf
       _print_Vbatt
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
         _strchr
     _readADC
   _welcome_splash
     _LCD_clear
     _LCD_cursor_set
     _LCD_write_string
     _LCD_write_variable
       _LCD_write_data
       ___aldiv
       ___almod
       ___lmul
       ___lwdiv (ARG)
     _UART1_SendString
     ___lwdiv
     ___lwmod
     _ccp1_init
     _tmr1_init

 _UART_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      96     60.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     54      82     87.2%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        70      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     178      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 29 15:14:43 2025

                               l201 18C4                                 l210 02F0  
                               l220 0230                                 l142 1924  
                               l303 03EE                                 l145 1830  
                               l162 1670                                 l250 09D0  
                               l139 190C                                 l171 18EC  
                               l340 0E22                                 l404 1414  
                               l244 131E                                 l165 18C8  
                               l317 04F6                                 l334 1918  
                               l350 161A                                 l254 0B06  
                               l174 18FC                                 l343 139A  
                               l168 18DA                                 l192 17D6  
                               l272 0C1C                                 l264 10E2  
                               l337 0F1E                                 l346 15D2  
                               l258 101A                                 l530 1008  
                               l450 14F2                                 l426 09BE  
                               l186 06C4                                 l371 1878  
                               l347 15E8                                 l195 1804  
                               l283 12A0                                 l291 1216  
                               l275 1856                                 l419 0920  
                               l348 15FE                                 l268 0B18  
                               l189 17A4                                 l517 0D26  
                               l374 1894                                 l198 18AC  
                               l294 17A0                                 l279 1228  
                               l287 119E                                 l449 14E2  
                               l936 1488                                 l929 1480  
                               l946 15BA                                 l939 15B2  
                               _RPM 0043                                 wreg 0FE8  
                        _TXSTA1bits 0FAC                                l1125 176A  
                              l3000 050C                                l1162 084A  
                              l3010 053C                                l3002 0516  
                              l2300 1440                                l3100 01A6  
                              l3020 0562                                l3012 0540  
                              l3004 0522                                l1181 118C  
                              l2310 1474                                l2302 144E  
                              l3110 01E2                                l3102 01B0  
                              l3022 0566                                l3030 05CA  
                              l3014 0548                                l3006 052C  
                              l2312 147A                                l2304 1454  
                              l2320 157A                                l1192 192A  
                              l2400 07BA                                l3120 0220  
                              l3112 01F0                                l3104 01B6  
                              l3040 05F8                                l3032 05DA  
                              l3024 0570                                l3016 0550  
                              l3008 0538                                l1169 16F8  
                              l2306 146A                                l2322 1588  
                              l2314 1558                                l2330 10E4  
                              l2402 07CE                                l2410 0800  
                              l3122 0224                                l3114 01F4  
                              l3106 01C4                                l3050 0630  
                              l3034 05E2                                l3026 0598  
                              l3018 055E                                l1195 16FA  
                              l2500 12F4                                l2308 1472  
                              l2324 159E                                l2316 156A  
                              l2340 115C                                l2332 10F4  
                              l2404 07E8                                l2412 0818  
                              l3124 0228                                l3116 0202  
                              l3108 01D4                                l3060 0688  
                              l3052 063C                                l3044 0612  
                              l3036 05E4                                l3028 05BE  
                              l1197 1732                                l2350 0EAA  
                              l2422 18C8                                l2430 15E4  
                              l2502 1304                                l2326 15A6  
                              l2318 1572                                l2334 1104  
                              l2406 07EA                                l3126 023E  
                              l3118 0212                                l3070 00DE  
                              l3062 06A0                                l3046 061A  
                              l3054 0658                                l3038 05E6  
                              l2352 0ECC                                l2344 0E26  
                              l2424 18D6                                l2432 15FA  
                              l2360 0D2A                                l2440 13A2  
                              l2504 1314                                l2328 15AC  
                              l2336 110E                                l2416 0828  
                              l2520 1760                                l2512 1734  
                              l2600 1046                                l3160 02A2  
                              l3136 0260                                l3128 024E  
                              l3080 0120                                l3072 00EE  
                              l3064 06AC                                l3056 0666  
                              l3048 0624                                l2290 1916  
                              l2354 0EEC                                l2346 0E28  
                              l2434 1610                                l2426 15BE  
                              l2370 0DF0                                l2362 0D2C  
                              l2442 13D4                                l2338 112A  
                              l2450 16D4                                l2514 173C  
                              l2530 1718                                l2610 106A  
                              l2602 104A                                l3154 0280  
                              l3138 0278                                l3170 02B4  
                              l3090 0168                                l3082 0132  
                              l3074 00FE                                l3066 00D6  
                              l3058 0672                                l2356 0F06  
                              l2348 0EA6                                l2460 188E  
                              l2436 1614                                l2428 15CE  
                              l2372 0E0A                                l2364 0DAA  
                              l2444 13D6                                l2540 17C0  
                              l2700 118E                                l2508 131C  
                              l2292 1416                                l2380 06F4  
                              l2452 16F0                                l2516 1744  
                              l2532 1730                                l2524 16FA  
                              l2620 10A4                                l2612 106E  
                              l2604 104E                                l3156 0284  
                              l3172 02F0                                l3092 0170  
                              l3084 013A                                l3076 0106  
                              l3068 00DA                                l1732 18DC  
                              l3180 14F4                                l2286 190E  
                              l2358 0F1A                                l2550 1872  
                              l2462 161C                                l2374 0E1E  
                              l2366 0DAE                                l2438 139C  
                              l2470 17D8                                l2710 11D2  
                              l2702 11AC                                l2294 141E  
                              l2390 0746                                l2382 0700  
                              l2446 16B8                                l2518 174C  
                              l2630 0B08                                l2526 1712  
                              l2622 10C4                                l2614 1078  
                              l2606 1056                                l3158 0292  
                              l3094 017A                                l3086 0144  
                              l3078 0110                                l1734 18E4  
                              l3190 1524                                l3182 14F8  
                              l2288 1910                                l2456 187A  
                              l1920 1818                                l1912 18FE  
                              l2544 185A                                l2464 1628  
                              l2368 0DD0                                l2480 18AE  
                              l2472 17E2                                l2536 17A2  
                              l2720 11FC                                l2704 11BC  
                              l2712 11DA                                l2296 1430  
                              l2392 0764                                l2384 0704  
                              l2376 06C6                                l2448 16C4  
                              l2640 0B4C                                l2632 0B26  
                              l2560 0A00                                l2552 09C0  
                              l2624 10D4                                l2616 108E  
                              l2608 105A                                l3344 02CA  
                              l3096 018C                                l3088 0156  
                              l2800 0F8C                                l1736 18EE  
                              l3192 1530                                l3184 14FC  
                              l1914 191A                                l2458 1880  
                              l1930 1828                                l1922 1820  
                              l2546 186A                                l2466 1644  
                              l2482 18B8                                l2474 17EE  
                              l2538 17B2                                l3346 04E0  
                              l2722 1208                                l2706 11CA  
                              l2714 11DE                                l2298 1438  
                              l2394 0768                                l2386 0712  
                              l2378 06E8                                l2650 0B76  
                              l2634 0B36                                l2642 0B54  
                              l2570 0A24                                l2562 0A04  
                              l2554 09DE                                l2626 10DE  
                              l2618 109A                                l3098 019E  
                              l2802 0F9A                                l2810 0FD8  
                              l2730 149A                                l3194 1548  
                              l3186 1500                                l1916 191E  
                              l1932 182A                                l1924 1822  
                              l2548 1870                                l2468 1648  
                              l2476 1896                                l2900 03D0  
                              l2724 1212                                l2716 11EE  
                              l2708 11CE                                l2492 12CC  
                              l2484 12A4                                l2396 078C  
                              l2388 072E                                l2660 0BEE  
                              l2652 0BB4                                l2636 0B44  
                              l2644 0B58                                l2580 0ACC  
                              l2572 0A56                                l2556 09EE  
                              l2564 0A0C                                l2628 10E0  
                              l2740 0C20                                l2812 0FE8  
                              l2804 0FB8                                l2732 14A8  
                              l2820 084E                                l3196 154C  
                              l3188 150C                                l1934 182C  
                              l1926 1824                                l1918 1806  
                              l2478 18A0                                l2910 040C  
                              l2902 03DE                                l2726 1214  
                              l2718 11F2                                l2494 12DC  
                              l2486 12B4                                l2398 07A8  
                              l2670 0C1A                                l2662 0BF8  
                              l2654 0BC0                                l2646 0B68  
                              l2638 0B48                                l2590 0B02  
                              l2582 0AD8                                l2574 0A88  
                              l2558 09FC                                l2566 0A10  
                              l2750 0C60                                l2742 0C2E  
                              l2814 0FF8                                l2806 0FC8  
                              l2734 14B8                                l2822 085C  
                              l1936 182E                                l1928 1826  
                              l2920 0442                                l2904 03E2  
                              l2680 1258                                l2672 1218  
                              l2496 12EC                                l2488 12C4  
                              l2664 0C02                                l2656 0BD8  
                              l2648 0B6C                                l2592 0B04  
                              l2584 0AE2                                l2576 0AAA  
                              l2568 0A20                                l2760 0C9E  
                              l2752 0C64                                l2744 0C3E  
                              l2808 0FD2                                l2736 14C2  
                              l2728 148A                                l2840 091A  
                              l2832 08C6                                l2824 0890  
                              l2930 0476                                l2922 0446  
                              l2914 041E                                l2906 03E6  
                              l2690 127C                                l2682 125C  
                              l2674 1236                                l2666 0C0C  
                              l2658 0BE2                                l2586 0AEE  
                              l2578 0AC2                                l2594 100A  
                              l2770 0CE6                                l2762 0CAC  
                              l2754 0C74                                l2746 0C42  
                              l2738 0C1E                                l2850 0980  
                              l2842 0930                                l2834 08FE  
                              l2826 08A0                                l2818 084C  
                              l2932 047A                                l2924 044A  
                              l2916 042E                                l2908 03FC  
                              l2692 1286                                l2676 1246  
                              l2684 1264                                l2668 0C18  
                              l2588 0AF8                                l2596 1028  
                              l2860 1836                                l2772 0CF0  
                              l2764 0CB6                                l2756 0C8A  
                              l2748 0C50                                l2852 09AC  
                              l2844 0938                                l2828 08A2  
                              l2934 0496                                l2926 0460  
                              l2918 0432                                l2870 031A  
                              l2694 1292                                l2678 1254  
                              l2686 1268                                l2598 1038  
                              l2862 183A                                l2766 0CD4  
                              l2758 0C92                                l2774 0CF6  
                              l2790 0F44                                l2782 0F20  
                              l2854 09AE                                l2846 096C  
                              l2838 0914                                l2960 1338  
                              l2936 04A4                                l2928 046A  
                              l2880 034C                                l2872 0324  
                              l2696 129C                                l2688 1278  
                              l2952 176C                                l2864 183E  
                              l2776 0D06                                l2768 0CE4  
                              l2792 0F52                                l2784 0F22  
                              l2848 096E                                l2970 1358  
                              l2962 1350                                l2938 04B0  
                              l2946 04CA                                l2890 038E  
                              l2882 0358                                l2874 0330  
                              l2866 030E                                l2698 129E  
                              l2954 1776                                l2858 1832  
                              l2778 0D16                                l2794 0F62  
                              l2786 0F30                                l2980 137A  
                              l2972 135C                                l2964 1352  
                              l2892 03A0                                l2884 036A  
                              l2876 033A                                l2868 0316  
                              l2956 1782                                l2796 0F78  
                              l2788 0F40                                l2990 138A  
                              l2982 137C                                l2974 136E  
                              l2966 1354                                l2958 1320  
                              l2894 03A8                                l2886 0372  
                              l2878 0346                                l2798 0F80  
                              l2992 1390                                l2984 137E  
                              l2976 1374                                l2968 1356  
                              l2896 03B2                                l2888 037C  
                              l2994 1396                                l2986 1380  
                              l2978 1378                                l2898 03C0  
                              l2988 1384                                l2996 04F8  
                              l2998 0508                                STR_1 FFB4  
                              STR_2 FEFA                                STR_3 FF6F  
                              STR_4 FFD8                                STR_5 FEE9  
                              STR_6 FFD8                                STR_7 FF3E  
                              STR_8 FF1C                                STR_9 FFB4  
                              u2000 03A0                                u2001 039C  
                              u2010 03C0                                u2011 03BC  
                              u2020 03DE                                u1220 1430  
                              u1300 112A                                u2100 060E  
                              u2021 03DA                                u1221 142C  
                              u1301 1126                                u2101 060A  
                              u2030 03FC                                u1230 144E  
                              u1310 115C                                u2110 00FE  
                              u2031 03F8                                u1231 144A  
                              u1311 1158                                u2111 00FA  
                              u2040 041A                                u1240 146A  
                              u1400 07BA                                u2200 0202  
                              u2120 0120                                u2041 0416  
                              u1241 1466                                u1401 07B6  
                              u2201 01FE                                u2121 011C  
                              u2050 0442                                u1250 156A  
                              u1410 07CA                                u2210 0220  
                              u2130 0132                                u2051 043E  
                              u1251 1566                                u1411 07C6  
                              u2211 021C                                u2131 012E  
                              u1500 1414                                u1260 1588  
                              u1420 07FC                                u2220 023E  
                              u2140 0156                                u2060 055E  
                              u1325 0E30                                u1501 1410  
                              u1261 1584                                u1421 07F8  
                              u2221 023A                                u2141 0152  
                              u2061 055A                                u1430 18D6  
                              u1270 159E                                u1510 16F0  
                              u2230 025C                                u2150 0168  
                              u2070 05BE                                u1335 0E4A  
                              u1431 18D2                                u1271 159A  
                              u1511 16EC                                u2231 0258  
                              u2151 0164                                u2071 05BA  
                              u1520 1670                                u1440 15CE  
                              u1280 10F4                                u1600 1730  
                              u2240 0292                                u2160 018C  
                              u2080 05DA                                u1345 0E70  
                              u1521 166C                                u1441 15CA  
                              u1281 10F0                                u1601 172C  
                              u2241 028E                                u2161 0188  
                              u2081 05D6                                u1450 15E4  
                              u1610 17B2                                u1530 12B4  
                              u1290 1104                                u2250 02B0  
                              u2170 019E                                u2090 05F8  
                              u1451 15E0                                u1355 0D34  
                              u1611 17AE                                u1531 12B0  
                              u1291 1100                                u2251 02AC  
                              u2171 019A                                u2091 05F4  
                              u1620 186A                                u1460 15FA  
                              u1540 12C4                                u1380 06E8  
                              u1700 0B26                                u2180 01C4  
                              u1621 1866                                u1461 15F6  
                              u1365 0D4E                                u1541 12C0  
                              u1381 06E4                                u1701 0B22  
                              u2181 01C0                                u1470 1610  
                              u1550 12DC                                u1390 072E  
                              u1710 0B44                                u1630 09DE  
                              u2190 01E2                                u1471 160C  
                              u1375 0D74                                u1551 12D8  
                              u1391 072A                                u1711 0B40  
                              u1631 09DA                                u2191 01DE  
                              u1480 13D0                                u1560 12EC  
                              u1720 0B68                                u1640 09FC  
                              u1800 14E2                                u1561 12E8  
                              u1721 0B64                                u1641 09F8  
                              u1801 14DE                                u1490 1404  
                              u1730 1236                                u1570 1304  
                              u1650 0A20                                u1810 0C2E  
                              u1731 1232                                u1571 1300  
                              u1651 0A1C                                u2507 0244  
                              u1811 0C2A                                u1740 1254  
                              u1580 1314                                u1660 1028  
                              u1820 0C50                                u1900 0F9A  
                              u1741 1250                                u1581 1310  
                              u1661 1024                                u2517 026A  
                              u1821 0C4C                                u1901 0F96  
                              u2437 1516                                u1750 1278  
                              u1590 1712                                u1670 1046  
                              u1830 0C8A                                u1910 0FB8  
                              u1487 13C6                                u2607 03C6  
                              u1751 1274                                u1591 170E  
                              u1671 1042                                u2527 0298  
                              u1831 0C86                                u1911 0FB4  
                              u2447 153A                                u1760 11AC  
                              u1680 106A                                u1840 0CAC  
                              u1920 0FE8                                u1497 13FA  
                              u2617 0402                                u1761 11A8  
                              u1681 1066                                u2537 02FA  
                              u1841 0CA8                                u1921 0FE4  
                              u2457 0646                                u1770 11CA  
                              u1690 10C4                                u1850 0CD4  
                              u1930 085C                                u2627 0484  
                              u1771 11C6                                u1691 10C0  
                              u2547 1848                                u1851 0CD0  
                              u1931 0858                                u2467 0692  
                              u1780 11EE                                u1860 0D06  
                              u1940 08C2                                u2637 17B8  
                              u1781 11EA                                u2557 102E  
                              u1861 0D02                                u1941 08BE  
                              u2477 06B6                                u1870 0F30  
                              u1790 14A8                                u1950 0910  
                              u2647 1342                                u2567 09E4  
                              u2487 01CA                                u1871 0F2C  
                              u1791 14A4                                u1951 090C  
                              u1880 0F52                                u1960 0980  
                              u2657 1362                                u2577 0B2C  
                              u2497 0208                                u1881 0F4E  
                              u1961 097C                                u1890 0F78  
                              u1970 09BE                                u2667 1370  
                              u2587 11B2                                u1891 0F74  
                              u1971 09BA                                u1980 036A  
                              u2677 1886                                u1981 0366  
                              u2597 123C                                u1990 038E  
                              u2687 1912                                u1991 038A  
                    _UART1_SendChar 18C6                   _live_reading_mode 1832  
                 _air_intake_string 00A0                                _dbuf 0060  
                              _main 14F4                                _prec 003D  
                              fsr0h 0FEA                                fsr1h 0FE2  
                   ??_print_AI_Temp 002E                                indf0 0FEF  
                              fsr2h 0FDA                                fsr0l 0FE9  
                              indf2 0FDF                                fsr1l 0FE1  
                              fsr2l 0FD9                                btemp 0053  
                ?_live_reading_mode 0001               __end_of_parsing_notif 18AE  
                              start 00D2                    __end_of_ADC_init 1926  
                      ___param_bank 0000                 ??_live_reading_mode 0031  
                       ?_UART1_Init 0001                        _BAUDCON1bits 0FB8  
                  __end_of_LCD_init 139C                     __end_of___aldiv 0D28  
                   __end_of___almod 100A                               ?_main 0001  
                             STR_10 FF2D                               STR_11 FF4F  
                             STR_12 FFFD                               STR_20 FFD2  
                             STR_13 FFFB                               STR_21 FFEA  
                             STR_30 FFDD                               STR_22 FFC6  
                             STR_14 FFC0                               STR_23 FF97  
                             STR_31 FF8E                               STR_15 FFF6  
                             STR_16 FF95                               STR_24 FFF6  
                             STR_32 FF8D                               STR_25 FFF2  
                             STR_17 FFEE                               STR_33 FF7E  
                             STR_26 FFF9                               STR_18 FFCC  
                             STR_34 FF0B                               STR_27 FFD8  
                             STR_19 FF95                               STR_35 FFE2  
                             STR_28 FFE6                               STR_36 FF9B  
                             STR_29 FFBA                               STR_37 FFA9  
                             STR_38 FF5F                               STR_39 FFA9  
                   __end_of___lwdiv 148A                     __end_of___lwmod 15BC  
                             i2l156 00C6                        vfpfcnvrt@fmt 000C  
                             _TXREG 0FAD                               _A_rpm 0047  
                             _B_rpm 0045                 ___lmul@multiplicand 0007  
                  __end_of_UART_ISR 00D2                     __end_of_readADC 17D8  
            __end_of_UART1_SendChar 18DC                               _flags 004B  
      welcome_splash@CCP1IF_counter 0020                               _fputc 10E4  
         __end_of_live_reading_mode 1858                               _width 003B  
                             _putch 192A                               tablat 0FF5  
                 UART1_SendString@i 0008             ?_clear_diagnostic_codes 0001  
                             ttemp5 0054                               ttemp6 0057  
                             ttemp7 005B                               status 0FD8  
                             wtemp8 0054                     __end_of_sprintf 176C  
                   __initialization 1672                        __end_of_main 1558  
                 ?_LCD_write_string 0006                              ??_main 0035  
                     __activetblptr 0002                  ??_LCD_write_string 0008  
       __end_of_clear_parsing_notif 18C6                   __end_of_LCD_clear 1896  
                            _ADCON0 0FC2                              _ADCON1 0FC1  
                            _ADCON2 0FC0                     ?_UART1_SendChar 0001  
                            ?_fputc 0003                              _ADRESH 0FC4  
                            _ADRESL 0FC3                              _CCPR1H 0FBF  
                            _CCPR1L 0FBE                              ?_putch 0001  
                            _ANSELC 0F3A      __end_of_clear_diagnostic_codes 04F8  
                            i2l3200 0020                              i2l3210 0064  
                            i2l3202 002E                              i2l3220 00A8  
                            i2l3212 0076                              i2l3204 0040  
                            i2l3222 00B8                              i2l3214 0082  
                            i2l3206 0044                              i2l3224 00C2  
                            i2l3208 0054                              i2l3216 0084  
                            i2l3218 0096                              i2l3198 0012  
                            _RCREG1 0FAE                 _display_system_info 176C  
            LCD_write_string@string 0006                              _OSCCON 0FD3  
                            _SPBRG1 0FAF       clear_diagnostic_codes@opt_sel 000D  
                  _UART1_SendString 161C     LCD_write_variable@temp_variable 0018  
                      vfprintf@cfmt 001B                              ___lmul 148A  
                         ??___aldiv 000B                           ??___almod 000B  
                         ??___lwdiv 0007        ??_LCD_configure_cursor_blink 0006  
                         ??___lwmod 0007                              _buffer 0080  
              ?_display_system_info 0001                              clear_0 1698  
                            clear_1 16A4                              isa$std 0001  
                            _result 0049                              _strchr 16FA  
                         ??_readADC 0005                              fputc@c 0003  
                      __pdataCOMRAM 004F                    ??_welcome_splash 001C  
                      __mediumconst FEE8                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                         ?_ADC_init 0001                              putch@c 0001  
                  __end_of_vfprintf 16FA                           ??_sprintf 0022  
                      ?_print_Vbatt 0001                          __accesstop 0060  
           __end_of__initialization 16AA                           ?_LCD_init 0001  
                     ___rparam_used 0001                     UART1_SendChar@c 0003  
                    __pcstackCOMRAM 0001                           ?_UART_ISR 0001  
                    _LCD_entry_mode 0051                   _LCD_write_command 0E24  
                     __end_of_fputc 118E               ??_display_system_info 000C  
                     __end_of_putch 192C                      _LCD_cursor_set 15BC  
                ?_LCD_write_command 0001          __end_of_LCD_write_variable 09C0  
                 _hex_char_to_value 12A2                  ?_hex_char_to_value 0001  
               ??_LCD_write_command 0003                          ??_ADC_init 0003  
                           ??_fputc 0006                             ??_putch 0003  
                        __pbssBANK0 0060                 ??_hex_char_to_value 0003  
                        ??_LCD_init 0007           __end_of_LCD_write_command 0F20  
                           ?___lmul 0003                        ??_UART1_Init 0003  
                        ??_UART_ISR 0001              __end_of_LCD_cursor_set 161C  
                    ___lmul@product 000B           __end_of_hex_char_to_value 1320  
                 __end_of_ccp1_init 18EE                             ?_strchr 0003  
                           _SPBRGH1 0FB0                          _display_mm 17D8  
          LCD_write_command@command 0005                  __end_of_UART1_Init 1832  
                           _RX_char 004D               __end_of_print_AI_Temp 0C1E  
                           __Hparam 0000                             __Lparam 0000  
__end_of_LCD_configure_cursor_blink 187A          _LCD_configure_cursor_blink 1858  
                  _message_complete 004C                             ___aldiv 0C1E  
                           ___almod 0F20                     ?_LCD_cursor_set 0006  
                    _LCD_write_data 0D28                             ___lwdiv 1416  
        LCD_write_variable@variable 0011                             ___lwmod 1558  
                         ?_vfprintf 0017                   __end_of_main_menu 030E  
                           __pcinit 1672                             __ramtop 1000  
                           __ptext0 14F4                             __ptext1 04F8  
                           __ptext2 18EE                             __ptext3 18DC  
                           __ptext4 084C                             __ptext5 148A  
                           __ptext6 0F20                             __ptext7 0C1E  
                           __ptext8 00D6                             __ptext9 1832  
                           _readADC 17A2                           _T1CONbits 0FCD  
                  ??_UART1_SendChar 0003                    ___aldiv@dividend 0003  
          __end_of_UART1_SendString 1672                          _input_init 18FE  
                           _sprintf 1734                           _LCD_clear 187A  
              end_of_initialization 16AA                   __end_of_tmr1_init 18FE  
                           fputc@fp 0005                       __Lmediumconst FEE8  
              LCD_cursor_set@column 0006                   __end_of_print_RPM 0B08  
                     ?_print_ELMVer 0001                        _buffer_count 004E  
               _LCD_display_control 0052              __end_of_LCD_write_data 0E24  
                 __end_of_vfpfcnvrt 084C                       ?_print_SAEVer 0001  
                         _RCSTAbits 0FAB                    ___aldiv@quotient 000D  
                           postdec1 0FE5                             postdec2 0FDD  
                           postinc0 0FEE                             postinc1 0FE6  
                           postinc2 0FDE                    vfpfcnvrt@convarg 0012  
                        ??_vfprintf 001B                             strchr@c 0004  
                           strchr@s 0003                           _PORTBbits 0F81  
                         _PORTCbits 0F82                   ??_LCD_pulse_clock 0003  
                        _rpm_string 00B0                           _TRISAbits 0F92  
                         _TRISBbits 0F93                           _TRISCbits 0F94  
                         _TRISDbits 0F95                         ?_display_mm 0001  
                        ?_LCD_clear 0001                     _air_intake_temp 003F  
                       _CCP1CONbits 0FBD                           _TXSTAbits 0FAC  
                    ??_print_ELMVer 000B                       _parsing_notif 1896  
                    ??_print_SAEVer 000B                     ?_LCD_write_data 0001  
                    __end_of___lmul 14F4                         vfpfcnvrt@ap 000D  
                       vfpfcnvrt@cp 0010                         vfpfcnvrt@fp 000B  
                     __pidataCOMRAM 1926                      __end_of_strchr 1734  
               start_initialization 1672                         ?_input_init 0001  
                _LCD_write_variable 084C                 LCD_write_variable@i 0016  
               ?_LCD_write_variable 0011                      ?_parsing_notif 0001  
       __end_of_display_system_info 17A2                         vfprintf@fmt 0018  
                          ??___lmul 000B                            ??_strchr 0006  
              ??_LCD_write_variable 0016            ??_clear_diagnostic_codes 000B  
                       __pbssCOMRAM 0037                           _ccp1_init 18DC  
                       ??_LCD_clear 0006                    _LCD_write_string 139C  
                  ??_LCD_cursor_set 0007                    ___lwdiv@dividend 0003  
   LCD_configure_cursor_blink@state 0006                           __pintcode 0008  
                     __pmediumconst FEE8                            ?___aldiv 0003  
                          ?___almod 0003         ?_LCD_configure_cursor_blink 0001  
                          ?___lwdiv 0003                            ?___lwmod 0003  
            UART1_SendString@string 0004                    ___almod@dividend 0003  
                          ?_readADC 0003                         __smallconst FEE8  
                         _main_menu 00D6                          ?_ccp1_init 0001  
              __end_of_print_ELMVer 12A2                            _ADC_init 191A  
              __end_of_print_SAEVer 1218                   ?_UART1_SendString 0004  
                  ___lwdiv@quotient 0007                            ?_sprintf 001D  
                LCD_write_data@data 0005                  ??_UART1_SendString 0006  
                   ___aldiv@divisor 0007                     ___aldiv@counter 000B  
                   ??_parsing_notif 000B                            _LATDbits 0F8C  
                          _LCD_init 1320                            _PIE1bits 0F9D  
                         _tmr1_init 18EE                            i2u230_40 0064  
                          i2u230_41 0060                            i2u231_40 0076  
                          i2u231_41 0072                            i2u232_40 0096  
                          i2u232_41 0092                            i2u233_40 00A8  
                          i2u233_41 00A4                            i2u234_40 00B8  
                          i2u226_40 0020                            i2u234_41 00B4  
                          i2u226_41 001C                            i2u227_40 002E  
                          i2u227_41 002A                            i2u228_40 0040  
                          i2u228_41 003C                            i2u229_40 0054  
                          i2u229_41 0050                            _PIR1bits 0F9E  
                   _LCD_pulse_clock 190E                            _UART_ISR 0008  
                         _print_RPM 09C0                 _clear_parsing_notif 18AE  
                         _vfpfcnvrt 06C6                          _ADCON0bits 0FC2  
                        ?_main_menu 0001                        ??_display_mm 000B  
                        vfpfcnvrt@c 0016                       ??_print_Vbatt 000B  
                 ___lmul@multiplier 0003                           copy_data0 1686  
              ?_clear_parsing_notif 0001                    ??_LCD_write_data 0003  
                        ?_tmr1_init 0001                            __Hrparam 0000  
          LCD_write_variable@digits 0017                           modff@F522 0037  
                        vfprintf@ap 001A                            __Lrparam 0000  
                        vfprintf@fp 0017                  hex_char_to_value@c 0003  
                 LCD_cursor_set@row 0007                          ?_print_RPM 0001  
                __end_of_display_mm 1806                          ?_vfpfcnvrt 000B  
                        _ANSELAbits 0F38                          _ANSELBbits 0F39  
                        _ANSELCbits 0F3A                          sprintf@fmt 001E  
                       ??_ccp1_init 0003                     ___lwdiv@divisor 0005  
                   ___lwdiv@counter 0009                        ??_input_init 0003  
                          __ptext10 100A                            __ptext11 16FA  
                          __ptext20 1416                            __ptext12 09C0  
                          __ptext21 12A2                            __ptext13 0B08  
                          __ptext30 139C                            __ptext22 176C  
                          __ptext14 1734                            __ptext31 0D28  
                          __ptext23 118E                            __ptext15 16B8  
                          __ptext40 0E24                            __ptext32 15BC  
                          __ptext24 1218                            __ptext16 06C6  
                          __ptext41 190E                            __ptext33 161C  
                          __ptext25 030E                            __ptext17 10E4  
                          __ptext42 191A                            __ptext34 18C6  
                          __ptext26 17A2                            __ptext18 192A  
                          __ptext35 1858                            __ptext27 1896  
                          __ptext19 1558                            __ptext36 18FE  
                          __ptext28 17D8                            __ptext37 1806  
                          __ptext29 18AE                            __ptext38 1320  
                          __ptext39 187A               ??_clear_parsing_notif 000B  
                   ___almod@divisor 0007                     ___almod@counter 000B  
                    _welcome_splash 04F8             __end_of_LCD_pulse_clock 191A  
                          _menu_sel 004F                 __end_of_print_Vbatt 10E4  
            _clear_diagnostic_codes 030E                       _print_AI_Temp 0B08  
                          isa$xinst 0000                            int$flags 0053  
                          _vfprintf 16B8                  __end_of_input_init 190E  
          __end_of_LCD_write_string 1416       LCD_write_variable@left_offset 0015  
                       ??_main_menu 0033                          _INTCONbits 0FF2  
            __end_of_welcome_splash 06C6                   LCD_write_string@i 000A  
                          intlevel2 0000                           sprintf@ap 0022  
                  ___lwmod@dividend 0003                         ??_tmr1_init 0003  
                        _RCSTA1bits 0FAB                      ?_print_AI_Temp 0001  
           welcome_splash@plug_flag 001E                        _print_ELMVer 1218  
                      _print_SAEVer 118E                          _UART1_Init 1806  
                       ??_print_RPM 002E                         ??_vfpfcnvrt 000E  
                          sprintf@f 0023                            sprintf@s 001D  
                   ___lwmod@divisor 0005                        _A_air_intake 0041  
                   ___lwmod@counter 0007                        ___aldiv@sign 000C  
                   ?_welcome_splash 0001                         _print_Vbatt 100A  
                      ___almod@sign 000C                    ?_LCD_pulse_clock 0001  
