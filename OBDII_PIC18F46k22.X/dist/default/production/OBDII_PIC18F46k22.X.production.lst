

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri May 02 19:41:07 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=4
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=4
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=4
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=4
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=4
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=4
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=4
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=4
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=4
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=4
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=4
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=4
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1,group=4
    62                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85   000000                     
    86                           ; Generated 12/10/2023 GMT
    87                           ; 
    88                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F46K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120   000FE0                     bsr             equ	4064
   121   000FE9                     fsr0            equ	4073
   122   000FEA                     fsr0h           equ	4074
   123   000FE9                     fsr0l           equ	4073
   124   000FE1                     fsr1            equ	4065
   125   000FE2                     fsr1h           equ	4066
   126   000FE1                     fsr1l           equ	4065
   127   000FD9                     fsr2            equ	4057
   128   000FDA                     fsr2h           equ	4058
   129   000FD9                     fsr2l           equ	4057
   130   000FEF                     indf0           equ	4079
   131   000FE7                     indf1           equ	4071
   132   000FDF                     indf2           equ	4063
   133   000FF2                     intcon          equ	4082
   134   000000                     nvmcon          equ	0
   135   000FF9                     pcl             equ	4089
   136   000FFA                     pclath          equ	4090
   137   000FFB                     pclatu          equ	4091
   138   000FEB                     plusw0          equ	4075
   139   000FE3                     plusw1          equ	4067
   140   000FDB                     plusw2          equ	4059
   141   000FED                     postdec0        equ	4077
   142   000FE5                     postdec1        equ	4069
   143   000FDD                     postdec2        equ	4061
   144   000FEE                     postinc0        equ	4078
   145   000FE6                     postinc1        equ	4070
   146   000FDE                     postinc2        equ	4062
   147   000FEC                     preinc0         equ	4076
   148   000FE4                     preinc1         equ	4068
   149   000FDC                     preinc2         equ	4060
   150   000FF3                     prod            equ	4083
   151   000FF4                     prodh           equ	4084
   152   000FF3                     prodl           equ	4083
   153   000FD8                     status          equ	4056
   154   000FF5                     tablat          equ	4085
   155   000FF6                     tblptr          equ	4086
   156   000FF7                     tblptrh         equ	4087
   157   000FF6                     tblptrl         equ	4086
   158   000FF8                     tblptru         equ	4088
   159   000FFD                     tosl            equ	4093
   160   000FE8                     wreg            equ	4072
   161   000F38                     ANSELA          equ	3896	;# 
   162   000F39                     ANSELB          equ	3897	;# 
   163   000F3A                     ANSELC          equ	3898	;# 
   164   000F3B                     ANSELD          equ	3899	;# 
   165   000F3C                     ANSELE          equ	3900	;# 
   166   000F3D                     PMD2            equ	3901	;# 
   167   000F3E                     PMD1            equ	3902	;# 
   168   000F3F                     PMD0            equ	3903	;# 
   169   000F40                     VREFCON2        equ	3904	;# 
   170   000F40                     DACCON1         equ	3904	;# 
   171   000F41                     VREFCON1        equ	3905	;# 
   172   000F41                     DACCON0         equ	3905	;# 
   173   000F42                     VREFCON0        equ	3906	;# 
   174   000F42                     FVRCON          equ	3906	;# 
   175   000F43                     CTMUICON        equ	3907	;# 
   176   000F43                     CTMUICONH       equ	3907	;# 
   177   000F44                     CTMUCONL        equ	3908	;# 
   178   000F44                     CTMUCON1        equ	3908	;# 
   179   000F45                     CTMUCONH        equ	3909	;# 
   180   000F45                     CTMUCON0        equ	3909	;# 
   181   000F46                     SRCON1          equ	3910	;# 
   182   000F47                     SRCON0          equ	3911	;# 
   183   000F48                     CCPTMRS1        equ	3912	;# 
   184   000F49                     CCPTMRS0        equ	3913	;# 
   185   000F4A                     T6CON           equ	3914	;# 
   186   000F4B                     PR6             equ	3915	;# 
   187   000F4C                     TMR6            equ	3916	;# 
   188   000F4D                     T5GCON          equ	3917	;# 
   189   000F4E                     T5CON           equ	3918	;# 
   190   000F4F                     TMR5            equ	3919	;# 
   191   000F4F                     TMR5L           equ	3919	;# 
   192   000F50                     TMR5H           equ	3920	;# 
   193   000F51                     T4CON           equ	3921	;# 
   194   000F52                     PR4             equ	3922	;# 
   195   000F53                     TMR4            equ	3923	;# 
   196   000F54                     CCP5CON         equ	3924	;# 
   197   000F55                     CCPR5           equ	3925	;# 
   198   000F55                     CCPR5L          equ	3925	;# 
   199   000F56                     CCPR5H          equ	3926	;# 
   200   000F57                     CCP4CON         equ	3927	;# 
   201   000F58                     CCPR4           equ	3928	;# 
   202   000F58                     CCPR4L          equ	3928	;# 
   203   000F59                     CCPR4H          equ	3929	;# 
   204   000F5A                     PSTR3CON        equ	3930	;# 
   205   000F5B                     ECCP3AS         equ	3931	;# 
   206   000F5B                     CCP3AS          equ	3931	;# 
   207   000F5C                     PWM3CON         equ	3932	;# 
   208   000F5D                     CCP3CON         equ	3933	;# 
   209   000F5E                     CCPR3           equ	3934	;# 
   210   000F5E                     CCPR3L          equ	3934	;# 
   211   000F5F                     CCPR3H          equ	3935	;# 
   212   000F60                     SLRCON          equ	3936	;# 
   213   000F61                     WPUB            equ	3937	;# 
   214   000F62                     IOCB            equ	3938	;# 
   215   000F63                     PSTR2CON        equ	3939	;# 
   216   000F64                     ECCP2AS         equ	3940	;# 
   217   000F64                     CCP2AS          equ	3940	;# 
   218   000F65                     PWM2CON         equ	3941	;# 
   219   000F66                     CCP2CON         equ	3942	;# 
   220   000F67                     CCPR2           equ	3943	;# 
   221   000F67                     CCPR2L          equ	3943	;# 
   222   000F68                     CCPR2H          equ	3944	;# 
   223   000F69                     SSP2CON3        equ	3945	;# 
   224   000F6A                     SSP2MSK         equ	3946	;# 
   225   000F6B                     SSP2CON2        equ	3947	;# 
   226   000F6C                     SSP2CON1        equ	3948	;# 
   227   000F6D                     SSP2STAT        equ	3949	;# 
   228   000F6E                     SSP2ADD         equ	3950	;# 
   229   000F6F                     SSP2BUF         equ	3951	;# 
   230   000F70                     BAUDCON2        equ	3952	;# 
   231   000F70                     BAUD2CON        equ	3952	;# 
   232   000F71                     RCSTA2          equ	3953	;# 
   233   000F71                     RC2STA          equ	3953	;# 
   234   000F72                     TXSTA2          equ	3954	;# 
   235   000F72                     TX2STA          equ	3954	;# 
   236   000F73                     TXREG2          equ	3955	;# 
   237   000F73                     TX2REG          equ	3955	;# 
   238   000F74                     RCREG2          equ	3956	;# 
   239   000F74                     RC2REG          equ	3956	;# 
   240   000F75                     SPBRG2          equ	3957	;# 
   241   000F75                     SP2BRG          equ	3957	;# 
   242   000F76                     SPBRGH2         equ	3958	;# 
   243   000F76                     SP2BRGH         equ	3958	;# 
   244   000F77                     CM2CON1         equ	3959	;# 
   245   000F77                     CM12CON         equ	3959	;# 
   246   000F78                     CM2CON0         equ	3960	;# 
   247   000F78                     CM2CON          equ	3960	;# 
   248   000F79                     CM1CON0         equ	3961	;# 
   249   000F79                     CM1CON          equ	3961	;# 
   250   000F7A                     PIE4            equ	3962	;# 
   251   000F7B                     PIR4            equ	3963	;# 
   252   000F7C                     IPR4            equ	3964	;# 
   253   000F7D                     PIE5            equ	3965	;# 
   254   000F7E                     PIR5            equ	3966	;# 
   255   000F7F                     IPR5            equ	3967	;# 
   256   000F80                     PORTA           equ	3968	;# 
   257   000F81                     PORTB           equ	3969	;# 
   258   000F82                     PORTC           equ	3970	;# 
   259   000F83                     PORTD           equ	3971	;# 
   260   000F84                     PORTE           equ	3972	;# 
   261   000F89                     LATA            equ	3977	;# 
   262   000F8A                     LATB            equ	3978	;# 
   263   000F8B                     LATC            equ	3979	;# 
   264   000F8C                     LATD            equ	3980	;# 
   265   000F8D                     LATE            equ	3981	;# 
   266   000F92                     TRISA           equ	3986	;# 
   267   000F92                     DDRA            equ	3986	;# 
   268   000F93                     TRISB           equ	3987	;# 
   269   000F93                     DDRB            equ	3987	;# 
   270   000F94                     TRISC           equ	3988	;# 
   271   000F94                     DDRC            equ	3988	;# 
   272   000F95                     TRISD           equ	3989	;# 
   273   000F95                     DDRD            equ	3989	;# 
   274   000F96                     TRISE           equ	3990	;# 
   275   000F96                     DDRE            equ	3990	;# 
   276   000F9B                     OSCTUNE         equ	3995	;# 
   277   000F9C                     HLVDCON         equ	3996	;# 
   278   000F9C                     LVDCON          equ	3996	;# 
   279   000F9D                     PIE1            equ	3997	;# 
   280   000F9E                     PIR1            equ	3998	;# 
   281   000F9F                     IPR1            equ	3999	;# 
   282   000FA0                     PIE2            equ	4000	;# 
   283   000FA1                     PIR2            equ	4001	;# 
   284   000FA2                     IPR2            equ	4002	;# 
   285   000FA3                     PIE3            equ	4003	;# 
   286   000FA4                     PIR3            equ	4004	;# 
   287   000FA5                     IPR3            equ	4005	;# 
   288   000FA6                     EECON1          equ	4006	;# 
   289   000FA7                     EECON2          equ	4007	;# 
   290   000FA8                     EEDATA          equ	4008	;# 
   291   000FA9                     EEADR           equ	4009	;# 
   292   000FAA                     EEADRH          equ	4010	;# 
   293   000FAB                     RCSTA1          equ	4011	;# 
   294   000FAB                     RCSTA           equ	4011	;# 
   295   000FAB                     RC1STA          equ	4011	;# 
   296   000FAC                     TXSTA1          equ	4012	;# 
   297   000FAC                     TXSTA           equ	4012	;# 
   298   000FAC                     TX1STA          equ	4012	;# 
   299   000FAD                     TXREG1          equ	4013	;# 
   300   000FAD                     TXREG           equ	4013	;# 
   301   000FAD                     TX1REG          equ	4013	;# 
   302   000FAE                     RCREG1          equ	4014	;# 
   303   000FAE                     RCREG           equ	4014	;# 
   304   000FAE                     RC1REG          equ	4014	;# 
   305   000FAF                     SPBRG1          equ	4015	;# 
   306   000FAF                     SPBRG           equ	4015	;# 
   307   000FAF                     SP1BRG          equ	4015	;# 
   308   000FB0                     SPBRGH1         equ	4016	;# 
   309   000FB0                     SPBRGH          equ	4016	;# 
   310   000FB0                     SP1BRGH         equ	4016	;# 
   311   000FB1                     T3CON           equ	4017	;# 
   312   000FB2                     TMR3            equ	4018	;# 
   313   000FB2                     TMR3L           equ	4018	;# 
   314   000FB3                     TMR3H           equ	4019	;# 
   315   000FB4                     T3GCON          equ	4020	;# 
   316   000FB6                     ECCP1AS         equ	4022	;# 
   317   000FB6                     ECCPAS          equ	4022	;# 
   318   000FB7                     PWM1CON         equ	4023	;# 
   319   000FB7                     PWMCON          equ	4023	;# 
   320   000FB8                     BAUDCON1        equ	4024	;# 
   321   000FB8                     BAUDCON         equ	4024	;# 
   322   000FB8                     BAUDCTL         equ	4024	;# 
   323   000FB8                     BAUD1CON        equ	4024	;# 
   324   000FB9                     PSTR1CON        equ	4025	;# 
   325   000FB9                     PSTRCON         equ	4025	;# 
   326   000FBA                     T2CON           equ	4026	;# 
   327   000FBB                     PR2             equ	4027	;# 
   328   000FBC                     TMR2            equ	4028	;# 
   329   000FBD                     CCP1CON         equ	4029	;# 
   330   000FBE                     CCPR1           equ	4030	;# 
   331   000FBE                     CCPR1L          equ	4030	;# 
   332   000FBF                     CCPR1H          equ	4031	;# 
   333   000FC0                     ADCON2          equ	4032	;# 
   334   000FC1                     ADCON1          equ	4033	;# 
   335   000FC2                     ADCON0          equ	4034	;# 
   336   000FC3                     ADRES           equ	4035	;# 
   337   000FC3                     ADRESL          equ	4035	;# 
   338   000FC4                     ADRESH          equ	4036	;# 
   339   000FC5                     SSP1CON2        equ	4037	;# 
   340   000FC5                     SSPCON2         equ	4037	;# 
   341   000FC6                     SSP1CON1        equ	4038	;# 
   342   000FC6                     SSPCON1         equ	4038	;# 
   343   000FC7                     SSP1STAT        equ	4039	;# 
   344   000FC7                     SSPSTAT         equ	4039	;# 
   345   000FC8                     SSP1ADD         equ	4040	;# 
   346   000FC8                     SSPADD          equ	4040	;# 
   347   000FC9                     SSP1BUF         equ	4041	;# 
   348   000FC9                     SSPBUF          equ	4041	;# 
   349   000FCA                     SSP1MSK         equ	4042	;# 
   350   000FCA                     SSPMSK          equ	4042	;# 
   351   000FCB                     SSP1CON3        equ	4043	;# 
   352   000FCB                     SSPCON3         equ	4043	;# 
   353   000FCC                     T1GCON          equ	4044	;# 
   354   000FCD                     T1CON           equ	4045	;# 
   355   000FCE                     TMR1            equ	4046	;# 
   356   000FCE                     TMR1L           equ	4046	;# 
   357   000FCF                     TMR1H           equ	4047	;# 
   358   000FD0                     RCON            equ	4048	;# 
   359   000FD1                     WDTCON          equ	4049	;# 
   360   000FD2                     OSCCON2         equ	4050	;# 
   361   000FD3                     OSCCON          equ	4051	;# 
   362   000FD5                     T0CON           equ	4053	;# 
   363   000FD6                     TMR0            equ	4054	;# 
   364   000FD6                     TMR0L           equ	4054	;# 
   365   000FD7                     TMR0H           equ	4055	;# 
   366   000FD8                     STATUS          equ	4056	;# 
   367   000FD9                     FSR2            equ	4057	;# 
   368   000FD9                     FSR2L           equ	4057	;# 
   369   000FDA                     FSR2H           equ	4058	;# 
   370   000FDB                     PLUSW2          equ	4059	;# 
   371   000FDC                     PREINC2         equ	4060	;# 
   372   000FDD                     POSTDEC2        equ	4061	;# 
   373   000FDE                     POSTINC2        equ	4062	;# 
   374   000FDF                     INDF2           equ	4063	;# 
   375   000FE0                     BSR             equ	4064	;# 
   376   000FE1                     FSR1            equ	4065	;# 
   377   000FE1                     FSR1L           equ	4065	;# 
   378   000FE2                     FSR1H           equ	4066	;# 
   379   000FE3                     PLUSW1          equ	4067	;# 
   380   000FE4                     PREINC1         equ	4068	;# 
   381   000FE5                     POSTDEC1        equ	4069	;# 
   382   000FE6                     POSTINC1        equ	4070	;# 
   383   000FE7                     INDF1           equ	4071	;# 
   384   000FE8                     WREG            equ	4072	;# 
   385   000FE9                     FSR0            equ	4073	;# 
   386   000FE9                     FSR0L           equ	4073	;# 
   387   000FEA                     FSR0H           equ	4074	;# 
   388   000FEB                     PLUSW0          equ	4075	;# 
   389   000FEC                     PREINC0         equ	4076	;# 
   390   000FED                     POSTDEC0        equ	4077	;# 
   391   000FEE                     POSTINC0        equ	4078	;# 
   392   000FEF                     INDF0           equ	4079	;# 
   393   000FF0                     INTCON3         equ	4080	;# 
   394   000FF1                     INTCON2         equ	4081	;# 
   395   000FF2                     INTCON          equ	4082	;# 
   396   000FF3                     PROD            equ	4083	;# 
   397   000FF3                     PRODL           equ	4083	;# 
   398   000FF4                     PRODH           equ	4084	;# 
   399   000FF5                     TABLAT          equ	4085	;# 
   400   000FF6                     TBLPTR          equ	4086	;# 
   401   000FF6                     TBLPTRL         equ	4086	;# 
   402   000FF7                     TBLPTRH         equ	4087	;# 
   403   000FF8                     TBLPTRU         equ	4088	;# 
   404   000FF9                     PCLAT           equ	4089	;# 
   405   000FF9                     PC              equ	4089	;# 
   406   000FF9                     PCL             equ	4089	;# 
   407   000FFA                     PCLATH          equ	4090	;# 
   408   000FFB                     PCLATU          equ	4091	;# 
   409   000FFC                     STKPTR          equ	4092	;# 
   410   000FFD                     TOS             equ	4093	;# 
   411   000FFD                     TOSL            equ	4093	;# 
   412   000FFE                     TOSH            equ	4094	;# 
   413   000FFF                     TOSU            equ	4095	;# 
   414   000F38                     ANSELA          equ	3896	;# 
   415   000F39                     ANSELB          equ	3897	;# 
   416   000F3A                     ANSELC          equ	3898	;# 
   417   000F3B                     ANSELD          equ	3899	;# 
   418   000F3C                     ANSELE          equ	3900	;# 
   419   000F3D                     PMD2            equ	3901	;# 
   420   000F3E                     PMD1            equ	3902	;# 
   421   000F3F                     PMD0            equ	3903	;# 
   422   000F40                     VREFCON2        equ	3904	;# 
   423   000F40                     DACCON1         equ	3904	;# 
   424   000F41                     VREFCON1        equ	3905	;# 
   425   000F41                     DACCON0         equ	3905	;# 
   426   000F42                     VREFCON0        equ	3906	;# 
   427   000F42                     FVRCON          equ	3906	;# 
   428   000F43                     CTMUICON        equ	3907	;# 
   429   000F43                     CTMUICONH       equ	3907	;# 
   430   000F44                     CTMUCONL        equ	3908	;# 
   431   000F44                     CTMUCON1        equ	3908	;# 
   432   000F45                     CTMUCONH        equ	3909	;# 
   433   000F45                     CTMUCON0        equ	3909	;# 
   434   000F46                     SRCON1          equ	3910	;# 
   435   000F47                     SRCON0          equ	3911	;# 
   436   000F48                     CCPTMRS1        equ	3912	;# 
   437   000F49                     CCPTMRS0        equ	3913	;# 
   438   000F4A                     T6CON           equ	3914	;# 
   439   000F4B                     PR6             equ	3915	;# 
   440   000F4C                     TMR6            equ	3916	;# 
   441   000F4D                     T5GCON          equ	3917	;# 
   442   000F4E                     T5CON           equ	3918	;# 
   443   000F4F                     TMR5            equ	3919	;# 
   444   000F4F                     TMR5L           equ	3919	;# 
   445   000F50                     TMR5H           equ	3920	;# 
   446   000F51                     T4CON           equ	3921	;# 
   447   000F52                     PR4             equ	3922	;# 
   448   000F53                     TMR4            equ	3923	;# 
   449   000F54                     CCP5CON         equ	3924	;# 
   450   000F55                     CCPR5           equ	3925	;# 
   451   000F55                     CCPR5L          equ	3925	;# 
   452   000F56                     CCPR5H          equ	3926	;# 
   453   000F57                     CCP4CON         equ	3927	;# 
   454   000F58                     CCPR4           equ	3928	;# 
   455   000F58                     CCPR4L          equ	3928	;# 
   456   000F59                     CCPR4H          equ	3929	;# 
   457   000F5A                     PSTR3CON        equ	3930	;# 
   458   000F5B                     ECCP3AS         equ	3931	;# 
   459   000F5B                     CCP3AS          equ	3931	;# 
   460   000F5C                     PWM3CON         equ	3932	;# 
   461   000F5D                     CCP3CON         equ	3933	;# 
   462   000F5E                     CCPR3           equ	3934	;# 
   463   000F5E                     CCPR3L          equ	3934	;# 
   464   000F5F                     CCPR3H          equ	3935	;# 
   465   000F60                     SLRCON          equ	3936	;# 
   466   000F61                     WPUB            equ	3937	;# 
   467   000F62                     IOCB            equ	3938	;# 
   468   000F63                     PSTR2CON        equ	3939	;# 
   469   000F64                     ECCP2AS         equ	3940	;# 
   470   000F64                     CCP2AS          equ	3940	;# 
   471   000F65                     PWM2CON         equ	3941	;# 
   472   000F66                     CCP2CON         equ	3942	;# 
   473   000F67                     CCPR2           equ	3943	;# 
   474   000F67                     CCPR2L          equ	3943	;# 
   475   000F68                     CCPR2H          equ	3944	;# 
   476   000F69                     SSP2CON3        equ	3945	;# 
   477   000F6A                     SSP2MSK         equ	3946	;# 
   478   000F6B                     SSP2CON2        equ	3947	;# 
   479   000F6C                     SSP2CON1        equ	3948	;# 
   480   000F6D                     SSP2STAT        equ	3949	;# 
   481   000F6E                     SSP2ADD         equ	3950	;# 
   482   000F6F                     SSP2BUF         equ	3951	;# 
   483   000F70                     BAUDCON2        equ	3952	;# 
   484   000F70                     BAUD2CON        equ	3952	;# 
   485   000F71                     RCSTA2          equ	3953	;# 
   486   000F71                     RC2STA          equ	3953	;# 
   487   000F72                     TXSTA2          equ	3954	;# 
   488   000F72                     TX2STA          equ	3954	;# 
   489   000F73                     TXREG2          equ	3955	;# 
   490   000F73                     TX2REG          equ	3955	;# 
   491   000F74                     RCREG2          equ	3956	;# 
   492   000F74                     RC2REG          equ	3956	;# 
   493   000F75                     SPBRG2          equ	3957	;# 
   494   000F75                     SP2BRG          equ	3957	;# 
   495   000F76                     SPBRGH2         equ	3958	;# 
   496   000F76                     SP2BRGH         equ	3958	;# 
   497   000F77                     CM2CON1         equ	3959	;# 
   498   000F77                     CM12CON         equ	3959	;# 
   499   000F78                     CM2CON0         equ	3960	;# 
   500   000F78                     CM2CON          equ	3960	;# 
   501   000F79                     CM1CON0         equ	3961	;# 
   502   000F79                     CM1CON          equ	3961	;# 
   503   000F7A                     PIE4            equ	3962	;# 
   504   000F7B                     PIR4            equ	3963	;# 
   505   000F7C                     IPR4            equ	3964	;# 
   506   000F7D                     PIE5            equ	3965	;# 
   507   000F7E                     PIR5            equ	3966	;# 
   508   000F7F                     IPR5            equ	3967	;# 
   509   000F80                     PORTA           equ	3968	;# 
   510   000F81                     PORTB           equ	3969	;# 
   511   000F82                     PORTC           equ	3970	;# 
   512   000F83                     PORTD           equ	3971	;# 
   513   000F84                     PORTE           equ	3972	;# 
   514   000F89                     LATA            equ	3977	;# 
   515   000F8A                     LATB            equ	3978	;# 
   516   000F8B                     LATC            equ	3979	;# 
   517   000F8C                     LATD            equ	3980	;# 
   518   000F8D                     LATE            equ	3981	;# 
   519   000F92                     TRISA           equ	3986	;# 
   520   000F92                     DDRA            equ	3986	;# 
   521   000F93                     TRISB           equ	3987	;# 
   522   000F93                     DDRB            equ	3987	;# 
   523   000F94                     TRISC           equ	3988	;# 
   524   000F94                     DDRC            equ	3988	;# 
   525   000F95                     TRISD           equ	3989	;# 
   526   000F95                     DDRD            equ	3989	;# 
   527   000F96                     TRISE           equ	3990	;# 
   528   000F96                     DDRE            equ	3990	;# 
   529   000F9B                     OSCTUNE         equ	3995	;# 
   530   000F9C                     HLVDCON         equ	3996	;# 
   531   000F9C                     LVDCON          equ	3996	;# 
   532   000F9D                     PIE1            equ	3997	;# 
   533   000F9E                     PIR1            equ	3998	;# 
   534   000F9F                     IPR1            equ	3999	;# 
   535   000FA0                     PIE2            equ	4000	;# 
   536   000FA1                     PIR2            equ	4001	;# 
   537   000FA2                     IPR2            equ	4002	;# 
   538   000FA3                     PIE3            equ	4003	;# 
   539   000FA4                     PIR3            equ	4004	;# 
   540   000FA5                     IPR3            equ	4005	;# 
   541   000FA6                     EECON1          equ	4006	;# 
   542   000FA7                     EECON2          equ	4007	;# 
   543   000FA8                     EEDATA          equ	4008	;# 
   544   000FA9                     EEADR           equ	4009	;# 
   545   000FAA                     EEADRH          equ	4010	;# 
   546   000FAB                     RCSTA1          equ	4011	;# 
   547   000FAB                     RCSTA           equ	4011	;# 
   548   000FAB                     RC1STA          equ	4011	;# 
   549   000FAC                     TXSTA1          equ	4012	;# 
   550   000FAC                     TXSTA           equ	4012	;# 
   551   000FAC                     TX1STA          equ	4012	;# 
   552   000FAD                     TXREG1          equ	4013	;# 
   553   000FAD                     TXREG           equ	4013	;# 
   554   000FAD                     TX1REG          equ	4013	;# 
   555   000FAE                     RCREG1          equ	4014	;# 
   556   000FAE                     RCREG           equ	4014	;# 
   557   000FAE                     RC1REG          equ	4014	;# 
   558   000FAF                     SPBRG1          equ	4015	;# 
   559   000FAF                     SPBRG           equ	4015	;# 
   560   000FAF                     SP1BRG          equ	4015	;# 
   561   000FB0                     SPBRGH1         equ	4016	;# 
   562   000FB0                     SPBRGH          equ	4016	;# 
   563   000FB0                     SP1BRGH         equ	4016	;# 
   564   000FB1                     T3CON           equ	4017	;# 
   565   000FB2                     TMR3            equ	4018	;# 
   566   000FB2                     TMR3L           equ	4018	;# 
   567   000FB3                     TMR3H           equ	4019	;# 
   568   000FB4                     T3GCON          equ	4020	;# 
   569   000FB6                     ECCP1AS         equ	4022	;# 
   570   000FB6                     ECCPAS          equ	4022	;# 
   571   000FB7                     PWM1CON         equ	4023	;# 
   572   000FB7                     PWMCON          equ	4023	;# 
   573   000FB8                     BAUDCON1        equ	4024	;# 
   574   000FB8                     BAUDCON         equ	4024	;# 
   575   000FB8                     BAUDCTL         equ	4024	;# 
   576   000FB8                     BAUD1CON        equ	4024	;# 
   577   000FB9                     PSTR1CON        equ	4025	;# 
   578   000FB9                     PSTRCON         equ	4025	;# 
   579   000FBA                     T2CON           equ	4026	;# 
   580   000FBB                     PR2             equ	4027	;# 
   581   000FBC                     TMR2            equ	4028	;# 
   582   000FBD                     CCP1CON         equ	4029	;# 
   583   000FBE                     CCPR1           equ	4030	;# 
   584   000FBE                     CCPR1L          equ	4030	;# 
   585   000FBF                     CCPR1H          equ	4031	;# 
   586   000FC0                     ADCON2          equ	4032	;# 
   587   000FC1                     ADCON1          equ	4033	;# 
   588   000FC2                     ADCON0          equ	4034	;# 
   589   000FC3                     ADRES           equ	4035	;# 
   590   000FC3                     ADRESL          equ	4035	;# 
   591   000FC4                     ADRESH          equ	4036	;# 
   592   000FC5                     SSP1CON2        equ	4037	;# 
   593   000FC5                     SSPCON2         equ	4037	;# 
   594   000FC6                     SSP1CON1        equ	4038	;# 
   595   000FC6                     SSPCON1         equ	4038	;# 
   596   000FC7                     SSP1STAT        equ	4039	;# 
   597   000FC7                     SSPSTAT         equ	4039	;# 
   598   000FC8                     SSP1ADD         equ	4040	;# 
   599   000FC8                     SSPADD          equ	4040	;# 
   600   000FC9                     SSP1BUF         equ	4041	;# 
   601   000FC9                     SSPBUF          equ	4041	;# 
   602   000FCA                     SSP1MSK         equ	4042	;# 
   603   000FCA                     SSPMSK          equ	4042	;# 
   604   000FCB                     SSP1CON3        equ	4043	;# 
   605   000FCB                     SSPCON3         equ	4043	;# 
   606   000FCC                     T1GCON          equ	4044	;# 
   607   000FCD                     T1CON           equ	4045	;# 
   608   000FCE                     TMR1            equ	4046	;# 
   609   000FCE                     TMR1L           equ	4046	;# 
   610   000FCF                     TMR1H           equ	4047	;# 
   611   000FD0                     RCON            equ	4048	;# 
   612   000FD1                     WDTCON          equ	4049	;# 
   613   000FD2                     OSCCON2         equ	4050	;# 
   614   000FD3                     OSCCON          equ	4051	;# 
   615   000FD5                     T0CON           equ	4053	;# 
   616   000FD6                     TMR0            equ	4054	;# 
   617   000FD6                     TMR0L           equ	4054	;# 
   618   000FD7                     TMR0H           equ	4055	;# 
   619   000FD8                     STATUS          equ	4056	;# 
   620   000FD9                     FSR2            equ	4057	;# 
   621   000FD9                     FSR2L           equ	4057	;# 
   622   000FDA                     FSR2H           equ	4058	;# 
   623   000FDB                     PLUSW2          equ	4059	;# 
   624   000FDC                     PREINC2         equ	4060	;# 
   625   000FDD                     POSTDEC2        equ	4061	;# 
   626   000FDE                     POSTINC2        equ	4062	;# 
   627   000FDF                     INDF2           equ	4063	;# 
   628   000FE0                     BSR             equ	4064	;# 
   629   000FE1                     FSR1            equ	4065	;# 
   630   000FE1                     FSR1L           equ	4065	;# 
   631   000FE2                     FSR1H           equ	4066	;# 
   632   000FE3                     PLUSW1          equ	4067	;# 
   633   000FE4                     PREINC1         equ	4068	;# 
   634   000FE5                     POSTDEC1        equ	4069	;# 
   635   000FE6                     POSTINC1        equ	4070	;# 
   636   000FE7                     INDF1           equ	4071	;# 
   637   000FE8                     WREG            equ	4072	;# 
   638   000FE9                     FSR0            equ	4073	;# 
   639   000FE9                     FSR0L           equ	4073	;# 
   640   000FEA                     FSR0H           equ	4074	;# 
   641   000FEB                     PLUSW0          equ	4075	;# 
   642   000FEC                     PREINC0         equ	4076	;# 
   643   000FED                     POSTDEC0        equ	4077	;# 
   644   000FEE                     POSTINC0        equ	4078	;# 
   645   000FEF                     INDF0           equ	4079	;# 
   646   000FF0                     INTCON3         equ	4080	;# 
   647   000FF1                     INTCON2         equ	4081	;# 
   648   000FF2                     INTCON          equ	4082	;# 
   649   000FF3                     PROD            equ	4083	;# 
   650   000FF3                     PRODL           equ	4083	;# 
   651   000FF4                     PRODH           equ	4084	;# 
   652   000FF5                     TABLAT          equ	4085	;# 
   653   000FF6                     TBLPTR          equ	4086	;# 
   654   000FF6                     TBLPTRL         equ	4086	;# 
   655   000FF7                     TBLPTRH         equ	4087	;# 
   656   000FF8                     TBLPTRU         equ	4088	;# 
   657   000FF9                     PCLAT           equ	4089	;# 
   658   000FF9                     PC              equ	4089	;# 
   659   000FF9                     PCL             equ	4089	;# 
   660   000FFA                     PCLATH          equ	4090	;# 
   661   000FFB                     PCLATU          equ	4091	;# 
   662   000FFC                     STKPTR          equ	4092	;# 
   663   000FFD                     TOS             equ	4093	;# 
   664   000FFD                     TOSL            equ	4093	;# 
   665   000FFE                     TOSH            equ	4094	;# 
   666   000FFF                     TOSU            equ	4095	;# 
   667                           
   668                           	psect	idataBANK0
   669   0034A8                     __pidataBANK0:
   670                           	callstack 0
   671                           
   672                           ;initializer for _menu_sel
   673   0034A8  FFFF               	dw	65535
   674                           
   675                           ;initializer for _LCD_entry_mode
   676   0034AA  06                 	db	6
   677                           
   678                           ;initializer for _LCD_display_control
   679   0034AB  0C                 	db	12
   680   000F3A                     _ANSELC         set	3898
   681   000F38                     _ANSELAbits     set	3896
   682   000F3A                     _ANSELCbits     set	3898
   683   000F39                     _ANSELBbits     set	3897
   684   000F95                     _TRISDbits      set	3989
   685   000F8C                     _LATDbits       set	3980
   686   000F82                     _PORTCbits      set	3970
   687   000F81                     _PORTBbits      set	3969
   688   000FC3                     _ADRESL         set	4035
   689   000FC4                     _ADRESH         set	4036
   690   000FC2                     _ADCON0bits     set	4034
   691   000FCD                     _T1CONbits      set	4045
   692   000FBE                     _CCPR1L         set	4030
   693   000FBF                     _CCPR1H         set	4031
   694   000FBD                     _CCP1CONbits    set	4029
   695   000FAD                     _TXREG          set	4013
   696   000FAC                     _TXSTAbits      set	4012
   697   000FAB                     _RCSTAbits      set	4011
   698   000FAE                     _RCREG1         set	4014
   699   000F9E                     _PIR1bits       set	3998
   700   000FF2                     _INTCONbits     set	4082
   701   000F9D                     _PIE1bits       set	3997
   702   000FAB                     _RCSTA1bits     set	4011
   703   000FAF                     _SPBRG1         set	4015
   704   000FB0                     _SPBRGH1        set	4016
   705   000FB8                     _BAUDCON1bits   set	4024
   706   000FAC                     _TXSTA1bits     set	4012
   707   000FC0                     _ADCON2         set	4032
   708   000FC1                     _ADCON1         set	4033
   709   000FC2                     _ADCON0         set	4034
   710   000F92                     _TRISAbits      set	3986
   711   000F94                     _TRISCbits      set	3988
   712   000F93                     _TRISBbits      set	3987
   713   000FD3                     _OSCCON         set	4051
   714                           
   715                           	psect	mediumconst
   716   00FE8C                     __pmediumconst:
   717                           	callstack 0
   718   00FE8C  00                 	db	0
   719   00FE8D                     STR_6:
   720   00FE8D  4F                 	db	79	;'O'
   721   00FE8E  42                 	db	66	;'B'
   722   00FE8F  44                 	db	68	;'D'
   723   00FE90  49                 	db	73	;'I'
   724   00FE91  49                 	db	73	;'I'
   725   00FE92  20                 	db	32
   726   00FE93  4E                 	db	78	;'N'
   727   00FE94  6F                 	db	111	;'o'
   728   00FE95  74                 	db	116	;'t'
   729   00FE96  20                 	db	32
   730   00FE97  46                 	db	70	;'F'
   731   00FE98  6F                 	db	111	;'o'
   732   00FE99  75                 	db	117	;'u'
   733   00FE9A  6E                 	db	110	;'n'
   734   00FE9B  64                 	db	100	;'d'
   735   00FE9C  20                 	db	32
   736   00FE9D  00                 	db	0
   737   00FE9E                     STR_2:
   738   00FE9E  3E                 	db	62	;'>'
   739   00FE9F  3E                 	db	62	;'>'
   740   00FEA0  3E                 	db	62	;'>'
   741   00FEA1  20                 	db	32
   742   00FEA2  4F                 	db	79	;'O'
   743   00FEA3  42                 	db	66	;'B'
   744   00FEA4  44                 	db	68	;'D'
   745   00FEA5  49                 	db	73	;'I'
   746   00FEA6  49                 	db	73	;'I'
   747   00FEA7  50                 	db	80	;'P'
   748   00FEA8  49                 	db	73	;'I'
   749   00FEA9  43                 	db	67	;'C'
   750   00FEAA  20                 	db	32
   751   00FEAB  3C                 	db	60	;'<'
   752   00FEAC  3C                 	db	60	;'<'
   753   00FEAD  3C                 	db	60	;'<'
   754   00FEAE  00                 	db	0
   755   00FEAF                     STR_48:
   756   00FEAF  59                 	db	89	;'Y'
   757   00FEB0  2F                 	db	47
   758   00FEB1  4E                 	db	78	;'N'
   759   00FEB2  20                 	db	32
   760   00FEB3  3C                 	db	60	;'<'
   761   00FEB4  3C                 	db	60	;'<'
   762   00FEB5  3C                 	db	60	;'<'
   763   00FEB6  3C                 	db	60	;'<'
   764   00FEB7  3C                 	db	60	;'<'
   765   00FEB8  3C                 	db	60	;'<'
   766   00FEB9  3C                 	db	60	;'<'
   767   00FEBA  3C                 	db	60	;'<'
   768   00FEBB  3C                 	db	60	;'<'
   769   00FEBC  3C                 	db	60	;'<'
   770   00FEBD  3C                 	db	60	;'<'
   771   00FEBE  3C                 	db	60	;'<'
   772   00FEBF  00                 	db	0
   773   00FEC0                     STR_9:
   774   00FEC0  3D                 	db	61	;'='
   775   00FEC1  3D                 	db	61	;'='
   776   00FEC2  3D                 	db	61	;'='
   777   00FEC3  3D                 	db	61	;'='
   778   00FEC4  3D                 	db	61	;'='
   779   00FEC5  3D                 	db	61	;'='
   780   00FEC6  3D                 	db	61	;'='
   781   00FEC7  3D                 	db	61	;'='
   782   00FEC8  3D                 	db	61	;'='
   783   00FEC9  3D                 	db	61	;'='
   784   00FECA  3D                 	db	61	;'='
   785   00FECB  3D                 	db	61	;'='
   786   00FECC  3D                 	db	61	;'='
   787   00FECD  3D                 	db	61	;'='
   788   00FECE  3D                 	db	61	;'='
   789   00FECF  3D                 	db	61	;'='
   790   00FED0  00                 	db	0
   791   00FED1                     STR_11:
   792   00FED1  4D                 	db	77	;'M'
   793   00FED2  45                 	db	69	;'E'
   794   00FED3  4E                 	db	78	;'N'
   795   00FED4  55                 	db	85	;'U'
   796   00FED5  20                 	db	32
   797   00FED6  20                 	db	32
   798   00FED7  3C                 	db	60	;'<'
   799   00FED8  4F                 	db	79	;'O'
   800   00FED9  42                 	db	66	;'B'
   801   00FEDA  44                 	db	68	;'D'
   802   00FEDB  49                 	db	73	;'I'
   803   00FEDC  49                 	db	73	;'I'
   804   00FEDD  50                 	db	80	;'P'
   805   00FEDE  49                 	db	73	;'I'
   806   00FEDF  43                 	db	67	;'C'
   807   00FEE0  3E                 	db	62	;'>'
   808   00FEE1  00                 	db	0
   809   00FEE2                     STR_8:
   810   00FEE2  3C                 	db	60	;'<'
   811   00FEE3  4F                 	db	79	;'O'
   812   00FEE4  42                 	db	66	;'B'
   813   00FEE5  44                 	db	68	;'D'
   814   00FEE6  49                 	db	73	;'I'
   815   00FEE7  49                 	db	73	;'I'
   816   00FEE8  20                 	db	32
   817   00FEE9  44                 	db	68	;'D'
   818   00FEEA  65                 	db	101	;'e'
   819   00FEEB  74                 	db	116	;'t'
   820   00FEEC  65                 	db	101	;'e'
   821   00FEED  63                 	db	99	;'c'
   822   00FEEE  74                 	db	116	;'t'
   823   00FEEF  65                 	db	101	;'e'
   824   00FEF0  64                 	db	100	;'d'
   825   00FEF1  3E                 	db	62	;'>'
   826   00FEF2  00                 	db	0
   827   00FEF3                     STR_12:
   828   00FEF3  4C                 	db	76	;'L'
   829   00FEF4  52                 	db	82	;'R'
   830   00FEF5  4D                 	db	77	;'M'
   831   00FEF6  20                 	db	32
   832   00FEF7  44                 	db	68	;'D'
   833   00FEF8  54                 	db	84	;'T'
   834   00FEF9  43                 	db	67	;'C'
   835   00FEFA  20                 	db	32
   836   00FEFB  43                 	db	67	;'C'
   837   00FEFC  44                 	db	68	;'D'
   838   00FEFD  43                 	db	67	;'C'
   839   00FEFE  20                 	db	32
   840   00FEFF  44                 	db	68	;'D'
   841   00FF00  53                 	db	83	;'S'
   842   00FF01  49                 	db	73	;'I'
   843   00FF02  00                 	db	0
   844   00FF03                     STR_52:
   845   00FF03  4E                 	db	78	;'N'
   846   00FF04  6F                 	db	111	;'o'
   847   00FF05  74                 	db	116	;'t'
   848   00FF06  68                 	db	104	;'h'
   849   00FF07  69                 	db	105	;'i'
   850   00FF08  6E                 	db	110	;'n'
   851   00FF09  67                 	db	103	;'g'
   852   00FF0A  20                 	db	32
   853   00FF0B  43                 	db	67	;'C'
   854   00FF0C  6C                 	db	108	;'l'
   855   00FF0D  65                 	db	101	;'e'
   856   00FF0E  61                 	db	97	;'a'
   857   00FF0F  72                 	db	114	;'r'
   858   00FF10  65                 	db	101	;'e'
   859   00FF11  64                 	db	100	;'d'
   860   00FF12  00                 	db	0
   861   00FF13                     STR_40:
   862   00FF13  44                 	db	68	;'D'
   863   00FF14  54                 	db	84	;'T'
   864   00FF15  43                 	db	67	;'C'
   865   00FF16  27                 	db	39
   866   00FF17  73                 	db	115	;'s'
   867   00FF18  20                 	db	32
   868   00FF19  52                 	db	82	;'R'
   869   00FF1A  65                 	db	101	;'e'
   870   00FF1B  71                 	db	113	;'q'
   871   00FF1C  75                 	db	117	;'u'
   872   00FF1D  65                 	db	101	;'e'
   873   00FF1E  73                 	db	115	;'s'
   874   00FF1F  74                 	db	116	;'t'
   875   00FF20  65                 	db	101	;'e'
   876   00FF21  64                 	db	100	;'d'
   877   00FF22  00                 	db	0
   878   00FF23                     STR_3:
   879   00FF23  3E                 	db	62	;'>'
   880   00FF24  3E                 	db	62	;'>'
   881   00FF25  3E                 	db	62	;'>'
   882   00FF26  3E                 	db	62	;'>'
   883   00FF27  20                 	db	32
   884   00FF28  56                 	db	86	;'V'
   885   00FF29  31                 	db	49	;'1'
   886   00FF2A  2E                 	db	46
   887   00FF2B  30                 	db	48	;'0'
   888   00FF2C  20                 	db	32
   889   00FF2D  3C                 	db	60	;'<'
   890   00FF2E  3C                 	db	60	;'<'
   891   00FF2F  3C                 	db	60	;'<'
   892   00FF30  3C                 	db	60	;'<'
   893   00FF31  00                 	db	0
   894   00FF32                     STR_47:
   895   00FF32  43                 	db	67	;'C'
   896   00FF33  6C                 	db	108	;'l'
   897   00FF34  65                 	db	101	;'e'
   898   00FF35  61                 	db	97	;'a'
   899   00FF36  72                 	db	114	;'r'
   900   00FF37  20                 	db	32
   901   00FF38  43                 	db	67	;'C'
   902   00FF39  6F                 	db	111	;'o'
   903   00FF3A  64                 	db	100	;'d'
   904   00FF3B  65                 	db	101	;'e'
   905   00FF3C  28                 	db	40
   906   00FF3D  73                 	db	115	;'s'
   907   00FF3E  29                 	db	41
   908   00FF3F  3F                 	db	63	;'?'
   909   00FF40  00                 	db	0
   910   00FF41                     STR_38:
   911   00FF41  20                 	db	32
   912   00FF42  20                 	db	32
   913   00FF43  20                 	db	32
   914   00FF44  20                 	db	32
   915   00FF45  20                 	db	32
   916   00FF46  20                 	db	32
   917   00FF47  20                 	db	32
   918   00FF48  20                 	db	32
   919   00FF49  20                 	db	32
   920   00FF4A  20                 	db	32
   921   00FF4B  20                 	db	32
   922   00FF4C  20                 	db	32
   923   00FF4D  20                 	db	32
   924   00FF4E  00                 	db	0
   925   00FF4F                     STR_46:
   926   00FF4F  44                 	db	68	;'D'
   927   00FF50  54                 	db	84	;'T'
   928   00FF51  43                 	db	67	;'C'
   929   00FF52  28                 	db	40
   930   00FF53  73                 	db	115	;'s'
   931   00FF54  29                 	db	41
   932   00FF55  20                 	db	32
   933   00FF56  46                 	db	70	;'F'
   934   00FF57  6F                 	db	111	;'o'
   935   00FF58  75                 	db	117	;'u'
   936   00FF59  6E                 	db	110	;'n'
   937   00FF5A  64                 	db	100	;'d'
   938   00FF5B  3A                 	db	58	;':'
   939   00FF5C  00                 	db	0
   940   00FF5D                     STR_50:
   941   00FF5D  43                 	db	67	;'C'
   942   00FF5E  6F                 	db	111	;'o'
   943   00FF5F  64                 	db	100	;'d'
   944   00FF60  65                 	db	101	;'e'
   945   00FF61  73                 	db	115	;'s'
   946   00FF62  20                 	db	32
   947   00FF63  43                 	db	67	;'C'
   948   00FF64  6C                 	db	108	;'l'
   949   00FF65  65                 	db	101	;'e'
   950   00FF66  61                 	db	97	;'a'
   951   00FF67  72                 	db	114	;'r'
   952   00FF68  65                 	db	101	;'e'
   953   00FF69  64                 	db	100	;'d'
   954   00FF6A  00                 	db	0
   955   00FF6B                     STR_45:
   956   00FF6B  4E                 	db	78	;'N'
   957   00FF6C  6F                 	db	111	;'o'
   958   00FF6D  20                 	db	32
   959   00FF6E  44                 	db	68	;'D'
   960   00FF6F  54                 	db	84	;'T'
   961   00FF70  43                 	db	67	;'C'
   962   00FF71  73                 	db	115	;'s'
   963   00FF72  20                 	db	32
   964   00FF73  46                 	db	70	;'F'
   965   00FF74  6F                 	db	111	;'o'
   966   00FF75  75                 	db	117	;'u'
   967   00FF76  6E                 	db	110	;'n'
   968   00FF77  64                 	db	100	;'d'
   969   00FF78  00                 	db	0
   970   00FF79                     STR_41:
   971   00FF79  4C                 	db	76	;'L'
   972   00FF7A  6F                 	db	111	;'o'
   973   00FF7B  61                 	db	97	;'a'
   974   00FF7C  64                 	db	100	;'d'
   975   00FF7D  69                 	db	105	;'i'
   976   00FF7E  6E                 	db	110	;'n'
   977   00FF7F  67                 	db	103	;'g'
   978   00FF80  2E                 	db	46
   979   00FF81  2E                 	db	46
   980   00FF82  2E                 	db	46
   981   00FF83  00                 	db	0
   982   00FF84                     STR_51:
   983   00FF84  54                 	db	84	;'T'
   984   00FF85  6F                 	db	111	;'o'
   985   00FF86  20                 	db	32
   986   00FF87  4D                 	db	77	;'M'
   987   00FF88  65                 	db	101	;'e'
   988   00FF89  6E                 	db	110	;'n'
   989   00FF8A  75                 	db	117	;'u'
   990   00FF8B  2E                 	db	46
   991   00FF8C  2E                 	db	46
   992   00FF8D  2E                 	db	46
   993   00FF8E  00                 	db	0
   994   00FF8F                     STR_39:
   995   00FF8F  25                 	db	37
   996   00FF90  63                 	db	99	;'c'
   997   00FF91  25                 	db	37
   998   00FF92  30                 	db	48	;'0'
   999   00FF93  31                 	db	49	;'1'
  1000   00FF94  58                 	db	88	;'X'
  1001   00FF95  25                 	db	37
  1002   00FF96  30                 	db	48	;'0'
  1003   00FF97  32                 	db	50	;'2'
  1004   00FF98  58                 	db	88	;'X'
  1005   00FF99  00                 	db	0
  1006   00FF9A                     STR_1:
  1007   00FF9A  41                 	db	65	;'A'
  1008   00FF9B  54                 	db	84	;'T'
  1009   00FF9C  45                 	db	69	;'E'
  1010   00FF9D  30                 	db	48	;'0'
  1011   00FF9E  0D                 	db	13
  1012   00FF9F  00                 	db	0
  1013   00FFA0                     STR_4:
  1014   00FFA0  41                 	db	65	;'A'
  1015   00FFA1  54                 	db	84	;'T'
  1016   00FFA2  4C                 	db	76	;'L'
  1017   00FFA3  30                 	db	48	;'0'
  1018   00FFA4  0D                 	db	13
  1019   00FFA5  00                 	db	0
  1020   00FFA6                     STR_35:
  1021   00FFA6  30                 	db	48	;'0'
  1022   00FFA7  31                 	db	49	;'1'
  1023   00FFA8  30                 	db	48	;'0'
  1024   00FFA9  38                 	db	56	;'8'
  1025   00FFAA  0D                 	db	13
  1026   00FFAB  00                 	db	0
  1027   00FFAC                     STR_16:
  1028   00FFAC  30                 	db	48	;'0'
  1029   00FFAD  31                 	db	49	;'1'
  1030   00FFAE  30                 	db	48	;'0'
  1031   00FFAF  43                 	db	67	;'C'
  1032   00FFB0  0D                 	db	13
  1033   00FFB1  00                 	db	0
  1034   00FFB2                     STR_26:
  1035   00FFB2  30                 	db	48	;'0'
  1036   00FFB3  31                 	db	49	;'1'
  1037   00FFB4  30                 	db	48	;'0'
  1038   00FFB5  46                 	db	70	;'F'
  1039   00FFB6  0D                 	db	13
  1040   00FFB7  00                 	db	0
  1041   00FFB8                     STR_22:
  1042   00FFB8  41                 	db	65	;'A'
  1043   00FFB9  54                 	db	84	;'T'
  1044   00FFBA  52                 	db	82	;'R'
  1045   00FFBB  56                 	db	86	;'V'
  1046   00FFBC  0D                 	db	13
  1047   00FFBD  00                 	db	0
  1048   00FFBE                     STR_17:
  1049   00FFBE  34                 	db	52	;'4'
  1050   00FFBF  31                 	db	49	;'1'
  1051   00FFC0  20                 	db	32
  1052   00FFC1  30                 	db	48	;'0'
  1053   00FFC2  43                 	db	67	;'C'
  1054   00FFC3  00                 	db	0
  1055   00FFC4                     STR_27:
  1056   00FFC4  34                 	db	52	;'4'
  1057   00FFC5  31                 	db	49	;'1'
  1058   00FFC6  20                 	db	32
  1059   00FFC7  30                 	db	48	;'0'
  1060   00FFC8  46                 	db	70	;'F'
  1061   00FFC9  00                 	db	0
  1062   00FFCA                     STR_24:
  1063   00FFCA  56                 	db	86	;'V'
  1064   00FFCB  42                 	db	66	;'B'
  1065   00FFCC  61                 	db	97	;'a'
  1066   00FFCD  74                 	db	116	;'t'
  1067   00FFCE  74                 	db	116	;'t'
  1068   00FFCF  00                 	db	0
  1069   00FFD0                     STR_15:
  1070   00FFD0  25                 	db	37
  1071   00FFD1  78                 	db	120	;'x'
  1072   00FFD2  20                 	db	32
  1073   00FFD3  25                 	db	37
  1074   00FFD4  78                 	db	120	;'x'
  1075   00FFD5  00                 	db	0
  1076   00FFD6                     STR_5:
  1077   00FFD6  41                 	db	65	;'A'
  1078   00FFD7  54                 	db	84	;'T'
  1079   00FFD8  49                 	db	73	;'I'
  1080   00FFD9  0D                 	db	13
  1081   00FFDA  00                 	db	0
  1082   00FFDB                     STR_36:
  1083   00FFDB  53                 	db	83	;'S'
  1084   00FFDC  41                 	db	65	;'A'
  1085   00FFDD  45                 	db	69	;'E'
  1086   00FFDE  3A                 	db	58	;':'
  1087   00FFDF  00                 	db	0
  1088   00FFE0                     STR_42:
  1089   00FFE0  30                 	db	48	;'0'
  1090   00FFE1  33                 	db	51	;'3'
  1091   00FFE2  0D                 	db	13
  1092   00FFE3  00                 	db	0
  1093   00FFE4                     STR_49:
  1094   00FFE4  30                 	db	48	;'0'
  1095   00FFE5  34                 	db	52	;'4'
  1096   00FFE6  0D                 	db	13
  1097   00FFE7  00                 	db	0
  1098   00FFE8                     STR_34:
  1099   00FFE8  4F                 	db	79	;'O'
  1100   00FFE9  53                 	db	83	;'S'
  1101   00FFEA  3A                 	db	58	;':'
  1102   00FFEB  00                 	db	0
  1103   00FFEC                     STR_25:
  1104   00FFEC  4E                 	db	78	;'N'
  1105   00FFED  2F                 	db	47
  1106   00FFEE  41                 	db	65	;'A'
  1107   00FFEF  00                 	db	0
  1108   00FFF0                     STR_21:
  1109   00FFF0  52                 	db	82	;'R'
  1110   00FFF1  50                 	db	80	;'P'
  1111   00FFF2  4D                 	db	77	;'M'
  1112   00FFF3  00                 	db	0
  1113   00FFF4                     STR_31:
  1114   00FFF4  41                 	db	65	;'A'
  1115   00FFF5  49                 	db	73	;'I'
  1116   00FFF6  54                 	db	84	;'T'
  1117   00FFF7  00                 	db	0
  1118   00FFF8                     STR_19:
  1119   00FFF8  25                 	db	37
  1120   00FFF9  75                 	db	117	;'u'
  1121   00FFFA  00                 	db	0
  1122   00FFFB                     STR_14:
  1123   00FFFB  5E                 	db	94	;'^'
  1124   00FFFC  00                 	db	0
  1125   00FFFD                     STR_13:
  1126   00FFFD  7E                 	db	126
  1127   00FFFE  00                 	db	0
  1128   00FFD3                     STR_43          equ	STR_15+3
  1129   00FFD3                     STR_44          equ	STR_15+3
  1130   00FFF8                     STR_29          equ	STR_19
  1131   00FFC4                     STR_28          equ	STR_27
  1132   00FFBE                     STR_18          equ	STR_17
  1133   00FFC2                     STR_32          equ	STR_17+4
  1134   00FF84                     STR_53          equ	STR_51
  1135   00FF42                     STR_37          equ	STR_38+1
  1136   00FF49                     STR_20          equ	STR_38+8
  1137   00FF49                     STR_23          equ	STR_38+8
  1138   00FF4B                     STR_30          equ	STR_38+10
  1139   00FFD6                     STR_7           equ	STR_5
  1140   00FFD6                     STR_33          equ	STR_5
  1141   00FF9A                     STR_10          equ	STR_1
  1142   00FFFF  00                 	db	0	; dummy byte at the end
  1143   00FE8C                     __smallconst    set	__pmediumconst
  1144   00FE8C                     __mediumconst   set	__pmediumconst
  1145   000002                     __activetblptr  equ	2
  1146                           
  1147                           ; #config settings
  1148                           
  1149                           	psect	cinit
  1150   0030BA                     __pcinit:
  1151                           	callstack 0
  1152   0030BA                     start_initialization:
  1153                           	callstack 0
  1154   0030BA                     __initialization:
  1155                           	callstack 0
  1156                           
  1157                           ; Initialize objects allocated to BANK0 (4 bytes)
  1158                           ; load TBLPTR registers with __pidataBANK0
  1159   0030BA  0EA8               	movlw	low __pidataBANK0
  1160   0030BC  6EF6               	movwf	tblptrl,c
  1161   0030BE  0E34               	movlw	high __pidataBANK0
  1162   0030C0  6EF7               	movwf	tblptrh,c
  1163   0030C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1164   0030C4  6EF8               	movwf	tblptru,c
  1165   0030C6  EE00  F0F8         	lfsr	0,__pdataBANK0
  1166   0030CA  EE10 F004          	lfsr	1,4
  1167   0030CE                     copy_data0:
  1168   0030CE  0009               	tblrd		*+
  1169   0030D0  CFF5 FFEE          	movff	tablat,postinc0
  1170   0030D4  50E5               	movf	postdec1,w,c
  1171   0030D6  50E1               	movf	fsr1l,w,c
  1172   0030D8  E1FA               	bnz	copy_data0
  1173                           
  1174                           ; Clear objects allocated to BANK2 (256 bytes)
  1175   0030DA  EE02  F000         	lfsr	0,__pbssBANK2
  1176   0030DE  EE11 F000          	lfsr	1,256
  1177   0030E2                     clear_0:
  1178   0030E2  6AEE               	clrf	postinc0,c
  1179   0030E4  50E5               	movf	postdec1,w,c
  1180   0030E6  50E1               	movf	fsr1l,w,c
  1181   0030E8  E1FC               	bnz	clear_0
  1182   0030EA  50E2               	movf	fsr1h,w,c
  1183   0030EC  E1FA               	bnz	clear_0
  1184                           
  1185                           ; Clear objects allocated to BANK1 (124 bytes)
  1186   0030EE  EE01  F000         	lfsr	0,__pbssBANK1
  1187   0030F2  0E7C               	movlw	124
  1188   0030F4                     clear_1:
  1189   0030F4  6AEE               	clrf	postinc0,c
  1190   0030F6  06E8               	decf	wreg,f,c
  1191   0030F8  E1FD               	bnz	clear_1
  1192                           
  1193                           ; Clear objects allocated to BANK0 (73 bytes)
  1194   0030FA  EE00  F0AF         	lfsr	0,__pbssBANK0
  1195   0030FE  0E49               	movlw	73
  1196   003100                     clear_2:
  1197   003100  6AEE               	clrf	postinc0,c
  1198   003102  06E8               	decf	wreg,f,c
  1199   003104  E1FD               	bnz	clear_2
  1200                           
  1201                           ; Clear objects allocated to COMRAM (2 bytes)
  1202   003106  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1203   003108  6A5B               	clrf	__pbssCOMRAM& (0+255),c
  1204   00310A                     end_of_initialization:
  1205                           	callstack 0
  1206   00310A                     __end_of__initialization:
  1207                           	callstack 0
  1208   00310A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1209   00310C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1210   00310E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1211   003110  6EF8               	movwf	tblptru,c
  1212   003112  0100               	movlb	0
  1213   003114  EFC8  F017         	goto	_main	;jump to C main() function
  1214                           
  1215                           	psect	bssCOMRAM
  1216   00005B                     __pbssCOMRAM:
  1217                           	callstack 0
  1218   00005B                     _result:
  1219                           	callstack 0
  1220   00005B                     	ds	2
  1221                           
  1222                           	psect	bssBANK0
  1223   0000AF                     __pbssBANK0:
  1224                           	callstack 0
  1225   0000AF                     modff@F522:
  1226                           	callstack 0
  1227   0000AF                     	ds	4
  1228   0000B3                     ___ungetbuf:
  1229                           	callstack 0
  1230   0000B3                     	ds	3
  1231   0000B6                     	ds	3
  1232   0000B9                     	ds	3
  1233   0000BC                     _nmatch:
  1234                           	callstack 0
  1235   0000BC                     	ds	2
  1236   0000BE                     _ncnv:
  1237                           	callstack 0
  1238   0000BE                     	ds	2
  1239   0000C0                     _width@doscan$F2259:
  1240                           	callstack 0
  1241   0000C0                     	ds	2
  1242   0000C2                     _errno:
  1243                           	callstack 0
  1244   0000C2                     	ds	2
  1245   0000C4                     _width:
  1246                           	callstack 0
  1247   0000C4                     	ds	2
  1248   0000C6                     _prec:
  1249                           	callstack 0
  1250   0000C6                     	ds	2
  1251   0000C8                     _air_intake_temp:
  1252                           	callstack 0
  1253   0000C8                     	ds	2
  1254   0000CA                     _A_air_intake:
  1255                           	callstack 0
  1256   0000CA                     	ds	2
  1257   0000CC                     _RPM:
  1258                           	callstack 0
  1259   0000CC                     	ds	2
  1260   0000CE                     _B_rpm:
  1261                           	callstack 0
  1262   0000CE                     	ds	2
  1263   0000D0                     _A_rpm:
  1264                           	callstack 0
  1265   0000D0                     	ds	2
  1266   0000D2                     ___ungetcnt:
  1267                           	callstack 0
  1268   0000D2                     	ds	1
  1269   0000D3                     _asup:
  1270                           	callstack 0
  1271   0000D3                     	ds	1
  1272   0000D4                     _flags:
  1273                           	callstack 0
  1274   0000D4                     	ds	1
  1275   0000D5                     _message_complete:
  1276                           	callstack 0
  1277   0000D5                     	ds	1
  1278   0000D6                     _RX_char:
  1279                           	callstack 0
  1280   0000D6                     	ds	1
  1281   0000D7                     _buffer_count:
  1282                           	callstack 0
  1283   0000D7                     	ds	1
  1284   0000D8                     _air_intake_string:
  1285                           	callstack 0
  1286   0000D8                     	ds	16
  1287   0000E8                     _rpm_string:
  1288                           	callstack 0
  1289   0000E8                     	ds	16
  1290                           
  1291                           	psect	dataBANK0
  1292   0000F8                     __pdataBANK0:
  1293                           	callstack 0
  1294   0000F8                     _menu_sel:
  1295                           	callstack 0
  1296   0000F8                     	ds	2
  1297   0000FA                     _LCD_entry_mode:
  1298                           	callstack 0
  1299   0000FA                     	ds	1
  1300   0000FB                     _LCD_display_control:
  1301                           	callstack 0
  1302   0000FB                     	ds	1
  1303                           
  1304                           	psect	bssBANK1
  1305   000100                     __pbssBANK1:
  1306                           	callstack 0
  1307   000100                     _dtc_codes:
  1308                           	callstack 0
  1309   000100                     	ds	60
  1310   00013C                     _dbuf@doscan$F2262:
  1311                           	callstack 0
  1312   00013C                     	ds	32
  1313   00015C                     _dbuf:
  1314                           	callstack 0
  1315   00015C                     	ds	32
  1316                           
  1317                           	psect	bssBANK2
  1318   000200                     __pbssBANK2:
  1319                           	callstack 0
  1320   000200                     _buffer:
  1321                           	callstack 0
  1322   000200                     	ds	256
  1323                           
  1324                           	psect	cstackBANK0
  1325   000060                     __pcstackBANK0:
  1326                           	callstack 0
  1327   000060                     atox@w:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x0
  1331   000060                     	ds	2
  1332   000062                     atox@ep:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x2
  1336   000062                     	ds	2
  1337   000064                     atox@seen_0x:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x4
  1341   000064                     	ds	2
  1342   000066                     atox@i:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x6
  1346   000066                     	ds	2
  1347   000068                     atox@c:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x8
  1351   000068                     	ds	2
  1352   00006A                     ?_vfsfcnvrt:
  1353                           	callstack 0
  1354   00006A                     vfsfcnvrt@fp:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0xA
  1358   00006A                     	ds	1
  1359   00006B                     vfsfcnvrt@fmt:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0xB
  1363   00006B                     	ds	1
  1364   00006C                     vfsfcnvrt@ap:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0xC
  1368   00006C                     	ds	2
  1369   00006E                     vfsfcnvrt@vp:
  1370                           	callstack 0
  1371                           
  1372                           ; 1 bytes @ 0xE
  1373   00006E                     	ds	1
  1374   00006F                     vfsfcnvrt@i:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0xF
  1378   00006F                     	ds	2
  1379   000071                     vfsfcnvrt@llu:
  1380                           	callstack 0
  1381                           
  1382                           ; 8 bytes @ 0x11
  1383   000071                     	ds	8
  1384   000079                     vfsfcnvrt@c:
  1385                           	callstack 0
  1386                           
  1387                           ; 2 bytes @ 0x19
  1388   000079                     	ds	2
  1389   00007B                     ?_vfscanf:
  1390                           	callstack 0
  1391   00007B                     vfscanf@fp:
  1392                           	callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x1B
  1395   00007B                     	ds	1
  1396   00007C                     vfscanf@fmt:
  1397                           	callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x1C
  1400   00007C                     	ds	2
  1401   00007E                     vfscanf@ap:
  1402                           	callstack 0
  1403                           
  1404                           ; 1 bytes @ 0x1E
  1405   00007E                     	ds	1
  1406   00007F                     vfscanf@saved_errno:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x1F
  1410   00007F                     	ds	2
  1411   000081                     vfscanf@n:
  1412                           	callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x21
  1415   000081                     	ds	2
  1416   000083                     vfscanf@cfmt:
  1417                           	callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x23
  1420   000083                     	ds	2
  1421   000085                     ?_sscanf:
  1422                           	callstack 0
  1423   000085                     sscanf@s:
  1424                           	callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x25
  1427   000085                     	ds	2
  1428   000087                     sscanf@fmt:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x27
  1432   000087                     	ds	6
  1433   00008D                     sscanf@ret:
  1434                           	callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x2D
  1437   00008D                     	ds	2
  1438   00008F                     sscanf@ap:
  1439                           	callstack 0
  1440                           
  1441                           ; 1 bytes @ 0x2F
  1442   00008F                     	ds	1
  1443   000090                     sscanf@f:
  1444                           	callstack 0
  1445                           
  1446                           ; 11 bytes @ 0x30
  1447   000090                     	ds	11
  1448   00009B                     extract_two_pid_bytes@pid:
  1449                           	callstack 0
  1450   00009B                     ??_diagnostic_trouble_codes:
  1451                           
  1452                           ; 1 bytes @ 0x3B
  1453   00009B                     	ds	2
  1454   00009D                     extract_two_pid_bytes@A:
  1455                           	callstack 0
  1456   00009D                     diagnostic_trouble_codes@byte1_str:
  1457                           	callstack 0
  1458                           
  1459                           ; 3 bytes @ 0x3D
  1460   00009D                     	ds	1
  1461   00009E                     extract_two_pid_bytes@B:
  1462                           	callstack 0
  1463                           
  1464                           ; 1 bytes @ 0x3E
  1465   00009E                     	ds	1
  1466   00009F                     extract_two_pid_bytes@ptr:
  1467                           	callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x3F
  1470   00009F                     	ds	1
  1471   0000A0                     diagnostic_trouble_codes@byte2_str:
  1472                           	callstack 0
  1473                           
  1474                           ; 3 bytes @ 0x40
  1475   0000A0                     	ds	1
  1476   0000A1                     extract_two_pid_bytes@a:
  1477                           	callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x41
  1480   0000A1                     	ds	2
  1481   0000A3                     extract_two_pid_bytes@b:
  1482                           	callstack 0
  1483   0000A3                     diagnostic_trouble_codes@byte1:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x43
  1487   0000A3                     	ds	2
  1488   0000A5                     diagnostic_trouble_codes@byte2:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x45
  1492   0000A5                     	ds	2
  1493   0000A7                     diagnostic_trouble_codes@dtc_index:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x47
  1497   0000A7                     	ds	2
  1498   0000A9                     diagnostic_trouble_codes@i:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x49
  1502   0000A9                     	ds	2
  1503   0000AB                     ??_main_menu:
  1504                           
  1505                           ; 1 bytes @ 0x4B
  1506   0000AB                     	ds	2
  1507   0000AD                     ??_main:
  1508                           
  1509                           ; 1 bytes @ 0x4D
  1510   0000AD                     	ds	2
  1511                           
  1512                           	psect	cstackCOMRAM
  1513   000001                     __pcstackCOMRAM:
  1514                           	callstack 0
  1515   000001                     ??_UART_ISR:
  1516                           
  1517                           ; 1 bytes @ 0x0
  1518   000001                     	ds	2
  1519   000003                     ?_strlen:
  1520                           	callstack 0
  1521   000003                     ?_strchr:
  1522                           	callstack 0
  1523   000003                     ?_getch:
  1524                           	callstack 0
  1525   000003                     ?_strncmp:
  1526                           	callstack 0
  1527   000003                     ?_readADC:
  1528                           	callstack 0
  1529   000003                     ?___awdiv:
  1530                           	callstack 0
  1531   000003                     ?___lwdiv:
  1532                           	callstack 0
  1533   000003                     ?___lwmod:
  1534                           	callstack 0
  1535   000003                     ?_read_prec_or_width:
  1536                           	callstack 0
  1537   000003                     ?___lmul:
  1538                           	callstack 0
  1539   000003                     ?___aldiv:
  1540                           	callstack 0
  1541   000003                     ?___almod:
  1542                           	callstack 0
  1543   000003                     ?___omul:
  1544                           	callstack 0
  1545   000003                     UART1_SendChar@c:
  1546                           	callstack 0
  1547   000003                     read_prec_or_width@fmt:
  1548                           	callstack 0
  1549   000003                     ___awdiv@dividend:
  1550                           	callstack 0
  1551   000003                     ___lwdiv@dividend:
  1552                           	callstack 0
  1553   000003                     ___lwmod@dividend:
  1554                           	callstack 0
  1555   000003                     fputc@c:
  1556                           	callstack 0
  1557   000003                     ungetc@c:
  1558                           	callstack 0
  1559   000003                     strchr@s:
  1560                           	callstack 0
  1561   000003                     strlen@s:
  1562                           	callstack 0
  1563   000003                     strncmp@l:
  1564                           	callstack 0
  1565   000003                     ___lmul@multiplier:
  1566                           	callstack 0
  1567   000003                     ___aldiv@dividend:
  1568                           	callstack 0
  1569   000003                     ___almod@dividend:
  1570                           	callstack 0
  1571   000003                     ___omul@multiplier:
  1572                           	callstack 0
  1573   000003                     ??_LCD_write_command:
  1574   000003                     ??_LCD_write_data:
  1575                           
  1576                           ; 1 bytes @ 0x2
  1577   000003                     	ds	1
  1578   000004                     read_prec_or_width@ap:
  1579                           	callstack 0
  1580   000004                     UART1_SendString@string:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x3
  1584   000004                     	ds	1
  1585   000005                     ?_fgetc:
  1586                           	callstack 0
  1587   000005                     LCD_write_command@command:
  1588                           	callstack 0
  1589   000005                     LCD_write_data@data:
  1590                           	callstack 0
  1591   000005                     fputc@fp:
  1592                           	callstack 0
  1593   000005                     fgetc@fp:
  1594                           	callstack 0
  1595   000005                     ungetc@fp:
  1596                           	callstack 0
  1597   000005                     ___awdiv@divisor:
  1598                           	callstack 0
  1599   000005                     ___lwdiv@divisor:
  1600                           	callstack 0
  1601   000005                     ___lwmod@divisor:
  1602                           	callstack 0
  1603   000005                     strchr@c:
  1604                           	callstack 0
  1605   000005                     strlen@a:
  1606                           	callstack 0
  1607   000005                     strncmp@r:
  1608                           	callstack 0
  1609   000005                     ??_readADC:
  1610   000005                     ??_read_prec_or_width:
  1611                           
  1612                           ; 1 bytes @ 0x4
  1613   000005                     	ds	1
  1614   000006                     LCD_cursor_set@column:
  1615                           	callstack 0
  1616   000006                     LCD_configure_cursor_blink@state:
  1617                           	callstack 0
  1618   000006                     LCD_write_string@string:
  1619                           	callstack 0
  1620   000006                     ??_LCD_clear:
  1621   000006                     ??_UART1_SendString:
  1622   000006                     ??_fputc:
  1623   000006                     ??_ungetc:
  1624                           
  1625                           ; 1 bytes @ 0x5
  1626   000006                     	ds	1
  1627   000007                     LCD_cursor_set@row:
  1628                           	callstack 0
  1629   000007                     ___awdiv@counter:
  1630                           	callstack 0
  1631   000007                     ___lwdiv@counter:
  1632                           	callstack 0
  1633   000007                     ___lwmod@counter:
  1634                           	callstack 0
  1635   000007                     read_prec_or_width@c:
  1636                           	callstack 0
  1637   000007                     strncmp@n:
  1638                           	callstack 0
  1639   000007                     ___lmul@multiplicand:
  1640                           	callstack 0
  1641   000007                     ___aldiv@divisor:
  1642                           	callstack 0
  1643   000007                     ___almod@divisor:
  1644                           	callstack 0
  1645   000007                     ??_LCD_init:
  1646   000007                     ??_fgetc:
  1647   000007                     
  1648                           ; 1 bytes @ 0x6
  1649   000007                     	ds	1
  1650   000008                     ___awdiv@sign:
  1651                           	callstack 0
  1652   000008                     UART1_SendString@i:
  1653                           	callstack 0
  1654   000008                     ___lwdiv@quotient:
  1655                           	callstack 0
  1656   000008                     read_prec_or_width@n:
  1657                           	callstack 0
  1658   000008                     ??_LCD_write_string:
  1659                           
  1660                           ; 1 bytes @ 0x7
  1661   000008                     	ds	1
  1662   000009                     ___awdiv@quotient:
  1663                           	callstack 0
  1664   000009                     ??_strncmp:
  1665                           
  1666                           ; 1 bytes @ 0x8
  1667   000009                     	ds	1
  1668   00000A                     ?_strstr:
  1669                           	callstack 0
  1670   00000A                     LCD_write_string@i:
  1671                           	callstack 0
  1672   00000A                     strstr@h:
  1673                           	callstack 0
  1674                           
  1675                           ; 2 bytes @ 0x9
  1676   00000A                     	ds	1
  1677   00000B                     ___aldiv@counter:
  1678                           	callstack 0
  1679   00000B                     ___almod@counter:
  1680                           	callstack 0
  1681   00000B                     ctoa@fp:
  1682                           	callstack 0
  1683   00000B                     fputs@s:
  1684                           	callstack 0
  1685   00000B                     ___lmul@product:
  1686                           	callstack 0
  1687   00000B                     ___omul@multiplicand:
  1688                           	callstack 0
  1689   00000B                     ??_clear_diagnostic_codes:
  1690   00000B                     ??_print_Vbatt:
  1691   00000B                     ??_print_ELMVer:
  1692   00000B                     ??_print_SAEVer:
  1693   00000B                     
  1694                           ; 1 bytes @ 0xA
  1695   00000B                     	ds	1
  1696   00000C                     ___aldiv@sign:
  1697                           	callstack 0
  1698   00000C                     ___almod@sign:
  1699                           	callstack 0
  1700   00000C                     ctoa@c:
  1701                           	callstack 0
  1702   00000C                     fgetc@c:
  1703                           	callstack 0
  1704   00000C                     strstr@n:
  1705                           	callstack 0
  1706   00000C                     
  1707                           ; 1 bytes @ 0xB
  1708   00000C                     	ds	1
  1709   00000D                     fputs@fp:
  1710                           	callstack 0
  1711   00000D                     clear_diagnostic_codes@opt_sel:
  1712                           	callstack 0
  1713   00000D                     ___aldiv@quotient:
  1714                           	callstack 0
  1715   00000D                     ??_ctoa:
  1716                           
  1717                           ; 1 bytes @ 0xC
  1718   00000D                     	ds	1
  1719   00000E                     fputs@c:
  1720                           	callstack 0
  1721   00000E                     skipws@fp:
  1722                           	callstack 0
  1723   00000E                     ctoa@l:
  1724                           	callstack 0
  1725   00000E                     strstr@nl:
  1726                           	callstack 0
  1727   00000E                     
  1728                           ; 1 bytes @ 0xD
  1729   00000E                     	ds	1
  1730   00000F                     fputs@i:
  1731                           	callstack 0
  1732   00000F                     ??_skipws:
  1733                           
  1734                           ; 1 bytes @ 0xE
  1735   00000F                     	ds	1
  1736   000010                     ctoa@w:
  1737                           	callstack 0
  1738   000010                     skipws@c:
  1739                           	callstack 0
  1740                           
  1741                           ; 2 bytes @ 0xF
  1742   000010                     	ds	1
  1743   000011                     pad@fp:
  1744                           	callstack 0
  1745   000011                     LCD_write_variable@variable:
  1746                           	callstack 0
  1747                           
  1748                           ; 4 bytes @ 0x10
  1749   000011                     	ds	1
  1750   000012                     pad@buf:
  1751                           	callstack 0
  1752                           
  1753                           ; 2 bytes @ 0x11
  1754   000012                     	ds	1
  1755   000013                     ___omul@product:
  1756                           	callstack 0
  1757   000013                     
  1758                           ; 1 bytes @ 0x12
  1759   000013                     	ds	1
  1760   000014                     pad@p:
  1761                           	callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x13
  1764   000014                     	ds	1
  1765   000015                     LCD_write_variable@left_offset:
  1766                           	callstack 0
  1767                           
  1768                           ; 1 bytes @ 0x14
  1769   000015                     	ds	1
  1770   000016                     LCD_write_variable@i:
  1771                           	callstack 0
  1772   000016                     ??_pad:
  1773                           
  1774                           ; 1 bytes @ 0x15
  1775   000016                     	ds	1
  1776   000017                     LCD_write_variable@digits:
  1777                           	callstack 0
  1778   000017                     pad@i:
  1779                           	callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x16
  1782   000017                     	ds	1
  1783   000018                     LCD_write_variable@temp_variable:
  1784                           	callstack 0
  1785                           
  1786                           ; 4 bytes @ 0x17
  1787   000018                     	ds	1
  1788   000019                     utoa@fp:
  1789                           	callstack 0
  1790   000019                     xtoa@fp:
  1791                           	callstack 0
  1792                           
  1793                           ; 1 bytes @ 0x18
  1794   000019                     	ds	1
  1795   00001A                     utoa@d:
  1796                           	callstack 0
  1797   00001A                     xtoa@d:
  1798                           	callstack 0
  1799                           
  1800                           ; 2 bytes @ 0x19
  1801   00001A                     	ds	1
  1802   00001B                     ?___strtoxll:
  1803                           	callstack 0
  1804   00001B                     ___strtoxll@s:
  1805                           	callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x1A
  1808   00001B                     	ds	1
  1809   00001C                     utoa@p:
  1810                           	callstack 0
  1811   00001C                     ??_welcome_splash:
  1812   00001C                     ??_xtoa:
  1813                           
  1814                           ; 1 bytes @ 0x1B
  1815   00001C                     	ds	1
  1816   00001D                     ___strtoxll@endptr:
  1817                           	callstack 0
  1818   00001D                     utoa@w:
  1819                           	callstack 0
  1820                           
  1821                           ; 2 bytes @ 0x1C
  1822   00001D                     	ds	1
  1823   00001E                     welcome_splash@plug_flag:
  1824                           	callstack 0
  1825   00001E                     ___strtoxll@base:
  1826                           	callstack 0
  1827                           
  1828                           ; 2 bytes @ 0x1D
  1829   00001E                     	ds	1
  1830   00001F                     xtoa@p:
  1831                           	callstack 0
  1832   00001F                     utoa@i:
  1833                           	callstack 0
  1834                           
  1835                           ; 2 bytes @ 0x1E
  1836   00001F                     	ds	1
  1837   000020                     ___strtoxll@is_signed:
  1838                           	callstack 0
  1839   000020                     welcome_splash@CCP1IF_counter:
  1840                           	callstack 0
  1841   000020                     xtoa@w:
  1842                           	callstack 0
  1843                           
  1844                           ; 2 bytes @ 0x1F
  1845   000020                     	ds	2
  1846   000022                     xtoa@c:
  1847                           	callstack 0
  1848                           
  1849                           ; 1 bytes @ 0x21
  1850   000022                     	ds	1
  1851   000023                     xtoa@i:
  1852                           	callstack 0
  1853   000023                     ??___strtoxll:
  1854                           
  1855                           ; 1 bytes @ 0x22
  1856   000023                     	ds	2
  1857   000025                     vfpfcnvrt@fp:
  1858                           	callstack 0
  1859                           
  1860                           ; 1 bytes @ 0x24
  1861   000025                     	ds	1
  1862   000026                     vfpfcnvrt@fmt:
  1863                           	callstack 0
  1864                           
  1865                           ; 1 bytes @ 0x25
  1866   000026                     	ds	1
  1867   000027                     vfpfcnvrt@ap:
  1868                           	callstack 0
  1869                           
  1870                           ; 1 bytes @ 0x26
  1871   000027                     	ds	1
  1872   000028                     ??_vfpfcnvrt:
  1873                           
  1874                           ; 1 bytes @ 0x27
  1875   000028                     	ds	2
  1876   00002A                     vfpfcnvrt@c:
  1877                           	callstack 0
  1878                           
  1879                           ; 1 bytes @ 0x29
  1880   00002A                     	ds	1
  1881   00002B                     vfpfcnvrt@done:
  1882                           	callstack 0
  1883   00002B                     ___strtoxll@prev_a:
  1884                           	callstack 0
  1885                           
  1886                           ; 8 bytes @ 0x2A
  1887   00002B                     	ds	1
  1888   00002C                     vfpfcnvrt@convarg:
  1889                           	callstack 0
  1890                           
  1891                           ; 4 bytes @ 0x2B
  1892   00002C                     	ds	4
  1893   000030                     vfpfcnvrt@cp:
  1894                           	callstack 0
  1895                           
  1896                           ; 2 bytes @ 0x2F
  1897   000030                     	ds	2
  1898   000032                     ?_vfprintf:
  1899                           	callstack 0
  1900   000032                     vfprintf@fp:
  1901                           	callstack 0
  1902                           
  1903                           ; 1 bytes @ 0x31
  1904   000032                     	ds	1
  1905   000033                     vfprintf@fmt:
  1906                           	callstack 0
  1907   000033                     ___strtoxll$2312:
  1908                           	callstack 0
  1909                           
  1910                           ; 2 bytes @ 0x32
  1911   000033                     	ds	2
  1912   000035                     vfprintf@ap:
  1913                           	callstack 0
  1914   000035                     ___strtoxll$2313:
  1915                           	callstack 0
  1916                           
  1917                           ; 2 bytes @ 0x34
  1918   000035                     	ds	1
  1919   000036                     vfprintf@cfmt:
  1920                           	callstack 0
  1921   000036                     
  1922                           ; 1 bytes @ 0x35
  1923   000036                     	ds	1
  1924   000037                     ___strtoxll@limit:
  1925                           	callstack 0
  1926                           
  1927                           ; 8 bytes @ 0x36
  1928   000037                     	ds	1
  1929   000038                     ?_sprintf:
  1930                           	callstack 0
  1931   000038                     sprintf@s:
  1932                           	callstack 0
  1933                           
  1934                           ; 2 bytes @ 0x37
  1935   000038                     	ds	2
  1936   00003A                     sprintf@fmt:
  1937                           	callstack 0
  1938                           
  1939                           ; 2 bytes @ 0x39
  1940   00003A                     	ds	5
  1941   00003F                     ___strtoxll@flags:
  1942                           	callstack 0
  1943                           
  1944                           ; 1 bytes @ 0x3E
  1945   00003F                     	ds	1
  1946   000040                     ___strtoxll@a:
  1947                           	callstack 0
  1948                           
  1949                           ; 8 bytes @ 0x3F
  1950   000040                     	ds	2
  1951   000042                     sprintf@ap:
  1952                           	callstack 0
  1953   000042                     
  1954                           ; 1 bytes @ 0x41
  1955   000042                     	ds	1
  1956   000043                     sprintf@f:
  1957                           	callstack 0
  1958                           
  1959                           ; 11 bytes @ 0x42
  1960   000043                     	ds	5
  1961   000048                     ___strtoxll@cp:
  1962                           	callstack 0
  1963                           
  1964                           ; 2 bytes @ 0x47
  1965   000048                     	ds	2
  1966   00004A                     ___strtoxll@c:
  1967                           	callstack 0
  1968                           
  1969                           ; 1 bytes @ 0x49
  1970   00004A                     	ds	1
  1971   00004B                     ?_atox:
  1972                           	callstack 0
  1973   00004B                     atox@fp:
  1974                           	callstack 0
  1975                           
  1976                           ; 1 bytes @ 0x4A
  1977   00004B                     	ds	1
  1978   00004C                     atox@pll:
  1979                           	callstack 0
  1980                           
  1981                           ; 1 bytes @ 0x4B
  1982   00004C                     	ds	1
  1983   00004D                     ??_atox:
  1984                           
  1985                           ; 1 bytes @ 0x4C
  1986   00004D                     	ds	1
  1987   00004E                     decode_dtc@b1:
  1988                           	callstack 0
  1989                           
  1990                           ; 2 bytes @ 0x4D
  1991   00004E                     	ds	2
  1992   000050                     decode_dtc@b2:
  1993                           	callstack 0
  1994                           
  1995                           ; 2 bytes @ 0x4F
  1996   000050                     	ds	2
  1997   000052                     decode_dtc@dtc:
  1998                           	callstack 0
  1999                           
  2000                           ; 2 bytes @ 0x51
  2001   000052                     	ds	2
  2002   000054                     ??_decode_dtc:
  2003                           
  2004                           ; 1 bytes @ 0x53
  2005   000054                     	ds	1
  2006   000055                     ??_vfsfcnvrt:
  2007                           
  2008                           ; 1 bytes @ 0x54
  2009   000055                     	ds	2
  2010   000057                     ??_print_RPM:
  2011   000057                     ??_print_AI_Temp:
  2012                           
  2013                           ; 1 bytes @ 0x56
  2014   000057                     	ds	1
  2015   000058                     print_AI_Temp@B:
  2016                           	callstack 0
  2017                           
  2018                           ; 1 bytes @ 0x57
  2019   000058                     	ds	1
  2020   000059                     print_RPM@A:
  2021                           	callstack 0
  2022   000059                     print_AI_Temp@A:
  2023                           	callstack 0
  2024   000059                     decode_dtc@type:
  2025                           	callstack 0
  2026                           
  2027                           ; 1 bytes @ 0x58
  2028   000059                     	ds	1
  2029   00005A                     print_RPM@B:
  2030                           	callstack 0
  2031                           
  2032                           ; 1 bytes @ 0x59
  2033   00005A                     	ds	1
  2034   00005B                     
  2035                           ; 1 bytes @ 0x5A
  2036 ;;
  2037 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2038 ;;
  2039 ;; *************** function _main *****************
  2040 ;; Defined at:
  2041 ;;		line 73 in file "OBCII_PIC18F46K22.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;Total ram usage:        2 bytes
  2060 ;; Hardware stack levels required when called: 12
  2061 ;; This function calls:
  2062 ;;		_ADC_init
  2063 ;;		_LCD_clear
  2064 ;;		_LCD_init
  2065 ;;		_UART1_Init
  2066 ;;		_UART1_SendString
  2067 ;;		_input_init
  2068 ;;		_main_menu
  2069 ;;		_welcome_splash
  2070 ;; This function is called by:
  2071 ;;		Startup code after reset
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text0
  2076   002F90                     __ptext0:
  2077                           	callstack 0
  2078   002F90                     _main:
  2079                           	callstack 19
  2080   002F90                     
  2081                           ;OBCII_PIC18F46K22.c: 76:     OSCCON = 0b01110000;
  2082   002F90  0E70               	movlw	112
  2083   002F92  6ED3               	movwf	211,c	;volatile
  2084   002F94                     
  2085                           ;OBCII_PIC18F46K22.c: 80:     LCD_init();
  2086   002F94  ECA7  F016         	call	_LCD_init	;wreg free
  2087   002F98                     
  2088                           ;OBCII_PIC18F46K22.c: 81:     LCD_clear();
  2089   002F98  ECF3  F019         	call	_LCD_clear	;wreg free
  2090   002F9C                     
  2091                           ;OBCII_PIC18F46K22.c: 82:     input_init();
  2092   002F9C  EC36  F01A         	call	_input_init	;wreg free
  2093                           
  2094                           ;OBCII_PIC18F46K22.c: 83:     ADC_init();
  2095   002FA0  EC4B  F01A         	call	_ADC_init	;wreg free
  2096                           
  2097                           ;OBCII_PIC18F46K22.c: 84:     UART1_Init();
  2098   002FA4  ECCA  F019         	call	_UART1_Init	;wreg free
  2099   002FA8                     
  2100                           ;OBCII_PIC18F46K22.c: 86:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  2101   002FA8  0E29               	movlw	41
  2102   002FAA  0100               	movlb	0	; () banked
  2103   002FAC  6FAE               	movwf	(??_main+1)& (0+255),b
  2104   002FAE  0E96               	movlw	150
  2105   002FB0  6FAD               	movwf	??_main& (0+255),b
  2106   002FB2  0E7F               	movlw	127
  2107   002FB4                     u7967:
  2108   002FB4  2EE8               	decfsz	wreg,f,c
  2109   002FB6  D7FE               	bra	u7967
  2110   002FB8  2FAD               	decfsz	??_main& (0+255),f,b
  2111   002FBA  D7FC               	bra	u7967
  2112   002FBC  2FAE               	decfsz	(??_main+1)& (0+255),f,b
  2113   002FBE  D7FA               	bra	u7967
  2114   002FC0                     
  2115                           ;OBCII_PIC18F46K22.c: 87:     UART1_SendString("ATE0\r");
  2116   002FC0  0E9A               	movlw	low STR_1
  2117   002FC2  6E04               	movwf	UART1_SendString@string^0,c
  2118   002FC4  0EFF               	movlw	high STR_1
  2119   002FC6  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2120   002FC8  EC8C  F018         	call	_UART1_SendString	;wreg free
  2121   002FCC                     
  2122                           ;OBCII_PIC18F46K22.c: 88:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2123   002FCC  0E02               	movlw	2
  2124   002FCE  0100               	movlb	0	; () banked
  2125   002FD0  6FAE               	movwf	(??_main+1)& (0+255),b
  2126   002FD2  0E04               	movlw	4
  2127   002FD4  6FAD               	movwf	??_main& (0+255),b
  2128   002FD6  0EBA               	movlw	186
  2129   002FD8                     u7977:
  2130   002FD8  2EE8               	decfsz	wreg,f,c
  2131   002FDA  D7FE               	bra	u7977
  2132   002FDC  2FAD               	decfsz	??_main& (0+255),f,b
  2133   002FDE  D7FC               	bra	u7977
  2134   002FE0  2FAE               	decfsz	(??_main+1)& (0+255),f,b
  2135   002FE2  D7FA               	bra	u7977
  2136   002FE4  0000               	nop	
  2137   002FE6                     l6927:
  2138                           
  2139                           ;OBCII_PIC18F46K22.c: 91:                 welcome_splash();
  2140   002FE6  EC23  F00B         	call	_welcome_splash	;wreg free
  2141   002FEA                     
  2142                           ;OBCII_PIC18F46K22.c: 92:                 main_menu();
  2143   002FEA  ECFE  F007         	call	_main_menu	;wreg free
  2144   002FEE  EFF3  F017         	goto	l6927
  2145   002FF2  EF6E  F000         	goto	start
  2146   002FF6                     __end_of_main:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _welcome_splash *****************
  2150 ;; Defined at:
  2151 ;;		line 218 in file "OBCII_PIC18F46K22.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  CCP1IF_count    2   31[COMRAM] volatile unsigned int 
  2156 ;;  plug_flag       2   29[COMRAM] volatile int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        6 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 4
  2173 ;; This function calls:
  2174 ;;		_LCD_clear
  2175 ;;		_LCD_cursor_set
  2176 ;;		_LCD_write_string
  2177 ;;		_LCD_write_variable
  2178 ;;		_UART1_SendString
  2179 ;;		___lwdiv
  2180 ;;		___lwmod
  2181 ;;		_ccp1_init
  2182 ;;		_tmr1_init
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text1
  2189   001646                     __ptext1:
  2190                           	callstack 0
  2191   001646                     _welcome_splash:
  2192                           	callstack 26
  2193   001646                     
  2194                           ;OBCII_PIC18F46K22.c: 219:     volatile int plug_flag = 0;
  2195   001646  0E00               	movlw	0
  2196   001648  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2197   00164A  0E00               	movlw	0
  2198   00164C  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2199                           
  2200                           ;OBCII_PIC18F46K22.c: 220:     volatile unsigned int CCP1IF_counter = 0;
  2201   00164E  0E00               	movlw	0
  2202   001650  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2203   001652  0E00               	movlw	0
  2204   001654  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2205   001656                     
  2206                           ;OBCII_PIC18F46K22.c: 223:     LCD_clear();
  2207   001656  ECF3  F019         	call	_LCD_clear	;wreg free
  2208   00165A                     
  2209                           ;OBCII_PIC18F46K22.c: 224:     LCD_cursor_set(1, 1);
  2210   00165A  0E01               	movlw	1
  2211   00165C  6E06               	movwf	LCD_cursor_set@column^0,c
  2212   00165E  0E01               	movlw	1
  2213   001660  EC2D  F018         	call	_LCD_cursor_set
  2214   001664                     
  2215                           ;OBCII_PIC18F46K22.c: 225:     LCD_write_string(">>> OBDIIPIC <<<");
  2216   001664  0E9E               	movlw	low STR_2
  2217   001666  6E06               	movwf	LCD_write_string@string^0,c
  2218   001668  0EFE               	movlw	high STR_2
  2219   00166A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2220   00166C  ECE7  F016         	call	_LCD_write_string	;wreg free
  2221   001670                     
  2222                           ;OBCII_PIC18F46K22.c: 226:     LCD_cursor_set(2, 1);
  2223   001670  0E01               	movlw	1
  2224   001672  6E06               	movwf	LCD_cursor_set@column^0,c
  2225   001674  0E02               	movlw	2
  2226   001676  EC2D  F018         	call	_LCD_cursor_set
  2227   00167A                     
  2228                           ;OBCII_PIC18F46K22.c: 227:     LCD_write_string(">>>> V1.0 <<<<");
  2229   00167A  0E23               	movlw	low STR_3
  2230   00167C  6E06               	movwf	LCD_write_string@string^0,c
  2231   00167E  0EFF               	movlw	high STR_3
  2232   001680  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2233   001682  ECE7  F016         	call	_LCD_write_string	;wreg free
  2234   001686                     
  2235                           ;OBCII_PIC18F46K22.c: 229:     UART1_SendString("ATL0\r");
  2236   001686  0EA0               	movlw	low STR_4
  2237   001688  6E04               	movwf	UART1_SendString@string^0,c
  2238   00168A  0EFF               	movlw	high STR_4
  2239   00168C  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2240   00168E  EC8C  F018         	call	_UART1_SendString	;wreg free
  2241   001692                     
  2242                           ;OBCII_PIC18F46K22.c: 231:     ccp1_init();
  2243   001692  EC25  F01A         	call	_ccp1_init	;wreg free
  2244   001696                     
  2245                           ;OBCII_PIC18F46K22.c: 232:     tmr1_init();
  2246   001696  EC2E  F01A         	call	_tmr1_init	;wreg free
  2247   00169A                     
  2248                           ;OBCII_PIC18F46K22.c: 234:     CCP1IF_counter = 0;
  2249   00169A  0E00               	movlw	0
  2250   00169C  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2251   00169E  0E00               	movlw	0
  2252   0016A0  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2253   0016A2                     
  2254                           ;OBCII_PIC18F46K22.c: 235:     plug_flag = 0;
  2255   0016A2  0E00               	movlw	0
  2256   0016A4  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2257   0016A6  0E00               	movlw	0
  2258   0016A8  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2259   0016AA                     l6745:
  2260                           
  2261                           ;OBCII_PIC18F46K22.c: 238:         if (PIR1bits.CCP1IF) {
  2262   0016AA  A49E               	btfss	158,2,c	;volatile
  2263   0016AC  EF5A  F00B         	goto	u7681
  2264   0016B0  EF5C  F00B         	goto	u7680
  2265   0016B4                     u7681:
  2266   0016B4  EF92  F00B         	goto	l6759
  2267   0016B8                     u7680:
  2268   0016B8                     
  2269                           ;OBCII_PIC18F46K22.c: 239:             PIR1bits.CCP1IF = 0;
  2270   0016B8  949E               	bcf	158,2,c	;volatile
  2271                           
  2272                           ;OBCII_PIC18F46K22.c: 240:             T1CONbits.TMR1ON = 1;
  2273   0016BA  80CD               	bsf	205,0,c	;volatile
  2274   0016BC                     
  2275                           ;OBCII_PIC18F46K22.c: 241:             CCP1IF_counter++;
  2276   0016BC  4A20               	infsnz	welcome_splash@CCP1IF_counter^0,f,c	;volatile
  2277   0016BE  2A21               	incf	(welcome_splash@CCP1IF_counter+1)^0,f,c	;volatile
  2278   0016C0                     
  2279                           ;OBCII_PIC18F46K22.c: 243:             LCD_cursor_set(2, 16);
  2280   0016C0  0E10               	movlw	16
  2281   0016C2  6E06               	movwf	LCD_cursor_set@column^0,c
  2282   0016C4  0E02               	movlw	2
  2283   0016C6  EC2D  F018         	call	_LCD_cursor_set
  2284   0016CA                     
  2285                           ;OBCII_PIC18F46K22.c: 244:             LCD_write_variable((CCP1IF_counter) / 10, 1);
  2286   0016CA  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwdiv@dividend	;volatile
  2287   0016CE  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwdiv@dividend+1	;volatile
  2288   0016D2  0E00               	movlw	0
  2289   0016D4  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  2290   0016D6  0E0A               	movlw	10
  2291   0016D8  6E05               	movwf	___lwdiv@divisor^0,c
  2292   0016DA  EC24  F017         	call	___lwdiv	;wreg free
  2293   0016DE  C003  F011         	movff	?___lwdiv,LCD_write_variable@variable
  2294   0016E2  C004  F012         	movff	?___lwdiv+1,LCD_write_variable@variable+1
  2295   0016E6  6A13               	clrf	(LCD_write_variable@variable+2)^0,c
  2296   0016E8  6A14               	clrf	(LCD_write_variable@variable+3)^0,c
  2297   0016EA  0E01               	movlw	1
  2298   0016EC  6E15               	movwf	LCD_write_variable@left_offset^0,c
  2299   0016EE  EC11  F00C         	call	_LCD_write_variable	;wreg free
  2300   0016F2                     
  2301                           ;OBCII_PIC18F46K22.c: 247:             if (CCP1IF_counter % 10 == 0) {
  2302   0016F2  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwmod@dividend	;volatile
  2303   0016F6  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwmod@dividend+1	;volatile
  2304   0016FA  0E00               	movlw	0
  2305   0016FC  6E06               	movwf	(___lwmod@divisor+1)^0,c
  2306   0016FE  0E0A               	movlw	10
  2307   001700  6E05               	movwf	___lwmod@divisor^0,c
  2308   001702  ECFB  F017         	call	___lwmod	;wreg free
  2309   001706  5003               	movf	?___lwmod^0,w,c
  2310   001708  1004               	iorwf	(?___lwmod+1)^0,w,c
  2311   00170A  A4D8               	btfss	status,2,c
  2312   00170C  EF8A  F00B         	goto	u7691
  2313   001710  EF8C  F00B         	goto	u7690
  2314   001714                     u7691:
  2315   001714  EF92  F00B         	goto	l6759
  2316   001718                     u7690:
  2317   001718                     
  2318                           ;OBCII_PIC18F46K22.c: 248:                 UART1_SendString("ATI\r");
  2319   001718  0ED6               	movlw	low STR_5
  2320   00171A  6E04               	movwf	UART1_SendString@string^0,c
  2321   00171C  0EFF               	movlw	high STR_5
  2322   00171E  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2323   001720  EC8C  F018         	call	_UART1_SendString	;wreg free
  2324   001724                     l6759:
  2325                           
  2326                           ;OBCII_PIC18F46K22.c: 253:         if (message_complete) {
  2327   001724  0100               	movlb	0	; () banked
  2328   001726  51D5               	movf	_message_complete& (0+255),w,b	;volatile
  2329   001728  B4D8               	btfsc	status,2,c
  2330   00172A  EF99  F00B         	goto	u7701
  2331   00172E  EF9B  F00B         	goto	u7700
  2332   001732                     u7701:
  2333   001732  EFA1  F00B         	goto	l6767
  2334   001736                     u7700:
  2335   001736                     
  2336                           ; BSR set to: 0
  2337                           ;OBCII_PIC18F46K22.c: 254:             plug_flag = 1;
  2338   001736  0E00               	movlw	0
  2339   001738  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  2340   00173A  0E01               	movlw	1
  2341   00173C  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  2342   00173E                     
  2343                           ; BSR set to: 0
  2344                           ;OBCII_PIC18F46K22.c: 255:             buffer_count = 0;
  2345   00173E  6BD7               	clrf	_buffer_count& (0+255),b
  2346   001740                     
  2347                           ; BSR set to: 0
  2348                           ;OBCII_PIC18F46K22.c: 256:             message_complete = 0;
  2349   001740  6BD5               	clrf	_message_complete& (0+255),b	;volatile
  2350   001742                     l6767:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;OBCII_PIC18F46K22.c: 260:         if (plug_flag) {
  2354   001742  501E               	movf	welcome_splash@plug_flag^0,w,c	;volatile
  2355   001744  101F               	iorwf	(welcome_splash@plug_flag+1)^0,w,c	;volatile
  2356   001746  B4D8               	btfsc	status,2,c
  2357   001748  EFA8  F00B         	goto	u7711
  2358   00174C  EFAA  F00B         	goto	u7710
  2359   001750                     u7711:
  2360   001750  EFB7  F00B         	goto	l6773
  2361   001754                     u7710:
  2362   001754                     
  2363                           ; BSR set to: 0
  2364                           ;OBCII_PIC18F46K22.c: 261:             if (CCP1IF_counter >= 4 * 10) {
  2365   001754  5021               	movf	(welcome_splash@CCP1IF_counter+1)^0,w,c	;volatile
  2366   001756  E109               	bnz	u7720
  2367   001758  0E28               	movlw	40
  2368   00175A  5C20               	subwf	welcome_splash@CCP1IF_counter^0,w,c	;volatile
  2369   00175C  A0D8               	btfss	status,0,c
  2370   00175E  EFB3  F00B         	goto	u7721
  2371   001762  EFB5  F00B         	goto	u7720
  2372   001766                     u7721:
  2373   001766  EF55  F00B         	goto	l6745
  2374   00176A                     u7720:
  2375   00176A  EFDA  F00B         	goto	l6783
  2376   00176E                     l6773:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;OBCII_PIC18F46K22.c: 267:             CCP1IF_counter = 0;
  2380   00176E  0E00               	movlw	0
  2381   001770  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  2382   001772  0E00               	movlw	0
  2383   001774  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  2384   001776                     
  2385                           ; BSR set to: 0
  2386                           ;OBCII_PIC18F46K22.c: 268:             LCD_cursor_set(2, 1);
  2387   001776  0E01               	movlw	1
  2388   001778  6E06               	movwf	LCD_cursor_set@column^0,c
  2389   00177A  0E02               	movlw	2
  2390   00177C  EC2D  F018         	call	_LCD_cursor_set
  2391   001780                     
  2392                           ;OBCII_PIC18F46K22.c: 269:             LCD_write_string("OBDII Not Found ");
  2393   001780  0E8D               	movlw	low STR_6
  2394   001782  6E06               	movwf	LCD_write_string@string^0,c
  2395   001784  0EFE               	movlw	high STR_6
  2396   001786  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2397   001788  ECE7  F016         	call	_LCD_write_string	;wreg free
  2398   00178C                     
  2399                           ;OBCII_PIC18F46K22.c: 270:             UART1_SendString("ATI\r");
  2400   00178C  0ED6               	movlw	low STR_5
  2401   00178E  6E04               	movwf	UART1_SendString@string^0,c
  2402   001790  0EFF               	movlw	high STR_5
  2403   001792  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2404   001794  EC8C  F018         	call	_UART1_SendString	;wreg free
  2405   001798                     
  2406                           ;OBCII_PIC18F46K22.c: 271:             _delay((unsigned long)((50)*(16000000/4000.0)));
  2407   001798  0E02               	movlw	2
  2408   00179A  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2409   00179C  0E04               	movlw	4
  2410   00179E  6E1C               	movwf	??_welcome_splash^0,c
  2411   0017A0  0EBA               	movlw	186
  2412   0017A2                     u7987:
  2413   0017A2  2EE8               	decfsz	wreg,f,c
  2414   0017A4  D7FE               	bra	u7987
  2415   0017A6  2E1C               	decfsz	??_welcome_splash^0,f,c
  2416   0017A8  D7FC               	bra	u7987
  2417   0017AA  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2418   0017AC  D7FA               	bra	u7987
  2419   0017AE  D000               	nop2	
  2420   0017B0  EF55  F00B         	goto	l6745
  2421   0017B4                     l6783:
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;OBCII_PIC18F46K22.c: 276:     LCD_clear();
  2425   0017B4  ECF3  F019         	call	_LCD_clear	;wreg free
  2426                           
  2427                           ;OBCII_PIC18F46K22.c: 277:     LCD_cursor_set(1, 1);
  2428   0017B8  0E01               	movlw	1
  2429   0017BA  6E06               	movwf	LCD_cursor_set@column^0,c
  2430   0017BC  0E01               	movlw	1
  2431   0017BE  EC2D  F018         	call	_LCD_cursor_set
  2432   0017C2                     
  2433                           ;OBCII_PIC18F46K22.c: 278:     LCD_write_string("<OBDII Detected>");
  2434   0017C2  0EE2               	movlw	low STR_8
  2435   0017C4  6E06               	movwf	LCD_write_string@string^0,c
  2436   0017C6  0EFE               	movlw	high STR_8
  2437   0017C8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2438   0017CA  ECE7  F016         	call	_LCD_write_string	;wreg free
  2439   0017CE                     
  2440                           ;OBCII_PIC18F46K22.c: 279:     LCD_cursor_set(2,1);
  2441   0017CE  0E01               	movlw	1
  2442   0017D0  6E06               	movwf	LCD_cursor_set@column^0,c
  2443   0017D2  0E02               	movlw	2
  2444   0017D4  EC2D  F018         	call	_LCD_cursor_set
  2445                           
  2446                           ;OBCII_PIC18F46K22.c: 280:     LCD_write_string("================");
  2447   0017D8  0EC0               	movlw	low STR_9
  2448   0017DA  6E06               	movwf	LCD_write_string@string^0,c
  2449   0017DC  0EFE               	movlw	high STR_9
  2450   0017DE  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2451   0017E0  ECE7  F016         	call	_LCD_write_string	;wreg free
  2452   0017E4                     
  2453                           ;OBCII_PIC18F46K22.c: 281:     _delay((unsigned long)((2 * 2000)*(16000000/4000.0)));
  2454   0017E4  0E52               	movlw	82
  2455   0017E6  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2456   0017E8  0E2B               	movlw	43
  2457   0017EA  6E1C               	movwf	??_welcome_splash^0,c
  2458   0017EC  0E00               	movlw	0
  2459   0017EE                     u7997:
  2460   0017EE  2EE8               	decfsz	wreg,f,c
  2461   0017F0  D7FE               	bra	u7997
  2462   0017F2  2E1C               	decfsz	??_welcome_splash^0,f,c
  2463   0017F4  D7FC               	bra	u7997
  2464   0017F6  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2465   0017F8  D7FA               	bra	u7997
  2466   0017FA  D000               	nop2	
  2467   0017FC                     
  2468                           ;OBCII_PIC18F46K22.c: 283:     UART1_SendString("ATE0\r");
  2469   0017FC  0E9A               	movlw	low STR_1
  2470   0017FE  6E04               	movwf	UART1_SendString@string^0,c
  2471   001800  0EFF               	movlw	high STR_1
  2472   001802  6E05               	movwf	(UART1_SendString@string+1)^0,c
  2473   001804  EC8C  F018         	call	_UART1_SendString	;wreg free
  2474   001808                     
  2475                           ;OBCII_PIC18F46K22.c: 284:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2476   001808  0E02               	movlw	2
  2477   00180A  6E1D               	movwf	(??_welcome_splash+1)^0,c
  2478   00180C  0E04               	movlw	4
  2479   00180E  6E1C               	movwf	??_welcome_splash^0,c
  2480   001810  0EBA               	movlw	186
  2481   001812                     u8007:
  2482   001812  2EE8               	decfsz	wreg,f,c
  2483   001814  D7FE               	bra	u8007
  2484   001816  2E1C               	decfsz	??_welcome_splash^0,f,c
  2485   001818  D7FC               	bra	u8007
  2486   00181A  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  2487   00181C  D7FA               	bra	u8007
  2488   00181E  D000               	nop2	
  2489   001820  0012               	return		;funcret
  2490   001822                     __end_of_welcome_splash:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _tmr1_init *****************
  2494 ;; Defined at:
  2495 ;;		line 207 in file "OBCII_PIC18F46K22.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		None
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_welcome_splash
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text2
  2524   00345C                     __ptext2:
  2525                           	callstack 0
  2526   00345C                     _tmr1_init:
  2527                           	callstack 28
  2528   00345C                     
  2529                           ;OBCII_PIC18F46K22.c: 209:     T1CONbits.T1CKPS1 = 1;
  2530   00345C  8ACD               	bsf	205,5,c	;volatile
  2531                           
  2532                           ;OBCII_PIC18F46K22.c: 210:     T1CONbits.T1CKPS0 = 1;
  2533   00345E  88CD               	bsf	205,4,c	;volatile
  2534                           
  2535                           ;OBCII_PIC18F46K22.c: 211:     T1CONbits.T1OSCEN = 0;
  2536   003460  96CD               	bcf	205,3,c	;volatile
  2537                           
  2538                           ;OBCII_PIC18F46K22.c: 212:     T1CONbits.T1SYNC = 1;
  2539   003462  84CD               	bsf	205,2,c	;volatile
  2540                           
  2541                           ;OBCII_PIC18F46K22.c: 213:     T1CONbits.TMR1CS1 = 0;
  2542   003464  9ECD               	bcf	205,7,c	;volatile
  2543                           
  2544                           ;OBCII_PIC18F46K22.c: 214:     T1CONbits.TMR1CS0 = 0;
  2545   003466  9CCD               	bcf	205,6,c	;volatile
  2546                           
  2547                           ;OBCII_PIC18F46K22.c: 215:     T1CONbits.TMR1ON = 1;
  2548   003468  80CD               	bsf	205,0,c	;volatile
  2549   00346A  0012               	return		;funcret
  2550   00346C                     __end_of_tmr1_init:
  2551                           	callstack 0
  2552                           
  2553 ;; *************** function _ccp1_init *****************
  2554 ;; Defined at:
  2555 ;;		line 194 in file "OBCII_PIC18F46K22.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used: 1
  2575 ;; Hardware stack levels required when called: 1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_welcome_splash
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text3
  2584   00344A                     __ptext3:
  2585                           	callstack 0
  2586   00344A                     _ccp1_init:
  2587                           	callstack 28
  2588   00344A                     
  2589                           ;OBCII_PIC18F46K22.c: 195:     CCP1CONbits.CCP1M3 = 1;
  2590   00344A  86BD               	bsf	189,3,c	;volatile
  2591                           
  2592                           ;OBCII_PIC18F46K22.c: 196:     CCP1CONbits.CCP1M2 = 0;
  2593   00344C  94BD               	bcf	189,2,c	;volatile
  2594                           
  2595                           ;OBCII_PIC18F46K22.c: 197:     CCP1CONbits.CCP1M1 = 1;
  2596   00344E  82BD               	bsf	189,1,c	;volatile
  2597                           
  2598                           ;OBCII_PIC18F46K22.c: 198:     CCP1CONbits.CCP1M0 = 1;
  2599   003450  80BD               	bsf	189,0,c	;volatile
  2600   003452                     
  2601                           ;OBCII_PIC18F46K22.c: 202:     CCPR1H = 195;
  2602   003452  0EC3               	movlw	195
  2603   003454  6EBF               	movwf	191,c	;volatile
  2604                           
  2605                           ;OBCII_PIC18F46K22.c: 203:     CCPR1L = 80;
  2606   003456  0E50               	movlw	80
  2607   003458  6EBE               	movwf	190,c	;volatile
  2608   00345A  0012               	return		;funcret
  2609   00345C                     __end_of_ccp1_init:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _LCD_write_variable *****************
  2613 ;; Defined at:
  2614 ;;		line 392 in file "LCD.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  variable        4   16[COMRAM] long 
  2617 ;;  left_offset     1   20[COMRAM] unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  i               1   21[COMRAM] unsigned char 
  2620 ;;  temp_variabl    4   23[COMRAM] long 
  2621 ;;  digits          1   22[COMRAM] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2631 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;Total ram usage:       11 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 3
  2638 ;; This function calls:
  2639 ;;		_LCD_write_data
  2640 ;;		___aldiv
  2641 ;;		___almod
  2642 ;;		___lmul
  2643 ;; This function is called by:
  2644 ;;		_welcome_splash
  2645 ;;		_LCD_write_float
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text4
  2650   001822                     __ptext4:
  2651                           	callstack 0
  2652   001822                     _LCD_write_variable:
  2653                           	callstack 26
  2654   001822                     
  2655                           ;LCD.c: 394:     int32_t temp_variable;;LCD.c: 395:     uint8_t digits = 0;
  2656   001822  6A17               	clrf	LCD_write_variable@digits^0,c
  2657   001824                     
  2658                           ;LCD.c: 398:     if(variable < 0) variable *= -1;
  2659   001824  BE14               	btfsc	(LCD_write_variable@variable+3)^0,7,c
  2660   001826  EF19  F00C         	goto	u7420
  2661   00182A  EF17  F00C         	goto	u7421
  2662   00182E                     u7421:
  2663   00182E  EF33  F00C         	goto	l6467
  2664   001832                     u7420:
  2665   001832  C011  F003         	movff	LCD_write_variable@variable,___lmul@multiplier
  2666   001836  C012  F004         	movff	LCD_write_variable@variable+1,___lmul@multiplier+1
  2667   00183A  C013  F005         	movff	LCD_write_variable@variable+2,___lmul@multiplier+2
  2668   00183E  C014  F006         	movff	LCD_write_variable@variable+3,___lmul@multiplier+3
  2669   001842  0EFF               	movlw	255
  2670   001844  6E07               	movwf	___lmul@multiplicand^0,c
  2671   001846  0EFF               	movlw	255
  2672   001848  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  2673   00184A  0EFF               	movlw	255
  2674   00184C  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  2675   00184E  0EFF               	movlw	255
  2676   001850  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  2677   001852  EC5E  F017         	call	___lmul	;wreg free
  2678   001856  C003  F011         	movff	?___lmul,LCD_write_variable@variable
  2679   00185A  C004  F012         	movff	?___lmul+1,LCD_write_variable@variable+1
  2680   00185E  C005  F013         	movff	?___lmul+2,LCD_write_variable@variable+2
  2681   001862  C006  F014         	movff	?___lmul+3,LCD_write_variable@variable+3
  2682   001866                     l6467:
  2683                           
  2684                           ;LCD.c: 401:     temp_variable = variable;
  2685   001866  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2686   00186A  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2687   00186E  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2688   001872  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2689   001876                     l6469:
  2690                           
  2691                           ;LCD.c: 403:         digits++;
  2692   001876  2A17               	incf	LCD_write_variable@digits^0,f,c
  2693   001878                     
  2694                           ;LCD.c: 404:         if(temp_variable < 10) break;
  2695   001878  BE1B               	btfsc	(LCD_write_variable@temp_variable+3)^0,7,c
  2696   00187A  EF4C  F00C         	goto	u7430
  2697   00187E  501B               	movf	(LCD_write_variable@temp_variable+3)^0,w,c
  2698   001880  101A               	iorwf	(LCD_write_variable@temp_variable+2)^0,w,c
  2699   001882  1019               	iorwf	(LCD_write_variable@temp_variable+1)^0,w,c
  2700   001884  E107               	bnz	u7431
  2701   001886  0E0A               	movlw	10
  2702   001888  5C18               	subwf	LCD_write_variable@temp_variable^0,w,c
  2703   00188A  B0D8               	btfsc	status,0,c
  2704   00188C  EF4A  F00C         	goto	u7431
  2705   001890  EF4C  F00C         	goto	u7430
  2706   001894                     u7431:
  2707   001894  EF4E  F00C         	goto	l6475
  2708   001898                     u7430:
  2709   001898  EF6A  F00C         	goto	l6477
  2710   00189C                     l6475:
  2711                           
  2712                           ;LCD.c: 405:         temp_variable /= 10;
  2713   00189C  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2714   0018A0  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2715   0018A4  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2716   0018A8  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2717   0018AC  0E0A               	movlw	10
  2718   0018AE  6E07               	movwf	___aldiv@divisor^0,c
  2719   0018B0  0E00               	movlw	0
  2720   0018B2  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2721   0018B4  0E00               	movlw	0
  2722   0018B6  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2723   0018B8  0E00               	movlw	0
  2724   0018BA  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2725   0018BC  ECF4  F00D         	call	___aldiv	;wreg free
  2726   0018C0  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2727   0018C4  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2728   0018C8  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2729   0018CC  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2730   0018D0  EF3B  F00C         	goto	l6469
  2731   0018D4                     l6477:
  2732                           
  2733                           ;LCD.c: 410:         if(left_offset <= digits) break;
  2734   0018D4  5015               	movf	LCD_write_variable@left_offset^0,w,c
  2735   0018D6  5C17               	subwf	LCD_write_variable@digits^0,w,c
  2736   0018D8  A0D8               	btfss	status,0,c
  2737   0018DA  EF71  F00C         	goto	u7441
  2738   0018DE  EF73  F00C         	goto	u7440
  2739   0018E2                     u7441:
  2740   0018E2  EF75  F00C         	goto	l6481
  2741   0018E6                     u7440:
  2742   0018E6  EF7B  F00C         	goto	l472
  2743   0018EA                     l6481:
  2744                           
  2745                           ;LCD.c: 411:         LCD_write_data(' ');
  2746   0018EA  0E20               	movlw	32
  2747   0018EC  EC7B  F00F         	call	_LCD_write_data
  2748   0018F0                     
  2749                           ;LCD.c: 412:         left_offset--;
  2750   0018F0  0615               	decf	LCD_write_variable@left_offset^0,f,c
  2751   0018F2  EF6A  F00C         	goto	l6477
  2752   0018F6                     l472:
  2753                           
  2754                           ;LCD.c: 417:         temp_variable = variable;
  2755   0018F6  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  2756   0018FA  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  2757   0018FE  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  2758   001902  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  2759   001906                     
  2760                           ;LCD.c: 418:         for(uint8_t i = 1 ; i < digits ; i++){
  2761   001906  0E01               	movlw	1
  2762   001908  6E16               	movwf	LCD_write_variable@i^0,c
  2763   00190A  EFA2  F00C         	goto	l6491
  2764   00190E                     l6487:
  2765                           
  2766                           ;LCD.c: 419:             temp_variable /= 10;
  2767   00190E  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  2768   001912  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  2769   001916  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  2770   00191A  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  2771   00191E  0E0A               	movlw	10
  2772   001920  6E07               	movwf	___aldiv@divisor^0,c
  2773   001922  0E00               	movlw	0
  2774   001924  6E08               	movwf	(___aldiv@divisor+1)^0,c
  2775   001926  0E00               	movlw	0
  2776   001928  6E09               	movwf	(___aldiv@divisor+2)^0,c
  2777   00192A  0E00               	movlw	0
  2778   00192C  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  2779   00192E  ECF4  F00D         	call	___aldiv	;wreg free
  2780   001932  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  2781   001936  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  2782   00193A  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  2783   00193E  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  2784   001942                     
  2785                           ;LCD.c: 420:         }
  2786   001942  2A16               	incf	LCD_write_variable@i^0,f,c
  2787   001944                     l6491:
  2788   001944  5017               	movf	LCD_write_variable@digits^0,w,c
  2789   001946  5C16               	subwf	LCD_write_variable@i^0,w,c
  2790   001948  A0D8               	btfss	status,0,c
  2791   00194A  EFA9  F00C         	goto	u7451
  2792   00194E  EFAB  F00C         	goto	u7450
  2793   001952                     u7451:
  2794   001952  EF87  F00C         	goto	l6487
  2795   001956                     u7450:
  2796   001956                     
  2797                           ;LCD.c: 421:         LCD_write_data( (temp_variable%10) + '0' );
  2798   001956  C018  F003         	movff	LCD_write_variable@temp_variable,___almod@dividend
  2799   00195A  C019  F004         	movff	LCD_write_variable@temp_variable+1,___almod@dividend+1
  2800   00195E  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___almod@dividend+2
  2801   001962  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___almod@dividend+3
  2802   001966  0E0A               	movlw	10
  2803   001968  6E07               	movwf	___almod@divisor^0,c
  2804   00196A  0E00               	movlw	0
  2805   00196C  6E08               	movwf	(___almod@divisor+1)^0,c
  2806   00196E  0E00               	movlw	0
  2807   001970  6E09               	movwf	(___almod@divisor+2)^0,c
  2808   001972  0E00               	movlw	0
  2809   001974  6E0A               	movwf	(___almod@divisor+3)^0,c
  2810   001976  EC77  F010         	call	___almod	;wreg free
  2811   00197A  5003               	movf	?___almod^0,w,c
  2812   00197C  0F30               	addlw	48
  2813   00197E  EC7B  F00F         	call	_LCD_write_data
  2814   001982                     
  2815                           ;LCD.c: 422:         digits --;
  2816   001982  0617               	decf	LCD_write_variable@digits^0,f,c
  2817   001984                     
  2818                           ;LCD.c: 423:         if(digits == 0) break;
  2819   001984  5017               	movf	LCD_write_variable@digits^0,w,c
  2820   001986  A4D8               	btfss	status,2,c
  2821   001988  EFC8  F00C         	goto	u7461
  2822   00198C  EFCA  F00C         	goto	u7460
  2823   001990                     u7461:
  2824   001990  EF7B  F00C         	goto	l472
  2825   001994                     u7460:
  2826   001994  0012               	return		;funcret
  2827   001996                     __end_of_LCD_write_variable:
  2828                           	callstack 0
  2829                           
  2830 ;; *************** function ___lmul *****************
  2831 ;; Defined at:
  2832 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  multiplier      4    2[COMRAM] unsigned long 
  2835 ;;  multiplicand    4    6[COMRAM] unsigned long 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  product         4   10[COMRAM] unsigned long 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  4    2[COMRAM] unsigned long 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2847 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;Total ram usage:       12 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_LCD_write_variable
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text5
  2862   002EBC                     __ptext5:
  2863                           	callstack 0
  2864   002EBC                     ___lmul:
  2865                           	callstack 27
  2866   002EBC  0E00               	movlw	0
  2867   002EBE  6E0B               	movwf	___lmul@product^0,c
  2868   002EC0  0E00               	movlw	0
  2869   002EC2  6E0C               	movwf	(___lmul@product+1)^0,c
  2870   002EC4  0E00               	movlw	0
  2871   002EC6  6E0D               	movwf	(___lmul@product+2)^0,c
  2872   002EC8  0E00               	movlw	0
  2873   002ECA  6E0E               	movwf	(___lmul@product+3)^0,c
  2874   002ECC                     l4563:
  2875   002ECC  A003               	btfss	___lmul@multiplier^0,0,c
  2876   002ECE  EF6B  F017         	goto	u4661
  2877   002ED2  EF6D  F017         	goto	u4660
  2878   002ED6                     u4661:
  2879   002ED6  EF75  F017         	goto	l4567
  2880   002EDA                     u4660:
  2881   002EDA  5007               	movf	___lmul@multiplicand^0,w,c
  2882   002EDC  260B               	addwf	___lmul@product^0,f,c
  2883   002EDE  5008               	movf	(___lmul@multiplicand+1)^0,w,c
  2884   002EE0  220C               	addwfc	(___lmul@product+1)^0,f,c
  2885   002EE2  5009               	movf	(___lmul@multiplicand+2)^0,w,c
  2886   002EE4  220D               	addwfc	(___lmul@product+2)^0,f,c
  2887   002EE6  500A               	movf	(___lmul@multiplicand+3)^0,w,c
  2888   002EE8  220E               	addwfc	(___lmul@product+3)^0,f,c
  2889   002EEA                     l4567:
  2890   002EEA  90D8               	bcf	status,0,c
  2891   002EEC  3607               	rlcf	___lmul@multiplicand^0,f,c
  2892   002EEE  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2893   002EF0  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2894   002EF2  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2895   002EF4  90D8               	bcf	status,0,c
  2896   002EF6  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
  2897   002EF8  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
  2898   002EFA  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
  2899   002EFC  3203               	rrcf	___lmul@multiplier^0,f,c
  2900   002EFE  5003               	movf	___lmul@multiplier^0,w,c
  2901   002F00  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
  2902   002F02  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
  2903   002F04  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
  2904   002F06  A4D8               	btfss	status,2,c
  2905   002F08  EF88  F017         	goto	u4671
  2906   002F0C  EF8A  F017         	goto	u4670
  2907   002F10                     u4671:
  2908   002F10  EF66  F017         	goto	l4563
  2909   002F14                     u4670:
  2910   002F14  C00B  F003         	movff	___lmul@product,?___lmul
  2911   002F18  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  2912   002F1C  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  2913   002F20  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  2914   002F24  0012               	return		;funcret
  2915   002F26                     __end_of___lmul:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function ___almod *****************
  2919 ;; Defined at:
  2920 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  dividend        4    2[COMRAM] long 
  2923 ;;  divisor         4    6[COMRAM] long 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  sign            1   11[COMRAM] unsigned char 
  2926 ;;  counter         1   10[COMRAM] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  4    2[COMRAM] long 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2936 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;Total ram usage:       10 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_LCD_write_variable
  2947 ;;		_LCD_write_float
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text6
  2952   0020EE                     __ptext6:
  2953                           	callstack 0
  2954   0020EE                     ___almod:
  2955                           	callstack 27
  2956   0020EE  6A0C               	clrf	___almod@sign^0,c
  2957   0020F0  BE06               	btfsc	(___almod@dividend+3)^0,7,c
  2958   0020F2  EF7F  F010         	goto	u4740
  2959   0020F6  EF7D  F010         	goto	u4741
  2960   0020FA                     u4741:
  2961   0020FA  EF89  F010         	goto	l4623
  2962   0020FE                     u4740:
  2963   0020FE  1E06               	comf	(___almod@dividend+3)^0,f,c
  2964   002100  1E05               	comf	(___almod@dividend+2)^0,f,c
  2965   002102  1E04               	comf	(___almod@dividend+1)^0,f,c
  2966   002104  6C03               	negf	___almod@dividend^0,c
  2967   002106  0E00               	movlw	0
  2968   002108  2204               	addwfc	(___almod@dividend+1)^0,f,c
  2969   00210A  2205               	addwfc	(___almod@dividend+2)^0,f,c
  2970   00210C  2206               	addwfc	(___almod@dividend+3)^0,f,c
  2971   00210E  0E01               	movlw	1
  2972   002110  6E0C               	movwf	___almod@sign^0,c
  2973   002112                     l4623:
  2974   002112  BE0A               	btfsc	(___almod@divisor+3)^0,7,c
  2975   002114  EF90  F010         	goto	u4750
  2976   002118  EF8E  F010         	goto	u4751
  2977   00211C                     u4751:
  2978   00211C  EF98  F010         	goto	l4627
  2979   002120                     u4750:
  2980   002120  1E0A               	comf	(___almod@divisor+3)^0,f,c
  2981   002122  1E09               	comf	(___almod@divisor+2)^0,f,c
  2982   002124  1E08               	comf	(___almod@divisor+1)^0,f,c
  2983   002126  6C07               	negf	___almod@divisor^0,c
  2984   002128  0E00               	movlw	0
  2985   00212A  2208               	addwfc	(___almod@divisor+1)^0,f,c
  2986   00212C  2209               	addwfc	(___almod@divisor+2)^0,f,c
  2987   00212E  220A               	addwfc	(___almod@divisor+3)^0,f,c
  2988   002130                     l4627:
  2989   002130  5007               	movf	___almod@divisor^0,w,c
  2990   002132  1008               	iorwf	(___almod@divisor+1)^0,w,c
  2991   002134  1009               	iorwf	(___almod@divisor+2)^0,w,c
  2992   002136  100A               	iorwf	(___almod@divisor+3)^0,w,c
  2993   002138  B4D8               	btfsc	status,2,c
  2994   00213A  EFA1  F010         	goto	u4761
  2995   00213E  EFA3  F010         	goto	u4760
  2996   002142                     u4761:
  2997   002142  EFD3  F010         	goto	l4643
  2998   002146                     u4760:
  2999   002146  0E01               	movlw	1
  3000   002148  6E0B               	movwf	___almod@counter^0,c
  3001   00214A  EFAD  F010         	goto	l4633
  3002   00214E                     l4631:
  3003   00214E  90D8               	bcf	status,0,c
  3004   002150  3607               	rlcf	___almod@divisor^0,f,c
  3005   002152  3608               	rlcf	(___almod@divisor+1)^0,f,c
  3006   002154  3609               	rlcf	(___almod@divisor+2)^0,f,c
  3007   002156  360A               	rlcf	(___almod@divisor+3)^0,f,c
  3008   002158  2A0B               	incf	___almod@counter^0,f,c
  3009   00215A                     l4633:
  3010   00215A  AE0A               	btfss	(___almod@divisor+3)^0,7,c
  3011   00215C  EFB2  F010         	goto	u4771
  3012   002160  EFB4  F010         	goto	u4770
  3013   002164                     u4771:
  3014   002164  EFA7  F010         	goto	l4631
  3015   002168                     u4770:
  3016   002168                     l4635:
  3017   002168  5007               	movf	___almod@divisor^0,w,c
  3018   00216A  5C03               	subwf	___almod@dividend^0,w,c
  3019   00216C  5008               	movf	(___almod@divisor+1)^0,w,c
  3020   00216E  5804               	subwfb	(___almod@dividend+1)^0,w,c
  3021   002170  5009               	movf	(___almod@divisor+2)^0,w,c
  3022   002172  5805               	subwfb	(___almod@dividend+2)^0,w,c
  3023   002174  500A               	movf	(___almod@divisor+3)^0,w,c
  3024   002176  5806               	subwfb	(___almod@dividend+3)^0,w,c
  3025   002178  A0D8               	btfss	status,0,c
  3026   00217A  EFC1  F010         	goto	u4781
  3027   00217E  EFC3  F010         	goto	u4780
  3028   002182                     u4781:
  3029   002182  EFCB  F010         	goto	l4639
  3030   002186                     u4780:
  3031   002186  5007               	movf	___almod@divisor^0,w,c
  3032   002188  5E03               	subwf	___almod@dividend^0,f,c
  3033   00218A  5008               	movf	(___almod@divisor+1)^0,w,c
  3034   00218C  5A04               	subwfb	(___almod@dividend+1)^0,f,c
  3035   00218E  5009               	movf	(___almod@divisor+2)^0,w,c
  3036   002190  5A05               	subwfb	(___almod@dividend+2)^0,f,c
  3037   002192  500A               	movf	(___almod@divisor+3)^0,w,c
  3038   002194  5A06               	subwfb	(___almod@dividend+3)^0,f,c
  3039   002196                     l4639:
  3040   002196  90D8               	bcf	status,0,c
  3041   002198  320A               	rrcf	(___almod@divisor+3)^0,f,c
  3042   00219A  3209               	rrcf	(___almod@divisor+2)^0,f,c
  3043   00219C  3208               	rrcf	(___almod@divisor+1)^0,f,c
  3044   00219E  3207               	rrcf	___almod@divisor^0,f,c
  3045   0021A0  2E0B               	decfsz	___almod@counter^0,f,c
  3046   0021A2  EFB4  F010         	goto	l4635
  3047   0021A6                     l4643:
  3048   0021A6  500C               	movf	___almod@sign^0,w,c
  3049   0021A8  B4D8               	btfsc	status,2,c
  3050   0021AA  EFD9  F010         	goto	u4791
  3051   0021AE  EFDB  F010         	goto	u4790
  3052   0021B2                     u4791:
  3053   0021B2  EFE3  F010         	goto	l4647
  3054   0021B6                     u4790:
  3055   0021B6  1E06               	comf	(___almod@dividend+3)^0,f,c
  3056   0021B8  1E05               	comf	(___almod@dividend+2)^0,f,c
  3057   0021BA  1E04               	comf	(___almod@dividend+1)^0,f,c
  3058   0021BC  6C03               	negf	___almod@dividend^0,c
  3059   0021BE  0E00               	movlw	0
  3060   0021C0  2204               	addwfc	(___almod@dividend+1)^0,f,c
  3061   0021C2  2205               	addwfc	(___almod@dividend+2)^0,f,c
  3062   0021C4  2206               	addwfc	(___almod@dividend+3)^0,f,c
  3063   0021C6                     l4647:
  3064   0021C6  C003  F003         	movff	___almod@dividend,?___almod
  3065   0021CA  C004  F004         	movff	___almod@dividend+1,?___almod+1
  3066   0021CE  C005  F005         	movff	___almod@dividend+2,?___almod+2
  3067   0021D2  C006  F006         	movff	___almod@dividend+3,?___almod+3
  3068   0021D6  0012               	return		;funcret
  3069   0021D8                     __end_of___almod:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function ___aldiv *****************
  3073 ;; Defined at:
  3074 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  dividend        4    2[COMRAM] long 
  3077 ;;  divisor         4    6[COMRAM] long 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  quotient        4   12[COMRAM] long 
  3080 ;;  sign            1   11[COMRAM] unsigned char 
  3081 ;;  counter         1   10[COMRAM] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  4    2[COMRAM] long 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3091 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;Total ram usage:       14 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_LCD_write_variable
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text7
  3106   001BE8                     __ptext7:
  3107                           	callstack 0
  3108   001BE8                     ___aldiv:
  3109                           	callstack 27
  3110   001BE8  6A0C               	clrf	___aldiv@sign^0,c
  3111   001BEA  BE0A               	btfsc	(___aldiv@divisor+3)^0,7,c
  3112   001BEC  EFFC  F00D         	goto	u4680
  3113   001BF0  EFFA  F00D         	goto	u4681
  3114   001BF4                     u4681:
  3115   001BF4  EF06  F00E         	goto	l4579
  3116   001BF8                     u4680:
  3117   001BF8  1E0A               	comf	(___aldiv@divisor+3)^0,f,c
  3118   001BFA  1E09               	comf	(___aldiv@divisor+2)^0,f,c
  3119   001BFC  1E08               	comf	(___aldiv@divisor+1)^0,f,c
  3120   001BFE  6C07               	negf	___aldiv@divisor^0,c
  3121   001C00  0E00               	movlw	0
  3122   001C02  2208               	addwfc	(___aldiv@divisor+1)^0,f,c
  3123   001C04  2209               	addwfc	(___aldiv@divisor+2)^0,f,c
  3124   001C06  220A               	addwfc	(___aldiv@divisor+3)^0,f,c
  3125   001C08  0E01               	movlw	1
  3126   001C0A  6E0C               	movwf	___aldiv@sign^0,c
  3127   001C0C                     l4579:
  3128   001C0C  BE06               	btfsc	(___aldiv@dividend+3)^0,7,c
  3129   001C0E  EF0D  F00E         	goto	u4690
  3130   001C12  EF0B  F00E         	goto	u4691
  3131   001C16                     u4691:
  3132   001C16  EF17  F00E         	goto	l4585
  3133   001C1A                     u4690:
  3134   001C1A  1E06               	comf	(___aldiv@dividend+3)^0,f,c
  3135   001C1C  1E05               	comf	(___aldiv@dividend+2)^0,f,c
  3136   001C1E  1E04               	comf	(___aldiv@dividend+1)^0,f,c
  3137   001C20  6C03               	negf	___aldiv@dividend^0,c
  3138   001C22  0E00               	movlw	0
  3139   001C24  2204               	addwfc	(___aldiv@dividend+1)^0,f,c
  3140   001C26  2205               	addwfc	(___aldiv@dividend+2)^0,f,c
  3141   001C28  2206               	addwfc	(___aldiv@dividend+3)^0,f,c
  3142   001C2A  0E01               	movlw	1
  3143   001C2C  1A0C               	xorwf	___aldiv@sign^0,f,c
  3144   001C2E                     l4585:
  3145   001C2E  0E00               	movlw	0
  3146   001C30  6E0D               	movwf	___aldiv@quotient^0,c
  3147   001C32  0E00               	movlw	0
  3148   001C34  6E0E               	movwf	(___aldiv@quotient+1)^0,c
  3149   001C36  0E00               	movlw	0
  3150   001C38  6E0F               	movwf	(___aldiv@quotient+2)^0,c
  3151   001C3A  0E00               	movlw	0
  3152   001C3C  6E10               	movwf	(___aldiv@quotient+3)^0,c
  3153   001C3E  5007               	movf	___aldiv@divisor^0,w,c
  3154   001C40  1008               	iorwf	(___aldiv@divisor+1)^0,w,c
  3155   001C42  1009               	iorwf	(___aldiv@divisor+2)^0,w,c
  3156   001C44  100A               	iorwf	(___aldiv@divisor+3)^0,w,c
  3157   001C46  B4D8               	btfsc	status,2,c
  3158   001C48  EF28  F00E         	goto	u4701
  3159   001C4C  EF2A  F00E         	goto	u4700
  3160   001C50                     u4701:
  3161   001C50  EF60  F00E         	goto	l4607
  3162   001C54                     u4700:
  3163   001C54  0E01               	movlw	1
  3164   001C56  6E0B               	movwf	___aldiv@counter^0,c
  3165   001C58  EF34  F00E         	goto	l4593
  3166   001C5C                     l4591:
  3167   001C5C  90D8               	bcf	status,0,c
  3168   001C5E  3607               	rlcf	___aldiv@divisor^0,f,c
  3169   001C60  3608               	rlcf	(___aldiv@divisor+1)^0,f,c
  3170   001C62  3609               	rlcf	(___aldiv@divisor+2)^0,f,c
  3171   001C64  360A               	rlcf	(___aldiv@divisor+3)^0,f,c
  3172   001C66  2A0B               	incf	___aldiv@counter^0,f,c
  3173   001C68                     l4593:
  3174   001C68  AE0A               	btfss	(___aldiv@divisor+3)^0,7,c
  3175   001C6A  EF39  F00E         	goto	u4711
  3176   001C6E  EF3B  F00E         	goto	u4710
  3177   001C72                     u4711:
  3178   001C72  EF2E  F00E         	goto	l4591
  3179   001C76                     u4710:
  3180   001C76                     l4595:
  3181   001C76  90D8               	bcf	status,0,c
  3182   001C78  360D               	rlcf	___aldiv@quotient^0,f,c
  3183   001C7A  360E               	rlcf	(___aldiv@quotient+1)^0,f,c
  3184   001C7C  360F               	rlcf	(___aldiv@quotient+2)^0,f,c
  3185   001C7E  3610               	rlcf	(___aldiv@quotient+3)^0,f,c
  3186   001C80  5007               	movf	___aldiv@divisor^0,w,c
  3187   001C82  5C03               	subwf	___aldiv@dividend^0,w,c
  3188   001C84  5008               	movf	(___aldiv@divisor+1)^0,w,c
  3189   001C86  5804               	subwfb	(___aldiv@dividend+1)^0,w,c
  3190   001C88  5009               	movf	(___aldiv@divisor+2)^0,w,c
  3191   001C8A  5805               	subwfb	(___aldiv@dividend+2)^0,w,c
  3192   001C8C  500A               	movf	(___aldiv@divisor+3)^0,w,c
  3193   001C8E  5806               	subwfb	(___aldiv@dividend+3)^0,w,c
  3194   001C90  A0D8               	btfss	status,0,c
  3195   001C92  EF4D  F00E         	goto	u4721
  3196   001C96  EF4F  F00E         	goto	u4720
  3197   001C9A                     u4721:
  3198   001C9A  EF58  F00E         	goto	l4603
  3199   001C9E                     u4720:
  3200   001C9E  5007               	movf	___aldiv@divisor^0,w,c
  3201   001CA0  5E03               	subwf	___aldiv@dividend^0,f,c
  3202   001CA2  5008               	movf	(___aldiv@divisor+1)^0,w,c
  3203   001CA4  5A04               	subwfb	(___aldiv@dividend+1)^0,f,c
  3204   001CA6  5009               	movf	(___aldiv@divisor+2)^0,w,c
  3205   001CA8  5A05               	subwfb	(___aldiv@dividend+2)^0,f,c
  3206   001CAA  500A               	movf	(___aldiv@divisor+3)^0,w,c
  3207   001CAC  5A06               	subwfb	(___aldiv@dividend+3)^0,f,c
  3208   001CAE  800D               	bsf	___aldiv@quotient^0,0,c
  3209   001CB0                     l4603:
  3210   001CB0  90D8               	bcf	status,0,c
  3211   001CB2  320A               	rrcf	(___aldiv@divisor+3)^0,f,c
  3212   001CB4  3209               	rrcf	(___aldiv@divisor+2)^0,f,c
  3213   001CB6  3208               	rrcf	(___aldiv@divisor+1)^0,f,c
  3214   001CB8  3207               	rrcf	___aldiv@divisor^0,f,c
  3215   001CBA  2E0B               	decfsz	___aldiv@counter^0,f,c
  3216   001CBC  EF3B  F00E         	goto	l4595
  3217   001CC0                     l4607:
  3218   001CC0  500C               	movf	___aldiv@sign^0,w,c
  3219   001CC2  B4D8               	btfsc	status,2,c
  3220   001CC4  EF66  F00E         	goto	u4731
  3221   001CC8  EF68  F00E         	goto	u4730
  3222   001CCC                     u4731:
  3223   001CCC  EF70  F00E         	goto	l4611
  3224   001CD0                     u4730:
  3225   001CD0  1E10               	comf	(___aldiv@quotient+3)^0,f,c
  3226   001CD2  1E0F               	comf	(___aldiv@quotient+2)^0,f,c
  3227   001CD4  1E0E               	comf	(___aldiv@quotient+1)^0,f,c
  3228   001CD6  6C0D               	negf	___aldiv@quotient^0,c
  3229   001CD8  0E00               	movlw	0
  3230   001CDA  220E               	addwfc	(___aldiv@quotient+1)^0,f,c
  3231   001CDC  220F               	addwfc	(___aldiv@quotient+2)^0,f,c
  3232   001CDE  2210               	addwfc	(___aldiv@quotient+3)^0,f,c
  3233   001CE0                     l4611:
  3234   001CE0  C00D  F003         	movff	___aldiv@quotient,?___aldiv
  3235   001CE4  C00E  F004         	movff	___aldiv@quotient+1,?___aldiv+1
  3236   001CE8  C00F  F005         	movff	___aldiv@quotient+2,?___aldiv+2
  3237   001CEC  C010  F006         	movff	___aldiv@quotient+3,?___aldiv+3
  3238   001CF0  0012               	return		;funcret
  3239   001CF2                     __end_of___aldiv:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function _main_menu *****************
  3243 ;; Defined at:
  3244 ;;		line 313 in file "OBCII_PIC18F46K22.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;Total ram usage:        2 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 11
  3265 ;; This function calls:
  3266 ;;		_LCD_clear
  3267 ;;		_LCD_configure_cursor_blink
  3268 ;;		_LCD_cursor_set
  3269 ;;		_clear_diagnostic_codes
  3270 ;;		_diagnostic_trouble_codes
  3271 ;;		_display_mm
  3272 ;;		_display_system_info
  3273 ;;		_live_reading_mode
  3274 ;;		_readADC
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text8
  3281   000FFC                     __ptext8:
  3282                           	callstack 0
  3283   000FFC                     _main_menu:
  3284                           	callstack 19
  3285   000FFC                     
  3286                           ;OBCII_PIC18F46K22.c: 315:     LCD_clear();
  3287   000FFC  ECF3  F019         	call	_LCD_clear	;wreg free
  3288   001000                     
  3289                           ;OBCII_PIC18F46K22.c: 316:     display_mm();
  3290   001000  ECB3  F019         	call	_display_mm	;wreg free
  3291   001004                     l6799:
  3292                           
  3293                           ;OBCII_PIC18F46K22.c: 319:         display_mm();
  3294   001004  ECB3  F019         	call	_display_mm	;wreg free
  3295                           
  3296                           ;OBCII_PIC18F46K22.c: 320:         result = readADC();
  3297   001008  EC98  F019         	call	_readADC	;wreg free
  3298   00100C  C003  F05B         	movff	?_readADC,_result
  3299   001010  C004  F05C         	movff	?_readADC+1,_result+1
  3300   001014                     
  3301                           ;OBCII_PIC18F46K22.c: 321:         if(result >= 0 && result <= 255){
  3302   001014  045C               	decf	(_result+1)^0,w,c
  3303   001016  B0D8               	btfsc	status,0,c
  3304   001018  EF10  F008         	goto	u7731
  3305   00101C  EF12  F008         	goto	u7730
  3306   001020                     u7731:
  3307   001020  EF1C  F008         	goto	l6807
  3308   001024                     u7730:
  3309   001024                     
  3310                           ;OBCII_PIC18F46K22.c: 322:             menu_sel = 0;
  3311   001024  0E00               	movlw	0
  3312   001026  0100               	movlb	0	; () banked
  3313   001028  6FF9               	movwf	(_menu_sel+1)& (0+255),b
  3314   00102A  0E00               	movlw	0
  3315   00102C  6FF8               	movwf	_menu_sel& (0+255),b
  3316   00102E                     
  3317                           ; BSR set to: 0
  3318                           ;OBCII_PIC18F46K22.c: 323:             LCD_cursor_set(2,1);
  3319   00102E  0E01               	movlw	1
  3320   001030  6E06               	movwf	LCD_cursor_set@column^0,c
  3321   001032  0E02               	movlw	2
  3322   001034  EC2D  F018         	call	_LCD_cursor_set
  3323   001038                     l6807:
  3324                           
  3325                           ;OBCII_PIC18F46K22.c: 326:         if(result >= 256 && result <=511){
  3326   001038  045C               	decf	(_result+1)^0,w,c
  3327   00103A  A0D8               	btfss	status,0,c
  3328   00103C  EF22  F008         	goto	u7741
  3329   001040  EF24  F008         	goto	u7740
  3330   001044                     u7741:
  3331   001044  EF37  F008         	goto	l6815
  3332   001048                     u7740:
  3333   001048  0E02               	movlw	2
  3334   00104A  5C5C               	subwf	(_result+1)^0,w,c
  3335   00104C  B0D8               	btfsc	status,0,c
  3336   00104E  EF2B  F008         	goto	u7751
  3337   001052  EF2D  F008         	goto	u7750
  3338   001056                     u7751:
  3339   001056  EF37  F008         	goto	l6815
  3340   00105A                     u7750:
  3341   00105A                     
  3342                           ;OBCII_PIC18F46K22.c: 327:             menu_sel = 1;
  3343   00105A  0E00               	movlw	0
  3344   00105C  0100               	movlb	0	; () banked
  3345   00105E  6FF9               	movwf	(_menu_sel+1)& (0+255),b
  3346   001060  0E01               	movlw	1
  3347   001062  6FF8               	movwf	_menu_sel& (0+255),b
  3348   001064                     
  3349                           ; BSR set to: 0
  3350                           ;OBCII_PIC18F46K22.c: 328:             LCD_cursor_set(2,5);
  3351   001064  0E05               	movlw	5
  3352   001066  6E06               	movwf	LCD_cursor_set@column^0,c
  3353   001068  0E02               	movlw	2
  3354   00106A  EC2D  F018         	call	_LCD_cursor_set
  3355   00106E                     l6815:
  3356                           
  3357                           ;OBCII_PIC18F46K22.c: 331:         if(result >=512 && result <=767){
  3358   00106E  0E02               	movlw	2
  3359   001070  5C5C               	subwf	(_result+1)^0,w,c
  3360   001072  A0D8               	btfss	status,0,c
  3361   001074  EF3E  F008         	goto	u7761
  3362   001078  EF40  F008         	goto	u7760
  3363   00107C                     u7761:
  3364   00107C  EF53  F008         	goto	l6823
  3365   001080                     u7760:
  3366   001080  0E03               	movlw	3
  3367   001082  5C5C               	subwf	(_result+1)^0,w,c
  3368   001084  B0D8               	btfsc	status,0,c
  3369   001086  EF47  F008         	goto	u7771
  3370   00108A  EF49  F008         	goto	u7770
  3371   00108E                     u7771:
  3372   00108E  EF53  F008         	goto	l6823
  3373   001092                     u7770:
  3374   001092                     
  3375                           ;OBCII_PIC18F46K22.c: 332:             menu_sel = 2;
  3376   001092  0E00               	movlw	0
  3377   001094  0100               	movlb	0	; () banked
  3378   001096  6FF9               	movwf	(_menu_sel+1)& (0+255),b
  3379   001098  0E02               	movlw	2
  3380   00109A  6FF8               	movwf	_menu_sel& (0+255),b
  3381   00109C                     
  3382                           ; BSR set to: 0
  3383                           ;OBCII_PIC18F46K22.c: 333:             LCD_cursor_set(2,9);
  3384   00109C  0E09               	movlw	9
  3385   00109E  6E06               	movwf	LCD_cursor_set@column^0,c
  3386   0010A0  0E02               	movlw	2
  3387   0010A2  EC2D  F018         	call	_LCD_cursor_set
  3388   0010A6                     l6823:
  3389                           
  3390                           ;OBCII_PIC18F46K22.c: 335:         if(result >= 768 && result <=1023 ){
  3391   0010A6  0E03               	movlw	3
  3392   0010A8  5C5C               	subwf	(_result+1)^0,w,c
  3393   0010AA  A0D8               	btfss	status,0,c
  3394   0010AC  EF5A  F008         	goto	u7781
  3395   0010B0  EF5C  F008         	goto	u7780
  3396   0010B4                     u7781:
  3397   0010B4  EF6F  F008         	goto	l6831
  3398   0010B8                     u7780:
  3399   0010B8  0E04               	movlw	4
  3400   0010BA  5C5C               	subwf	(_result+1)^0,w,c
  3401   0010BC  B0D8               	btfsc	status,0,c
  3402   0010BE  EF63  F008         	goto	u7791
  3403   0010C2  EF65  F008         	goto	u7790
  3404   0010C6                     u7791:
  3405   0010C6  EF6F  F008         	goto	l6831
  3406   0010CA                     u7790:
  3407   0010CA                     
  3408                           ;OBCII_PIC18F46K22.c: 336:             menu_sel = 3;
  3409   0010CA  0E00               	movlw	0
  3410   0010CC  0100               	movlb	0	; () banked
  3411   0010CE  6FF9               	movwf	(_menu_sel+1)& (0+255),b
  3412   0010D0  0E03               	movlw	3
  3413   0010D2  6FF8               	movwf	_menu_sel& (0+255),b
  3414   0010D4                     
  3415                           ; BSR set to: 0
  3416                           ;OBCII_PIC18F46K22.c: 337:             LCD_cursor_set(2,13);
  3417   0010D4  0E0D               	movlw	13
  3418   0010D6  6E06               	movwf	LCD_cursor_set@column^0,c
  3419   0010D8  0E02               	movlw	2
  3420   0010DA  EC2D  F018         	call	_LCD_cursor_set
  3421   0010DE                     l6831:
  3422                           
  3423                           ;OBCII_PIC18F46K22.c: 339:         LCD_configure_cursor_blink(1);
  3424   0010DE  0E01               	movlw	1
  3425   0010E0  ECE0  F019         	call	_LCD_configure_cursor_blink
  3426   0010E4                     
  3427                           ;OBCII_PIC18F46K22.c: 341:         if (PORTBbits.RB4 == 0) {
  3428   0010E4  B881               	btfsc	129,4,c	;volatile
  3429   0010E6  EF77  F008         	goto	u7801
  3430   0010EA  EF79  F008         	goto	u7800
  3431   0010EE                     u7801:
  3432   0010EE  EF17  F009         	goto	l6905
  3433   0010F2                     u7800:
  3434   0010F2                     
  3435                           ;OBCII_PIC18F46K22.c: 342:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3436   0010F2  0E68               	movlw	104
  3437   0010F4  0100               	movlb	0	; () banked
  3438   0010F6  6FAB               	movwf	??_main_menu& (0+255),b
  3439   0010F8  0EE4               	movlw	228
  3440   0010FA                     u8017:
  3441   0010FA  2EE8               	decfsz	wreg,f,c
  3442   0010FC  D7FE               	bra	u8017
  3443   0010FE  2FAB               	decfsz	??_main_menu& (0+255),f,b
  3444   001100  D7FC               	bra	u8017
  3445   001102  0000               	nop	
  3446   001104                     
  3447                           ;OBCII_PIC18F46K22.c: 343:             if (PORTBbits.RB4 == 0) {
  3448   001104  B881               	btfsc	129,4,c	;volatile
  3449   001106  EF87  F008         	goto	u7811
  3450   00110A  EF89  F008         	goto	u7810
  3451   00110E                     u7811:
  3452   00110E  EF17  F009         	goto	l6905
  3453   001112                     u7810:
  3454   001112                     
  3455                           ;OBCII_PIC18F46K22.c: 344:                 LCD_configure_cursor_blink(0);
  3456   001112  0E00               	movlw	0
  3457   001114  ECE0  F019         	call	_LCD_configure_cursor_blink
  3458                           
  3459                           ;OBCII_PIC18F46K22.c: 345:                 LCD_clear();
  3460   001118  ECF3  F019         	call	_LCD_clear	;wreg free
  3461                           
  3462                           ;OBCII_PIC18F46K22.c: 348:                 switch (menu_sel) {
  3463   00111C  EFF8  F008         	goto	l6903
  3464   001120                     l6841:
  3465                           
  3466                           ;OBCII_PIC18F46K22.c: 351:                             live_reading_mode();
  3467   001120  EC3E  F01A         	call	_live_reading_mode	;wreg free
  3468   001124                     
  3469                           ;OBCII_PIC18F46K22.c: 353:                             if (PORTCbits.RC5 == 0) {
  3470   001124  BA82               	btfsc	130,5,c	;volatile
  3471   001126  EF97  F008         	goto	u7821
  3472   00112A  EF99  F008         	goto	u7820
  3473   00112E                     u7821:
  3474   00112E  EF90  F008         	goto	l6841
  3475   001132                     u7820:
  3476   001132                     
  3477                           ;OBCII_PIC18F46K22.c: 354:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  3478   001132  0E68               	movlw	104
  3479   001134  0100               	movlb	0	; () banked
  3480   001136  6FAB               	movwf	??_main_menu& (0+255),b
  3481   001138  0EE4               	movlw	228
  3482   00113A                     u8027:
  3483   00113A  2EE8               	decfsz	wreg,f,c
  3484   00113C  D7FE               	bra	u8027
  3485   00113E  2FAB               	decfsz	??_main_menu& (0+255),f,b
  3486   001140  D7FC               	bra	u8027
  3487   001142  0000               	nop	
  3488   001144                     
  3489                           ;OBCII_PIC18F46K22.c: 355:                                 if (PORTCbits.RC5 == 0) {
  3490   001144  BA82               	btfsc	130,5,c	;volatile
  3491   001146  EFA7  F008         	goto	u7831
  3492   00114A  EFA9  F008         	goto	u7830
  3493   00114E                     u7831:
  3494   00114E  EF90  F008         	goto	l6841
  3495   001152                     u7830:
  3496   001152                     l6849:
  3497                           
  3498                           ;OBCII_PIC18F46K22.c: 356:                                     LCD_clear();
  3499   001152  ECF3  F019         	call	_LCD_clear	;wreg free
  3500   001156                     
  3501                           ;OBCII_PIC18F46K22.c: 357:                                     display_mm();
  3502   001156  ECB3  F019         	call	_display_mm	;wreg free
  3503   00115A                     l6853:
  3504                           
  3505                           ;OBCII_PIC18F46K22.c: 358:                                     menu_sel = -1;
  3506   00115A  0100               	movlb	0	; () banked
  3507   00115C  69F8               	setf	_menu_sel& (0+255),b
  3508   00115E  69F9               	setf	(_menu_sel+1)& (0+255),b
  3509                           
  3510                           ;OBCII_PIC18F46K22.c: 359:                                     break;
  3511   001160  EF17  F009         	goto	l6905
  3512   001164                     l6855:
  3513                           
  3514                           ;OBCII_PIC18F46K22.c: 368:                             diagnostic_trouble_codes();
  3515   001164  ECD8  F004         	call	_diagnostic_trouble_codes	;wreg free
  3516   001168                     
  3517                           ;OBCII_PIC18F46K22.c: 370:                             if (PORTCbits.RC5 == 0) {
  3518   001168  BA82               	btfsc	130,5,c	;volatile
  3519   00116A  EFB9  F008         	goto	u7841
  3520   00116E  EFBB  F008         	goto	u7840
  3521   001172                     u7841:
  3522   001172  EFB2  F008         	goto	l6855
  3523   001176                     u7840:
  3524   001176                     
  3525                           ;OBCII_PIC18F46K22.c: 371:                                     _delay((unsigned long)((2
      +                          0)*(16000000/4000.0)));
  3526   001176  0E68               	movlw	104
  3527   001178  0100               	movlb	0	; () banked
  3528   00117A  6FAB               	movwf	??_main_menu& (0+255),b
  3529   00117C  0EE4               	movlw	228
  3530   00117E                     u8037:
  3531   00117E  2EE8               	decfsz	wreg,f,c
  3532   001180  D7FE               	bra	u8037
  3533   001182  2FAB               	decfsz	??_main_menu& (0+255),f,b
  3534   001184  D7FC               	bra	u8037
  3535   001186  0000               	nop	
  3536   001188                     
  3537                           ;OBCII_PIC18F46K22.c: 372:                                 if (PORTCbits.RC5 == 0) {
  3538   001188  BA82               	btfsc	130,5,c	;volatile
  3539   00118A  EFC9  F008         	goto	u7851
  3540   00118E  EFCB  F008         	goto	u7850
  3541   001192                     u7851:
  3542   001192  EFB2  F008         	goto	l6855
  3543   001196                     u7850:
  3544   001196  EFA9  F008         	goto	l6849
  3545   00119A                     l6869:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;OBCII_PIC18F46K22.c: 384:                                 _delay((unsigned long)((200)*
      +                          (16000000/4000.0)));
  3549   00119A  0E05               	movlw	5
  3550   00119C  0100               	movlb	0	; () banked
  3551   00119E  6FAC               	movwf	(??_main_menu+1)& (0+255),b
  3552   0011A0  0E0F               	movlw	15
  3553   0011A2  6FAB               	movwf	??_main_menu& (0+255),b
  3554   0011A4  0EF1               	movlw	241
  3555   0011A6                     u8047:
  3556   0011A6  2EE8               	decfsz	wreg,f,c
  3557   0011A8  D7FE               	bra	u8047
  3558   0011AA  2FAB               	decfsz	??_main_menu& (0+255),f,b
  3559   0011AC  D7FC               	bra	u8047
  3560   0011AE  2FAC               	decfsz	(??_main_menu+1)& (0+255),f,b
  3561   0011B0  D7FA               	bra	u8047
  3562   0011B2                     
  3563                           ;OBCII_PIC18F46K22.c: 385:                                 clear_diagnostic_codes();
  3564   0011B2  EC2B  F00A         	call	_clear_diagnostic_codes	;wreg free
  3565   0011B6  EFAD  F008         	goto	l6853
  3566   0011BA                     l6887:
  3567                           
  3568                           ;OBCII_PIC18F46K22.c: 402:                             display_system_info();
  3569   0011BA  EC7D  F019         	call	_display_system_info	;wreg free
  3570   0011BE                     
  3571                           ;OBCII_PIC18F46K22.c: 404:                             if (PORTCbits.RC5 == 0) {
  3572   0011BE  BA82               	btfsc	130,5,c	;volatile
  3573   0011C0  EFE4  F008         	goto	u7861
  3574   0011C4  EFE6  F008         	goto	u7860
  3575   0011C8                     u7861:
  3576   0011C8  EFDD  F008         	goto	l6887
  3577   0011CC                     u7860:
  3578   0011CC                     
  3579                           ;OBCII_PIC18F46K22.c: 405:                                _delay((unsigned long)((20)*(1
      +                          6000000/4000.0)));
  3580   0011CC  0E68               	movlw	104
  3581   0011CE  0100               	movlb	0	; () banked
  3582   0011D0  6FAB               	movwf	??_main_menu& (0+255),b
  3583   0011D2  0EE4               	movlw	228
  3584   0011D4                     u8057:
  3585   0011D4  2EE8               	decfsz	wreg,f,c
  3586   0011D6  D7FE               	bra	u8057
  3587   0011D8  2FAB               	decfsz	??_main_menu& (0+255),f,b
  3588   0011DA  D7FC               	bra	u8057
  3589   0011DC  0000               	nop	
  3590   0011DE                     
  3591                           ;OBCII_PIC18F46K22.c: 406:                                 if (PORTCbits.RC5 == 0) {
  3592   0011DE  BA82               	btfsc	130,5,c	;volatile
  3593   0011E0  EFF4  F008         	goto	u7871
  3594   0011E4  EFF6  F008         	goto	u7870
  3595   0011E8                     u7871:
  3596   0011E8  EFDD  F008         	goto	l6887
  3597   0011EC                     u7870:
  3598   0011EC  EFA9  F008         	goto	l6849
  3599   0011F0                     l6903:
  3600   0011F0  C0F8  F0AB         	movff	_menu_sel,??_main_menu
  3601   0011F4  C0F9  F0AC         	movff	_menu_sel+1,??_main_menu+1
  3602                           
  3603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3604                           ; Switch size 1, requested type "simple"
  3605                           ; Number of cases is 1, Range of values is 0 to 0
  3606                           ; switch strategies available:
  3607                           ; Name         Instructions Cycles
  3608                           ; simple_byte            4     3 (average)
  3609                           ;	Chosen strategy is simple_byte
  3610   0011F8  0100               	movlb	0	; () banked
  3611   0011FA  51AC               	movf	(??_main_menu+1)& (0+255),w,b
  3612   0011FC  0A00               	xorlw	0	; case 0
  3613   0011FE  B4D8               	btfsc	status,2,c
  3614   001200  EF04  F009         	goto	l7069
  3615   001204  EF17  F009         	goto	l220
  3616   001208                     l7069:
  3617                           
  3618                           ; BSR set to: 0
  3619                           ; Switch size 1, requested type "simple"
  3620                           ; Number of cases is 4, Range of values is 0 to 3
  3621                           ; switch strategies available:
  3622                           ; Name         Instructions Cycles
  3623                           ; simple_byte           13     7 (average)
  3624                           ;	Chosen strategy is simple_byte
  3625   001208  51AB               	movf	??_main_menu& (0+255),w,b
  3626   00120A  0A00               	xorlw	0	; case 0
  3627   00120C  B4D8               	btfsc	status,2,c
  3628   00120E  EF90  F008         	goto	l6841
  3629   001212  0A01               	xorlw	1	; case 1
  3630   001214  B4D8               	btfsc	status,2,c
  3631   001216  EFB2  F008         	goto	l6855
  3632   00121A  0A03               	xorlw	3	; case 2
  3633   00121C  B4D8               	btfsc	status,2,c
  3634   00121E  EFCD  F008         	goto	l6869
  3635   001222  0A01               	xorlw	1	; case 3
  3636   001224  B4D8               	btfsc	status,2,c
  3637   001226  EFDD  F008         	goto	l6887
  3638   00122A  EF17  F009         	goto	l220
  3639   00122E                     l220:
  3640   00122E                     l6905:
  3641                           
  3642                           ;OBCII_PIC18F46K22.c: 422:         _delay((unsigned long)((50)*(16000000/4000.0)));
  3643   00122E  0E02               	movlw	2
  3644   001230  0100               	movlb	0	; () banked
  3645   001232  6FAC               	movwf	(??_main_menu+1)& (0+255),b
  3646   001234  0E04               	movlw	4
  3647   001236  6FAB               	movwf	??_main_menu& (0+255),b
  3648   001238  0EBA               	movlw	186
  3649   00123A                     u8067:
  3650   00123A  2EE8               	decfsz	wreg,f,c
  3651   00123C  D7FE               	bra	u8067
  3652   00123E  2FAB               	decfsz	??_main_menu& (0+255),f,b
  3653   001240  D7FC               	bra	u8067
  3654   001242  2FAC               	decfsz	(??_main_menu+1)& (0+255),f,b
  3655   001244  D7FA               	bra	u8067
  3656   001246  0000               	nop	
  3657   001248  EF02  F008         	goto	l6799
  3658   00124C  0012               	return		;funcret
  3659   00124E                     __end_of_main_menu:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _live_reading_mode *****************
  3663 ;; Defined at:
  3664 ;;		line 567 in file "OBCII_PIC18F46K22.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;Total ram usage:        0 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; Hardware stack levels required when called: 10
  3685 ;; This function calls:
  3686 ;;		_print_AI_Temp
  3687 ;;		_print_RPM
  3688 ;;		_print_Vbatt
  3689 ;; This function is called by:
  3690 ;;		_main_menu
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text9
  3695   00347C                     __ptext9:
  3696                           	callstack 0
  3697   00347C                     _live_reading_mode:
  3698                           	callstack 19
  3699   00347C                     
  3700                           ;OBCII_PIC18F46K22.c: 568:             print_RPM();
  3701   00347C  ECCB  F00C         	call	_print_RPM	;wreg free
  3702   003480                     
  3703                           ;OBCII_PIC18F46K22.c: 569:             print_Vbatt();
  3704   003480  ECEC  F010         	call	_print_Vbatt	;wreg free
  3705   003484                     
  3706                           ;OBCII_PIC18F46K22.c: 570:             print_AI_Temp();
  3707   003484  EC61  F00D         	call	_print_AI_Temp	;wreg free
  3708   003488  0012               	return		;funcret
  3709   00348A                     __end_of_live_reading_mode:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _print_Vbatt *****************
  3713 ;; Defined at:
  3714 ;;		line 492 in file "OBCII_PIC18F46K22.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        1 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 5
  3735 ;; This function calls:
  3736 ;;		_LCD_clear
  3737 ;;		_LCD_cursor_set
  3738 ;;		_LCD_write_string
  3739 ;;		_UART1_SendString
  3740 ;;		_clear_parsing_notif
  3741 ;;		_display_mm
  3742 ;;		_parsing_notif
  3743 ;;		_strchr
  3744 ;; This function is called by:
  3745 ;;		_live_reading_mode
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text10
  3750   0021D8                     __ptext10:
  3751                           	callstack 0
  3752   0021D8                     _print_Vbatt:
  3753                           	callstack 23
  3754   0021D8                     
  3755                           ;OBCII_PIC18F46K22.c: 494:     UART1_SendString("ATRV\r");
  3756   0021D8  0EB8               	movlw	low STR_22
  3757   0021DA  6E04               	movwf	UART1_SendString@string^0,c
  3758   0021DC  0EFF               	movlw	high STR_22
  3759   0021DE  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3760   0021E0  EC8C  F018         	call	_UART1_SendString	;wreg free
  3761                           
  3762                           ;OBCII_PIC18F46K22.c: 495:     while(!message_complete) {
  3763   0021E4  EF15  F011         	goto	l6309
  3764   0021E8                     l275:
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;OBCII_PIC18F46K22.c: 497:         if (PORTCbits.RC5 == 0) {
  3768   0021E8  BA82               	btfsc	130,5,c	;volatile
  3769   0021EA  EFF9  F010         	goto	u7261
  3770   0021EE  EFFB  F010         	goto	u7260
  3771   0021F2                     u7261:
  3772   0021F2  EF13  F011         	goto	l6307
  3773   0021F6                     u7260:
  3774   0021F6                     
  3775                           ; BSR set to: 0
  3776                           ;OBCII_PIC18F46K22.c: 498:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3777   0021F6  0E68               	movlw	104
  3778   0021F8  6E0B               	movwf	??_print_Vbatt^0,c
  3779   0021FA  0EE4               	movlw	228
  3780   0021FC                     u8077:
  3781   0021FC  2EE8               	decfsz	wreg,f,c
  3782   0021FE  D7FE               	bra	u8077
  3783   002200  2E0B               	decfsz	??_print_Vbatt^0,f,c
  3784   002202  D7FC               	bra	u8077
  3785   002204  D000               	nop2	
  3786   002206                     
  3787                           ;OBCII_PIC18F46K22.c: 499:             if (PORTCbits.RC5 == 0) {
  3788   002206  BA82               	btfsc	130,5,c	;volatile
  3789   002208  EF08  F011         	goto	u7271
  3790   00220C  EF0A  F011         	goto	u7270
  3791   002210                     u7271:
  3792   002210  EF13  F011         	goto	l6307
  3793   002214                     u7270:
  3794   002214                     
  3795                           ;OBCII_PIC18F46K22.c: 500:                 LCD_clear();
  3796   002214  ECF3  F019         	call	_LCD_clear	;wreg free
  3797   002218                     
  3798                           ;OBCII_PIC18F46K22.c: 501:                 display_mm();
  3799   002218  ECB3  F019         	call	_display_mm	;wreg free
  3800   00221C                     
  3801                           ;OBCII_PIC18F46K22.c: 502:                 menu_sel = -1;
  3802   00221C  0100               	movlb	0	; () banked
  3803   00221E  69F8               	setf	_menu_sel& (0+255),b
  3804   002220  69F9               	setf	(_menu_sel+1)& (0+255),b
  3805                           
  3806                           ;OBCII_PIC18F46K22.c: 503:                 break;
  3807   002222  EF1E  F011         	goto	l6311
  3808   002226                     l6307:
  3809                           
  3810                           ;OBCII_PIC18F46K22.c: 506:         parsing_notif();
  3811   002226  EC02  F01A         	call	_parsing_notif	;wreg free
  3812   00222A                     l6309:
  3813                           
  3814                           ;OBCII_PIC18F46K22.c: 495:     while(!message_complete) {
  3815   00222A  0100               	movlb	0	; () banked
  3816   00222C  51D5               	movf	_message_complete& (0+255),w,b	;volatile
  3817   00222E  B4D8               	btfsc	status,2,c
  3818   002230  EF1C  F011         	goto	u7281
  3819   002234  EF1E  F011         	goto	u7280
  3820   002238                     u7281:
  3821   002238  EFF4  F010         	goto	l275
  3822   00223C                     u7280:
  3823   00223C                     l6311:
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;OBCII_PIC18F46K22.c: 508:     clear_parsing_notif();
  3827   00223C  EC0E  F01A         	call	_clear_parsing_notif	;wreg free
  3828   002240                     
  3829                           ;OBCII_PIC18F46K22.c: 510:     LCD_cursor_set(2,7);
  3830   002240  0E07               	movlw	7
  3831   002242  6E06               	movwf	LCD_cursor_set@column^0,c
  3832   002244  0E02               	movlw	2
  3833   002246  EC2D  F018         	call	_LCD_cursor_set
  3834   00224A                     
  3835                           ;OBCII_PIC18F46K22.c: 511:     LCD_write_string("     ");
  3836   00224A  0E49               	movlw	low (STR_38+8)
  3837   00224C  6E06               	movwf	LCD_write_string@string^0,c
  3838   00224E  0EFF               	movlw	high (STR_38+8)
  3839   002250  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3840   002252  ECE7  F016         	call	_LCD_write_string	;wreg free
  3841                           
  3842                           ;OBCII_PIC18F46K22.c: 513:     LCD_cursor_set(1,7);
  3843   002256  0E07               	movlw	7
  3844   002258  6E06               	movwf	LCD_cursor_set@column^0,c
  3845   00225A  0E01               	movlw	1
  3846   00225C  EC2D  F018         	call	_LCD_cursor_set
  3847   002260                     
  3848                           ;OBCII_PIC18F46K22.c: 514:     LCD_write_string("VBatt");
  3849   002260  0ECA               	movlw	low STR_24
  3850   002262  6E06               	movwf	LCD_write_string@string^0,c
  3851   002264  0EFF               	movlw	high STR_24
  3852   002266  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3853   002268  ECE7  F016         	call	_LCD_write_string	;wreg free
  3854   00226C                     
  3855                           ;OBCII_PIC18F46K22.c: 515:     LCD_cursor_set(2,7);
  3856   00226C  0E07               	movlw	7
  3857   00226E  6E06               	movwf	LCD_cursor_set@column^0,c
  3858   002270  0E02               	movlw	2
  3859   002272  EC2D  F018         	call	_LCD_cursor_set
  3860   002276                     
  3861                           ;OBCII_PIC18F46K22.c: 517:     if (!strchr(buffer, 'V')) {
  3862   002276  0E00               	movlw	low _buffer
  3863   002278  6E03               	movwf	strchr@s^0,c
  3864   00227A  0E02               	movlw	high _buffer
  3865   00227C  6E04               	movwf	(strchr@s+1)^0,c
  3866   00227E  0E00               	movlw	0
  3867   002280  6E06               	movwf	(strchr@c+1)^0,c
  3868   002282  0E56               	movlw	86
  3869   002284  6E05               	movwf	strchr@c^0,c
  3870   002286  ECB7  F018         	call	_strchr	;wreg free
  3871   00228A  5003               	movf	?_strchr^0,w,c
  3872   00228C  1004               	iorwf	(?_strchr+1)^0,w,c
  3873   00228E  A4D8               	btfss	status,2,c
  3874   002290  EF4C  F011         	goto	u7291
  3875   002294  EF4E  F011         	goto	u7290
  3876   002298                     u7291:
  3877   002298  EF56  F011         	goto	l6325
  3878   00229C                     u7290:
  3879   00229C                     
  3880                           ;OBCII_PIC18F46K22.c: 518:         LCD_write_string("N/A");
  3881   00229C  0EEC               	movlw	low STR_25
  3882   00229E  6E06               	movwf	LCD_write_string@string^0,c
  3883   0022A0  0EFF               	movlw	high STR_25
  3884   0022A2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3885   0022A4  ECE7  F016         	call	_LCD_write_string	;wreg free
  3886                           
  3887                           ;OBCII_PIC18F46K22.c: 519:     }
  3888   0022A8  EF5C  F011         	goto	l6327
  3889   0022AC                     l6325:
  3890                           
  3891                           ;OBCII_PIC18F46K22.c: 521:     LCD_write_string(buffer);
  3892   0022AC  0E00               	movlw	low _buffer
  3893   0022AE  6E06               	movwf	LCD_write_string@string^0,c
  3894   0022B0  0E02               	movlw	high _buffer
  3895   0022B2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3896   0022B4  ECE7  F016         	call	_LCD_write_string	;wreg free
  3897   0022B8                     l6327:
  3898                           
  3899                           ;OBCII_PIC18F46K22.c: 524:     buffer_count = 0;
  3900   0022B8  0100               	movlb	0	; () banked
  3901   0022BA  6BD7               	clrf	_buffer_count& (0+255),b
  3902   0022BC                     
  3903                           ; BSR set to: 0
  3904                           ;OBCII_PIC18F46K22.c: 525:     message_complete = 0;
  3905   0022BC  6BD5               	clrf	_message_complete& (0+255),b	;volatile
  3906   0022BE                     
  3907                           ; BSR set to: 0
  3908   0022BE  0012               	return		;funcret
  3909   0022C0                     __end_of_print_Vbatt:
  3910                           	callstack 0
  3911                           
  3912 ;; *************** function _print_RPM *****************
  3913 ;; Defined at:
  3914 ;;		line 455 in file "OBCII_PIC18F46K22.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  B               1   89[COMRAM] unsigned char 
  3919 ;;  A               1   88[COMRAM] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;Total ram usage:        4 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 9
  3936 ;; This function calls:
  3937 ;;		_LCD_clear
  3938 ;;		_LCD_cursor_set
  3939 ;;		_LCD_write_string
  3940 ;;		_UART1_SendString
  3941 ;;		___awdiv
  3942 ;;		_clear_parsing_notif
  3943 ;;		_display_mm
  3944 ;;		_extract_two_pid_bytes
  3945 ;;		_parsing_notif
  3946 ;;		_sprintf
  3947 ;; This function is called by:
  3948 ;;		_live_reading_mode
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text11
  3953   001996                     __ptext11:
  3954                           	callstack 0
  3955   001996                     _print_RPM:
  3956                           	callstack 19
  3957   001996                     
  3958                           ;OBCII_PIC18F46K22.c: 456:     UART1_SendString("010C\r");
  3959   001996  0EAC               	movlw	low STR_16
  3960   001998  6E04               	movwf	UART1_SendString@string^0,c
  3961   00199A  0EFF               	movlw	high STR_16
  3962   00199C  6E05               	movwf	(UART1_SendString@string+1)^0,c
  3963   00199E  EC8C  F018         	call	_UART1_SendString	;wreg free
  3964                           
  3965                           ;OBCII_PIC18F46K22.c: 458:     while(!message_complete) {
  3966   0019A2  EFF4  F00C         	goto	l6263
  3967   0019A6                     l265:
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;OBCII_PIC18F46K22.c: 459:         if (PORTCbits.RC5 == 0) {
  3971   0019A6  BA82               	btfsc	130,5,c	;volatile
  3972   0019A8  EFD8  F00C         	goto	u7221
  3973   0019AC  EFDA  F00C         	goto	u7220
  3974   0019B0                     u7221:
  3975   0019B0  EFF2  F00C         	goto	l6261
  3976   0019B4                     u7220:
  3977   0019B4                     
  3978                           ; BSR set to: 0
  3979                           ;OBCII_PIC18F46K22.c: 460:             _delay((unsigned long)((20)*(16000000/4000.0)));
  3980   0019B4  0E68               	movlw	104
  3981   0019B6  6E57               	movwf	??_print_RPM^0,c
  3982   0019B8  0EE4               	movlw	228
  3983   0019BA                     u8087:
  3984   0019BA  2EE8               	decfsz	wreg,f,c
  3985   0019BC  D7FE               	bra	u8087
  3986   0019BE  2E57               	decfsz	??_print_RPM^0,f,c
  3987   0019C0  D7FC               	bra	u8087
  3988   0019C2  D000               	nop2	
  3989   0019C4                     
  3990                           ;OBCII_PIC18F46K22.c: 461:             if (PORTCbits.RC5 == 0) {
  3991   0019C4  BA82               	btfsc	130,5,c	;volatile
  3992   0019C6  EFE7  F00C         	goto	u7231
  3993   0019CA  EFE9  F00C         	goto	u7230
  3994   0019CE                     u7231:
  3995   0019CE  EFF2  F00C         	goto	l6261
  3996   0019D2                     u7230:
  3997   0019D2                     
  3998                           ;OBCII_PIC18F46K22.c: 462:                 LCD_clear();
  3999   0019D2  ECF3  F019         	call	_LCD_clear	;wreg free
  4000   0019D6                     
  4001                           ;OBCII_PIC18F46K22.c: 463:                 display_mm();
  4002   0019D6  ECB3  F019         	call	_display_mm	;wreg free
  4003   0019DA                     
  4004                           ;OBCII_PIC18F46K22.c: 464:                 menu_sel = -1;
  4005   0019DA  0100               	movlb	0	; () banked
  4006   0019DC  69F8               	setf	_menu_sel& (0+255),b
  4007   0019DE  69F9               	setf	(_menu_sel+1)& (0+255),b
  4008   0019E0  EF60  F00D         	goto	l268
  4009   0019E4                     l6261:
  4010                           
  4011                           ;OBCII_PIC18F46K22.c: 468:         parsing_notif();
  4012   0019E4  EC02  F01A         	call	_parsing_notif	;wreg free
  4013   0019E8                     l6263:
  4014                           
  4015                           ;OBCII_PIC18F46K22.c: 458:     while(!message_complete) {
  4016   0019E8  0100               	movlb	0	; () banked
  4017   0019EA  51D5               	movf	_message_complete& (0+255),w,b	;volatile
  4018   0019EC  B4D8               	btfsc	status,2,c
  4019   0019EE  EFFB  F00C         	goto	u7241
  4020   0019F2  EFFD  F00C         	goto	u7240
  4021   0019F6                     u7241:
  4022   0019F6  EFD3  F00C         	goto	l265
  4023   0019FA                     u7240:
  4024   0019FA                     
  4025                           ; BSR set to: 0
  4026                           ;OBCII_PIC18F46K22.c: 470:     clear_parsing_notif();
  4027   0019FA  EC0E  F01A         	call	_clear_parsing_notif	;wreg free
  4028   0019FE                     
  4029                           ;OBCII_PIC18F46K22.c: 472:     uint8_t A = 0, B = 0;
  4030   0019FE  6A59               	clrf	print_RPM@A^0,c
  4031   001A00  6A5A               	clrf	print_RPM@B^0,c
  4032   001A02                     
  4033                           ;OBCII_PIC18F46K22.c: 473:     if (extract_two_pid_bytes("41 0C", &A, &B)) {
  4034   001A02  0EBE               	movlw	low STR_17
  4035   001A04  0100               	movlb	0	; () banked
  4036   001A06  6F9B               	movwf	extract_two_pid_bytes@pid& (0+255),b
  4037   001A08  0EFF               	movlw	high STR_17
  4038   001A0A  6F9C               	movwf	(extract_two_pid_bytes@pid+1)& (0+255),b
  4039   001A0C  0E59               	movlw	low print_RPM@A
  4040   001A0E  6F9D               	movwf	extract_two_pid_bytes@A& (0+255),b
  4041   001A10  0E5A               	movlw	low print_RPM@B
  4042   001A12  6F9E               	movwf	extract_two_pid_bytes@B& (0+255),b
  4043   001A14  ECDA  F014         	call	_extract_two_pid_bytes	;wreg free
  4044   001A18  0900               	iorlw	0
  4045   001A1A  B4D8               	btfsc	status,2,c
  4046   001A1C  EF12  F00D         	goto	u7251
  4047   001A20  EF14  F00D         	goto	u7250
  4048   001A24                     u7251:
  4049   001A24  EF2B  F00D         	goto	l6275
  4050   001A28                     u7250:
  4051   001A28                     
  4052                           ;OBCII_PIC18F46K22.c: 474:         RPM = ((A << 8) | B) / 4;
  4053   001A28  505A               	movf	print_RPM@B^0,w,c
  4054   001A2A  C059  F057         	movff	print_RPM@A,??_print_RPM
  4055   001A2E  6A58               	clrf	(??_print_RPM+1)^0,c
  4056   001A30  C057  F058         	movff	??_print_RPM,??_print_RPM+1
  4057   001A34  6A57               	clrf	??_print_RPM^0,c
  4058   001A36  1057               	iorwf	??_print_RPM^0,w,c
  4059   001A38  6E03               	movwf	___awdiv@dividend^0,c
  4060   001A3A  5058               	movf	(??_print_RPM+1)^0,w,c
  4061   001A3C  6E04               	movwf	(___awdiv@dividend+1)^0,c
  4062   001A3E  0E00               	movlw	0
  4063   001A40  6E06               	movwf	(___awdiv@divisor+1)^0,c
  4064   001A42  0E04               	movlw	4
  4065   001A44  6E05               	movwf	___awdiv@divisor^0,c
  4066   001A46  EC06  F013         	call	___awdiv	;wreg free
  4067   001A4A  C003  F0CC         	movff	?___awdiv,_RPM
  4068   001A4E  C004  F0CD         	movff	?___awdiv+1,_RPM+1
  4069                           
  4070                           ;OBCII_PIC18F46K22.c: 475:     } else {
  4071   001A52  EF30  F00D         	goto	l6277
  4072   001A56                     l6275:
  4073                           
  4074                           ;OBCII_PIC18F46K22.c: 476:         RPM = 0;
  4075   001A56  0E00               	movlw	0
  4076   001A58  0100               	movlb	0	; () banked
  4077   001A5A  6FCD               	movwf	(_RPM+1)& (0+255),b
  4078   001A5C  0E00               	movlw	0
  4079   001A5E  6FCC               	movwf	_RPM& (0+255),b
  4080   001A60                     l6277:
  4081                           
  4082                           ;OBCII_PIC18F46K22.c: 479:     sprintf(rpm_string, "%u", RPM);
  4083   001A60  0EE8               	movlw	low _rpm_string
  4084   001A62  6E38               	movwf	sprintf@s^0,c
  4085   001A64  6A39               	clrf	(sprintf@s+1)^0,c
  4086   001A66  0EF8               	movlw	low STR_19
  4087   001A68  6E3A               	movwf	sprintf@fmt^0,c
  4088   001A6A  0EFF               	movlw	high STR_19
  4089   001A6C  6E3B               	movwf	(sprintf@fmt+1)^0,c
  4090   001A6E  C0CC  F03C         	movff	_RPM,?_sprintf+4
  4091   001A72  C0CD  F03D         	movff	_RPM+1,?_sprintf+5
  4092   001A76  EC20  F019         	call	_sprintf	;wreg free
  4093   001A7A                     
  4094                           ;OBCII_PIC18F46K22.c: 480:     LCD_cursor_set(2,1);
  4095   001A7A  0E01               	movlw	1
  4096   001A7C  6E06               	movwf	LCD_cursor_set@column^0,c
  4097   001A7E  0E02               	movlw	2
  4098   001A80  EC2D  F018         	call	_LCD_cursor_set
  4099   001A84                     
  4100                           ;OBCII_PIC18F46K22.c: 481:     LCD_write_string("     ");
  4101   001A84  0E49               	movlw	low (STR_38+8)
  4102   001A86  6E06               	movwf	LCD_write_string@string^0,c
  4103   001A88  0EFF               	movlw	high (STR_38+8)
  4104   001A8A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4105   001A8C  ECE7  F016         	call	_LCD_write_string	;wreg free
  4106   001A90                     
  4107                           ;OBCII_PIC18F46K22.c: 482:     LCD_cursor_set(1,1);
  4108   001A90  0E01               	movlw	1
  4109   001A92  6E06               	movwf	LCD_cursor_set@column^0,c
  4110   001A94  0E01               	movlw	1
  4111   001A96  EC2D  F018         	call	_LCD_cursor_set
  4112   001A9A                     
  4113                           ;OBCII_PIC18F46K22.c: 483:     LCD_write_string("RPM");
  4114   001A9A  0EF0               	movlw	low STR_21
  4115   001A9C  6E06               	movwf	LCD_write_string@string^0,c
  4116   001A9E  0EFF               	movlw	high STR_21
  4117   001AA0  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4118   001AA2  ECE7  F016         	call	_LCD_write_string	;wreg free
  4119   001AA6                     
  4120                           ;OBCII_PIC18F46K22.c: 484:     LCD_cursor_set(2,1);
  4121   001AA6  0E01               	movlw	1
  4122   001AA8  6E06               	movwf	LCD_cursor_set@column^0,c
  4123   001AAA  0E02               	movlw	2
  4124   001AAC  EC2D  F018         	call	_LCD_cursor_set
  4125   001AB0                     
  4126                           ;OBCII_PIC18F46K22.c: 485:     LCD_write_string(rpm_string);
  4127   001AB0  0EE8               	movlw	low _rpm_string
  4128   001AB2  6E06               	movwf	LCD_write_string@string^0,c
  4129   001AB4  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4130   001AB6  ECE7  F016         	call	_LCD_write_string	;wreg free
  4131   001ABA                     
  4132                           ;OBCII_PIC18F46K22.c: 487:     buffer_count = 0;
  4133   001ABA  0100               	movlb	0	; () banked
  4134   001ABC  6BD7               	clrf	_buffer_count& (0+255),b
  4135   001ABE                     
  4136                           ; BSR set to: 0
  4137                           ;OBCII_PIC18F46K22.c: 488:     message_complete = 0;
  4138   001ABE  6BD5               	clrf	_message_complete& (0+255),b	;volatile
  4139   001AC0                     l268:
  4140                           
  4141                           ; BSR set to: 0
  4142   001AC0  0012               	return		;funcret
  4143   001AC2                     __end_of_print_RPM:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function ___awdiv *****************
  4147 ;; Defined at:
  4148 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  dividend        2    2[COMRAM] int 
  4151 ;;  divisor         2    4[COMRAM] int 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  quotient        2    8[COMRAM] int 
  4154 ;;  sign            1    7[COMRAM] unsigned char 
  4155 ;;  counter         1    6[COMRAM] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  2    2[COMRAM] int 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;Total ram usage:        8 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 1
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_print_RPM
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text12
  4180   00260C                     __ptext12:
  4181                           	callstack 0
  4182   00260C                     ___awdiv:
  4183                           	callstack 26
  4184   00260C  6A08               	clrf	___awdiv@sign^0,c
  4185   00260E  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  4186   002610  EF0E  F013         	goto	u7150
  4187   002614  EF0C  F013         	goto	u7151
  4188   002618                     u7151:
  4189   002618  EF14  F013         	goto	l6203
  4190   00261C                     u7150:
  4191   00261C  6C05               	negf	___awdiv@divisor^0,c
  4192   00261E  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  4193   002620  B0D8               	btfsc	status,0,c
  4194   002622  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  4195   002624  0E01               	movlw	1
  4196   002626  6E08               	movwf	___awdiv@sign^0,c
  4197   002628                     l6203:
  4198   002628  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  4199   00262A  EF1B  F013         	goto	u7160
  4200   00262E  EF19  F013         	goto	u7161
  4201   002632                     u7161:
  4202   002632  EF21  F013         	goto	l6209
  4203   002636                     u7160:
  4204   002636  6C03               	negf	___awdiv@dividend^0,c
  4205   002638  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  4206   00263A  B0D8               	btfsc	status,0,c
  4207   00263C  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  4208   00263E  0E01               	movlw	1
  4209   002640  1A08               	xorwf	___awdiv@sign^0,f,c
  4210   002642                     l6209:
  4211   002642  0E00               	movlw	0
  4212   002644  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  4213   002646  0E00               	movlw	0
  4214   002648  6E09               	movwf	___awdiv@quotient^0,c
  4215   00264A  5005               	movf	___awdiv@divisor^0,w,c
  4216   00264C  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  4217   00264E  B4D8               	btfsc	status,2,c
  4218   002650  EF2C  F013         	goto	u7171
  4219   002654  EF2E  F013         	goto	u7170
  4220   002658                     u7171:
  4221   002658  EF56  F013         	goto	l6231
  4222   00265C                     u7170:
  4223   00265C  0E01               	movlw	1
  4224   00265E  6E07               	movwf	___awdiv@counter^0,c
  4225   002660  EF36  F013         	goto	l6217
  4226   002664                     l6215:
  4227   002664  90D8               	bcf	status,0,c
  4228   002666  3605               	rlcf	___awdiv@divisor^0,f,c
  4229   002668  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  4230   00266A  2A07               	incf	___awdiv@counter^0,f,c
  4231   00266C                     l6217:
  4232   00266C  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  4233   00266E  EF3B  F013         	goto	u7181
  4234   002672  EF3D  F013         	goto	u7180
  4235   002676                     u7181:
  4236   002676  EF32  F013         	goto	l6215
  4237   00267A                     u7180:
  4238   00267A                     l6219:
  4239   00267A  90D8               	bcf	status,0,c
  4240   00267C  3609               	rlcf	___awdiv@quotient^0,f,c
  4241   00267E  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  4242   002680  5005               	movf	___awdiv@divisor^0,w,c
  4243   002682  5C03               	subwf	___awdiv@dividend^0,w,c
  4244   002684  5006               	movf	(___awdiv@divisor+1)^0,w,c
  4245   002686  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  4246   002688  A0D8               	btfss	status,0,c
  4247   00268A  EF49  F013         	goto	u7191
  4248   00268E  EF4B  F013         	goto	u7190
  4249   002692                     u7191:
  4250   002692  EF50  F013         	goto	l6227
  4251   002696                     u7190:
  4252   002696  5005               	movf	___awdiv@divisor^0,w,c
  4253   002698  5E03               	subwf	___awdiv@dividend^0,f,c
  4254   00269A  5006               	movf	(___awdiv@divisor+1)^0,w,c
  4255   00269C  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  4256   00269E  8009               	bsf	___awdiv@quotient^0,0,c
  4257   0026A0                     l6227:
  4258   0026A0  90D8               	bcf	status,0,c
  4259   0026A2  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  4260   0026A4  3205               	rrcf	___awdiv@divisor^0,f,c
  4261   0026A6  2E07               	decfsz	___awdiv@counter^0,f,c
  4262   0026A8  EF3D  F013         	goto	l6219
  4263   0026AC                     l6231:
  4264   0026AC  5008               	movf	___awdiv@sign^0,w,c
  4265   0026AE  B4D8               	btfsc	status,2,c
  4266   0026B0  EF5C  F013         	goto	u7201
  4267   0026B4  EF5E  F013         	goto	u7200
  4268   0026B8                     u7201:
  4269   0026B8  EF62  F013         	goto	l6235
  4270   0026BC                     u7200:
  4271   0026BC  6C09               	negf	___awdiv@quotient^0,c
  4272   0026BE  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  4273   0026C0  B0D8               	btfsc	status,0,c
  4274   0026C2  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  4275   0026C4                     l6235:
  4276   0026C4  C009  F003         	movff	___awdiv@quotient,?___awdiv
  4277   0026C8  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  4278   0026CC  0012               	return		;funcret
  4279   0026CE                     __end_of___awdiv:
  4280                           	callstack 0
  4281                           
  4282 ;; *************** function _print_AI_Temp *****************
  4283 ;; Defined at:
  4284 ;;		line 528 in file "OBCII_PIC18F46K22.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;		None
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  A               1   88[COMRAM] unsigned char 
  4289 ;;  B               1   87[COMRAM] unsigned char 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;Total ram usage:        3 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 9
  4306 ;; This function calls:
  4307 ;;		_LCD_clear
  4308 ;;		_LCD_cursor_set
  4309 ;;		_LCD_write_string
  4310 ;;		_UART1_SendString
  4311 ;;		_clear_parsing_notif
  4312 ;;		_display_mm
  4313 ;;		_extract_two_pid_bytes
  4314 ;;		_parsing_notif
  4315 ;;		_sprintf
  4316 ;; This function is called by:
  4317 ;;		_live_reading_mode
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text13
  4322   001AC2                     __ptext13:
  4323                           	callstack 0
  4324   001AC2                     _print_AI_Temp:
  4325                           	callstack 19
  4326   001AC2                     
  4327                           ;OBCII_PIC18F46K22.c: 529:     UART1_SendString("010F\r");
  4328   001AC2  0EB2               	movlw	low STR_26
  4329   001AC4  6E04               	movwf	UART1_SendString@string^0,c
  4330   001AC6  0EFF               	movlw	high STR_26
  4331   001AC8  6E05               	movwf	(UART1_SendString@string+1)^0,c
  4332   001ACA  EC8C  F018         	call	_UART1_SendString	;wreg free
  4333                           
  4334                           ;OBCII_PIC18F46K22.c: 531:     while(!message_complete) {
  4335   001ACE  EF8A  F00D         	goto	l6347
  4336   001AD2                     l285:
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;OBCII_PIC18F46K22.c: 532:         if (PORTCbits.RC5 == 0) {
  4340   001AD2  BA82               	btfsc	130,5,c	;volatile
  4341   001AD4  EF6E  F00D         	goto	u7301
  4342   001AD8  EF70  F00D         	goto	u7300
  4343   001ADC                     u7301:
  4344   001ADC  EF88  F00D         	goto	l6345
  4345   001AE0                     u7300:
  4346   001AE0                     
  4347                           ; BSR set to: 0
  4348                           ;OBCII_PIC18F46K22.c: 533:             _delay((unsigned long)((20)*(16000000/4000.0)));
  4349   001AE0  0E68               	movlw	104
  4350   001AE2  6E57               	movwf	??_print_AI_Temp^0,c
  4351   001AE4  0EE4               	movlw	228
  4352   001AE6                     u8097:
  4353   001AE6  2EE8               	decfsz	wreg,f,c
  4354   001AE8  D7FE               	bra	u8097
  4355   001AEA  2E57               	decfsz	??_print_AI_Temp^0,f,c
  4356   001AEC  D7FC               	bra	u8097
  4357   001AEE  D000               	nop2	
  4358   001AF0                     
  4359                           ;OBCII_PIC18F46K22.c: 534:             if (PORTCbits.RC5 == 0) {
  4360   001AF0  BA82               	btfsc	130,5,c	;volatile
  4361   001AF2  EF7D  F00D         	goto	u7311
  4362   001AF6  EF7F  F00D         	goto	u7310
  4363   001AFA                     u7311:
  4364   001AFA  EF88  F00D         	goto	l6345
  4365   001AFE                     u7310:
  4366   001AFE                     
  4367                           ;OBCII_PIC18F46K22.c: 535:                 LCD_clear();
  4368   001AFE  ECF3  F019         	call	_LCD_clear	;wreg free
  4369   001B02                     
  4370                           ;OBCII_PIC18F46K22.c: 536:                 display_mm();
  4371   001B02  ECB3  F019         	call	_display_mm	;wreg free
  4372   001B06                     
  4373                           ;OBCII_PIC18F46K22.c: 537:                 menu_sel = -1;
  4374   001B06  0100               	movlb	0	; () banked
  4375   001B08  69F8               	setf	_menu_sel& (0+255),b
  4376   001B0A  69F9               	setf	(_menu_sel+1)& (0+255),b
  4377   001B0C  EFF3  F00D         	goto	l288
  4378   001B10                     l6345:
  4379                           
  4380                           ;OBCII_PIC18F46K22.c: 541:         parsing_notif();
  4381   001B10  EC02  F01A         	call	_parsing_notif	;wreg free
  4382   001B14                     l6347:
  4383                           
  4384                           ;OBCII_PIC18F46K22.c: 531:     while(!message_complete) {
  4385   001B14  0100               	movlb	0	; () banked
  4386   001B16  51D5               	movf	_message_complete& (0+255),w,b	;volatile
  4387   001B18  B4D8               	btfsc	status,2,c
  4388   001B1A  EF91  F00D         	goto	u7321
  4389   001B1E  EF93  F00D         	goto	u7320
  4390   001B22                     u7321:
  4391   001B22  EF69  F00D         	goto	l285
  4392   001B26                     u7320:
  4393   001B26                     
  4394                           ; BSR set to: 0
  4395                           ;OBCII_PIC18F46K22.c: 543:     clear_parsing_notif();
  4396   001B26  EC0E  F01A         	call	_clear_parsing_notif	;wreg free
  4397   001B2A                     
  4398                           ;OBCII_PIC18F46K22.c: 545:     uint8_t A = 0, B = 0;
  4399   001B2A  6A59               	clrf	print_AI_Temp@A^0,c
  4400   001B2C  6A58               	clrf	print_AI_Temp@B^0,c
  4401   001B2E                     
  4402                           ;OBCII_PIC18F46K22.c: 546:     if (extract_two_pid_bytes("41 0F", &A, &B)) {
  4403   001B2E  0EC4               	movlw	low STR_27
  4404   001B30  0100               	movlb	0	; () banked
  4405   001B32  6F9B               	movwf	extract_two_pid_bytes@pid& (0+255),b
  4406   001B34  0EFF               	movlw	high STR_27
  4407   001B36  6F9C               	movwf	(extract_two_pid_bytes@pid+1)& (0+255),b
  4408   001B38  0E59               	movlw	low print_AI_Temp@A
  4409   001B3A  6F9D               	movwf	extract_two_pid_bytes@A& (0+255),b
  4410   001B3C  0E58               	movlw	low print_AI_Temp@B
  4411   001B3E  6F9E               	movwf	extract_two_pid_bytes@B& (0+255),b
  4412   001B40  ECDA  F014         	call	_extract_two_pid_bytes	;wreg free
  4413   001B44  0900               	iorlw	0
  4414   001B46  B4D8               	btfsc	status,2,c
  4415   001B48  EFA8  F00D         	goto	u7331
  4416   001B4C  EFAA  F00D         	goto	u7330
  4417   001B50                     u7331:
  4418   001B50  EFB3  F00D         	goto	l6359
  4419   001B54                     u7330:
  4420   001B54                     
  4421                           ;OBCII_PIC18F46K22.c: 547:         air_intake_temp = A - 40;
  4422   001B54  0ED8               	movlw	216
  4423   001B56  2459               	addwf	print_AI_Temp@A^0,w,c
  4424   001B58  0100               	movlb	0	; () banked
  4425   001B5A  6FC8               	movwf	_air_intake_temp& (0+255),b
  4426   001B5C  6BC9               	clrf	(_air_intake_temp+1)& (0+255),b
  4427   001B5E  0EFF               	movlw	255
  4428   001B60  23C9               	addwfc	(_air_intake_temp+1)& (0+255),f,b
  4429                           
  4430                           ;OBCII_PIC18F46K22.c: 548:     } else {
  4431   001B62  EFB8  F00D         	goto	l6361
  4432   001B66                     l6359:
  4433                           
  4434                           ;OBCII_PIC18F46K22.c: 549:         air_intake_temp = 0;
  4435   001B66  0E00               	movlw	0
  4436   001B68  0100               	movlb	0	; () banked
  4437   001B6A  6FC9               	movwf	(_air_intake_temp+1)& (0+255),b
  4438   001B6C  0E00               	movlw	0
  4439   001B6E  6FC8               	movwf	_air_intake_temp& (0+255),b
  4440   001B70                     l6361:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;OBCII_PIC18F46K22.c: 552:     sprintf(air_intake_string, "%u", air_intake_temp);
  4444   001B70  0ED8               	movlw	low _air_intake_string
  4445   001B72  6E38               	movwf	sprintf@s^0,c
  4446   001B74  6A39               	clrf	(sprintf@s+1)^0,c
  4447   001B76  0EF8               	movlw	low STR_19
  4448   001B78  6E3A               	movwf	sprintf@fmt^0,c
  4449   001B7A  0EFF               	movlw	high STR_19
  4450   001B7C  6E3B               	movwf	(sprintf@fmt+1)^0,c
  4451   001B7E  C0C8  F03C         	movff	_air_intake_temp,?_sprintf+4
  4452   001B82  C0C9  F03D         	movff	_air_intake_temp+1,?_sprintf+5
  4453   001B86  EC20  F019         	call	_sprintf	;wreg free
  4454   001B8A                     
  4455                           ;OBCII_PIC18F46K22.c: 553:     LCD_cursor_set(2,13);
  4456   001B8A  0E0D               	movlw	13
  4457   001B8C  6E06               	movwf	LCD_cursor_set@column^0,c
  4458   001B8E  0E02               	movlw	2
  4459   001B90  EC2D  F018         	call	_LCD_cursor_set
  4460   001B94                     
  4461                           ;OBCII_PIC18F46K22.c: 554:     LCD_write_string("   ");
  4462   001B94  0E4B               	movlw	low (STR_38+10)
  4463   001B96  6E06               	movwf	LCD_write_string@string^0,c
  4464   001B98  0EFF               	movlw	high (STR_38+10)
  4465   001B9A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4466   001B9C  ECE7  F016         	call	_LCD_write_string	;wreg free
  4467   001BA0                     
  4468                           ;OBCII_PIC18F46K22.c: 555:     LCD_cursor_set(1,13);
  4469   001BA0  0E0D               	movlw	13
  4470   001BA2  6E06               	movwf	LCD_cursor_set@column^0,c
  4471   001BA4  0E01               	movlw	1
  4472   001BA6  EC2D  F018         	call	_LCD_cursor_set
  4473   001BAA                     
  4474                           ;OBCII_PIC18F46K22.c: 556:     LCD_write_string("AIT");
  4475   001BAA  0EF4               	movlw	low STR_31
  4476   001BAC  6E06               	movwf	LCD_write_string@string^0,c
  4477   001BAE  0EFF               	movlw	high STR_31
  4478   001BB0  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4479   001BB2  ECE7  F016         	call	_LCD_write_string	;wreg free
  4480   001BB6                     
  4481                           ;OBCII_PIC18F46K22.c: 557:     LCD_cursor_set(2,13);
  4482   001BB6  0E0D               	movlw	13
  4483   001BB8  6E06               	movwf	LCD_cursor_set@column^0,c
  4484   001BBA  0E02               	movlw	2
  4485   001BBC  EC2D  F018         	call	_LCD_cursor_set
  4486   001BC0                     
  4487                           ;OBCII_PIC18F46K22.c: 558:     LCD_write_string(air_intake_string);
  4488   001BC0  0ED8               	movlw	low _air_intake_string
  4489   001BC2  6E06               	movwf	LCD_write_string@string^0,c
  4490   001BC4  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4491   001BC6  ECE7  F016         	call	_LCD_write_string	;wreg free
  4492   001BCA                     
  4493                           ;OBCII_PIC18F46K22.c: 559:     LCD_cursor_set(2,15);
  4494   001BCA  0E0F               	movlw	15
  4495   001BCC  6E06               	movwf	LCD_cursor_set@column^0,c
  4496   001BCE  0E02               	movlw	2
  4497   001BD0  EC2D  F018         	call	_LCD_cursor_set
  4498   001BD4                     
  4499                           ;OBCII_PIC18F46K22.c: 560:     LCD_write_string("C");
  4500   001BD4  0EC2               	movlw	low (STR_17+4)
  4501   001BD6  6E06               	movwf	LCD_write_string@string^0,c
  4502   001BD8  0EFF               	movlw	high (STR_17+4)
  4503   001BDA  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4504   001BDC  ECE7  F016         	call	_LCD_write_string	;wreg free
  4505   001BE0                     
  4506                           ;OBCII_PIC18F46K22.c: 562:     buffer_count = 0;
  4507   001BE0  0100               	movlb	0	; () banked
  4508   001BE2  6BD7               	clrf	_buffer_count& (0+255),b
  4509   001BE4                     
  4510                           ; BSR set to: 0
  4511                           ;OBCII_PIC18F46K22.c: 563:     message_complete = 0;
  4512   001BE4  6BD5               	clrf	_message_complete& (0+255),b	;volatile
  4513   001BE6                     l288:
  4514                           
  4515                           ; BSR set to: 0
  4516   001BE6  0012               	return		;funcret
  4517   001BE8                     __end_of_print_AI_Temp:
  4518                           	callstack 0
  4519                           
  4520 ;; *************** function _extract_two_pid_bytes *****************
  4521 ;; Defined at:
  4522 ;;		line 441 in file "OBCII_PIC18F46K22.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  pid             2   59[BANK0 ] PTR const unsigned char 
  4525 ;;		 -> STR_28(6), STR_18(6), 
  4526 ;;  A               1   61[BANK0 ] PTR unsigned char 
  4527 ;;		 -> print_AI_Temp@A(1), print_RPM@A(1), 
  4528 ;;  B               1   62[BANK0 ] PTR unsigned char 
  4529 ;;		 -> print_AI_Temp@B(1), print_RPM@B(1), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  b               2   67[BANK0 ] unsigned int 
  4532 ;;  a               2   65[BANK0 ] unsigned int 
  4533 ;;  ptr             2   63[BANK0 ] PTR unsigned char 
  4534 ;;		 -> NULL(0), buffer(256), 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      unsigned char 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4544 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;Total ram usage:       10 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 8
  4551 ;; This function calls:
  4552 ;;		_sscanf
  4553 ;;		_strlen
  4554 ;;		_strstr
  4555 ;; This function is called by:
  4556 ;;		_print_RPM
  4557 ;;		_print_AI_Temp
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text14
  4562   0029B4                     __ptext14:
  4563                           	callstack 0
  4564   0029B4                     _extract_two_pid_bytes:
  4565                           	callstack 19
  4566   0029B4                     
  4567                           ;OBCII_PIC18F46K22.c: 442:     char* ptr = strstr(buffer, pid);
  4568   0029B4  0E00               	movlw	low _buffer
  4569   0029B6  6E0A               	movwf	strstr@h^0,c
  4570   0029B8  0E02               	movlw	high _buffer
  4571   0029BA  6E0B               	movwf	(strstr@h+1)^0,c
  4572   0029BC  C09B  F00C         	movff	extract_two_pid_bytes@pid,strstr@n
  4573   0029C0  C09C  F00D         	movff	extract_two_pid_bytes@pid+1,strstr@n+1
  4574   0029C4  EC67  F013         	call	_strstr	;wreg free
  4575   0029C8  C00A  F09F         	movff	?_strstr,extract_two_pid_bytes@ptr
  4576   0029CC  C00B  F0A0         	movff	?_strstr+1,extract_two_pid_bytes@ptr+1
  4577   0029D0                     
  4578                           ;OBCII_PIC18F46K22.c: 443:     if (ptr) {
  4579   0029D0  0100               	movlb	0	; () banked
  4580   0029D2  519F               	movf	extract_two_pid_bytes@ptr& (0+255),w,b
  4581   0029D4  11A0               	iorwf	(extract_two_pid_bytes@ptr+1)& (0+255),w,b
  4582   0029D6  B4D8               	btfsc	status,2,c
  4583   0029D8  EFF0  F014         	goto	u7131
  4584   0029DC  EFF2  F014         	goto	u7130
  4585   0029E0                     u7131:
  4586   0029E0  EF2B  F015         	goto	l6179
  4587   0029E4                     u7130:
  4588   0029E4                     
  4589                           ; BSR set to: 0
  4590                           ;OBCII_PIC18F46K22.c: 444:         unsigned int a = 0, b = 0;
  4591   0029E4  0E00               	movlw	0
  4592   0029E6  6FA2               	movwf	(extract_two_pid_bytes@a+1)& (0+255),b
  4593   0029E8  0E00               	movlw	0
  4594   0029EA  6FA1               	movwf	extract_two_pid_bytes@a& (0+255),b
  4595   0029EC  0E00               	movlw	0
  4596   0029EE  6FA4               	movwf	(extract_two_pid_bytes@b+1)& (0+255),b
  4597   0029F0  0E00               	movlw	0
  4598   0029F2  6FA3               	movwf	extract_two_pid_bytes@b& (0+255),b
  4599   0029F4                     
  4600                           ; BSR set to: 0
  4601                           ;OBCII_PIC18F46K22.c: 445:         if (sscanf(ptr + strlen(pid), "%x %x", &a, &b) == 2) 
      +                          {
  4602   0029F4  C09B  F003         	movff	extract_two_pid_bytes@pid,strlen@s
  4603   0029F8  C09C  F004         	movff	extract_two_pid_bytes@pid+1,strlen@s+1
  4604   0029FC  EC60  F019         	call	_strlen	;wreg free
  4605   002A00  5003               	movf	?_strlen^0,w,c
  4606   002A02  0100               	movlb	0	; () banked
  4607   002A04  259F               	addwf	extract_two_pid_bytes@ptr& (0+255),w,b
  4608   002A06  6F85               	movwf	sscanf@s& (0+255),b
  4609   002A08  5004               	movf	(?_strlen+1)^0,w,c
  4610   002A0A  21A0               	addwfc	(extract_two_pid_bytes@ptr+1)& (0+255),w,b
  4611   002A0C  6F86               	movwf	(sscanf@s+1)& (0+255),b
  4612   002A0E  0ED0               	movlw	low STR_15
  4613   002A10  6F87               	movwf	sscanf@fmt& (0+255),b
  4614   002A12  0EFF               	movlw	high STR_15
  4615   002A14  6F88               	movwf	(sscanf@fmt+1)& (0+255),b
  4616   002A16  0EA1               	movlw	low extract_two_pid_bytes@a
  4617   002A18  6F89               	movwf	(?_sscanf+4)& (0+255),b
  4618   002A1A  6B8A               	clrf	(?_sscanf+5)& (0+255),b
  4619   002A1C  0EA3               	movlw	low extract_two_pid_bytes@b
  4620   002A1E  6F8B               	movwf	(?_sscanf+6)& (0+255),b
  4621   002A20  6B8C               	clrf	(?_sscanf+7)& (0+255),b
  4622   002A22  ECDD  F018         	call	_sscanf	;wreg free
  4623   002A26  0E02               	movlw	2
  4624   002A28  0100               	movlb	0	; () banked
  4625   002A2A  1985               	xorwf	?_sscanf& (0+255),w,b
  4626   002A2C  1186               	iorwf	(?_sscanf+1)& (0+255),w,b
  4627   002A2E  A4D8               	btfss	status,2,c
  4628   002A30  EF1C  F015         	goto	u7141
  4629   002A34  EF1E  F015         	goto	u7140
  4630   002A38                     u7141:
  4631   002A38  EF2B  F015         	goto	l6179
  4632   002A3C                     u7140:
  4633   002A3C                     
  4634                           ; BSR set to: 0
  4635                           ;OBCII_PIC18F46K22.c: 446:             *A = (uint8_t)a;
  4636   002A3C  519D               	movf	extract_two_pid_bytes@A& (0+255),w,b
  4637   002A3E  6ED9               	movwf	fsr2l,c
  4638   002A40  6ADA               	clrf	fsr2h,c
  4639   002A42  C0A1  FFDF         	movff	extract_two_pid_bytes@a,indf2
  4640                           
  4641                           ;OBCII_PIC18F46K22.c: 447:             *B = (uint8_t)b;
  4642   002A46  519E               	movf	extract_two_pid_bytes@B& (0+255),w,b
  4643   002A48  6ED9               	movwf	fsr2l,c
  4644   002A4A  6ADA               	clrf	fsr2h,c
  4645   002A4C  C0A3  FFDF         	movff	extract_two_pid_bytes@b,indf2
  4646   002A50                     
  4647                           ; BSR set to: 0
  4648                           ;OBCII_PIC18F46K22.c: 448:             return 1;
  4649   002A50  0E01               	movlw	1
  4650   002A52  EF2C  F015         	goto	l261
  4651   002A56                     l6179:
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;OBCII_PIC18F46K22.c: 451:     return 0;
  4655   002A56  0E00               	movlw	0
  4656   002A58                     l261:
  4657                           
  4658                           ; BSR set to: 0
  4659   002A58  0012               	return		;funcret
  4660   002A5A                     __end_of_extract_two_pid_bytes:
  4661                           	callstack 0
  4662                           
  4663 ;; *************** function _strstr *****************
  4664 ;; Defined at:
  4665 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  h               2    9[COMRAM] PTR const unsigned char 
  4668 ;;		 -> NULL(0), buffer(256), 
  4669 ;;  n               2   11[COMRAM] PTR const unsigned char 
  4670 ;;		 -> STR_28(6), STR_18(6), 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  nl              2   13[COMRAM] unsigned int 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  2    9[COMRAM] PTR unsigned char 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;Total ram usage:        6 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 2
  4689 ;; This function calls:
  4690 ;;		_strchr
  4691 ;;		_strlen
  4692 ;;		_strncmp
  4693 ;; This function is called by:
  4694 ;;		_extract_two_pid_bytes
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text15
  4699   0026CE                     __ptext15:
  4700                           	callstack 0
  4701   0026CE                     _strstr:
  4702                           	callstack 24
  4703   0026CE  500C               	movf	strstr@n^0,w,c
  4704   0026D0  100D               	iorwf	(strstr@n+1)^0,w,c
  4705   0026D2  B4D8               	btfsc	status,2,c
  4706   0026D4  EF6E  F013         	goto	u7071
  4707   0026D8  EF70  F013         	goto	u7070
  4708   0026DC                     u7071:
  4709   0026DC  EFC2  F013         	goto	l6111
  4710   0026E0                     u7070:
  4711   0026E0  C00C  F003         	movff	strstr@n,strlen@s
  4712   0026E4  C00D  F004         	movff	strstr@n+1,strlen@s+1
  4713   0026E8  EC60  F019         	call	_strlen	;wreg free
  4714   0026EC  C003  F00E         	movff	?_strlen,strstr@nl
  4715   0026F0  C004  F00F         	movff	?_strlen+1,strstr@nl+1
  4716   0026F4  EFAD  F013         	goto	l6107
  4717   0026F8                     l6099:
  4718   0026F8  C00A  F003         	movff	strstr@h,strncmp@l
  4719   0026FC  C00B  F004         	movff	strstr@h+1,strncmp@l+1
  4720   002700  C00C  F005         	movff	strstr@n,strncmp@r
  4721   002704  C00D  F006         	movff	strstr@n+1,strncmp@r+1
  4722   002708  C00E  F007         	movff	strstr@nl,strncmp@n
  4723   00270C  C00F  F008         	movff	strstr@nl+1,strncmp@n+1
  4724   002710  EC41  F012         	call	_strncmp	;wreg free
  4725   002714  5003               	movf	?_strncmp^0,w,c
  4726   002716  1004               	iorwf	(?_strncmp+1)^0,w,c
  4727   002718  A4D8               	btfss	status,2,c
  4728   00271A  EF91  F013         	goto	u7081
  4729   00271E  EF93  F013         	goto	u7080
  4730   002722                     u7081:
  4731   002722  EF99  F013         	goto	l6105
  4732   002726                     u7080:
  4733   002726  C00A  F00A         	movff	strstr@h,?_strstr
  4734   00272A  C00B  F00B         	movff	strstr@h+1,?_strstr+1
  4735   00272E  EFC6  F013         	goto	l1517
  4736   002732                     l6105:
  4737   002732  0E01               	movlw	1
  4738   002734  240A               	addwf	strstr@h^0,w,c
  4739   002736  6E03               	movwf	strchr@s^0,c
  4740   002738  0E00               	movlw	0
  4741   00273A  200B               	addwfc	(strstr@h+1)^0,w,c
  4742   00273C  6E04               	movwf	(strchr@s+1)^0,c
  4743   00273E  C00C  FFF6         	movff	strstr@n,tblptrl
  4744   002742  C00D  FFF7         	movff	strstr@n+1,tblptrh
  4745   002746                     	if	0	;tblptru may be non-zero
  4746   002746                     	endif
  4747   002746                     	if	0	;tblptru may be non-zero
  4748   002746                     	endif
  4749   002746  0008               	tblrd		*
  4750   002748  50F5               	movf	tablat,w,c
  4751   00274A  6E05               	movwf	strchr@c^0,c
  4752   00274C  6A06               	clrf	(strchr@c+1)^0,c
  4753   00274E  ECB7  F018         	call	_strchr	;wreg free
  4754   002752  C003  F00A         	movff	?_strchr,strstr@h
  4755   002756  C004  F00B         	movff	?_strchr+1,strstr@h+1
  4756   00275A                     l6107:
  4757   00275A  500A               	movf	strstr@h^0,w,c
  4758   00275C  100B               	iorwf	(strstr@h+1)^0,w,c
  4759   00275E  B4D8               	btfsc	status,2,c
  4760   002760  EFB4  F013         	goto	u7091
  4761   002764  EFB6  F013         	goto	u7090
  4762   002768                     u7091:
  4763   002768  EFC2  F013         	goto	l6111
  4764   00276C                     u7090:
  4765   00276C  C00A  FFD9         	movff	strstr@h,fsr2l
  4766   002770  C00B  FFDA         	movff	strstr@h+1,fsr2h
  4767   002774  50DF               	movf	indf2,w,c
  4768   002776  A4D8               	btfss	status,2,c
  4769   002778  EFC0  F013         	goto	u7101
  4770   00277C  EFC2  F013         	goto	u7100
  4771   002780                     u7101:
  4772   002780  EF7C  F013         	goto	l6099
  4773   002784                     u7100:
  4774   002784                     l6111:
  4775   002784  0E00               	movlw	0
  4776   002786  6E0A               	movwf	?_strstr^0,c
  4777   002788  0E00               	movlw	0
  4778   00278A  6E0B               	movwf	(?_strstr+1)^0,c
  4779   00278C                     l1517:
  4780   00278C  0012               	return		;funcret
  4781   00278E                     __end_of_strstr:
  4782                           	callstack 0
  4783                           
  4784 ;; *************** function _strncmp *****************
  4785 ;; Defined at:
  4786 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  l               2    2[COMRAM] PTR const unsigned char 
  4789 ;;		 -> NULL(0), buffer(256), 
  4790 ;;  r               2    4[COMRAM] PTR const unsigned char 
  4791 ;;		 -> STR_28(6), STR_18(6), 
  4792 ;;  n               2    6[COMRAM] unsigned int 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  2    2[COMRAM] int 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4804 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;Total ram usage:        7 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; Hardware stack levels required when called: 1
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_strstr
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text16
  4819   002482                     __ptext16:
  4820                           	callstack 0
  4821   002482                     _strncmp:
  4822                           	callstack 24
  4823   002482  0607               	decf	strncmp@n^0,f,c
  4824   002484  A0D8               	btfss	status,0,c
  4825   002486  0608               	decf	(strncmp@n+1)^0,f,c
  4826   002488  2807               	incf	strncmp@n^0,w,c
  4827   00248A  E106               	bnz	u6941
  4828   00248C  2808               	incf	(strncmp@n+1)^0,w,c
  4829   00248E  A4D8               	btfss	status,2,c
  4830   002490  EF4C  F012         	goto	u6941
  4831   002494  EF4E  F012         	goto	u6940
  4832   002498                     u6941:
  4833   002498  EF5B  F012         	goto	l6059
  4834   00249C                     u6940:
  4835   00249C  0E00               	movlw	0
  4836   00249E  6E04               	movwf	(?_strncmp+1)^0,c
  4837   0024A0  0E00               	movlw	0
  4838   0024A2  6E03               	movwf	?_strncmp^0,c
  4839   0024A4  EFA3  F012         	goto	l1524
  4840   0024A8                     l6057:
  4841   0024A8  4A03               	infsnz	strncmp@l^0,f,c
  4842   0024AA  2A04               	incf	(strncmp@l+1)^0,f,c
  4843   0024AC  4A05               	infsnz	strncmp@r^0,f,c
  4844   0024AE  2A06               	incf	(strncmp@r+1)^0,f,c
  4845   0024B0  0607               	decf	strncmp@n^0,f,c
  4846   0024B2  A0D8               	btfss	status,0,c
  4847   0024B4  0608               	decf	(strncmp@n+1)^0,f,c
  4848   0024B6                     l6059:
  4849   0024B6  C003  FFD9         	movff	strncmp@l,fsr2l
  4850   0024BA  C004  FFDA         	movff	strncmp@l+1,fsr2h
  4851   0024BE  50DF               	movf	indf2,w,c
  4852   0024C0  B4D8               	btfsc	status,2,c
  4853   0024C2  EF65  F012         	goto	u6951
  4854   0024C6  EF67  F012         	goto	u6950
  4855   0024CA                     u6951:
  4856   0024CA  EF92  F012         	goto	l6067
  4857   0024CE                     u6950:
  4858   0024CE  C005  FFF6         	movff	strncmp@r,tblptrl
  4859   0024D2  C006  FFF7         	movff	strncmp@r+1,tblptrh
  4860   0024D6                     	if	0	;tblptru may be non-zero
  4861   0024D6                     	endif
  4862   0024D6                     	if	0	;tblptru may be non-zero
  4863   0024D6                     	endif
  4864   0024D6  0008               	tblrd		*
  4865   0024D8  50F5               	movf	tablat,w,c
  4866   0024DA  0900               	iorlw	0
  4867   0024DC  B4D8               	btfsc	status,2,c
  4868   0024DE  EF73  F012         	goto	u6961
  4869   0024E2  EF75  F012         	goto	u6960
  4870   0024E6                     u6961:
  4871   0024E6  EF92  F012         	goto	l6067
  4872   0024EA                     u6960:
  4873   0024EA  5007               	movf	strncmp@n^0,w,c
  4874   0024EC  1008               	iorwf	(strncmp@n+1)^0,w,c
  4875   0024EE  B4D8               	btfsc	status,2,c
  4876   0024F0  EF7C  F012         	goto	u6971
  4877   0024F4  EF7E  F012         	goto	u6970
  4878   0024F8                     u6971:
  4879   0024F8  EF92  F012         	goto	l6067
  4880   0024FC                     u6970:
  4881   0024FC  C003  FFD9         	movff	strncmp@l,fsr2l
  4882   002500  C004  FFDA         	movff	strncmp@l+1,fsr2h
  4883   002504  50DF               	movf	indf2,w,c
  4884   002506  6E09               	movwf	??_strncmp^0,c
  4885   002508  C005  FFF6         	movff	strncmp@r,tblptrl
  4886   00250C  C006  FFF7         	movff	strncmp@r+1,tblptrh
  4887   002510                     	if	0	;tblptru may be non-zero
  4888   002510                     	endif
  4889   002510                     	if	0	;tblptru may be non-zero
  4890   002510                     	endif
  4891   002510  0008               	tblrd		*
  4892   002512  50F5               	movf	tablat,w,c
  4893   002514  1809               	xorwf	??_strncmp^0,w,c
  4894   002516  B4D8               	btfsc	status,2,c
  4895   002518  EF90  F012         	goto	u6981
  4896   00251C  EF92  F012         	goto	u6980
  4897   002520                     u6981:
  4898   002520  EF54  F012         	goto	l6057
  4899   002524                     u6980:
  4900   002524                     l6067:
  4901   002524  C003  FFD9         	movff	strncmp@l,fsr2l
  4902   002528  C004  FFDA         	movff	strncmp@l+1,fsr2h
  4903   00252C  50DF               	movf	indf2,w,c
  4904   00252E  6E09               	movwf	??_strncmp^0,c
  4905   002530  C005  FFF6         	movff	strncmp@r,tblptrl
  4906   002534  C006  FFF7         	movff	strncmp@r+1,tblptrh
  4907   002538                     	if	0	;tblptru may be non-zero
  4908   002538                     	endif
  4909   002538                     	if	0	;tblptru may be non-zero
  4910   002538                     	endif
  4911   002538  0008               	tblrd		*
  4912   00253A  50F5               	movf	tablat,w,c
  4913   00253C  5C09               	subwf	??_strncmp^0,w,c
  4914   00253E  6E03               	movwf	?_strncmp^0,c
  4915   002540  6A04               	clrf	(?_strncmp+1)^0,c
  4916   002542  A0D8               	btfss	status,0,c
  4917   002544  0604               	decf	(?_strncmp+1)^0,f,c
  4918   002546                     l1524:
  4919   002546  0012               	return		;funcret
  4920   002548                     __end_of_strncmp:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _strlen *****************
  4924 ;; Defined at:
  4925 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  s               2    2[COMRAM] PTR const unsigned char 
  4928 ;;		 -> STR_28(6), STR_18(6), 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  a               2    4[COMRAM] PTR const unsigned char 
  4931 ;;		 -> STR_28(6), STR_18(6), 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  2    2[COMRAM] unsigned int 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;Total ram usage:        4 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; Hardware stack levels required when called: 1
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_extract_two_pid_bytes
  4952 ;;		_strstr
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text17
  4957   0032C0                     __ptext17:
  4958                           	callstack 0
  4959   0032C0                     _strlen:
  4960                           	callstack 24
  4961   0032C0  C003  F005         	movff	strlen@s,strlen@a
  4962   0032C4  C004  F006         	movff	strlen@s+1,strlen@a+1
  4963   0032C8  EF68  F019         	goto	l5907
  4964   0032CC                     l5905:
  4965   0032CC  4A03               	infsnz	strlen@s^0,f,c
  4966   0032CE  2A04               	incf	(strlen@s+1)^0,f,c
  4967   0032D0                     l5907:
  4968   0032D0  C003  FFF6         	movff	strlen@s,tblptrl
  4969   0032D4  C004  FFF7         	movff	strlen@s+1,tblptrh
  4970   0032D8                     	if	0	;tblptru may be non-zero
  4971   0032D8                     	endif
  4972   0032D8                     	if	0	;tblptru may be non-zero
  4973   0032D8                     	endif
  4974   0032D8  0008               	tblrd		*
  4975   0032DA  50F5               	movf	tablat,w,c
  4976   0032DC  0900               	iorlw	0
  4977   0032DE  A4D8               	btfss	status,2,c
  4978   0032E0  EF74  F019         	goto	u6751
  4979   0032E4  EF76  F019         	goto	u6750
  4980   0032E8                     u6751:
  4981   0032E8  EF66  F019         	goto	l5905
  4982   0032EC                     u6750:
  4983   0032EC  5005               	movf	strlen@a^0,w,c
  4984   0032EE  5C03               	subwf	strlen@s^0,w,c
  4985   0032F0  6E03               	movwf	?_strlen^0,c
  4986   0032F2  5006               	movf	(strlen@a+1)^0,w,c
  4987   0032F4  5804               	subwfb	(strlen@s+1)^0,w,c
  4988   0032F6  6E04               	movwf	(?_strlen+1)^0,c
  4989   0032F8  0012               	return		;funcret
  4990   0032FA                     __end_of_strlen:
  4991                           	callstack 0
  4992                           
  4993 ;; *************** function _strchr *****************
  4994 ;; Defined at:
  4995 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  s               2    2[COMRAM] PTR const unsigned char 
  4998 ;;		 -> NULL(0), buffer(256), 
  4999 ;;  c               2    4[COMRAM] int 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  2    2[COMRAM] PTR unsigned char 
  5004 ;; Registers used:
  5005 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;Total ram usage:        5 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 1
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_print_Vbatt
  5022 ;;		_strstr
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text18
  5027   00316E                     __ptext18:
  5028                           	callstack 0
  5029   00316E                     _strchr:
  5030                           	callstack 26
  5031   00316E                     l1495:
  5032   00316E  C003  FFD9         	movff	strchr@s,fsr2l
  5033   003172  C004  FFDA         	movff	strchr@s+1,fsr2h
  5034   003176  5005               	movf	strchr@c^0,w,c
  5035   003178  18DE               	xorwf	postinc2,w,c
  5036   00317A  A4D8               	btfss	status,2,c
  5037   00317C  EFC2  F018         	goto	u6761
  5038   003180  EFC4  F018         	goto	u6760
  5039   003184                     u6761:
  5040   003184  EFCA  F018         	goto	l5919
  5041   003188                     u6760:
  5042   003188  C003  F003         	movff	strchr@s,?_strchr
  5043   00318C  C004  F004         	movff	strchr@s+1,?_strchr+1
  5044   003190  EFDC  F018         	goto	l1497
  5045   003194                     l5919:
  5046   003194  C003  FFD9         	movff	strchr@s,fsr2l
  5047   003198  C004  FFDA         	movff	strchr@s+1,fsr2h
  5048   00319C  4A03               	infsnz	strchr@s^0,f,c
  5049   00319E  2A04               	incf	(strchr@s+1)^0,f,c
  5050   0031A0  50DF               	movf	indf2,w,c
  5051   0031A2  A4D8               	btfss	status,2,c
  5052   0031A4  EFD6  F018         	goto	u6771
  5053   0031A8  EFD8  F018         	goto	u6770
  5054   0031AC                     u6771:
  5055   0031AC  EFB7  F018         	goto	l1495
  5056   0031B0                     u6770:
  5057   0031B0  0E00               	movlw	0
  5058   0031B2  6E03               	movwf	?_strchr^0,c
  5059   0031B4  0E00               	movlw	0
  5060   0031B6  6E04               	movwf	(?_strchr+1)^0,c
  5061   0031B8                     l1497:
  5062   0031B8  0012               	return		;funcret
  5063   0031BA                     __end_of_strchr:
  5064                           	callstack 0
  5065                           
  5066 ;; *************** function _display_system_info *****************
  5067 ;; Defined at:
  5068 ;;		line 633 in file "OBCII_PIC18F46K22.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;Total ram usage:        0 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; Hardware stack levels required when called: 6
  5089 ;; This function calls:
  5090 ;;		_LCD_cursor_set
  5091 ;;		_LCD_write_string
  5092 ;;		_print_ELMVer
  5093 ;;		_print_SAEVer
  5094 ;; This function is called by:
  5095 ;;		_main_menu
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text19
  5100   0032FA                     __ptext19:
  5101                           	callstack 0
  5102   0032FA                     _display_system_info:
  5103                           	callstack 23
  5104   0032FA                     
  5105                           ;OBCII_PIC18F46K22.c: 634:     LCD_cursor_set(1,4);
  5106   0032FA  0E04               	movlw	4
  5107   0032FC  6E06               	movwf	LCD_cursor_set@column^0,c
  5108   0032FE  0E01               	movlw	1
  5109   003300  EC2D  F018         	call	_LCD_cursor_set
  5110   003304                     
  5111                           ;OBCII_PIC18F46K22.c: 635:     LCD_write_string("            ");
  5112   003304  0E42               	movlw	low (STR_38+1)
  5113   003306  6E06               	movwf	LCD_write_string@string^0,c
  5114   003308  0EFF               	movlw	high (STR_38+1)
  5115   00330A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5116   00330C  ECE7  F016         	call	_LCD_write_string	;wreg free
  5117   003310                     
  5118                           ;OBCII_PIC18F46K22.c: 636:     LCD_cursor_set(2,5);
  5119   003310  0E05               	movlw	5
  5120   003312  6E06               	movwf	LCD_cursor_set@column^0,c
  5121   003314  0E02               	movlw	2
  5122   003316  EC2D  F018         	call	_LCD_cursor_set
  5123                           
  5124                           ;OBCII_PIC18F46K22.c: 637:     LCD_write_string("             ");
  5125   00331A  0E41               	movlw	low STR_38
  5126   00331C  6E06               	movwf	LCD_write_string@string^0,c
  5127   00331E  0EFF               	movlw	high STR_38
  5128   003320  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5129   003322  ECE7  F016         	call	_LCD_write_string	;wreg free
  5130                           
  5131                           ;OBCII_PIC18F46K22.c: 638:     print_ELMVer();
  5132   003326  EC5E  F016         	call	_print_ELMVer	;wreg free
  5133                           
  5134                           ;OBCII_PIC18F46K22.c: 639:     print_SAEVer();
  5135   00332A  EC15  F016         	call	_print_SAEVer	;wreg free
  5136   00332E  0012               	return		;funcret
  5137   003330                     __end_of_display_system_info:
  5138                           	callstack 0
  5139                           
  5140 ;; *************** function _print_SAEVer *****************
  5141 ;; Defined at:
  5142 ;;		line 606 in file "OBCII_PIC18F46K22.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;Total ram usage:        1 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 5
  5163 ;; This function calls:
  5164 ;;		_LCD_clear
  5165 ;;		_LCD_cursor_set
  5166 ;;		_LCD_write_string
  5167 ;;		_UART1_SendString
  5168 ;;		_clear_parsing_notif
  5169 ;;		_display_mm
  5170 ;;		_parsing_notif
  5171 ;; This function is called by:
  5172 ;;		_display_system_info
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text20
  5177   002C2A                     __ptext20:
  5178                           	callstack 0
  5179   002C2A                     _print_SAEVer:
  5180                           	callstack 23
  5181   002C2A                     
  5182                           ;OBCII_PIC18F46K22.c: 607:     UART1_SendString("0108\r");
  5183   002C2A  0EA6               	movlw	low STR_35
  5184   002C2C  6E04               	movwf	UART1_SendString@string^0,c
  5185   002C2E  0EFF               	movlw	high STR_35
  5186   002C30  6E05               	movwf	(UART1_SendString@string+1)^0,c
  5187   002C32  EC8C  F018         	call	_UART1_SendString	;wreg free
  5188                           
  5189                           ;OBCII_PIC18F46K22.c: 609:     while(!message_complete) {
  5190   002C36  EF3E  F016         	goto	l6425
  5191   002C3A                     l306:
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;OBCII_PIC18F46K22.c: 611:         if (PORTCbits.RC5 == 0) {
  5195   002C3A  BA82               	btfsc	130,5,c	;volatile
  5196   002C3C  EF22  F016         	goto	u7371
  5197   002C40  EF24  F016         	goto	u7370
  5198   002C44                     u7371:
  5199   002C44  EF3C  F016         	goto	l6423
  5200   002C48                     u7370:
  5201   002C48                     
  5202                           ; BSR set to: 0
  5203                           ;OBCII_PIC18F46K22.c: 612:             _delay((unsigned long)((20)*(16000000/4000.0)));
  5204   002C48  0E68               	movlw	104
  5205   002C4A  6E0B               	movwf	??_print_SAEVer^0,c
  5206   002C4C  0EE4               	movlw	228
  5207   002C4E                     u8107:
  5208   002C4E  2EE8               	decfsz	wreg,f,c
  5209   002C50  D7FE               	bra	u8107
  5210   002C52  2E0B               	decfsz	??_print_SAEVer^0,f,c
  5211   002C54  D7FC               	bra	u8107
  5212   002C56  D000               	nop2	
  5213   002C58                     
  5214                           ;OBCII_PIC18F46K22.c: 613:             if (PORTCbits.RC5 == 0) {
  5215   002C58  BA82               	btfsc	130,5,c	;volatile
  5216   002C5A  EF31  F016         	goto	u7381
  5217   002C5E  EF33  F016         	goto	u7380
  5218   002C62                     u7381:
  5219   002C62  EF3C  F016         	goto	l6423
  5220   002C66                     u7380:
  5221   002C66                     
  5222                           ;OBCII_PIC18F46K22.c: 614:                 LCD_clear();
  5223   002C66  ECF3  F019         	call	_LCD_clear	;wreg free
  5224   002C6A                     
  5225                           ;OBCII_PIC18F46K22.c: 615:                 display_mm();
  5226   002C6A  ECB3  F019         	call	_display_mm	;wreg free
  5227   002C6E                     
  5228                           ;OBCII_PIC18F46K22.c: 616:                 menu_sel = -1;
  5229   002C6E  0100               	movlb	0	; () banked
  5230   002C70  69F8               	setf	_menu_sel& (0+255),b
  5231   002C72  69F9               	setf	(_menu_sel+1)& (0+255),b
  5232                           
  5233                           ;OBCII_PIC18F46K22.c: 617:                 break;
  5234   002C74  EF47  F016         	goto	l6427
  5235   002C78                     l6423:
  5236                           
  5237                           ;OBCII_PIC18F46K22.c: 620:         parsing_notif();
  5238   002C78  EC02  F01A         	call	_parsing_notif	;wreg free
  5239   002C7C                     l6425:
  5240                           
  5241                           ;OBCII_PIC18F46K22.c: 609:     while(!message_complete) {
  5242   002C7C  0100               	movlb	0	; () banked
  5243   002C7E  51D5               	movf	_message_complete& (0+255),w,b	;volatile
  5244   002C80  B4D8               	btfsc	status,2,c
  5245   002C82  EF45  F016         	goto	u7391
  5246   002C86  EF47  F016         	goto	u7390
  5247   002C8A                     u7391:
  5248   002C8A  EF1D  F016         	goto	l306
  5249   002C8E                     u7390:
  5250   002C8E                     l6427:
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;OBCII_PIC18F46K22.c: 622:     clear_parsing_notif();
  5254   002C8E  EC0E  F01A         	call	_clear_parsing_notif	;wreg free
  5255   002C92                     
  5256                           ;OBCII_PIC18F46K22.c: 624:     LCD_cursor_set(2,1);
  5257   002C92  0E01               	movlw	1
  5258   002C94  6E06               	movwf	LCD_cursor_set@column^0,c
  5259   002C96  0E02               	movlw	2
  5260   002C98  EC2D  F018         	call	_LCD_cursor_set
  5261   002C9C                     
  5262                           ;OBCII_PIC18F46K22.c: 625:     LCD_write_string("SAE:");
  5263   002C9C  0EDB               	movlw	low STR_36
  5264   002C9E  6E06               	movwf	LCD_write_string@string^0,c
  5265   002CA0  0EFF               	movlw	high STR_36
  5266   002CA2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5267   002CA4  ECE7  F016         	call	_LCD_write_string	;wreg free
  5268   002CA8                     
  5269                           ;OBCII_PIC18F46K22.c: 626:     LCD_write_string(buffer);
  5270   002CA8  0E00               	movlw	low _buffer
  5271   002CAA  6E06               	movwf	LCD_write_string@string^0,c
  5272   002CAC  0E02               	movlw	high _buffer
  5273   002CAE  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5274   002CB0  ECE7  F016         	call	_LCD_write_string	;wreg free
  5275   002CB4                     
  5276                           ;OBCII_PIC18F46K22.c: 629:     buffer_count = 0;
  5277   002CB4  0100               	movlb	0	; () banked
  5278   002CB6  6BD7               	clrf	_buffer_count& (0+255),b
  5279   002CB8                     
  5280                           ; BSR set to: 0
  5281                           ;OBCII_PIC18F46K22.c: 630:     message_complete = 0;
  5282   002CB8  6BD5               	clrf	_message_complete& (0+255),b	;volatile
  5283   002CBA                     
  5284                           ; BSR set to: 0
  5285   002CBA  0012               	return		;funcret
  5286   002CBC                     __end_of_print_SAEVer:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function _print_ELMVer *****************
  5290 ;; Defined at:
  5291 ;;		line 578 in file "OBCII_PIC18F46K22.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;Total ram usage:        1 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 5
  5312 ;; This function calls:
  5313 ;;		_LCD_clear
  5314 ;;		_LCD_cursor_set
  5315 ;;		_LCD_write_string
  5316 ;;		_UART1_SendString
  5317 ;;		_clear_parsing_notif
  5318 ;;		_display_mm
  5319 ;;		_parsing_notif
  5320 ;; This function is called by:
  5321 ;;		_display_system_info
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text21
  5326   002CBC                     __ptext21:
  5327                           	callstack 0
  5328   002CBC                     _print_ELMVer:
  5329                           	callstack 23
  5330   002CBC                     
  5331                           ;OBCII_PIC18F46K22.c: 580:     UART1_SendString("ATI\r");
  5332   002CBC  0ED6               	movlw	low STR_5
  5333   002CBE  6E04               	movwf	UART1_SendString@string^0,c
  5334   002CC0  0EFF               	movlw	high STR_5
  5335   002CC2  6E05               	movwf	(UART1_SendString@string+1)^0,c
  5336   002CC4  EC8C  F018         	call	_UART1_SendString	;wreg free
  5337                           
  5338                           ;OBCII_PIC18F46K22.c: 582:     while(!message_complete) {
  5339   002CC8  EF87  F016         	goto	l6397
  5340   002CCC                     l298:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;OBCII_PIC18F46K22.c: 584:         if (PORTCbits.RC5 == 0) {
  5344   002CCC  BA82               	btfsc	130,5,c	;volatile
  5345   002CCE  EF6B  F016         	goto	u7341
  5346   002CD2  EF6D  F016         	goto	u7340
  5347   002CD6                     u7341:
  5348   002CD6  EF85  F016         	goto	l6395
  5349   002CDA                     u7340:
  5350   002CDA                     
  5351                           ; BSR set to: 0
  5352                           ;OBCII_PIC18F46K22.c: 585:             _delay((unsigned long)((20)*(16000000/4000.0)));
  5353   002CDA  0E68               	movlw	104
  5354   002CDC  6E0B               	movwf	??_print_ELMVer^0,c
  5355   002CDE  0EE4               	movlw	228
  5356   002CE0                     u8117:
  5357   002CE0  2EE8               	decfsz	wreg,f,c
  5358   002CE2  D7FE               	bra	u8117
  5359   002CE4  2E0B               	decfsz	??_print_ELMVer^0,f,c
  5360   002CE6  D7FC               	bra	u8117
  5361   002CE8  D000               	nop2	
  5362   002CEA                     
  5363                           ;OBCII_PIC18F46K22.c: 586:             if (PORTCbits.RC5 == 0) {
  5364   002CEA  BA82               	btfsc	130,5,c	;volatile
  5365   002CEC  EF7A  F016         	goto	u7351
  5366   002CF0  EF7C  F016         	goto	u7350
  5367   002CF4                     u7351:
  5368   002CF4  EF85  F016         	goto	l6395
  5369   002CF8                     u7350:
  5370   002CF8                     
  5371                           ;OBCII_PIC18F46K22.c: 587:                 LCD_clear();
  5372   002CF8  ECF3  F019         	call	_LCD_clear	;wreg free
  5373   002CFC                     
  5374                           ;OBCII_PIC18F46K22.c: 588:                 display_mm();
  5375   002CFC  ECB3  F019         	call	_display_mm	;wreg free
  5376   002D00                     
  5377                           ;OBCII_PIC18F46K22.c: 589:                 menu_sel = -1;
  5378   002D00  0100               	movlb	0	; () banked
  5379   002D02  69F8               	setf	_menu_sel& (0+255),b
  5380   002D04  69F9               	setf	(_menu_sel+1)& (0+255),b
  5381                           
  5382                           ;OBCII_PIC18F46K22.c: 590:                 break;
  5383   002D06  EF90  F016         	goto	l6399
  5384   002D0A                     l6395:
  5385                           
  5386                           ;OBCII_PIC18F46K22.c: 593:         parsing_notif();
  5387   002D0A  EC02  F01A         	call	_parsing_notif	;wreg free
  5388   002D0E                     l6397:
  5389                           
  5390                           ;OBCII_PIC18F46K22.c: 582:     while(!message_complete) {
  5391   002D0E  0100               	movlb	0	; () banked
  5392   002D10  51D5               	movf	_message_complete& (0+255),w,b	;volatile
  5393   002D12  B4D8               	btfsc	status,2,c
  5394   002D14  EF8E  F016         	goto	u7361
  5395   002D18  EF90  F016         	goto	u7360
  5396   002D1C                     u7361:
  5397   002D1C  EF66  F016         	goto	l298
  5398   002D20                     u7360:
  5399   002D20                     l6399:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;OBCII_PIC18F46K22.c: 595:     clear_parsing_notif();
  5403   002D20  EC0E  F01A         	call	_clear_parsing_notif	;wreg free
  5404   002D24                     
  5405                           ;OBCII_PIC18F46K22.c: 597:     LCD_cursor_set(1,1);
  5406   002D24  0E01               	movlw	1
  5407   002D26  6E06               	movwf	LCD_cursor_set@column^0,c
  5408   002D28  0E01               	movlw	1
  5409   002D2A  EC2D  F018         	call	_LCD_cursor_set
  5410   002D2E                     
  5411                           ;OBCII_PIC18F46K22.c: 598:     LCD_write_string("OS:");
  5412   002D2E  0EE8               	movlw	low STR_34
  5413   002D30  6E06               	movwf	LCD_write_string@string^0,c
  5414   002D32  0EFF               	movlw	high STR_34
  5415   002D34  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5416   002D36  ECE7  F016         	call	_LCD_write_string	;wreg free
  5417   002D3A                     
  5418                           ;OBCII_PIC18F46K22.c: 599:     LCD_write_string(buffer);
  5419   002D3A  0E00               	movlw	low _buffer
  5420   002D3C  6E06               	movwf	LCD_write_string@string^0,c
  5421   002D3E  0E02               	movlw	high _buffer
  5422   002D40  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5423   002D42  ECE7  F016         	call	_LCD_write_string	;wreg free
  5424   002D46                     
  5425                           ;OBCII_PIC18F46K22.c: 602:     buffer_count = 0;
  5426   002D46  0100               	movlb	0	; () banked
  5427   002D48  6BD7               	clrf	_buffer_count& (0+255),b
  5428   002D4A                     
  5429                           ; BSR set to: 0
  5430                           ;OBCII_PIC18F46K22.c: 603:     message_complete = 0;
  5431   002D4A  6BD5               	clrf	_message_complete& (0+255),b	;volatile
  5432   002D4C                     
  5433                           ; BSR set to: 0
  5434   002D4C  0012               	return		;funcret
  5435   002D4E                     __end_of_print_ELMVer:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function _diagnostic_trouble_codes *****************
  5439 ;; Defined at:
  5440 ;;		line 662 in file "OBCII_PIC18F46K22.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  byte2_str       3   64[BANK0 ] unsigned char [3]
  5445 ;;  byte1_str       3   61[BANK0 ] unsigned char [3]
  5446 ;;  byte2           2   69[BANK0 ] unsigned int 
  5447 ;;  byte1           2   67[BANK0 ] unsigned int 
  5448 ;;  i               2   73[BANK0 ] int 
  5449 ;;  dtc_index       2   71[BANK0 ] int 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;Total ram usage:       16 bytes
  5464 ;; Hardware stack levels used: 1
  5465 ;; Hardware stack levels required when called: 10
  5466 ;; This function calls:
  5467 ;;		_LCD_clear
  5468 ;;		_LCD_cursor_set
  5469 ;;		_LCD_write_string
  5470 ;;		_UART1_SendString
  5471 ;;		_clear_parsing_notif
  5472 ;;		_decode_dtc
  5473 ;;		_parsing_notif
  5474 ;;		_sscanf
  5475 ;; This function is called by:
  5476 ;;		_main_menu
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text22
  5481   0009B0                     __ptext22:
  5482                           	callstack 0
  5483   0009B0                     _diagnostic_trouble_codes:
  5484                           	callstack 19
  5485   0009B0                     
  5486                           ;OBCII_PIC18F46K22.c: 664:     int dtc_index = 0;
  5487   0009B0  0E00               	movlw	0
  5488   0009B2  0100               	movlb	0	; () banked
  5489   0009B4  6FA8               	movwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),b
  5490   0009B6  0E00               	movlw	0
  5491   0009B8  6FA7               	movwf	diagnostic_trouble_codes@dtc_index& (0+255),b
  5492                           
  5493                           ;OBCII_PIC18F46K22.c: 665:     int i = 0;
  5494   0009BA  0E00               	movlw	0
  5495   0009BC  6FAA               	movwf	(diagnostic_trouble_codes@i+1)& (0+255),b
  5496   0009BE  0E00               	movlw	0
  5497   0009C0  6FA9               	movwf	diagnostic_trouble_codes@i& (0+255),b
  5498   0009C2                     
  5499                           ; BSR set to: 0
  5500                           ;OBCII_PIC18F46K22.c: 667:     LCD_cursor_set(1,1);
  5501   0009C2  0E01               	movlw	1
  5502   0009C4  6E06               	movwf	LCD_cursor_set@column^0,c
  5503   0009C6  0E01               	movlw	1
  5504   0009C8  EC2D  F018         	call	_LCD_cursor_set
  5505   0009CC                     
  5506                           ;OBCII_PIC18F46K22.c: 668:     LCD_write_string("DTC's Requested");
  5507   0009CC  0E13               	movlw	low STR_40
  5508   0009CE  6E06               	movwf	LCD_write_string@string^0,c
  5509   0009D0  0EFF               	movlw	high STR_40
  5510   0009D2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5511   0009D4  ECE7  F016         	call	_LCD_write_string	;wreg free
  5512   0009D8                     
  5513                           ;OBCII_PIC18F46K22.c: 669:     LCD_cursor_set(2,1);
  5514   0009D8  0E01               	movlw	1
  5515   0009DA  6E06               	movwf	LCD_cursor_set@column^0,c
  5516   0009DC  0E02               	movlw	2
  5517   0009DE  EC2D  F018         	call	_LCD_cursor_set
  5518   0009E2                     
  5519                           ;OBCII_PIC18F46K22.c: 670:     LCD_write_string("Loading...");
  5520   0009E2  0E79               	movlw	low STR_41
  5521   0009E4  6E06               	movwf	LCD_write_string@string^0,c
  5522   0009E6  0EFF               	movlw	high STR_41
  5523   0009E8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5524   0009EA  ECE7  F016         	call	_LCD_write_string	;wreg free
  5525   0009EE                     
  5526                           ;OBCII_PIC18F46K22.c: 671:     UART1_SendString("03\r");
  5527   0009EE  0EE0               	movlw	low STR_42
  5528   0009F0  6E04               	movwf	UART1_SendString@string^0,c
  5529   0009F2  0EFF               	movlw	high STR_42
  5530   0009F4  6E05               	movwf	(UART1_SendString@string+1)^0,c
  5531   0009F6  EC8C  F018         	call	_UART1_SendString	;wreg free
  5532                           
  5533                           ;OBCII_PIC18F46K22.c: 673:     while (!message_complete) {
  5534   0009FA  EF01  F005         	goto	l6521
  5535   0009FE                     l6519:
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;OBCII_PIC18F46K22.c: 674:         parsing_notif();
  5539   0009FE  EC02  F01A         	call	_parsing_notif	;wreg free
  5540   000A02                     l6521:
  5541                           
  5542                           ;OBCII_PIC18F46K22.c: 673:     while (!message_complete) {
  5543   000A02  0100               	movlb	0	; () banked
  5544   000A04  51D5               	movf	_message_complete& (0+255),w,b	;volatile
  5545   000A06  B4D8               	btfsc	status,2,c
  5546   000A08  EF08  F005         	goto	u7471
  5547   000A0C  EF0A  F005         	goto	u7470
  5548   000A10                     u7471:
  5549   000A10  EFFF  F004         	goto	l6519
  5550   000A14                     u7470:
  5551   000A14                     
  5552                           ; BSR set to: 0
  5553                           ;OBCII_PIC18F46K22.c: 676:     clear_parsing_notif();
  5554   000A14  EC0E  F01A         	call	_clear_parsing_notif	;wreg free
  5555                           
  5556                           ;OBCII_PIC18F46K22.c: 679:     while (!(buffer[i] == '4' && buffer[i+1] == '3')) {
  5557   000A18  EF30  F005         	goto	l6531
  5558   000A1C                     l6525:
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;OBCII_PIC18F46K22.c: 680:         i++;
  5562   000A1C  4BA9               	infsnz	diagnostic_trouble_codes@i& (0+255),f,b
  5563   000A1E  2BAA               	incf	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5564   000A20                     
  5565                           ; BSR set to: 0
  5566                           ;OBCII_PIC18F46K22.c: 681:         if (buffer[i] == '>' || buffer[i+1] == '>') return;
  5567   000A20  0E00               	movlw	low _buffer
  5568   000A22  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5569   000A24  6ED9               	movwf	fsr2l,c
  5570   000A26  0E02               	movlw	high _buffer
  5571   000A28  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5572   000A2A  6EDA               	movwf	fsr2h,c
  5573   000A2C  0E3E               	movlw	62
  5574   000A2E  18DE               	xorwf	postinc2,w,c
  5575   000A30  B4D8               	btfsc	status,2,c
  5576   000A32  EF1D  F005         	goto	u7481
  5577   000A36  EF1F  F005         	goto	u7480
  5578   000A3A                     u7481:
  5579   000A3A  EF6F  F006         	goto	l334
  5580   000A3E                     u7480:
  5581   000A3E                     
  5582                           ; BSR set to: 0
  5583   000A3E  0E01               	movlw	low (_buffer+1)
  5584   000A40  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5585   000A42  6ED9               	movwf	fsr2l,c
  5586   000A44  0E02               	movlw	high (_buffer+1)
  5587   000A46  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5588   000A48  6EDA               	movwf	fsr2h,c
  5589   000A4A  0E3E               	movlw	62
  5590   000A4C  18DE               	xorwf	postinc2,w,c
  5591   000A4E  A4D8               	btfss	status,2,c
  5592   000A50  EF2C  F005         	goto	u7491
  5593   000A54  EF2E  F005         	goto	u7490
  5594   000A58                     u7491:
  5595   000A58  EF30  F005         	goto	l6531
  5596   000A5C                     u7490:
  5597   000A5C  EF6F  F006         	goto	l334
  5598   000A60                     l6531:
  5599                           
  5600                           ;OBCII_PIC18F46K22.c: 679:     while (!(buffer[i] == '4' && buffer[i+1] == '3')) {
  5601   000A60  0E00               	movlw	low _buffer
  5602   000A62  0100               	movlb	0	; () banked
  5603   000A64  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5604   000A66  6ED9               	movwf	fsr2l,c
  5605   000A68  0E02               	movlw	high _buffer
  5606   000A6A  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5607   000A6C  6EDA               	movwf	fsr2h,c
  5608   000A6E  0E34               	movlw	52
  5609   000A70  18DE               	xorwf	postinc2,w,c
  5610   000A72  A4D8               	btfss	status,2,c
  5611   000A74  EF3E  F005         	goto	u7501
  5612   000A78  EF40  F005         	goto	u7500
  5613   000A7C                     u7501:
  5614   000A7C  EF0E  F005         	goto	l6525
  5615   000A80                     u7500:
  5616   000A80                     
  5617                           ; BSR set to: 0
  5618   000A80  0E01               	movlw	low (_buffer+1)
  5619   000A82  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5620   000A84  6ED9               	movwf	fsr2l,c
  5621   000A86  0E02               	movlw	high (_buffer+1)
  5622   000A88  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5623   000A8A  6EDA               	movwf	fsr2h,c
  5624   000A8C  0E33               	movlw	51
  5625   000A8E  18DE               	xorwf	postinc2,w,c
  5626   000A90  A4D8               	btfss	status,2,c
  5627   000A92  EF4D  F005         	goto	u7511
  5628   000A96  EF4F  F005         	goto	u7510
  5629   000A9A                     u7511:
  5630   000A9A  EF0E  F005         	goto	l6525
  5631   000A9E                     u7510:
  5632   000A9E                     
  5633                           ; BSR set to: 0
  5634                           ;OBCII_PIC18F46K22.c: 683:     i += 2;
  5635   000A9E  0E02               	movlw	2
  5636   000AA0  27A9               	addwf	diagnostic_trouble_codes@i& (0+255),f,b
  5637   000AA2  0E00               	movlw	0
  5638   000AA4  23AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5639                           
  5640                           ;OBCII_PIC18F46K22.c: 686:     while (buffer[i] != '>' && dtc_index < 10) {
  5641   000AA6  EF07  F006         	goto	l6569
  5642   000AAA                     l6537:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;OBCII_PIC18F46K22.c: 687:         if (buffer[i] == ' ' || buffer[i] == '\r' || buffer[i
      +                          ] == '\n') {
  5646   000AAA  0E00               	movlw	low _buffer
  5647   000AAC  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5648   000AAE  6ED9               	movwf	fsr2l,c
  5649   000AB0  0E02               	movlw	high _buffer
  5650   000AB2  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5651   000AB4  6EDA               	movwf	fsr2h,c
  5652   000AB6  0E20               	movlw	32
  5653   000AB8  18DE               	xorwf	postinc2,w,c
  5654   000ABA  B4D8               	btfsc	status,2,c
  5655   000ABC  EF62  F005         	goto	u7521
  5656   000AC0  EF64  F005         	goto	u7520
  5657   000AC4                     u7521:
  5658   000AC4  EF82  F005         	goto	l6543
  5659   000AC8                     u7520:
  5660   000AC8                     
  5661                           ; BSR set to: 0
  5662   000AC8  0E00               	movlw	low _buffer
  5663   000ACA  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5664   000ACC  6ED9               	movwf	fsr2l,c
  5665   000ACE  0E02               	movlw	high _buffer
  5666   000AD0  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5667   000AD2  6EDA               	movwf	fsr2h,c
  5668   000AD4  0E0D               	movlw	13
  5669   000AD6  18DE               	xorwf	postinc2,w,c
  5670   000AD8  B4D8               	btfsc	status,2,c
  5671   000ADA  EF71  F005         	goto	u7531
  5672   000ADE  EF73  F005         	goto	u7530
  5673   000AE2                     u7531:
  5674   000AE2  EF82  F005         	goto	l6543
  5675   000AE6                     u7530:
  5676   000AE6                     
  5677                           ; BSR set to: 0
  5678   000AE6  0E00               	movlw	low _buffer
  5679   000AE8  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5680   000AEA  6ED9               	movwf	fsr2l,c
  5681   000AEC  0E02               	movlw	high _buffer
  5682   000AEE  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5683   000AF0  6EDA               	movwf	fsr2h,c
  5684   000AF2  0E0A               	movlw	10
  5685   000AF4  18DE               	xorwf	postinc2,w,c
  5686   000AF6  A4D8               	btfss	status,2,c
  5687   000AF8  EF80  F005         	goto	u7541
  5688   000AFC  EF82  F005         	goto	u7540
  5689   000B00                     u7541:
  5690   000B00  EF86  F005         	goto	l6545
  5691   000B04                     u7540:
  5692   000B04                     l6543:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;OBCII_PIC18F46K22.c: 688:             i++;
  5696   000B04  4BA9               	infsnz	diagnostic_trouble_codes@i& (0+255),f,b
  5697   000B06  2BAA               	incf	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5698                           
  5699                           ;OBCII_PIC18F46K22.c: 689:             continue;
  5700   000B08  EF07  F006         	goto	l6569
  5701   000B0C                     l6545:
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;OBCII_PIC18F46K22.c: 692:         if (buffer[i+3] == '>') break;
  5705   000B0C  0E03               	movlw	low (_buffer+3)
  5706   000B0E  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5707   000B10  6ED9               	movwf	fsr2l,c
  5708   000B12  0E02               	movlw	high (_buffer+3)
  5709   000B14  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5710   000B16  6EDA               	movwf	fsr2h,c
  5711   000B18  0E3E               	movlw	62
  5712   000B1A  18DE               	xorwf	postinc2,w,c
  5713   000B1C  A4D8               	btfss	status,2,c
  5714   000B1E  EF93  F005         	goto	u7551
  5715   000B22  EF95  F005         	goto	u7550
  5716   000B26                     u7551:
  5717   000B26  EF97  F005         	goto	l6549
  5718   000B2A                     u7550:
  5719   000B2A  EF24  F006         	goto	l6573
  5720   000B2E                     l6549:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;OBCII_PIC18F46K22.c: 694:         char byte1_str[3] = { buffer[i], buffer[i+1], '>' };
  5724   000B2E  0E00               	movlw	0
  5725   000B30  6F9D               	movwf	diagnostic_trouble_codes@byte1_str& (0+255),b
  5726   000B32  0E00               	movlw	0
  5727   000B34  6F9E               	movwf	(diagnostic_trouble_codes@byte1_str+1)& (0+255),b
  5728   000B36  0E00               	movlw	0
  5729   000B38  6F9F               	movwf	(diagnostic_trouble_codes@byte1_str+2)& (0+255),b
  5730   000B3A                     
  5731                           ; BSR set to: 0
  5732   000B3A  0E00               	movlw	low _buffer
  5733   000B3C  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5734   000B3E  6ED9               	movwf	fsr2l,c
  5735   000B40  0E02               	movlw	high _buffer
  5736   000B42  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5737   000B44  6EDA               	movwf	fsr2h,c
  5738   000B46  50DF               	movf	indf2,w,c
  5739   000B48  6F9D               	movwf	diagnostic_trouble_codes@byte1_str& (0+255),b
  5740   000B4A                     
  5741                           ; BSR set to: 0
  5742   000B4A  0E01               	movlw	low (_buffer+1)
  5743   000B4C  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5744   000B4E  6ED9               	movwf	fsr2l,c
  5745   000B50  0E02               	movlw	high (_buffer+1)
  5746   000B52  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5747   000B54  6EDA               	movwf	fsr2h,c
  5748   000B56  50DF               	movf	indf2,w,c
  5749   000B58  6F9E               	movwf	(diagnostic_trouble_codes@byte1_str+1)& (0+255),b
  5750   000B5A  0E3E               	movlw	62
  5751   000B5C  6F9F               	movwf	(diagnostic_trouble_codes@byte1_str+2)& (0+255),b
  5752                           
  5753                           ;OBCII_PIC18F46K22.c: 695:         char byte2_str[3] = { buffer[i+2], buffer[i+3], '>' }
      +                          ;
  5754   000B5E  0E00               	movlw	0
  5755   000B60  6FA0               	movwf	diagnostic_trouble_codes@byte2_str& (0+255),b
  5756   000B62  0E00               	movlw	0
  5757   000B64  6FA1               	movwf	(diagnostic_trouble_codes@byte2_str+1)& (0+255),b
  5758   000B66  0E00               	movlw	0
  5759   000B68  6FA2               	movwf	(diagnostic_trouble_codes@byte2_str+2)& (0+255),b
  5760   000B6A                     
  5761                           ; BSR set to: 0
  5762   000B6A  0E02               	movlw	low (_buffer+2)
  5763   000B6C  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5764   000B6E  6ED9               	movwf	fsr2l,c
  5765   000B70  0E02               	movlw	high (_buffer+2)
  5766   000B72  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5767   000B74  6EDA               	movwf	fsr2h,c
  5768   000B76  50DF               	movf	indf2,w,c
  5769   000B78  6FA0               	movwf	diagnostic_trouble_codes@byte2_str& (0+255),b
  5770   000B7A                     
  5771                           ; BSR set to: 0
  5772   000B7A  0E03               	movlw	low (_buffer+3)
  5773   000B7C  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5774   000B7E  6ED9               	movwf	fsr2l,c
  5775   000B80  0E02               	movlw	high (_buffer+3)
  5776   000B82  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5777   000B84  6EDA               	movwf	fsr2h,c
  5778   000B86  50DF               	movf	indf2,w,c
  5779   000B88  6FA1               	movwf	(diagnostic_trouble_codes@byte2_str+1)& (0+255),b
  5780   000B8A  0E3E               	movlw	62
  5781   000B8C  6FA2               	movwf	(diagnostic_trouble_codes@byte2_str+2)& (0+255),b
  5782                           
  5783                           ;OBCII_PIC18F46K22.c: 696:         unsigned int byte1 = 0, byte2 = 0;
  5784   000B8E  0E00               	movlw	0
  5785   000B90  6FA4               	movwf	(diagnostic_trouble_codes@byte1+1)& (0+255),b
  5786   000B92  0E00               	movlw	0
  5787   000B94  6FA3               	movwf	diagnostic_trouble_codes@byte1& (0+255),b
  5788   000B96  0E00               	movlw	0
  5789   000B98  6FA6               	movwf	(diagnostic_trouble_codes@byte2+1)& (0+255),b
  5790   000B9A  0E00               	movlw	0
  5791   000B9C  6FA5               	movwf	diagnostic_trouble_codes@byte2& (0+255),b
  5792   000B9E                     
  5793                           ; BSR set to: 0
  5794                           ;OBCII_PIC18F46K22.c: 698:         sscanf(byte1_str, "%x", &byte1);
  5795   000B9E  0E9D               	movlw	low diagnostic_trouble_codes@byte1_str
  5796   000BA0  6F85               	movwf	sscanf@s& (0+255),b
  5797   000BA2  6B86               	clrf	(sscanf@s+1)& (0+255),b
  5798   000BA4  0ED3               	movlw	low (STR_15+3)
  5799   000BA6  6F87               	movwf	sscanf@fmt& (0+255),b
  5800   000BA8  0EFF               	movlw	high (STR_15+3)
  5801   000BAA  6F88               	movwf	(sscanf@fmt+1)& (0+255),b
  5802   000BAC  0EA3               	movlw	low diagnostic_trouble_codes@byte1
  5803   000BAE  6F89               	movwf	(?_sscanf+4)& (0+255),b
  5804   000BB0  6B8A               	clrf	(?_sscanf+5)& (0+255),b
  5805   000BB2  ECDD  F018         	call	_sscanf	;wreg free
  5806   000BB6                     
  5807                           ;OBCII_PIC18F46K22.c: 699:         sscanf(byte2_str, "%x", &byte2);
  5808   000BB6  0EA0               	movlw	low diagnostic_trouble_codes@byte2_str
  5809   000BB8  0100               	movlb	0	; () banked
  5810   000BBA  6F85               	movwf	sscanf@s& (0+255),b
  5811   000BBC  6B86               	clrf	(sscanf@s+1)& (0+255),b
  5812   000BBE  0ED3               	movlw	low (STR_15+3)
  5813   000BC0  6F87               	movwf	sscanf@fmt& (0+255),b
  5814   000BC2  0EFF               	movlw	high (STR_15+3)
  5815   000BC4  6F88               	movwf	(sscanf@fmt+1)& (0+255),b
  5816   000BC6  0EA5               	movlw	low diagnostic_trouble_codes@byte2
  5817   000BC8  6F89               	movwf	(?_sscanf+4)& (0+255),b
  5818   000BCA  6B8A               	clrf	(?_sscanf+5)& (0+255),b
  5819   000BCC  ECDD  F018         	call	_sscanf	;wreg free
  5820   000BD0                     
  5821                           ;OBCII_PIC18F46K22.c: 700:         decode_dtc((uint8_t)byte1, (uint8_t)byte2, dtc_codes[
      +                          dtc_index]);
  5822   000BD0  C0A3  F04E         	movff	diagnostic_trouble_codes@byte1,decode_dtc@b1
  5823   000BD4  6A4F               	clrf	(decode_dtc@b1+1)^0,c
  5824   000BD6  C0A5  F050         	movff	diagnostic_trouble_codes@byte2,decode_dtc@b2
  5825   000BDA  6A51               	clrf	(decode_dtc@b2+1)^0,c
  5826   000BDC  0E06               	movlw	6
  5827   000BDE  0100               	movlb	0	; () banked
  5828   000BE0  03A7               	mulwf	diagnostic_trouble_codes@dtc_index& (0+255),b
  5829   000BE2  CFF3 F09B          	movff	prodl,??_diagnostic_trouble_codes
  5830   000BE6  CFF4 F09C          	movff	prodh,??_diagnostic_trouble_codes+1
  5831   000BEA  03A8               	mulwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),b
  5832   000BEC  50F3               	movf	prodl,w,c
  5833   000BEE  279C               	addwf	(??_diagnostic_trouble_codes+1)& (0+255),f,b
  5834   000BF0  0E00               	movlw	low _dtc_codes
  5835   000BF2  259B               	addwf	??_diagnostic_trouble_codes& (0+255),w,b
  5836   000BF4  6E52               	movwf	decode_dtc@dtc^0,c
  5837   000BF6  0E01               	movlw	high _dtc_codes
  5838   000BF8  219C               	addwfc	(??_diagnostic_trouble_codes+1)& (0+255),w,b
  5839   000BFA  6E53               	movwf	(decode_dtc@dtc+1)^0,c
  5840   000BFC  ECD4  F011         	call	_decode_dtc	;wreg free
  5841   000C00                     
  5842                           ;OBCII_PIC18F46K22.c: 701:         dtc_index++;
  5843   000C00  0100               	movlb	0	; () banked
  5844   000C02  4BA7               	infsnz	diagnostic_trouble_codes@dtc_index& (0+255),f,b
  5845   000C04  2BA8               	incf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),f,b
  5846   000C06                     
  5847                           ; BSR set to: 0
  5848                           ;OBCII_PIC18F46K22.c: 702:         i += 4;
  5849   000C06  0E04               	movlw	4
  5850   000C08  27A9               	addwf	diagnostic_trouble_codes@i& (0+255),f,b
  5851   000C0A  0E00               	movlw	0
  5852   000C0C  23AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),f,b
  5853   000C0E                     l6569:
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;OBCII_PIC18F46K22.c: 686:     while (buffer[i] != '>' && dtc_index < 10) {
  5857   000C0E  0E00               	movlw	low _buffer
  5858   000C10  25A9               	addwf	diagnostic_trouble_codes@i& (0+255),w,b
  5859   000C12  6ED9               	movwf	fsr2l,c
  5860   000C14  0E02               	movlw	high _buffer
  5861   000C16  21AA               	addwfc	(diagnostic_trouble_codes@i+1)& (0+255),w,b
  5862   000C18  6EDA               	movwf	fsr2h,c
  5863   000C1A  0E3E               	movlw	62
  5864   000C1C  18DE               	xorwf	postinc2,w,c
  5865   000C1E  B4D8               	btfsc	status,2,c
  5866   000C20  EF14  F006         	goto	u7561
  5867   000C24  EF16  F006         	goto	u7560
  5868   000C28                     u7561:
  5869   000C28  EF24  F006         	goto	l6573
  5870   000C2C                     u7560:
  5871   000C2C                     
  5872                           ; BSR set to: 0
  5873   000C2C  BFA8               	btfsc	(diagnostic_trouble_codes@dtc_index+1)& (0+255),7,b
  5874   000C2E  EF22  F006         	goto	u7571
  5875   000C32  51A8               	movf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),w,b
  5876   000C34  E109               	bnz	u7570
  5877   000C36  0E0A               	movlw	10
  5878   000C38  5DA7               	subwf	diagnostic_trouble_codes@dtc_index& (0+255),w,b
  5879   000C3A  A0D8               	btfss	status,0,c
  5880   000C3C  EF22  F006         	goto	u7571
  5881   000C40  EF24  F006         	goto	u7570
  5882   000C44                     u7571:
  5883   000C44  EF55  F005         	goto	l6537
  5884   000C48                     u7570:
  5885   000C48                     l6573:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;OBCII_PIC18F46K22.c: 706:     if (dtc_index == 0) {
  5889   000C48  51A7               	movf	diagnostic_trouble_codes@dtc_index& (0+255),w,b
  5890   000C4A  11A8               	iorwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),w,b
  5891   000C4C  A4D8               	btfss	status,2,c
  5892   000C4E  EF2B  F006         	goto	u7581
  5893   000C52  EF2D  F006         	goto	u7580
  5894   000C56                     u7581:
  5895   000C56  EF3A  F006         	goto	l6579
  5896   000C5A                     u7580:
  5897   000C5A                     
  5898                           ; BSR set to: 0
  5899                           ;OBCII_PIC18F46K22.c: 707:         LCD_clear();
  5900   000C5A  ECF3  F019         	call	_LCD_clear	;wreg free
  5901                           
  5902                           ;OBCII_PIC18F46K22.c: 708:         LCD_cursor_set(1,1);
  5903   000C5E  0E01               	movlw	1
  5904   000C60  6E06               	movwf	LCD_cursor_set@column^0,c
  5905   000C62  0E01               	movlw	1
  5906   000C64  EC2D  F018         	call	_LCD_cursor_set
  5907   000C68                     
  5908                           ;OBCII_PIC18F46K22.c: 709:         LCD_write_string("No DTCs Found");
  5909   000C68  0E6B               	movlw	low STR_45
  5910   000C6A  6E06               	movwf	LCD_write_string@string^0,c
  5911   000C6C  0EFF               	movlw	high STR_45
  5912   000C6E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5913   000C70  ECE7  F016         	call	_LCD_write_string	;wreg free
  5914   000C74                     l6579:
  5915                           
  5916                           ;OBCII_PIC18F46K22.c: 711:     if(dtc_index >= 1) {
  5917   000C74  0100               	movlb	0	; () banked
  5918   000C76  BFA8               	btfsc	(diagnostic_trouble_codes@dtc_index+1)& (0+255),7,b
  5919   000C78  EF46  F006         	goto	u7591
  5920   000C7C  51A8               	movf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),w,b
  5921   000C7E  E108               	bnz	u7590
  5922   000C80  05A7               	decf	diagnostic_trouble_codes@dtc_index& (0+255),w,b
  5923   000C82  A0D8               	btfss	status,0,c
  5924   000C84  EF46  F006         	goto	u7591
  5925   000C88  EF48  F006         	goto	u7590
  5926   000C8C                     u7591:
  5927   000C8C  EF6C  F006         	goto	l6589
  5928   000C90                     u7590:
  5929   000C90                     
  5930                           ; BSR set to: 0
  5931                           ;OBCII_PIC18F46K22.c: 712:             LCD_clear();
  5932   000C90  ECF3  F019         	call	_LCD_clear	;wreg free
  5933                           
  5934                           ;OBCII_PIC18F46K22.c: 713:             LCD_cursor_set(1,1);
  5935   000C94  0E01               	movlw	1
  5936   000C96  6E06               	movwf	LCD_cursor_set@column^0,c
  5937   000C98  0E01               	movlw	1
  5938   000C9A  EC2D  F018         	call	_LCD_cursor_set
  5939   000C9E                     
  5940                           ;OBCII_PIC18F46K22.c: 714:             LCD_write_string("DTC(s) Found:");
  5941   000C9E  0E4F               	movlw	low STR_46
  5942   000CA0  6E06               	movwf	LCD_write_string@string^0,c
  5943   000CA2  0EFF               	movlw	high STR_46
  5944   000CA4  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5945   000CA6  ECE7  F016         	call	_LCD_write_string	;wreg free
  5946   000CAA                     
  5947                           ;OBCII_PIC18F46K22.c: 715:             LCD_cursor_set(2,1);
  5948   000CAA  0E01               	movlw	1
  5949   000CAC  6E06               	movwf	LCD_cursor_set@column^0,c
  5950   000CAE  0E02               	movlw	2
  5951   000CB0  EC2D  F018         	call	_LCD_cursor_set
  5952   000CB4                     
  5953                           ;OBCII_PIC18F46K22.c: 717:             LCD_write_string(dtc_codes[dtc_index]);
  5954   000CB4  0E06               	movlw	6
  5955   000CB6  0100               	movlb	0	; () banked
  5956   000CB8  03A7               	mulwf	diagnostic_trouble_codes@dtc_index& (0+255),b
  5957   000CBA  CFF3 F09B          	movff	prodl,??_diagnostic_trouble_codes
  5958   000CBE  CFF4 F09C          	movff	prodh,??_diagnostic_trouble_codes+1
  5959   000CC2  03A8               	mulwf	(diagnostic_trouble_codes@dtc_index+1)& (0+255),b
  5960   000CC4  50F3               	movf	prodl,w,c
  5961   000CC6  279C               	addwf	(??_diagnostic_trouble_codes+1)& (0+255),f,b
  5962   000CC8  0E00               	movlw	low _dtc_codes
  5963   000CCA  259B               	addwf	??_diagnostic_trouble_codes& (0+255),w,b
  5964   000CCC  6E06               	movwf	LCD_write_string@string^0,c
  5965   000CCE  0E01               	movlw	high _dtc_codes
  5966   000CD0  219C               	addwfc	(??_diagnostic_trouble_codes+1)& (0+255),w,b
  5967   000CD2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5968   000CD4  ECE7  F016         	call	_LCD_write_string	;wreg free
  5969   000CD8                     l6589:
  5970                           
  5971                           ;OBCII_PIC18F46K22.c: 721:     buffer_count = 0;
  5972   000CD8  0100               	movlb	0	; () banked
  5973   000CDA  6BD7               	clrf	_buffer_count& (0+255),b
  5974   000CDC                     
  5975                           ; BSR set to: 0
  5976                           ;OBCII_PIC18F46K22.c: 722:     message_complete = 0;
  5977   000CDC  6BD5               	clrf	_message_complete& (0+255),b	;volatile
  5978   000CDE                     l334:
  5979                           
  5980                           ; BSR set to: 0
  5981   000CDE  0012               	return		;funcret
  5982   000CE0                     __end_of_diagnostic_trouble_codes:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function _sscanf *****************
  5986 ;; Defined at:
  5987 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sscanf.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  5990 ;;		 -> diagnostic_trouble_codes@byte2_str(3), diagnostic_trouble_codes@byte1_str(3), NULL(0), buffer(256), 
  5991 ;;  fmt             2   39[BANK0 ] PTR const unsigned char 
  5992 ;;		 -> STR_44(3), STR_43(3), STR_15(6), 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  f              11   48[BANK0 ] struct _IO_FILE
  5995 ;;  ret             2   45[BANK0 ] int 
  5996 ;;  ap              1   47[BANK0 ] PTR void [1]
  5997 ;;		 -> ?_sscanf(2), 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  2   37[BANK0 ] int 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6007 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;Total ram usage:       22 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; Hardware stack levels required when called: 7
  6014 ;; This function calls:
  6015 ;;		_vfscanf
  6016 ;; This function is called by:
  6017 ;;		_extract_two_pid_bytes
  6018 ;;		_diagnostic_trouble_codes
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text23
  6023   0031BA                     __ptext23:
  6024                           	callstack 0
  6025   0031BA                     _sscanf:
  6026                           	callstack 19
  6027   0031BA  0E89               	movlw	low (?_sscanf+4)
  6028   0031BC  0100               	movlb	0	; () banked
  6029   0031BE  6F8F               	movwf	sscanf@ap& (0+255),b
  6030   0031C0  C085  F090         	movff	sscanf@s,sscanf@f
  6031   0031C4  C086  F091         	movff	sscanf@s+1,sscanf@f+1
  6032   0031C8                     
  6033                           ; BSR set to: 0
  6034   0031C8  0E00               	movlw	0
  6035   0031CA  6F93               	movwf	(sscanf@f+3)& (0+255),b
  6036   0031CC  0E00               	movlw	0
  6037   0031CE  6F92               	movwf	(sscanf@f+2)& (0+255),b
  6038   0031D0                     
  6039                           ; BSR set to: 0
  6040   0031D0  0E00               	movlw	0
  6041   0031D2  6F98               	movwf	(sscanf@f+8)& (0+255),b
  6042   0031D4  0E00               	movlw	0
  6043   0031D6  6F97               	movwf	(sscanf@f+7)& (0+255),b
  6044   0031D8                     
  6045                           ; BSR set to: 0
  6046   0031D8  0E90               	movlw	low sscanf@f
  6047   0031DA  6F7B               	movwf	vfscanf@fp& (0+255),b
  6048   0031DC  C087  F07C         	movff	sscanf@fmt,vfscanf@fmt
  6049   0031E0  C088  F07D         	movff	sscanf@fmt+1,vfscanf@fmt+1
  6050   0031E4  0E8F               	movlw	low sscanf@ap
  6051   0031E6  6F7E               	movwf	vfscanf@ap& (0+255),b
  6052   0031E8  ECA4  F012         	call	_vfscanf	;wreg free
  6053   0031EC  C07B  F08D         	movff	?_vfscanf,sscanf@ret
  6054   0031F0  C07C  F08E         	movff	?_vfscanf+1,sscanf@ret+1
  6055   0031F4  C08D  F085         	movff	sscanf@ret,?_sscanf
  6056   0031F8  C08E  F086         	movff	sscanf@ret+1,?_sscanf+1
  6057   0031FC  0012               	return		;funcret
  6058   0031FE                     __end_of_sscanf:
  6059                           	callstack 0
  6060                           
  6061 ;; *************** function _vfscanf *****************
  6062 ;; Defined at:
  6063 ;;		line 1497 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  6066 ;;		 -> sscanf@f(11), 
  6067 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  6068 ;;		 -> STR_44(3), STR_43(3), STR_15(6), 
  6069 ;;  ap              1   30[BANK0 ] PTR PTR void 
  6070 ;;		 -> sscanf@ap(1), 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  cfmt            2   35[BANK0 ] PTR unsigned char 
  6073 ;;		 -> STR_44(3), STR_43(3), STR_15(6), 
  6074 ;;  n               2   33[BANK0 ] int 
  6075 ;;  saved_errno     2   31[BANK0 ] int 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  2   27[BANK0 ] int 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:       10 bytes
  6090 ;; Hardware stack levels used: 1
  6091 ;; Hardware stack levels required when called: 6
  6092 ;; This function calls:
  6093 ;;		_vfsfcnvrt
  6094 ;; This function is called by:
  6095 ;;		_sscanf
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text24
  6100   002548                     __ptext24:
  6101                           	callstack 0
  6102   002548                     _vfscanf:
  6103                           	callstack 19
  6104   002548                     
  6105                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1497: int vfscanf
      +                          (FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doscan.c: 1498: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doscan.c: 1499:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doscan.c: 1500:     int n, saved_errno;;C:\Program Files\Microchip\xc8\v3.00\pic\s
      +                          ources\c99\common\doscan.c: 1502:     cfmt = (char *)fmt;
  6106   002548  C07C  F083         	movff	vfscanf@fmt,vfscanf@cfmt
  6107   00254C  C07D  F084         	movff	vfscanf@fmt+1,vfscanf@cfmt+1
  6108   002550                     
  6109                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1503:     ncnv = 
      +                          nmatch = 0;
  6110   002550  0E00               	movlw	0
  6111   002552  0100               	movlb	0	; () banked
  6112   002554  6FBD               	movwf	(_nmatch+1)& (0+255),b
  6113   002556  0E00               	movlw	0
  6114   002558  6FBC               	movwf	_nmatch& (0+255),b
  6115   00255A  C0BC  F0BE         	movff	_nmatch,_ncnv
  6116   00255E  C0BD  F0BF         	movff	_nmatch+1,_ncnv+1
  6117   002562                     
  6118                           ; BSR set to: 0
  6119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1504:  saved_errn
      +                          o = errno;
  6120   002562  C0C2  F07F         	movff	_errno,vfscanf@saved_errno
  6121   002566  C0C3  F080         	movff	_errno+1,vfscanf@saved_errno+1
  6122                           
  6123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1505:     while (
      +                          *cfmt) {
  6124   00256A  EFD6  F012         	goto	l6043
  6125   00256E                     l6033:
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1506:   errno = 0
      +                          ;
  6129   00256E  0E00               	movlw	0
  6130   002570  6FC3               	movwf	(_errno+1)& (0+255),b
  6131   002572  0E00               	movlw	0
  6132   002574  6FC2               	movwf	_errno& (0+255),b
  6133   002576                     
  6134                           ; BSR set to: 0
  6135                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1507:         n =
      +                           vfsfcnvrt(fp, &cfmt, ap);
  6136   002576  C07B  F06A         	movff	vfscanf@fp,vfsfcnvrt@fp
  6137   00257A  0E83               	movlw	low vfscanf@cfmt
  6138   00257C  6F6B               	movwf	vfsfcnvrt@fmt& (0+255),b
  6139   00257E  C07E  F06C         	movff	vfscanf@ap,vfsfcnvrt@ap
  6140   002582  6B6D               	clrf	(vfsfcnvrt@ap+1)& (0+255),b
  6141   002584  EC70  F006         	call	_vfsfcnvrt	;wreg free
  6142   002588  C06A  F081         	movff	?_vfsfcnvrt,vfscanf@n
  6143   00258C  C06B  F082         	movff	?_vfsfcnvrt+1,vfscanf@n+1
  6144   002590                     
  6145                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1508:         if 
      +                          (n < 0) {
  6146   002590  0100               	movlb	0	; () banked
  6147   002592  BF82               	btfsc	(vfscanf@n+1)& (0+255),7,b
  6148   002594  EFD0  F012         	goto	u6900
  6149   002598  EFCE  F012         	goto	u6901
  6150   00259C                     u6901:
  6151   00259C  EFD2  F012         	goto	l6041
  6152   0025A0                     u6900:
  6153   0025A0  EFE4  F012         	goto	l1393
  6154   0025A4                     l6041:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1511:         ncn
      +                          v += n;
  6158   0025A4  5181               	movf	vfscanf@n& (0+255),w,b
  6159   0025A6  27BE               	addwf	_ncnv& (0+255),f,b
  6160   0025A8  5182               	movf	(vfscanf@n+1)& (0+255),w,b
  6161   0025AA  23BF               	addwfc	(_ncnv+1)& (0+255),f,b
  6162   0025AC                     l6043:
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1505:     while (
      +                          *cfmt) {
  6166   0025AC  C083  FFF6         	movff	vfscanf@cfmt,tblptrl
  6167   0025B0  C084  FFF7         	movff	vfscanf@cfmt+1,tblptrh
  6168   0025B4                     	if	0	;tblptru may be non-zero
  6169   0025B4                     	endif
  6170   0025B4                     	if	0	;tblptru may be non-zero
  6171   0025B4                     	endif
  6172   0025B4  0008               	tblrd		*
  6173   0025B6  50F5               	movf	tablat,w,c
  6174   0025B8  0900               	iorlw	0
  6175   0025BA  A4D8               	btfss	status,2,c
  6176   0025BC  EFE2  F012         	goto	u6911
  6177   0025C0  EFE4  F012         	goto	u6910
  6178   0025C4                     u6911:
  6179   0025C4  EFB7  F012         	goto	l6033
  6180   0025C8                     u6910:
  6181   0025C8                     l1393:
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1513:  errno = sa
      +                          ved_errno;
  6185   0025C8  C07F  F0C2         	movff	vfscanf@saved_errno,_errno
  6186   0025CC  C080  F0C3         	movff	vfscanf@saved_errno+1,_errno+1
  6187   0025D0                     
  6188                           ; BSR set to: 0
  6189                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1514:     if (n =
      +                          = (-1) && ncnv == 0) {
  6190   0025D0  2981               	incf	vfscanf@n& (0+255),w,b
  6191   0025D2  E106               	bnz	u6921
  6192   0025D4  2982               	incf	(vfscanf@n+1)& (0+255),w,b
  6193   0025D6  A4D8               	btfss	status,2,c
  6194   0025D8  EFF0  F012         	goto	u6921
  6195   0025DC  EFF2  F012         	goto	u6920
  6196   0025E0                     u6921:
  6197   0025E0  EF01  F013         	goto	l1394
  6198   0025E4                     u6920:
  6199   0025E4                     
  6200                           ; BSR set to: 0
  6201   0025E4  51BE               	movf	_ncnv& (0+255),w,b
  6202   0025E6  11BF               	iorwf	(_ncnv+1)& (0+255),w,b
  6203   0025E8  A4D8               	btfss	status,2,c
  6204   0025EA  EFF9  F012         	goto	u6931
  6205   0025EE  EFFB  F012         	goto	u6930
  6206   0025F2                     u6931:
  6207   0025F2  EF01  F013         	goto	l1394
  6208   0025F6                     u6930:
  6209   0025F6                     
  6210                           ; BSR set to: 0
  6211                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1515:         ret
      +                          urn n;
  6212   0025F6  C081  F07B         	movff	vfscanf@n,?_vfscanf
  6213   0025FA  C082  F07C         	movff	vfscanf@n+1,?_vfscanf+1
  6214   0025FE  EF05  F013         	goto	l1395
  6215   002602                     l1394:
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1518:     return 
      +                          ncnv;
  6219   002602  C0BE  F07B         	movff	_ncnv,?_vfscanf
  6220   002606  C0BF  F07C         	movff	_ncnv+1,?_vfscanf+1
  6221   00260A                     l1395:
  6222                           
  6223                           ; BSR set to: 0
  6224   00260A  0012               	return		;funcret
  6225   00260C                     __end_of_vfscanf:
  6226                           	callstack 0
  6227                           
  6228 ;; *************** function _vfsfcnvrt *****************
  6229 ;; Defined at:
  6230 ;;		line 672 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  6233 ;;		 -> sscanf@f(11), 
  6234 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  6235 ;;		 -> vfscanf@cfmt(2), 
  6236 ;;  ap              2   12[BANK0 ] PTR PTR void 
  6237 ;;		 -> sscanf@ap(1), 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  llu             8   17[BANK0 ] unsigned long long 
  6240 ;;  ll              8    0        long long 
  6241 ;;  f               4    0        long long 
  6242 ;;  ct              3    0        unsigned char [3]
  6243 ;;  c               2   25[BANK0 ] int 
  6244 ;;  i               2   15[BANK0 ] int 
  6245 ;;  cp              2    0        PTR unsigned char 
  6246 ;;  vp              1   14[BANK0 ] PTR void 
  6247 ;;		 -> ?_sscanf(2), ?_sprintf(2), diagnostic_trouble_codes@byte2(2), diagnostic_trouble_codes@byte1(2), 
  6248 ;;		 -> extract_two_pid_bytes@b(2), extract_two_pid_bytes@a(2), 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  2   10[BANK0 ] int 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6258 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;Total ram usage:       19 bytes
  6263 ;; Hardware stack levels used: 1
  6264 ;; Hardware stack levels required when called: 5
  6265 ;; This function calls:
  6266 ;;		_atox
  6267 ;;		_fgetc
  6268 ;;		_skipws
  6269 ;;		_ungetc
  6270 ;; This function is called by:
  6271 ;;		_vfscanf
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text25
  6276   000CE0                     __ptext25:
  6277                           	callstack 0
  6278   000CE0                     _vfsfcnvrt:
  6279                           	callstack 19
  6280   000CE0                     
  6281                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 672: static int v
      +                          fsfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sou
      +                          rces\c99\common\doscan.c: 673: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doscan.c: 674:     char *cp, ct[3];;C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doscan.c: 675:     int c, i;;C:\Program Files\Microchip\xc8\v3.00\pic\sourc
      +                          es\c99\common\doscan.c: 676:     long long ll;;C:\Program Files\Microchip\xc8\v3.00\pic\
      +                          sources\c99\common\doscan.c: 677:     unsigned long long llu;
  6282   000CE0  0100               	movlb	0	; () banked
  6283   000CE2  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6284   000CE4  6ED9               	movwf	fsr2l,c
  6285   000CE6  6ADA               	clrf	fsr2h,c
  6286   000CE8  CFDE FFF6          	movff	postinc2,tblptrl
  6287   000CEC  CFDD FFF7          	movff	postdec2,tblptrh
  6288   000CF0                     	if	0	;tblptru may be non-zero
  6289   000CF0                     	endif
  6290   000CF0                     	if	0	;tblptru may be non-zero
  6291   000CF0                     	endif
  6292   000CF0  0008               	tblrd		*
  6293   000CF2  50F5               	movf	tablat,w,c
  6294   000CF4  0A25               	xorlw	37
  6295   000CF6  A4D8               	btfss	status,2,c
  6296   000CF8  EF80  F006         	goto	u6571
  6297   000CFC  EF82  F006         	goto	u6570
  6298   000D00                     u6571:
  6299   000D00  EF48  F007         	goto	l5859
  6300   000D04                     u6570:
  6301   000D04                     
  6302                           ; BSR set to: 0
  6303                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 683:         ++*f
      +                          mt;
  6304   000D04  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6305   000D06  6ED9               	movwf	fsr2l,c
  6306   000D08  6ADA               	clrf	fsr2h,c
  6307   000D0A  2ADE               	incf	postinc2,f,c
  6308   000D0C  0E00               	movlw	0
  6309   000D0E  22DD               	addwfc	postdec2,f,c
  6310   000D10                     
  6311                           ; BSR set to: 0
  6312                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 685:         asup
      +                           = width = 0;
  6313   000D10  0E00               	movlw	0
  6314   000D12  6FC1               	movwf	(_width@doscan$F2259+1)& (0+255),b
  6315   000D14  0E00               	movlw	0
  6316   000D16  6FC0               	movwf	_width@doscan$F2259& (0+255),b
  6317   000D18  51C0               	movf	_width@doscan$F2259& (0+255),w,b
  6318   000D1A  11C1               	iorwf	(_width@doscan$F2259+1)& (0+255),w,b
  6319   000D1C  A4D8               	btfss	status,2,c
  6320   000D1E  EF93  F006         	goto	u6581
  6321   000D22  EF96  F006         	goto	u6580
  6322   000D26                     u6581:
  6323   000D26  0E01               	movlw	1
  6324   000D28  EF97  F006         	goto	u6590
  6325   000D2C                     u6580:
  6326   000D2C  0E00               	movlw	0
  6327   000D2E                     u6590:
  6328   000D2E  6FD3               	movwf	_asup& (0+255),b
  6329   000D30                     
  6330                           ; BSR set to: 0
  6331                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1353:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6332   000D30  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6333   000D32  6ED9               	movwf	fsr2l,c
  6334   000D34  6ADA               	clrf	fsr2h,c
  6335   000D36  CFDE FFF6          	movff	postinc2,tblptrl
  6336   000D3A  CFDD FFF7          	movff	postdec2,tblptrh
  6337   000D3E                     	if	0	;tblptru may be non-zero
  6338   000D3E                     	endif
  6339   000D3E                     	if	0	;tblptru may be non-zero
  6340   000D3E                     	endif
  6341   000D3E  0008               	tblrd		*
  6342   000D40  50F5               	movf	tablat,w,c
  6343   000D42  0A78               	xorlw	120
  6344   000D44  B4D8               	btfsc	status,2,c
  6345   000D46  EFA7  F006         	goto	u6601
  6346   000D4A  EFA9  F006         	goto	u6600
  6347   000D4E                     u6601:
  6348   000D4E  EFBA  F006         	goto	l5815
  6349   000D52                     u6600:
  6350   000D52                     
  6351                           ; BSR set to: 0
  6352   000D52  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6353   000D54  6ED9               	movwf	fsr2l,c
  6354   000D56  6ADA               	clrf	fsr2h,c
  6355   000D58  CFDE FFF6          	movff	postinc2,tblptrl
  6356   000D5C  CFDD FFF7          	movff	postdec2,tblptrh
  6357   000D60                     	if	0	;tblptru may be non-zero
  6358   000D60                     	endif
  6359   000D60                     	if	0	;tblptru may be non-zero
  6360   000D60                     	endif
  6361   000D60  0008               	tblrd		*
  6362   000D62  50F5               	movf	tablat,w,c
  6363   000D64  0A58               	xorlw	88
  6364   000D66  A4D8               	btfss	status,2,c
  6365   000D68  EFB8  F006         	goto	u6611
  6366   000D6C  EFBA  F006         	goto	u6610
  6367   000D70                     u6611:
  6368   000D70  EFF0  F006         	goto	l5829
  6369   000D74                     u6610:
  6370   000D74                     l5815:
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1354:            
      +                           ++*fmt;
  6374   000D74  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6375   000D76  6ED9               	movwf	fsr2l,c
  6376   000D78  6ADA               	clrf	fsr2h,c
  6377   000D7A  2ADE               	incf	postinc2,f,c
  6378   000D7C  0E00               	movlw	0
  6379   000D7E  22DD               	addwfc	postdec2,f,c
  6380   000D80                     
  6381                           ; BSR set to: 0
  6382                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1355:            
      +                           i = atox(fp, &llu);
  6383   000D80  C06A  F04B         	movff	vfsfcnvrt@fp,atox@fp
  6384   000D84  0E71               	movlw	low vfsfcnvrt@llu
  6385   000D86  6E4C               	movwf	atox@pll^0,c
  6386   000D88  EC25  F003         	call	_atox	;wreg free
  6387   000D8C  C04B  F06F         	movff	?_atox,vfsfcnvrt@i
  6388   000D90  C04C  F070         	movff	?_atox+1,vfsfcnvrt@i+1
  6389   000D94                     
  6390                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1356:            
      +                           if (!(i < 1)) {
  6391   000D94  0100               	movlb	0	; () banked
  6392   000D96  BF70               	btfsc	(vfsfcnvrt@i+1)& (0+255),7,b
  6393   000D98  EFD6  F006         	goto	u6621
  6394   000D9C  5170               	movf	(vfsfcnvrt@i+1)& (0+255),w,b
  6395   000D9E  E108               	bnz	u6620
  6396   000DA0  056F               	decf	vfsfcnvrt@i& (0+255),w,b
  6397   000DA2  A0D8               	btfss	status,0,c
  6398   000DA4  EFD6  F006         	goto	u6621
  6399   000DA8  EFD8  F006         	goto	u6620
  6400   000DAC                     u6621:
  6401   000DAC  EFEA  F006         	goto	l5825
  6402   000DB0                     u6620:
  6403   000DB0                     
  6404                           ; BSR set to: 0
  6405                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1357:            
      +                               vp = (void *)(*(unsigned int * *)__va_arg(*(unsigned int * **)ap, (unsigned int *)0
      +                          ));
  6406   000DB0  C06C  FFD9         	movff	vfsfcnvrt@ap,fsr2l
  6407   000DB4  C06D  FFDA         	movff	vfsfcnvrt@ap+1,fsr2h
  6408   000DB8  0E02               	movlw	2
  6409   000DBA  26DF               	addwf	indf2,f,c
  6410   000DBC  5CDF               	subwf	indf2,w,c
  6411   000DBE  6ED9               	movwf	fsr2l,c
  6412   000DC0  6ADA               	clrf	fsr2h,c
  6413   000DC2  CFDE F06E          	movff	postinc2,vfsfcnvrt@vp
  6414   000DC6                     
  6415                           ; BSR set to: 0
  6416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1358:            
      +                               *(unsigned int *)vp = (unsigned int)llu;
  6417   000DC6  516E               	movf	vfsfcnvrt@vp& (0+255),w,b
  6418   000DC8  6ED9               	movwf	fsr2l,c
  6419   000DCA  6ADA               	clrf	fsr2h,c
  6420   000DCC  C071  FFDE         	movff	vfsfcnvrt@llu,postinc2
  6421   000DD0  C072  FFDD         	movff	vfsfcnvrt@llu+1,postdec2
  6422   000DD4                     l5825:
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1360:            
      +                           return i;
  6426   000DD4  C06F  F06A         	movff	vfsfcnvrt@i,?_vfsfcnvrt
  6427   000DD8  C070  F06B         	movff	vfsfcnvrt@i+1,?_vfsfcnvrt+1
  6428   000DDC  EFFD  F007         	goto	l1370
  6429   000DE0                     l5829:
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1448:         if 
      +                          ((*fmt)[0] == '%') {
  6433   000DE0  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6434   000DE2  6ED9               	movwf	fsr2l,c
  6435   000DE4  6ADA               	clrf	fsr2h,c
  6436   000DE6  CFDE FFF6          	movff	postinc2,tblptrl
  6437   000DEA  CFDD FFF7          	movff	postdec2,tblptrh
  6438   000DEE                     	if	0	;tblptru may be non-zero
  6439   000DEE                     	endif
  6440   000DEE                     	if	0	;tblptru may be non-zero
  6441   000DEE                     	endif
  6442   000DEE  0008               	tblrd		*
  6443   000DF0  50F5               	movf	tablat,w,c
  6444   000DF2  0A25               	xorlw	37
  6445   000DF4  A4D8               	btfss	status,2,c
  6446   000DF6  EFFF  F006         	goto	u6631
  6447   000DFA  EF01  F007         	goto	u6630
  6448   000DFE                     u6631:
  6449   000DFE  EF40  F007         	goto	l5853
  6450   000E02                     u6630:
  6451   000E02                     
  6452                           ; BSR set to: 0
  6453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1449:    skipws(f
      +                          p);
  6454   000E02  C06A  F00E         	movff	vfsfcnvrt@fp,skipws@fp
  6455   000E06  EC93  F017         	call	_skipws	;wreg free
  6456                           
  6457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1450:    c = fget
      +                          c(fp);
  6458   000E0A  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6459   000E0E  EC79  F00E         	call	_fgetc	;wreg free
  6460   000E12  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6461   000E16  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6462   000E1A                     
  6463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1451:    if (c ==
      +                           '%') {
  6464   000E1A  0E25               	movlw	37
  6465   000E1C  0100               	movlb	0	; () banked
  6466   000E1E  1979               	xorwf	vfsfcnvrt@c& (0+255),w,b
  6467   000E20  117A               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
  6468   000E22  A4D8               	btfss	status,2,c
  6469   000E24  EF16  F007         	goto	u6641
  6470   000E28  EF18  F007         	goto	u6640
  6471   000E2C                     u6641:
  6472   000E2C  EF27  F007         	goto	l5845
  6473   000E30                     u6640:
  6474   000E30                     l5835:
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1452:     ++*fmt;
  6478   000E30  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6479   000E32  6ED9               	movwf	fsr2l,c
  6480   000E34  6ADA               	clrf	fsr2h,c
  6481   000E36  2ADE               	incf	postinc2,f,c
  6482   000E38  0E00               	movlw	0
  6483   000E3A  22DD               	addwfc	postdec2,f,c
  6484   000E3C                     
  6485                           ; BSR set to: 0
  6486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1453:     ++nmatc
      +                          h;
  6487   000E3C  4BBC               	infsnz	_nmatch& (0+255),f,b
  6488   000E3E  2BBD               	incf	(_nmatch+1)& (0+255),f,b
  6489   000E40                     l5839:
  6490                           
  6491                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1454:     return 
      +                          0;
  6492   000E40  0E00               	movlw	0
  6493   000E42  0100               	movlb	0	; () banked
  6494   000E44  6F6B               	movwf	(?_vfsfcnvrt+1)& (0+255),b
  6495   000E46  0E00               	movlw	0
  6496   000E48  6F6A               	movwf	?_vfsfcnvrt& (0+255),b
  6497   000E4A  EFFD  F007         	goto	l1370
  6498   000E4E                     l5845:
  6499                           
  6500                           ; BSR set to: 0
  6501   000E4E  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6502   000E50  E108               	bnz	u6650
  6503   000E52  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6504   000E54  B4D8               	btfsc	status,2,c
  6505   000E56  EF2F  F007         	goto	u6651
  6506   000E5A  EF31  F007         	goto	u6650
  6507   000E5E                     u6651:
  6508   000E5E  EF39  F007         	goto	l5849
  6509   000E62                     u6650:
  6510   000E62                     l5847:
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1457:     ungetc(
      +                          c, fp);
  6514   000E62  C079  F003         	movff	vfsfcnvrt@c,ungetc@c
  6515   000E66  C07A  F004         	movff	vfsfcnvrt@c+1,ungetc@c+1
  6516   000E6A  C06A  F005         	movff	vfsfcnvrt@fp,ungetc@fp
  6517   000E6E  EC7C  F015         	call	_ungetc	;wreg free
  6518   000E72                     l5849:
  6519                           
  6520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1459:    return (
      +                          -1) - 1;
  6521   000E72  0EFF               	movlw	255
  6522   000E74  0100               	movlb	0	; () banked
  6523   000E76  6F6B               	movwf	(?_vfsfcnvrt+1)& (0+255),b
  6524   000E78  0EFE               	movlw	254
  6525   000E7A  6F6A               	movwf	?_vfsfcnvrt& (0+255),b
  6526   000E7C  EFFD  F007         	goto	l1370
  6527   000E80                     l5853:
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1463:         ++*
      +                          fmt;
  6531   000E80  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6532   000E82  6ED9               	movwf	fsr2l,c
  6533   000E84  6ADA               	clrf	fsr2h,c
  6534   000E86  2ADE               	incf	postinc2,f,c
  6535   000E88  0E00               	movlw	0
  6536   000E8A  22DD               	addwfc	postdec2,f,c
  6537   000E8C  EF20  F007         	goto	l5839
  6538   000E90                     l5859:
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1468:     c = fge
      +                          tc(fp);
  6542   000E90  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6543   000E94  EC79  F00E         	call	_fgetc	;wreg free
  6544   000E98  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6545   000E9C  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6546   000EA0                     
  6547                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1469:  if ((((*fm
      +                          t[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5)))) {
  6548   000EA0  0100               	movlb	0	; () banked
  6549   000EA2  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6550   000EA4  6ED9               	movwf	fsr2l,c
  6551   000EA6  6ADA               	clrf	fsr2h,c
  6552   000EA8  CFDE FFF6          	movff	postinc2,tblptrl
  6553   000EAC  CFDD FFF7          	movff	postdec2,tblptrh
  6554   000EB0                     	if	0	;tblptru may be non-zero
  6555   000EB0                     	endif
  6556   000EB0                     	if	0	;tblptru may be non-zero
  6557   000EB0                     	endif
  6558   000EB0  0008               	tblrd		*
  6559   000EB2  50F5               	movf	tablat,w,c
  6560   000EB4  0A20               	xorlw	32
  6561   000EB6  B4D8               	btfsc	status,2,c
  6562   000EB8  EF60  F007         	goto	u6661
  6563   000EBC  EF62  F007         	goto	u6660
  6564   000EC0                     u6661:
  6565   000EC0  EF76  F007         	goto	l5865
  6566   000EC4                     u6660:
  6567   000EC4                     
  6568                           ; BSR set to: 0
  6569   000EC4  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6570   000EC6  6ED9               	movwf	fsr2l,c
  6571   000EC8  6ADA               	clrf	fsr2h,c
  6572   000ECA  CFDE FFF6          	movff	postinc2,tblptrl
  6573   000ECE  CFDD FFF7          	movff	postdec2,tblptrh
  6574   000ED2                     	if	0	;tblptru may be non-zero
  6575   000ED2                     	endif
  6576   000ED2                     	if	0	;tblptru may be non-zero
  6577   000ED2                     	endif
  6578   000ED2  0008               	tblrd		*
  6579   000ED4  CFF5 F055          	movff	tablat,??_vfsfcnvrt
  6580   000ED8  0EF7               	movlw	247
  6581   000EDA  2655               	addwf	??_vfsfcnvrt^0,f,c
  6582   000EDC  0E05               	movlw	5
  6583   000EDE  6055               	cpfslt	??_vfsfcnvrt^0,c
  6584   000EE0  EF74  F007         	goto	u6671
  6585   000EE4  EF76  F007         	goto	u6670
  6586   000EE8                     u6671:
  6587   000EE8  EFD8  F007         	goto	l5883
  6588   000EEC                     u6670:
  6589   000EEC                     l5865:
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1472:    ++*fmt;
  6593   000EEC  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6594   000EEE  6ED9               	movwf	fsr2l,c
  6595   000EF0  6ADA               	clrf	fsr2h,c
  6596   000EF2  2ADE               	incf	postinc2,f,c
  6597   000EF4  0E00               	movlw	0
  6598   000EF6  22DD               	addwfc	postdec2,f,c
  6599   000EF8                     
  6600                           ; BSR set to: 0
  6601                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1473:   } while((
      +                          ((*fmt[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5))));
  6602   000EF8  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6603   000EFA  6ED9               	movwf	fsr2l,c
  6604   000EFC  6ADA               	clrf	fsr2h,c
  6605   000EFE  CFDE FFF6          	movff	postinc2,tblptrl
  6606   000F02  CFDD FFF7          	movff	postdec2,tblptrh
  6607   000F06                     	if	0	;tblptru may be non-zero
  6608   000F06                     	endif
  6609   000F06                     	if	0	;tblptru may be non-zero
  6610   000F06                     	endif
  6611   000F06  0008               	tblrd		*
  6612   000F08  50F5               	movf	tablat,w,c
  6613   000F0A  0A20               	xorlw	32
  6614   000F0C  B4D8               	btfsc	status,2,c
  6615   000F0E  EF8B  F007         	goto	u6681
  6616   000F12  EF8D  F007         	goto	u6680
  6617   000F16                     u6681:
  6618   000F16  EF76  F007         	goto	l5865
  6619   000F1A                     u6680:
  6620   000F1A                     
  6621                           ; BSR set to: 0
  6622   000F1A  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6623   000F1C  6ED9               	movwf	fsr2l,c
  6624   000F1E  6ADA               	clrf	fsr2h,c
  6625   000F20  CFDE FFF6          	movff	postinc2,tblptrl
  6626   000F24  CFDD FFF7          	movff	postdec2,tblptrh
  6627   000F28                     	if	0	;tblptru may be non-zero
  6628   000F28                     	endif
  6629   000F28                     	if	0	;tblptru may be non-zero
  6630   000F28                     	endif
  6631   000F28  0008               	tblrd		*
  6632   000F2A  CFF5 F055          	movff	tablat,??_vfsfcnvrt
  6633   000F2E  0EF7               	movlw	247
  6634   000F30  2655               	addwf	??_vfsfcnvrt^0,f,c
  6635   000F32  0E04               	movlw	4
  6636   000F34  6455               	cpfsgt	??_vfsfcnvrt^0,c
  6637   000F36  EF9F  F007         	goto	u6691
  6638   000F3A  EFA1  F007         	goto	u6690
  6639   000F3E                     u6691:
  6640   000F3E  EF76  F007         	goto	l5865
  6641   000F42                     u6690:
  6642   000F42  EFAD  F007         	goto	l5875
  6643   000F46                     l5871:
  6644                           
  6645                           ; BSR set to: 0
  6646                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1476:    ++nmatch
      +                          ;
  6647   000F46  4BBC               	infsnz	_nmatch& (0+255),f,b
  6648   000F48  2BBD               	incf	(_nmatch+1)& (0+255),f,b
  6649   000F4A                     
  6650                           ; BSR set to: 0
  6651                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1477:    c = fget
      +                          c(fp);
  6652   000F4A  C06A  F005         	movff	vfsfcnvrt@fp,fgetc@fp
  6653   000F4E  EC79  F00E         	call	_fgetc	;wreg free
  6654   000F52  C005  F079         	movff	?_fgetc,vfsfcnvrt@c
  6655   000F56  C006  F07A         	movff	?_fgetc+1,vfsfcnvrt@c+1
  6656   000F5A                     l5875:
  6657                           
  6658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1475:   while (((
      +                          (c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
  6659   000F5A  0E20               	movlw	32
  6660   000F5C  0100               	movlb	0	; () banked
  6661   000F5E  1979               	xorwf	vfsfcnvrt@c& (0+255),w,b
  6662   000F60  117A               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
  6663   000F62  B4D8               	btfsc	status,2,c
  6664   000F64  EFB6  F007         	goto	u6701
  6665   000F68  EFB8  F007         	goto	u6700
  6666   000F6C                     u6701:
  6667   000F6C  EFA3  F007         	goto	l5871
  6668   000F70                     u6700:
  6669   000F70                     
  6670                           ; BSR set to: 0
  6671   000F70  C079  F055         	movff	vfsfcnvrt@c,??_vfsfcnvrt
  6672   000F74  0EF7               	movlw	247
  6673   000F76  2655               	addwf	??_vfsfcnvrt^0,f,c
  6674   000F78  0E04               	movlw	4
  6675   000F7A  6455               	cpfsgt	??_vfsfcnvrt^0,c
  6676   000F7C  EFC2  F007         	goto	u6711
  6677   000F80  EFC4  F007         	goto	u6710
  6678   000F84                     u6711:
  6679   000F84  EFA3  F007         	goto	l5871
  6680   000F88                     u6710:
  6681   000F88                     
  6682                           ; BSR set to: 0
  6683                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1479:   if (c != 
      +                          (-1)) {
  6684   000F88  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6685   000F8A  E108               	bnz	u6720
  6686   000F8C  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6687   000F8E  B4D8               	btfsc	status,2,c
  6688   000F90  EFCC  F007         	goto	u6721
  6689   000F94  EFCE  F007         	goto	u6720
  6690   000F98                     u6721:
  6691   000F98  EF20  F007         	goto	l5839
  6692   000F9C                     u6720:
  6693   000F9C                     
  6694                           ; BSR set to: 0
  6695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1480:    ungetc(c
      +                          , fp);
  6696   000F9C  C079  F003         	movff	vfsfcnvrt@c,ungetc@c
  6697   000FA0  C07A  F004         	movff	vfsfcnvrt@c+1,ungetc@c+1
  6698   000FA4  C06A  F005         	movff	vfsfcnvrt@fp,ungetc@fp
  6699   000FA8  EC7C  F015         	call	_ungetc	;wreg free
  6700   000FAC  EF20  F007         	goto	l5839
  6701   000FB0                     l5883:
  6702                           
  6703                           ; BSR set to: 0
  6704   000FB0  516B               	movf	vfsfcnvrt@fmt& (0+255),w,b
  6705   000FB2  6ED9               	movwf	fsr2l,c
  6706   000FB4  6ADA               	clrf	fsr2h,c
  6707   000FB6  CFDE FFF6          	movff	postinc2,tblptrl
  6708   000FBA  CFDD FFF7          	movff	postdec2,tblptrh
  6709   000FBE                     	if	0	;tblptru may be non-zero
  6710   000FBE                     	endif
  6711   000FBE                     	if	0	;tblptru may be non-zero
  6712   000FBE                     	endif
  6713   000FBE  0008               	tblrd		*
  6714   000FC0  50F5               	movf	tablat,w,c
  6715   000FC2  6E55               	movwf	??_vfsfcnvrt^0,c
  6716   000FC4  6A56               	clrf	(??_vfsfcnvrt+1)^0,c
  6717   000FC6  5179               	movf	vfsfcnvrt@c& (0+255),w,b
  6718   000FC8  1855               	xorwf	??_vfsfcnvrt^0,w,c
  6719   000FCA  E107               	bnz	u6731
  6720   000FCC  517A               	movf	(vfsfcnvrt@c+1)& (0+255),w,b
  6721   000FCE  1856               	xorwf	(??_vfsfcnvrt+1)^0,w,c
  6722   000FD0  A4D8               	btfss	status,2,c
  6723   000FD2  EFED  F007         	goto	u6731
  6724   000FD6  EFEF  F007         	goto	u6730
  6725   000FDA                     u6731:
  6726   000FDA  EFF1  F007         	goto	l5889
  6727   000FDE                     u6730:
  6728   000FDE  EF18  F007         	goto	l5835
  6729   000FE2                     l5889:
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1487:   if (c == 
      +                          (-1)) {
  6733   000FE2  2979               	incf	vfsfcnvrt@c& (0+255),w,b
  6734   000FE4  E106               	bnz	u6741
  6735   000FE6  297A               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
  6736   000FE8  A4D8               	btfss	status,2,c
  6737   000FEA  EFF9  F007         	goto	u6741
  6738   000FEE  EFFB  F007         	goto	u6740
  6739   000FF2                     u6741:
  6740   000FF2  EF31  F007         	goto	l5847
  6741   000FF6                     u6740:
  6742   000FF6                     
  6743                           ; BSR set to: 0
  6744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 1488:    return (
      +                          -1);
  6745   000FF6  696A               	setf	?_vfsfcnvrt& (0+255),b
  6746   000FF8  696B               	setf	(?_vfsfcnvrt+1)& (0+255),b
  6747   000FFA                     l1370:
  6748                           
  6749                           ; BSR set to: 0
  6750   000FFA  0012               	return		;funcret
  6751   000FFC                     __end_of_vfsfcnvrt:
  6752                           	callstack 0
  6753                           
  6754 ;; *************** function _atox *****************
  6755 ;; Defined at:
  6756 ;;		line 528 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  fp              1   74[COMRAM] PTR struct _IO_FILE
  6759 ;;		 -> sscanf@f(11), 
  6760 ;;  pll             1   75[COMRAM] PTR unsigned long long 
  6761 ;;		 -> vfsfcnvrt@llu(8), 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  c               2    8[BANK0 ] int 
  6764 ;;  i               2    6[BANK0 ] int 
  6765 ;;  seen_0x         2    4[BANK0 ] int 
  6766 ;;  ep              2    2[BANK0 ] PTR unsigned char 
  6767 ;;		 -> dbuf@doscan$F2262(32), 
  6768 ;;  w               2    0[BANK0 ] int 
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  2   74[COMRAM] int 
  6771 ;; Registers used:
  6772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;Total ram usage:       20 bytes
  6783 ;; Hardware stack levels used: 1
  6784 ;; Hardware stack levels required when called: 4
  6785 ;; This function calls:
  6786 ;;		___strtoxll
  6787 ;;		_fgetc
  6788 ;;		_skipws
  6789 ;;		_ungetc
  6790 ;; This function is called by:
  6791 ;;		_vfsfcnvrt
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text26
  6796   00064A                     __ptext26:
  6797                           	callstack 0
  6798   00064A                     _atox:
  6799                           	callstack 19
  6800   00064A                     
  6801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 528: static int a
      +                          tox(FILE *fp, unsigned long long *pll);C:\Program Files\Microchip\xc8\v3.00\pic\sources\
      +                          c99\common\doscan.c: 529: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\
      +                          doscan.c: 530:     char *ep;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doscan.c: 531:     int c, i, w, seen_0x = 0;
  6802   00064A  0E00               	movlw	0
  6803   00064C  0100               	movlb	0	; () banked
  6804   00064E  6F65               	movwf	(atox@seen_0x+1)& (0+255),b
  6805   000650  0E00               	movlw	0
  6806   000652  6F64               	movwf	atox@seen_0x& (0+255),b
  6807   000654                     
  6808                           ; BSR set to: 0
  6809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 534:     skipws(f
      +                          p);
  6810   000654  C04B  F00E         	movff	atox@fp,skipws@fp
  6811   000658  EC93  F017         	call	_skipws	;wreg free
  6812   00065C                     
  6813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 537:     w = widt
      +                          h ? width : sizeof(dbuf) - 1;
  6814   00065C  0100               	movlb	0	; () banked
  6815   00065E  51C0               	movf	_width@doscan$F2259& (0+255),w,b
  6816   000660  11C1               	iorwf	(_width@doscan$F2259+1)& (0+255),w,b
  6817   000662  A4D8               	btfss	status,2,c
  6818   000664  EF36  F003         	goto	u6141
  6819   000668  EF38  F003         	goto	u6140
  6820   00066C                     u6141:
  6821   00066C  EF3E  F003         	goto	l1331
  6822   000670                     u6140:
  6823   000670                     
  6824                           ; BSR set to: 0
  6825   000670  0E00               	movlw	0
  6826   000672  6F61               	movwf	(atox@w+1)& (0+255),b
  6827   000674  0E1F               	movlw	31
  6828   000676  6F60               	movwf	atox@w& (0+255),b
  6829   000678  EF42  F003         	goto	l5613
  6830   00067C                     l1331:
  6831                           
  6832                           ; BSR set to: 0
  6833   00067C  C0C0  F060         	movff	_width@doscan$F2259,atox@w
  6834   000680  C0C1  F061         	movff	_width@doscan$F2259+1,atox@w+1
  6835   000684                     l5613:
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 538:     i = 0;
  6839   000684  0E00               	movlw	0
  6840   000686  6F67               	movwf	(atox@i+1)& (0+255),b
  6841   000688  0E00               	movlw	0
  6842   00068A  6F66               	movwf	atox@i& (0+255),b
  6843                           
  6844                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 539:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
  6845   00068C  EF52  F004         	goto	l5673
  6846   000690                     l5615:
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 540:         c = 
      +                          fgetc(fp);
  6850   000690  C04B  F005         	movff	atox@fp,fgetc@fp
  6851   000694  EC79  F00E         	call	_fgetc	;wreg free
  6852   000698  C005  F068         	movff	?_fgetc,atox@c
  6853   00069C  C006  F069         	movff	?_fgetc+1,atox@c+1
  6854   0006A0                     
  6855                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 541:         if (
      +                          c == (-1) && (width || i==0)) {
  6856   0006A0  0100               	movlb	0	; () banked
  6857   0006A2  2968               	incf	atox@c& (0+255),w,b
  6858   0006A4  E106               	bnz	u6151
  6859   0006A6  2969               	incf	(atox@c+1)& (0+255),w,b
  6860   0006A8  A4D8               	btfss	status,2,c
  6861   0006AA  EF59  F003         	goto	u6151
  6862   0006AE  EF5B  F003         	goto	u6150
  6863   0006B2                     u6151:
  6864   0006B2  EF73  F003         	goto	l5623
  6865   0006B6                     u6150:
  6866   0006B6                     
  6867                           ; BSR set to: 0
  6868   0006B6  51C0               	movf	_width@doscan$F2259& (0+255),w,b
  6869   0006B8  11C1               	iorwf	(_width@doscan$F2259+1)& (0+255),w,b
  6870   0006BA  A4D8               	btfss	status,2,c
  6871   0006BC  EF62  F003         	goto	u6161
  6872   0006C0  EF64  F003         	goto	u6160
  6873   0006C4                     u6161:
  6874   0006C4  EF6D  F003         	goto	l1338
  6875   0006C8                     u6160:
  6876   0006C8                     
  6877                           ; BSR set to: 0
  6878   0006C8  5166               	movf	atox@i& (0+255),w,b
  6879   0006CA  1167               	iorwf	(atox@i+1)& (0+255),w,b
  6880   0006CC  A4D8               	btfss	status,2,c
  6881   0006CE  EF6B  F003         	goto	u6171
  6882   0006D2  EF6D  F003         	goto	u6170
  6883   0006D6                     u6171:
  6884   0006D6  EF73  F003         	goto	l5623
  6885   0006DA                     u6170:
  6886   0006DA                     l1338:
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 542:             
      +                          return c;
  6890   0006DA  C068  F04B         	movff	atox@c,?_atox
  6891   0006DE  C069  F04C         	movff	atox@c+1,?_atox+1
  6892   0006E2  EFD7  F004         	goto	l1339
  6893   0006E6                     l5623:
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 544:   if (c == '
      +                          -' || c == '+') {
  6897   0006E6  0E2D               	movlw	45
  6898   0006E8  1968               	xorwf	atox@c& (0+255),w,b
  6899   0006EA  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6900   0006EC  B4D8               	btfsc	status,2,c
  6901   0006EE  EF7B  F003         	goto	u6181
  6902   0006F2  EF7D  F003         	goto	u6180
  6903   0006F6                     u6181:
  6904   0006F6  EF87  F003         	goto	l5627
  6905   0006FA                     u6180:
  6906   0006FA                     
  6907                           ; BSR set to: 0
  6908   0006FA  0E2B               	movlw	43
  6909   0006FC  1968               	xorwf	atox@c& (0+255),w,b
  6910   0006FE  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6911   000700  A4D8               	btfss	status,2,c
  6912   000702  EF85  F003         	goto	u6191
  6913   000706  EF87  F003         	goto	u6190
  6914   00070A                     u6191:
  6915   00070A  EF9E  F003         	goto	l5631
  6916   00070E                     u6190:
  6917   00070E                     l5627:
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 545:    if (i > 0
      +                          ) {
  6921   00070E  BF67               	btfsc	(atox@i+1)& (0+255),7,b
  6922   000710  EF92  F003         	goto	u6201
  6923   000714  5167               	movf	(atox@i+1)& (0+255),w,b
  6924   000716  E108               	bnz	u6200
  6925   000718  0566               	decf	atox@i& (0+255),w,b
  6926   00071A  A0D8               	btfss	status,0,c
  6927   00071C  EF92  F003         	goto	u6201
  6928   000720  EF94  F003         	goto	u6200
  6929   000724                     u6201:
  6930   000724  EF46  F004         	goto	l5667
  6931   000728                     u6200:
  6932   000728                     l5629:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 546:     ungetc(c
      +                          , fp);
  6936   000728  C068  F003         	movff	atox@c,ungetc@c
  6937   00072C  C069  F004         	movff	atox@c+1,ungetc@c+1
  6938   000730  C04B  F005         	movff	atox@fp,ungetc@fp
  6939   000734  EC7C  F015         	call	_ungetc	;wreg free
  6940                           
  6941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 547:     break;
  6942   000738  EF6D  F004         	goto	l5677
  6943   00073C                     l5631:
  6944                           
  6945                           ; BSR set to: 0
  6946   00073C  0E30               	movlw	48
  6947   00073E  1968               	xorwf	atox@c& (0+255),w,b
  6948   000740  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6949   000742  A4D8               	btfss	status,2,c
  6950   000744  EFA6  F003         	goto	u6211
  6951   000748  EFA8  F003         	goto	u6210
  6952   00074C                     u6211:
  6953   00074C  EFF6  F003         	goto	l5653
  6954   000750                     u6210:
  6955   000750                     
  6956                           ; BSR set to: 0
  6957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 551:    dbuf[i] =
      +                           (char)c;
  6958   000750  0E3C               	movlw	low _dbuf@doscan$F2262
  6959   000752  2566               	addwf	atox@i& (0+255),w,b
  6960   000754  6ED9               	movwf	fsr2l,c
  6961   000756  0E01               	movlw	high _dbuf@doscan$F2262
  6962   000758  2167               	addwfc	(atox@i+1)& (0+255),w,b
  6963   00075A  6EDA               	movwf	fsr2h,c
  6964   00075C  C068  FFDF         	movff	atox@c,indf2
  6965   000760                     
  6966                           ; BSR set to: 0
  6967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 552:    ++i;
  6968   000760  4B66               	infsnz	atox@i& (0+255),f,b
  6969   000762  2B67               	incf	(atox@i+1)& (0+255),f,b
  6970   000764                     
  6971                           ; BSR set to: 0
  6972                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 553:    ++nmatch;
  6973   000764  4BBC               	infsnz	_nmatch& (0+255),f,b
  6974   000766  2BBD               	incf	(_nmatch+1)& (0+255),f,b
  6975   000768                     
  6976                           ; BSR set to: 0
  6977                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 554:    c = fgetc
      +                          (fp);
  6978   000768  C04B  F005         	movff	atox@fp,fgetc@fp
  6979   00076C  EC79  F00E         	call	_fgetc	;wreg free
  6980   000770  C005  F068         	movff	?_fgetc,atox@c
  6981   000774  C006  F069         	movff	?_fgetc+1,atox@c+1
  6982   000778                     
  6983                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 555:    if (c == 
      +                          'X' || c == 'x') {
  6984   000778  0E58               	movlw	88
  6985   00077A  0100               	movlb	0	; () banked
  6986   00077C  1968               	xorwf	atox@c& (0+255),w,b
  6987   00077E  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6988   000780  B4D8               	btfsc	status,2,c
  6989   000782  EFC5  F003         	goto	u6221
  6990   000786  EFC7  F003         	goto	u6220
  6991   00078A                     u6221:
  6992   00078A  EFD1  F003         	goto	l5645
  6993   00078E                     u6220:
  6994   00078E                     
  6995                           ; BSR set to: 0
  6996   00078E  0E78               	movlw	120
  6997   000790  1968               	xorwf	atox@c& (0+255),w,b
  6998   000792  1169               	iorwf	(atox@c+1)& (0+255),w,b
  6999   000794  A4D8               	btfss	status,2,c
  7000   000796  EFCF  F003         	goto	u6231
  7001   00079A  EFD1  F003         	goto	u6230
  7002   00079E                     u6231:
  7003   00079E  EFE2  F003         	goto	l5649
  7004   0007A2                     u6230:
  7005   0007A2                     l5645:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 556:     if (seen
      +                          _0x) {
  7009   0007A2  5164               	movf	atox@seen_0x& (0+255),w,b
  7010   0007A4  1165               	iorwf	(atox@seen_0x+1)& (0+255),w,b
  7011   0007A6  B4D8               	btfsc	status,2,c
  7012   0007A8  EFD8  F003         	goto	u6241
  7013   0007AC  EFDA  F003         	goto	u6240
  7014   0007B0                     u6241:
  7015   0007B0  EFDC  F003         	goto	l1350
  7016   0007B4                     u6240:
  7017   0007B4  EF94  F003         	goto	l5629
  7018   0007B8                     l1350:
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 560:     seen_0x 
      +                          = i;
  7022   0007B8  C066  F064         	movff	atox@i,atox@seen_0x
  7023   0007BC  C067  F065         	movff	atox@i+1,atox@seen_0x+1
  7024                           
  7025                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 561:    }
  7026   0007C0  EF46  F004         	goto	l5667
  7027   0007C4                     l5649:
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 563:     if (c !=
      +                           (-1)) {
  7031   0007C4  2968               	incf	atox@c& (0+255),w,b
  7032   0007C6  E108               	bnz	u6250
  7033   0007C8  2969               	incf	(atox@c+1)& (0+255),w,b
  7034   0007CA  B4D8               	btfsc	status,2,c
  7035   0007CC  EFEA  F003         	goto	u6251
  7036   0007D0  EFEC  F003         	goto	u6250
  7037   0007D4                     u6251:
  7038   0007D4  EF52  F004         	goto	l5673
  7039   0007D8                     u6250:
  7040   0007D8                     
  7041                           ; BSR set to: 0
  7042                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 564:      ungetc(
      +                          c, fp);
  7043   0007D8  C068  F003         	movff	atox@c,ungetc@c
  7044   0007DC  C069  F004         	movff	atox@c+1,ungetc@c+1
  7045   0007E0  C04B  F005         	movff	atox@fp,ungetc@fp
  7046   0007E4  EC7C  F015         	call	_ungetc	;wreg free
  7047   0007E8  EF52  F004         	goto	l5673
  7048   0007EC                     l5653:
  7049                           
  7050                           ; BSR set to: 0
  7051   0007EC  C068  F04D         	movff	atox@c,??_atox
  7052   0007F0  0ED0               	movlw	208
  7053   0007F2  264D               	addwf	??_atox^0,f,c
  7054   0007F4  0E09               	movlw	9
  7055   0007F6  644D               	cpfsgt	??_atox^0,c
  7056   0007F8  EF00  F004         	goto	u6261
  7057   0007FC  EF02  F004         	goto	u6260
  7058   000800                     u6261:
  7059   000800  EF46  F004         	goto	l5667
  7060   000804                     u6260:
  7061   000804                     
  7062                           ; BSR set to: 0
  7063   000804  C068  F04D         	movff	atox@c,??_atox
  7064   000808  0E20               	movlw	32
  7065   00080A  124D               	iorwf	??_atox^0,f,c
  7066   00080C  0E9F               	movlw	159
  7067   00080E  264D               	addwf	??_atox^0,f,c
  7068   000810  0E05               	movlw	5
  7069   000812  644D               	cpfsgt	??_atox^0,c
  7070   000814  EF0E  F004         	goto	u6271
  7071   000818  EF10  F004         	goto	u6270
  7072   00081C                     u6271:
  7073   00081C  EF46  F004         	goto	l5667
  7074   000820                     u6270:
  7075   000820                     
  7076                           ; BSR set to: 0
  7077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 570:    if (c != 
      +                          (-1)) {
  7078   000820  2968               	incf	atox@c& (0+255),w,b
  7079   000822  E108               	bnz	u6280
  7080   000824  2969               	incf	(atox@c+1)& (0+255),w,b
  7081   000826  B4D8               	btfsc	status,2,c
  7082   000828  EF18  F004         	goto	u6281
  7083   00082C  EF1A  F004         	goto	u6280
  7084   000830                     u6281:
  7085   000830  EF22  F004         	goto	l5661
  7086   000834                     u6280:
  7087   000834                     
  7088                           ; BSR set to: 0
  7089                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 571:     ungetc(c
      +                          , fp);
  7090   000834  C068  F003         	movff	atox@c,ungetc@c
  7091   000838  C069  F004         	movff	atox@c+1,ungetc@c+1
  7092   00083C  C04B  F005         	movff	atox@fp,ungetc@fp
  7093   000840  EC7C  F015         	call	_ungetc	;wreg free
  7094   000844                     l5661:
  7095                           
  7096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 573:    if (seen_
      +                          0x && seen_0x == (i-1)) {
  7097   000844  0100               	movlb	0	; () banked
  7098   000846  5164               	movf	atox@seen_0x& (0+255),w,b
  7099   000848  1165               	iorwf	(atox@seen_0x+1)& (0+255),w,b
  7100   00084A  B4D8               	btfsc	status,2,c
  7101   00084C  EF2A  F004         	goto	u6291
  7102   000850  EF2C  F004         	goto	u6290
  7103   000854                     u6291:
  7104   000854  EF6D  F004         	goto	l5677
  7105   000858                     u6290:
  7106   000858                     
  7107                           ; BSR set to: 0
  7108   000858  0EFF               	movlw	255
  7109   00085A  2566               	addwf	atox@i& (0+255),w,b
  7110   00085C  6E4D               	movwf	??_atox^0,c
  7111   00085E  0EFF               	movlw	255
  7112   000860  2167               	addwfc	(atox@i+1)& (0+255),w,b
  7113   000862  6E4E               	movwf	(??_atox+1)^0,c
  7114   000864  5164               	movf	atox@seen_0x& (0+255),w,b
  7115   000866  184D               	xorwf	??_atox^0,w,c
  7116   000868  E107               	bnz	u6301
  7117   00086A  5165               	movf	(atox@seen_0x+1)& (0+255),w,b
  7118   00086C  184E               	xorwf	(??_atox+1)^0,w,c
  7119   00086E  A4D8               	btfss	status,2,c
  7120   000870  EF3C  F004         	goto	u6301
  7121   000874  EF3E  F004         	goto	u6300
  7122   000878                     u6301:
  7123   000878  EF6D  F004         	goto	l5677
  7124   00087C                     u6300:
  7125   00087C                     
  7126                           ; BSR set to: 0
  7127                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 574:     i--;
  7128   00087C  0766               	decf	atox@i& (0+255),f,b
  7129   00087E  A0D8               	btfss	status,0,c
  7130   000880  0767               	decf	(atox@i+1)& (0+255),f,b
  7131                           
  7132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 575:     nmatch--
      +                          ;
  7133   000882  07BC               	decf	_nmatch& (0+255),f,b
  7134   000884  A0D8               	btfss	status,0,c
  7135   000886  07BD               	decf	(_nmatch+1)& (0+255),f,b
  7136   000888  EF6D  F004         	goto	l5677
  7137   00088C                     l5667:
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 579:         dbuf
      +                          [i] = (char)c;
  7141   00088C  0E3C               	movlw	low _dbuf@doscan$F2262
  7142   00088E  2566               	addwf	atox@i& (0+255),w,b
  7143   000890  6ED9               	movwf	fsr2l,c
  7144   000892  0E01               	movlw	high _dbuf@doscan$F2262
  7145   000894  2167               	addwfc	(atox@i+1)& (0+255),w,b
  7146   000896  6EDA               	movwf	fsr2h,c
  7147   000898  C068  FFDF         	movff	atox@c,indf2
  7148   00089C                     
  7149                           ; BSR set to: 0
  7150                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 580:         ++i;
  7151   00089C  4B66               	infsnz	atox@i& (0+255),f,b
  7152   00089E  2B67               	incf	(atox@i+1)& (0+255),f,b
  7153   0008A0                     
  7154                           ; BSR set to: 0
  7155                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 581:         ++nm
      +                          atch;
  7156   0008A0  4BBC               	infsnz	_nmatch& (0+255),f,b
  7157   0008A2  2BBD               	incf	(_nmatch+1)& (0+255),f,b
  7158   0008A4                     l5673:
  7159                           
  7160                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 539:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
  7161   0008A4  0100               	movlb	0	; () banked
  7162   0008A6  5160               	movf	atox@w& (0+255),w,b
  7163   0008A8  5D66               	subwf	atox@i& (0+255),w,b
  7164   0008AA  5167               	movf	(atox@i+1)& (0+255),w,b
  7165   0008AC  0A80               	xorlw	128
  7166   0008AE  6E4D               	movwf	??_atox^0,c
  7167   0008B0  5161               	movf	(atox@w+1)& (0+255),w,b
  7168   0008B2  0A80               	xorlw	128
  7169   0008B4  584D               	subwfb	??_atox^0,w,c
  7170   0008B6  B0D8               	btfsc	status,0,c
  7171   0008B8  EF60  F004         	goto	u6311
  7172   0008BC  EF62  F004         	goto	u6310
  7173   0008C0                     u6311:
  7174   0008C0  EF6D  F004         	goto	l5677
  7175   0008C4                     u6310:
  7176   0008C4                     
  7177                           ; BSR set to: 0
  7178   0008C4  5167               	movf	(atox@i+1)& (0+255),w,b
  7179   0008C6  E109               	bnz	u6320
  7180   0008C8  0E1F               	movlw	31
  7181   0008CA  5D66               	subwf	atox@i& (0+255),w,b
  7182   0008CC  A0D8               	btfss	status,0,c
  7183   0008CE  EF6B  F004         	goto	u6321
  7184   0008D2  EF6D  F004         	goto	u6320
  7185   0008D6                     u6321:
  7186   0008D6  EF48  F003         	goto	l5615
  7187   0008DA                     u6320:
  7188   0008DA                     l5677:
  7189                           
  7190                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 583:     dbuf[i] 
      +                          = '\0';
  7191   0008DA  0E3C               	movlw	low _dbuf@doscan$F2262
  7192   0008DC  0100               	movlb	0	; () banked
  7193   0008DE  2566               	addwf	atox@i& (0+255),w,b
  7194   0008E0  6ED9               	movwf	fsr2l,c
  7195   0008E2  0E01               	movlw	high _dbuf@doscan$F2262
  7196   0008E4  2167               	addwfc	(atox@i+1)& (0+255),w,b
  7197   0008E6  6EDA               	movwf	fsr2h,c
  7198   0008E8  6ADF               	clrf	indf2,c
  7199   0008EA                     
  7200                           ; BSR set to: 0
  7201                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 587:     *pll = _
      +                          _strtoxll(&dbuf[0],&ep,16,0);
  7202   0008EA  0E3C               	movlw	low _dbuf@doscan$F2262
  7203   0008EC  6E1B               	movwf	___strtoxll@s^0,c
  7204   0008EE  0E01               	movlw	high _dbuf@doscan$F2262
  7205   0008F0  6E1C               	movwf	(___strtoxll@s+1)^0,c
  7206   0008F2  0E62               	movlw	low atox@ep
  7207   0008F4  6E1D               	movwf	___strtoxll@endptr^0,c
  7208   0008F6  0E00               	movlw	0
  7209   0008F8  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7210   0008FA  0E10               	movlw	16
  7211   0008FC  6E1E               	movwf	___strtoxll@base^0,c
  7212   0008FE  0E00               	movlw	0
  7213   000900  6E20               	movwf	___strtoxll@is_signed^0,c
  7214   000902  EC70  F000         	call	___strtoxll	;wreg free
  7215   000906  C01B  F04D         	movff	?___strtoxll,??_atox
  7216   00090A  C01C  F04E         	movff	?___strtoxll+1,??_atox+1
  7217   00090E  C01D  F04F         	movff	?___strtoxll+2,??_atox+2
  7218   000912  C01E  F050         	movff	?___strtoxll+3,??_atox+3
  7219   000916  C01F  F051         	movff	?___strtoxll+4,??_atox+4
  7220   00091A  C020  F052         	movff	?___strtoxll+5,??_atox+5
  7221   00091E  C021  F053         	movff	?___strtoxll+6,??_atox+6
  7222   000922  C022  F054         	movff	?___strtoxll+7,??_atox+7
  7223   000926  504C               	movf	atox@pll^0,w,c
  7224   000928  6ED9               	movwf	fsr2l,c
  7225   00092A  6ADA               	clrf	fsr2h,c
  7226   00092C  C04D  FFDE         	movff	??_atox,postinc2
  7227   000930  C04E  FFDE         	movff	??_atox+1,postinc2
  7228   000934  C04F  FFDE         	movff	??_atox+2,postinc2
  7229   000938  C050  FFDE         	movff	??_atox+3,postinc2
  7230   00093C  C051  FFDE         	movff	??_atox+4,postinc2
  7231   000940  C052  FFDE         	movff	??_atox+5,postinc2
  7232   000944  C053  FFDE         	movff	??_atox+6,postinc2
  7233   000948  C054  FFDE         	movff	??_atox+7,postinc2
  7234   00094C                     
  7235                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 592:     return (
      +                          errno || !i || ep == &dbuf[0]) ? (-1) - 1 : !asup;
  7236   00094C  0100               	movlb	0	; () banked
  7237   00094E  51C2               	movf	_errno& (0+255),w,b
  7238   000950  11C3               	iorwf	(_errno+1)& (0+255),w,b
  7239   000952  A4D8               	btfss	status,2,c
  7240   000954  EFAE  F004         	goto	u6331
  7241   000958  EFB0  F004         	goto	u6330
  7242   00095C                     u6331:
  7243   00095C  EFD3  F004         	goto	l5689
  7244   000960                     u6330:
  7245   000960                     
  7246                           ; BSR set to: 0
  7247   000960  5166               	movf	atox@i& (0+255),w,b
  7248   000962  1167               	iorwf	(atox@i+1)& (0+255),w,b
  7249   000964  B4D8               	btfsc	status,2,c
  7250   000966  EFB7  F004         	goto	u6341
  7251   00096A  EFB9  F004         	goto	u6340
  7252   00096E                     u6341:
  7253   00096E  EFD3  F004         	goto	l5689
  7254   000972                     u6340:
  7255   000972                     
  7256                           ; BSR set to: 0
  7257   000972  0E3C               	movlw	low _dbuf@doscan$F2262
  7258   000974  1962               	xorwf	atox@ep& (0+255),w,b
  7259   000976  E109               	bnz	u6350
  7260   000978  0E01               	movlw	high _dbuf@doscan$F2262
  7261   00097A  1963               	xorwf	(atox@ep+1)& (0+255),w,b
  7262   00097C  B4D8               	btfsc	status,2,c
  7263   00097E  EFC3  F004         	goto	u6351
  7264   000982  EFC5  F004         	goto	u6350
  7265   000986                     u6351:
  7266   000986  EFD3  F004         	goto	l5689
  7267   00098A                     u6350:
  7268   00098A                     
  7269                           ; BSR set to: 0
  7270   00098A  51D3               	movf	_asup& (0+255),w,b
  7271   00098C  B4D8               	btfsc	status,2,c
  7272   00098E  EFCB  F004         	goto	u6361
  7273   000992  EFCE  F004         	goto	u6360
  7274   000996                     u6361:
  7275   000996  0E01               	movlw	1
  7276   000998  EFCF  F004         	goto	u6370
  7277   00099C                     u6360:
  7278   00099C  0E00               	movlw	0
  7279   00099E                     u6370:
  7280   00099E  6E4B               	movwf	?_atox^0,c
  7281   0009A0  6A4C               	clrf	(?_atox+1)^0,c
  7282   0009A2  EFD7  F004         	goto	l1339
  7283   0009A6                     l5689:
  7284                           
  7285                           ; BSR set to: 0
  7286   0009A6  0EFF               	movlw	255
  7287   0009A8  6E4C               	movwf	(?_atox+1)^0,c
  7288   0009AA  0EFE               	movlw	254
  7289   0009AC  6E4B               	movwf	?_atox^0,c
  7290   0009AE                     l1339:
  7291                           
  7292                           ; BSR set to: 0
  7293   0009AE  0012               	return		;funcret
  7294   0009B0                     __end_of_atox:
  7295                           	callstack 0
  7296                           
  7297 ;; *************** function _skipws *****************
  7298 ;; Defined at:
  7299 ;;		line 74 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  7302 ;;		 -> sscanf@f(11), 
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;  c               2   15[COMRAM] int 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      void 
  7307 ;; Registers used:
  7308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7314 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;Total ram usage:        4 bytes
  7319 ;; Hardware stack levels used: 1
  7320 ;; Hardware stack levels required when called: 3
  7321 ;; This function calls:
  7322 ;;		_fgetc
  7323 ;;		_ungetc
  7324 ;; This function is called by:
  7325 ;;		_atox
  7326 ;;		_vfsfcnvrt
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text27
  7331   002F26                     __ptext27:
  7332                           	callstack 0
  7333   002F26                     _skipws:
  7334                           	callstack 20
  7335   002F26                     
  7336                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 74: static void s
      +                          kipws(FILE *fp);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 75
      +                          : {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 76:     int c;
      +                          ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
  7337   002F26  EFB5  F017         	goto	l5421
  7338   002F2A                     l5415:
  7339                           
  7340                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 79:         if (!
      +                          (((c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
  7341   002F2A  0E20               	movlw	32
  7342   002F2C  1810               	xorwf	skipws@c^0,w,c
  7343   002F2E  1011               	iorwf	(skipws@c+1)^0,w,c
  7344   002F30  B4D8               	btfsc	status,2,c
  7345   002F32  EF9D  F017         	goto	u5671
  7346   002F36  EF9F  F017         	goto	u5670
  7347   002F3A                     u5671:
  7348   002F3A  EFB5  F017         	goto	l5421
  7349   002F3E                     u5670:
  7350   002F3E  C010  F00F         	movff	skipws@c,??_skipws
  7351   002F42  0EF7               	movlw	247
  7352   002F44  260F               	addwf	??_skipws^0,f,c
  7353   002F46  0E04               	movlw	4
  7354   002F48  640F               	cpfsgt	??_skipws^0,c
  7355   002F4A  EFA9  F017         	goto	u5681
  7356   002F4E  EFAB  F017         	goto	u5680
  7357   002F52                     u5681:
  7358   002F52  EFB5  F017         	goto	l5421
  7359   002F56                     u5680:
  7360   002F56                     
  7361                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 80:             u
      +                          ngetc(c, fp);
  7362   002F56  C010  F003         	movff	skipws@c,ungetc@c
  7363   002F5A  C011  F004         	movff	skipws@c+1,ungetc@c+1
  7364   002F5E  C00E  F005         	movff	skipws@fp,ungetc@fp
  7365   002F62  EC7C  F015         	call	_ungetc	;wreg free
  7366                           
  7367                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 81:             b
      +                          reak;
  7368   002F66  EFC7  F017         	goto	l1327
  7369   002F6A                     l5421:
  7370                           
  7371                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
  7372   002F6A  C00E  F005         	movff	skipws@fp,fgetc@fp
  7373   002F6E  EC79  F00E         	call	_fgetc	;wreg free
  7374   002F72  C005  F010         	movff	?_fgetc,skipws@c
  7375   002F76  C006  F011         	movff	?_fgetc+1,skipws@c+1
  7376   002F7A  2810               	incf	skipws@c^0,w,c
  7377   002F7C  E106               	bnz	u5691
  7378   002F7E  2811               	incf	(skipws@c+1)^0,w,c
  7379   002F80  A4D8               	btfss	status,2,c
  7380   002F82  EFC5  F017         	goto	u5691
  7381   002F86  EFC7  F017         	goto	u5690
  7382   002F8A                     u5691:
  7383   002F8A  EF95  F017         	goto	l5415
  7384   002F8E                     u5690:
  7385   002F8E                     l1327:
  7386   002F8E  0012               	return		;funcret
  7387   002F90                     __end_of_skipws:
  7388                           	callstack 0
  7389                           
  7390 ;; *************** function _ungetc *****************
  7391 ;; Defined at:
  7392 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_getc.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  c               2    2[COMRAM] int 
  7395 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7396 ;;		 -> sscanf@f(11), 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  2    2[COMRAM] int 
  7401 ;; Registers used:
  7402 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7408 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;Total ram usage:        5 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 1
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_skipws
  7419 ;;		_atox
  7420 ;;		_vfsfcnvrt
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text28
  7425   002AF8                     __ptext28:
  7426                           	callstack 0
  7427   002AF8                     _ungetc:
  7428                           	callstack 22
  7429   002AF8  2803               	incf	ungetc@c^0,w,c
  7430   002AFA  E106               	bnz	u5581
  7431   002AFC  2804               	incf	(ungetc@c+1)^0,w,c
  7432   002AFE  A4D8               	btfss	status,2,c
  7433   002B00  EF84  F015         	goto	u5581
  7434   002B04  EF86  F015         	goto	u5580
  7435   002B08                     u5581:
  7436   002B08  EF88  F015         	goto	l5369
  7437   002B0C                     u5580:
  7438   002B0C  EFC9  F015         	goto	l1480
  7439   002B10                     l5369:
  7440   002B10  5005               	movf	ungetc@fp^0,w,c
  7441   002B12  A4D8               	btfss	status,2,c
  7442   002B14  EF8E  F015         	goto	u5591
  7443   002B18  EF90  F015         	goto	u5590
  7444   002B1C                     u5591:
  7445   002B1C  EFA3  F015         	goto	l5377
  7446   002B20                     u5590:
  7447   002B20  0E03               	movlw	3
  7448   002B22  0100               	movlb	0	; () banked
  7449   002B24  19D2               	xorwf	___ungetcnt& (0+255),w,b
  7450   002B26  B4D8               	btfsc	status,2,c
  7451   002B28  EF98  F015         	goto	u5601
  7452   002B2C  EF9A  F015         	goto	u5600
  7453   002B30                     u5601:
  7454   002B30  EFC9  F015         	goto	l1480
  7455   002B34                     u5600:
  7456   002B34                     
  7457                           ; BSR set to: 0
  7458   002B34  51D2               	movf	___ungetcnt& (0+255),w,b
  7459   002B36  0FB3               	addlw	low ___ungetbuf
  7460   002B38  6ED9               	movwf	fsr2l,c
  7461   002B3A  6ADA               	clrf	fsr2h,c
  7462   002B3C  C003  FFDF         	movff	ungetc@c,indf2
  7463   002B40                     
  7464                           ; BSR set to: 0
  7465   002B40  2BD2               	incf	___ungetcnt& (0+255),f,b
  7466   002B42  EFC9  F015         	goto	l1480
  7467   002B46                     l5377:
  7468   002B46  5005               	movf	ungetc@fp^0,w,c
  7469   002B48  6ED9               	movwf	fsr2l,c
  7470   002B4A  6ADA               	clrf	fsr2h,c
  7471   002B4C  0E07               	movlw	7
  7472   002B4E  26D9               	addwf	fsr2l,f,c
  7473   002B50  0E03               	movlw	3
  7474   002B52  18DE               	xorwf	postinc2,w,c
  7475   002B54  10DE               	iorwf	postinc2,w,c
  7476   002B56  B4D8               	btfsc	status,2,c
  7477   002B58  EFB0  F015         	goto	u5611
  7478   002B5C  EFB2  F015         	goto	u5610
  7479   002B60                     u5611:
  7480   002B60  EFC9  F015         	goto	l1480
  7481   002B64                     u5610:
  7482   002B64  5005               	movf	ungetc@fp^0,w,c
  7483   002B66  6ED9               	movwf	fsr2l,c
  7484   002B68  6ADA               	clrf	fsr2h,c
  7485   002B6A  0E07               	movlw	7
  7486   002B6C  26D9               	addwf	fsr2l,f,c
  7487   002B6E  50DF               	movf	indf2,w,c
  7488   002B70  6E06               	movwf	??_ungetc^0,c
  7489   002B72  5005               	movf	ungetc@fp^0,w,c
  7490   002B74  2406               	addwf	??_ungetc^0,w,c
  7491   002B76  6ED9               	movwf	fsr2l,c
  7492   002B78  6ADA               	clrf	fsr2h,c
  7493   002B7A  0E04               	movlw	4
  7494   002B7C  26D9               	addwf	fsr2l,f,c
  7495   002B7E  C003  FFDF         	movff	ungetc@c,indf2
  7496   002B82  5005               	movf	ungetc@fp^0,w,c
  7497   002B84  6ED9               	movwf	fsr2l,c
  7498   002B86  6ADA               	clrf	fsr2h,c
  7499   002B88  0E07               	movlw	7
  7500   002B8A  26D9               	addwf	fsr2l,f,c
  7501   002B8C  2ADE               	incf	postinc2,f,c
  7502   002B8E  0E00               	movlw	0
  7503   002B90  22DD               	addwfc	postdec2,f,c
  7504   002B92                     l1480:
  7505   002B92  0012               	return		;funcret
  7506   002B94                     __end_of_ungetc:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function _fgetc *****************
  7510 ;; Defined at:
  7511 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_getc.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7514 ;;		 -> sscanf@f(11), 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  c               2   11[COMRAM] int 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  2    4[COMRAM] int 
  7519 ;; Registers used:
  7520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;Total ram usage:        9 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 2
  7533 ;; This function calls:
  7534 ;;		_getch
  7535 ;; This function is called by:
  7536 ;;		_skipws
  7537 ;;		_atox
  7538 ;;		_vfsfcnvrt
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text29
  7543   001CF2                     __ptext29:
  7544                           	callstack 0
  7545   001CF2                     _fgetc:
  7546                           	callstack 20
  7547   001CF2  5005               	movf	fgetc@fp^0,w,c
  7548   001CF4  A4D8               	btfss	status,2,c
  7549   001CF6  EF7F  F00E         	goto	u5621
  7550   001CFA  EF81  F00E         	goto	u5620
  7551   001CFE                     u5621:
  7552   001CFE  EF9E  F00E         	goto	l5389
  7553   001D02                     u5620:
  7554   001D02  0100               	movlb	0	; () banked
  7555   001D04  51D2               	movf	___ungetcnt& (0+255),w,b
  7556   001D06  A4D8               	btfss	status,2,c
  7557   001D08  EF88  F00E         	goto	u5631
  7558   001D0C  EF8A  F00E         	goto	u5630
  7559   001D10                     u5631:
  7560   001D10  EF92  F00E         	goto	l5387
  7561   001D14                     u5630:
  7562   001D14                     
  7563                           ; BSR set to: 0
  7564   001D14  EC51  F01A         	call	_getch	;wreg free
  7565   001D18  C003  F00C         	movff	?_getch,fgetc@c
  7566   001D1C  C004  F00D         	movff	?_getch+1,fgetc@c+1
  7567   001D20  EFF5  F00E         	goto	l5401
  7568   001D24                     l5387:
  7569                           
  7570                           ; BSR set to: 0
  7571   001D24  07D2               	decf	___ungetcnt& (0+255),f,b
  7572   001D26  51D2               	movf	___ungetcnt& (0+255),w,b
  7573   001D28  0FB3               	addlw	low ___ungetbuf
  7574   001D2A  6ED9               	movwf	fsr2l,c
  7575   001D2C  6ADA               	clrf	fsr2h,c
  7576   001D2E  50DF               	movf	indf2,w,c
  7577   001D30  6E07               	movwf	??_fgetc^0,c
  7578   001D32  5007               	movf	??_fgetc^0,w,c
  7579   001D34  6E0C               	movwf	fgetc@c^0,c
  7580   001D36  6A0D               	clrf	(fgetc@c+1)^0,c
  7581   001D38  EFF5  F00E         	goto	l5401
  7582   001D3C                     l5389:
  7583   001D3C  5005               	movf	fgetc@fp^0,w,c
  7584   001D3E  6ED9               	movwf	fsr2l,c
  7585   001D40  6ADA               	clrf	fsr2h,c
  7586   001D42  0E07               	movlw	7
  7587   001D44  26D9               	addwf	fsr2l,f,c
  7588   001D46  50DE               	movf	postinc2,w,c
  7589   001D48  10DE               	iorwf	postinc2,w,c
  7590   001D4A  B4D8               	btfsc	status,2,c
  7591   001D4C  EFAA  F00E         	goto	u5641
  7592   001D50  EFAC  F00E         	goto	u5640
  7593   001D54                     u5641:
  7594   001D54  EFC5  F00E         	goto	l5393
  7595   001D58                     u5640:
  7596   001D58  5005               	movf	fgetc@fp^0,w,c
  7597   001D5A  6ED9               	movwf	fsr2l,c
  7598   001D5C  6ADA               	clrf	fsr2h,c
  7599   001D5E  0E07               	movlw	7
  7600   001D60  26D9               	addwf	fsr2l,f,c
  7601   001D62  06DE               	decf	postinc2,f,c
  7602   001D64  0E00               	movlw	0
  7603   001D66  5ADD               	subwfb	postdec2,f,c
  7604   001D68  CFDE F007          	movff	postinc2,??_fgetc
  7605   001D6C  CFDD F008          	movff	postdec2,??_fgetc+1
  7606   001D70  5005               	movf	fgetc@fp^0,w,c
  7607   001D72  2407               	addwf	??_fgetc^0,w,c
  7608   001D74  6ED9               	movwf	fsr2l,c
  7609   001D76  6ADA               	clrf	fsr2h,c
  7610   001D78  0E04               	movlw	4
  7611   001D7A  26D9               	addwf	fsr2l,f,c
  7612   001D7C  50DF               	movf	indf2,w,c
  7613   001D7E  6E09               	movwf	(??_fgetc+2)^0,c
  7614   001D80  5009               	movf	(??_fgetc+2)^0,w,c
  7615   001D82  6E0C               	movwf	fgetc@c^0,c
  7616   001D84  6A0D               	clrf	(fgetc@c+1)^0,c
  7617   001D86  EFF5  F00E         	goto	l5401
  7618   001D8A                     l5393:
  7619   001D8A  5005               	movf	fgetc@fp^0,w,c
  7620   001D8C  6ED9               	movwf	fsr2l,c
  7621   001D8E  6ADA               	clrf	fsr2h,c
  7622   001D90  0E02               	movlw	2
  7623   001D92  26D9               	addwf	fsr2l,f,c
  7624   001D94  CFDE F007          	movff	postinc2,??_fgetc
  7625   001D98  CFDD F008          	movff	postdec2,??_fgetc+1
  7626   001D9C  5005               	movf	fgetc@fp^0,w,c
  7627   001D9E  6ED9               	movwf	fsr2l,c
  7628   001DA0  6ADA               	clrf	fsr2h,c
  7629   001DA2  CFDE F009          	movff	postinc2,??_fgetc+2
  7630   001DA6  CFDD F00A          	movff	postdec2,??_fgetc+3
  7631   001DAA  5007               	movf	??_fgetc^0,w,c
  7632   001DAC  2409               	addwf	(??_fgetc+2)^0,w,c
  7633   001DAE  6ED9               	movwf	fsr2l,c
  7634   001DB0  5008               	movf	(??_fgetc+1)^0,w,c
  7635   001DB2  200A               	addwfc	(??_fgetc+3)^0,w,c
  7636   001DB4  6EDA               	movwf	fsr2h,c
  7637   001DB6  50DF               	movf	indf2,w,c
  7638   001DB8  6E0B               	movwf	(??_fgetc+4)^0,c
  7639   001DBA  500B               	movf	(??_fgetc+4)^0,w,c
  7640   001DBC  6E0C               	movwf	fgetc@c^0,c
  7641   001DBE  6A0D               	clrf	(fgetc@c+1)^0,c
  7642   001DC0  500C               	movf	fgetc@c^0,w,c
  7643   001DC2  100D               	iorwf	(fgetc@c+1)^0,w,c
  7644   001DC4  A4D8               	btfss	status,2,c
  7645   001DC6  EFE7  F00E         	goto	u5651
  7646   001DCA  EFE9  F00E         	goto	u5650
  7647   001DCE                     u5651:
  7648   001DCE  EFED  F00E         	goto	l5399
  7649   001DD2                     u5650:
  7650   001DD2  680C               	setf	fgetc@c^0,c
  7651   001DD4  680D               	setf	(fgetc@c+1)^0,c
  7652   001DD6  EFF5  F00E         	goto	l5401
  7653   001DDA                     l5399:
  7654   001DDA  5005               	movf	fgetc@fp^0,w,c
  7655   001DDC  6ED9               	movwf	fsr2l,c
  7656   001DDE  6ADA               	clrf	fsr2h,c
  7657   001DE0  0E02               	movlw	2
  7658   001DE2  26D9               	addwf	fsr2l,f,c
  7659   001DE4  2ADE               	incf	postinc2,f,c
  7660   001DE6  0E00               	movlw	0
  7661   001DE8  22DD               	addwfc	postdec2,f,c
  7662   001DEA                     l5401:
  7663   001DEA  C00C  F005         	movff	fgetc@c,?_fgetc
  7664   001DEE  C00D  F006         	movff	fgetc@c+1,?_fgetc+1
  7665   001DF2  0012               	return		;funcret
  7666   001DF4                     __end_of_fgetc:
  7667                           	callstack 0
  7668                           
  7669 ;; *************** function _getch *****************
  7670 ;; Defined at:
  7671 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\getch.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;		None
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  2    2[COMRAM] int 
  7678 ;; Registers used:
  7679 ;;		None
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;Total ram usage:        2 bytes
  7690 ;; Hardware stack levels used: 1
  7691 ;; Hardware stack levels required when called: 1
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_fgetc
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text30
  7700   0034A2                     __ptext30:
  7701                           	callstack 0
  7702   0034A2                     _getch:
  7703                           	callstack 20
  7704   0034A2  6803               	setf	?_getch^0,c
  7705   0034A4  6804               	setf	(?_getch+1)^0,c
  7706   0034A6  0012               	return		;funcret
  7707   0034A8                     __end_of_getch:
  7708                           	callstack 0
  7709                           
  7710 ;; *************** function ___strtoxll *****************
  7711 ;; Defined at:
  7712 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__strtoxll.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  s               2   26[COMRAM] PTR const unsigned char 
  7715 ;;		 -> dbuf@doscan$F2262(32), 
  7716 ;;  endptr          1   28[COMRAM] PTR PTR unsigned char 
  7717 ;;		 -> atox@ep(2), 
  7718 ;;  base            2   29[COMRAM] int 
  7719 ;;  is_signed       1   31[COMRAM] unsigned char 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  a               8   63[COMRAM] unsigned long long 
  7722 ;;  limit           8   54[COMRAM] unsigned long long 
  7723 ;;  prev_a          8   42[COMRAM] unsigned long long 
  7724 ;;  cp              2   71[COMRAM] PTR const unsigned char 
  7725 ;;		 -> dbuf@doscan$F2262(32), 
  7726 ;;  c               1   73[COMRAM] unsigned char 
  7727 ;;  flags           1   62[COMRAM] enum E246
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  8   26[COMRAM] unsigned long long 
  7730 ;; Registers used:
  7731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7737 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7738 ;;      Locals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7739 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7740 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7741 ;;Total ram usage:       48 bytes
  7742 ;; Hardware stack levels used: 1
  7743 ;; Hardware stack levels required when called: 2
  7744 ;; This function calls:
  7745 ;;		___omul
  7746 ;; This function is called by:
  7747 ;;		_atox
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text31
  7752   0000E0                     __ptext31:
  7753                           	callstack 0
  7754   0000E0                     ___strtoxll:
  7755                           	callstack 20
  7756   0000E0  6A3F               	clrf	___strtoxll@flags^0,c
  7757   0000E2  EE20  F040         	lfsr	2,___strtoxll@a
  7758   0000E6  0E07               	movlw	7
  7759   0000E8                     u5701:
  7760   0000E8  6ADE               	clrf	postinc2,c
  7761   0000EA  06E8               	decf	wreg,f,c
  7762   0000EC  E2FD               	bc	u5701
  7763   0000EE  C01B  F048         	movff	___strtoxll@s,___strtoxll@cp
  7764   0000F2  C01C  F049         	movff	___strtoxll@s+1,___strtoxll@cp+1
  7765   0000F6  BE1F               	btfsc	(___strtoxll@base+1)^0,7,c
  7766   0000F8  EF89  F000         	goto	u5710
  7767   0000FC  501F               	movf	(___strtoxll@base+1)^0,w,c
  7768   0000FE  E107               	bnz	u5711
  7769   000100  0E25               	movlw	37
  7770   000102  5C1E               	subwf	___strtoxll@base^0,w,c
  7771   000104  B0D8               	btfsc	status,0,c
  7772   000106  EF87  F000         	goto	u5711
  7773   00010A  EF89  F000         	goto	u5710
  7774   00010E                     u5711:
  7775   00010E  EF92  F000         	goto	l5433
  7776   000112                     u5710:
  7777   000112  041E               	decf	___strtoxll@base^0,w,c
  7778   000114  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7779   000116  A4D8               	btfss	status,2,c
  7780   000118  EF90  F000         	goto	u5721
  7781   00011C  EF92  F000         	goto	u5720
  7782   000120                     u5721:
  7783   000120  EF99  F000         	goto	l5435
  7784   000124                     u5720:
  7785   000124                     l5433:
  7786   000124  0E00               	movlw	0
  7787   000126  0100               	movlb	0	; () banked
  7788   000128  6FC3               	movwf	(_errno+1)& (0+255),b
  7789   00012A  0E16               	movlw	22
  7790   00012C  6FC2               	movwf	_errno& (0+255),b
  7791   00012E  EFFA  F002         	goto	l5539
  7792   000132                     l5435:
  7793   000132  5048               	movf	___strtoxll@cp^0,w,c
  7794   000134  1049               	iorwf	(___strtoxll@cp+1)^0,w,c
  7795   000136  B4D8               	btfsc	status,2,c
  7796   000138  EFA0  F000         	goto	u5731
  7797   00013C  EFA2  F000         	goto	u5730
  7798   000140                     u5731:
  7799   000140  EFFA  F002         	goto	l5539
  7800   000144                     u5730:
  7801   000144  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7802   000148  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7803   00014C  50DF               	movf	indf2,w,c
  7804   00014E  A4D8               	btfss	status,2,c
  7805   000150  EFAC  F000         	goto	u5741
  7806   000154  EFAE  F000         	goto	u5740
  7807   000158                     u5741:
  7808   000158  EFB0  F000         	goto	l5439
  7809   00015C                     u5740:
  7810   00015C  EFFA  F002         	goto	l5539
  7811   000160                     l5439:
  7812   000160  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7813   000164  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7814   000168  50DF               	movf	indf2,w,c
  7815   00016A  6E4A               	movwf	___strtoxll@c^0,c
  7816   00016C  EFC0  F000         	goto	l5443
  7817   000170                     l5441:
  7818   000170  4A48               	infsnz	___strtoxll@cp^0,f,c
  7819   000172  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7820   000174  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7821   000178  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7822   00017C  50DF               	movf	indf2,w,c
  7823   00017E  6E4A               	movwf	___strtoxll@c^0,c
  7824   000180                     l5443:
  7825   000180  0E20               	movlw	32
  7826   000182  184A               	xorwf	___strtoxll@c^0,w,c
  7827   000184  B4D8               	btfsc	status,2,c
  7828   000186  EFC7  F000         	goto	u5751
  7829   00018A  EFC9  F000         	goto	u5750
  7830   00018E                     u5751:
  7831   00018E  EFB8  F000         	goto	l5441
  7832   000192                     u5750:
  7833   000192  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7834   000196  0EF7               	movlw	247
  7835   000198  2623               	addwf	??___strtoxll^0,f,c
  7836   00019A  0E04               	movlw	4
  7837   00019C  6423               	cpfsgt	??___strtoxll^0,c
  7838   00019E  EFD3  F000         	goto	u5761
  7839   0001A2  EFD5  F000         	goto	u5760
  7840   0001A6                     u5761:
  7841   0001A6  EFB8  F000         	goto	l5441
  7842   0001AA                     u5760:
  7843   0001AA  0E2D               	movlw	45
  7844   0001AC  184A               	xorwf	___strtoxll@c^0,w,c
  7845   0001AE  A4D8               	btfss	status,2,c
  7846   0001B0  EFDC  F000         	goto	u5771
  7847   0001B4  EFDE  F000         	goto	u5770
  7848   0001B8                     u5771:
  7849   0001B8  EFE9  F000         	goto	l5453
  7850   0001BC                     u5770:
  7851   0001BC  803F               	bsf	___strtoxll@flags^0,0,c
  7852   0001BE                     l5451:
  7853   0001BE  4A48               	infsnz	___strtoxll@cp^0,f,c
  7854   0001C0  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7855   0001C2  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7856   0001C6  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7857   0001CA  50DF               	movf	indf2,w,c
  7858   0001CC  6E4A               	movwf	___strtoxll@c^0,c
  7859   0001CE  EFF4  F000         	goto	l5457
  7860   0001D2                     l5453:
  7861   0001D2  0E2B               	movlw	43
  7862   0001D4  184A               	xorwf	___strtoxll@c^0,w,c
  7863   0001D6  A4D8               	btfss	status,2,c
  7864   0001D8  EFF0  F000         	goto	u5781
  7865   0001DC  EFF2  F000         	goto	u5780
  7866   0001E0                     u5781:
  7867   0001E0  EFF4  F000         	goto	l5457
  7868   0001E4                     u5780:
  7869   0001E4  EFDF  F000         	goto	l5451
  7870   0001E8                     l5457:
  7871   0001E8  0E30               	movlw	48
  7872   0001EA  184A               	xorwf	___strtoxll@c^0,w,c
  7873   0001EC  A4D8               	btfss	status,2,c
  7874   0001EE  EFFB  F000         	goto	u5791
  7875   0001F2  EFFD  F000         	goto	u5790
  7876   0001F6                     u5791:
  7877   0001F6  EF96  F001         	goto	l5493
  7878   0001FA                     u5790:
  7879   0001FA  4A48               	infsnz	___strtoxll@cp^0,f,c
  7880   0001FC  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7881   0001FE  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7882   000202  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7883   000206  50DF               	movf	indf2,w,c
  7884   000208  6E4A               	movwf	___strtoxll@c^0,c
  7885   00020A  501E               	movf	___strtoxll@base^0,w,c
  7886   00020C  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7887   00020E  B4D8               	btfsc	status,2,c
  7888   000210  EF0C  F001         	goto	u5801
  7889   000214  EF0E  F001         	goto	u5800
  7890   000218                     u5801:
  7891   000218  EF18  F001         	goto	l5465
  7892   00021C                     u5800:
  7893   00021C  0E10               	movlw	16
  7894   00021E  181E               	xorwf	___strtoxll@base^0,w,c
  7895   000220  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  7896   000222  A4D8               	btfss	status,2,c
  7897   000224  EF16  F001         	goto	u5811
  7898   000228  EF18  F001         	goto	u5810
  7899   00022C                     u5811:
  7900   00022C  EF88  F001         	goto	l5487
  7901   000230                     u5810:
  7902   000230                     l5465:
  7903   000230  0E78               	movlw	120
  7904   000232  184A               	xorwf	___strtoxll@c^0,w,c
  7905   000234  B4D8               	btfsc	status,2,c
  7906   000236  EF1F  F001         	goto	u5821
  7907   00023A  EF21  F001         	goto	u5820
  7908   00023E                     u5821:
  7909   00023E  EF2A  F001         	goto	l5469
  7910   000242                     u5820:
  7911   000242  0E58               	movlw	88
  7912   000244  184A               	xorwf	___strtoxll@c^0,w,c
  7913   000246  A4D8               	btfss	status,2,c
  7914   000248  EF28  F001         	goto	u5831
  7915   00024C  EF2A  F001         	goto	u5830
  7916   000250                     u5831:
  7917   000250  EF88  F001         	goto	l5487
  7918   000254                     u5830:
  7919   000254                     l5469:
  7920   000254  0E00               	movlw	0
  7921   000256  6E1F               	movwf	(___strtoxll@base+1)^0,c
  7922   000258  0E10               	movlw	16
  7923   00025A  6E1E               	movwf	___strtoxll@base^0,c
  7924   00025C  4A48               	infsnz	___strtoxll@cp^0,f,c
  7925   00025E  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  7926   000260  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  7927   000264  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  7928   000268  50DF               	movf	indf2,w,c
  7929   00026A  6E4A               	movwf	___strtoxll@c^0,c
  7930   00026C  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7931   000270  0E20               	movlw	32
  7932   000272  1223               	iorwf	??___strtoxll^0,f,c
  7933   000274  0E9F               	movlw	159
  7934   000276  2623               	addwf	??___strtoxll^0,f,c
  7935   000278  0E1A               	movlw	26
  7936   00027A  6023               	cpfslt	??___strtoxll^0,c
  7937   00027C  EF42  F001         	goto	u5841
  7938   000280  EF44  F001         	goto	u5840
  7939   000284                     u5841:
  7940   000284  EF68  F001         	goto	l5481
  7941   000288                     u5840:
  7942   000288  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7943   00028C  0E9F               	movlw	159
  7944   00028E  2623               	addwf	??___strtoxll^0,f,c
  7945   000290  0E19               	movlw	25
  7946   000292  6423               	cpfsgt	??___strtoxll^0,c
  7947   000294  EF4E  F001         	goto	u5851
  7948   000298  EF50  F001         	goto	u5850
  7949   00029C                     u5851:
  7950   00029C  EF55  F001         	goto	l5479
  7951   0002A0                     u5850:
  7952   0002A0  C04A  F033         	movff	___strtoxll@c,___strtoxll$2312
  7953   0002A4  6A34               	clrf	(___strtoxll$2312+1)^0,c
  7954   0002A6  EF5C  F001         	goto	l1427
  7955   0002AA                     l5479:
  7956   0002AA  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7957   0002AE  0E5F               	movlw	95
  7958   0002B0  1623               	andwf	??___strtoxll^0,f,c
  7959   0002B2  5023               	movf	??___strtoxll^0,w,c
  7960   0002B4  6E33               	movwf	___strtoxll$2312^0,c
  7961   0002B6  6A34               	clrf	(___strtoxll$2312+1)^0,c
  7962   0002B8                     l1427:
  7963   0002B8  C033  F023         	movff	___strtoxll$2312,??___strtoxll
  7964   0002BC  0EC9               	movlw	201
  7965   0002BE  2623               	addwf	??___strtoxll^0,f,c
  7966   0002C0  0E10               	movlw	16
  7967   0002C2  6023               	cpfslt	??___strtoxll^0,c
  7968   0002C4  EF66  F001         	goto	u5861
  7969   0002C8  EF68  F001         	goto	u5860
  7970   0002CC                     u5861:
  7971   0002CC  EF82  F001         	goto	l5485
  7972   0002D0                     u5860:
  7973   0002D0                     l5481:
  7974   0002D0  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7975   0002D4  0E20               	movlw	32
  7976   0002D6  1223               	iorwf	??___strtoxll^0,f,c
  7977   0002D8  0E9F               	movlw	159
  7978   0002DA  2623               	addwf	??___strtoxll^0,f,c
  7979   0002DC  0E19               	movlw	25
  7980   0002DE  6423               	cpfsgt	??___strtoxll^0,c
  7981   0002E0  EF74  F001         	goto	u5871
  7982   0002E4  EF76  F001         	goto	u5870
  7983   0002E8                     u5871:
  7984   0002E8  EF96  F001         	goto	l5493
  7985   0002EC                     u5870:
  7986   0002EC  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  7987   0002F0  0ED0               	movlw	208
  7988   0002F2  2623               	addwf	??___strtoxll^0,f,c
  7989   0002F4  0E09               	movlw	9
  7990   0002F6  6423               	cpfsgt	??___strtoxll^0,c
  7991   0002F8  EF80  F001         	goto	u5881
  7992   0002FC  EF82  F001         	goto	u5880
  7993   000300                     u5881:
  7994   000300  EF96  F001         	goto	l5493
  7995   000304                     u5880:
  7996   000304                     l5485:
  7997   000304  843F               	bsf	___strtoxll@flags^0,2,c
  7998   000306  0648               	decf	___strtoxll@cp^0,f,c
  7999   000308  A0D8               	btfss	status,0,c
  8000   00030A  0649               	decf	(___strtoxll@cp+1)^0,f,c
  8001   00030C  EFFA  F002         	goto	l5539
  8002   000310                     l5487:
  8003   000310  843F               	bsf	___strtoxll@flags^0,2,c
  8004   000312  501E               	movf	___strtoxll@base^0,w,c
  8005   000314  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  8006   000316  A4D8               	btfss	status,2,c
  8007   000318  EF90  F001         	goto	u5891
  8008   00031C  EF92  F001         	goto	u5890
  8009   000320                     u5891:
  8010   000320  EF96  F001         	goto	l5493
  8011   000324                     u5890:
  8012   000324  0E00               	movlw	0
  8013   000326  6E1F               	movwf	(___strtoxll@base+1)^0,c
  8014   000328  0E08               	movlw	8
  8015   00032A  6E1E               	movwf	___strtoxll@base^0,c
  8016   00032C                     l5493:
  8017   00032C  501E               	movf	___strtoxll@base^0,w,c
  8018   00032E  101F               	iorwf	(___strtoxll@base+1)^0,w,c
  8019   000330  A4D8               	btfss	status,2,c
  8020   000332  EF9D  F001         	goto	u5901
  8021   000336  EF9F  F001         	goto	u5900
  8022   00033A                     u5901:
  8023   00033A  EFA3  F001         	goto	l1430
  8024   00033E                     u5900:
  8025   00033E  0E00               	movlw	0
  8026   000340  6E1F               	movwf	(___strtoxll@base+1)^0,c
  8027   000342  0E0A               	movlw	10
  8028   000344  6E1E               	movwf	___strtoxll@base^0,c
  8029   000346                     l1430:
  8030   000346  5020               	movf	___strtoxll@is_signed^0,w,c
  8031   000348  B4D8               	btfsc	status,2,c
  8032   00034A  EFA9  F001         	goto	u5911
  8033   00034E  EFAB  F001         	goto	u5910
  8034   000352                     u5911:
  8035   000352  EFD6  F001         	goto	l1431
  8036   000356                     u5910:
  8037   000356  B03F               	btfsc	___strtoxll@flags^0,0,c
  8038   000358  EFB0  F001         	goto	u5921
  8039   00035C  EFB2  F001         	goto	u5920
  8040   000360                     u5921:
  8041   000360  EFC4  F001         	goto	l5501
  8042   000364                     u5920:
  8043   000364  0EFF               	movlw	255
  8044   000366  6E37               	movwf	___strtoxll@limit^0,c
  8045   000368  0EFF               	movlw	255
  8046   00036A  6E38               	movwf	(___strtoxll@limit+1)^0,c
  8047   00036C  0EFF               	movlw	255
  8048   00036E  6E39               	movwf	(___strtoxll@limit+2)^0,c
  8049   000370  0EFF               	movlw	255
  8050   000372  6E3A               	movwf	(___strtoxll@limit+3)^0,c
  8051   000374  0EFF               	movlw	255
  8052   000376  6E3B               	movwf	(___strtoxll@limit+4)^0,c
  8053   000378  0EFF               	movlw	255
  8054   00037A  6E3C               	movwf	(___strtoxll@limit+5)^0,c
  8055   00037C  0EFF               	movlw	255
  8056   00037E  6E3D               	movwf	(___strtoxll@limit+6)^0,c
  8057   000380  0E7F               	movlw	127
  8058   000382  6E3E               	movwf	(___strtoxll@limit+7)^0,c
  8059   000384  EFDE  F001         	goto	l1437
  8060   000388                     l5501:
  8061   000388  0E00               	movlw	0
  8062   00038A  6E37               	movwf	___strtoxll@limit^0,c
  8063   00038C  0E00               	movlw	0
  8064   00038E  6E38               	movwf	(___strtoxll@limit+1)^0,c
  8065   000390  0E00               	movlw	0
  8066   000392  6E39               	movwf	(___strtoxll@limit+2)^0,c
  8067   000394  0E00               	movlw	0
  8068   000396  6E3A               	movwf	(___strtoxll@limit+3)^0,c
  8069   000398  0E00               	movlw	0
  8070   00039A  6E3B               	movwf	(___strtoxll@limit+4)^0,c
  8071   00039C  0E00               	movlw	0
  8072   00039E  6E3C               	movwf	(___strtoxll@limit+5)^0,c
  8073   0003A0  0E00               	movlw	0
  8074   0003A2  6E3D               	movwf	(___strtoxll@limit+6)^0,c
  8075   0003A4  0E80               	movlw	128
  8076   0003A6  6E3E               	movwf	(___strtoxll@limit+7)^0,c
  8077   0003A8  EFDE  F001         	goto	l1437
  8078   0003AC                     l1431:
  8079   0003AC  6837               	setf	___strtoxll@limit^0,c
  8080   0003AE  6838               	setf	(___strtoxll@limit+1)^0,c
  8081   0003B0  6839               	setf	(___strtoxll@limit+2)^0,c
  8082   0003B2  683A               	setf	(___strtoxll@limit+3)^0,c
  8083   0003B4  683B               	setf	(___strtoxll@limit+4)^0,c
  8084   0003B6  683C               	setf	(___strtoxll@limit+5)^0,c
  8085   0003B8  683D               	setf	(___strtoxll@limit+6)^0,c
  8086   0003BA  683E               	setf	(___strtoxll@limit+7)^0,c
  8087   0003BC                     l1437:
  8088   0003BC  C040  F02B         	movff	___strtoxll@a,___strtoxll@prev_a
  8089   0003C0  C041  F02C         	movff	___strtoxll@a+1,___strtoxll@prev_a+1
  8090   0003C4  C042  F02D         	movff	___strtoxll@a+2,___strtoxll@prev_a+2
  8091   0003C8  C043  F02E         	movff	___strtoxll@a+3,___strtoxll@prev_a+3
  8092   0003CC  C044  F02F         	movff	___strtoxll@a+4,___strtoxll@prev_a+4
  8093   0003D0  C045  F030         	movff	___strtoxll@a+5,___strtoxll@prev_a+5
  8094   0003D4  C046  F031         	movff	___strtoxll@a+6,___strtoxll@prev_a+6
  8095   0003D8  C047  F032         	movff	___strtoxll@a+7,___strtoxll@prev_a+7
  8096   0003DC  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8097   0003E0  0E20               	movlw	32
  8098   0003E2  1223               	iorwf	??___strtoxll^0,f,c
  8099   0003E4  0E9F               	movlw	159
  8100   0003E6  2623               	addwf	??___strtoxll^0,f,c
  8101   0003E8  0E1A               	movlw	26
  8102   0003EA  6023               	cpfslt	??___strtoxll^0,c
  8103   0003EC  EFFA  F001         	goto	u5931
  8104   0003F0  EFFC  F001         	goto	u5930
  8105   0003F4                     u5931:
  8106   0003F4  EF19  F002         	goto	l5511
  8107   0003F8                     u5930:
  8108   0003F8  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8109   0003FC  0E9F               	movlw	159
  8110   0003FE  2623               	addwf	??___strtoxll^0,f,c
  8111   000400  0E19               	movlw	25
  8112   000402  6423               	cpfsgt	??___strtoxll^0,c
  8113   000404  EF06  F002         	goto	u5941
  8114   000408  EF08  F002         	goto	u5940
  8115   00040C                     u5941:
  8116   00040C  EF0D  F002         	goto	l5509
  8117   000410                     u5940:
  8118   000410  C04A  F035         	movff	___strtoxll@c,___strtoxll$2313
  8119   000414  6A36               	clrf	(___strtoxll$2313+1)^0,c
  8120   000416  EF14  F002         	goto	l1442
  8121   00041A                     l5509:
  8122   00041A  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8123   00041E  0E5F               	movlw	95
  8124   000420  1623               	andwf	??___strtoxll^0,f,c
  8125   000422  5023               	movf	??___strtoxll^0,w,c
  8126   000424  6E35               	movwf	___strtoxll$2313^0,c
  8127   000426  6A36               	clrf	(___strtoxll$2313+1)^0,c
  8128   000428                     l1442:
  8129   000428  5035               	movf	___strtoxll$2313^0,w,c
  8130   00042A  0FC9               	addlw	201
  8131   00042C  6E4A               	movwf	___strtoxll@c^0,c
  8132   00042E  EF27  F002         	goto	l5515
  8133   000432                     l5511:
  8134   000432  C04A  F023         	movff	___strtoxll@c,??___strtoxll
  8135   000436  0ED0               	movlw	208
  8136   000438  2623               	addwf	??___strtoxll^0,f,c
  8137   00043A  0E0A               	movlw	10
  8138   00043C  6023               	cpfslt	??___strtoxll^0,c
  8139   00043E  EF23  F002         	goto	u5951
  8140   000442  EF25  F002         	goto	u5950
  8141   000446                     u5951:
  8142   000446  EFE0  F002         	goto	l5535
  8143   00044A                     u5950:
  8144   00044A  0E30               	movlw	48
  8145   00044C  5E4A               	subwf	___strtoxll@c^0,f,c
  8146   00044E                     l5515:
  8147   00044E  504A               	movf	___strtoxll@c^0,w,c
  8148   000450  6E23               	movwf	??___strtoxll^0,c
  8149   000452  6A24               	clrf	(??___strtoxll+1)^0,c
  8150   000454  501E               	movf	___strtoxll@base^0,w,c
  8151   000456  5C23               	subwf	??___strtoxll^0,w,c
  8152   000458  5024               	movf	(??___strtoxll+1)^0,w,c
  8153   00045A  0A80               	xorlw	128
  8154   00045C  6E25               	movwf	(??___strtoxll+2)^0,c
  8155   00045E  501F               	movf	(___strtoxll@base+1)^0,w,c
  8156   000460  0A80               	xorlw	128
  8157   000462  5825               	subwfb	(??___strtoxll+2)^0,w,c
  8158   000464  A0D8               	btfss	status,0,c
  8159   000466  EF37  F002         	goto	u5961
  8160   00046A  EF39  F002         	goto	u5960
  8161   00046E                     u5961:
  8162   00046E  EF3B  F002         	goto	l1447
  8163   000472                     u5960:
  8164   000472  EFE0  F002         	goto	l5535
  8165   000476                     l1447:
  8166   000476  B23F               	btfsc	___strtoxll@flags^0,1,c
  8167   000478  EF40  F002         	goto	u5971
  8168   00047C  EF42  F002         	goto	u5970
  8169   000480                     u5971:
  8170   000480  EFD5  F002         	goto	l5531
  8171   000484                     u5970:
  8172   000484  C01E  F003         	movff	___strtoxll@base,___omul@multiplier
  8173   000488  C01F  F004         	movff	___strtoxll@base+1,___omul@multiplier+1
  8174   00048C  0E00               	movlw	0
  8175   00048E  BE04               	btfsc	(___omul@multiplier+1)^0,7,c
  8176   000490  0EFF               	movlw	-1
  8177   000492  6E05               	movwf	(___omul@multiplier+2)^0,c
  8178   000494  6E06               	movwf	(___omul@multiplier+3)^0,c
  8179   000496  6E07               	movwf	(___omul@multiplier+4)^0,c
  8180   000498  6E08               	movwf	(___omul@multiplier+5)^0,c
  8181   00049A  6E09               	movwf	(___omul@multiplier+6)^0,c
  8182   00049C  6E0A               	movwf	(___omul@multiplier+7)^0,c
  8183   00049E  C040  F00B         	movff	___strtoxll@a,___omul@multiplicand
  8184   0004A2  C041  F00C         	movff	___strtoxll@a+1,___omul@multiplicand+1
  8185   0004A6  C042  F00D         	movff	___strtoxll@a+2,___omul@multiplicand+2
  8186   0004AA  C043  F00E         	movff	___strtoxll@a+3,___omul@multiplicand+3
  8187   0004AE  C044  F00F         	movff	___strtoxll@a+4,___omul@multiplicand+4
  8188   0004B2  C045  F010         	movff	___strtoxll@a+5,___omul@multiplicand+5
  8189   0004B6  C046  F011         	movff	___strtoxll@a+6,___omul@multiplicand+6
  8190   0004BA  C047  F012         	movff	___strtoxll@a+7,___omul@multiplicand+7
  8191   0004BE  EC2D  F015         	call	___omul	;wreg free
  8192   0004C2  C003  F023         	movff	?___omul,??___strtoxll
  8193   0004C6  C004  F024         	movff	?___omul+1,??___strtoxll+1
  8194   0004CA  C005  F025         	movff	?___omul+2,??___strtoxll+2
  8195   0004CE  C006  F026         	movff	?___omul+3,??___strtoxll+3
  8196   0004D2  C007  F027         	movff	?___omul+4,??___strtoxll+4
  8197   0004D6  C008  F028         	movff	?___omul+5,??___strtoxll+5
  8198   0004DA  C009  F029         	movff	?___omul+6,??___strtoxll+6
  8199   0004DE  C00A  F02A         	movff	?___omul+7,??___strtoxll+7
  8200   0004E2  504A               	movf	___strtoxll@c^0,w,c
  8201   0004E4  2423               	addwf	??___strtoxll^0,w,c
  8202   0004E6  6E40               	movwf	___strtoxll@a^0,c
  8203   0004E8  0E00               	movlw	0
  8204   0004EA  2024               	addwfc	(??___strtoxll+1)^0,w,c
  8205   0004EC  6E41               	movwf	(___strtoxll@a+1)^0,c
  8206   0004EE  0E00               	movlw	0
  8207   0004F0  2025               	addwfc	(??___strtoxll+2)^0,w,c
  8208   0004F2  6E42               	movwf	(___strtoxll@a+2)^0,c
  8209   0004F4  0E00               	movlw	0
  8210   0004F6  2026               	addwfc	(??___strtoxll+3)^0,w,c
  8211   0004F8  6E43               	movwf	(___strtoxll@a+3)^0,c
  8212   0004FA  0E00               	movlw	0
  8213   0004FC  2027               	addwfc	(??___strtoxll+4)^0,w,c
  8214   0004FE  6E44               	movwf	(___strtoxll@a+4)^0,c
  8215   000500  0E00               	movlw	0
  8216   000502  2028               	addwfc	(??___strtoxll+5)^0,w,c
  8217   000504  6E45               	movwf	(___strtoxll@a+5)^0,c
  8218   000506  0E00               	movlw	0
  8219   000508  2029               	addwfc	(??___strtoxll+6)^0,w,c
  8220   00050A  6E46               	movwf	(___strtoxll@a+6)^0,c
  8221   00050C  0E00               	movlw	0
  8222   00050E  202A               	addwfc	(??___strtoxll+7)^0,w,c
  8223   000510  6E47               	movwf	(___strtoxll@a+7)^0,c
  8224   000512  502B               	movf	___strtoxll@prev_a^0,w,c
  8225   000514  5C40               	subwf	___strtoxll@a^0,w,c
  8226   000516  502C               	movf	(___strtoxll@prev_a+1)^0,w,c
  8227   000518  5841               	subwfb	(___strtoxll@a+1)^0,w,c
  8228   00051A  502D               	movf	(___strtoxll@prev_a+2)^0,w,c
  8229   00051C  5842               	subwfb	(___strtoxll@a+2)^0,w,c
  8230   00051E  502E               	movf	(___strtoxll@prev_a+3)^0,w,c
  8231   000520  5843               	subwfb	(___strtoxll@a+3)^0,w,c
  8232   000522  502F               	movf	(___strtoxll@prev_a+4)^0,w,c
  8233   000524  5844               	subwfb	(___strtoxll@a+4)^0,w,c
  8234   000526  5030               	movf	(___strtoxll@prev_a+5)^0,w,c
  8235   000528  5845               	subwfb	(___strtoxll@a+5)^0,w,c
  8236   00052A  5031               	movf	(___strtoxll@prev_a+6)^0,w,c
  8237   00052C  5846               	subwfb	(___strtoxll@a+6)^0,w,c
  8238   00052E  5032               	movf	(___strtoxll@prev_a+7)^0,w,c
  8239   000530  5847               	subwfb	(___strtoxll@a+7)^0,w,c
  8240   000532  A0D8               	btfss	status,0,c
  8241   000534  EF9E  F002         	goto	u5981
  8242   000538  EFA0  F002         	goto	u5980
  8243   00053C                     u5981:
  8244   00053C  EFBF  F002         	goto	l1451
  8245   000540                     u5980:
  8246   000540  5020               	movf	___strtoxll@is_signed^0,w,c
  8247   000542  B4D8               	btfsc	status,2,c
  8248   000544  EFA6  F002         	goto	u5991
  8249   000548  EFA8  F002         	goto	u5990
  8250   00054C                     u5991:
  8251   00054C  EFD5  F002         	goto	l5531
  8252   000550                     u5990:
  8253   000550  5040               	movf	___strtoxll@a^0,w,c
  8254   000552  5C37               	subwf	___strtoxll@limit^0,w,c
  8255   000554  5041               	movf	(___strtoxll@a+1)^0,w,c
  8256   000556  5838               	subwfb	(___strtoxll@limit+1)^0,w,c
  8257   000558  5042               	movf	(___strtoxll@a+2)^0,w,c
  8258   00055A  5839               	subwfb	(___strtoxll@limit+2)^0,w,c
  8259   00055C  5043               	movf	(___strtoxll@a+3)^0,w,c
  8260   00055E  583A               	subwfb	(___strtoxll@limit+3)^0,w,c
  8261   000560  5044               	movf	(___strtoxll@a+4)^0,w,c
  8262   000562  583B               	subwfb	(___strtoxll@limit+4)^0,w,c
  8263   000564  5045               	movf	(___strtoxll@a+5)^0,w,c
  8264   000566  583C               	subwfb	(___strtoxll@limit+5)^0,w,c
  8265   000568  5046               	movf	(___strtoxll@a+6)^0,w,c
  8266   00056A  583D               	subwfb	(___strtoxll@limit+6)^0,w,c
  8267   00056C  5047               	movf	(___strtoxll@a+7)^0,w,c
  8268   00056E  583E               	subwfb	(___strtoxll@limit+7)^0,w,c
  8269   000570  B0D8               	btfsc	status,0,c
  8270   000572  EFBD  F002         	goto	u6001
  8271   000576  EFBF  F002         	goto	u6000
  8272   00057A                     u6001:
  8273   00057A  EFD5  F002         	goto	l5531
  8274   00057E                     u6000:
  8275   00057E                     l1451:
  8276   00057E  C037  F040         	movff	___strtoxll@limit,___strtoxll@a
  8277   000582  C038  F041         	movff	___strtoxll@limit+1,___strtoxll@a+1
  8278   000586  C039  F042         	movff	___strtoxll@limit+2,___strtoxll@a+2
  8279   00058A  C03A  F043         	movff	___strtoxll@limit+3,___strtoxll@a+3
  8280   00058E  C03B  F044         	movff	___strtoxll@limit+4,___strtoxll@a+4
  8281   000592  C03C  F045         	movff	___strtoxll@limit+5,___strtoxll@a+5
  8282   000596  C03D  F046         	movff	___strtoxll@limit+6,___strtoxll@a+6
  8283   00059A  C03E  F047         	movff	___strtoxll@limit+7,___strtoxll@a+7
  8284   00059E  0E00               	movlw	0
  8285   0005A0  0100               	movlb	0	; () banked
  8286   0005A2  6FC3               	movwf	(_errno+1)& (0+255),b
  8287   0005A4  0E22               	movlw	34
  8288   0005A6  6FC2               	movwf	_errno& (0+255),b
  8289   0005A8                     
  8290                           ; BSR set to: 0
  8291   0005A8  823F               	bsf	___strtoxll@flags^0,1,c
  8292   0005AA                     l5531:
  8293   0005AA  4A48               	infsnz	___strtoxll@cp^0,f,c
  8294   0005AC  2A49               	incf	(___strtoxll@cp+1)^0,f,c
  8295   0005AE  C048  FFD9         	movff	___strtoxll@cp,fsr2l
  8296   0005B2  C049  FFDA         	movff	___strtoxll@cp+1,fsr2h
  8297   0005B6  50DF               	movf	indf2,w,c
  8298   0005B8  6E4A               	movwf	___strtoxll@c^0,c
  8299   0005BA  843F               	bsf	___strtoxll@flags^0,2,c
  8300   0005BC  EFDE  F001         	goto	l1437
  8301   0005C0                     l5535:
  8302   0005C0  503F               	movf	___strtoxll@flags^0,w,c
  8303   0005C2  0B03               	andlw	3
  8304   0005C4  06E8               	decf	wreg,f,c
  8305   0005C6  A4D8               	btfss	status,2,c
  8306   0005C8  EFE8  F002         	goto	u6011
  8307   0005CC  EFEA  F002         	goto	u6010
  8308   0005D0                     u6011:
  8309   0005D0  EFFA  F002         	goto	l5539
  8310   0005D4                     u6010:
  8311   0005D4  1E47               	comf	(___strtoxll@a+7)^0,f,c
  8312   0005D6  1E46               	comf	(___strtoxll@a+6)^0,f,c
  8313   0005D8  1E45               	comf	(___strtoxll@a+5)^0,f,c
  8314   0005DA  1E44               	comf	(___strtoxll@a+4)^0,f,c
  8315   0005DC  1E43               	comf	(___strtoxll@a+3)^0,f,c
  8316   0005DE  1E42               	comf	(___strtoxll@a+2)^0,f,c
  8317   0005E0  1E41               	comf	(___strtoxll@a+1)^0,f,c
  8318   0005E2  6C40               	negf	___strtoxll@a^0,c
  8319   0005E4  0E00               	movlw	0
  8320   0005E6  2241               	addwfc	(___strtoxll@a+1)^0,f,c
  8321   0005E8  2242               	addwfc	(___strtoxll@a+2)^0,f,c
  8322   0005EA  2243               	addwfc	(___strtoxll@a+3)^0,f,c
  8323   0005EC  2244               	addwfc	(___strtoxll@a+4)^0,f,c
  8324   0005EE  2245               	addwfc	(___strtoxll@a+5)^0,f,c
  8325   0005F0  2246               	addwfc	(___strtoxll@a+6)^0,f,c
  8326   0005F2  2247               	addwfc	(___strtoxll@a+7)^0,f,c
  8327   0005F4                     l5539:
  8328   0005F4  501D               	movf	___strtoxll@endptr^0,w,c
  8329   0005F6  B4D8               	btfsc	status,2,c
  8330   0005F8  EF00  F003         	goto	u6021
  8331   0005FC  EF02  F003         	goto	u6020
  8332   000600                     u6021:
  8333   000600  EF14  F003         	goto	l5547
  8334   000604                     u6020:
  8335   000604  B43F               	btfsc	___strtoxll@flags^0,2,c
  8336   000606  EF07  F003         	goto	u6031
  8337   00060A  EF09  F003         	goto	u6030
  8338   00060E                     u6031:
  8339   00060E  EF0D  F003         	goto	l5545
  8340   000612                     u6030:
  8341   000612  C01B  F048         	movff	___strtoxll@s,___strtoxll@cp
  8342   000616  C01C  F049         	movff	___strtoxll@s+1,___strtoxll@cp+1
  8343   00061A                     l5545:
  8344   00061A  501D               	movf	___strtoxll@endptr^0,w,c
  8345   00061C  6ED9               	movwf	fsr2l,c
  8346   00061E  6ADA               	clrf	fsr2h,c
  8347   000620  C048  FFDE         	movff	___strtoxll@cp,postinc2
  8348   000624  C049  FFDD         	movff	___strtoxll@cp+1,postdec2
  8349   000628                     l5547:
  8350   000628  C040  F01B         	movff	___strtoxll@a,?___strtoxll
  8351   00062C  C041  F01C         	movff	___strtoxll@a+1,?___strtoxll+1
  8352   000630  C042  F01D         	movff	___strtoxll@a+2,?___strtoxll+2
  8353   000634  C043  F01E         	movff	___strtoxll@a+3,?___strtoxll+3
  8354   000638  C044  F01F         	movff	___strtoxll@a+4,?___strtoxll+4
  8355   00063C  C045  F020         	movff	___strtoxll@a+5,?___strtoxll+5
  8356   000640  C046  F021         	movff	___strtoxll@a+6,?___strtoxll+6
  8357   000644  C047  F022         	movff	___strtoxll@a+7,?___strtoxll+7
  8358   000648  0012               	return		;funcret
  8359   00064A                     __end_of___strtoxll:
  8360                           	callstack 0
  8361                           
  8362 ;; *************** function ___omul *****************
  8363 ;; Defined at:
  8364 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul64.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;  multiplier      8    2[COMRAM] unsigned long long 
  8367 ;;  multiplicand    8   10[COMRAM] unsigned long long 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  product         8   18[COMRAM] unsigned long long 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  8    2[COMRAM] unsigned long long 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8379 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8380 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8382 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8383 ;;Total ram usage:       24 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; Hardware stack levels required when called: 1
  8386 ;; This function calls:
  8387 ;;		Nothing
  8388 ;; This function is called by:
  8389 ;;		___strtoxll
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text32
  8394   002A5A                     __ptext32:
  8395                           	callstack 0
  8396   002A5A                     ___omul:
  8397                           	callstack 20
  8398   002A5A  EE20  F013         	lfsr	2,___omul@product
  8399   002A5E  0E07               	movlw	7
  8400   002A60                     u5511:
  8401   002A60  6ADE               	clrf	postinc2,c
  8402   002A62  06E8               	decf	wreg,f,c
  8403   002A64  E2FD               	bc	u5511
  8404   002A66                     l5343:
  8405   002A66  A003               	btfss	___omul@multiplier^0,0,c
  8406   002A68  EF38  F015         	goto	u5521
  8407   002A6C  EF3A  F015         	goto	u5520
  8408   002A70                     u5521:
  8409   002A70  EF4A  F015         	goto	l5347
  8410   002A74                     u5520:
  8411   002A74  500B               	movf	___omul@multiplicand^0,w,c
  8412   002A76  2613               	addwf	___omul@product^0,f,c
  8413   002A78  500C               	movf	(___omul@multiplicand+1)^0,w,c
  8414   002A7A  2214               	addwfc	(___omul@product+1)^0,f,c
  8415   002A7C  500D               	movf	(___omul@multiplicand+2)^0,w,c
  8416   002A7E  2215               	addwfc	(___omul@product+2)^0,f,c
  8417   002A80  500E               	movf	(___omul@multiplicand+3)^0,w,c
  8418   002A82  2216               	addwfc	(___omul@product+3)^0,f,c
  8419   002A84  500F               	movf	(___omul@multiplicand+4)^0,w,c
  8420   002A86  2217               	addwfc	(___omul@product+4)^0,f,c
  8421   002A88  5010               	movf	(___omul@multiplicand+5)^0,w,c
  8422   002A8A  2218               	addwfc	(___omul@product+5)^0,f,c
  8423   002A8C  5011               	movf	(___omul@multiplicand+6)^0,w,c
  8424   002A8E  2219               	addwfc	(___omul@product+6)^0,f,c
  8425   002A90  5012               	movf	(___omul@multiplicand+7)^0,w,c
  8426   002A92  221A               	addwfc	(___omul@product+7)^0,f,c
  8427   002A94                     l5347:
  8428   002A94  90D8               	bcf	status,0,c
  8429   002A96  360B               	rlcf	___omul@multiplicand^0,f,c
  8430   002A98  360C               	rlcf	(___omul@multiplicand+1)^0,f,c
  8431   002A9A  360D               	rlcf	(___omul@multiplicand+2)^0,f,c
  8432   002A9C  360E               	rlcf	(___omul@multiplicand+3)^0,f,c
  8433   002A9E  360F               	rlcf	(___omul@multiplicand+4)^0,f,c
  8434   002AA0  3610               	rlcf	(___omul@multiplicand+5)^0,f,c
  8435   002AA2  3611               	rlcf	(___omul@multiplicand+6)^0,f,c
  8436   002AA4  3612               	rlcf	(___omul@multiplicand+7)^0,f,c
  8437   002AA6  90D8               	bcf	status,0,c
  8438   002AA8  320A               	rrcf	(___omul@multiplier+7)^0,f,c
  8439   002AAA  3209               	rrcf	(___omul@multiplier+6)^0,f,c
  8440   002AAC  3208               	rrcf	(___omul@multiplier+5)^0,f,c
  8441   002AAE  3207               	rrcf	(___omul@multiplier+4)^0,f,c
  8442   002AB0  3206               	rrcf	(___omul@multiplier+3)^0,f,c
  8443   002AB2  3205               	rrcf	(___omul@multiplier+2)^0,f,c
  8444   002AB4  3204               	rrcf	(___omul@multiplier+1)^0,f,c
  8445   002AB6  3203               	rrcf	___omul@multiplier^0,f,c
  8446   002AB8  5003               	movf	___omul@multiplier^0,w,c
  8447   002ABA  1004               	iorwf	(___omul@multiplier+1)^0,w,c
  8448   002ABC  1005               	iorwf	(___omul@multiplier+2)^0,w,c
  8449   002ABE  1006               	iorwf	(___omul@multiplier+3)^0,w,c
  8450   002AC0  1007               	iorwf	(___omul@multiplier+4)^0,w,c
  8451   002AC2  1008               	iorwf	(___omul@multiplier+5)^0,w,c
  8452   002AC4  1009               	iorwf	(___omul@multiplier+6)^0,w,c
  8453   002AC6  100A               	iorwf	(___omul@multiplier+7)^0,w,c
  8454   002AC8  A4D8               	btfss	status,2,c
  8455   002ACA  EF69  F015         	goto	u5531
  8456   002ACE  EF6B  F015         	goto	u5530
  8457   002AD2                     u5531:
  8458   002AD2  EF33  F015         	goto	l5343
  8459   002AD6                     u5530:
  8460   002AD6  C013  F003         	movff	___omul@product,?___omul
  8461   002ADA  C014  F004         	movff	___omul@product+1,?___omul+1
  8462   002ADE  C015  F005         	movff	___omul@product+2,?___omul+2
  8463   002AE2  C016  F006         	movff	___omul@product+3,?___omul+3
  8464   002AE6  C017  F007         	movff	___omul@product+4,?___omul+4
  8465   002AEA  C018  F008         	movff	___omul@product+5,?___omul+5
  8466   002AEE  C019  F009         	movff	___omul@product+6,?___omul+6
  8467   002AF2  C01A  F00A         	movff	___omul@product+7,?___omul+7
  8468   002AF6  0012               	return		;funcret
  8469   002AF8                     __end_of___omul:
  8470                           	callstack 0
  8471                           
  8472 ;; *************** function _decode_dtc *****************
  8473 ;; Defined at:
  8474 ;;		line 643 in file "OBCII_PIC18F46K22.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  b1              2   77[COMRAM] unsigned int 
  8477 ;;  b2              2   79[COMRAM] unsigned int 
  8478 ;;  dtc             2   81[COMRAM] PTR unsigned char 
  8479 ;;		 -> dtc_codes(60), 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;  type            1   88[COMRAM] unsigned char 
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      void 
  8484 ;; Registers used:
  8485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8491 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8493 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;Total ram usage:       12 bytes
  8496 ;; Hardware stack levels used: 1
  8497 ;; Hardware stack levels required when called: 9
  8498 ;; This function calls:
  8499 ;;		_sprintf
  8500 ;; This function is called by:
  8501 ;;		_diagnostic_trouble_codes
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text33
  8506   0023A8                     __ptext33:
  8507                           	callstack 0
  8508   0023A8                     _decode_dtc:
  8509                           	callstack 19
  8510   0023A8                     
  8511                           ;OBCII_PIC18F46K22.c: 644:     char type;;OBCII_PIC18F46K22.c: 646:     switch ((b1 & 0x
      +                          C0) >> 6) {
  8512   0023A8  EFEA  F011         	goto	l6453
  8513   0023AC                     l6441:
  8514   0023AC  0E50               	movlw	80
  8515   0023AE  6E59               	movwf	decode_dtc@type^0,c
  8516   0023B0  EF14  F012         	goto	l6455
  8517   0023B4                     l6443:
  8518   0023B4  0E43               	movlw	67
  8519   0023B6  6E59               	movwf	decode_dtc@type^0,c
  8520   0023B8  EF14  F012         	goto	l6455
  8521   0023BC                     l6445:
  8522   0023BC  0E42               	movlw	66
  8523   0023BE  6E59               	movwf	decode_dtc@type^0,c
  8524   0023C0  EF14  F012         	goto	l6455
  8525   0023C4                     l6447:
  8526   0023C4  0E55               	movlw	85
  8527   0023C6  6E59               	movwf	decode_dtc@type^0,c
  8528   0023C8  EF14  F012         	goto	l6455
  8529   0023CC                     l6449:
  8530   0023CC  0E3F               	movlw	63
  8531   0023CE  6E59               	movwf	decode_dtc@type^0,c
  8532   0023D0  EF14  F012         	goto	l6455
  8533   0023D4                     l6453:
  8534   0023D4  C04E  F054         	movff	decode_dtc@b1,??_decode_dtc
  8535   0023D8  C04F  F055         	movff	decode_dtc@b1+1,??_decode_dtc+1
  8536   0023DC  0E06               	movlw	6
  8537   0023DE  6E56               	movwf	(??_decode_dtc+2)^0,c
  8538   0023E0                     u7405:
  8539   0023E0  90D8               	bcf	status,0,c
  8540   0023E2  3255               	rrcf	(??_decode_dtc+1)^0,f,c
  8541   0023E4  3254               	rrcf	??_decode_dtc^0,f,c
  8542   0023E6  2E56               	decfsz	(??_decode_dtc+2)^0,f,c
  8543   0023E8  EFF0  F011         	goto	u7405
  8544   0023EC  0E03               	movlw	3
  8545   0023EE  1654               	andwf	??_decode_dtc^0,f,c
  8546   0023F0  0E00               	movlw	0
  8547   0023F2  1655               	andwf	(??_decode_dtc+1)^0,f,c
  8548                           
  8549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8550                           ; Switch size 1, requested type "simple"
  8551                           ; Number of cases is 1, Range of values is 0 to 0
  8552                           ; switch strategies available:
  8553                           ; Name         Instructions Cycles
  8554                           ; simple_byte            4     3 (average)
  8555                           ;	Chosen strategy is simple_byte
  8556   0023F4  5055               	movf	(??_decode_dtc+1)^0,w,c
  8557   0023F6  0A00               	xorlw	0	; case 0
  8558   0023F8  B4D8               	btfsc	status,2,c
  8559   0023FA  EF01  F012         	goto	l7071
  8560   0023FE  EFE6  F011         	goto	l6449
  8561   002402                     l7071:
  8562                           
  8563                           ; Switch size 1, requested type "simple"
  8564                           ; Number of cases is 4, Range of values is 0 to 3
  8565                           ; switch strategies available:
  8566                           ; Name         Instructions Cycles
  8567                           ; simple_byte           13     7 (average)
  8568                           ;	Chosen strategy is simple_byte
  8569   002402  5054               	movf	??_decode_dtc^0,w,c
  8570   002404  0A00               	xorlw	0	; case 0
  8571   002406  B4D8               	btfsc	status,2,c
  8572   002408  EFD6  F011         	goto	l6441
  8573   00240C  0A01               	xorlw	1	; case 1
  8574   00240E  B4D8               	btfsc	status,2,c
  8575   002410  EFDA  F011         	goto	l6443
  8576   002414  0A03               	xorlw	3	; case 2
  8577   002416  B4D8               	btfsc	status,2,c
  8578   002418  EFDE  F011         	goto	l6445
  8579   00241C  0A01               	xorlw	1	; case 3
  8580   00241E  B4D8               	btfsc	status,2,c
  8581   002420  EFE2  F011         	goto	l6447
  8582   002424  EFE6  F011         	goto	l6449
  8583   002428                     l6455:
  8584                           
  8585                           ;OBCII_PIC18F46K22.c: 654:     sprintf(dtc, "%c%01X%02X", type, (b1 & 0x3F) >> 4, ((b1 &
      +                           0x0F) << 8 | b2));
  8586   002428  C052  F038         	movff	decode_dtc@dtc,sprintf@s
  8587   00242C  C053  F039         	movff	decode_dtc@dtc+1,sprintf@s+1
  8588   002430  0E8F               	movlw	low STR_39
  8589   002432  6E3A               	movwf	sprintf@fmt^0,c
  8590   002434  0EFF               	movlw	high STR_39
  8591   002436  6E3B               	movwf	(sprintf@fmt+1)^0,c
  8592   002438  C059  F03C         	movff	decode_dtc@type,?_sprintf+4
  8593   00243C  6A3D               	clrf	(?_sprintf+5)^0,c
  8594   00243E  C04E  F054         	movff	decode_dtc@b1,??_decode_dtc
  8595   002442  C04F  F055         	movff	decode_dtc@b1+1,??_decode_dtc+1
  8596   002446  0E04               	movlw	4
  8597   002448  6E56               	movwf	(??_decode_dtc+2)^0,c
  8598   00244A                     u7415:
  8599   00244A  90D8               	bcf	status,0,c
  8600   00244C  3255               	rrcf	(??_decode_dtc+1)^0,f,c
  8601   00244E  3254               	rrcf	??_decode_dtc^0,f,c
  8602   002450  2E56               	decfsz	(??_decode_dtc+2)^0,f,c
  8603   002452  EF25  F012         	goto	u7415
  8604   002456  0E03               	movlw	3
  8605   002458  1454               	andwf	??_decode_dtc^0,w,c
  8606   00245A  6E3E               	movwf	(?_sprintf+6)^0,c
  8607   00245C  6A3F               	clrf	(?_sprintf+7)^0,c
  8608   00245E  0E0F               	movlw	15
  8609   002460  144E               	andwf	decode_dtc@b1^0,w,c
  8610   002462  6E57               	movwf	(??_decode_dtc+3)^0,c
  8611   002464  0E00               	movlw	0
  8612   002466  144F               	andwf	(decode_dtc@b1+1)^0,w,c
  8613   002468  6E58               	movwf	(??_decode_dtc+4)^0,c
  8614   00246A  C057  F058         	movff	??_decode_dtc+3,??_decode_dtc+4
  8615   00246E  6A57               	clrf	(??_decode_dtc+3)^0,c
  8616   002470  5050               	movf	decode_dtc@b2^0,w,c
  8617   002472  1057               	iorwf	(??_decode_dtc+3)^0,w,c
  8618   002474  6E40               	movwf	(?_sprintf+8)^0,c
  8619   002476  5051               	movf	(decode_dtc@b2+1)^0,w,c
  8620   002478  1058               	iorwf	(??_decode_dtc+4)^0,w,c
  8621   00247A  6E41               	movwf	(?_sprintf+9)^0,c
  8622   00247C  EC20  F019         	call	_sprintf	;wreg free
  8623   002480  0012               	return		;funcret
  8624   002482                     __end_of_decode_dtc:
  8625                           	callstack 0
  8626                           
  8627 ;; *************** function _sprintf *****************
  8628 ;; Defined at:
  8629 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  s               2   55[COMRAM] PTR unsigned char 
  8632 ;;		 -> dtc_codes(60), air_intake_string(16), rpm_string(16), 
  8633 ;;  fmt             2   57[COMRAM] PTR const unsigned char 
  8634 ;;		 -> STR_39(11), STR_29(3), STR_19(3), 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  f              11   66[COMRAM] struct _IO_FILE
  8637 ;;  ret             2    0        int 
  8638 ;;  ap              1   65[COMRAM] PTR void [1]
  8639 ;;		 -> ?_sprintf(2), 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  2   55[COMRAM] int 
  8642 ;; Registers used:
  8643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8649 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8652 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8653 ;;Total ram usage:       22 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 8
  8656 ;; This function calls:
  8657 ;;		_vfprintf
  8658 ;; This function is called by:
  8659 ;;		_print_RPM
  8660 ;;		_print_AI_Temp
  8661 ;;		_decode_dtc
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text34
  8666   003240                     __ptext34:
  8667                           	callstack 0
  8668   003240                     _sprintf:
  8669                           	callstack 19
  8670   003240  0E3C               	movlw	low (?_sprintf+4)
  8671   003242  6E42               	movwf	sprintf@ap^0,c
  8672   003244  C038  F043         	movff	sprintf@s,sprintf@f
  8673   003248  C039  F044         	movff	sprintf@s+1,sprintf@f+1
  8674   00324C  0E00               	movlw	0
  8675   00324E  6E46               	movwf	(sprintf@f+3)^0,c
  8676   003250  0E00               	movlw	0
  8677   003252  6E45               	movwf	(sprintf@f+2)^0,c
  8678   003254  0E00               	movlw	0
  8679   003256  6E4D               	movwf	(sprintf@f+10)^0,c
  8680   003258  0E00               	movlw	0
  8681   00325A  6E4C               	movwf	(sprintf@f+9)^0,c
  8682   00325C  0E43               	movlw	low sprintf@f
  8683   00325E  6E32               	movwf	vfprintf@fp^0,c
  8684   003260  C03A  F033         	movff	sprintf@fmt,vfprintf@fmt
  8685   003264  C03B  F034         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8686   003268  0E42               	movlw	low sprintf@ap
  8687   00326A  6E35               	movwf	vfprintf@ap^0,c
  8688   00326C  ECFF  F018         	call	_vfprintf	;wreg free
  8689   003270  5045               	movf	(sprintf@f+2)^0,w,c
  8690   003272  2438               	addwf	sprintf@s^0,w,c
  8691   003274  6ED9               	movwf	fsr2l,c
  8692   003276  5046               	movf	(sprintf@f+3)^0,w,c
  8693   003278  2039               	addwfc	(sprintf@s+1)^0,w,c
  8694   00327A  6EDA               	movwf	fsr2h,c
  8695   00327C  6ADF               	clrf	indf2,c
  8696   00327E  0012               	return		;funcret
  8697   003280                     __end_of_sprintf:
  8698                           	callstack 0
  8699                           
  8700 ;; *************** function _vfprintf *****************
  8701 ;; Defined at:
  8702 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  fp              1   49[COMRAM] PTR struct _IO_FILE
  8705 ;;		 -> sprintf@f(11), 
  8706 ;;  fmt             2   50[COMRAM] PTR const unsigned char 
  8707 ;;		 -> STR_39(11), STR_29(3), STR_19(3), 
  8708 ;;  ap              1   52[COMRAM] PTR PTR void 
  8709 ;;		 -> sprintf@ap(1), 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;  cfmt            2   53[COMRAM] PTR unsigned char 
  8712 ;;		 -> STR_39(11), STR_29(3), STR_19(3), 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  2   49[COMRAM] int 
  8715 ;; Registers used:
  8716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8726 ;;Total ram usage:        6 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; Hardware stack levels required when called: 7
  8729 ;; This function calls:
  8730 ;;		_vfpfcnvrt
  8731 ;; This function is called by:
  8732 ;;		_sprintf
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text35
  8737   0031FE                     __ptext35:
  8738                           	callstack 0
  8739   0031FE                     _vfprintf:
  8740                           	callstack 19
  8741   0031FE                     
  8742                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  8743   0031FE  C033  F036         	movff	vfprintf@fmt,vfprintf@cfmt
  8744   003202  C034  F037         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8745                           
  8746                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8747   003206  EF0D  F019         	goto	l6131
  8748   00320A                     l6129:
  8749                           
  8750                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8751   00320A  C032  F025         	movff	vfprintf@fp,vfpfcnvrt@fp
  8752   00320E  0E36               	movlw	low vfprintf@cfmt
  8753   003210  6E26               	movwf	vfpfcnvrt@fmt^0,c
  8754   003212  C035  F027         	movff	vfprintf@ap,vfpfcnvrt@ap
  8755   003216  EC27  F009         	call	_vfpfcnvrt	;wreg free
  8756   00321A                     l6131:
  8757                           
  8758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8759   00321A  C036  FFF6         	movff	vfprintf@cfmt,tblptrl
  8760   00321E  C037  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8761   003222                     	if	0	;tblptru may be non-zero
  8762   003222                     	endif
  8763   003222                     	if	0	;tblptru may be non-zero
  8764   003222                     	endif
  8765   003222  0008               	tblrd		*
  8766   003224  50F5               	movf	tablat,w,c
  8767   003226  0900               	iorlw	0
  8768   003228  A4D8               	btfss	status,2,c
  8769   00322A  EF19  F019         	goto	u7111
  8770   00322E  EF1B  F019         	goto	u7110
  8771   003232                     u7111:
  8772   003232  EF05  F019         	goto	l6129
  8773   003236                     u7110:
  8774   003236                     
  8775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8776   003236  0E00               	movlw	0
  8777   003238  6E33               	movwf	(?_vfprintf+1)^0,c
  8778   00323A  0E00               	movlw	0
  8779   00323C  6E32               	movwf	?_vfprintf^0,c
  8780   00323E  0012               	return		;funcret
  8781   003240                     __end_of_vfprintf:
  8782                           	callstack 0
  8783                           
  8784 ;; *************** function _vfpfcnvrt *****************
  8785 ;; Defined at:
  8786 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;  fp              1   36[COMRAM] PTR struct _IO_FILE
  8789 ;;		 -> sprintf@f(11), 
  8790 ;;  fmt             1   37[COMRAM] PTR PTR unsigned char 
  8791 ;;		 -> vfprintf@cfmt(2), 
  8792 ;;  ap              1   38[COMRAM] PTR PTR void 
  8793 ;;		 -> sprintf@ap(1), 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  convarg         4   43[COMRAM] struct .
  8796 ;;  cp              2   47[COMRAM] PTR unsigned char 
  8797 ;;		 -> STR_39(11), STR_29(3), STR_19(3), 
  8798 ;;  done            1   42[COMRAM] _Bool 
  8799 ;;  c               1   41[COMRAM] unsigned char 
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  1    wreg      void 
  8802 ;; Registers used:
  8803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8809 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8813 ;;Total ram usage:       13 bytes
  8814 ;; Hardware stack levels used: 1
  8815 ;; Hardware stack levels required when called: 6
  8816 ;; This function calls:
  8817 ;;		_ctoa
  8818 ;;		_fputc
  8819 ;;		_read_prec_or_width
  8820 ;;		_utoa
  8821 ;;		_xtoa
  8822 ;; This function is called by:
  8823 ;;		_vfprintf
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text36
  8828   00124E                     __ptext36:
  8829                           	callstack 0
  8830   00124E                     _vfpfcnvrt:
  8831                           	callstack 19
  8832   00124E                     
  8833                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  8834   00124E  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8835   001250  6ED9               	movwf	fsr2l,c
  8836   001252  6ADA               	clrf	fsr2h,c
  8837   001254  CFDE FFF6          	movff	postinc2,tblptrl
  8838   001258  CFDD FFF7          	movff	postdec2,tblptrh
  8839   00125C                     	if	0	;tblptru may be non-zero
  8840   00125C                     	endif
  8841   00125C                     	if	0	;tblptru may be non-zero
  8842   00125C                     	endif
  8843   00125C  0008               	tblrd		*
  8844   00125E  50F5               	movf	tablat,w,c
  8845   001260  0A25               	xorlw	37
  8846   001262  A4D8               	btfss	status,2,c
  8847   001264  EF36  F009         	goto	u6841
  8848   001268  EF38  F009         	goto	u6840
  8849   00126C                     u6841:
  8850   00126C  EF19  F00A         	goto	l6021
  8851   001270                     u6840:
  8852   001270                     
  8853                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  8854   001270  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8855   001272  6ED9               	movwf	fsr2l,c
  8856   001274  6ADA               	clrf	fsr2h,c
  8857   001276  2ADE               	incf	postinc2,f,c
  8858   001278  0E00               	movlw	0
  8859   00127A  22DD               	addwfc	postdec2,f,c
  8860   00127C                     
  8861                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  8862   00127C  0E00               	movlw	0
  8863   00127E  0100               	movlb	0	; () banked
  8864   001280  6FC5               	movwf	(_width+1)& (0+255),b
  8865   001282  0E00               	movlw	0
  8866   001284  6FC4               	movwf	_width& (0+255),b
  8867   001286  C0C4  F0D4         	movff	_width,_flags
  8868   00128A                     
  8869                           ; BSR set to: 0
  8870                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  8871   00128A  69C6               	setf	_prec& (0+255),b
  8872   00128C  69C7               	setf	(_prec+1)& (0+255),b
  8873   00128E                     
  8874                           ; BSR set to: 0
  8875                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  8876   00128E  6A2B               	clrf	vfpfcnvrt@done^0,c
  8877                           
  8878                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  8879   001290  EF67  F009         	goto	l5977
  8880   001294                     l5967:
  8881                           
  8882                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  8883   001294  0100               	movlb	0	; () banked
  8884   001296  83D4               	bsf	_flags& (0+255),1,b
  8885   001298                     
  8886                           ; BSR set to: 0
  8887                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  8888   001298  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8889   00129A  6ED9               	movwf	fsr2l,c
  8890   00129C  6ADA               	clrf	fsr2h,c
  8891   00129E  2ADE               	incf	postinc2,f,c
  8892   0012A0  0E00               	movlw	0
  8893   0012A2  22DD               	addwfc	postdec2,f,c
  8894                           
  8895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  8896   0012A4  EF67  F009         	goto	l5977
  8897   0012A8                     l5971:
  8898                           
  8899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  8900   0012A8  0E01               	movlw	1
  8901   0012AA  6E2B               	movwf	vfpfcnvrt@done^0,c
  8902                           
  8903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  8904   0012AC  EF67  F009         	goto	l5977
  8905   0012B0                     l5975:
  8906   0012B0  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8907   0012B2  6ED9               	movwf	fsr2l,c
  8908   0012B4  6ADA               	clrf	fsr2h,c
  8909   0012B6  CFDE FFF6          	movff	postinc2,tblptrl
  8910   0012BA  CFDD FFF7          	movff	postdec2,tblptrh
  8911   0012BE                     	if	0	;tblptru may be non-zero
  8912   0012BE                     	endif
  8913   0012BE                     	if	0	;tblptru may be non-zero
  8914   0012BE                     	endif
  8915   0012BE  0008               	tblrd		*
  8916   0012C0  50F5               	movf	tablat,w,c
  8917                           
  8918                           ; Switch size 1, requested type "simple"
  8919                           ; Number of cases is 1, Range of values is 48 to 48
  8920                           ; switch strategies available:
  8921                           ; Name         Instructions Cycles
  8922                           ; simple_byte            4     3 (average)
  8923                           ;	Chosen strategy is simple_byte
  8924   0012C2  0A30               	xorlw	48	; case 48
  8925   0012C4  B4D8               	btfsc	status,2,c
  8926   0012C6  EF4A  F009         	goto	l5967
  8927   0012CA  EF54  F009         	goto	l5971
  8928   0012CE                     l5977:
  8929                           
  8930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  8931   0012CE  502B               	movf	vfpfcnvrt@done^0,w,c
  8932   0012D0  B4D8               	btfsc	status,2,c
  8933   0012D2  EF6D  F009         	goto	u6851
  8934   0012D6  EF6F  F009         	goto	u6850
  8935   0012DA                     u6851:
  8936   0012DA  EF58  F009         	goto	l5975
  8937   0012DE                     u6850:
  8938   0012DE                     
  8939                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  8940   0012DE  C026  F003         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8941   0012E2  C027  F004         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8942   0012E6  EC84  F014         	call	_read_prec_or_width	;wreg free
  8943   0012EA  C003  F0C4         	movff	?_read_prec_or_width,_width
  8944   0012EE  C004  F0C5         	movff	?_read_prec_or_width+1,_width+1
  8945   0012F2                     
  8946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  8947   0012F2  0100               	movlb	0	; () banked
  8948   0012F4  BFC5               	btfsc	(_width+1)& (0+255),7,b
  8949   0012F6  EF81  F009         	goto	u6860
  8950   0012FA  EF7F  F009         	goto	u6861
  8951   0012FE                     u6861:
  8952   0012FE  EF86  F009         	goto	l5985
  8953   001302                     u6860:
  8954   001302                     
  8955                           ; BSR set to: 0
  8956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  8957   001302  81D4               	bsf	_flags& (0+255),0,b
  8958                           
  8959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  8960   001304  6DC4               	negf	_width& (0+255),b
  8961   001306  1FC5               	comf	(_width+1)& (0+255),f,b
  8962   001308  B0D8               	btfsc	status,0,c
  8963   00130A  2BC5               	incf	(_width+1)& (0+255),f,b
  8964   00130C                     l5985:
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  8968   00130C  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8969   00130E  6ED9               	movwf	fsr2l,c
  8970   001310  6ADA               	clrf	fsr2h,c
  8971   001312  CFDE FFF6          	movff	postinc2,tblptrl
  8972   001316  CFDD FFF7          	movff	postdec2,tblptrh
  8973   00131A                     	if	0	;tblptru may be non-zero
  8974   00131A                     	endif
  8975   00131A                     	if	0	;tblptru may be non-zero
  8976   00131A                     	endif
  8977   00131A  0008               	tblrd		*
  8978   00131C  50F5               	movf	tablat,w,c
  8979   00131E  0A63               	xorlw	99
  8980   001320  A4D8               	btfss	status,2,c
  8981   001322  EF95  F009         	goto	u6871
  8982   001326  EF97  F009         	goto	u6870
  8983   00132A                     u6871:
  8984   00132A  EFAF  F009         	goto	l5995
  8985   00132E                     u6870:
  8986   00132E                     
  8987                           ; BSR set to: 0
  8988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  8989   00132E  5026               	movf	vfpfcnvrt@fmt^0,w,c
  8990   001330  6ED9               	movwf	fsr2l,c
  8991   001332  6ADA               	clrf	fsr2h,c
  8992   001334  2ADE               	incf	postinc2,f,c
  8993   001336  0E00               	movlw	0
  8994   001338  22DD               	addwfc	postdec2,f,c
  8995   00133A                     
  8996                           ; BSR set to: 0
  8997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8998   00133A  5027               	movf	vfpfcnvrt@ap^0,w,c
  8999   00133C  6ED9               	movwf	fsr2l,c
  9000   00133E  6ADA               	clrf	fsr2h,c
  9001   001340  50DF               	movf	indf2,w,c
  9002   001342  2ADF               	incf	indf2,f,c
  9003   001344  2ADF               	incf	indf2,f,c
  9004   001346  6ED9               	movwf	fsr2l,c
  9005   001348  6ADA               	clrf	fsr2h,c
  9006   00134A  50DF               	movf	indf2,w,c
  9007   00134C  6E2A               	movwf	vfpfcnvrt@c^0,c
  9008   00134E                     
  9009                           ; BSR set to: 0
  9010                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  9011   00134E  C025  F00B         	movff	vfpfcnvrt@fp,ctoa@fp
  9012   001352  C02A  F00C         	movff	vfpfcnvrt@c,ctoa@c
  9013   001356  ECC7  F013         	call	_ctoa	;wreg free
  9014   00135A  EF2A  F00A         	goto	l1260
  9015   00135E                     l5995:
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  9019   00135E  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9020   001360  6ED9               	movwf	fsr2l,c
  9021   001362  6ADA               	clrf	fsr2h,c
  9022   001364  CFDE F030          	movff	postinc2,vfpfcnvrt@cp
  9023   001368  CFDD F031          	movff	postdec2,vfpfcnvrt@cp+1
  9024   00136C                     
  9025                           ; BSR set to: 0
  9026   00136C  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9027   001370  C031  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9028   001374                     	if	0	;tblptru may be non-zero
  9029   001374                     	endif
  9030   001374                     	if	0	;tblptru may be non-zero
  9031   001374                     	endif
  9032   001374  0008               	tblrd		*
  9033   001376  50F5               	movf	tablat,w,c
  9034   001378  0A58               	xorlw	88
  9035   00137A  B4D8               	btfsc	status,2,c
  9036   00137C  EFC2  F009         	goto	u6881
  9037   001380  EFC4  F009         	goto	u6880
  9038   001384                     u6881:
  9039   001384  EFD2  F009         	goto	l6001
  9040   001388                     u6880:
  9041   001388                     
  9042                           ; BSR set to: 0
  9043   001388  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9044   00138C  C031  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9045   001390                     	if	0	;tblptru may be non-zero
  9046   001390                     	endif
  9047   001390                     	if	0	;tblptru may be non-zero
  9048   001390                     	endif
  9049   001390  0008               	tblrd		*
  9050   001392  50F5               	movf	tablat,w,c
  9051   001394  0A75               	xorlw	117
  9052   001396  A4D8               	btfss	status,2,c
  9053   001398  EFD0  F009         	goto	u6891
  9054   00139C  EFD2  F009         	goto	u6890
  9055   0013A0                     u6891:
  9056   0013A0  EF11  F00A         	goto	l6017
  9057   0013A4                     u6890:
  9058   0013A4                     l6001:
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  9062   0013A4  5027               	movf	vfpfcnvrt@ap^0,w,c
  9063   0013A6  6ED9               	movwf	fsr2l,c
  9064   0013A8  6ADA               	clrf	fsr2h,c
  9065   0013AA  0E02               	movlw	2
  9066   0013AC  26DF               	addwf	indf2,f,c
  9067   0013AE  5CDF               	subwf	indf2,w,c
  9068   0013B0  6ED9               	movwf	fsr2l,c
  9069   0013B2  6ADA               	clrf	fsr2h,c
  9070   0013B4  CFDE F02C          	movff	postinc2,vfpfcnvrt@convarg
  9071   0013B8  CFDE F02D          	movff	postinc2,vfpfcnvrt@convarg+1
  9072   0013BC                     
  9073                           ; BSR set to: 0
  9074                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  9075   0013BC  0E01               	movlw	1
  9076   0013BE  2430               	addwf	vfpfcnvrt@cp^0,w,c
  9077   0013C0  6E28               	movwf	??_vfpfcnvrt^0,c
  9078   0013C2  0E00               	movlw	0
  9079   0013C4  2031               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  9080   0013C6  6E29               	movwf	(??_vfpfcnvrt+1)^0,c
  9081   0013C8  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9082   0013CA  6ED9               	movwf	fsr2l,c
  9083   0013CC  6ADA               	clrf	fsr2h,c
  9084   0013CE  C028  FFDE         	movff	??_vfpfcnvrt,postinc2
  9085   0013D2  C029  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  9086                           
  9087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  9088   0013D6  EF01  F00A         	goto	l6015
  9089   0013DA                     l6005:
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  9093   0013DA  C025  F019         	movff	vfpfcnvrt@fp,utoa@fp
  9094   0013DE  C02C  F01A         	movff	vfpfcnvrt@convarg,utoa@d
  9095   0013E2  C02D  F01B         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  9096   0013E6  EC60  F011         	call	_utoa	;wreg free
  9097   0013EA  EF2A  F00A         	goto	l1260
  9098   0013EE                     l6009:
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  9102   0013EE  C025  F019         	movff	vfpfcnvrt@fp,xtoa@fp
  9103   0013F2  C02C  F01A         	movff	vfpfcnvrt@convarg,xtoa@d
  9104   0013F6  C02D  F01B         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  9105   0013FA  ECFA  F00E         	call	_xtoa	;wreg free
  9106   0013FE  EF2A  F00A         	goto	l1260
  9107   001402                     l6015:
  9108                           
  9109                           ; BSR set to: 0
  9110   001402  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9111   001406  C031  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9112   00140A                     	if	0	;tblptru may be non-zero
  9113   00140A                     	endif
  9114   00140A                     	if	0	;tblptru may be non-zero
  9115   00140A                     	endif
  9116   00140A  0008               	tblrd		*
  9117   00140C  50F5               	movf	tablat,w,c
  9118                           
  9119                           ; Switch size 1, requested type "simple"
  9120                           ; Number of cases is 2, Range of values is 88 to 117
  9121                           ; switch strategies available:
  9122                           ; Name         Instructions Cycles
  9123                           ; simple_byte            7     4 (average)
  9124                           ;	Chosen strategy is simple_byte
  9125   00140E  0A58               	xorlw	88	; case 88
  9126   001410  B4D8               	btfsc	status,2,c
  9127   001412  EFF7  F009         	goto	l6009
  9128   001416  0A2D               	xorlw	45	; case 117
  9129   001418  B4D8               	btfsc	status,2,c
  9130   00141A  EFED  F009         	goto	l6005
  9131   00141E  EF11  F00A         	goto	l6017
  9132   001422                     l6017:
  9133                           
  9134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  9135   001422  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9136   001424  6ED9               	movwf	fsr2l,c
  9137   001426  6ADA               	clrf	fsr2h,c
  9138   001428  2ADE               	incf	postinc2,f,c
  9139   00142A  0E00               	movlw	0
  9140   00142C  22DD               	addwfc	postdec2,f,c
  9141   00142E  EF2A  F00A         	goto	l1260
  9142   001432                     l6021:
  9143                           
  9144                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  9145   001432  5026               	movf	vfpfcnvrt@fmt^0,w,c
  9146   001434  6ED9               	movwf	fsr2l,c
  9147   001436  6ADA               	clrf	fsr2h,c
  9148   001438  CFDE FFF6          	movff	postinc2,tblptrl
  9149   00143C  CFDD FFF7          	movff	postdec2,tblptrh
  9150   001440                     	if	0	;tblptru may be non-zero
  9151   001440                     	endif
  9152   001440                     	if	0	;tblptru may be non-zero
  9153   001440                     	endif
  9154   001440  0008               	tblrd		*
  9155   001442  50F5               	movf	tablat,w,c
  9156   001444  6E03               	movwf	fputc@c^0,c
  9157   001446  6A04               	clrf	(fputc@c+1)^0,c
  9158   001448  C025  F005         	movff	vfpfcnvrt@fp,fputc@fp
  9159   00144C  EC27  F014         	call	_fputc	;wreg free
  9160   001450  EF11  F00A         	goto	l6017
  9161   001454                     l1260:
  9162   001454  0012               	return		;funcret
  9163   001456                     __end_of_vfpfcnvrt:
  9164                           	callstack 0
  9165                           
  9166 ;; *************** function _xtoa *****************
  9167 ;; Defined at:
  9168 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  9171 ;;		 -> sprintf@f(11), 
  9172 ;;  d               2   25[COMRAM] unsigned int 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;  i               2   34[COMRAM] int 
  9175 ;;  w               2   31[COMRAM] int 
  9176 ;;  c               1   33[COMRAM] unsigned char 
  9177 ;;  p               1   30[COMRAM] _Bool 
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9187 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;Total ram usage:       12 bytes
  9192 ;; Hardware stack levels used: 1
  9193 ;; Hardware stack levels required when called: 5
  9194 ;; This function calls:
  9195 ;;		_pad
  9196 ;; This function is called by:
  9197 ;;		_vfpfcnvrt
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           	psect	text37
  9202   001DF4                     __ptext37:
  9203                           	callstack 0
  9204   001DF4                     _xtoa:
  9205                           	callstack 19
  9206   001DF4                     
  9207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
  9208   001DF4  0E01               	movlw	1
  9209   001DF6  6E1F               	movwf	xtoa@p^0,c
  9210   001DF8                     
  9211                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  9212   001DF8  C0C4  F020         	movff	_width,xtoa@w
  9213   001DFC  C0C5  F021         	movff	_width+1,xtoa@w+1
  9214                           
  9215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  9216   001E00  0E00               	movlw	0
  9217   001E02  6E24               	movwf	(xtoa@i+1)^0,c
  9218   001E04  0E1F               	movlw	31
  9219   001E06  6E23               	movwf	xtoa@i^0,c
  9220   001E08                     
  9221                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  9222   001E08  0101               	movlb	1	; () banked
  9223   001E0A  6B7B               	clrf	(_dbuf+31)& (0+255),b
  9224                           
  9225                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  9226   001E0C  EF38  F00F         	goto	l5777
  9227   001E10                     l5759:
  9228                           
  9229                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1107:         --i;
  9230   001E10  0623               	decf	xtoa@i^0,f,c
  9231   001E12  A0D8               	btfss	status,0,c
  9232   001E14  0624               	decf	(xtoa@i+1)^0,f,c
  9233   001E16                     
  9234                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  9235   001E16  501A               	movf	xtoa@d^0,w,c
  9236   001E18  0B0F               	andlw	15
  9237   001E1A  6E22               	movwf	xtoa@c^0,c
  9238   001E1C                     
  9239                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  9240   001E1C  0E0A               	movlw	10
  9241   001E1E  6022               	cpfslt	xtoa@c^0,c
  9242   001E20  EF14  F00F         	goto	u6481
  9243   001E24  EF16  F00F         	goto	u6480
  9244   001E28                     u6481:
  9245   001E28  EF1A  F00F         	goto	l5767
  9246   001E2C                     u6480:
  9247   001E2C                     
  9248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  9249   001E2C  0E30               	movlw	48
  9250   001E2E  2622               	addwf	xtoa@c^0,f,c
  9251                           
  9252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1111:   }
  9253   001E30  EF1C  F00F         	goto	l5769
  9254   001E34                     l5767:
  9255                           
  9256                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1118:    c += 'A'
      +                           - 10;
  9257   001E34  0E37               	movlw	55
  9258   001E36  2622               	addwf	xtoa@c^0,f,c
  9259   001E38                     l5769:
  9260                           
  9261                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  9262   001E38  0E5C               	movlw	low _dbuf
  9263   001E3A  2423               	addwf	xtoa@i^0,w,c
  9264   001E3C  6ED9               	movwf	fsr2l,c
  9265   001E3E  0E01               	movlw	high _dbuf
  9266   001E40  2024               	addwfc	(xtoa@i+1)^0,w,c
  9267   001E42  6EDA               	movwf	fsr2h,c
  9268   001E44  C022  FFDF         	movff	xtoa@c,indf2
  9269   001E48                     
  9270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
  9271   001E48  6A1F               	clrf	xtoa@p^0,c
  9272   001E4A                     
  9273                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  9274   001E4A  0620               	decf	xtoa@w^0,f,c
  9275   001E4C  A0D8               	btfss	status,0,c
  9276   001E4E  0621               	decf	(xtoa@w+1)^0,f,c
  9277   001E50                     
  9278                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  9279   001E50  C01A  F01C         	movff	xtoa@d,??_xtoa
  9280   001E54  C01B  F01D         	movff	xtoa@d+1,??_xtoa+1
  9281   001E58  0E04               	movlw	4
  9282   001E5A  6E1E               	movwf	(??_xtoa+2)^0,c
  9283   001E5C                     u6495:
  9284   001E5C  90D8               	bcf	status,0,c
  9285   001E5E  321D               	rrcf	(??_xtoa+1)^0,f,c
  9286   001E60  321C               	rrcf	??_xtoa^0,f,c
  9287   001E62  2E1E               	decfsz	(??_xtoa+2)^0,f,c
  9288   001E64  EF2E  F00F         	goto	u6495
  9289   001E68  C01C  F01A         	movff	??_xtoa,xtoa@d
  9290   001E6C  C01D  F01B         	movff	??_xtoa+1,xtoa@d+1
  9291   001E70                     l5777:
  9292                           
  9293                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  9294   001E70  BE24               	btfsc	(xtoa@i+1)^0,7,c
  9295   001E72  EF44  F00F         	goto	u6501
  9296   001E76  5024               	movf	(xtoa@i+1)^0,w,c
  9297   001E78  E109               	bnz	u6500
  9298   001E7A  0E02               	movlw	2
  9299   001E7C  5C23               	subwf	xtoa@i^0,w,c
  9300   001E7E  A0D8               	btfss	status,0,c
  9301   001E80  EF44  F00F         	goto	u6501
  9302   001E84  EF46  F00F         	goto	u6500
  9303   001E88                     u6501:
  9304   001E88  EF6C  F00F         	goto	l5787
  9305   001E8C                     u6500:
  9306   001E8C  501A               	movf	xtoa@d^0,w,c
  9307   001E8E  101B               	iorwf	(xtoa@d+1)^0,w,c
  9308   001E90  A4D8               	btfss	status,2,c
  9309   001E92  EF4D  F00F         	goto	u6511
  9310   001E96  EF4F  F00F         	goto	u6510
  9311   001E9A                     u6511:
  9312   001E9A  EF08  F00F         	goto	l5759
  9313   001E9E                     u6510:
  9314   001E9E  501F               	movf	xtoa@p^0,w,c
  9315   001EA0  A4D8               	btfss	status,2,c
  9316   001EA2  EF55  F00F         	goto	u6521
  9317   001EA6  EF57  F00F         	goto	u6520
  9318   001EAA                     u6521:
  9319   001EAA  EF08  F00F         	goto	l5759
  9320   001EAE                     u6520:
  9321   001EAE  BE21               	btfsc	(xtoa@w+1)^0,7,c
  9322   001EB0  EF62  F00F         	goto	u6531
  9323   001EB4  5021               	movf	(xtoa@w+1)^0,w,c
  9324   001EB6  E108               	bnz	u6530
  9325   001EB8  0420               	decf	xtoa@w^0,w,c
  9326   001EBA  A0D8               	btfss	status,0,c
  9327   001EBC  EF62  F00F         	goto	u6531
  9328   001EC0  EF64  F00F         	goto	u6530
  9329   001EC4                     u6531:
  9330   001EC4  EF6C  F00F         	goto	l5787
  9331   001EC8                     u6530:
  9332   001EC8  0100               	movlb	0	; () banked
  9333   001ECA  B3D4               	btfsc	_flags& (0+255),1,b
  9334   001ECC  EF6A  F00F         	goto	u6541
  9335   001ED0  EF6C  F00F         	goto	u6540
  9336   001ED4                     u6541:
  9337   001ED4  EF08  F00F         	goto	l5759
  9338   001ED8                     u6540:
  9339   001ED8                     l5787:
  9340                           
  9341                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  9342   001ED8  C019  F011         	movff	xtoa@fp,pad@fp
  9343   001EDC  0E5C               	movlw	low _dbuf
  9344   001EDE  2423               	addwf	xtoa@i^0,w,c
  9345   001EE0  6E12               	movwf	pad@buf^0,c
  9346   001EE2  0E01               	movlw	high _dbuf
  9347   001EE4  2024               	addwfc	(xtoa@i+1)^0,w,c
  9348   001EE6  6E13               	movwf	(pad@buf+1)^0,c
  9349   001EE8  C020  F014         	movff	xtoa@w,pad@p
  9350   001EEC  C021  F015         	movff	xtoa@w+1,pad@p+1
  9351   001EF0  ECCA  F015         	call	_pad	;wreg free
  9352   001EF4  0012               	return		;funcret
  9353   001EF6                     __end_of_xtoa:
  9354                           	callstack 0
  9355                           
  9356 ;; *************** function _utoa *****************
  9357 ;; Defined at:
  9358 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  9361 ;;		 -> sprintf@f(11), 
  9362 ;;  d               2   25[COMRAM] unsigned int 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;  i               2   30[COMRAM] int 
  9365 ;;  w               2   28[COMRAM] int 
  9366 ;;  p               1   27[COMRAM] _Bool 
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1    wreg      void 
  9369 ;; Registers used:
  9370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9376 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9379 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9380 ;;Total ram usage:        8 bytes
  9381 ;; Hardware stack levels used: 1
  9382 ;; Hardware stack levels required when called: 5
  9383 ;; This function calls:
  9384 ;;		___lwdiv
  9385 ;;		___lwmod
  9386 ;;		_pad
  9387 ;; This function is called by:
  9388 ;;		_vfpfcnvrt
  9389 ;; This function uses a non-reentrant model
  9390 ;;
  9391                           
  9392                           	psect	text38
  9393   0022C0                     __ptext38:
  9394                           	callstack 0
  9395   0022C0                     _utoa:
  9396                           	callstack 19
  9397   0022C0                     
  9398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  9399   0022C0  0E01               	movlw	1
  9400   0022C2  6E1C               	movwf	utoa@p^0,c
  9401   0022C4                     
  9402                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  9403   0022C4  C0C4  F01D         	movff	_width,utoa@w
  9404   0022C8  C0C5  F01E         	movff	_width+1,utoa@w+1
  9405                           
  9406                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  9407   0022CC  0E00               	movlw	0
  9408   0022CE  6E20               	movwf	(utoa@i+1)^0,c
  9409   0022D0  0E1F               	movlw	31
  9410   0022D2  6E1F               	movwf	utoa@i^0,c
  9411   0022D4                     
  9412                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  9413   0022D4  0101               	movlb	1	; () banked
  9414   0022D6  6B7B               	clrf	(_dbuf+31)& (0+255),b
  9415                           
  9416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  9417   0022D8  EF96  F011         	goto	l5739
  9418   0022DC                     l5729:
  9419                           
  9420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
  9421   0022DC  061F               	decf	utoa@i^0,f,c
  9422   0022DE  A0D8               	btfss	status,0,c
  9423   0022E0  0620               	decf	(utoa@i+1)^0,f,c
  9424   0022E2                     
  9425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  9426   0022E2  0E5C               	movlw	low _dbuf
  9427   0022E4  241F               	addwf	utoa@i^0,w,c
  9428   0022E6  6ED9               	movwf	fsr2l,c
  9429   0022E8  0E01               	movlw	high _dbuf
  9430   0022EA  2020               	addwfc	(utoa@i+1)^0,w,c
  9431   0022EC  6EDA               	movwf	fsr2h,c
  9432   0022EE  C01A  F003         	movff	utoa@d,___lwmod@dividend
  9433   0022F2  C01B  F004         	movff	utoa@d+1,___lwmod@dividend+1
  9434   0022F6  0E00               	movlw	0
  9435   0022F8  6E06               	movwf	(___lwmod@divisor+1)^0,c
  9436   0022FA  0E0A               	movlw	10
  9437   0022FC  6E05               	movwf	___lwmod@divisor^0,c
  9438   0022FE  ECFB  F017         	call	___lwmod	;wreg free
  9439   002302  5003               	movf	?___lwmod^0,w,c
  9440   002304  0F30               	addlw	48
  9441   002306  6EDF               	movwf	indf2,c
  9442   002308                     
  9443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  9444   002308  6A1C               	clrf	utoa@p^0,c
  9445   00230A                     
  9446                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  9447   00230A  061D               	decf	utoa@w^0,f,c
  9448   00230C  A0D8               	btfss	status,0,c
  9449   00230E  061E               	decf	(utoa@w+1)^0,f,c
  9450   002310                     
  9451                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  9452   002310  C01A  F003         	movff	utoa@d,___lwdiv@dividend
  9453   002314  C01B  F004         	movff	utoa@d+1,___lwdiv@dividend+1
  9454   002318  0E00               	movlw	0
  9455   00231A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  9456   00231C  0E0A               	movlw	10
  9457   00231E  6E05               	movwf	___lwdiv@divisor^0,c
  9458   002320  EC24  F017         	call	___lwdiv	;wreg free
  9459   002324  C003  F01A         	movff	?___lwdiv,utoa@d
  9460   002328  C004  F01B         	movff	?___lwdiv+1,utoa@d+1
  9461   00232C                     l5739:
  9462                           
  9463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  9464   00232C  501F               	movf	utoa@i^0,w,c
  9465   00232E  1020               	iorwf	(utoa@i+1)^0,w,c
  9466   002330  B4D8               	btfsc	status,2,c
  9467   002332  EF9D  F011         	goto	u6431
  9468   002336  EF9F  F011         	goto	u6430
  9469   00233A                     u6431:
  9470   00233A  EFC5  F011         	goto	l5749
  9471   00233E                     u6430:
  9472   00233E  501A               	movf	utoa@d^0,w,c
  9473   002340  101B               	iorwf	(utoa@d+1)^0,w,c
  9474   002342  A4D8               	btfss	status,2,c
  9475   002344  EFA6  F011         	goto	u6441
  9476   002348  EFA8  F011         	goto	u6440
  9477   00234C                     u6441:
  9478   00234C  EF6E  F011         	goto	l5729
  9479   002350                     u6440:
  9480   002350  501C               	movf	utoa@p^0,w,c
  9481   002352  A4D8               	btfss	status,2,c
  9482   002354  EFAE  F011         	goto	u6451
  9483   002358  EFB0  F011         	goto	u6450
  9484   00235C                     u6451:
  9485   00235C  EF6E  F011         	goto	l5729
  9486   002360                     u6450:
  9487   002360  BE1E               	btfsc	(utoa@w+1)^0,7,c
  9488   002362  EFBB  F011         	goto	u6461
  9489   002366  501E               	movf	(utoa@w+1)^0,w,c
  9490   002368  E108               	bnz	u6460
  9491   00236A  041D               	decf	utoa@w^0,w,c
  9492   00236C  A0D8               	btfss	status,0,c
  9493   00236E  EFBB  F011         	goto	u6461
  9494   002372  EFBD  F011         	goto	u6460
  9495   002376                     u6461:
  9496   002376  EFC5  F011         	goto	l5749
  9497   00237A                     u6460:
  9498   00237A  0100               	movlb	0	; () banked
  9499   00237C  B3D4               	btfsc	_flags& (0+255),1,b
  9500   00237E  EFC3  F011         	goto	u6471
  9501   002382  EFC5  F011         	goto	u6470
  9502   002386                     u6471:
  9503   002386  EF6E  F011         	goto	l5729
  9504   00238A                     u6470:
  9505   00238A                     l5749:
  9506                           
  9507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  9508   00238A  C019  F011         	movff	utoa@fp,pad@fp
  9509   00238E  0E5C               	movlw	low _dbuf
  9510   002390  241F               	addwf	utoa@i^0,w,c
  9511   002392  6E12               	movwf	pad@buf^0,c
  9512   002394  0E01               	movlw	high _dbuf
  9513   002396  2020               	addwfc	(utoa@i+1)^0,w,c
  9514   002398  6E13               	movwf	(pad@buf+1)^0,c
  9515   00239A  C01D  F014         	movff	utoa@w,pad@p
  9516   00239E  C01E  F015         	movff	utoa@w+1,pad@p+1
  9517   0023A2  ECCA  F015         	call	_pad	;wreg free
  9518   0023A6  0012               	return		;funcret
  9519   0023A8                     __end_of_utoa:
  9520                           	callstack 0
  9521                           
  9522 ;; *************** function _pad *****************
  9523 ;; Defined at:
  9524 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  9527 ;;		 -> sprintf@f(11), 
  9528 ;;  buf             2   17[COMRAM] PTR unsigned char 
  9529 ;;		 -> dbuf(32), 
  9530 ;;  p               2   19[COMRAM] int 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;  i               2   22[COMRAM] int 
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      void 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9542 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;Total ram usage:        8 bytes
  9547 ;; Hardware stack levels used: 1
  9548 ;; Hardware stack levels required when called: 4
  9549 ;; This function calls:
  9550 ;;		_fputc
  9551 ;;		_fputs
  9552 ;; This function is called by:
  9553 ;;		_utoa
  9554 ;;		_xtoa
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text39
  9559   002B94                     __ptext39:
  9560                           	callstack 0
  9561   002B94                     _pad:
  9562                           	callstack 19
  9563   002B94                     
  9564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  9565   002B94  0100               	movlb	0	; () banked
  9566   002B96  A1D4               	btfss	_flags& (0+255),0,b
  9567   002B98  EFD0  F015         	goto	u6101
  9568   002B9C  EFD2  F015         	goto	u6100
  9569   002BA0                     u6101:
  9570   002BA0  EFDA  F015         	goto	l5593
  9571   002BA4                     u6100:
  9572   002BA4                     
  9573                           ; BSR set to: 0
  9574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  9575   002BA4  C012  F00B         	movff	pad@buf,fputs@s
  9576   002BA8  C013  F00C         	movff	pad@buf+1,fputs@s+1
  9577   002BAC  C011  F00D         	movff	pad@fp,fputs@fp
  9578   002BB0  EC40  F019         	call	_fputs	;wreg free
  9579   002BB4                     l5593:
  9580                           
  9581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  9582   002BB4  BE15               	btfsc	(pad@p+1)^0,7,c
  9583   002BB6  EFE1  F015         	goto	u6110
  9584   002BBA  EFDF  F015         	goto	u6111
  9585   002BBE                     u6111:
  9586   002BBE  EFE5  F015         	goto	l1196
  9587   002BC2                     u6110:
  9588   002BC2                     
  9589                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9590   002BC2  0E00               	movlw	0
  9591   002BC4  6E15               	movwf	(pad@p+1)^0,c
  9592   002BC6  0E00               	movlw	0
  9593   002BC8  6E14               	movwf	pad@p^0,c
  9594   002BCA                     l1196:
  9595                           
  9596                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9597   002BCA  0E00               	movlw	0
  9598   002BCC  6E18               	movwf	(pad@i+1)^0,c
  9599   002BCE  0E00               	movlw	0
  9600   002BD0  6E17               	movwf	pad@i^0,c
  9601                           
  9602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9603   002BD2  EFF5  F015         	goto	l5601
  9604   002BD6                     l5597:
  9605                           
  9606                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9607   002BD6  0E00               	movlw	0
  9608   002BD8  6E04               	movwf	(fputc@c+1)^0,c
  9609   002BDA  0E20               	movlw	32
  9610   002BDC  6E03               	movwf	fputc@c^0,c
  9611   002BDE  C011  F005         	movff	pad@fp,fputc@fp
  9612   002BE2  EC27  F014         	call	_fputc	;wreg free
  9613   002BE6                     
  9614                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9615   002BE6  4A17               	infsnz	pad@i^0,f,c
  9616   002BE8  2A18               	incf	(pad@i+1)^0,f,c
  9617   002BEA                     l5601:
  9618                           
  9619                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9620   002BEA  5014               	movf	pad@p^0,w,c
  9621   002BEC  5C17               	subwf	pad@i^0,w,c
  9622   002BEE  5018               	movf	(pad@i+1)^0,w,c
  9623   002BF0  0A80               	xorlw	128
  9624   002BF2  6E16               	movwf	??_pad^0,c
  9625   002BF4  5015               	movf	(pad@p+1)^0,w,c
  9626   002BF6  0A80               	xorlw	128
  9627   002BF8  5816               	subwfb	??_pad^0,w,c
  9628   002BFA  A0D8               	btfss	status,0,c
  9629   002BFC  EF02  F016         	goto	u6121
  9630   002C00  EF04  F016         	goto	u6120
  9631   002C04                     u6121:
  9632   002C04  EFEB  F015         	goto	l5597
  9633   002C08                     u6120:
  9634   002C08                     
  9635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  9636   002C08  0100               	movlb	0	; () banked
  9637   002C0A  B1D4               	btfsc	_flags& (0+255),0,b
  9638   002C0C  EF0A  F016         	goto	u6131
  9639   002C10  EF0C  F016         	goto	u6130
  9640   002C14                     u6131:
  9641   002C14  EF14  F016         	goto	l1201
  9642   002C18                     u6130:
  9643   002C18                     
  9644                           ; BSR set to: 0
  9645                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9646   002C18  C012  F00B         	movff	pad@buf,fputs@s
  9647   002C1C  C013  F00C         	movff	pad@buf+1,fputs@s+1
  9648   002C20  C011  F00D         	movff	pad@fp,fputs@fp
  9649   002C24  EC40  F019         	call	_fputs	;wreg free
  9650   002C28                     l1201:
  9651   002C28  0012               	return		;funcret
  9652   002C2A                     __end_of_pad:
  9653                           	callstack 0
  9654                           
  9655 ;; *************** function _fputs *****************
  9656 ;; Defined at:
  9657 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9660 ;;		 -> dbuf(32), 
  9661 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  9662 ;;		 -> sprintf@f(11), 
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;  i               2   14[COMRAM] int 
  9665 ;;  c               1   13[COMRAM] unsigned char 
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  2   10[COMRAM] int 
  9668 ;; Registers used:
  9669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9675 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9676 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;Total ram usage:        6 bytes
  9680 ;; Hardware stack levels used: 1
  9681 ;; Hardware stack levels required when called: 3
  9682 ;; This function calls:
  9683 ;;		_fputc
  9684 ;; This function is called by:
  9685 ;;		_pad
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           	psect	text40
  9690   003280                     __ptext40:
  9691                           	callstack 0
  9692   003280                     _fputs:
  9693                           	callstack 19
  9694   003280  0E00               	movlw	0
  9695   003282  6E10               	movwf	(fputs@i+1)^0,c
  9696   003284  0E00               	movlw	0
  9697   003286  6E0F               	movwf	fputs@i^0,c
  9698   003288  EF4F  F019         	goto	l5411
  9699   00328C                     l5407:
  9700   00328C  C00E  F003         	movff	fputs@c,fputc@c
  9701   003290  6A04               	clrf	(fputc@c+1)^0,c
  9702   003292  C00D  F005         	movff	fputs@fp,fputc@fp
  9703   003296  EC27  F014         	call	_fputc	;wreg free
  9704   00329A  4A0F               	infsnz	fputs@i^0,f,c
  9705   00329C  2A10               	incf	(fputs@i+1)^0,f,c
  9706   00329E                     l5411:
  9707   00329E  500F               	movf	fputs@i^0,w,c
  9708   0032A0  240B               	addwf	fputs@s^0,w,c
  9709   0032A2  6ED9               	movwf	fsr2l,c
  9710   0032A4  5010               	movf	(fputs@i+1)^0,w,c
  9711   0032A6  200C               	addwfc	(fputs@s+1)^0,w,c
  9712   0032A8  6EDA               	movwf	fsr2h,c
  9713   0032AA  50DF               	movf	indf2,w,c
  9714   0032AC  6E0E               	movwf	fputs@c^0,c
  9715   0032AE  500E               	movf	fputs@c^0,w,c
  9716   0032B0  A4D8               	btfss	status,2,c
  9717   0032B2  EF5D  F019         	goto	u5661
  9718   0032B6  EF5F  F019         	goto	u5660
  9719   0032BA                     u5661:
  9720   0032BA  EF46  F019         	goto	l5407
  9721   0032BE                     u5660:
  9722   0032BE  0012               	return		;funcret
  9723   0032C0                     __end_of_fputs:
  9724                           	callstack 0
  9725                           
  9726 ;; *************** function ___lwmod *****************
  9727 ;; Defined at:
  9728 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;  dividend        2    2[COMRAM] unsigned int 
  9731 ;;  divisor         2    4[COMRAM] unsigned int 
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;  counter         1    6[COMRAM] unsigned char 
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  2    2[COMRAM] unsigned int 
  9736 ;; Registers used:
  9737 ;;		wreg, status,2, status,0
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9746 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;Total ram usage:        5 bytes
  9748 ;; Hardware stack levels used: 1
  9749 ;; Hardware stack levels required when called: 1
  9750 ;; This function calls:
  9751 ;;		Nothing
  9752 ;; This function is called by:
  9753 ;;		_welcome_splash
  9754 ;;		_utoa
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           	psect	text41
  9759   002FF6                     __ptext41:
  9760                           	callstack 0
  9761   002FF6                     ___lwmod:
  9762                           	callstack 28
  9763   002FF6  5005               	movf	___lwmod@divisor^0,w,c
  9764   002FF8  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  9765   002FFA  B4D8               	btfsc	status,2,c
  9766   002FFC  EF02  F018         	goto	u6071
  9767   003000  EF04  F018         	goto	u6070
  9768   003004                     u6071:
  9769   003004  EF28  F018         	goto	l992
  9770   003008                     u6070:
  9771   003008  0E01               	movlw	1
  9772   00300A  6E07               	movwf	___lwmod@counter^0,c
  9773   00300C  EF0C  F018         	goto	l5579
  9774   003010                     l5577:
  9775   003010  90D8               	bcf	status,0,c
  9776   003012  3605               	rlcf	___lwmod@divisor^0,f,c
  9777   003014  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  9778   003016  2A07               	incf	___lwmod@counter^0,f,c
  9779   003018                     l5579:
  9780   003018  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  9781   00301A  EF11  F018         	goto	u6081
  9782   00301E  EF13  F018         	goto	u6080
  9783   003022                     u6081:
  9784   003022  EF08  F018         	goto	l5577
  9785   003026                     u6080:
  9786   003026                     l5581:
  9787   003026  5005               	movf	___lwmod@divisor^0,w,c
  9788   003028  5C03               	subwf	___lwmod@dividend^0,w,c
  9789   00302A  5006               	movf	(___lwmod@divisor+1)^0,w,c
  9790   00302C  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  9791   00302E  A0D8               	btfss	status,0,c
  9792   003030  EF1C  F018         	goto	u6091
  9793   003034  EF1E  F018         	goto	u6090
  9794   003038                     u6091:
  9795   003038  EF22  F018         	goto	l5585
  9796   00303C                     u6090:
  9797   00303C  5005               	movf	___lwmod@divisor^0,w,c
  9798   00303E  5E03               	subwf	___lwmod@dividend^0,f,c
  9799   003040  5006               	movf	(___lwmod@divisor+1)^0,w,c
  9800   003042  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  9801   003044                     l5585:
  9802   003044  90D8               	bcf	status,0,c
  9803   003046  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  9804   003048  3205               	rrcf	___lwmod@divisor^0,f,c
  9805   00304A  2E07               	decfsz	___lwmod@counter^0,f,c
  9806   00304C  EF13  F018         	goto	l5581
  9807   003050                     l992:
  9808   003050  C003  F003         	movff	___lwmod@dividend,?___lwmod
  9809   003054  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  9810   003058  0012               	return		;funcret
  9811   00305A                     __end_of___lwmod:
  9812                           	callstack 0
  9813                           
  9814 ;; *************** function ___lwdiv *****************
  9815 ;; Defined at:
  9816 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  dividend        2    2[COMRAM] unsigned int 
  9819 ;;  divisor         2    4[COMRAM] unsigned int 
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;  quotient        2    7[COMRAM] unsigned int 
  9822 ;;  counter         1    6[COMRAM] unsigned char 
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  2    2[COMRAM] unsigned int 
  9825 ;; Registers used:
  9826 ;;		wreg, status,2, status,0
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9835 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9836 ;;Total ram usage:        7 bytes
  9837 ;; Hardware stack levels used: 1
  9838 ;; Hardware stack levels required when called: 1
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_welcome_splash
  9843 ;;		_utoa
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text42
  9848   002E48                     __ptext42:
  9849                           	callstack 0
  9850   002E48                     ___lwdiv:
  9851                           	callstack 28
  9852   002E48  0E00               	movlw	0
  9853   002E4A  6E09               	movwf	(___lwdiv@quotient+1)^0,c
  9854   002E4C  0E00               	movlw	0
  9855   002E4E  6E08               	movwf	___lwdiv@quotient^0,c
  9856   002E50  5005               	movf	___lwdiv@divisor^0,w,c
  9857   002E52  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9858   002E54  B4D8               	btfsc	status,2,c
  9859   002E56  EF2F  F017         	goto	u6041
  9860   002E5A  EF31  F017         	goto	u6040
  9861   002E5E                     u6041:
  9862   002E5E  EF59  F017         	goto	l982
  9863   002E62                     u6040:
  9864   002E62  0E01               	movlw	1
  9865   002E64  6E07               	movwf	___lwdiv@counter^0,c
  9866   002E66  EF39  F017         	goto	l5559
  9867   002E6A                     l5557:
  9868   002E6A  90D8               	bcf	status,0,c
  9869   002E6C  3605               	rlcf	___lwdiv@divisor^0,f,c
  9870   002E6E  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9871   002E70  2A07               	incf	___lwdiv@counter^0,f,c
  9872   002E72                     l5559:
  9873   002E72  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  9874   002E74  EF3E  F017         	goto	u6051
  9875   002E78  EF40  F017         	goto	u6050
  9876   002E7C                     u6051:
  9877   002E7C  EF35  F017         	goto	l5557
  9878   002E80                     u6050:
  9879   002E80                     l5561:
  9880   002E80  90D8               	bcf	status,0,c
  9881   002E82  3608               	rlcf	___lwdiv@quotient^0,f,c
  9882   002E84  3609               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9883   002E86  5005               	movf	___lwdiv@divisor^0,w,c
  9884   002E88  5C03               	subwf	___lwdiv@dividend^0,w,c
  9885   002E8A  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  9886   002E8C  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9887   002E8E  A0D8               	btfss	status,0,c
  9888   002E90  EF4C  F017         	goto	u6061
  9889   002E94  EF4E  F017         	goto	u6060
  9890   002E98                     u6061:
  9891   002E98  EF53  F017         	goto	l5569
  9892   002E9C                     u6060:
  9893   002E9C  5005               	movf	___lwdiv@divisor^0,w,c
  9894   002E9E  5E03               	subwf	___lwdiv@dividend^0,f,c
  9895   002EA0  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  9896   002EA2  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9897   002EA4  8008               	bsf	___lwdiv@quotient^0,0,c
  9898   002EA6                     l5569:
  9899   002EA6  90D8               	bcf	status,0,c
  9900   002EA8  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9901   002EAA  3205               	rrcf	___lwdiv@divisor^0,f,c
  9902   002EAC  2E07               	decfsz	___lwdiv@counter^0,f,c
  9903   002EAE  EF40  F017         	goto	l5561
  9904   002EB2                     l982:
  9905   002EB2  C008  F003         	movff	___lwdiv@quotient,?___lwdiv
  9906   002EB6  C009  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9907   002EBA  0012               	return		;funcret
  9908   002EBC                     __end_of___lwdiv:
  9909                           	callstack 0
  9910                           
  9911 ;; *************** function _read_prec_or_width *****************
  9912 ;; Defined at:
  9913 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  fmt             1    2[COMRAM] PTR PTR const unsigned c
  9916 ;;		 -> vfprintf@cfmt(2), 
  9917 ;;  ap              1    3[COMRAM] PTR PTR void [1]
  9918 ;;		 -> sprintf@ap(1), 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;  c               1    6[COMRAM] unsigned char 
  9921 ;;  n               2    7[COMRAM] int 
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  2    2[COMRAM] int 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9932 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9934 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;Total ram usage:        7 bytes
  9936 ;; Hardware stack levels used: 1
  9937 ;; Hardware stack levels required when called: 1
  9938 ;; This function calls:
  9939 ;;		Nothing
  9940 ;; This function is called by:
  9941 ;;		_vfpfcnvrt
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text43
  9946   002908                     __ptext43:
  9947                           	callstack 0
  9948   002908                     _read_prec_or_width:
  9949                           	callstack 23
  9950   002908                     
  9951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  9952   002908  0E00               	movlw	0
  9953   00290A  6E09               	movwf	(read_prec_or_width@n+1)^0,c
  9954   00290C  0E00               	movlw	0
  9955   00290E  6E08               	movwf	read_prec_or_width@n^0,c
  9956   002910                     
  9957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  9958   002910  5003               	movf	read_prec_or_width@fmt^0,w,c
  9959   002912  6ED9               	movwf	fsr2l,c
  9960   002914  6ADA               	clrf	fsr2h,c
  9961   002916  CFDE FFF6          	movff	postinc2,tblptrl
  9962   00291A  CFDD FFF7          	movff	postdec2,tblptrh
  9963   00291E                     	if	0	;tblptru may be non-zero
  9964   00291E                     	endif
  9965   00291E                     	if	0	;tblptru may be non-zero
  9966   00291E                     	endif
  9967   00291E  0008               	tblrd		*
  9968   002920  50F5               	movf	tablat,w,c
  9969   002922  0A2A               	xorlw	42
  9970   002924  A4D8               	btfss	status,2,c
  9971   002926  EF97  F014         	goto	u6551
  9972   00292A  EF99  F014         	goto	u6550
  9973   00292E                     u6551:
  9974   00292E  EFC2  F014         	goto	l5803
  9975   002932                     u6550:
  9976   002932                     
  9977                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  9978   002932  5003               	movf	read_prec_or_width@fmt^0,w,c
  9979   002934  6ED9               	movwf	fsr2l,c
  9980   002936  6ADA               	clrf	fsr2h,c
  9981   002938  2ADE               	incf	postinc2,f,c
  9982   00293A  0E00               	movlw	0
  9983   00293C  22DD               	addwfc	postdec2,f,c
  9984   00293E                     
  9985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  9986   00293E  5004               	movf	read_prec_or_width@ap^0,w,c
  9987   002940  6ED9               	movwf	fsr2l,c
  9988   002942  6ADA               	clrf	fsr2h,c
  9989   002944  0E02               	movlw	2
  9990   002946  26DF               	addwf	indf2,f,c
  9991   002948  5CDF               	subwf	indf2,w,c
  9992   00294A  6ED9               	movwf	fsr2l,c
  9993   00294C  6ADA               	clrf	fsr2h,c
  9994   00294E  CFDE F008          	movff	postinc2,read_prec_or_width@n
  9995   002952  CFDE F009          	movff	postinc2,read_prec_or_width@n+1
  9996                           
  9997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  9998   002956  EFD5  F014         	goto	l1243
  9999   00295A                     l5799:
 10000                           
 10001                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 10002   00295A  0E0A               	movlw	10
 10003   00295C  0208               	mulwf	read_prec_or_width@n^0,c
 10004   00295E  CFF3 F005          	movff	prodl,??_read_prec_or_width
 10005   002962  CFF4 F006          	movff	prodh,??_read_prec_or_width+1
 10006   002966  0209               	mulwf	(read_prec_or_width@n+1)^0,c
 10007   002968  50F3               	movf	prodl,w,c
 10008   00296A  2606               	addwf	(??_read_prec_or_width+1)^0,f,c
 10009   00296C  5007               	movf	read_prec_or_width@c^0,w,c
 10010   00296E  2405               	addwf	??_read_prec_or_width^0,w,c
 10011   002970  6E08               	movwf	read_prec_or_width@n^0,c
 10012   002972  0E00               	movlw	0
 10013   002974  2006               	addwfc	(??_read_prec_or_width+1)^0,w,c
 10014   002976  6E09               	movwf	(read_prec_or_width@n+1)^0,c
 10015   002978                     
 10016                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 10017   002978  5003               	movf	read_prec_or_width@fmt^0,w,c
 10018   00297A  6ED9               	movwf	fsr2l,c
 10019   00297C  6ADA               	clrf	fsr2h,c
 10020   00297E  2ADE               	incf	postinc2,f,c
 10021   002980  0E00               	movlw	0
 10022   002982  22DD               	addwfc	postdec2,f,c
 10023   002984                     l5803:
 10024                           
 10025                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 10026   002984  5003               	movf	read_prec_or_width@fmt^0,w,c
 10027   002986  6ED9               	movwf	fsr2l,c
 10028   002988  6ADA               	clrf	fsr2h,c
 10029   00298A  CFDE FFF6          	movff	postinc2,tblptrl
 10030   00298E  CFDD FFF7          	movff	postdec2,tblptrh
 10031   002992                     	if	0	;tblptru may be non-zero
 10032   002992                     	endif
 10033   002992                     	if	0	;tblptru may be non-zero
 10034   002992                     	endif
 10035   002992  0008               	tblrd		*
 10036   002994  50F5               	movf	tablat,w,c
 10037   002996  0FD0               	addlw	208
 10038   002998  6E07               	movwf	read_prec_or_width@c^0,c
 10039   00299A  0E09               	movlw	9
 10040   00299C  6407               	cpfsgt	read_prec_or_width@c^0,c
 10041   00299E  EFD3  F014         	goto	u6561
 10042   0029A2  EFD5  F014         	goto	u6560
 10043   0029A6                     u6561:
 10044   0029A6  EFAD  F014         	goto	l5799
 10045   0029AA                     u6560:
 10046   0029AA                     l1243:
 10047                           
 10048                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 10049   0029AA  C008  F003         	movff	read_prec_or_width@n,?_read_prec_or_width
 10050   0029AE  C009  F004         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 10051   0029B2  0012               	return		;funcret
 10052   0029B4                     __end_of_read_prec_or_width:
 10053                           	callstack 0
 10054                           
 10055 ;; *************** function _ctoa *****************
 10056 ;; Defined at:
 10057 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 10060 ;;		 -> sprintf@f(11), 
 10061 ;;  c               1   11[COMRAM] unsigned char 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  w               2   15[COMRAM] int 
 10064 ;;  l               2   13[COMRAM] int 
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  1    wreg      void 
 10067 ;; Registers used:
 10068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10078 ;;Total ram usage:        7 bytes
 10079 ;; Hardware stack levels used: 1
 10080 ;; Hardware stack levels required when called: 3
 10081 ;; This function calls:
 10082 ;;		_fputc
 10083 ;; This function is called by:
 10084 ;;		_vfpfcnvrt
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088                           	psect	text44
 10089   00278E                     __ptext44:
 10090                           	callstack 0
 10091   00278E                     _ctoa:
 10092                           	callstack 21
 10093   00278E                     
 10094                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 476: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 477: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 478:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 481:  
      +                             w = width ? width - 1 : width;
 10095   00278E  0100               	movlb	0	; () banked
 10096   002790  51C4               	movf	_width& (0+255),w,b
 10097   002792  11C5               	iorwf	(_width+1)& (0+255),w,b
 10098   002794  A4D8               	btfss	status,2,c
 10099   002796  EFCF  F013         	goto	u6381
 10100   00279A  EFD1  F013         	goto	u6380
 10101   00279E                     u6381:
 10102   00279E  EFD7  F013         	goto	l5703
 10103   0027A2                     u6380:
 10104   0027A2                     
 10105                           ; BSR set to: 0
 10106   0027A2  C0C4  F010         	movff	_width,ctoa@w
 10107   0027A6  C0C5  F011         	movff	_width+1,ctoa@w+1
 10108   0027AA  EFDD  F013         	goto	l5705
 10109   0027AE                     l5703:
 10110                           
 10111                           ; BSR set to: 0
 10112   0027AE  0EFF               	movlw	255
 10113   0027B0  25C4               	addwf	_width& (0+255),w,b
 10114   0027B2  6E10               	movwf	ctoa@w^0,c
 10115   0027B4  0EFF               	movlw	255
 10116   0027B6  21C5               	addwfc	(_width+1)& (0+255),w,b
 10117   0027B8  6E11               	movwf	(ctoa@w+1)^0,c
 10118   0027BA                     l5705:
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
 10122   0027BA  A1D4               	btfss	_flags& (0+255),0,b
 10123   0027BC  EFE2  F013         	goto	u6391
 10124   0027C0  EFE4  F013         	goto	u6390
 10125   0027C4                     u6391:
 10126   0027C4  EFEB  F013         	goto	l5709
 10127   0027C8                     u6390:
 10128   0027C8                     
 10129                           ; BSR set to: 0
 10130                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
 10131   0027C8  C00C  F003         	movff	ctoa@c,fputc@c
 10132   0027CC  6A04               	clrf	(fputc@c+1)^0,c
 10133   0027CE  C00B  F005         	movff	ctoa@fp,fputc@fp
 10134   0027D2  EC27  F014         	call	_fputc	;wreg free
 10135   0027D6                     l5709:
 10136                           
 10137                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
 10138   0027D6  BE11               	btfsc	(ctoa@w+1)^0,7,c
 10139   0027D8  EFF0  F013         	goto	u6401
 10140   0027DC  EFF2  F013         	goto	u6400
 10141   0027E0                     u6401:
 10142   0027E0  EFF4  F013         	goto	l5713
 10143   0027E4                     u6400:
 10144   0027E4  EFF8  F013         	goto	l1212
 10145   0027E8                     l5713:
 10146   0027E8  0E00               	movlw	0
 10147   0027EA  6E11               	movwf	(ctoa@w+1)^0,c
 10148   0027EC  0E00               	movlw	0
 10149   0027EE  6E10               	movwf	ctoa@w^0,c
 10150   0027F0                     l1212:
 10151                           
 10152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 492:     l = 0;
 10153   0027F0  0E00               	movlw	0
 10154   0027F2  6E0F               	movwf	(ctoa@l+1)^0,c
 10155   0027F4  0E00               	movlw	0
 10156   0027F6  6E0E               	movwf	ctoa@l^0,c
 10157                           
 10158                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 10159   0027F8  EF08  F014         	goto	l5719
 10160   0027FC                     l5715:
 10161                           
 10162                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
 10163   0027FC  0E00               	movlw	0
 10164   0027FE  6E04               	movwf	(fputc@c+1)^0,c
 10165   002800  0E20               	movlw	32
 10166   002802  6E03               	movwf	fputc@c^0,c
 10167   002804  C00B  F005         	movff	ctoa@fp,fputc@fp
 10168   002808  EC27  F014         	call	_fputc	;wreg free
 10169   00280C                     
 10170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 495:         ++l;
 10171   00280C  4A0E               	infsnz	ctoa@l^0,f,c
 10172   00280E  2A0F               	incf	(ctoa@l+1)^0,f,c
 10173   002810                     l5719:
 10174                           
 10175                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 10176   002810  5010               	movf	ctoa@w^0,w,c
 10177   002812  5C0E               	subwf	ctoa@l^0,w,c
 10178   002814  500F               	movf	(ctoa@l+1)^0,w,c
 10179   002816  0A80               	xorlw	128
 10180   002818  6E0D               	movwf	??_ctoa^0,c
 10181   00281A  5011               	movf	(ctoa@w+1)^0,w,c
 10182   00281C  0A80               	xorlw	128
 10183   00281E  580D               	subwfb	??_ctoa^0,w,c
 10184   002820  A0D8               	btfss	status,0,c
 10185   002822  EF15  F014         	goto	u6411
 10186   002826  EF17  F014         	goto	u6410
 10187   00282A                     u6411:
 10188   00282A  EFFE  F013         	goto	l5715
 10189   00282E                     u6410:
 10190   00282E                     
 10191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
 10192   00282E  0100               	movlb	0	; () banked
 10193   002830  B1D4               	btfsc	_flags& (0+255),0,b
 10194   002832  EF1D  F014         	goto	u6421
 10195   002836  EF1F  F014         	goto	u6420
 10196   00283A                     u6421:
 10197   00283A  EF26  F014         	goto	l1217
 10198   00283E                     u6420:
 10199   00283E                     
 10200                           ; BSR set to: 0
 10201                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
 10202   00283E  C00C  F003         	movff	ctoa@c,fputc@c
 10203   002842  6A04               	clrf	(fputc@c+1)^0,c
 10204   002844  C00B  F005         	movff	ctoa@fp,fputc@fp
 10205   002848  EC27  F014         	call	_fputc	;wreg free
 10206   00284C                     l1217:
 10207   00284C  0012               	return		;funcret
 10208   00284E                     __end_of_ctoa:
 10209                           	callstack 0
 10210                           
 10211 ;; *************** function _fputc *****************
 10212 ;; Defined at:
 10213 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;  c               2    2[COMRAM] int 
 10216 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
 10217 ;;		 -> sprintf@f(11), 
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;		None
 10220 ;; Return value:  Size  Location     Type
 10221 ;;                  2    2[COMRAM] int 
 10222 ;; Registers used:
 10223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/0
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10229 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10231 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10233 ;;Total ram usage:        8 bytes
 10234 ;; Hardware stack levels used: 1
 10235 ;; Hardware stack levels required when called: 2
 10236 ;; This function calls:
 10237 ;;		_putch
 10238 ;; This function is called by:
 10239 ;;		_pad
 10240 ;;		_ctoa
 10241 ;;		_vfpfcnvrt
 10242 ;;		_fputs
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text45
 10247   00284E                     __ptext45:
 10248                           	callstack 0
 10249   00284E                     _fputc:
 10250                           	callstack 19
 10251   00284E  5005               	movf	fputc@fp^0,w,c
 10252   002850  B4D8               	btfsc	status,2,c
 10253   002852  EF2D  F014         	goto	u5541
 10254   002856  EF2F  F014         	goto	u5540
 10255   00285A                     u5541:
 10256   00285A  EF37  F014         	goto	l5355
 10257   00285E                     u5540:
 10258   00285E  5005               	movf	fputc@fp^0,w,c
 10259   002860  A4D8               	btfss	status,2,c
 10260   002862  EF35  F014         	goto	u5551
 10261   002866  EF37  F014         	goto	u5550
 10262   00286A                     u5551:
 10263   00286A  EF3C  F014         	goto	l5357
 10264   00286E                     u5550:
 10265   00286E                     l5355:
 10266   00286E  5003               	movf	fputc@c^0,w,c
 10267   002870  EC56  F01A         	call	_putch
 10268   002874  EF83  F014         	goto	l1285
 10269   002878                     l5357:
 10270   002878  5005               	movf	fputc@fp^0,w,c
 10271   00287A  6ED9               	movwf	fsr2l,c
 10272   00287C  6ADA               	clrf	fsr2h,c
 10273   00287E  0E09               	movlw	9
 10274   002880  26D9               	addwf	fsr2l,f,c
 10275   002882  50DE               	movf	postinc2,w,c
 10276   002884  10DE               	iorwf	postinc2,w,c
 10277   002886  B4D8               	btfsc	status,2,c
 10278   002888  EF48  F014         	goto	u5561
 10279   00288C  EF4A  F014         	goto	u5560
 10280   002890                     u5561:
 10281   002890  EF63  F014         	goto	l5361
 10282   002894                     u5560:
 10283   002894  5005               	movf	fputc@fp^0,w,c
 10284   002896  6ED9               	movwf	fsr2l,c
 10285   002898  6ADA               	clrf	fsr2h,c
 10286   00289A  0E09               	movlw	9
 10287   00289C  26D9               	addwf	fsr2l,f,c
 10288   00289E  5005               	movf	fputc@fp^0,w,c
 10289   0028A0  6EE1               	movwf	fsr1l,c
 10290   0028A2  6AE2               	clrf	fsr1h,c
 10291   0028A4  0E02               	movlw	2
 10292   0028A6  26E1               	addwf	fsr1l,f,c
 10293   0028A8  50DE               	movf	postinc2,w,c
 10294   0028AA  5CE6               	subwf	postinc1,w,c
 10295   0028AC  50E6               	movf	postinc1,w,c
 10296   0028AE  0A80               	xorlw	128
 10297   0028B0  6E0A               	movwf	(??_fputc+4)^0,c
 10298   0028B2  50DE               	movf	postinc2,w,c
 10299   0028B4  0A80               	xorlw	128
 10300   0028B6  580A               	subwfb	(??_fputc+4)^0,w,c
 10301   0028B8  B0D8               	btfsc	status,0,c
 10302   0028BA  EF61  F014         	goto	u5571
 10303   0028BE  EF63  F014         	goto	u5570
 10304   0028C2                     u5571:
 10305   0028C2  EF83  F014         	goto	l1285
 10306   0028C6                     u5570:
 10307   0028C6                     l5361:
 10308   0028C6  5005               	movf	fputc@fp^0,w,c
 10309   0028C8  6ED9               	movwf	fsr2l,c
 10310   0028CA  6ADA               	clrf	fsr2h,c
 10311   0028CC  0E02               	movlw	2
 10312   0028CE  26D9               	addwf	fsr2l,f,c
 10313   0028D0  CFDE F006          	movff	postinc2,??_fputc
 10314   0028D4  CFDD F007          	movff	postdec2,??_fputc+1
 10315   0028D8  5005               	movf	fputc@fp^0,w,c
 10316   0028DA  6ED9               	movwf	fsr2l,c
 10317   0028DC  6ADA               	clrf	fsr2h,c
 10318   0028DE  CFDE F008          	movff	postinc2,??_fputc+2
 10319   0028E2  CFDD F009          	movff	postdec2,??_fputc+3
 10320   0028E6  5006               	movf	??_fputc^0,w,c
 10321   0028E8  2408               	addwf	(??_fputc+2)^0,w,c
 10322   0028EA  6ED9               	movwf	fsr2l,c
 10323   0028EC  5007               	movf	(??_fputc+1)^0,w,c
 10324   0028EE  2009               	addwfc	(??_fputc+3)^0,w,c
 10325   0028F0  6EDA               	movwf	fsr2h,c
 10326   0028F2  C003  FFDF         	movff	fputc@c,indf2
 10327   0028F6  5005               	movf	fputc@fp^0,w,c
 10328   0028F8  6ED9               	movwf	fsr2l,c
 10329   0028FA  6ADA               	clrf	fsr2h,c
 10330   0028FC  0E02               	movlw	2
 10331   0028FE  26D9               	addwf	fsr2l,f,c
 10332   002900  2ADE               	incf	postinc2,f,c
 10333   002902  0E00               	movlw	0
 10334   002904  22DD               	addwfc	postdec2,f,c
 10335   002906                     l1285:
 10336   002906  0012               	return		;funcret
 10337   002908                     __end_of_fputc:
 10338                           	callstack 0
 10339                           
 10340 ;; *************** function _putch *****************
 10341 ;; Defined at:
 10342 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  c               1    wreg     unsigned char 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;  c               1    0[COMRAM] unsigned char 
 10347 ;; Return value:  Size  Location     Type
 10348 ;;                  1    wreg      void 
 10349 ;; Registers used:
 10350 ;;		wreg
 10351 ;; Tracked objects:
 10352 ;;		On entry : 0/0
 10353 ;;		On exit  : 0/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;Total ram usage:        0 bytes
 10361 ;; Hardware stack levels used: 1
 10362 ;; Hardware stack levels required when called: 1
 10363 ;; This function calls:
 10364 ;;		Nothing
 10365 ;; This function is called by:
 10366 ;;		_fputc
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           	psect	text46
 10371   0034AC                     __ptext46:
 10372                           	callstack 0
 10373   0034AC                     _putch:
 10374                           	callstack 19
 10375   0034AC  0012               	return		;funcret
 10376   0034AE                     __end_of_putch:
 10377                           	callstack 0
 10378                           
 10379 ;; *************** function _clear_diagnostic_codes *****************
 10380 ;; Defined at:
 10381 ;;		line 730 in file "OBCII_PIC18F46K22.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;		None
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;  opt_sel         2   12[COMRAM] int 
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      void 
 10388 ;; Registers used:
 10389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10398 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10399 ;;Total ram usage:        4 bytes
 10400 ;; Hardware stack levels used: 1
 10401 ;; Hardware stack levels required when called: 5
 10402 ;; This function calls:
 10403 ;;		_LCD_clear
 10404 ;;		_LCD_configure_cursor_blink
 10405 ;;		_LCD_cursor_set
 10406 ;;		_LCD_write_string
 10407 ;;		_UART1_SendString
 10408 ;;		_clear_parsing_notif
 10409 ;;		_display_mm
 10410 ;;		_parsing_notif
 10411 ;;		_readADC
 10412 ;; This function is called by:
 10413 ;;		_main_menu
 10414 ;; This function uses a non-reentrant model
 10415 ;;
 10416                           
 10417                           	psect	text47
 10418   001456                     __ptext47:
 10419                           	callstack 0
 10420   001456                     _clear_diagnostic_codes:
 10421                           	callstack 24
 10422   001456                     
 10423                           ;OBCII_PIC18F46K22.c: 732:     int opt_sel = 0;
 10424   001456  0E00               	movlw	0
 10425   001458  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
 10426   00145A  0E00               	movlw	0
 10427   00145C  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
 10428   00145E                     
 10429                           ;OBCII_PIC18F46K22.c: 733:     LCD_clear();
 10430   00145E  ECF3  F019         	call	_LCD_clear	;wreg free
 10431   001462                     
 10432                           ;OBCII_PIC18F46K22.c: 734:     LCD_cursor_set(1,1);
 10433   001462  0E01               	movlw	1
 10434   001464  6E06               	movwf	LCD_cursor_set@column^0,c
 10435   001466  0E01               	movlw	1
 10436   001468  EC2D  F018         	call	_LCD_cursor_set
 10437   00146C                     
 10438                           ;OBCII_PIC18F46K22.c: 735:     LCD_write_string("Clear Code(s)?");
 10439   00146C  0E32               	movlw	low STR_47
 10440   00146E  6E06               	movwf	LCD_write_string@string^0,c
 10441   001470  0EFF               	movlw	high STR_47
 10442   001472  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10443   001474  ECE7  F016         	call	_LCD_write_string	;wreg free
 10444   001478                     
 10445                           ;OBCII_PIC18F46K22.c: 736:     LCD_cursor_set(2,1);
 10446   001478  0E01               	movlw	1
 10447   00147A  6E06               	movwf	LCD_cursor_set@column^0,c
 10448   00147C  0E02               	movlw	2
 10449   00147E  EC2D  F018         	call	_LCD_cursor_set
 10450   001482                     
 10451                           ;OBCII_PIC18F46K22.c: 737:     LCD_write_string("Y/N <<<<<<<<<<<<");
 10452   001482  0EAF               	movlw	low STR_48
 10453   001484  6E06               	movwf	LCD_write_string@string^0,c
 10454   001486  0EFE               	movlw	high STR_48
 10455   001488  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10456   00148A  ECE7  F016         	call	_LCD_write_string	;wreg free
 10457   00148E                     
 10458                           ;OBCII_PIC18F46K22.c: 738:     LCD_configure_cursor_blink(1);
 10459   00148E  0E01               	movlw	1
 10460   001490  ECE0  F019         	call	_LCD_configure_cursor_blink
 10461   001494                     l6607:
 10462                           
 10463                           ;OBCII_PIC18F46K22.c: 741:         result = readADC();
 10464   001494  EC98  F019         	call	_readADC	;wreg free
 10465   001498  C003  F05B         	movff	?_readADC,_result
 10466   00149C  C004  F05C         	movff	?_readADC+1,_result+1
 10467   0014A0                     
 10468                           ;OBCII_PIC18F46K22.c: 742:         if(result >= 0 && result <= 511){
 10469   0014A0  0E02               	movlw	2
 10470   0014A2  5C5C               	subwf	(_result+1)^0,w,c
 10471   0014A4  B0D8               	btfsc	status,0,c
 10472   0014A6  EF57  F00A         	goto	u7601
 10473   0014AA  EF59  F00A         	goto	u7600
 10474   0014AE                     u7601:
 10475   0014AE  EF62  F00A         	goto	l6615
 10476   0014B2                     u7600:
 10477   0014B2                     
 10478                           ;OBCII_PIC18F46K22.c: 743:             opt_sel = 0;
 10479   0014B2  0E00               	movlw	0
 10480   0014B4  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
 10481   0014B6  0E00               	movlw	0
 10482   0014B8  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
 10483   0014BA                     
 10484                           ;OBCII_PIC18F46K22.c: 744:             LCD_cursor_set(2,1);
 10485   0014BA  0E01               	movlw	1
 10486   0014BC  6E06               	movwf	LCD_cursor_set@column^0,c
 10487   0014BE  0E02               	movlw	2
 10488   0014C0  EC2D  F018         	call	_LCD_cursor_set
 10489   0014C4                     l6615:
 10490                           
 10491                           ;OBCII_PIC18F46K22.c: 747:         if(result >= 512 && result <=1023){
 10492   0014C4  0E02               	movlw	2
 10493   0014C6  5C5C               	subwf	(_result+1)^0,w,c
 10494   0014C8  A0D8               	btfss	status,0,c
 10495   0014CA  EF69  F00A         	goto	u7611
 10496   0014CE  EF6B  F00A         	goto	u7610
 10497   0014D2                     u7611:
 10498   0014D2  EF7D  F00A         	goto	l6623
 10499   0014D6                     u7610:
 10500   0014D6  0E04               	movlw	4
 10501   0014D8  5C5C               	subwf	(_result+1)^0,w,c
 10502   0014DA  B0D8               	btfsc	status,0,c
 10503   0014DC  EF72  F00A         	goto	u7621
 10504   0014E0  EF74  F00A         	goto	u7620
 10505   0014E4                     u7621:
 10506   0014E4  EF7D  F00A         	goto	l6623
 10507   0014E8                     u7620:
 10508   0014E8                     
 10509                           ;OBCII_PIC18F46K22.c: 748:             opt_sel = 1;
 10510   0014E8  0E00               	movlw	0
 10511   0014EA  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
 10512   0014EC  0E01               	movlw	1
 10513   0014EE  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
 10514   0014F0                     
 10515                           ;OBCII_PIC18F46K22.c: 749:             LCD_cursor_set(2,3);
 10516   0014F0  0E03               	movlw	3
 10517   0014F2  6E06               	movwf	LCD_cursor_set@column^0,c
 10518   0014F4  0E02               	movlw	2
 10519   0014F6  EC2D  F018         	call	_LCD_cursor_set
 10520   0014FA                     l6623:
 10521                           
 10522                           ;OBCII_PIC18F46K22.c: 751:             if (PORTCbits.RC5 == 0) {
 10523   0014FA  BA82               	btfsc	130,5,c	;volatile
 10524   0014FC  EF82  F00A         	goto	u7631
 10525   001500  EF84  F00A         	goto	u7630
 10526   001504                     u7631:
 10527   001504  EF9C  F00A         	goto	l356
 10528   001508                     u7630:
 10529   001508                     
 10530                           ;OBCII_PIC18F46K22.c: 752:                 _delay((unsigned long)((20)*(16000000/4000.0)
      +                          ));
 10531   001508  0E68               	movlw	104
 10532   00150A  6E0B               	movwf	??_clear_diagnostic_codes^0,c
 10533   00150C  0EE4               	movlw	228
 10534   00150E                     u8127:
 10535   00150E  2EE8               	decfsz	wreg,f,c
 10536   001510  D7FE               	bra	u8127
 10537   001512  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
 10538   001514  D7FC               	bra	u8127
 10539   001516  D000               	nop2	
 10540   001518                     
 10541                           ;OBCII_PIC18F46K22.c: 753:                 if (PORTCbits.RC5 == 0) {
 10542   001518  BA82               	btfsc	130,5,c	;volatile
 10543   00151A  EF91  F00A         	goto	u7641
 10544   00151E  EF93  F00A         	goto	u7640
 10545   001522                     u7641:
 10546   001522  EF9C  F00A         	goto	l356
 10547   001526                     u7640:
 10548   001526                     
 10549                           ;OBCII_PIC18F46K22.c: 754:                     LCD_clear();
 10550   001526  ECF3  F019         	call	_LCD_clear	;wreg free
 10551   00152A                     
 10552                           ;OBCII_PIC18F46K22.c: 755:                     display_mm();
 10553   00152A  ECB3  F019         	call	_display_mm	;wreg free
 10554   00152E                     
 10555                           ;OBCII_PIC18F46K22.c: 756:                     menu_sel = -1;
 10556   00152E  0100               	movlb	0	; () banked
 10557   001530  69F8               	setf	_menu_sel& (0+255),b
 10558   001532  69F9               	setf	(_menu_sel+1)& (0+255),b
 10559                           
 10560                           ;OBCII_PIC18F46K22.c: 757:                     break;
 10561   001534  EF22  F00B         	goto	l370
 10562   001538                     l356:
 10563                           
 10564                           ;OBCII_PIC18F46K22.c: 761:         if (PORTBbits.RB4 == 0) {
 10565   001538  B881               	btfsc	129,4,c	;volatile
 10566   00153A  EFA1  F00A         	goto	u7651
 10567   00153E  EFA3  F00A         	goto	u7650
 10568   001542                     u7651:
 10569   001542  EF4A  F00A         	goto	l6607
 10570   001546                     u7650:
 10571   001546                     
 10572                           ;OBCII_PIC18F46K22.c: 762:             _delay((unsigned long)((20)*(16000000/4000.0)));
 10573   001546  0E68               	movlw	104
 10574   001548  6E0B               	movwf	??_clear_diagnostic_codes^0,c
 10575   00154A  0EE4               	movlw	228
 10576   00154C                     u8137:
 10577   00154C  2EE8               	decfsz	wreg,f,c
 10578   00154E  D7FE               	bra	u8137
 10579   001550  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
 10580   001552  D7FC               	bra	u8137
 10581   001554  D000               	nop2	
 10582   001556                     
 10583                           ;OBCII_PIC18F46K22.c: 763:             if (PORTBbits.RB4 == 0) {
 10584   001556  B881               	btfsc	129,4,c	;volatile
 10585   001558  EFB0  F00A         	goto	u7661
 10586   00155C  EFB2  F00A         	goto	u7660
 10587   001560                     u7661:
 10588   001560  EF4A  F00A         	goto	l6607
 10589   001564                     u7660:
 10590   001564  EF0C  F00B         	goto	l6673
 10591   001568                     l6641:
 10592                           
 10593                           ;OBCII_PIC18F46K22.c: 767:                     UART1_SendString("04\r");
 10594   001568  0EE4               	movlw	low STR_49
 10595   00156A  6E04               	movwf	UART1_SendString@string^0,c
 10596   00156C  0EFF               	movlw	high STR_49
 10597   00156E  6E05               	movwf	(UART1_SendString@string+1)^0,c
 10598   001570  EC8C  F018         	call	_UART1_SendString	;wreg free
 10599                           
 10600                           ;OBCII_PIC18F46K22.c: 768:                     while(!message_complete){
 10601   001574  EFBE  F00A         	goto	l6645
 10602   001578                     l6643:
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;OBCII_PIC18F46K22.c: 770:                         parsing_notif();
 10606   001578  EC02  F01A         	call	_parsing_notif	;wreg free
 10607   00157C                     l6645:
 10608                           
 10609                           ;OBCII_PIC18F46K22.c: 768:                     while(!message_complete){
 10610   00157C  0100               	movlb	0	; () banked
 10611   00157E  51D5               	movf	_message_complete& (0+255),w,b	;volatile
 10612   001580  B4D8               	btfsc	status,2,c
 10613   001582  EFC5  F00A         	goto	u7671
 10614   001586  EFC7  F00A         	goto	u7670
 10615   00158A                     u7671:
 10616   00158A  EFBC  F00A         	goto	l6643
 10617   00158E                     u7670:
 10618   00158E                     
 10619                           ; BSR set to: 0
 10620                           ;OBCII_PIC18F46K22.c: 772:                     clear_parsing_notif();
 10621   00158E  EC0E  F01A         	call	_clear_parsing_notif	;wreg free
 10622   001592                     
 10623                           ;OBCII_PIC18F46K22.c: 774:                     LCD_clear();
 10624   001592  ECF3  F019         	call	_LCD_clear	;wreg free
 10625   001596                     
 10626                           ;OBCII_PIC18F46K22.c: 775:                     LCD_cursor_set(1,1);
 10627   001596  0E01               	movlw	1
 10628   001598  6E06               	movwf	LCD_cursor_set@column^0,c
 10629   00159A  0E01               	movlw	1
 10630   00159C  EC2D  F018         	call	_LCD_cursor_set
 10631                           
 10632                           ;OBCII_PIC18F46K22.c: 776:                     LCD_write_string("Codes Cleared");
 10633   0015A0  0E5D               	movlw	low STR_50
 10634   0015A2  6E06               	movwf	LCD_write_string@string^0,c
 10635   0015A4  0EFF               	movlw	high STR_50
 10636   0015A6  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10637   0015A8  ECE7  F016         	call	_LCD_write_string	;wreg free
 10638   0015AC                     
 10639                           ;OBCII_PIC18F46K22.c: 777:                     LCD_cursor_set(2,1);
 10640   0015AC  0E01               	movlw	1
 10641   0015AE  6E06               	movwf	LCD_cursor_set@column^0,c
 10642   0015B0  0E02               	movlw	2
 10643   0015B2  EC2D  F018         	call	_LCD_cursor_set
 10644   0015B6                     
 10645                           ;OBCII_PIC18F46K22.c: 778:                     LCD_write_string("To Menu...");
 10646   0015B6  0E84               	movlw	low STR_51
 10647   0015B8  6E06               	movwf	LCD_write_string@string^0,c
 10648   0015BA  0EFF               	movlw	high STR_51
 10649   0015BC  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10650   0015BE  ECE7  F016         	call	_LCD_write_string	;wreg free
 10651   0015C2                     l6657:
 10652                           
 10653                           ;OBCII_PIC18F46K22.c: 780:                     menu_sel = -1;
 10654   0015C2  0100               	movlb	0	; () banked
 10655   0015C4  69F8               	setf	_menu_sel& (0+255),b
 10656   0015C6  69F9               	setf	(_menu_sel+1)& (0+255),b
 10657   0015C8                     
 10658                           ; BSR set to: 0
 10659                           ;OBCII_PIC18F46K22.c: 781:                     _delay((unsigned long)((2000)*(16000000/4
      +                          000.0)));
 10660   0015C8  0E29               	movlw	41
 10661   0015CA  6E0C               	movwf	(??_clear_diagnostic_codes+1)^0,c
 10662   0015CC  0E96               	movlw	150
 10663   0015CE  6E0B               	movwf	??_clear_diagnostic_codes^0,c
 10664   0015D0  0E7F               	movlw	127
 10665   0015D2                     u8147:
 10666   0015D2  2EE8               	decfsz	wreg,f,c
 10667   0015D4  D7FE               	bra	u8147
 10668   0015D6  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
 10669   0015D8  D7FC               	bra	u8147
 10670   0015DA  2E0C               	decfsz	(??_clear_diagnostic_codes+1)^0,f,c
 10671   0015DC  D7FA               	bra	u8147
 10672   0015DE  0000               	nop	
 10673                           
 10674                           ;OBCII_PIC18F46K22.c: 783:                         break;
 10675   0015E0  EF22  F00B         	goto	l370
 10676   0015E4                     l6661:
 10677                           
 10678                           ;OBCII_PIC18F46K22.c: 787:                     LCD_clear();
 10679   0015E4  ECF3  F019         	call	_LCD_clear	;wreg free
 10680                           
 10681                           ;OBCII_PIC18F46K22.c: 788:                     LCD_cursor_set(1,1);
 10682   0015E8  0E01               	movlw	1
 10683   0015EA  6E06               	movwf	LCD_cursor_set@column^0,c
 10684   0015EC  0E01               	movlw	1
 10685   0015EE  EC2D  F018         	call	_LCD_cursor_set
 10686   0015F2                     
 10687                           ;OBCII_PIC18F46K22.c: 789:                     LCD_write_string("Nothing Cleared");
 10688   0015F2  0E03               	movlw	low STR_52
 10689   0015F4  6E06               	movwf	LCD_write_string@string^0,c
 10690   0015F6  0EFF               	movlw	high STR_52
 10691   0015F8  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10692   0015FA  ECE7  F016         	call	_LCD_write_string	;wreg free
 10693   0015FE                     
 10694                           ;OBCII_PIC18F46K22.c: 790:                     LCD_cursor_set(2,1);
 10695   0015FE  0E01               	movlw	1
 10696   001600  6E06               	movwf	LCD_cursor_set@column^0,c
 10697   001602  0E02               	movlw	2
 10698   001604  EC2D  F018         	call	_LCD_cursor_set
 10699                           
 10700                           ;OBCII_PIC18F46K22.c: 791:                     LCD_write_string("To Menu...");
 10701   001608  0E84               	movlw	low STR_51
 10702   00160A  6E06               	movwf	LCD_write_string@string^0,c
 10703   00160C  0EFF               	movlw	high STR_51
 10704   00160E  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10705   001610  ECE7  F016         	call	_LCD_write_string	;wreg free
 10706   001614  EFE1  F00A         	goto	l6657
 10707   001618                     l6673:
 10708   001618  C00D  F00B         	movff	clear_diagnostic_codes@opt_sel,??_clear_diagnostic_codes
 10709   00161C  C00E  F00C         	movff	clear_diagnostic_codes@opt_sel+1,??_clear_diagnostic_codes+1
 10710                           
 10711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10712                           ; Switch size 1, requested type "simple"
 10713                           ; Number of cases is 1, Range of values is 0 to 0
 10714                           ; switch strategies available:
 10715                           ; Name         Instructions Cycles
 10716                           ; simple_byte            4     3 (average)
 10717                           ;	Chosen strategy is simple_byte
 10718   001620  500C               	movf	(??_clear_diagnostic_codes+1)^0,w,c
 10719   001622  0A00               	xorlw	0	; case 0
 10720   001624  B4D8               	btfsc	status,2,c
 10721   001626  EF17  F00B         	goto	l7073
 10722   00162A  EF22  F00B         	goto	l370
 10723   00162E                     l7073:
 10724                           
 10725                           ; Switch size 1, requested type "simple"
 10726                           ; Number of cases is 2, Range of values is 0 to 1
 10727                           ; switch strategies available:
 10728                           ; Name         Instructions Cycles
 10729                           ; simple_byte            7     4 (average)
 10730                           ;	Chosen strategy is simple_byte
 10731   00162E  500B               	movf	??_clear_diagnostic_codes^0,w,c
 10732   001630  0A00               	xorlw	0	; case 0
 10733   001632  B4D8               	btfsc	status,2,c
 10734   001634  EFB4  F00A         	goto	l6641
 10735   001638  0A01               	xorlw	1	; case 1
 10736   00163A  B4D8               	btfsc	status,2,c
 10737   00163C  EFF2  F00A         	goto	l6661
 10738   001640  EF22  F00B         	goto	l370
 10739   001644                     l370:
 10740   001644  0012               	return		;funcret
 10741   001646                     __end_of_clear_diagnostic_codes:
 10742                           	callstack 0
 10743                           
 10744 ;; *************** function _readADC *****************
 10745 ;; Defined at:
 10746 ;;		line 290 in file "OBCII_PIC18F46K22.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;		None
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  2    2[COMRAM] unsigned int 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;Total ram usage:        4 bytes
 10765 ;; Hardware stack levels used: 1
 10766 ;; Hardware stack levels required when called: 1
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_main_menu
 10771 ;;		_clear_diagnostic_codes
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text48
 10776   003330                     __ptext48:
 10777                           	callstack 0
 10778   003330                     _readADC:
 10779                           	callstack 28
 10780   003330                     
 10781                           ;OBCII_PIC18F46K22.c: 291:     ADCON0bits.GO = 1;
 10782   003330  82C2               	bsf	194,1,c	;volatile
 10783   003332                     l199:
 10784   003332  B2C2               	btfsc	194,1,c	;volatile
 10785   003334  EF9E  F019         	goto	u4441
 10786   003338  EFA0  F019         	goto	u4440
 10787   00333C                     u4441:
 10788   00333C  EF99  F019         	goto	l199
 10789   003340                     u4440:
 10790   003340                     
 10791                           ;OBCII_PIC18F46K22.c: 293:     _delay((unsigned long)((10)*(16000000/4000.0)));
 10792   003340  0E34               	movlw	52
 10793   003342  6E05               	movwf	??_readADC^0,c
 10794   003344  0EF2               	movlw	242
 10795   003346                     u8157:
 10796   003346  2EE8               	decfsz	wreg,f,c
 10797   003348  D7FE               	bra	u8157
 10798   00334A  2E05               	decfsz	??_readADC^0,f,c
 10799   00334C  D7FC               	bra	u8157
 10800   00334E                     
 10801                           ;OBCII_PIC18F46K22.c: 294:     return ((ADRESH << 8) | ADRESL);
 10802   00334E  50C3               	movf	195,w,c	;volatile
 10803   003350  CFC4 F005          	movff	4036,??_readADC	;volatile
 10804   003354  6A06               	clrf	(??_readADC+1)^0,c
 10805   003356  C005  F006         	movff	??_readADC,??_readADC+1
 10806   00335A  6A05               	clrf	??_readADC^0,c
 10807   00335C  1005               	iorwf	??_readADC^0,w,c
 10808   00335E  6E03               	movwf	?_readADC^0,c
 10809   003360  5006               	movf	(??_readADC+1)^0,w,c
 10810   003362  6E04               	movwf	(?_readADC+1)^0,c
 10811   003364  0012               	return		;funcret
 10812   003366                     __end_of_readADC:
 10813                           	callstack 0
 10814                           
 10815 ;; *************** function _parsing_notif *****************
 10816 ;; Defined at:
 10817 ;;		line 304 in file "OBCII_PIC18F46K22.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;		None
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;		None
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  1    wreg      void 
 10824 ;; Registers used:
 10825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10835 ;;Total ram usage:        0 bytes
 10836 ;; Hardware stack levels used: 1
 10837 ;; Hardware stack levels required when called: 4
 10838 ;; This function calls:
 10839 ;;		_LCD_cursor_set
 10840 ;;		_LCD_write_string
 10841 ;; This function is called by:
 10842 ;;		_print_RPM
 10843 ;;		_print_Vbatt
 10844 ;;		_print_AI_Temp
 10845 ;;		_print_ELMVer
 10846 ;;		_print_SAEVer
 10847 ;;		_diagnostic_trouble_codes
 10848 ;;		_clear_diagnostic_codes
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text49
 10853   003404                     __ptext49:
 10854                           	callstack 0
 10855   003404                     _parsing_notif:
 10856                           	callstack 23
 10857   003404                     
 10858                           ;OBCII_PIC18F46K22.c: 305:     LCD_cursor_set(1,16);
 10859   003404  0E10               	movlw	16
 10860   003406  6E06               	movwf	LCD_cursor_set@column^0,c
 10861   003408  0E01               	movlw	1
 10862   00340A  EC2D  F018         	call	_LCD_cursor_set
 10863   00340E                     
 10864                           ;OBCII_PIC18F46K22.c: 306:     LCD_write_string("~");
 10865   00340E  0EFD               	movlw	low STR_13
 10866   003410  6E06               	movwf	LCD_write_string@string^0,c
 10867   003412  0EFF               	movlw	high STR_13
 10868   003414  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10869   003416  ECE7  F016         	call	_LCD_write_string	;wreg free
 10870   00341A  0012               	return		;funcret
 10871   00341C                     __end_of_parsing_notif:
 10872                           	callstack 0
 10873                           
 10874 ;; *************** function _display_mm *****************
 10875 ;; Defined at:
 10876 ;;		line 297 in file "OBCII_PIC18F46K22.c"
 10877 ;; Parameters:    Size  Location     Type
 10878 ;;		None
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;		None
 10881 ;; Return value:  Size  Location     Type
 10882 ;;                  1    wreg      void 
 10883 ;; Registers used:
 10884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10894 ;;Total ram usage:        0 bytes
 10895 ;; Hardware stack levels used: 1
 10896 ;; Hardware stack levels required when called: 4
 10897 ;; This function calls:
 10898 ;;		_LCD_cursor_set
 10899 ;;		_LCD_write_string
 10900 ;; This function is called by:
 10901 ;;		_main_menu
 10902 ;;		_print_RPM
 10903 ;;		_print_Vbatt
 10904 ;;		_print_AI_Temp
 10905 ;;		_print_ELMVer
 10906 ;;		_print_SAEVer
 10907 ;;		_clear_diagnostic_codes
 10908 ;; This function uses a non-reentrant model
 10909 ;;
 10910                           
 10911                           	psect	text50
 10912   003366                     __ptext50:
 10913                           	callstack 0
 10914   003366                     _display_mm:
 10915                           	callstack 23
 10916   003366                     
 10917                           ;OBCII_PIC18F46K22.c: 298:     LCD_cursor_set(1,1);
 10918   003366  0E01               	movlw	1
 10919   003368  6E06               	movwf	LCD_cursor_set@column^0,c
 10920   00336A  0E01               	movlw	1
 10921   00336C  EC2D  F018         	call	_LCD_cursor_set
 10922   003370                     
 10923                           ;OBCII_PIC18F46K22.c: 299:     LCD_write_string("MENU  <OBDIIPIC>");
 10924   003370  0ED1               	movlw	low STR_11
 10925   003372  6E06               	movwf	LCD_write_string@string^0,c
 10926   003374  0EFE               	movlw	high STR_11
 10927   003376  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10928   003378  ECE7  F016         	call	_LCD_write_string	;wreg free
 10929   00337C                     
 10930                           ;OBCII_PIC18F46K22.c: 300:     LCD_cursor_set(2,1);
 10931   00337C  0E01               	movlw	1
 10932   00337E  6E06               	movwf	LCD_cursor_set@column^0,c
 10933   003380  0E02               	movlw	2
 10934   003382  EC2D  F018         	call	_LCD_cursor_set
 10935                           
 10936                           ;OBCII_PIC18F46K22.c: 301:     LCD_write_string("LRM DTC CDC DSI");
 10937   003386  0EF3               	movlw	low STR_12
 10938   003388  6E06               	movwf	LCD_write_string@string^0,c
 10939   00338A  0EFE               	movlw	high STR_12
 10940   00338C  6E07               	movwf	(LCD_write_string@string+1)^0,c
 10941   00338E  ECE7  F016         	call	_LCD_write_string	;wreg free
 10942   003392  0012               	return		;funcret
 10943   003394                     __end_of_display_mm:
 10944                           	callstack 0
 10945                           
 10946 ;; *************** function _clear_parsing_notif *****************
 10947 ;; Defined at:
 10948 ;;		line 308 in file "OBCII_PIC18F46K22.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;		None
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;		None
 10953 ;; Return value:  Size  Location     Type
 10954 ;;                  1    wreg      void 
 10955 ;; Registers used:
 10956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10957 ;; Tracked objects:
 10958 ;;		On entry : 0/0
 10959 ;;		On exit  : 0/0
 10960 ;;		Unchanged: 0/0
 10961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10966 ;;Total ram usage:        0 bytes
 10967 ;; Hardware stack levels used: 1
 10968 ;; Hardware stack levels required when called: 4
 10969 ;; This function calls:
 10970 ;;		_LCD_cursor_set
 10971 ;;		_LCD_write_string
 10972 ;; This function is called by:
 10973 ;;		_print_RPM
 10974 ;;		_print_Vbatt
 10975 ;;		_print_AI_Temp
 10976 ;;		_print_ELMVer
 10977 ;;		_print_SAEVer
 10978 ;;		_diagnostic_trouble_codes
 10979 ;;		_clear_diagnostic_codes
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           	psect	text51
 10984   00341C                     __ptext51:
 10985                           	callstack 0
 10986   00341C                     _clear_parsing_notif:
 10987                           	callstack 23
 10988   00341C                     
 10989                           ;OBCII_PIC18F46K22.c: 309:     LCD_cursor_set(1,16);
 10990   00341C  0E10               	movlw	16
 10991   00341E  6E06               	movwf	LCD_cursor_set@column^0,c
 10992   003420  0E01               	movlw	1
 10993   003422  EC2D  F018         	call	_LCD_cursor_set
 10994   003426                     
 10995                           ;OBCII_PIC18F46K22.c: 310:     LCD_write_string("^");
 10996   003426  0EFB               	movlw	low STR_14
 10997   003428  6E06               	movwf	LCD_write_string@string^0,c
 10998   00342A  0EFF               	movlw	high STR_14
 10999   00342C  6E07               	movwf	(LCD_write_string@string+1)^0,c
 11000   00342E  ECE7  F016         	call	_LCD_write_string	;wreg free
 11001   003432  0012               	return		;funcret
 11002   003434                     __end_of_clear_parsing_notif:
 11003                           	callstack 0
 11004                           
 11005 ;; *************** function _LCD_write_string *****************
 11006 ;; Defined at:
 11007 ;;		line 362 in file "LCD.c"
 11008 ;; Parameters:    Size  Location     Type
 11009 ;;  string          2    5[COMRAM] PTR unsigned char 
 11010 ;;		 -> STR_53(11), STR_52(16), STR_51(11), STR_50(14), 
 11011 ;;		 -> STR_48(17), STR_47(15), STR_46(14), STR_45(14), 
 11012 ;;		 -> dtc_codes(60), STR_41(11), STR_40(16), STR_38(14), 
 11013 ;;		 -> STR_37(13), STR_36(5), STR_34(4), STR_32(2), 
 11014 ;;		 -> STR_31(4), STR_30(4), air_intake_string(16), STR_25(4), 
 11015 ;;		 -> STR_24(6), STR_23(6), STR_21(4), STR_20(6), 
 11016 ;;		 -> rpm_string(16), STR_14(2), STR_13(2), STR_12(16), 
 11017 ;;		 -> STR_11(17), STR_9(17), STR_8(17), STR_6(17), 
 11018 ;;		 -> STR_3(15), STR_2(17), buffer(256), 
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;  i               1    9[COMRAM] unsigned char 
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  1    wreg      void 
 11023 ;; Registers used:
 11024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11033 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11034 ;;Total ram usage:        5 bytes
 11035 ;; Hardware stack levels used: 1
 11036 ;; Hardware stack levels required when called: 3
 11037 ;; This function calls:
 11038 ;;		_LCD_write_data
 11039 ;; This function is called by:
 11040 ;;		_welcome_splash
 11041 ;;		_display_mm
 11042 ;;		_parsing_notif
 11043 ;;		_clear_parsing_notif
 11044 ;;		_print_RPM
 11045 ;;		_print_Vbatt
 11046 ;;		_print_AI_Temp
 11047 ;;		_print_ELMVer
 11048 ;;		_print_SAEVer
 11049 ;;		_display_system_info
 11050 ;;		_diagnostic_trouble_codes
 11051 ;;		_clear_diagnostic_codes
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text52
 11056   002DCE                     __ptext52:
 11057                           	callstack 0
 11058   002DCE                     _LCD_write_string:
 11059                           	callstack 26
 11060   002DCE                     
 11061                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
 11062   002DCE  6A0A               	clrf	LCD_write_string@i^0,c
 11063   002DD0  EF04  F017         	goto	l6093
 11064   002DD4                     l6089:
 11065                           
 11066                           ;LCD.c: 366:         LCD_write_data(string[i]);
 11067   002DD4  500A               	movf	LCD_write_string@i^0,w,c
 11068   002DD6  2406               	addwf	LCD_write_string@string^0,w,c
 11069   002DD8  6E08               	movwf	??_LCD_write_string^0,c
 11070   002DDA  0E00               	movlw	0
 11071   002DDC  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
 11072   002DDE  6E09               	movwf	(??_LCD_write_string+1)^0,c
 11073   002DE0  C008  FFF6         	movff	??_LCD_write_string,tblptrl
 11074   002DE4  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
 11075   002DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 11076   002DEA  6EF8               	movwf	tblptru,c
 11077   002DEC  0E0F               	movlw	(high __ramtop+-1)
 11078   002DEE  64F7               	cpfsgt	tblptrh,c
 11079   002DF0  D003               	bra	u7047
 11080   002DF2  0008               	tblrd		*
 11081   002DF4  50F5               	movf	tablat,w,c
 11082   002DF6  D005               	bra	u7040
 11083   002DF8                     u7047:
 11084   002DF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 11085   002DFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 11086   002E00  50EF               	movf	indf0,w,c
 11087   002E02                     u7040:
 11088   002E02  EC7B  F00F         	call	_LCD_write_data
 11089   002E06                     
 11090                           ;LCD.c: 367:     }
 11091   002E06  2A0A               	incf	LCD_write_string@i^0,f,c
 11092   002E08                     l6093:
 11093   002E08  500A               	movf	LCD_write_string@i^0,w,c
 11094   002E0A  2406               	addwf	LCD_write_string@string^0,w,c
 11095   002E0C  6E08               	movwf	??_LCD_write_string^0,c
 11096   002E0E  0E00               	movlw	0
 11097   002E10  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
 11098   002E12  6E09               	movwf	(??_LCD_write_string+1)^0,c
 11099   002E14  C008  FFF6         	movff	??_LCD_write_string,tblptrl
 11100   002E18  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
 11101   002E1C  0E00               	movlw	low (__mediumconst shr (0+16))
 11102   002E1E  6EF8               	movwf	tblptru,c
 11103   002E20  0E0F               	movlw	(high __ramtop+-1)
 11104   002E22  64F7               	cpfsgt	tblptrh,c
 11105   002E24  D003               	bra	u7057
 11106   002E26  0008               	tblrd		*
 11107   002E28  50F5               	movf	tablat,w,c
 11108   002E2A  D005               	bra	u7050
 11109   002E2C                     u7057:
 11110   002E2C  CFF6 FFE9          	movff	tblptrl,fsr0l
 11111   002E30  CFF7 FFEA          	movff	tblptrh,fsr0h
 11112   002E34  50EF               	movf	indf0,w,c
 11113   002E36                     u7050:
 11114   002E36  0900               	iorlw	0
 11115   002E38  A4D8               	btfss	status,2,c
 11116   002E3A  EF21  F017         	goto	u7061
 11117   002E3E  EF23  F017         	goto	u7060
 11118   002E42                     u7061:
 11119   002E42  EFEA  F016         	goto	l6089
 11120   002E46                     u7060:
 11121   002E46  0012               	return		;funcret
 11122   002E48                     __end_of_LCD_write_string:
 11123                           	callstack 0
 11124                           
 11125 ;; *************** function _LCD_write_data *****************
 11126 ;; Defined at:
 11127 ;;		line 74 in file "LCD.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;  data            1    wreg     unsigned char 
 11130 ;; Auto vars:     Size  Location     Type
 11131 ;;  data            1    4[COMRAM] unsigned char 
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  1    wreg      void 
 11134 ;; Registers used:
 11135 ;;		wreg, status,2, status,0, cstack
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;Total ram usage:        3 bytes
 11146 ;; Hardware stack levels used: 1
 11147 ;; Hardware stack levels required when called: 2
 11148 ;; This function calls:
 11149 ;;		_LCD_pulse_clock
 11150 ;; This function is called by:
 11151 ;;		_LCD_write_string
 11152 ;;		_LCD_write_variable
 11153 ;;		_LCD_add_character
 11154 ;;		_LCD_write_char
 11155 ;;		_LCD_write_float
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           	psect	text53
 11160   001EF6                     __ptext53:
 11161                           	callstack 0
 11162   001EF6                     _LCD_write_data:
 11163                           	callstack 26
 11164                           
 11165                           ;incstack = 0
 11166                           ;LCD_write_data@data stored from wreg
 11167   001EF6  6E05               	movwf	LCD_write_data@data^0,c
 11168   001EF8                     
 11169                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
 11170   001EF8  848C               	bsf	140,2,c	;volatile
 11171   001EFA                     
 11172                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
 11173   001EFA  6A03               	clrf	??_LCD_write_data^0,c
 11174   001EFC  AE05               	btfss	LCD_write_data@data^0,7,c
 11175   001EFE  D001               	bra	u6815
 11176   001F00  2A03               	incf	??_LCD_write_data^0,f,c
 11177   001F02                     u6815:
 11178   001F02  0E01               	movlw	1
 11179   001F04  1603               	andwf	??_LCD_write_data^0,f,c
 11180   001F06  3203               	rrcf	??_LCD_write_data^0,f,c
 11181   001F08  3203               	rrcf	??_LCD_write_data^0,f,c
 11182   001F0A  508C               	movf	140,w,c	;volatile
 11183   001F0C  1803               	xorwf	??_LCD_write_data^0,w,c
 11184   001F0E  0B7F               	andlw	-129
 11185   001F10  1803               	xorwf	??_LCD_write_data^0,w,c
 11186   001F12  6E8C               	movwf	140,c	;volatile
 11187                           
 11188                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
 11189   001F14  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11190   001F18  0E06               	movlw	6
 11191   001F1A  6E04               	movwf	(??_LCD_write_data+1)^0,c
 11192   001F1C                     u6825:
 11193   001F1C  90D8               	bcf	status,0,c
 11194   001F1E  3203               	rrcf	??_LCD_write_data^0,f,c
 11195   001F20  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
 11196   001F22  EF8E  F00F         	goto	u6825
 11197   001F26  0E01               	movlw	1
 11198   001F28  1603               	andwf	??_LCD_write_data^0,f,c
 11199   001F2A  3A03               	swapf	??_LCD_write_data^0,f,c
 11200   001F2C  4603               	rlncf	??_LCD_write_data^0,f,c
 11201   001F2E  4603               	rlncf	??_LCD_write_data^0,f,c
 11202   001F30  508C               	movf	140,w,c	;volatile
 11203   001F32  1803               	xorwf	??_LCD_write_data^0,w,c
 11204   001F34  0BBF               	andlw	-65
 11205   001F36  1803               	xorwf	??_LCD_write_data^0,w,c
 11206   001F38  6E8C               	movwf	140,c	;volatile
 11207                           
 11208                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
 11209   001F3A  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11210   001F3E  0E05               	movlw	5
 11211   001F40  6E04               	movwf	(??_LCD_write_data+1)^0,c
 11212   001F42                     u6835:
 11213   001F42  90D8               	bcf	status,0,c
 11214   001F44  3203               	rrcf	??_LCD_write_data^0,f,c
 11215   001F46  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
 11216   001F48  EFA1  F00F         	goto	u6835
 11217   001F4C  0E01               	movlw	1
 11218   001F4E  1603               	andwf	??_LCD_write_data^0,f,c
 11219   001F50  3A03               	swapf	??_LCD_write_data^0,f,c
 11220   001F52  4603               	rlncf	??_LCD_write_data^0,f,c
 11221   001F54  508C               	movf	140,w,c	;volatile
 11222   001F56  1803               	xorwf	??_LCD_write_data^0,w,c
 11223   001F58  0BDF               	andlw	-33
 11224   001F5A  1803               	xorwf	??_LCD_write_data^0,w,c
 11225   001F5C  6E8C               	movwf	140,c	;volatile
 11226                           
 11227                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
 11228   001F5E  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11229   001F62  3A03               	swapf	??_LCD_write_data^0,f,c
 11230   001F64  0E0F               	movlw	15
 11231   001F66  1603               	andwf	??_LCD_write_data^0,f,c
 11232   001F68  0E01               	movlw	1
 11233   001F6A  1603               	andwf	??_LCD_write_data^0,f,c
 11234   001F6C  3A03               	swapf	??_LCD_write_data^0,f,c
 11235   001F6E  508C               	movf	140,w,c	;volatile
 11236   001F70  1803               	xorwf	??_LCD_write_data^0,w,c
 11237   001F72  0BEF               	andlw	-17
 11238   001F74  1803               	xorwf	??_LCD_write_data^0,w,c
 11239   001F76  6E8C               	movwf	140,c	;volatile
 11240   001F78                     
 11241                           ;LCD.c: 85:     LCD_pulse_clock();
 11242   001F78  EC45  F01A         	call	_LCD_pulse_clock	;wreg free
 11243   001F7C                     
 11244                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
 11245   001F7C  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11246   001F80  90D8               	bcf	status,0,c
 11247   001F82  3203               	rrcf	??_LCD_write_data^0,f,c
 11248   001F84  90D8               	bcf	status,0,c
 11249   001F86  3203               	rrcf	??_LCD_write_data^0,f,c
 11250   001F88  90D8               	bcf	status,0,c
 11251   001F8A  3203               	rrcf	??_LCD_write_data^0,f,c
 11252   001F8C  0E01               	movlw	1
 11253   001F8E  1603               	andwf	??_LCD_write_data^0,f,c
 11254   001F90  3203               	rrcf	??_LCD_write_data^0,f,c
 11255   001F92  3203               	rrcf	??_LCD_write_data^0,f,c
 11256   001F94  508C               	movf	140,w,c	;volatile
 11257   001F96  1803               	xorwf	??_LCD_write_data^0,w,c
 11258   001F98  0B7F               	andlw	-129
 11259   001F9A  1803               	xorwf	??_LCD_write_data^0,w,c
 11260   001F9C  6E8C               	movwf	140,c	;volatile
 11261   001F9E                     
 11262                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
 11263   001F9E  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11264   001FA2  90D8               	bcf	status,0,c
 11265   001FA4  3203               	rrcf	??_LCD_write_data^0,f,c
 11266   001FA6  90D8               	bcf	status,0,c
 11267   001FA8  3203               	rrcf	??_LCD_write_data^0,f,c
 11268   001FAA  0E01               	movlw	1
 11269   001FAC  1603               	andwf	??_LCD_write_data^0,f,c
 11270   001FAE  3A03               	swapf	??_LCD_write_data^0,f,c
 11271   001FB0  4603               	rlncf	??_LCD_write_data^0,f,c
 11272   001FB2  4603               	rlncf	??_LCD_write_data^0,f,c
 11273   001FB4  508C               	movf	140,w,c	;volatile
 11274   001FB6  1803               	xorwf	??_LCD_write_data^0,w,c
 11275   001FB8  0BBF               	andlw	-65
 11276   001FBA  1803               	xorwf	??_LCD_write_data^0,w,c
 11277   001FBC  6E8C               	movwf	140,c	;volatile
 11278   001FBE                     
 11279                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
 11280   001FBE  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11281   001FC2  90D8               	bcf	status,0,c
 11282   001FC4  3203               	rrcf	??_LCD_write_data^0,f,c
 11283   001FC6  0E01               	movlw	1
 11284   001FC8  1603               	andwf	??_LCD_write_data^0,f,c
 11285   001FCA  3A03               	swapf	??_LCD_write_data^0,f,c
 11286   001FCC  4603               	rlncf	??_LCD_write_data^0,f,c
 11287   001FCE  508C               	movf	140,w,c	;volatile
 11288   001FD0  1803               	xorwf	??_LCD_write_data^0,w,c
 11289   001FD2  0BDF               	andlw	-33
 11290   001FD4  1803               	xorwf	??_LCD_write_data^0,w,c
 11291   001FD6  6E8C               	movwf	140,c	;volatile
 11292   001FD8                     
 11293                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
 11294   001FD8  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
 11295   001FDC  0E01               	movlw	1
 11296   001FDE  1603               	andwf	??_LCD_write_data^0,f,c
 11297   001FE0  3A03               	swapf	??_LCD_write_data^0,f,c
 11298   001FE2  508C               	movf	140,w,c	;volatile
 11299   001FE4  1803               	xorwf	??_LCD_write_data^0,w,c
 11300   001FE6  0BEF               	andlw	-17
 11301   001FE8  1803               	xorwf	??_LCD_write_data^0,w,c
 11302   001FEA  6E8C               	movwf	140,c	;volatile
 11303   001FEC                     
 11304                           ;LCD.c: 94:     LCD_pulse_clock();
 11305   001FEC  EC45  F01A         	call	_LCD_pulse_clock	;wreg free
 11306   001FF0  0012               	return		;funcret
 11307   001FF2                     __end_of_LCD_write_data:
 11308                           	callstack 0
 11309                           
 11310 ;; *************** function _LCD_cursor_set *****************
 11311 ;; Defined at:
 11312 ;;		line 159 in file "LCD.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;  row             1    wreg     unsigned char 
 11315 ;;  column          1    5[COMRAM] unsigned char 
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;  row             1    6[COMRAM] unsigned char 
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  1    wreg      void 
 11320 ;; Registers used:
 11321 ;;		wreg, status,2, status,0, cstack
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11327 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11331 ;;Total ram usage:        2 bytes
 11332 ;; Hardware stack levels used: 1
 11333 ;; Hardware stack levels required when called: 3
 11334 ;; This function calls:
 11335 ;;		_LCD_write_command
 11336 ;; This function is called by:
 11337 ;;		_welcome_splash
 11338 ;;		_display_mm
 11339 ;;		_parsing_notif
 11340 ;;		_clear_parsing_notif
 11341 ;;		_main_menu
 11342 ;;		_print_RPM
 11343 ;;		_print_Vbatt
 11344 ;;		_print_AI_Temp
 11345 ;;		_print_ELMVer
 11346 ;;		_print_SAEVer
 11347 ;;		_display_system_info
 11348 ;;		_diagnostic_trouble_codes
 11349 ;;		_clear_diagnostic_codes
 11350 ;;		_LCD_add_character
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text54
 11355   00305A                     __ptext54:
 11356                           	callstack 0
 11357   00305A                     _LCD_cursor_set:
 11358                           	callstack 26
 11359                           
 11360                           ;incstack = 0
 11361                           ;LCD_cursor_set@row stored from wreg
 11362   00305A  6E07               	movwf	LCD_cursor_set@row^0,c
 11363   00305C                     
 11364                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
 11365   00305C  0407               	decf	LCD_cursor_set@row^0,w,c
 11366   00305E  A4D8               	btfss	status,2,c
 11367   003060  EF34  F018         	goto	u7001
 11368   003064  EF36  F018         	goto	u7000
 11369   003068                     u7001:
 11370   003068  EF38  F018         	goto	l399
 11371   00306C                     u7000:
 11372   00306C  0E7F               	movlw	127
 11373   00306E  2606               	addwf	LCD_cursor_set@column^0,f,c
 11374   003070                     l399:
 11375                           
 11376                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
 11377   003070  0E02               	movlw	2
 11378   003072  1807               	xorwf	LCD_cursor_set@row^0,w,c
 11379   003074  A4D8               	btfss	status,2,c
 11380   003076  EF3F  F018         	goto	u7011
 11381   00307A  EF41  F018         	goto	u7010
 11382   00307E                     u7011:
 11383   00307E  EF43  F018         	goto	l400
 11384   003082                     u7010:
 11385   003082  0EBF               	movlw	191
 11386   003084  2606               	addwf	LCD_cursor_set@column^0,f,c
 11387   003086                     l400:
 11388                           
 11389                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
 11390   003086  0E03               	movlw	3
 11391   003088  1807               	xorwf	LCD_cursor_set@row^0,w,c
 11392   00308A  A4D8               	btfss	status,2,c
 11393   00308C  EF4A  F018         	goto	u7021
 11394   003090  EF4C  F018         	goto	u7020
 11395   003094                     u7021:
 11396   003094  EF4E  F018         	goto	l401
 11397   003098                     u7020:
 11398   003098  0E93               	movlw	147
 11399   00309A  2606               	addwf	LCD_cursor_set@column^0,f,c
 11400   00309C                     l401:
 11401                           
 11402                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
 11403   00309C  0E04               	movlw	4
 11404   00309E  1807               	xorwf	LCD_cursor_set@row^0,w,c
 11405   0030A0  A4D8               	btfss	status,2,c
 11406   0030A2  EF55  F018         	goto	u7031
 11407   0030A6  EF57  F018         	goto	u7030
 11408   0030AA                     u7031:
 11409   0030AA  EF59  F018         	goto	l6085
 11410   0030AE                     u7030:
 11411   0030AE  0ED3               	movlw	211
 11412   0030B0  2606               	addwf	LCD_cursor_set@column^0,f,c
 11413   0030B2                     l6085:
 11414                           
 11415                           ;LCD.c: 168:    LCD_write_command(column);
 11416   0030B2  5006               	movf	LCD_cursor_set@column^0,w,c
 11417   0030B4  ECF9  F00F         	call	_LCD_write_command
 11418   0030B8  0012               	return		;funcret
 11419   0030BA                     __end_of_LCD_cursor_set:
 11420                           	callstack 0
 11421                           
 11422 ;; *************** function _UART1_SendString *****************
 11423 ;; Defined at:
 11424 ;;		line 182 in file "OBCII_PIC18F46K22.c"
 11425 ;; Parameters:    Size  Location     Type
 11426 ;;  string          2    3[COMRAM] PTR unsigned char 
 11427 ;;		 -> STR_49(4), STR_42(4), STR_35(6), STR_33(5), 
 11428 ;;		 -> STR_26(6), STR_22(6), STR_16(6), STR_10(6), 
 11429 ;;		 -> STR_7(5), STR_5(5), STR_4(6), STR_1(6), 
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;  i               2    7[COMRAM] unsigned int 
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11444 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11445 ;;Total ram usage:        6 bytes
 11446 ;; Hardware stack levels used: 1
 11447 ;; Hardware stack levels required when called: 2
 11448 ;; This function calls:
 11449 ;;		_UART1_SendChar
 11450 ;; This function is called by:
 11451 ;;		_main
 11452 ;;		_welcome_splash
 11453 ;;		_print_RPM
 11454 ;;		_print_Vbatt
 11455 ;;		_print_AI_Temp
 11456 ;;		_print_ELMVer
 11457 ;;		_print_SAEVer
 11458 ;;		_diagnostic_trouble_codes
 11459 ;;		_clear_diagnostic_codes
 11460 ;; This function uses a non-reentrant model
 11461 ;;
 11462                           
 11463                           	psect	text55
 11464   003118                     __ptext55:
 11465                           	callstack 0
 11466   003118                     _UART1_SendString:
 11467                           	callstack 27
 11468   003118                     
 11469                           ;OBCII_PIC18F46K22.c: 183:     for (unsigned int i = 0; string[i] != '\0'; i++){
 11470   003118  0E00               	movlw	0
 11471   00311A  6E09               	movwf	(UART1_SendString@i+1)^0,c
 11472   00311C  0E00               	movlw	0
 11473   00311E  6E08               	movwf	UART1_SendString@i^0,c
 11474   003120  EFA2  F018         	goto	l6149
 11475   003124                     l6145:
 11476                           
 11477                           ;OBCII_PIC18F46K22.c: 184:         UART1_SendChar(string[i]);
 11478   003124  5008               	movf	UART1_SendString@i^0,w,c
 11479   003126  2404               	addwf	UART1_SendString@string^0,w,c
 11480   003128  6E06               	movwf	??_UART1_SendString^0,c
 11481   00312A  5009               	movf	(UART1_SendString@i+1)^0,w,c
 11482   00312C  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
 11483   00312E  6E07               	movwf	(??_UART1_SendString+1)^0,c
 11484   003130  C006  FFF6         	movff	??_UART1_SendString,tblptrl
 11485   003134  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
 11486   003138                     	if	0	;tblptru may be non-zero
 11487   003138                     	endif
 11488   003138                     	if	0	;tblptru may be non-zero
 11489   003138                     	endif
 11490   003138  0008               	tblrd		*
 11491   00313A  50F5               	movf	tablat,w,c
 11492   00313C  EC1A  F01A         	call	_UART1_SendChar
 11493   003140                     
 11494                           ;OBCII_PIC18F46K22.c: 185:     }
 11495   003140  4A08               	infsnz	UART1_SendString@i^0,f,c
 11496   003142  2A09               	incf	(UART1_SendString@i+1)^0,f,c
 11497   003144                     l6149:
 11498   003144  5008               	movf	UART1_SendString@i^0,w,c
 11499   003146  2404               	addwf	UART1_SendString@string^0,w,c
 11500   003148  6E06               	movwf	??_UART1_SendString^0,c
 11501   00314A  5009               	movf	(UART1_SendString@i+1)^0,w,c
 11502   00314C  2005               	addwfc	(UART1_SendString@string+1)^0,w,c
 11503   00314E  6E07               	movwf	(??_UART1_SendString+1)^0,c
 11504   003150  C006  FFF6         	movff	??_UART1_SendString,tblptrl
 11505   003154  C007  FFF7         	movff	??_UART1_SendString+1,tblptrh
 11506   003158                     	if	0	;tblptru may be non-zero
 11507   003158                     	endif
 11508   003158                     	if	0	;tblptru may be non-zero
 11509   003158                     	endif
 11510   003158  0008               	tblrd		*
 11511   00315A  50F5               	movf	tablat,w,c
 11512   00315C  0900               	iorlw	0
 11513   00315E  A4D8               	btfss	status,2,c
 11514   003160  EFB4  F018         	goto	u7121
 11515   003164  EFB6  F018         	goto	u7120
 11516   003168                     u7121:
 11517   003168  EF92  F018         	goto	l6145
 11518   00316C                     u7120:
 11519   00316C  0012               	return		;funcret
 11520   00316E                     __end_of_UART1_SendString:
 11521                           	callstack 0
 11522                           
 11523 ;; *************** function _UART1_SendChar *****************
 11524 ;; Defined at:
 11525 ;;		line 188 in file "OBCII_PIC18F46K22.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;  c               1    wreg     unsigned char 
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;  c               1    2[COMRAM] unsigned char 
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  1    wreg      void 
 11532 ;; Registers used:
 11533 ;;		wreg
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/0
 11536 ;;		On exit  : 0/0
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11543 ;;Total ram usage:        1 bytes
 11544 ;; Hardware stack levels used: 1
 11545 ;; Hardware stack levels required when called: 1
 11546 ;; This function calls:
 11547 ;;		Nothing
 11548 ;; This function is called by:
 11549 ;;		_UART1_SendString
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553                           	psect	text56
 11554   003434                     __ptext56:
 11555                           	callstack 0
 11556   003434                     _UART1_SendChar:
 11557                           	callstack 27
 11558                           
 11559                           ;incstack = 0
 11560                           ;UART1_SendChar@c stored from wreg
 11561   003434  6E03               	movwf	UART1_SendChar@c^0,c
 11562   003436                     l175:
 11563   003436  A2AC               	btfss	172,1,c	;volatile
 11564   003438  EF20  F01A         	goto	u6991
 11565   00343C  EF22  F01A         	goto	u6990
 11566   003440                     u6991:
 11567   003440  EF1B  F01A         	goto	l175
 11568   003444                     u6990:
 11569   003444                     
 11570                           ;OBCII_PIC18F46K22.c: 190:         TXREG = c;
 11571   003444  C003  FFAD         	movff	UART1_SendChar@c,4013	;volatile
 11572   003448  0012               	return		;funcret
 11573   00344A                     __end_of_UART1_SendChar:
 11574                           	callstack 0
 11575                           
 11576 ;; *************** function _LCD_configure_cursor_blink *****************
 11577 ;; Defined at:
 11578 ;;		line 231 in file "LCD.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  state           1    wreg     unsigned char 
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;  state           1    5[COMRAM] unsigned char 
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  1    wreg      void 
 11585 ;; Registers used:
 11586 ;;		wreg, status,2, status,0, cstack
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;Total ram usage:        1 bytes
 11597 ;; Hardware stack levels used: 1
 11598 ;; Hardware stack levels required when called: 3
 11599 ;; This function calls:
 11600 ;;		_LCD_write_command
 11601 ;; This function is called by:
 11602 ;;		_main_menu
 11603 ;;		_clear_diagnostic_codes
 11604 ;; This function uses a non-reentrant model
 11605 ;;
 11606                           
 11607                           	psect	text57
 11608   0033C0                     __ptext57:
 11609                           	callstack 0
 11610   0033C0                     _LCD_configure_cursor_blink:
 11611                           	callstack 25
 11612                           
 11613                           ;incstack = 0
 11614                           ;LCD_configure_cursor_blink@state stored from wreg
 11615   0033C0  6E06               	movwf	LCD_configure_cursor_blink@state^0,c
 11616   0033C2                     
 11617                           ;LCD.c: 234:     if(state){
 11618   0033C2  5006               	movf	LCD_configure_cursor_blink@state^0,w,c
 11619   0033C4  B4D8               	btfsc	status,2,c
 11620   0033C6  EFE7  F019         	goto	u7211
 11621   0033CA  EFE9  F019         	goto	u7210
 11622   0033CE                     u7211:
 11623   0033CE  EFED  F019         	goto	l6243
 11624   0033D2                     u7210:
 11625   0033D2                     
 11626                           ;LCD.c: 235:         LCD_display_control |= 0b00000001;
 11627   0033D2  0100               	movlb	0	; () banked
 11628   0033D4  81FB               	bsf	_LCD_display_control& (0+255),0,b
 11629                           
 11630                           ;LCD.c: 236:     }
 11631   0033D6  EFEF  F019         	goto	l6245
 11632   0033DA                     l6243:
 11633                           
 11634                           ;LCD.c: 238:         LCD_display_control &= 0b11111110;
 11635   0033DA  0100               	movlb	0	; () banked
 11636   0033DC  91FB               	bcf	_LCD_display_control& (0+255),0,b
 11637   0033DE                     l6245:
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;LCD.c: 242:     LCD_write_command(LCD_display_control);
 11641   0033DE  51FB               	movf	_LCD_display_control& (0+255),w,b
 11642   0033E0  ECF9  F00F         	call	_LCD_write_command
 11643   0033E4  0012               	return		;funcret
 11644   0033E6                     __end_of_LCD_configure_cursor_blink:
 11645                           	callstack 0
 11646                           
 11647 ;; *************** function _input_init *****************
 11648 ;; Defined at:
 11649 ;;		line 98 in file "OBCII_PIC18F46K22.c"
 11650 ;; Parameters:    Size  Location     Type
 11651 ;;		None
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;		None
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  1    wreg      void 
 11656 ;; Registers used:
 11657 ;;		None
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11667 ;;Total ram usage:        0 bytes
 11668 ;; Hardware stack levels used: 1
 11669 ;; Hardware stack levels required when called: 1
 11670 ;; This function calls:
 11671 ;;		Nothing
 11672 ;; This function is called by:
 11673 ;;		_main
 11674 ;; This function uses a non-reentrant model
 11675 ;;
 11676                           
 11677                           	psect	text58
 11678   00346C                     __ptext58:
 11679                           	callstack 0
 11680   00346C                     _input_init:
 11681                           	callstack 29
 11682   00346C                     
 11683                           ;OBCII_PIC18F46K22.c: 101:     TRISBbits.TRISB4 = 1;
 11684   00346C  8893               	bsf	147,4,c	;volatile
 11685                           
 11686                           ;OBCII_PIC18F46K22.c: 102:     ANSELBbits.ANSB4 = 0;
 11687   00346E  010F               	movlb	15	; () banked
 11688   003470  9939               	bcf	57,4,b	;volatile
 11689                           
 11690                           ;OBCII_PIC18F46K22.c: 104:     TRISCbits.TRISC5 = 1;
 11691   003472  8A94               	bsf	148,5,c	;volatile
 11692                           
 11693                           ;OBCII_PIC18F46K22.c: 105:     ANSELCbits.ANSC5 = 0;
 11694   003474  9B3A               	bcf	58,5,b	;volatile
 11695                           
 11696                           ;OBCII_PIC18F46K22.c: 107:     TRISAbits.TRISA0 = 1;
 11697   003476  8092               	bsf	146,0,c	;volatile
 11698                           
 11699                           ;OBCII_PIC18F46K22.c: 108:     ANSELAbits.ANSA0 = 1;
 11700   003478  8138               	bsf	56,0,b	;volatile
 11701   00347A                     
 11702                           ; BSR set to: 15
 11703   00347A  0012               	return		;funcret
 11704   00347C                     __end_of_input_init:
 11705                           	callstack 0
 11706                           
 11707 ;; *************** function _UART1_Init *****************
 11708 ;; Defined at:
 11709 ;;		line 120 in file "OBCII_PIC18F46K22.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;		None
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;		None
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1    wreg      void 
 11716 ;; Registers used:
 11717 ;;		wreg, status,2
 11718 ;; Tracked objects:
 11719 ;;		On entry : 0/0
 11720 ;;		On exit  : 0/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;Total ram usage:        0 bytes
 11728 ;; Hardware stack levels used: 1
 11729 ;; Hardware stack levels required when called: 1
 11730 ;; This function calls:
 11731 ;;		Nothing
 11732 ;; This function is called by:
 11733 ;;		_main
 11734 ;; This function uses a non-reentrant model
 11735 ;;
 11736                           
 11737                           	psect	text59
 11738   003394                     __ptext59:
 11739                           	callstack 0
 11740   003394                     _UART1_Init:
 11741                           	callstack 29
 11742   003394                     
 11743                           ;OBCII_PIC18F46K22.c: 121:     ANSELC = 0;
 11744   003394  010F               	movlb	15	; () banked
 11745   003396  6B3A               	clrf	58,b	;volatile
 11746                           
 11747                           ;OBCII_PIC18F46K22.c: 124:     TRISCbits.TRISC6 = 0;
 11748   003398  9C94               	bcf	148,6,c	;volatile
 11749                           
 11750                           ;OBCII_PIC18F46K22.c: 125:     TRISCbits.TRISC7 = 1;
 11751   00339A  8E94               	bsf	148,7,c	;volatile
 11752                           
 11753                           ;OBCII_PIC18F46K22.c: 129:     TXSTA1bits.TXEN = 1;
 11754   00339C  8AAC               	bsf	172,5,c	;volatile
 11755                           
 11756                           ;OBCII_PIC18F46K22.c: 130:     TXSTA1bits.TX9 = 0;
 11757   00339E  9CAC               	bcf	172,6,c	;volatile
 11758                           
 11759                           ;OBCII_PIC18F46K22.c: 131:     TXSTA1bits.SYNC = 0;
 11760   0033A0  98AC               	bcf	172,4,c	;volatile
 11761                           
 11762                           ;OBCII_PIC18F46K22.c: 134:     TXSTA1bits.BRGH = 1;
 11763   0033A2  84AC               	bsf	172,2,c	;volatile
 11764                           
 11765                           ;OBCII_PIC18F46K22.c: 135:     BAUDCON1bits.BRG16 = 1;
 11766   0033A4  86B8               	bsf	184,3,c	;volatile
 11767   0033A6                     
 11768                           ; BSR set to: 15
 11769                           ;OBCII_PIC18F46K22.c: 138:     SPBRGH1 = 0b00000001;
 11770   0033A6  0E01               	movlw	1
 11771   0033A8  6EB0               	movwf	176,c	;volatile
 11772                           
 11773                           ;OBCII_PIC18F46K22.c: 139:     SPBRG1 = 0b10100000;
 11774   0033AA  0EA0               	movlw	160
 11775   0033AC  6EAF               	movwf	175,c	;volatile
 11776   0033AE                     
 11777                           ; BSR set to: 15
 11778                           ;OBCII_PIC18F46K22.c: 142:     BAUDCON1bits.CKTXP = 0;
 11779   0033AE  98B8               	bcf	184,4,c	;volatile
 11780   0033B0                     
 11781                           ; BSR set to: 15
 11782                           ;OBCII_PIC18F46K22.c: 143:     BAUDCON1bits.DTRXP = 0;
 11783   0033B0  9AB8               	bcf	184,5,c	;volatile
 11784   0033B2                     
 11785                           ; BSR set to: 15
 11786                           ;OBCII_PIC18F46K22.c: 146:     RCSTA1bits.SPEN = 1;
 11787   0033B2  8EAB               	bsf	171,7,c	;volatile
 11788   0033B4                     
 11789                           ; BSR set to: 15
 11790                           ;OBCII_PIC18F46K22.c: 147:     RCSTA1bits.CREN = 1;
 11791   0033B4  88AB               	bsf	171,4,c	;volatile
 11792   0033B6                     
 11793                           ; BSR set to: 15
 11794                           ;OBCII_PIC18F46K22.c: 148:     RCSTA1bits.RX9 = 0;
 11795   0033B6  9CAB               	bcf	171,6,c	;volatile
 11796   0033B8                     
 11797                           ; BSR set to: 15
 11798                           ;OBCII_PIC18F46K22.c: 151:     PIE1bits.RC1IE = 1;
 11799   0033B8  8A9D               	bsf	157,5,c	;volatile
 11800   0033BA                     
 11801                           ; BSR set to: 15
 11802                           ;OBCII_PIC18F46K22.c: 152:     INTCONbits.PEIE = 1;
 11803   0033BA  8CF2               	bsf	242,6,c	;volatile
 11804   0033BC                     
 11805                           ; BSR set to: 15
 11806                           ;OBCII_PIC18F46K22.c: 153:     INTCONbits.GIE = 1;
 11807   0033BC  8EF2               	bsf	242,7,c	;volatile
 11808   0033BE                     
 11809                           ; BSR set to: 15
 11810   0033BE  0012               	return		;funcret
 11811   0033C0                     __end_of_UART1_Init:
 11812                           	callstack 0
 11813                           
 11814 ;; *************** function _LCD_init *****************
 11815 ;; Defined at:
 11816 ;;		line 106 in file "LCD.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;		None
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, status,2, status,0, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11834 ;;Total ram usage:        2 bytes
 11835 ;; Hardware stack levels used: 1
 11836 ;; Hardware stack levels required when called: 4
 11837 ;; This function calls:
 11838 ;;		_LCD_clear
 11839 ;;		_LCD_pulse_clock
 11840 ;;		_LCD_write_command
 11841 ;; This function is called by:
 11842 ;;		_main
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           	psect	text60
 11847   002D4E                     __ptext60:
 11848                           	callstack 0
 11849   002D4E                     _LCD_init:
 11850                           	callstack 26
 11851   002D4E                     
 11852                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
 11853   002D4E  9495               	bcf	149,2,c	;volatile
 11854   002D50  948C               	bcf	140,2,c	;volatile
 11855                           
 11856                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
 11857   002D52  9695               	bcf	149,3,c	;volatile
 11858   002D54  968C               	bcf	140,3,c	;volatile
 11859                           
 11860                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
 11861   002D56  9895               	bcf	149,4,c	;volatile
 11862   002D58  988C               	bcf	140,4,c	;volatile
 11863                           
 11864                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
 11865   002D5A  9A95               	bcf	149,5,c	;volatile
 11866   002D5C  9A8C               	bcf	140,5,c	;volatile
 11867                           
 11868                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
 11869   002D5E  9C95               	bcf	149,6,c	;volatile
 11870   002D60  9C8C               	bcf	140,6,c	;volatile
 11871                           
 11872                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
 11873   002D62  9E95               	bcf	149,7,c	;volatile
 11874   002D64  9E8C               	bcf	140,7,c	;volatile
 11875   002D66                     
 11876                           ;LCD.c: 121:     _delay((unsigned long)((60)*(16000000/4000.0)));
 11877   002D66  0E02               	movlw	2
 11878   002D68  6E08               	movwf	(??_LCD_init+1)^0,c
 11879   002D6A  0E38               	movlw	56
 11880   002D6C  6E07               	movwf	??_LCD_init^0,c
 11881   002D6E  0EAD               	movlw	173
 11882   002D70                     u8167:
 11883   002D70  2EE8               	decfsz	wreg,f,c
 11884   002D72  D7FE               	bra	u8167
 11885   002D74  2E07               	decfsz	??_LCD_init^0,f,c
 11886   002D76  D7FC               	bra	u8167
 11887   002D78  2E08               	decfsz	(??_LCD_init+1)^0,f,c
 11888   002D7A  D7FA               	bra	u8167
 11889   002D7C  0000               	nop	
 11890   002D7E                     
 11891                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
 11892   002D7E  9E8C               	bcf	140,7,c	;volatile
 11893   002D80  9C8C               	bcf	140,6,c	;volatile
 11894   002D82  8A8C               	bsf	140,5,c	;volatile
 11895   002D84  888C               	bsf	140,4,c	;volatile
 11896   002D86                     
 11897                           ;LCD.c: 127:     LCD_pulse_clock();
 11898   002D86  EC45  F01A         	call	_LCD_pulse_clock	;wreg free
 11899   002D8A                     
 11900                           ;LCD.c: 130:     _delay((unsigned long)((6)*(16000000/4000.0)));
 11901   002D8A  0E20               	movlw	32
 11902   002D8C  6E07               	movwf	??_LCD_init^0,c
 11903   002D8E  0E2A               	movlw	42
 11904   002D90                     u8177:
 11905   002D90  2EE8               	decfsz	wreg,f,c
 11906   002D92  D7FE               	bra	u8177
 11907   002D94  2E07               	decfsz	??_LCD_init^0,f,c
 11908   002D96  D7FC               	bra	u8177
 11909                           
 11910                           ;LCD.c: 133:     LCD_pulse_clock();
 11911   002D98  EC45  F01A         	call	_LCD_pulse_clock	;wreg free
 11912   002D9C                     
 11913                           ;LCD.c: 136:     _delay((unsigned long)((150)*(16000000/4000000.0)));
 11914   002D9C  0EC8               	movlw	200
 11915   002D9E                     u8187:
 11916   002D9E  2EE8               	decfsz	wreg,f,c
 11917   002DA0  D7FE               	bra	u8187
 11918   002DA2                     
 11919                           ;LCD.c: 139:     LCD_pulse_clock();
 11920   002DA2  EC45  F01A         	call	_LCD_pulse_clock	;wreg free
 11921   002DA6                     
 11922                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
 11923   002DA6  9E8C               	bcf	140,7,c	;volatile
 11924   002DA8  9C8C               	bcf	140,6,c	;volatile
 11925   002DAA  8A8C               	bsf	140,5,c	;volatile
 11926   002DAC  988C               	bcf	140,4,c	;volatile
 11927   002DAE                     
 11928                           ;LCD.c: 145:     LCD_pulse_clock();
 11929   002DAE  EC45  F01A         	call	_LCD_pulse_clock	;wreg free
 11930   002DB2                     
 11931                           ;LCD.c: 148:     LCD_write_command(0x28);
 11932   002DB2  0E28               	movlw	40
 11933   002DB4  ECF9  F00F         	call	_LCD_write_command
 11934   002DB8                     
 11935                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
 11936   002DB8  0100               	movlb	0	; () banked
 11937   002DBA  51FB               	movf	_LCD_display_control& (0+255),w,b
 11938   002DBC  ECF9  F00F         	call	_LCD_write_command
 11939   002DC0                     
 11940                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
 11941   002DC0  0100               	movlb	0	; () banked
 11942   002DC2  51FA               	movf	_LCD_entry_mode& (0+255),w,b
 11943   002DC4  ECF9  F00F         	call	_LCD_write_command
 11944   002DC8                     
 11945                           ;LCD.c: 151:     LCD_clear();
 11946   002DC8  ECF3  F019         	call	_LCD_clear	;wreg free
 11947   002DCC  0012               	return		;funcret
 11948   002DCE                     __end_of_LCD_init:
 11949                           	callstack 0
 11950                           
 11951 ;; *************** function _LCD_clear *****************
 11952 ;; Defined at:
 11953 ;;		line 248 in file "LCD.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;		None
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;		None
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  1    wreg      void 
 11960 ;; Registers used:
 11961 ;;		wreg, status,2, status,0, cstack
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11971 ;;Total ram usage:        1 bytes
 11972 ;; Hardware stack levels used: 1
 11973 ;; Hardware stack levels required when called: 3
 11974 ;; This function calls:
 11975 ;;		_LCD_write_command
 11976 ;; This function is called by:
 11977 ;;		_main
 11978 ;;		_welcome_splash
 11979 ;;		_main_menu
 11980 ;;		_print_RPM
 11981 ;;		_print_Vbatt
 11982 ;;		_print_AI_Temp
 11983 ;;		_print_ELMVer
 11984 ;;		_print_SAEVer
 11985 ;;		_diagnostic_trouble_codes
 11986 ;;		_clear_diagnostic_codes
 11987 ;;		_LCD_init
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text61
 11992   0033E6                     __ptext61:
 11993                           	callstack 0
 11994   0033E6                     _LCD_clear:
 11995                           	callstack 26
 11996   0033E6                     
 11997                           ;LCD.c: 251:     LCD_write_command(0x01);
 11998   0033E6  0E01               	movlw	1
 11999   0033E8  ECF9  F00F         	call	_LCD_write_command
 12000   0033EC                     
 12001                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(16000000/4000000.0)));
 12002   0033EC  0E0C               	movlw	12
 12003   0033EE  6E06               	movwf	??_LCD_clear^0,c
 12004   0033F0  0EA2               	movlw	162
 12005   0033F2                     u8197:
 12006   0033F2  2EE8               	decfsz	wreg,f,c
 12007   0033F4  D7FE               	bra	u8197
 12008   0033F6  2E06               	decfsz	??_LCD_clear^0,f,c
 12009   0033F8  D7FC               	bra	u8197
 12010   0033FA                     
 12011                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
 12012   0033FA  0100               	movlb	0	; () banked
 12013   0033FC  51FA               	movf	_LCD_entry_mode& (0+255),w,b
 12014   0033FE  ECF9  F00F         	call	_LCD_write_command
 12015   003402  0012               	return		;funcret
 12016   003404                     __end_of_LCD_clear:
 12017                           	callstack 0
 12018                           
 12019 ;; *************** function _LCD_write_command *****************
 12020 ;; Defined at:
 12021 ;;		line 46 in file "LCD.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  command         1    wreg     unsigned char 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;  command         1    4[COMRAM] unsigned char 
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      void 
 12028 ;; Registers used:
 12029 ;;		wreg, status,2, status,0, cstack
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;Total ram usage:        3 bytes
 12040 ;; Hardware stack levels used: 1
 12041 ;; Hardware stack levels required when called: 2
 12042 ;; This function calls:
 12043 ;;		_LCD_pulse_clock
 12044 ;; This function is called by:
 12045 ;;		_LCD_init
 12046 ;;		_LCD_cursor_set
 12047 ;;		_LCD_configure_cursor_blink
 12048 ;;		_LCD_clear
 12049 ;;		_LCD_cursor_increment
 12050 ;;		_LCD_cursor_decrement
 12051 ;;		_LCD_configure_lcd_display
 12052 ;;		_LCD_configure_cursor_display
 12053 ;;		_LCD_shift_reset
 12054 ;;		_LCD_shift_left
 12055 ;;		_LCD_shift_right
 12056 ;;		_LCD_configure_entry_id
 12057 ;;		_LCD_configure_entry_shift
 12058 ;;		_LCD_add_character
 12059 ;; This function uses a non-reentrant model
 12060 ;;
 12061                           
 12062                           	psect	text62
 12063   001FF2                     __ptext62:
 12064                           	callstack 0
 12065   001FF2                     _LCD_write_command:
 12066                           	callstack 26
 12067                           
 12068                           ;incstack = 0
 12069                           ;LCD_write_command@command stored from wreg
 12070   001FF2  6E05               	movwf	LCD_write_command@command^0,c
 12071   001FF4                     
 12072                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
 12073   001FF4  948C               	bcf	140,2,c	;volatile
 12074   001FF6                     
 12075                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
 12076   001FF6  6A03               	clrf	??_LCD_write_command^0,c
 12077   001FF8  AE05               	btfss	LCD_write_command@command^0,7,c
 12078   001FFA  D001               	bra	u6785
 12079   001FFC  2A03               	incf	??_LCD_write_command^0,f,c
 12080   001FFE                     u6785:
 12081   001FFE  0E01               	movlw	1
 12082   002000  1603               	andwf	??_LCD_write_command^0,f,c
 12083   002002  3203               	rrcf	??_LCD_write_command^0,f,c
 12084   002004  3203               	rrcf	??_LCD_write_command^0,f,c
 12085   002006  508C               	movf	140,w,c	;volatile
 12086   002008  1803               	xorwf	??_LCD_write_command^0,w,c
 12087   00200A  0B7F               	andlw	-129
 12088   00200C  1803               	xorwf	??_LCD_write_command^0,w,c
 12089   00200E  6E8C               	movwf	140,c	;volatile
 12090                           
 12091                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
 12092   002010  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12093   002014  0E06               	movlw	6
 12094   002016  6E04               	movwf	(??_LCD_write_command+1)^0,c
 12095   002018                     u6795:
 12096   002018  90D8               	bcf	status,0,c
 12097   00201A  3203               	rrcf	??_LCD_write_command^0,f,c
 12098   00201C  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
 12099   00201E  EF0C  F010         	goto	u6795
 12100   002022  0E01               	movlw	1
 12101   002024  1603               	andwf	??_LCD_write_command^0,f,c
 12102   002026  3A03               	swapf	??_LCD_write_command^0,f,c
 12103   002028  4603               	rlncf	??_LCD_write_command^0,f,c
 12104   00202A  4603               	rlncf	??_LCD_write_command^0,f,c
 12105   00202C  508C               	movf	140,w,c	;volatile
 12106   00202E  1803               	xorwf	??_LCD_write_command^0,w,c
 12107   002030  0BBF               	andlw	-65
 12108   002032  1803               	xorwf	??_LCD_write_command^0,w,c
 12109   002034  6E8C               	movwf	140,c	;volatile
 12110                           
 12111                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
 12112   002036  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12113   00203A  0E05               	movlw	5
 12114   00203C  6E04               	movwf	(??_LCD_write_command+1)^0,c
 12115   00203E                     u6805:
 12116   00203E  90D8               	bcf	status,0,c
 12117   002040  3203               	rrcf	??_LCD_write_command^0,f,c
 12118   002042  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
 12119   002044  EF1F  F010         	goto	u6805
 12120   002048  0E01               	movlw	1
 12121   00204A  1603               	andwf	??_LCD_write_command^0,f,c
 12122   00204C  3A03               	swapf	??_LCD_write_command^0,f,c
 12123   00204E  4603               	rlncf	??_LCD_write_command^0,f,c
 12124   002050  508C               	movf	140,w,c	;volatile
 12125   002052  1803               	xorwf	??_LCD_write_command^0,w,c
 12126   002054  0BDF               	andlw	-33
 12127   002056  1803               	xorwf	??_LCD_write_command^0,w,c
 12128   002058  6E8C               	movwf	140,c	;volatile
 12129                           
 12130                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
 12131   00205A  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12132   00205E  3A03               	swapf	??_LCD_write_command^0,f,c
 12133   002060  0E0F               	movlw	15
 12134   002062  1603               	andwf	??_LCD_write_command^0,f,c
 12135   002064  0E01               	movlw	1
 12136   002066  1603               	andwf	??_LCD_write_command^0,f,c
 12137   002068  3A03               	swapf	??_LCD_write_command^0,f,c
 12138   00206A  508C               	movf	140,w,c	;volatile
 12139   00206C  1803               	xorwf	??_LCD_write_command^0,w,c
 12140   00206E  0BEF               	andlw	-17
 12141   002070  1803               	xorwf	??_LCD_write_command^0,w,c
 12142   002072  6E8C               	movwf	140,c	;volatile
 12143   002074                     
 12144                           ;LCD.c: 57:     LCD_pulse_clock();
 12145   002074  EC45  F01A         	call	_LCD_pulse_clock	;wreg free
 12146   002078                     
 12147                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
 12148   002078  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12149   00207C  90D8               	bcf	status,0,c
 12150   00207E  3203               	rrcf	??_LCD_write_command^0,f,c
 12151   002080  90D8               	bcf	status,0,c
 12152   002082  3203               	rrcf	??_LCD_write_command^0,f,c
 12153   002084  90D8               	bcf	status,0,c
 12154   002086  3203               	rrcf	??_LCD_write_command^0,f,c
 12155   002088  0E01               	movlw	1
 12156   00208A  1603               	andwf	??_LCD_write_command^0,f,c
 12157   00208C  3203               	rrcf	??_LCD_write_command^0,f,c
 12158   00208E  3203               	rrcf	??_LCD_write_command^0,f,c
 12159   002090  508C               	movf	140,w,c	;volatile
 12160   002092  1803               	xorwf	??_LCD_write_command^0,w,c
 12161   002094  0B7F               	andlw	-129
 12162   002096  1803               	xorwf	??_LCD_write_command^0,w,c
 12163   002098  6E8C               	movwf	140,c	;volatile
 12164   00209A                     
 12165                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
 12166   00209A  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12167   00209E  90D8               	bcf	status,0,c
 12168   0020A0  3203               	rrcf	??_LCD_write_command^0,f,c
 12169   0020A2  90D8               	bcf	status,0,c
 12170   0020A4  3203               	rrcf	??_LCD_write_command^0,f,c
 12171   0020A6  0E01               	movlw	1
 12172   0020A8  1603               	andwf	??_LCD_write_command^0,f,c
 12173   0020AA  3A03               	swapf	??_LCD_write_command^0,f,c
 12174   0020AC  4603               	rlncf	??_LCD_write_command^0,f,c
 12175   0020AE  4603               	rlncf	??_LCD_write_command^0,f,c
 12176   0020B0  508C               	movf	140,w,c	;volatile
 12177   0020B2  1803               	xorwf	??_LCD_write_command^0,w,c
 12178   0020B4  0BBF               	andlw	-65
 12179   0020B6  1803               	xorwf	??_LCD_write_command^0,w,c
 12180   0020B8  6E8C               	movwf	140,c	;volatile
 12181   0020BA                     
 12182                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
 12183   0020BA  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12184   0020BE  90D8               	bcf	status,0,c
 12185   0020C0  3203               	rrcf	??_LCD_write_command^0,f,c
 12186   0020C2  0E01               	movlw	1
 12187   0020C4  1603               	andwf	??_LCD_write_command^0,f,c
 12188   0020C6  3A03               	swapf	??_LCD_write_command^0,f,c
 12189   0020C8  4603               	rlncf	??_LCD_write_command^0,f,c
 12190   0020CA  508C               	movf	140,w,c	;volatile
 12191   0020CC  1803               	xorwf	??_LCD_write_command^0,w,c
 12192   0020CE  0BDF               	andlw	-33
 12193   0020D0  1803               	xorwf	??_LCD_write_command^0,w,c
 12194   0020D2  6E8C               	movwf	140,c	;volatile
 12195   0020D4                     
 12196                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
 12197   0020D4  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
 12198   0020D8  0E01               	movlw	1
 12199   0020DA  1603               	andwf	??_LCD_write_command^0,f,c
 12200   0020DC  3A03               	swapf	??_LCD_write_command^0,f,c
 12201   0020DE  508C               	movf	140,w,c	;volatile
 12202   0020E0  1803               	xorwf	??_LCD_write_command^0,w,c
 12203   0020E2  0BEF               	andlw	-17
 12204   0020E4  1803               	xorwf	??_LCD_write_command^0,w,c
 12205   0020E6  6E8C               	movwf	140,c	;volatile
 12206   0020E8                     
 12207                           ;LCD.c: 66:     LCD_pulse_clock();
 12208   0020E8  EC45  F01A         	call	_LCD_pulse_clock	;wreg free
 12209   0020EC  0012               	return		;funcret
 12210   0020EE                     __end_of_LCD_write_command:
 12211                           	callstack 0
 12212                           
 12213 ;; *************** function _LCD_pulse_clock *****************
 12214 ;; Defined at:
 12215 ;;		line 34 in file "LCD.c"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;		None
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;		None
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  1    wreg      void 
 12222 ;; Registers used:
 12223 ;;		wreg
 12224 ;; Tracked objects:
 12225 ;;		On entry : 0/0
 12226 ;;		On exit  : 0/0
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12233 ;;Total ram usage:        0 bytes
 12234 ;; Hardware stack levels used: 1
 12235 ;; Hardware stack levels required when called: 1
 12236 ;; This function calls:
 12237 ;;		Nothing
 12238 ;; This function is called by:
 12239 ;;		_LCD_write_command
 12240 ;;		_LCD_write_data
 12241 ;;		_LCD_init
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           	psect	text63
 12246   00348A                     __ptext63:
 12247                           	callstack 0
 12248   00348A                     _LCD_pulse_clock:
 12249                           	callstack 26
 12250   00348A                     
 12251                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
 12252   00348A  868C               	bsf	140,3,c	;volatile
 12253   00348C                     
 12254                           ;LCD.c: 37:   _delay((unsigned long)((60)*(16000000/4000000.0)));
 12255   00348C  0E50               	movlw	80
 12256   00348E                     u8207:
 12257   00348E  2EE8               	decfsz	wreg,f,c
 12258   003490  D7FE               	bra	u8207
 12259   003492                     
 12260                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
 12261   003492  968C               	bcf	140,3,c	;volatile
 12262   003494  0012               	return		;funcret
 12263   003496                     __end_of_LCD_pulse_clock:
 12264                           	callstack 0
 12265                           
 12266 ;; *************** function _ADC_init *****************
 12267 ;; Defined at:
 12268 ;;		line 112 in file "OBCII_PIC18F46K22.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;		None
 12271 ;; Auto vars:     Size  Location     Type
 12272 ;;		None
 12273 ;; Return value:  Size  Location     Type
 12274 ;;                  1    wreg      void 
 12275 ;; Registers used:
 12276 ;;		wreg, status,2
 12277 ;; Tracked objects:
 12278 ;;		On entry : 0/0
 12279 ;;		On exit  : 0/0
 12280 ;;		Unchanged: 0/0
 12281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12286 ;;Total ram usage:        0 bytes
 12287 ;; Hardware stack levels used: 1
 12288 ;; Hardware stack levels required when called: 1
 12289 ;; This function calls:
 12290 ;;		Nothing
 12291 ;; This function is called by:
 12292 ;;		_main
 12293 ;; This function uses a non-reentrant model
 12294 ;;
 12295                           
 12296                           	psect	text64
 12297   003496                     __ptext64:
 12298                           	callstack 0
 12299   003496                     _ADC_init:
 12300                           	callstack 29
 12301   003496                     
 12302                           ;OBCII_PIC18F46K22.c: 114:     ADCON0 = 0b00000001;
 12303   003496  0E01               	movlw	1
 12304   003498  6EC2               	movwf	194,c	;volatile
 12305   00349A                     
 12306                           ;OBCII_PIC18F46K22.c: 115:     ADCON1 = 0b00000000;
 12307   00349A  6AC1               	clrf	193,c	;volatile
 12308                           
 12309                           ;OBCII_PIC18F46K22.c: 116:     ADCON2 = 0b10101010;
 12310   00349C  0EAA               	movlw	170
 12311   00349E  6EC0               	movwf	192,c	;volatile
 12312   0034A0  0012               	return		;funcret
 12313   0034A2                     __end_of_ADC_init:
 12314                           	callstack 0
 12315                           
 12316 ;; *************** function _UART_ISR *****************
 12317 ;; Defined at:
 12318 ;;		line 158 in file "OBCII_PIC18F46K22.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;		None
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;		None
 12323 ;; Return value:  Size  Location     Type
 12324 ;;                  1    wreg      void 
 12325 ;; Registers used:
 12326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12327 ;; Tracked objects:
 12328 ;;		On entry : 0/0
 12329 ;;		On exit  : 0/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;Total ram usage:        2 bytes
 12337 ;; Hardware stack levels used: 1
 12338 ;; This function calls:
 12339 ;;		Nothing
 12340 ;; This function is called by:
 12341 ;;		Interrupt level 2
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           	psect	intcode
 12346   000008                     __pintcode:
 12347                           	callstack 0
 12348   000008                     _UART_ISR:
 12349                           	callstack 19
 12350                           
 12351                           ;incstack = 0
 12352   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12353   00000A  CFD9 F001          	movff	fsr2l,??_UART_ISR
 12354   00000E  CFDA F002          	movff	fsr2h,??_UART_ISR+1
 12355   000012                     
 12356                           ;OBCII_PIC18F46K22.c: 159:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
 12357   000012  AA9D               	btfss	157,5,c	;volatile
 12358   000014  EF0E  F000         	goto	i2u526_41
 12359   000018  EF10  F000         	goto	i2u526_40
 12360   00001C                     i2u526_41:
 12361   00001C  EF68  F000         	goto	i2l166
 12362   000020                     i2u526_40:
 12363   000020  AA9E               	btfss	158,5,c	;volatile
 12364   000022  EF15  F000         	goto	i2u527_41
 12365   000026  EF17  F000         	goto	i2u527_40
 12366   00002A                     i2u527_41:
 12367   00002A  EF68  F000         	goto	i2l166
 12368   00002E                     i2u527_40:
 12369   00002E                     
 12370                           ;OBCII_PIC18F46K22.c: 160:         RX_char = RCREG1;
 12371   00002E  CFAE F0D6          	movff	4014,_RX_char	;volatile
 12372                           
 12373                           ;OBCII_PIC18F46K22.c: 163:         if (RCSTAbits.OERR) {
 12374   000032  A2AB               	btfss	171,1,c	;volatile
 12375   000034  EF1E  F000         	goto	i2u528_41
 12376   000038  EF20  F000         	goto	i2u528_40
 12377   00003C                     i2u528_41:
 12378   00003C  EF22  F000         	goto	i2l5135
 12379   000040                     i2u528_40:
 12380   000040                     
 12381                           ;OBCII_PIC18F46K22.c: 164:             RCSTAbits.CREN = 0;
 12382   000040  98AB               	bcf	171,4,c	;volatile
 12383                           
 12384                           ;OBCII_PIC18F46K22.c: 165:             RCSTAbits.CREN = 1;
 12385   000042  88AB               	bsf	171,4,c	;volatile
 12386   000044                     i2l5135:
 12387                           
 12388                           ;OBCII_PIC18F46K22.c: 169:         if ((RX_char >= 32 && RX_char <= 126) && RX_char != '
      +                          >') {
 12389   000044  0E1F               	movlw	31
 12390   000046  0100               	movlb	0	; () banked
 12391   000048  65D6               	cpfsgt	_RX_char& (0+255),b
 12392   00004A  EF29  F000         	goto	i2u529_41
 12393   00004E  EF2B  F000         	goto	i2u529_40
 12394   000052                     i2u529_41:
 12395   000052  EF45  F000         	goto	i2l5145
 12396   000056                     i2u529_40:
 12397   000056                     
 12398                           ; BSR set to: 0
 12399   000056  0E7F               	movlw	127
 12400   000058  61D6               	cpfslt	_RX_char& (0+255),b
 12401   00005A  EF31  F000         	goto	i2u530_41
 12402   00005E  EF33  F000         	goto	i2u530_40
 12403   000062                     i2u530_41:
 12404   000062  EF45  F000         	goto	i2l5145
 12405   000066                     i2u530_40:
 12406   000066                     
 12407                           ; BSR set to: 0
 12408   000066  0E3E               	movlw	62
 12409   000068  19D6               	xorwf	_RX_char& (0+255),w,b
 12410   00006A  B4D8               	btfsc	status,2,c
 12411   00006C  EF3A  F000         	goto	i2u531_41
 12412   000070  EF3C  F000         	goto	i2u531_40
 12413   000074                     i2u531_41:
 12414   000074  EF45  F000         	goto	i2l5145
 12415   000078                     i2u531_40:
 12416   000078                     
 12417                           ; BSR set to: 0
 12418                           ;OBCII_PIC18F46K22.c: 170:             buffer[buffer_count] = RX_char;
 12419   000078  0E00               	movlw	low _buffer
 12420   00007A  25D7               	addwf	_buffer_count& (0+255),w,b
 12421   00007C  6ED9               	movwf	fsr2l,c
 12422   00007E  6ADA               	clrf	fsr2h,c
 12423   000080  0E02               	movlw	high _buffer
 12424   000082  22DA               	addwfc	fsr2h,f,c
 12425   000084  C0D6  FFDF         	movff	_RX_char,indf2
 12426   000088                     
 12427                           ; BSR set to: 0
 12428                           ;OBCII_PIC18F46K22.c: 171:             buffer_count++;
 12429   000088  2BD7               	incf	_buffer_count& (0+255),f,b
 12430   00008A                     i2l5145:
 12431                           
 12432                           ; BSR set to: 0
 12433                           ;OBCII_PIC18F46K22.c: 174:         if (RX_char == '>' || RX_char == '\n' || buffer_count
      +                           >= 256 -1) {
 12434   00008A  0E3E               	movlw	62
 12435   00008C  19D6               	xorwf	_RX_char& (0+255),w,b
 12436   00008E  B4D8               	btfsc	status,2,c
 12437   000090  EF4C  F000         	goto	i2u532_41
 12438   000094  EF4E  F000         	goto	i2u532_40
 12439   000098                     i2u532_41:
 12440   000098  EF5F  F000         	goto	i2l5151
 12441   00009C                     i2u532_40:
 12442   00009C                     
 12443                           ; BSR set to: 0
 12444   00009C  0E0A               	movlw	10
 12445   00009E  19D6               	xorwf	_RX_char& (0+255),w,b
 12446   0000A0  B4D8               	btfsc	status,2,c
 12447   0000A2  EF55  F000         	goto	i2u533_41
 12448   0000A6  EF57  F000         	goto	i2u533_40
 12449   0000AA                     i2u533_41:
 12450   0000AA  EF5F  F000         	goto	i2l5151
 12451   0000AE                     i2u533_40:
 12452   0000AE                     
 12453                           ; BSR set to: 0
 12454   0000AE  29D7               	incf	_buffer_count& (0+255),w,b
 12455   0000B0  A4D8               	btfss	status,2,c
 12456   0000B2  EF5D  F000         	goto	i2u534_41
 12457   0000B6  EF5F  F000         	goto	i2u534_40
 12458   0000BA                     i2u534_41:
 12459   0000BA  EF68  F000         	goto	i2l166
 12460   0000BE                     i2u534_40:
 12461   0000BE                     i2l5151:
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;OBCII_PIC18F46K22.c: 175:             buffer[buffer_count] = '\0';
 12465   0000BE  0E00               	movlw	low _buffer
 12466   0000C0  25D7               	addwf	_buffer_count& (0+255),w,b
 12467   0000C2  6ED9               	movwf	fsr2l,c
 12468   0000C4  6ADA               	clrf	fsr2h,c
 12469   0000C6  0E02               	movlw	high _buffer
 12470   0000C8  22DA               	addwfc	fsr2h,f,c
 12471   0000CA  6ADF               	clrf	indf2,c
 12472   0000CC                     
 12473                           ; BSR set to: 0
 12474                           ;OBCII_PIC18F46K22.c: 176:             message_complete = 1;
 12475   0000CC  0E01               	movlw	1
 12476   0000CE  6FD5               	movwf	_message_complete& (0+255),b	;volatile
 12477   0000D0                     i2l166:
 12478   0000D0  C002  FFDA         	movff	??_UART_ISR+1,fsr2h
 12479   0000D4  C001  FFD9         	movff	??_UART_ISR,fsr2l
 12480   0000D8  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12481   0000DA  0011               	retfie		f
 12482   0000DC                     __end_of_UART_ISR:
 12483                           	callstack 0
 12484                           
 12485                           	psect	rparam
 12486   000001                     ___rparam_used  equ	1
 12487   000000                     ___param_bank   equ	0
 12488   000000                     __Lparam        equ	__Lrparam
 12489   000000                     __Hparam        equ	__Hrparam
 12490                           
 12491                           	psect	temp
 12492   00005D                     btemp:
 12493                           	callstack 0
 12494   00005D                     	ds	1
 12495   00005D                     int$flags       set	btemp
 12496   00005E                     wtemp8          set	btemp+1
 12497   00005E                     ttemp5          set	btemp+1
 12498   000061                     ttemp6          set	btemp+4
 12499   000065                     ttemp7          set	btemp+8
 12500                           
 12501                           	psect	config
 12502                           
 12503                           ; Padding undefined space
 12504   300000                     	org	3145728
 12505   300000  FF                 	db	255
 12506                           
 12507                           ;Config register CONFIG1H @ 0x300001
 12508                           ;	Oscillator Selection bits
 12509                           ;	FOSC = INTIO67, Internal oscillator block
 12510                           ;	4X PLL Enable
 12511                           ;	PLLCFG = ON, Oscillator multiplied by 4
 12512                           ;	Primary clock enable bit
 12513                           ;	PRICLKEN = ON, Primary clock is always enabled
 12514                           ;	Fail-Safe Clock Monitor Enable bit
 12515                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12516                           ;	Internal/External Oscillator Switchover bit
 12517                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12518   300001                     	org	3145729
 12519   300001  38                 	db	56
 12520                           
 12521                           ;Config register CONFIG2L @ 0x300002
 12522                           ;	Power-up Timer Enable bit
 12523                           ;	PWRTEN = ON, Power up timer enabled
 12524                           ;	Brown-out Reset Enable bits
 12525                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12526                           ;	Brown Out Reset Voltage bits
 12527                           ;	BORV = 250, VBOR set to 2.50 V nominal
 12528   300002                     	org	3145730
 12529   300002  0E                 	db	14
 12530                           
 12531                           ;Config register CONFIG2H @ 0x300003
 12532                           ;	Watchdog Timer Enable bits
 12533                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12534                           ;	Watchdog Timer Postscale Select bits
 12535                           ;	WDTPS = 32768, 1:32768
 12536   300003                     	org	3145731
 12537   300003  3C                 	db	60
 12538                           
 12539                           ; Padding undefined space
 12540   300004                     	org	3145732
 12541   300004  FF                 	db	255
 12542                           
 12543                           ;Config register CONFIG3H @ 0x300005
 12544                           ;	CCP2 MUX bit
 12545                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 12546                           ;	PORTB A/D Enable bit
 12547                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 12548                           ;	P3A/CCP3 Mux bit
 12549                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 12550                           ;	HFINTOSC Fast Start-up
 12551                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 12552                           ;	Timer3 Clock input mux bit
 12553                           ;	T3CMX = PORTC0, T3CKI is on RC0
 12554                           ;	ECCP2 B output mux bit
 12555                           ;	P2BMX = PORTD2, P2B is on RD2
 12556                           ;	MCLR Pin Enable bit
 12557                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 12558   300005                     	org	3145733
 12559   300005  BF                 	db	191
 12560                           
 12561                           ;Config register CONFIG4L @ 0x300006
 12562                           ;	Stack Full/Underflow Reset Enable bit
 12563                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12564                           ;	Single-Supply ICSP Enable bit
 12565                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 12566                           ;	Extended Instruction Set Enable bit
 12567                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12568                           ;	Background Debug
 12569                           ;	DEBUG = 0x1, unprogrammed default
 12570   300006                     	org	3145734
 12571   300006  85                 	db	133
 12572                           
 12573                           ; Padding undefined space
 12574   300007                     	org	3145735
 12575   300007  FF                 	db	255
 12576                           
 12577                           ;Config register CONFIG5L @ 0x300008
 12578                           ;	Code Protection Block 0
 12579                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12580                           ;	Code Protection Block 1
 12581                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12582                           ;	Code Protection Block 2
 12583                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12584                           ;	Code Protection Block 3
 12585                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12586   300008                     	org	3145736
 12587   300008  0F                 	db	15
 12588                           
 12589                           ;Config register CONFIG5H @ 0x300009
 12590                           ;	Boot Block Code Protection bit
 12591                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12592                           ;	Data EEPROM Code Protection bit
 12593                           ;	CPD = OFF, Data EEPROM not code-protected
 12594   300009                     	org	3145737
 12595   300009  C0                 	db	192
 12596                           
 12597                           ;Config register CONFIG6L @ 0x30000A
 12598                           ;	Write Protection Block 0
 12599                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12600                           ;	Write Protection Block 1
 12601                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12602                           ;	Write Protection Block 2
 12603                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12604                           ;	Write Protection Block 3
 12605                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12606   30000A                     	org	3145738
 12607   30000A  0F                 	db	15
 12608                           
 12609                           ;Config register CONFIG6H @ 0x30000B
 12610                           ;	Configuration Register Write Protection bit
 12611                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12612                           ;	Boot Block Write Protection bit
 12613                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12614                           ;	Data EEPROM Write Protection bit
 12615                           ;	WRTD = OFF, Data EEPROM not write-protected
 12616   30000B                     	org	3145739
 12617   30000B  E0                 	db	224
 12618                           
 12619                           ;Config register CONFIG7L @ 0x30000C
 12620                           ;	Table Read Protection Block 0
 12621                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12622                           ;	Table Read Protection Block 1
 12623                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12624                           ;	Table Read Protection Block 2
 12625                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12626                           ;	Table Read Protection Block 3
 12627                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12628   30000C                     	org	3145740
 12629   30000C  0F                 	db	15
 12630                           
 12631                           ;Config register CONFIG7H @ 0x30000D
 12632                           ;	Boot Block Table Read Protection bit
 12633                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12634   30000D                     	org	3145741
 12635   30000D  40                 	db	64
 12636                           tosu	equ	0xFFF
 12637                           tosh	equ	0xFFE
 12638                           tosl	equ	0xFFD
 12639                           stkptr	equ	0xFFC
 12640                           pclatu	equ	0xFFB
 12641                           pclath	equ	0xFFA
 12642                           pcl	equ	0xFF9
 12643                           tblptru	equ	0xFF8
 12644                           tblptrh	equ	0xFF7
 12645                           tblptrl	equ	0xFF6
 12646                           tablat	equ	0xFF5
 12647                           prodh	equ	0xFF4
 12648                           prodl	equ	0xFF3
 12649                           indf0	equ	0xFEF
 12650                           postinc0	equ	0xFEE
 12651                           postdec0	equ	0xFED
 12652                           preinc0	equ	0xFEC
 12653                           plusw0	equ	0xFEB
 12654                           fsr0h	equ	0xFEA
 12655                           fsr0l	equ	0xFE9
 12656                           wreg	equ	0xFE8
 12657                           indf1	equ	0xFE7
 12658                           postinc1	equ	0xFE6
 12659                           postdec1	equ	0xFE5
 12660                           preinc1	equ	0xFE4
 12661                           plusw1	equ	0xFE3
 12662                           fsr1h	equ	0xFE2
 12663                           fsr1l	equ	0xFE1
 12664                           bsr	equ	0xFE0
 12665                           indf2	equ	0xFDF
 12666                           postinc2	equ	0xFDE
 12667                           postdec2	equ	0xFDD
 12668                           preinc2	equ	0xFDC
 12669                           plusw2	equ	0xFDB
 12670                           fsr2h	equ	0xFDA
 12671                           fsr2l	equ	0xFD9
 12672                           status	equ	0xFD8

Data Sizes:
    Strings     370
    Constant    0
    Data        4
    BSS         455
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     79     156
    BANK1           256      0     124
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    atox@ep	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2262(BANK1[32]), 

    atox@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    atox@pll	PTR unsigned long long  size(1) Largest target is 8
		 -> vfsfcnvrt@llu(BANK0[8]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    decode_dtc@dtc	PTR unsigned char  size(2) Largest target is 60
		 -> dtc_codes(BANK1[60]), 

    extract_two_pid_bytes@A	PTR unsigned char  size(1) Largest target is 1
		 -> print_AI_Temp@A(COMRAM[1]), print_RPM@A(COMRAM[1]), 

    extract_two_pid_bytes@B	PTR unsigned char  size(1) Largest target is 1
		 -> print_AI_Temp@B(COMRAM[1]), print_RPM@B(COMRAM[1]), 

    extract_two_pid_bytes@pid	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), STR_28(CODE[6]), 

    extract_two_pid_bytes@ptr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), 
		 -> dtc_codes(BANK1[60]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fgetc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    fgetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), 
		 -> dtc_codes(BANK1[60]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    fgetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), 
		 -> dtc_codes(BANK1[60]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), dtc_codes(BANK1[60]), rpm_string(BANK0[16]), 
		 -> STR_11(CODE[17]), STR_12(CODE[16]), STR_13(CODE[2]), STR_14(CODE[2]), 
		 -> STR_2(CODE[17]), STR_20(CODE[6]), STR_21(CODE[4]), STR_23(CODE[6]), 
		 -> STR_24(CODE[6]), STR_25(CODE[4]), STR_3(CODE[15]), STR_30(CODE[4]), 
		 -> STR_31(CODE[4]), STR_32(CODE[2]), STR_34(CODE[4]), STR_36(CODE[5]), 
		 -> STR_37(CODE[13]), STR_38(CODE[14]), STR_40(CODE[16]), STR_41(CODE[11]), 
		 -> STR_45(CODE[14]), STR_46(CODE[14]), STR_47(CODE[15]), STR_48(CODE[17]), 
		 -> STR_50(CODE[14]), STR_51(CODE[11]), STR_52(CODE[16]), STR_53(CODE[11]), 
		 -> STR_6(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2051$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), 
		 -> dtc_codes(BANK1[60]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    S2051$source	PTR const unsigned char  size(2) Largest target is 0

    skipws@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_19(CODE[3]), STR_29(CODE[3]), STR_39(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 60
		 -> air_intake_string(BANK0[16]), dtc_codes(BANK1[60]), rpm_string(BANK0[16]), 

    sscanf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sscanf(BANK0[2]), 

    sscanf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_15(CODE[6]), STR_43(CODE[3]), STR_44(CODE[3]), 

    sscanf@s	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), STR_28(CODE[6]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), STR_28(CODE[6]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), STR_28(CODE[6]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 256
		 -> buffer(BANK2[256]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[6]), STR_28(CODE[6]), 

    __strtoxll@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2262(BANK1[32]), 

    __strtoxll@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> atox@ep(BANK0[2]), 

    __strtoxll@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2262(BANK1[32]), 

    UART1_SendString@string	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), STR_10(CODE[6]), STR_16(CODE[6]), STR_22(CODE[6]), 
		 -> STR_26(CODE[6]), STR_33(CODE[5]), STR_35(CODE[6]), STR_4(CODE[6]), 
		 -> STR_42(CODE[4]), STR_49(CODE[4]), STR_5(CODE[5]), STR_7(CODE[5]), 

    ungetc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    ungetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> air_intake_string(BANK0[16]), buffer(BANK2[256]), diagnostic_trouble_codes@byte1_str(BANK0[3]), diagnostic_trouble_codes@byte2_str(BANK0[3]), 
		 -> dtc_codes(BANK1[60]), rpm_string(BANK0[16]), NULL(NULL[0]), 

    ungetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_19(CODE[3]), STR_29(CODE[3]), STR_39(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_19(CODE[3]), STR_29(CODE[3]), STR_39(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_19(CODE[3]), STR_29(CODE[3]), STR_39(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfscanf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfscanf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_15(CODE[6]), STR_43(CODE[3]), STR_44(CODE[3]), 

    vfscanf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_15(CODE[6]), STR_43(CODE[3]), STR_44(CODE[3]), 

    vfscanf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    vfsfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfsfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfscanf@cfmt(BANK0[2]), 

    vfsfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sscanf@f(BANK0[11]), 

    vfsfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> diagnostic_trouble_codes@byte1(BANK0[2]), diagnostic_trouble_codes@byte2(BANK0[2]), extract_two_pid_bytes@a(BANK0[2]), extract_two_pid_bytes@b(BANK0[2]), 
		 -> ?_sprintf(COMRAM[2]), ?_sscanf(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _welcome_splash->_LCD_write_variable
    _LCD_write_variable->___aldiv
    _live_reading_mode->_print_RPM
    _print_Vbatt->_LCD_write_string
    _strstr->_strncmp
    _display_system_info->_print_ELMVer
    _display_system_info->_print_SAEVer
    _print_SAEVer->_LCD_write_string
    _print_ELMVer->_LCD_write_string
    _diagnostic_trouble_codes->_decode_dtc
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atox
    _atox->___strtoxll
    _skipws->_fgetc
    _fgetc->_getch
    ___strtoxll->___omul
    _decode_dtc->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _ctoa->_fputc
    _clear_diagnostic_codes->_LCD_write_string
    _parsing_notif->_LCD_write_string
    _display_mm->_LCD_write_string
    _clear_parsing_notif->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _UART1_SendString->_UART1_SendChar
    _LCD_configure_cursor_blink->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_main_menu
    _main_menu->_diagnostic_trouble_codes
    _print_RPM->_extract_two_pid_bytes
    _print_AI_Temp->_extract_two_pid_bytes
    _extract_two_pid_bytes->_sscanf
    _diagnostic_trouble_codes->_sscanf
    _sscanf->_vfscanf
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atox

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   98589
                                             77 BANK0      2     2      0
                           _ADC_init
                          _LCD_clear
                           _LCD_init
                         _UART1_Init
                   _UART1_SendString
                         _input_init
                          _main_menu
                     _welcome_splash
 ---------------------------------------------------------------------------------
 (1) _welcome_splash                                       6     6      0    4103
                                             27 COMRAM     6     6      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                 _LCD_write_variable
                   _UART1_SendString
                            ___lwdiv
                            ___lwmod
                          _ccp1_init
                          _tmr1_init
 ---------------------------------------------------------------------------------
 (2) _tmr1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ccp1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_write_variable                                  11     6      5    1522
                                             16 COMRAM    11     6      5
                     _LCD_write_data
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8      94
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     300
                                              2 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            2     2      0   93145
                                             75 BANK0      2     2      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
             _clear_diagnostic_codes
           _diagnostic_trouble_codes
                         _display_mm
                _display_system_info
                  _live_reading_mode
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _live_reading_mode                                    0     0      0   50281
                      _print_AI_Temp
                          _print_RPM
                        _print_Vbatt
 ---------------------------------------------------------------------------------
 (3) _print_Vbatt                                          1     1      0    6125
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _print_RPM                                            4     4      0   22319
                                             86 COMRAM     4     4      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                            ___awdiv
                _clear_parsing_notif
                         _display_mm
              _extract_two_pid_bytes
                      _parsing_notif
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     451
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_AI_Temp                                        3     3      0   21837
                                             86 COMRAM     3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
              _extract_two_pid_bytes
                      _parsing_notif
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _extract_two_pid_bytes                               10     6      4    9493
                                             59 BANK0     10     6      4
                             _sscanf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               6     2      4     860
                                              9 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     266
                                              2 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     136
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     136
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _display_system_info                                  0     0      0   13328
                     _LCD_cursor_set
                   _LCD_write_string
                       _print_ELMVer
                       _print_SAEVer
 ---------------------------------------------------------------------------------
 (3) _print_SAEVer                                         1     1      0    5989
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (3) _print_ELMVer                                         1     1      0    5989
                                             10 COMRAM     1     1      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
 ---------------------------------------------------------------------------------
 (2) _diagnostic_trouble_codes                            16    16      0   20202
                                             59 BANK0     16    16      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _decode_dtc
                      _parsing_notif
                             _sscanf
 ---------------------------------------------------------------------------------
 (5) _sscanf                                              22    14      8    8148
                                             37 BANK0     22    14      8
                             _strlen (ARG)
                            _vfscanf
 ---------------------------------------------------------------------------------
 (6) _vfscanf                                             10     6      4    7844
                                             27 BANK0     10     6      4
                          _vfsfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfsfcnvrt                                           36    32      4    7453
                                             84 COMRAM     2     2      0
                                             10 BANK0     17    13      4
                               _atox
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (8) _atox                                                20    18      2    4820
                                             74 COMRAM    10     8      2
                                              0 BANK0     10    10      0
                         ___strtoxll
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (8) _skipws                                               4     3      1     779
                                             13 COMRAM     4     3      1
                              _fgetc
                             _ungetc
 ---------------------------------------------------------------------------------
 (8) _ungetc                                               5     2      3     303
                                              2 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (9) _fgetc                                                9     7      2     312
                                              4 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (10) _getch                                               2     0      2       0
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) ___strtoxll                                          48    40      8    2113
                                             26 COMRAM    48    40      8
                             ___omul
 ---------------------------------------------------------------------------------
 (10) ___omul                                             24     8     16     142
                                              2 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) _decode_dtc                                          12     6      6    6454
                                             77 COMRAM    12     6      6
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             24    14     10    6244
                                             55 COMRAM    22    12     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             6     2      4    5908
                                             49 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           13    10      3    5672
                                             36 COMRAM    13    10      3
                               _ctoa
                              _fputc
                 _read_prec_or_width
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                12     9      3    1572
                                             24 COMRAM    12     9      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _utoa                                                 8     5      3    1998
                                             24 COMRAM     8     5      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  8     3      5    1133
                                             16 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (9) _fputs                                                6     3      3     505
                                             10 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     244
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     253
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _read_prec_or_width                                   7     5      2     266
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     5      2     622
                                             10 COMRAM     7     5      2
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               8     5      3     353
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_diagnostic_codes                               4     4      0    6452
                                             10 COMRAM     4     4      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                _clear_parsing_notif
                         _display_mm
                      _parsing_notif
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _parsing_notif                                        0     0      0    1350
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _display_mm                                           0     0      0    1350
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (4) _clear_parsing_notif                                  0     0      0    1350
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     5     3      2     617
                                              5 COMRAM     5     3      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (3) _LCD_write_data                                       3     3      0     376
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_set                                       2     1      1     733
                                              5 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _UART1_SendString                                     6     4      2     213
                                              3 COMRAM     6     4      2
                     _UART1_SendChar
 ---------------------------------------------------------------------------------
 (3) _UART1_SendChar                                       1     1      0      47
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_configure_cursor_blink                           1     1      0     423
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _input_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     752
                                              6 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     376
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_write_command                                    3     3      0     376
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART_ISR                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _UART1_Init
   _UART1_SendString
     _UART1_SendChar
   _input_init
   _main_menu
     _LCD_clear
     _LCD_configure_cursor_blink
       _LCD_write_command
     _LCD_cursor_set
       _LCD_write_command
     _clear_diagnostic_codes
       _LCD_clear
       _LCD_configure_cursor_blink
       _LCD_cursor_set
       _LCD_write_string
         _LCD_write_data
           _LCD_pulse_clock
       _UART1_SendString
       _clear_parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _display_mm
         _LCD_cursor_set
         _LCD_write_string
       _parsing_notif
         _LCD_cursor_set
         _LCD_write_string
       _readADC
     _diagnostic_trouble_codes
       _LCD_clear
       _LCD_cursor_set
       _LCD_write_string
       _UART1_SendString
       _clear_parsing_notif
       _decode_dtc
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _fputc
                   _putch
               _fputc
               _read_prec_or_width
               _utoa
                 ___lwdiv
                 ___lwmod
                 _pad
                   _fputc
                   _fputs
                     _fputc
               _xtoa
                 _pad
       _parsing_notif
       _sscanf
         _strlen (ARG)
         _vfscanf (ARG)
           _vfsfcnvrt
             _atox
               ___strtoxll
                 ___omul
               _fgetc
                 _getch
               _skipws
                 _fgetc
                 _ungetc
               _ungetc
             _fgetc
             _skipws
             _ungetc
     _display_mm
     _display_system_info
       _LCD_cursor_set
       _LCD_write_string
       _print_ELMVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
       _print_SAEVer
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
     _live_reading_mode
       _print_AI_Temp
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _extract_two_pid_bytes
           _sscanf
           _strlen
           _strstr
             _strchr
             _strlen
             _strncmp
         _parsing_notif
         _sprintf
       _print_RPM
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         ___awdiv
         _clear_parsing_notif
         _display_mm
         _extract_two_pid_bytes
         _parsing_notif
         _sprintf
       _print_Vbatt
         _LCD_clear
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _clear_parsing_notif
         _display_mm
         _parsing_notif
         _strchr
     _readADC
   _welcome_splash
     _LCD_clear
     _LCD_cursor_set
     _LCD_write_string
     _LCD_write_variable
       _LCD_write_data
       ___aldiv
       ___almod
       ___lmul
       ___lwdiv (ARG)
     _UART1_SendString
     ___lwdiv
     ___lwmod
     _ccp1_init
     _tmr1_init

 _UART_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     124     48.4%
BITBANK0           160      0       0      0.0%
BANK0              160     79     156     97.5%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     90      92     97.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        70      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     621      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri May 02 19:41:07 2025

                      ___awdiv@sign 0008                                 l202 3364  
                               l211 3432                                 l220 122E  
                               l205 3392                                 l302 2D4C  
                               l310 2CBA                                 l152 34A0  
                               l400 3086                                 l208 341A  
                               l401 309C                                 l313 332E  
                               l306 2C3A                                 l155 33BE  
                               l403 30B8                                 l323 2480  
                               l172 316C                                 l149 347A  
                               l261 2A58                                 l181 345A  
                               l334 0CDE                                 l502 2F14  
                               l175 3436                                 l503 2F24  
                               l424 33E4                                 l184 346A  
                               l265 19A6                                 l281 22BE  
                               l178 3448                                 l370 1644  
                               l427 3402                                 l275 21E8  
                               l356 1538                                 l508 2AD6  
                               l268 1AC0                                 l196 1820  
                               l509 2AF6                                 l285 1AD2  
                               l390 20EC                                 l294 3488  
                               l199 3332                                 l288 1BE6  
                               l472 18F6                                 l393 1FF0  
                               l457 2E46                                 l298 2CCC  
                               l722 26CC                                 l570 1CF0  
                               l387 3494                                 l396 2DCC  
                               l399 3070                                 l583 21D6  
                               l479 1994                                 l982 2EB2  
                               l992 3050                                 l989 2EBA  
                               l999 3058                                 _RPM 00CC  
                               _pad 2B94                                 wreg 0FE8  
                        _TXSTA1bits 0FAC                                l1201 2C28  
                              l1212 27F0                                l1300 31FC  
                              l1215 282E                                l1217 284C  
                              l1243 29AA                                l1227 23A6  
                              l1331 067C                                l1260 1454  
                              l3021 33A6                                l3013 346C  
                              l1430 0346                                l1350 07B8  
                              l3015 3496                                l3031 33B6  
                              l3023 33AE                                l1247 29B2  
                              l1239 1EF4                                l1431 03AC  
                              l1327 2F8E                                l1504 32F8  
                              l3017 349A                                l3033 33B8  
                              l3025 33B0                                l1273 323E  
                              l1178 327E                                l1442 0428  
                              l1338 06DA                                l1370 0FFA  
                              l3035 33BA                                l3027 33B2  
                              l3019 3394                                l1451 057E  
                              l1427 02B8                                l1339 09AE  
                              l1196 2BCA                                l1524 2546  
                              l3037 33BC                                l3029 33B4  
                              l1285 2906                                l1293 32BE  
                              l1437 03BC                                l1517 278C  
                              l1199 2C08                                l1455 0648  
                              l1447 0476                                l1480 2B92  
                              l1393 25C8                                l1394 2602  
                              l1395 260A                                l1492 34AC  
                              l1476 1DF2                                l1495 316E  
                              l6001 13A4                                l1489 34A6  
                              l1497 31B8                                l4331 3330  
                              l6003 13BC                                l4333 3340  
                              l6005 13DA                                l6021 1432  
                              l6101 2726                                l4335 334E  
                              l6015 1402                                l6031 2562  
                              l6111 2784                                l6009 13EE  
                              l6017 1422                                l5401 1DEA  
                              l6041 25A4                                l6033 256E  
                              l6121 31D8                                l6105 2732  
                              l6201 2624                                l4601 1CAE  
                              l5411 329E                                l6131 321A  
                              l6035 2576                                l6043 25AC  
                              l6027 2548                                l6123 31F4  
                              l6115 31BA                                l6051 2482  
                              l6107 275A                                l6211 264A  
                              l6203 2628                                l4611 1CE0  
                              l4603 1CB0                                l6141 33FA  
                              l5405 3280                                l6133 3236  
                              l5341 2A5A                                l5501 0388  
                              l5421 2F6A                                l5413 2F26  
                              l6045 25D0                                l6037 2590  
                              l6029 2550                                l6117 31C8  
                              l6061 24CE                                l6053 249C  
                              l6109 276C                                l6221 2680  
                              l6213 265C                                l6205 2636  
                              l6301 2214                                l4605 1CBA  
                              l4621 210E                                ?_pad 0011  
                              l6071 3436                                l6143 3118  
                              l6151 3366                                l5351 284E  
                              l5407 328C                                l6127 31FE  
                              l5343 2A66                                l5511 0432  
                              l5503 03DC                                l5431 0112  
                              l5423 00E0                                l5415 2F2A  
                              l6047 25E4                                l6119 31D0  
                              l6063 24EA                                l6223 2696  
                              l6215 2664                                l6231 26AC  
                              l6207 263E                                l6311 223C  
                              l6303 2218                                l4607 1CC0  
                              l4631 214E                                l4623 2112  
                              l4615 20EE                                l6137 33E6  
                              l6241 33D2                                l6073 3444  
                              l6145 3124                                l6081 3098  
                              l6161 341C                                l6153 3370  
                              l5361 28C6                                l5353 285E  
                              l5409 329A                                l5601 2BEA  
                              l6129 320A                                l5345 2A74  
                              l5521 0512                                l5513 044A  
                              l5505 03F8                                l5441 0170  
                              l5433 0124                                l5425 00E2  
                              l5417 2F3E                                l6049 25F6  
                              l6401 2D24                                l6065 24FC  
                              l6057 24A8                                l6233 26BC  
                              l6225 269E                                l6217 266C  
                              l6209 2642                                l6321 2276  
                              l6313 2240                                l6305 221C  
                              l4609 1CD0                                l4641 21A0  
                              l4633 215A                                l4625 2120  
                              l4617 20F0                                l4561 2EBC  
                              l6139 33EC                                l6243 33DA  
                              l6147 3140                                l6083 30AE  
                              l6075 305C                                l6091 2E06  
                              l6163 3426                                l6155 337C  
                              l5355 286E                                l5603 2C18  
                              l5347 2A94                                l5523 0540  
                              l5531 05AA                                l5515 044E  
                              l5507 0410                                l5451 01BE  
                              l5443 0180                                l5435 0132  
                              l5427 00EE                                l5339 34A2  
                              l5371 2B20                                l5419 2F56  
                              l5611 0670                                l6403 2D2E  
                              l6411 2C2A                                l6067 2524  
                              l6059 24B6                                l6171 29F4  
                              l6331 1AC2                                l6235 26C4  
                              l6227 26A0                                l6219 267A  
                              l6251 19C4                                l6323 229C  
                              l6315 224A                                l6307 2226  
                              l4571 1BE8                                l4635 2168  
                              l4643 21A6                                l4627 2130  
                              l4619 20FE                                l4563 2ECC  
                              l4651 344A                                l6245 33DE  
                              l6149 3144                                l6085 30B2  
                              l6077 306C                                l6093 2E08  
                              l6157 3404                                l5357 2878  
                              l5701 27A2                                l5349 2AA6  
                              l5541 0604                                l5533 05BA  
                              l5525 0550                                l5509 041A  
                              l5461 020A                                l5453 01D2  
                              l5445 0192                                l5437 0144  
                              l5429 00F6                                l5381 1CF2  
                              l5373 2B34                                l5365 2AF8  
                              l5621 06C8                                l5613 0684  
                              l5605 064A                                l6405 2D3A  
                              l6421 2C6E                                l6413 2C48  
                              l6173 2A3C                                l6165 29B4  
                              l6341 1B06                                l6333 1AE0  
                              l6229 26A6                                l6253 19D2  
                              l6261 19E4                                l6325 22AC  
                              l6317 2260                                l6309 222A  
                              l6501 347C                                l4581 1C1A  
                              l4573 1BEA                                l4645 21B6  
                              l4637 2186                                l4629 2146  
                              l4565 2EDA                                l4653 3452  
                              l6239 33C2                                l6079 3082  
                              l6087 2DCE                                l6159 340E  
                              l5359 2894                                l5703 27AE  
                              l5551 2E48                                l6191 3270  
                              l6183 3240                                l7071 2402  
                              l5543 0612                                l5527 059E  
                              l5519 0484                                l5535 05C0  
                              l5471 025C                                l5463 021C  
                              l5447 01AA                                l5439 0160  
                              l5391 1D58                                l5383 1D02  
                              l5375 2B40                                l5631 073C  
                              l5623 06E6                                l5615 0690  
                              l5607 0654                                l6511 09CC  
                              l6407 2D46                                l6431 2C9C  
                              l6415 2C58                                l6423 2C78  
                              l6095 26CE                                l6175 2A50  
                              l6167 29D0                                l6351 1B2A  
                              l6335 1AF0                                l6271 1A02  
                              l6255 19D6                                l6263 19E8  
                              l6247 1996                                l6327 22B8  
                              l6319 226C                                l6503 3480  
                              l4591 1C5C                                l4583 1C2A  
                              l4575 1BF8                                l4647 21C6  
                              l4639 2196                                l4567 2EEA  
                              l4655 345C                                l6089 2DD4  
                              l7073 162E                                l6601 1478  
                              l5721 283E                                l5713 27E8  
                              l5705 27BA                                l5801 2978  
                              l5561 2E80                                l5553 2E50  
                              l6185 324C                                l6441 23AC  
                              l5545 061A                                l5537 05D4  
                              l5529 05A8                                l5481 02D0  
                              l5473 026C                                l5465 0230  
                              l5457 01E8                                l5449 01BC  
                              l5393 1D8A                                l5385 1D14  
                              l5377 2B46                                l5369 2B10  
                              l5641 0778                                l5633 0750  
                              l5625 06FA                                l5617 06A0  
                              l5609 065C                                l6521 0A02  
                              l6513 09D8                                l6409 2D4A  
                              l6433 2CA8                                l6417 2C66  
                              l6425 2C7C                                l6097 26E0  
                              l6169 29E4                                l6361 1B70  
                              l6353 1B2C                                l6337 1AFE  
                              l6345 1B10                                l6281 1A84  
                              l6273 1A28                                l6265 19FA  
                              l6257 19DA                                l6249 19B4  
                              l6329 22BC                                l6505 3484  
                              l4593 1C68                                l4585 1C2E  
                              l4577 1C08                                l4569 2EF4  
                              l6611 14B2                                l6603 1482  
                              l5715 27FC                                l5707 27C8  
                              l5803 2984                                l5571 2EAC  
                              l5563 2E86                                l5555 2E62  
                              l5731 22E2                                l5723 22C0  
                              l6187 3254                                l6443 23B4  
                              l5547 0628                                l5491 0324  
                              l5483 02EC                                l5475 0288  
                              l5467 0242                                l5459 01FA  
                              l5539 05F4                                l5395 1DC0  
                              l5387 1D24                                l5379 2B64  
                              l5651 07D8                                l5643 078E  
                              l5635 0760                                l5627 070E  
                              l5619 06B6                                l5811 0D30  
                              l6531 0A60                                l6523 0A14  
                              l6515 09E2                                l6507 09B0  
                              l6435 2CB4                                l6427 2C8E  
                              l6419 2C6A                                l6099 26F8  
                              l6179 2A56                                l6371 1BB6  
                              l6363 1B8A                                l6355 1B2E  
                              l6339 1B02                                l6347 1B14  
                              l6195 260C                                l6291 1ABA  
                              l6283 1A90                                l6275 1A56  
                              l6267 19FE                                l4595 1C76  
                              l4587 1C3E                                l4579 1C0C  
                              l6701 2D9C                                l6621 14F0  
                              l6613 14BA                                l6605 148E  
                              l5717 280C                                l5709 27D6  
                              l5565 2E9C                                l5557 2E6A  
                              l5581 3026                                l5573 2FF6  
                              l5741 233E                                l5733 2308  
                              l5725 22C4                                l6189 325C  
                              l6445 23BC                                l6453 23D4  
                              l5485 0304                                l5477 02A0  
                              l5469 0254                                l5493 032C  
                              l5397 1DD2                                l5389 1D3C  
                              l5661 0844                                l5645 07A2  
                              l5637 0764                                l5653 07EC  
                              l5629 0728                                l5821 0DB0  
                              l5813 0D52                                l5805 0CE0  
                              l6541 0AE6                                l6533 0A80  
                              l6525 0A1C                                l6517 09EE  
                              l6509 09C2                                l6437 2CB8  
                              l6429 2C92                                l6381 1BE4  
                              l6373 1BC0                                l6365 1B94  
                              l6357 1B54                                l6349 1B26  
                              l6197 260E                                l6293 1ABE  
                              l6285 1A9A                                l6277 1A60  
                              l6269 1A00                                l7069 1208  
                              l4597 1C80                                l4589 1C54  
                              l6461 1822                                l6711 2DAC  
                              l6703 2DA2                                l6631 152A  
                              l6623 14FA                                l6615 14C4  
                              l6607 1494                                l5719 2810  
                              l5567 2EA4                                l5559 2E72  
                              l5583 303C                                l5575 3008  
                              l5591 2BA4                                l5743 2350  
                              l5735 230A                                l5727 22D4  
                              l6447 23C4                                l6455 2428  
                              l6439 23A8                                l5495 033E  
                              l5479 02AA                                l5487 0310  
                              l5399 1DDA                                l5671 08A0  
                              l5663 0858                                l5655 0804  
                              l5639 0768                                l5831 0E02  
                              l5823 0DC6                                l5815 0D74  
                              l5807 0D04                                l6551 0B3A  
                              l6543 0B04                                l6535 0A9E  
                              l6527 0A20                                l6519 09FE  
                              l6391 2CFC                                l6383 2CBC  
                              l5903 32C0                                l6375 1BCA  
                              l6367 1BA0                                l6359 1B66  
                              l6199 261C                                l6287 1AA6  
                              l6279 1A7A                                l6295 21D8  
                              l4599 1C9E                                l6471 1878  
                              l6463 1824                                l6721 2DC8  
                              l6713 2DAE                                l6705 2DA6  
                              l6641 1568                                l6633 152E  
                              l6625 1508                                l6617 14D6  
                              l6609 14A0                                l5569 2EA6  
                              l5585 3044                                l5577 3010  
                              l5593 2BB4                                l5745 2360  
                              l5737 2310                                l5729 22DC  
                              l5761 1E16                                l5753 1DF4  
                              l6449 23CC                                l5497 0356  
                              l5489 0312                                l5681 094C  
                              l5665 087C                                l5657 0820  
                              l5649 07C4                                l5673 08A4  
                              l5833 0E1A                                l5825 0DD4  
                              l5817 0D80                                l5809 0D10  
                              l6561 0BB6                                l6553 0B4A  
                              l6545 0B0C                                l6537 0AAA  
                              l6529 0A3E                                l6393 2D00  
                              l6385 2CDA                                l5921 31B0  
                              l5913 316E                                l5905 32CC  
                              l6377 1BD4                                l6369 1BAA  
                              l6289 1AB0                                l6297 21F6  
                              l6801 1014                                l6481 18EA  
                              l6465 1832                                l5931 2078  
                              l6715 2DB2                                l6707 2DA8  
                              l6651 1596                                l6643 1578  
                              l6635 1546                                l6627 1518  
                              l6619 14E8                                l5587 304A  
                              l5579 3018                                l5595 2BC2  
                              l5747 237A                                l5739 232C  
                              l5771 1E48                                l5763 1E1C  
                              l5755 1DF8                                l5499 0364  
                              l5683 0960                                l5675 08C4  
                              l5659 0834                                l5667 088C  
                              l5835 0E30                                l5819 0D94  
                              l6571 0C2C                                l6563 0BD0  
                              l6555 0B6A                                l6539 0AC8  
                              l6387 2CEA                                l6395 2D0A  
                              l5915 3188                                l5907 32D0  
                              l6379 1BE0                                l6299 2206  
                              l6811 105A                                l6803 1024  
                              l6491 1944                                l6483 18F0  
                              l6475 189C                                l6467 1866  
                              l6731 1670                                l6723 1646  
                              l5693 348A                                l5933 209A  
                              l5925 1FF4                                l6717 2DB8  
                              l6709 2DAA                                l5941 1EF8  
                              l6661 15E4                                l6653 15AC  
                              l6645 157C                                l6637 1556  
                              l6629 1526                                l5597 2BD6  
                              l5589 2B94                                l5749 238A  
                              l5781 1E9E                                l5773 1E4A  
                              l5765 1E2C                                l5757 1E08  
                              l5685 0972                                l5669 089C  
                              l5677 08DA                                l5861 0EA0  
                              l5837 0E3C                                l5845 0E4E  
                              l5853 0E80                                l5829 0DE0  
                              l6581 0C90                                l6565 0C00  
                              l6557 0B7A                                l6573 0C48  
                              l6549 0B2E                                l6389 2CF8  
                              l6397 2D0E                                l5909 32EC  
                              l6821 109C                                l6813 1064  
                              l6805 102E                                l6493 1956  
                              l6485 1906                                l6477 18D4  
                              l6469 1876                                l6741 169A  
                              l6733 167A                                l6725 1656  
                              l5695 348C                                l5935 20BA  
                              l5927 1FF6                                l6719 2DC0  
                              l5951 1FBE                                l5943 1EFA  
                              l6663 15F2                                l6655 15B6  
                              l6647 158E                                l5791 2908  
                              l5599 2BE6                                l5783 1EAE  
                              l5775 1E50                                l5767 1E34  
                              l5759 1E10                                l5687 098A  
                              l5679 08EA                                l5871 0F46  
                              l5863 0EC4                                l5847 0E62  
                              l5839 0E40                                l6591 0CDC  
                              l6583 0C9E                                l6575 0C5A  
                              l6567 0C06                                l6559 0B9E  
                              l6399 2D20                                l5919 3194  
                              l6903 11F0                                l6831 10DE  
                              l6823 10A6                                l6815 106E  
                              l6807 1038                                l6495 1982  
                              l6487 190E                                l6751 16C0  
                              l6743 16A2                                l6735 1686  
                              l6727 165A                                l5697 3492  
                              l5937 20D4                                l5929 2074  
                              l5953 1FD8                                l5945 1F78  
                              l6665 15FE                                l6657 15C2  
                              l6649 1592                                l6673 1618  
                              l6593 1456                                l5793 2910  
                              l5785 1EC8                                l5769 1E38  
                              l5777 1E70                                l5961 127C  
                              l5689 09A6                                l5881 0F9C  
                              l5873 0F4A                                l5865 0EEC  
                              l5849 0E72                                l6585 0CAA  
                              l6577 0C68                                l6569 0C0E  
                              l6681 3304                                l6841 1120  
                              l6905 122E                                l6833 10E4  
                              l6825 10B8                                l6817 1080  
                              l6809 1048                                l6497 1984  
                              l6489 1942                                l6761 1736  
                              l6753 16CA                                l6745 16AA  
                              l6737 1692                                l6729 1664  
                              l6921 2FA8                                l6913 2F90  
                              l5939 20E8                                l6691 2D80  
                              l5955 1FEC                                l5947 1F7C  
                              l6659 15C8                                l6595 145E  
                              l5699 278E                                l5795 2932  
                              l5779 1E8C                                l5787 1ED8  
                              l5971 12A8                                l5963 128A  
                              l5891 0FF6                                l5875 0F5A  
                              l5867 0EF8                                l5883 0FB0  
                              l5859 0E90                                l6587 0CB4  
                              l6579 0C74                                l6683 3310  
                              l6851 1156                                l6843 1124  
                              l6835 10F2                                l6827 10CA  
                              l6819 1092                                l6763 173E  
                              l6755 16F2                                l6747 16B8  
                              l6739 1696                                l6923 2FC0  
                              l6915 2F94                                l6693 2D82  
                              l6685 2D4E                                l5949 1F9E  
                              l6597 1462                                l5797 293E  
                              l5981 12F2                                l5965 128E  
                              l5957 124E                                l5877 0F70  
                              l5869 0F1A                                l6589 0CD8  
                              l6861 1188                                l6853 115A  
                              l6845 1132                                l6837 1104  
                              l6829 10D4                                l6781 1798  
                              l6773 176E                                l6765 1740  
                              l6757 1718                                l6749 16BC  
                              l6925 2FCC                                l6917 2F98  
                              l6695 2D84                                l6687 2D66  
                              l6599 146C                                l5799 295A  
                              l5991 134E                                l5983 1302  
                              l5975 12B0                                l5967 1294  
                              l5959 1270                                l5879 0F88  
                              l6679 32FA                                l6871 11B2  
                              l6855 1164                                l6847 1144  
                              l6839 1112                                l6791 17FC  
                              l6775 1776                                l6783 17B4  
                              l6767 1742                                l6759 1724  
                              l6927 2FE6                                l6919 2F9C  
                              l6697 2D86                                l6689 2D7E  
                              l5985 130C                                l5969 1298  
                              l5977 12CE                                l5889 0FE2  
                              l6857 1168                                l6849 1152  
                              l6793 1808                                l6785 17C2  
                              l6777 1780                                l6769 1754  
                              l6929 2FEA                                l6699 2D8A  
                              l5987 132E                                l5995 135E  
                              l5979 12DE                                l6891 11CC  
                              l6859 1176                                l6795 0FFC  
                              l6787 17CE                                l6779 178C  
                              l5997 136C                                l5989 133A  
                              l6893 11DE                                l6869 119A  
                              l6797 1000                                l6789 17E4  
                              l5999 1388                                l6887 11BA  
                              l6799 1004                                l6889 11BE  
                              STR_1 FF9A                                STR_2 FE9E  
                              STR_3 FF23                                STR_4 FFA0  
                              STR_5 FFD6                                STR_6 FE8D  
                              STR_7 FFD6                                STR_8 FEE2  
                              STR_9 FEC0                                u6000 057E  
                              u6001 057A                                u6010 05D4  
                              u6011 05D0                                u6100 2BA4  
                              u6020 0604                                u6101 2BA0  
                              u6021 0600                                u6110 2BC2  
                              u6030 0612                                u6111 2BBE  
                              u6031 060E                                u7000 306C  
                              u4440 3340                                u6040 2E62  
                              u6120 2C08                                u6200 0728  
                              u7001 3068                                u4441 333C  
                              u6041 2E5E                                u6121 2C04  
                              u6201 0724                                u7010 3082  
                              u6050 2E80                                u6130 2C18  
                              u6210 0750                                u7011 307E  
                              u6051 2E7C                                u6131 2C14  
                              u6211 074C                                u7020 3098  
                              u6060 2E9C                                u6300 087C  
                              u6220 078E                                u6140 0670  
                              u7100 2784                                u4700 1C54  
                              u7021 3094                                u6061 2E98  
                              u6301 0878                                u6221 078A  
                              u6141 066C                                u7101 2780  
                              u4701 1C50                                u7030 30AE  
                              u6070 3008                                u7110 3236  
                              u6310 08C4                                u6230 07A2  
                              u6150 06B6                                u4710 1C76  
                              u7031 30AA                                u6071 3004  
                              u7111 3232                                u5511 2A60  
                              u6311 08C0                                u6231 079E  
                              u6151 06B2                                u4711 1C72  
                              u7120 316C                                u7040 2E02  
                              u6400 27E4                                u6080 3026  
                              u5520 2A74                                u5600 2B34  
                              u6320 08DA                                u6240 07B4  
                              u6160 06C8                                u7200 26BC  
                              u4720 1C9E                                u7121 3168  
                              u6401 27E0                                u6081 3022  
                              u5521 2A70                                u5601 2B30  
                              u6321 08D6                                u6241 07B0  
                              u6161 06C4                                u7201 26B8  
                              u4721 1C9A                                u7210 33D2  
                              u7050 2E36                                u6410 282E  
                              u6090 303C                                u5530 2AD6  
                              u5610 2B64                                u6330 0960  
                              u6250 07D8                                u6170 06DA  
                              u7130 29E4                                u4730 1CD0  
                              u7211 33CE                                u6411 282A  
                              u6091 3038                                u5531 2AD2  
                              u5611 2B60                                u6331 095C  
                              u6251 07D4                                u6171 06D6  
                              u7131 29E0                                u4731 1CCC  
                              u7060 2E46                                u5540 285E  
                              u6420 283E                                u6500 1E8C  
                              u5620 1D02                                u6340 0972  
                              u6260 0804                                u6180 06FA  
                              u7140 2A3C                                u7300 1AE0  
                              u7220 19B4                                u4740 20FE  
                              u4660 2EDA                                u7061 2E42  
                              u5541 285A                                u6421 283A  
                              u6501 1E88                                u5701 00E8  
                              u5621 1CFE                                u6341 096E  
                              u6261 0800                                u6181 06F6  
                              u7141 2A38                                u7301 1ADC  
                              u7221 19B0                                u4741 20FA  
                              u4661 2ED6                                u5550 286E  
                              u6430 233E                                u6510 1E9E  
                              u5710 0112                                u5630 1D14  
                              u6350 098A                                u6270 0820  
                              u6190 070E                                u7070 26E0  
                              u7310 1AFE                                u7150 261C  
                              u7230 19D2                                u4750 2120  
                              u4670 2F14                                u7047 2DF8  
                              u5551 286A                                u6431 233A  
                              u6511 1E9A                                u5711 010E  
                              u5631 1D10                                u6351 0986  
                              u6271 081C                                u6191 070A  
                              u7071 26DC                                u7311 1AFA  
                              u7151 2618                                u7231 19CE  
                              u4751 211C                                u4671 2F10  
                              u8007 1812                                u5560 2894  
                              u6440 2350                                u6520 1EAE  
                              u5800 021C                                u5720 0124  
                              u5640 1D58                                u6360 099C  
                              u6280 0834                                u6600 0D52  
                              u7080 2726                                u7320 1B26  
                              u7160 2636                                u7240 19FA  
                              u4680 1BF8                                u4760 2146  
                              u7057 2E2C                                u5561 2890  
                              u6441 234C                                u6521 1EAA  
                              u5801 0218                                u5721 0120  
                              u5641 1D54                                u6361 0996  
                              u6281 0830                                u6601 0D4E  
                              u7081 2722                                u7321 1B22  
                              u7161 2632                                u7241 19F6  
                              u8017 10FA                                u4681 1BF4  
                              u4761 2142                                u5570 28C6  
                              u6450 2360                                u6530 1EC8  
                              u5810 0230                                u5730 0144  
                              u5650 1DD2                                u6370 099E  
                              u6290 0858                                u6610 0D74  
                              u7090 276C                                u7330 1B54  
                              u7170 265C                                u7250 1A28  
                              u4690 1C1A                                u4770 2168  
                              u5571 28C2                                u6451 235C  
                              u6531 1EC4                                u5811 022C  
                              u5731 0140                                u5651 1DCE  
                              u6291 0854                                u6611 0D70  
                              u8107 2C4E                                u7091 2768  
                              u7331 1B50                                u7171 2658  
                              u7251 1A24                                u8027 113A  
                              u4691 1C16                                u4771 2164  
                              u6380 27A2                                u5660 32BE  
                              u6460 237A                                u6540 1ED8  
                              u5900 033E                                u5820 0242  
                              u5740 015C                                u5580 2B0C  
                              u6700 0F70                                u6620 0DB0  
                              u7500 0A80                                u7340 2CDA  
                              u7180 267A                                u7260 21F6  
                              u4780 2186                                u7420 1832  
                              u6381 279E                                u5661 32BA  
                              u6461 2376                                u6541 1ED4  
                              u7405 23E0                                u5901 033A  
                              u5821 023E                                u5741 0158  
                              u5581 2B08                                u6701 0F6C  
                              u6621 0DAC                                u7501 0A7C  
                              u8117 2CE0                                u7341 2CD6  
                              u7181 2676                                u7261 21F2  
                              u8037 117E                                u4781 2182  
                              u7421 182E                                u6390 27C8  
                              u6550 2932                                u6470 238A  
                              u5910 0356                                u5830 0254  
                              u5750 0192                                u5590 2B20  
                              u5670 2F3E                                u6710 0F88  
                              u6630 0E02                                u7510 0A9E  
                              u7350 2CF8                                u7190 2696  
                              u7270 2214                                u4790 21B6  
                              u7430 1898                                u8207 348E  
                              u8127 150E                                u6391 27C4  
                              u6551 292E                                u6471 2386  
                              u7415 244A                                u5911 0352  
                              u5831 0250                                u5751 018E  
                              u5591 2B1C                                u5671 2F3A  
                              u6711 0F84                                u6631 0DFE  
                              u7511 0A9A                                u7351 2CF4  
                              u7191 2692                                u7271 2210  
                              u8047 11A6                                u4791 21B2  
                              u7431 1894                                u7600 14B2  
                              u6560 29AA                                u6480 1E2C  
                              u5920 0364                                u5840 0288  
                              u5760 01AA                                u5680 2F56  
                              u6720 0F9C                                u6640 0E30  
                              u7520 0AC8                                u7360 2D20  
                              u7280 223C                                u7440 18E6  
                              u8137 154C                                u7601 14AE  
                              u6561 29A6                                u6481 1E28  
                              u5921 0360                                u5841 0284  
                              u5761 01A6                                u5681 2F52  
                              u6721 0F98                                u6641 0E2C  
                              u7521 0AC4                                u7361 2D1C  
                              u7281 2238                                u8057 11D4  
                              u7441 18E2                                u7610 14D6  
                              u5930 03F8                                u5850 02A0  
                              u5770 01BC                                u5690 2F8E  
                              u6730 0FDE                                u6650 0E62  
                              u6570 0D04                                u7530 0AE6  
                              u7370 2C48                                u7290 229C  
                              u7450 1956                                u8147 15D2  
                              u7611 14D2                                u5931 03F4  
                              u5851 029C                                u5771 01B8  
                              u5691 2F8A                                u6731 0FDA  
                              u6651 0E5E                                u6571 0D00  
                              u7531 0AE2                                u7371 2C44  
                              u7291 2298                                u8067 123A  
                              u7451 1952                                u7620 14E8  
                              u5940 0410                                u5860 02D0  
                              u5780 01E4                                u6740 0FF6  
                              u6660 0EC4                                u6580 0D2C  
                              u6900 25A0                                u7540 0B04  
                              u7380 2C66                                u7460 1994  
                              u7700 1736                                u6805 203E  
                              u8157 3346                                u7621 14E4  
                              u5941 040C                                u5861 02CC  
                              u5781 01E0                                u6741 0FF2  
                              u6661 0EC0                                u6581 0D26  
                              u6901 259C                                u7541 0B00  
                              u7381 2C62                                u8077 21FC  
                              u7461 1990                                u7701 1732  
                              u7630 1508                                u5950 044A  
                              u5870 02EC                                u5790 01FA  
                              u6670 0EEC                                u6590 0D2E  
                              u6910 25C8                                u7550 0B2A  
                              u7470 0A14                                u7390 2C8E  
                              u6750 32EC                                u7710 1754  
                              u8167 2D70                                u6815 1F02  
                              u7631 1504                                u6495 1E5C  
                              u5951 0446                                u5871 02E8  
                              u5791 01F6                                u6671 0EE8  
                              u6911 25C4                                u7551 0B26  
                              u7471 0A10                                u7391 2C8A  
                              u6751 32E8                                u8087 19BA  
                              u7711 1750                                u7640 1526  
                              u6840 1270                                u5960 0472  
                              u5880 0304                                u6680 0F1A  
                              u6920 25E4                                u7560 0C2C  
                              u7480 0A3E                                u6760 3188  
                              u7800 10F2                                u7720 176A  
                              u8177 2D90                                u6825 1F1C  
                              u7641 1522                                u6841 126C  
                              u5961 046E                                u5881 0300  
                              u6681 0F16                                u6921 25E0  
                              u7561 0C28                                u7481 0A3A  
                              u6761 3184                                u8097 1AE6  
                              u7801 10EE                                u7721 1766  
                              u7650 1546                                u6850 12DE  
                              u5970 0484                                u5890 0324  
                              u6690 0F42                                u6930 25F6  
                              u7570 0C48                                u7490 0A5C  
                              u6770 31B0                                u7810 1112  
                              u7730 1024                                u8187 2D9E  
                              u6835 1F42                                u7651 1542  
                              u6851 12DA                                u5971 0480  
                              u5891 0320                                u6691 0F3E  
                              u6931 25F2                                u7571 0C44  
                              u7491 0A58                                u6771 31AC  
                              u7811 110E                                u7731 1020  
                              u7660 1564                                u6860 1302  
                              u5980 0540                                u7580 0C5A  
                              u6940 249C                                u7820 1132  
                              u7740 1048                                u8197 33F2  
                              u7661 1560                                u6861 12FE  
                              u5981 053C                                u7581 0C56  
                              u6941 2498                                u7821 112E  
                              u7741 1044                                u7670 158E  
                              u6870 132E                                u5990 0550  
                              u7590 0C90                                u6950 24CE  
                              u7830 1152                                u7750 105A  
                              u7671 158A                                u6871 132A  
                              u5991 054C                                u7591 0C8C  
                              u6951 24CA                                u7831 114E  
                              u7751 1056                                u6880 1388  
                              u6960 24EA                                u7840 1176  
                              u7760 1080                                u7680 16B8  
                              u6785 1FFE                                u6881 1384  
                              u6961 24E6                                u7841 1172  
                              u7761 107C                                u7681 16B4  
                              u6890 13A4                                u6970 24FC  
                              u7850 1196                                u7770 1092  
                              u7690 1718                                u6795 2018  
                              u6891 13A0                                u6971 24F8  
                              u7851 1192                                u7771 108E  
                              u7691 1714                                u6980 2524  
                              u7860 11CC                                u7780 10B8  
                              u6981 2520                                u7861 11C8  
                              u7781 10B4                                u6990 3444  
                              u7870 11EC                                u7790 10CA  
                              u6991 3440                                u7871 11E8  
                              u7791 10C6                      _UART1_SendChar 3434  
                              u7967 2FB4                                u7977 2FD8  
                              u7987 17A2                                u7997 17EE  
                 _live_reading_mode 347C                   _air_intake_string 00D8  
                              _dbuf 015C                                _ctoa 278E  
                              _main 2F90                                _asup 00D3  
                              _atox 064A                                _ncnv 00BE  
                              _prec 00C6                                pad@i 0017  
                              pad@p 0014                                fsr0h 0FEA  
                              fsr1h 0FE2                     ??_print_AI_Temp 0057  
                              indf0 0FEF                                fsr2h 0FDA  
                              fsr0l 0FE9                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
                              btemp 005D                                _utoa 22C0  
                              _xtoa 1DF4                  ?_live_reading_mode 0001  
                       atox@seen_0x 0064                                prodh 0FF4  
                              prodl 0FF3               __end_of_parsing_notif 341C  
                              start 00DC                    __end_of_ADC_init 34A2  
                      ___param_bank 0000                 ??_live_reading_mode 005B  
                       ?_UART1_Init 0001                               ??_pad 0016  
                      _BAUDCON1bits 0FB8                    __end_of_LCD_init 2DCE  
          _diagnostic_trouble_codes 09B0                     __end_of___aldiv 1CF2  
                   __end_of___almod 21D8                               ?_ctoa 000B  
                             ?_main 0001                               ?_atox 004B  
                   __end_of___awdiv 26CE                               STR_10 FF9A  
                             STR_11 FED1                               STR_20 FF49  
                             STR_12 FEF3                               STR_13 FFFD  
                             STR_21 FFF0                               STR_30 FF4B  
                             STR_14 FFFB                               STR_22 FFB8  
                             STR_23 FF49                               STR_31 FFF4  
                             STR_15 FFD0                               STR_32 FFC2  
                             STR_24 FFCA                               STR_16 FFAC  
                             STR_40 FF13                               STR_33 FFD6  
                             STR_25 FFEC                               STR_17 FFBE  
                             STR_41 FF79                               STR_18 FFBE  
                             STR_34 FFE8                               STR_42 FFE0  
                             STR_26 FFB2                               STR_50 FF5D  
                             STR_43 FFD3                               STR_19 FFF8  
                             STR_27 FFC4                               STR_35 FFA6  
                             STR_51 FF84                               STR_28 FFC4  
                             STR_44 FFD3                               STR_36 FFDB  
                             STR_52 FF03                               STR_37 FF42  
                             STR_53 FF84                               STR_29 FFF8  
                             STR_45 FF6B                               STR_46 FF4F  
                             STR_38 FF41                               STR_39 FF8F  
                             STR_47 FF32                               STR_48 FEAF  
                             STR_49 FFE4                               ?_utoa 0019  
                   ___awdiv@divisor 0005                               ?_xtoa 0019  
                   __end_of___lwdiv 2EBC                     __end_of___lwmod 305A  
                             i2l166 00D0                     ___awdiv@counter 0007  
                      vfpfcnvrt@fmt 0026                               _TXREG 0FAD  
                             _A_rpm 00D0                               _B_rpm 00CE  
               ___lmul@multiplicand 0007                    __end_of_UART_ISR 00DC  
                   __end_of_readADC 3366                               _fgetc 1CF2  
            __end_of_UART1_SendChar 344A                               _flags 00D4  
                             _getch 34A2        welcome_splash@CCP1IF_counter 0020  
               read_prec_or_width@c 0007                               _errno 00C2  
               read_prec_or_width@n 0008                               _fputc 284E  
         __end_of_live_reading_mode 348A                               _fputs 3280  
                             pad@fp 0011                               _width 00C4  
                             ctoa@c 000C                               _putch 34AC  
                             ctoa@l 000E                               ctoa@w 0010  
                             atox@c 0068                               atox@i 0066  
                             atox@w 0060                               tablat 0FF5  
                 UART1_SendString@i 0008             ?_clear_diagnostic_codes 0001  
                   __end_of_vfscanf 260C                               ttemp5 005E  
                             ttemp6 0061                               ttemp7 0065  
                             utoa@d 001A                               utoa@i 001F  
                             utoa@p 001C                               utoa@w 001D  
                             status 0FD8                               wtemp8 005E  
                   __end_of_sprintf 3280                               xtoa@c 0022  
                             xtoa@d 001A                               xtoa@i 0023  
                             xtoa@p 001F                               xtoa@w 0020  
                   __end_of_strncmp 2548                   _dbuf@doscan$F2262 013C  
                   __initialization 30BA                        __end_of_ctoa 284E  
                      __end_of_main 2FF6                        __end_of_atox 09B0  
                      __end_of_utoa 23A8                        __end_of_xtoa 1EF6  
                      vfsfcnvrt@fmt 006B                        vfsfcnvrt@llu 0071  
                 ?_LCD_write_string 0006                              ??_ctoa 000D  
                            ??_main 00AD                              ??_atox 004D  
                            ??_utoa 001C                              ??_xtoa 001C  
                     __activetblptr 0002                  ??_LCD_write_string 0008  
       __end_of_clear_parsing_notif 3434          __end_of_read_prec_or_width 29B4  
                 __end_of_LCD_clear 3404                              ?_fgetc 0005  
                            ?_getch 0003                              _ADCON0 0FC2  
                            _ADCON1 0FC1                              _ADCON2 0FC0  
                   ?_UART1_SendChar 0001                              ?_fputc 0003  
                            ?_fputs 000B                              _ADRESH 0FC4  
                            _ADRESL 0FC3                              _CCPR1H 0FBF  
                            _CCPR1L 0FBE                    ___awdiv@dividend 0003  
                            ?_putch 0001                              _ANSELC 0F3A  
    __end_of_clear_diagnostic_codes 1646                              i2l5131 002E  
                            i2l5141 0078                              i2l5133 0040  
                            i2l5151 00BE                              i2l5143 0088  
                            i2l5135 0044                              i2l5127 0012  
                            i2l5153 00CC                              i2l5137 0056  
                            i2l5145 008A                              i2l5129 0020  
                            i2l5147 009C                              i2l5139 0066  
                            i2l5149 00AE           diagnostic_trouble_codes@i 00A9  
                            _RCREG1 0FAE                 _display_system_info 32FA  
            LCD_write_string@string 0006                              _OSCCON 0FD3  
                     vfpfcnvrt@done 002B                              _SPBRG1 0FAF  
     diagnostic_trouble_codes@F6637 00B9       diagnostic_trouble_codes@F6639 00B6  
     clear_diagnostic_codes@opt_sel 000D                    _UART1_SendString 3118  
   LCD_write_variable@temp_variable 0018                        vfprintf@cfmt 0036  
                      ___strtoxll@a 0040                        ___strtoxll@c 004A  
                      ___strtoxll@s 001B                              ___lmul 2EBC  
                            ___omul 2A5A                           ??___aldiv 000B  
                         ??___almod 000B                           ??___awdiv 0007  
                         ??___lwdiv 0007        ??_LCD_configure_cursor_blink 0006  
                         ??___lwmod 0007                              _buffer 0200  
     diagnostic_trouble_codes@byte1 00A3       diagnostic_trouble_codes@byte2 00A5  
              read_prec_or_width@ap 0004                ?_display_system_info 0001  
                            clear_0 30E2                              clear_1 30F4  
                            clear_2 3100                              _nmatch 00BC  
                  ___awdiv@quotient 0009                              fgetc@c 000C  
                            isa$std 0001                              _result 005B  
                            _sscanf 31BA                              pad@buf 0012  
                            _skipws 2F26                              _ungetc 2AF8  
                            ctoa@fp 000B                              atox@ep 0062  
                            atox@fp 004B                              _strchr 316E  
                            _strlen 32C0                              _strstr 26CE  
                         ??_readADC 0005                              fputc@c 0003  
                            fputs@c 000E                              fputs@i 000F  
                            fputs@s 000B                    ??_welcome_splash 001C  
                      __mediumconst FE8C                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                         ?_ADC_init 0001                              putch@c 0001  
                         ??_vfscanf 0057                    __end_of_vfprintf 3240  
                            utoa@fp 0019                    ___strtoxll@flags 003F  
                         ??_sprintf 0042                    ___strtoxll@limit 0037  
                            xtoa@fp 0019                           ??_strncmp 0009  
                      ?_print_Vbatt 0001                          __accesstop 0060  
           __end_of__initialization 310A                           ?_LCD_init 0001  
                     ___rparam_used 0001                     UART1_SendChar@c 0003  
                    __pcstackCOMRAM 0001                        __pidataBANK0 34A8  
                         ?_UART_ISR 0001                      _LCD_entry_mode 00FA  
                     __end_of_fgetc 1DF4                   _LCD_write_command 1FF2  
                     __end_of_getch 34A8                       __end_of_fputc 2908  
                     __end_of_fputs 32C0               ??_display_system_info 000C  
                     __end_of_putch 34AE                      _LCD_cursor_set 305A  
                ?_LCD_write_command 0001          __end_of_LCD_write_variable 1996  
                        ___ungetbuf 00B3                          ___ungetcnt 00D2  
               ??_LCD_write_command 0003                          ??_ADC_init 0003  
                        ___strtoxll 00E0                       decode_dtc@dtc 0052  
                           ??_fgetc 0007                             ??_getch 0005  
                _width@doscan$F2259 00C0                             ??_fputc 0006  
                           ??_fputs 000E                             ??_putch 0003  
                        __pbssBANK0 00AF                          __pbssBANK1 0100  
                        __pbssBANK2 0200                          _decode_dtc 23A8  
                        ??_LCD_init 0007          ??_diagnostic_trouble_codes 009B  
         __end_of_LCD_write_command 20EE               _extract_two_pid_bytes 29B4  
                           ?___lmul 0003                             ?___omul 0003  
                      ??_UART1_Init 0003                          ??_UART_ISR 0001  
            __end_of_LCD_cursor_set 30BA                 ___omul@multiplicand 000B  
                    ___lmul@product 000B                   __end_of_ccp1_init 345C  
                           ?_sscanf 0085                             ?_skipws 000E  
                           ?_ungetc 0003                             ?_strchr 0003  
                           ?_strlen 0003                             ?_strstr 000A  
                           _SPBRGH1 0FB0                          _display_mm 3366  
          LCD_write_command@command 0005                  __end_of_UART1_Init 33C0  
                           _RX_char 00D6               __end_of_print_AI_Temp 1BE8  
                           __Hparam 0000                             __Lparam 0000  
__end_of_LCD_configure_cursor_blink 33E6          _LCD_configure_cursor_blink 33C0  
                  _message_complete 00D5                       ___strtoxll@cp 0048  
                           ___aldiv 1BE8                             ___almod 20EE  
                   ?_LCD_cursor_set 0006                             ___awdiv 260C  
                    _LCD_write_data 1EF6                             ___lwdiv 2E48  
        LCD_write_variable@variable 0011                             ___lwmod 2FF6  
                         ?_vfprintf 0032                   __end_of_main_menu 124E  
                           __pcinit 30BA                             __ramtop 1000  
                           __ptext0 2F90                             __ptext1 1646  
                           __ptext2 345C                             __ptext3 344A  
                           __ptext4 1822                             __ptext5 2EBC  
                           __ptext6 20EE                             __ptext7 1BE8  
                           __ptext8 0FFC                             __ptext9 347C  
                           _readADC 3330                           _T1CONbits 0FCD  
                  ??_UART1_SendChar 0003               read_prec_or_width@fmt 0003  
                  ___aldiv@dividend 0003            __end_of_UART1_SendString 316E  
                           fgetc@fp 0005                         ?___strtoxll 001B  
                           _vfscanf 2548                          _input_init 346C  
                           _sprintf 3240                             atox@pll 004C  
                           _strncmp 2482                           _LCD_clear 33E6  
              end_of_initialization 310A                   __end_of_tmr1_init 346C  
                       ?_decode_dtc 004E                      ___omul@product 0013  
                           fputc@fp 0005                       __Lmediumconst FE8C  
                           fputs@fp 000D                  _read_prec_or_width 2908  
              LCD_cursor_set@column 0006                   __end_of_print_RPM 1AC2  
            ?_extract_two_pid_bytes 009B                       ?_print_ELMVer 0001  
                      _buffer_count 00D7                 _LCD_display_control 00FB  
            __end_of_LCD_write_data 1FF2                   __end_of_vfpfcnvrt 1456  
                     ?_print_SAEVer 0001                           _RCSTAbits 0FAB  
                           sscanf@f 0090                             sscanf@s 0085  
                           skipws@c 0010                    ___aldiv@quotient 000D  
                 __end_of_vfsfcnvrt 0FFC                             postdec1 0FE5  
                           postdec2 0FDD                 ?_read_prec_or_width 0003  
                           ungetc@c 0003                             postinc0 0FEE  
                           postinc1 0FE6                             postinc2 0FDE  
                  vfpfcnvrt@convarg 002C                          ??_vfprintf 0036  
                 ___strtoxll@endptr 001D                             strchr@c 0005  
                           strchr@s 0003                             strlen@a 0005  
                           strlen@s 0003                             strstr@h 000A  
                           strstr@n 000C                   ___strtoxll@prev_a 002B  
                         _PORTBbits 0F81                           _PORTCbits 0F82  
                 ??_LCD_pulse_clock 0003                          _rpm_string 00E8  
                         _TRISAbits 0F92                           _TRISBbits 0F93  
                         _TRISCbits 0F94                           _TRISDbits 0F95  
                vfscanf@saved_errno 007F                ??_read_prec_or_width 0005  
                       ?_display_mm 0001                          ?_LCD_clear 0001  
                   _air_intake_temp 00C8            extract_two_pid_bytes@pid 009B  
          extract_two_pid_bytes@ptr 009F                         _CCP1CONbits 0FBD  
                         _TXSTAbits 0FAC    __end_of_diagnostic_trouble_codes 0CE0  
                    ??_print_ELMVer 000B                       _parsing_notif 3404  
                    ??_print_SAEVer 000B                         vfscanf@cfmt 0083  
                   ?_LCD_write_data 0001                      __end_of___lmul 2F26  
                    __end_of___omul 2AF8                         vfpfcnvrt@ap 0027  
                       vfpfcnvrt@cp 0030                         vfpfcnvrt@fp 0025  
                    __end_of_sscanf 31FE                      __end_of_skipws 2F90  
                    __end_of_ungetc 2B94                      __end_of_strchr 31BA  
                    __end_of_strlen 32FA                      __end_of_strstr 278E  
               start_initialization 30BA                         __end_of_pad 2C2A  
                       ?_input_init 0001                         vfsfcnvrt@ap 006C  
                       vfsfcnvrt@fp 006A                         vfsfcnvrt@vp 006E  
                _LCD_write_variable 1822                   ___omul@multiplier 0003  
               LCD_write_variable@i 0016                 ?_LCD_write_variable 0011  
                    ?_parsing_notif 0001         __end_of_display_system_info 3330  
                   ___strtoxll$2312 0033                     ___strtoxll$2313 0035  
                       vfprintf@fmt 0033                            ??___lmul 000B  
                          ??___omul 0013                      decode_dtc@type 0059  
                       __pdataBANK0 00F8                            ??_sscanf 0057  
                          ??_skipws 000F                     ___strtoxll@base 001E  
                          ??_ungetc 0006                            ??_strchr 0007  
                          ??_strlen 0005                            ??_strstr 000E  
              ??_LCD_write_variable 0016              extract_two_pid_bytes@A 009D  
            extract_two_pid_bytes@B 009E            ??_clear_diagnostic_codes 000B  
            extract_two_pid_bytes@a 00A1              extract_two_pid_bytes@b 00A3  
                       __pbssCOMRAM 005B                           _ccp1_init 344A  
                     __pcstackBANK0 0060                         ??_LCD_clear 0006  
                  _LCD_write_string 2DCE                        decode_dtc@b1 004E  
                      decode_dtc@b2 0050                    ??_LCD_cursor_set 0007  
                  ___lwdiv@dividend 0003     LCD_configure_cursor_blink@state 0006  
                         __pintcode 0008                       __pmediumconst FE8C  
                          ?___aldiv 0003                            ?___almod 0003  
       ?_LCD_configure_cursor_blink 0001                            ?___awdiv 0003  
                          ?___lwdiv 0003                            ?___lwmod 0003  
            UART1_SendString@string 0004                           _dtc_codes 0100  
                  ___almod@dividend 0003                            ?_readADC 0003  
                       __smallconst FE8C                           _main_menu 0FFC  
                        ?_ccp1_init 0001           ?_diagnostic_trouble_codes 0001  
              __end_of_print_ELMVer 2D4E                        ??___strtoxll 0023  
                          _ADC_init 3496                __end_of_print_SAEVer 2CBC  
                 ?_UART1_SendString 0004                            ?_vfscanf 007B  
                  ___lwdiv@quotient 0008                            ?_sprintf 0038  
                LCD_write_data@data 0005                            ?_strncmp 0003  
                ??_UART1_SendString 0006                        ??_decode_dtc 0054  
                   ___aldiv@divisor 0007                     ___aldiv@counter 000B  
                   ??_parsing_notif 000B             ??_extract_two_pid_bytes 0057  
                          _LATDbits 0F8C                            _LCD_init 2D4E  
                          _PIE1bits 0F9D                           _tmr1_init 345C  
                          _PIR1bits 0F9E                            i2u530_40 0066  
                          i2u530_41 0062                            i2u531_40 0078  
                          i2u531_41 0074                            i2u532_40 009C  
                          i2u532_41 0098                            i2u533_40 00AE  
                          i2u533_41 00AA                            i2u534_40 00BE  
                          i2u526_40 0020                            i2u534_41 00BA  
                          i2u526_41 001C                            i2u527_40 002E  
                          i2u527_41 002A                            i2u528_40 0040  
                          i2u528_41 003C                            i2u529_40 0056  
                          i2u529_41 0052                     _LCD_pulse_clock 348A  
                          _UART_ISR 0008                  __end_of___strtoxll 064A  
                         _print_RPM 1996                 _clear_parsing_notif 341C  
                         _vfpfcnvrt 124E                           _vfsfcnvrt 0CE0  
                        _ADCON0bits 0FC2                          print_RPM@A 0059  
                        print_RPM@B 005A                  __end_of_decode_dtc 2482  
                        ?_main_menu 0001                          vfscanf@fmt 007C  
                      ??_display_mm 000B                          vfpfcnvrt@c 002A  
                     ??_print_Vbatt 000B                   ___lmul@multiplier 0003  
                         copy_data0 30CE                ?_clear_parsing_notif 0001  
                        vfsfcnvrt@c 0079                          vfsfcnvrt@i 006F  
                  ??_LCD_write_data 0003                          ?_tmr1_init 0001  
                          __Hrparam 0000            LCD_write_variable@digits 0017  
                         modff@F522 00AF                          vfprintf@ap 0035  
                          __Lrparam 0000                          vfprintf@fp 0032  
                 LCD_cursor_set@row 0007                          ?_print_RPM 0001  
                __end_of_display_mm 3394                          ?_vfpfcnvrt 0025  
                        ?_vfsfcnvrt 006A                          _ANSELAbits 0F38  
                        _ANSELBbits 0F39                          _ANSELCbits 0F3A  
                        sprintf@fmt 003A                         ??_ccp1_init 0003  
                   ___lwdiv@divisor 0005                     ___lwdiv@counter 0007  
                      ??_input_init 0003                            __ptext10 21D8  
                          __ptext11 1996                            __ptext20 2C2A  
                          __ptext12 260C                            __ptext21 2CBC  
                          __ptext13 1AC2                            __ptext30 34A2  
                          __ptext22 09B0                            __ptext14 29B4  
                          __ptext31 00E0                            __ptext23 31BA  
                          __ptext15 26CE                            __ptext40 3280  
                          __ptext32 2A5A                            __ptext24 2548  
                          __ptext16 2482                            __ptext41 2FF6  
                          __ptext33 23A8                            __ptext25 0CE0  
                          __ptext17 32C0                            __ptext50 3366  
                          __ptext42 2E48                            __ptext34 3240  
                          __ptext26 064A                            __ptext18 316E  
                          __ptext51 341C                            __ptext43 2908  
                          __ptext35 31FE                            __ptext27 2F26  
                          __ptext19 32FA                            __ptext60 2D4E  
                          __ptext52 2DCE                            __ptext44 278E  
                          __ptext36 124E                            __ptext28 2AF8  
                          __ptext61 33E6                            __ptext53 1EF6  
                          __ptext45 284E                            __ptext37 1DF4  
                          __ptext29 1CF2                            __ptext62 1FF2  
                          __ptext54 305A                            __ptext46 34AC  
                          __ptext38 22C0                            __ptext63 348A  
                          __ptext55 3118                            __ptext47 1456  
                          __ptext39 2B94                            __ptext64 3496  
                          __ptext56 3434                            __ptext48 3330  
                          __ptext57 33C0                            __ptext49 3404  
                          __ptext58 346C                            __ptext59 3394  
             ??_clear_parsing_notif 000B                     ___almod@divisor 0007  
                   ___almod@counter 000B                      _welcome_splash 1646  
              ___strtoxll@is_signed 0020             __end_of_LCD_pulse_clock 3496  
                          _menu_sel 00F8                 __end_of_print_Vbatt 22C0  
            _clear_diagnostic_codes 1456                       _print_AI_Temp 1AC2  
                          isa$xinst 0000                            int$flags 005D  
                          _vfprintf 31FE                  __end_of_input_init 347C  
                         sscanf@fmt 0087                           sscanf@ret 008D  
          __end_of_LCD_write_string 2E48                           vfscanf@ap 007E  
                         vfscanf@fp 007B       LCD_write_variable@left_offset 0015  
                       ??_main_menu 00AB                          _INTCONbits 0FF2  
            __end_of_welcome_splash 1822                   LCD_write_string@i 000A  
                          intlevel2 0000                           sprintf@ap 0042  
                  ___lwmod@dividend 0003                         ??_tmr1_init 0003  
                        _RCSTA1bits 0FAB                      ?_print_AI_Temp 0001  
           welcome_splash@plug_flag 001E                        _print_ELMVer 2CBC  
 diagnostic_trouble_codes@dtc_index 00A7                        _print_SAEVer 2C2A  
                          sscanf@ap 008F                          _UART1_Init 3394  
                          skipws@fp 000E                            vfscanf@n 0081  
                       ??_print_RPM 0057   diagnostic_trouble_codes@byte1_str 009D  
 diagnostic_trouble_codes@byte2_str 00A0                            ungetc@fp 0005  
                       ??_vfpfcnvrt 0028                         ??_vfsfcnvrt 0055  
                          sprintf@f 0043                            sprintf@s 0038  
                   ___lwmod@divisor 0005                        _A_air_intake 00CA  
                   ___lwmod@counter 0007                            strncmp@l 0003  
                          strncmp@n 0007                            strncmp@r 0005  
                      ___aldiv@sign 000C                            strstr@nl 000E  
                   ?_welcome_splash 0001                         _print_Vbatt 21D8  
                      ___almod@sign 000C                    ?_LCD_pulse_clock 0001  
     __end_of_extract_two_pid_bytes 2A5A                      print_AI_Temp@A 0059  
                    print_AI_Temp@B 0058  
