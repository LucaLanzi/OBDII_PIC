

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 28 18:37:48 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Generated 12/10/2023 GMT
    61                           ; 
    62                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F46K22 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000FE0                     bsr             equ	4064
    95   000FE9                     fsr0            equ	4073
    96   000FEA                     fsr0h           equ	4074
    97   000FE9                     fsr0l           equ	4073
    98   000FE1                     fsr1            equ	4065
    99   000FE2                     fsr1h           equ	4066
   100   000FE1                     fsr1l           equ	4065
   101   000FD9                     fsr2            equ	4057
   102   000FDA                     fsr2h           equ	4058
   103   000FD9                     fsr2l           equ	4057
   104   000FEF                     indf0           equ	4079
   105   000FE7                     indf1           equ	4071
   106   000FDF                     indf2           equ	4063
   107   000FF2                     intcon          equ	4082
   108   000000                     nvmcon          equ	0
   109   000FF9                     pcl             equ	4089
   110   000FFA                     pclath          equ	4090
   111   000FFB                     pclatu          equ	4091
   112   000FEB                     plusw0          equ	4075
   113   000FE3                     plusw1          equ	4067
   114   000FDB                     plusw2          equ	4059
   115   000FED                     postdec0        equ	4077
   116   000FE5                     postdec1        equ	4069
   117   000FDD                     postdec2        equ	4061
   118   000FEE                     postinc0        equ	4078
   119   000FE6                     postinc1        equ	4070
   120   000FDE                     postinc2        equ	4062
   121   000FEC                     preinc0         equ	4076
   122   000FE4                     preinc1         equ	4068
   123   000FDC                     preinc2         equ	4060
   124   000FF3                     prod            equ	4083
   125   000FF4                     prodh           equ	4084
   126   000FF3                     prodl           equ	4083
   127   000FD8                     status          equ	4056
   128   000FF5                     tablat          equ	4085
   129   000FF6                     tblptr          equ	4086
   130   000FF7                     tblptrh         equ	4087
   131   000FF6                     tblptrl         equ	4086
   132   000FF8                     tblptru         equ	4088
   133   000FFD                     tosl            equ	4093
   134   000FE8                     wreg            equ	4072
   135   000F38                     ANSELA          equ	3896	;# 
   136   000F39                     ANSELB          equ	3897	;# 
   137   000F3A                     ANSELC          equ	3898	;# 
   138   000F3B                     ANSELD          equ	3899	;# 
   139   000F3C                     ANSELE          equ	3900	;# 
   140   000F3D                     PMD2            equ	3901	;# 
   141   000F3E                     PMD1            equ	3902	;# 
   142   000F3F                     PMD0            equ	3903	;# 
   143   000F40                     VREFCON2        equ	3904	;# 
   144   000F40                     DACCON1         equ	3904	;# 
   145   000F41                     VREFCON1        equ	3905	;# 
   146   000F41                     DACCON0         equ	3905	;# 
   147   000F42                     VREFCON0        equ	3906	;# 
   148   000F42                     FVRCON          equ	3906	;# 
   149   000F43                     CTMUICON        equ	3907	;# 
   150   000F43                     CTMUICONH       equ	3907	;# 
   151   000F44                     CTMUCONL        equ	3908	;# 
   152   000F44                     CTMUCON1        equ	3908	;# 
   153   000F45                     CTMUCONH        equ	3909	;# 
   154   000F45                     CTMUCON0        equ	3909	;# 
   155   000F46                     SRCON1          equ	3910	;# 
   156   000F47                     SRCON0          equ	3911	;# 
   157   000F48                     CCPTMRS1        equ	3912	;# 
   158   000F49                     CCPTMRS0        equ	3913	;# 
   159   000F4A                     T6CON           equ	3914	;# 
   160   000F4B                     PR6             equ	3915	;# 
   161   000F4C                     TMR6            equ	3916	;# 
   162   000F4D                     T5GCON          equ	3917	;# 
   163   000F4E                     T5CON           equ	3918	;# 
   164   000F4F                     TMR5            equ	3919	;# 
   165   000F4F                     TMR5L           equ	3919	;# 
   166   000F50                     TMR5H           equ	3920	;# 
   167   000F51                     T4CON           equ	3921	;# 
   168   000F52                     PR4             equ	3922	;# 
   169   000F53                     TMR4            equ	3923	;# 
   170   000F54                     CCP5CON         equ	3924	;# 
   171   000F55                     CCPR5           equ	3925	;# 
   172   000F55                     CCPR5L          equ	3925	;# 
   173   000F56                     CCPR5H          equ	3926	;# 
   174   000F57                     CCP4CON         equ	3927	;# 
   175   000F58                     CCPR4           equ	3928	;# 
   176   000F58                     CCPR4L          equ	3928	;# 
   177   000F59                     CCPR4H          equ	3929	;# 
   178   000F5A                     PSTR3CON        equ	3930	;# 
   179   000F5B                     ECCP3AS         equ	3931	;# 
   180   000F5B                     CCP3AS          equ	3931	;# 
   181   000F5C                     PWM3CON         equ	3932	;# 
   182   000F5D                     CCP3CON         equ	3933	;# 
   183   000F5E                     CCPR3           equ	3934	;# 
   184   000F5E                     CCPR3L          equ	3934	;# 
   185   000F5F                     CCPR3H          equ	3935	;# 
   186   000F60                     SLRCON          equ	3936	;# 
   187   000F61                     WPUB            equ	3937	;# 
   188   000F62                     IOCB            equ	3938	;# 
   189   000F63                     PSTR2CON        equ	3939	;# 
   190   000F64                     ECCP2AS         equ	3940	;# 
   191   000F64                     CCP2AS          equ	3940	;# 
   192   000F65                     PWM2CON         equ	3941	;# 
   193   000F66                     CCP2CON         equ	3942	;# 
   194   000F67                     CCPR2           equ	3943	;# 
   195   000F67                     CCPR2L          equ	3943	;# 
   196   000F68                     CCPR2H          equ	3944	;# 
   197   000F69                     SSP2CON3        equ	3945	;# 
   198   000F6A                     SSP2MSK         equ	3946	;# 
   199   000F6B                     SSP2CON2        equ	3947	;# 
   200   000F6C                     SSP2CON1        equ	3948	;# 
   201   000F6D                     SSP2STAT        equ	3949	;# 
   202   000F6E                     SSP2ADD         equ	3950	;# 
   203   000F6F                     SSP2BUF         equ	3951	;# 
   204   000F70                     BAUDCON2        equ	3952	;# 
   205   000F70                     BAUD2CON        equ	3952	;# 
   206   000F71                     RCSTA2          equ	3953	;# 
   207   000F71                     RC2STA          equ	3953	;# 
   208   000F72                     TXSTA2          equ	3954	;# 
   209   000F72                     TX2STA          equ	3954	;# 
   210   000F73                     TXREG2          equ	3955	;# 
   211   000F73                     TX2REG          equ	3955	;# 
   212   000F74                     RCREG2          equ	3956	;# 
   213   000F74                     RC2REG          equ	3956	;# 
   214   000F75                     SPBRG2          equ	3957	;# 
   215   000F75                     SP2BRG          equ	3957	;# 
   216   000F76                     SPBRGH2         equ	3958	;# 
   217   000F76                     SP2BRGH         equ	3958	;# 
   218   000F77                     CM2CON1         equ	3959	;# 
   219   000F77                     CM12CON         equ	3959	;# 
   220   000F78                     CM2CON0         equ	3960	;# 
   221   000F78                     CM2CON          equ	3960	;# 
   222   000F79                     CM1CON0         equ	3961	;# 
   223   000F79                     CM1CON          equ	3961	;# 
   224   000F7A                     PIE4            equ	3962	;# 
   225   000F7B                     PIR4            equ	3963	;# 
   226   000F7C                     IPR4            equ	3964	;# 
   227   000F7D                     PIE5            equ	3965	;# 
   228   000F7E                     PIR5            equ	3966	;# 
   229   000F7F                     IPR5            equ	3967	;# 
   230   000F80                     PORTA           equ	3968	;# 
   231   000F81                     PORTB           equ	3969	;# 
   232   000F82                     PORTC           equ	3970	;# 
   233   000F83                     PORTD           equ	3971	;# 
   234   000F84                     PORTE           equ	3972	;# 
   235   000F89                     LATA            equ	3977	;# 
   236   000F8A                     LATB            equ	3978	;# 
   237   000F8B                     LATC            equ	3979	;# 
   238   000F8C                     LATD            equ	3980	;# 
   239   000F8D                     LATE            equ	3981	;# 
   240   000F92                     TRISA           equ	3986	;# 
   241   000F92                     DDRA            equ	3986	;# 
   242   000F93                     TRISB           equ	3987	;# 
   243   000F93                     DDRB            equ	3987	;# 
   244   000F94                     TRISC           equ	3988	;# 
   245   000F94                     DDRC            equ	3988	;# 
   246   000F95                     TRISD           equ	3989	;# 
   247   000F95                     DDRD            equ	3989	;# 
   248   000F96                     TRISE           equ	3990	;# 
   249   000F96                     DDRE            equ	3990	;# 
   250   000F9B                     OSCTUNE         equ	3995	;# 
   251   000F9C                     HLVDCON         equ	3996	;# 
   252   000F9C                     LVDCON          equ	3996	;# 
   253   000F9D                     PIE1            equ	3997	;# 
   254   000F9E                     PIR1            equ	3998	;# 
   255   000F9F                     IPR1            equ	3999	;# 
   256   000FA0                     PIE2            equ	4000	;# 
   257   000FA1                     PIR2            equ	4001	;# 
   258   000FA2                     IPR2            equ	4002	;# 
   259   000FA3                     PIE3            equ	4003	;# 
   260   000FA4                     PIR3            equ	4004	;# 
   261   000FA5                     IPR3            equ	4005	;# 
   262   000FA6                     EECON1          equ	4006	;# 
   263   000FA7                     EECON2          equ	4007	;# 
   264   000FA8                     EEDATA          equ	4008	;# 
   265   000FA9                     EEADR           equ	4009	;# 
   266   000FAA                     EEADRH          equ	4010	;# 
   267   000FAB                     RCSTA1          equ	4011	;# 
   268   000FAB                     RCSTA           equ	4011	;# 
   269   000FAB                     RC1STA          equ	4011	;# 
   270   000FAC                     TXSTA1          equ	4012	;# 
   271   000FAC                     TXSTA           equ	4012	;# 
   272   000FAC                     TX1STA          equ	4012	;# 
   273   000FAD                     TXREG1          equ	4013	;# 
   274   000FAD                     TXREG           equ	4013	;# 
   275   000FAD                     TX1REG          equ	4013	;# 
   276   000FAE                     RCREG1          equ	4014	;# 
   277   000FAE                     RCREG           equ	4014	;# 
   278   000FAE                     RC1REG          equ	4014	;# 
   279   000FAF                     SPBRG1          equ	4015	;# 
   280   000FAF                     SPBRG           equ	4015	;# 
   281   000FAF                     SP1BRG          equ	4015	;# 
   282   000FB0                     SPBRGH1         equ	4016	;# 
   283   000FB0                     SPBRGH          equ	4016	;# 
   284   000FB0                     SP1BRGH         equ	4016	;# 
   285   000FB1                     T3CON           equ	4017	;# 
   286   000FB2                     TMR3            equ	4018	;# 
   287   000FB2                     TMR3L           equ	4018	;# 
   288   000FB3                     TMR3H           equ	4019	;# 
   289   000FB4                     T3GCON          equ	4020	;# 
   290   000FB6                     ECCP1AS         equ	4022	;# 
   291   000FB6                     ECCPAS          equ	4022	;# 
   292   000FB7                     PWM1CON         equ	4023	;# 
   293   000FB7                     PWMCON          equ	4023	;# 
   294   000FB8                     BAUDCON1        equ	4024	;# 
   295   000FB8                     BAUDCON         equ	4024	;# 
   296   000FB8                     BAUDCTL         equ	4024	;# 
   297   000FB8                     BAUD1CON        equ	4024	;# 
   298   000FB9                     PSTR1CON        equ	4025	;# 
   299   000FB9                     PSTRCON         equ	4025	;# 
   300   000FBA                     T2CON           equ	4026	;# 
   301   000FBB                     PR2             equ	4027	;# 
   302   000FBC                     TMR2            equ	4028	;# 
   303   000FBD                     CCP1CON         equ	4029	;# 
   304   000FBE                     CCPR1           equ	4030	;# 
   305   000FBE                     CCPR1L          equ	4030	;# 
   306   000FBF                     CCPR1H          equ	4031	;# 
   307   000FC0                     ADCON2          equ	4032	;# 
   308   000FC1                     ADCON1          equ	4033	;# 
   309   000FC2                     ADCON0          equ	4034	;# 
   310   000FC3                     ADRES           equ	4035	;# 
   311   000FC3                     ADRESL          equ	4035	;# 
   312   000FC4                     ADRESH          equ	4036	;# 
   313   000FC5                     SSP1CON2        equ	4037	;# 
   314   000FC5                     SSPCON2         equ	4037	;# 
   315   000FC6                     SSP1CON1        equ	4038	;# 
   316   000FC6                     SSPCON1         equ	4038	;# 
   317   000FC7                     SSP1STAT        equ	4039	;# 
   318   000FC7                     SSPSTAT         equ	4039	;# 
   319   000FC8                     SSP1ADD         equ	4040	;# 
   320   000FC8                     SSPADD          equ	4040	;# 
   321   000FC9                     SSP1BUF         equ	4041	;# 
   322   000FC9                     SSPBUF          equ	4041	;# 
   323   000FCA                     SSP1MSK         equ	4042	;# 
   324   000FCA                     SSPMSK          equ	4042	;# 
   325   000FCB                     SSP1CON3        equ	4043	;# 
   326   000FCB                     SSPCON3         equ	4043	;# 
   327   000FCC                     T1GCON          equ	4044	;# 
   328   000FCD                     T1CON           equ	4045	;# 
   329   000FCE                     TMR1            equ	4046	;# 
   330   000FCE                     TMR1L           equ	4046	;# 
   331   000FCF                     TMR1H           equ	4047	;# 
   332   000FD0                     RCON            equ	4048	;# 
   333   000FD1                     WDTCON          equ	4049	;# 
   334   000FD2                     OSCCON2         equ	4050	;# 
   335   000FD3                     OSCCON          equ	4051	;# 
   336   000FD5                     T0CON           equ	4053	;# 
   337   000FD6                     TMR0            equ	4054	;# 
   338   000FD6                     TMR0L           equ	4054	;# 
   339   000FD7                     TMR0H           equ	4055	;# 
   340   000FD8                     STATUS          equ	4056	;# 
   341   000FD9                     FSR2            equ	4057	;# 
   342   000FD9                     FSR2L           equ	4057	;# 
   343   000FDA                     FSR2H           equ	4058	;# 
   344   000FDB                     PLUSW2          equ	4059	;# 
   345   000FDC                     PREINC2         equ	4060	;# 
   346   000FDD                     POSTDEC2        equ	4061	;# 
   347   000FDE                     POSTINC2        equ	4062	;# 
   348   000FDF                     INDF2           equ	4063	;# 
   349   000FE0                     BSR             equ	4064	;# 
   350   000FE1                     FSR1            equ	4065	;# 
   351   000FE1                     FSR1L           equ	4065	;# 
   352   000FE2                     FSR1H           equ	4066	;# 
   353   000FE3                     PLUSW1          equ	4067	;# 
   354   000FE4                     PREINC1         equ	4068	;# 
   355   000FE5                     POSTDEC1        equ	4069	;# 
   356   000FE6                     POSTINC1        equ	4070	;# 
   357   000FE7                     INDF1           equ	4071	;# 
   358   000FE8                     WREG            equ	4072	;# 
   359   000FE9                     FSR0            equ	4073	;# 
   360   000FE9                     FSR0L           equ	4073	;# 
   361   000FEA                     FSR0H           equ	4074	;# 
   362   000FEB                     PLUSW0          equ	4075	;# 
   363   000FEC                     PREINC0         equ	4076	;# 
   364   000FED                     POSTDEC0        equ	4077	;# 
   365   000FEE                     POSTINC0        equ	4078	;# 
   366   000FEF                     INDF0           equ	4079	;# 
   367   000FF0                     INTCON3         equ	4080	;# 
   368   000FF1                     INTCON2         equ	4081	;# 
   369   000FF2                     INTCON          equ	4082	;# 
   370   000FF3                     PROD            equ	4083	;# 
   371   000FF3                     PRODL           equ	4083	;# 
   372   000FF4                     PRODH           equ	4084	;# 
   373   000FF5                     TABLAT          equ	4085	;# 
   374   000FF6                     TBLPTR          equ	4086	;# 
   375   000FF6                     TBLPTRL         equ	4086	;# 
   376   000FF7                     TBLPTRH         equ	4087	;# 
   377   000FF8                     TBLPTRU         equ	4088	;# 
   378   000FF9                     PCLAT           equ	4089	;# 
   379   000FF9                     PC              equ	4089	;# 
   380   000FF9                     PCL             equ	4089	;# 
   381   000FFA                     PCLATH          equ	4090	;# 
   382   000FFB                     PCLATU          equ	4091	;# 
   383   000FFC                     STKPTR          equ	4092	;# 
   384   000FFD                     TOS             equ	4093	;# 
   385   000FFD                     TOSL            equ	4093	;# 
   386   000FFE                     TOSH            equ	4094	;# 
   387   000FFF                     TOSU            equ	4095	;# 
   388   000F38                     ANSELA          equ	3896	;# 
   389   000F39                     ANSELB          equ	3897	;# 
   390   000F3A                     ANSELC          equ	3898	;# 
   391   000F3B                     ANSELD          equ	3899	;# 
   392   000F3C                     ANSELE          equ	3900	;# 
   393   000F3D                     PMD2            equ	3901	;# 
   394   000F3E                     PMD1            equ	3902	;# 
   395   000F3F                     PMD0            equ	3903	;# 
   396   000F40                     VREFCON2        equ	3904	;# 
   397   000F40                     DACCON1         equ	3904	;# 
   398   000F41                     VREFCON1        equ	3905	;# 
   399   000F41                     DACCON0         equ	3905	;# 
   400   000F42                     VREFCON0        equ	3906	;# 
   401   000F42                     FVRCON          equ	3906	;# 
   402   000F43                     CTMUICON        equ	3907	;# 
   403   000F43                     CTMUICONH       equ	3907	;# 
   404   000F44                     CTMUCONL        equ	3908	;# 
   405   000F44                     CTMUCON1        equ	3908	;# 
   406   000F45                     CTMUCONH        equ	3909	;# 
   407   000F45                     CTMUCON0        equ	3909	;# 
   408   000F46                     SRCON1          equ	3910	;# 
   409   000F47                     SRCON0          equ	3911	;# 
   410   000F48                     CCPTMRS1        equ	3912	;# 
   411   000F49                     CCPTMRS0        equ	3913	;# 
   412   000F4A                     T6CON           equ	3914	;# 
   413   000F4B                     PR6             equ	3915	;# 
   414   000F4C                     TMR6            equ	3916	;# 
   415   000F4D                     T5GCON          equ	3917	;# 
   416   000F4E                     T5CON           equ	3918	;# 
   417   000F4F                     TMR5            equ	3919	;# 
   418   000F4F                     TMR5L           equ	3919	;# 
   419   000F50                     TMR5H           equ	3920	;# 
   420   000F51                     T4CON           equ	3921	;# 
   421   000F52                     PR4             equ	3922	;# 
   422   000F53                     TMR4            equ	3923	;# 
   423   000F54                     CCP5CON         equ	3924	;# 
   424   000F55                     CCPR5           equ	3925	;# 
   425   000F55                     CCPR5L          equ	3925	;# 
   426   000F56                     CCPR5H          equ	3926	;# 
   427   000F57                     CCP4CON         equ	3927	;# 
   428   000F58                     CCPR4           equ	3928	;# 
   429   000F58                     CCPR4L          equ	3928	;# 
   430   000F59                     CCPR4H          equ	3929	;# 
   431   000F5A                     PSTR3CON        equ	3930	;# 
   432   000F5B                     ECCP3AS         equ	3931	;# 
   433   000F5B                     CCP3AS          equ	3931	;# 
   434   000F5C                     PWM3CON         equ	3932	;# 
   435   000F5D                     CCP3CON         equ	3933	;# 
   436   000F5E                     CCPR3           equ	3934	;# 
   437   000F5E                     CCPR3L          equ	3934	;# 
   438   000F5F                     CCPR3H          equ	3935	;# 
   439   000F60                     SLRCON          equ	3936	;# 
   440   000F61                     WPUB            equ	3937	;# 
   441   000F62                     IOCB            equ	3938	;# 
   442   000F63                     PSTR2CON        equ	3939	;# 
   443   000F64                     ECCP2AS         equ	3940	;# 
   444   000F64                     CCP2AS          equ	3940	;# 
   445   000F65                     PWM2CON         equ	3941	;# 
   446   000F66                     CCP2CON         equ	3942	;# 
   447   000F67                     CCPR2           equ	3943	;# 
   448   000F67                     CCPR2L          equ	3943	;# 
   449   000F68                     CCPR2H          equ	3944	;# 
   450   000F69                     SSP2CON3        equ	3945	;# 
   451   000F6A                     SSP2MSK         equ	3946	;# 
   452   000F6B                     SSP2CON2        equ	3947	;# 
   453   000F6C                     SSP2CON1        equ	3948	;# 
   454   000F6D                     SSP2STAT        equ	3949	;# 
   455   000F6E                     SSP2ADD         equ	3950	;# 
   456   000F6F                     SSP2BUF         equ	3951	;# 
   457   000F70                     BAUDCON2        equ	3952	;# 
   458   000F70                     BAUD2CON        equ	3952	;# 
   459   000F71                     RCSTA2          equ	3953	;# 
   460   000F71                     RC2STA          equ	3953	;# 
   461   000F72                     TXSTA2          equ	3954	;# 
   462   000F72                     TX2STA          equ	3954	;# 
   463   000F73                     TXREG2          equ	3955	;# 
   464   000F73                     TX2REG          equ	3955	;# 
   465   000F74                     RCREG2          equ	3956	;# 
   466   000F74                     RC2REG          equ	3956	;# 
   467   000F75                     SPBRG2          equ	3957	;# 
   468   000F75                     SP2BRG          equ	3957	;# 
   469   000F76                     SPBRGH2         equ	3958	;# 
   470   000F76                     SP2BRGH         equ	3958	;# 
   471   000F77                     CM2CON1         equ	3959	;# 
   472   000F77                     CM12CON         equ	3959	;# 
   473   000F78                     CM2CON0         equ	3960	;# 
   474   000F78                     CM2CON          equ	3960	;# 
   475   000F79                     CM1CON0         equ	3961	;# 
   476   000F79                     CM1CON          equ	3961	;# 
   477   000F7A                     PIE4            equ	3962	;# 
   478   000F7B                     PIR4            equ	3963	;# 
   479   000F7C                     IPR4            equ	3964	;# 
   480   000F7D                     PIE5            equ	3965	;# 
   481   000F7E                     PIR5            equ	3966	;# 
   482   000F7F                     IPR5            equ	3967	;# 
   483   000F80                     PORTA           equ	3968	;# 
   484   000F81                     PORTB           equ	3969	;# 
   485   000F82                     PORTC           equ	3970	;# 
   486   000F83                     PORTD           equ	3971	;# 
   487   000F84                     PORTE           equ	3972	;# 
   488   000F89                     LATA            equ	3977	;# 
   489   000F8A                     LATB            equ	3978	;# 
   490   000F8B                     LATC            equ	3979	;# 
   491   000F8C                     LATD            equ	3980	;# 
   492   000F8D                     LATE            equ	3981	;# 
   493   000F92                     TRISA           equ	3986	;# 
   494   000F92                     DDRA            equ	3986	;# 
   495   000F93                     TRISB           equ	3987	;# 
   496   000F93                     DDRB            equ	3987	;# 
   497   000F94                     TRISC           equ	3988	;# 
   498   000F94                     DDRC            equ	3988	;# 
   499   000F95                     TRISD           equ	3989	;# 
   500   000F95                     DDRD            equ	3989	;# 
   501   000F96                     TRISE           equ	3990	;# 
   502   000F96                     DDRE            equ	3990	;# 
   503   000F9B                     OSCTUNE         equ	3995	;# 
   504   000F9C                     HLVDCON         equ	3996	;# 
   505   000F9C                     LVDCON          equ	3996	;# 
   506   000F9D                     PIE1            equ	3997	;# 
   507   000F9E                     PIR1            equ	3998	;# 
   508   000F9F                     IPR1            equ	3999	;# 
   509   000FA0                     PIE2            equ	4000	;# 
   510   000FA1                     PIR2            equ	4001	;# 
   511   000FA2                     IPR2            equ	4002	;# 
   512   000FA3                     PIE3            equ	4003	;# 
   513   000FA4                     PIR3            equ	4004	;# 
   514   000FA5                     IPR3            equ	4005	;# 
   515   000FA6                     EECON1          equ	4006	;# 
   516   000FA7                     EECON2          equ	4007	;# 
   517   000FA8                     EEDATA          equ	4008	;# 
   518   000FA9                     EEADR           equ	4009	;# 
   519   000FAA                     EEADRH          equ	4010	;# 
   520   000FAB                     RCSTA1          equ	4011	;# 
   521   000FAB                     RCSTA           equ	4011	;# 
   522   000FAB                     RC1STA          equ	4011	;# 
   523   000FAC                     TXSTA1          equ	4012	;# 
   524   000FAC                     TXSTA           equ	4012	;# 
   525   000FAC                     TX1STA          equ	4012	;# 
   526   000FAD                     TXREG1          equ	4013	;# 
   527   000FAD                     TXREG           equ	4013	;# 
   528   000FAD                     TX1REG          equ	4013	;# 
   529   000FAE                     RCREG1          equ	4014	;# 
   530   000FAE                     RCREG           equ	4014	;# 
   531   000FAE                     RC1REG          equ	4014	;# 
   532   000FAF                     SPBRG1          equ	4015	;# 
   533   000FAF                     SPBRG           equ	4015	;# 
   534   000FAF                     SP1BRG          equ	4015	;# 
   535   000FB0                     SPBRGH1         equ	4016	;# 
   536   000FB0                     SPBRGH          equ	4016	;# 
   537   000FB0                     SP1BRGH         equ	4016	;# 
   538   000FB1                     T3CON           equ	4017	;# 
   539   000FB2                     TMR3            equ	4018	;# 
   540   000FB2                     TMR3L           equ	4018	;# 
   541   000FB3                     TMR3H           equ	4019	;# 
   542   000FB4                     T3GCON          equ	4020	;# 
   543   000FB6                     ECCP1AS         equ	4022	;# 
   544   000FB6                     ECCPAS          equ	4022	;# 
   545   000FB7                     PWM1CON         equ	4023	;# 
   546   000FB7                     PWMCON          equ	4023	;# 
   547   000FB8                     BAUDCON1        equ	4024	;# 
   548   000FB8                     BAUDCON         equ	4024	;# 
   549   000FB8                     BAUDCTL         equ	4024	;# 
   550   000FB8                     BAUD1CON        equ	4024	;# 
   551   000FB9                     PSTR1CON        equ	4025	;# 
   552   000FB9                     PSTRCON         equ	4025	;# 
   553   000FBA                     T2CON           equ	4026	;# 
   554   000FBB                     PR2             equ	4027	;# 
   555   000FBC                     TMR2            equ	4028	;# 
   556   000FBD                     CCP1CON         equ	4029	;# 
   557   000FBE                     CCPR1           equ	4030	;# 
   558   000FBE                     CCPR1L          equ	4030	;# 
   559   000FBF                     CCPR1H          equ	4031	;# 
   560   000FC0                     ADCON2          equ	4032	;# 
   561   000FC1                     ADCON1          equ	4033	;# 
   562   000FC2                     ADCON0          equ	4034	;# 
   563   000FC3                     ADRES           equ	4035	;# 
   564   000FC3                     ADRESL          equ	4035	;# 
   565   000FC4                     ADRESH          equ	4036	;# 
   566   000FC5                     SSP1CON2        equ	4037	;# 
   567   000FC5                     SSPCON2         equ	4037	;# 
   568   000FC6                     SSP1CON1        equ	4038	;# 
   569   000FC6                     SSPCON1         equ	4038	;# 
   570   000FC7                     SSP1STAT        equ	4039	;# 
   571   000FC7                     SSPSTAT         equ	4039	;# 
   572   000FC8                     SSP1ADD         equ	4040	;# 
   573   000FC8                     SSPADD          equ	4040	;# 
   574   000FC9                     SSP1BUF         equ	4041	;# 
   575   000FC9                     SSPBUF          equ	4041	;# 
   576   000FCA                     SSP1MSK         equ	4042	;# 
   577   000FCA                     SSPMSK          equ	4042	;# 
   578   000FCB                     SSP1CON3        equ	4043	;# 
   579   000FCB                     SSPCON3         equ	4043	;# 
   580   000FCC                     T1GCON          equ	4044	;# 
   581   000FCD                     T1CON           equ	4045	;# 
   582   000FCE                     TMR1            equ	4046	;# 
   583   000FCE                     TMR1L           equ	4046	;# 
   584   000FCF                     TMR1H           equ	4047	;# 
   585   000FD0                     RCON            equ	4048	;# 
   586   000FD1                     WDTCON          equ	4049	;# 
   587   000FD2                     OSCCON2         equ	4050	;# 
   588   000FD3                     OSCCON          equ	4051	;# 
   589   000FD5                     T0CON           equ	4053	;# 
   590   000FD6                     TMR0            equ	4054	;# 
   591   000FD6                     TMR0L           equ	4054	;# 
   592   000FD7                     TMR0H           equ	4055	;# 
   593   000FD8                     STATUS          equ	4056	;# 
   594   000FD9                     FSR2            equ	4057	;# 
   595   000FD9                     FSR2L           equ	4057	;# 
   596   000FDA                     FSR2H           equ	4058	;# 
   597   000FDB                     PLUSW2          equ	4059	;# 
   598   000FDC                     PREINC2         equ	4060	;# 
   599   000FDD                     POSTDEC2        equ	4061	;# 
   600   000FDE                     POSTINC2        equ	4062	;# 
   601   000FDF                     INDF2           equ	4063	;# 
   602   000FE0                     BSR             equ	4064	;# 
   603   000FE1                     FSR1            equ	4065	;# 
   604   000FE1                     FSR1L           equ	4065	;# 
   605   000FE2                     FSR1H           equ	4066	;# 
   606   000FE3                     PLUSW1          equ	4067	;# 
   607   000FE4                     PREINC1         equ	4068	;# 
   608   000FE5                     POSTDEC1        equ	4069	;# 
   609   000FE6                     POSTINC1        equ	4070	;# 
   610   000FE7                     INDF1           equ	4071	;# 
   611   000FE8                     WREG            equ	4072	;# 
   612   000FE9                     FSR0            equ	4073	;# 
   613   000FE9                     FSR0L           equ	4073	;# 
   614   000FEA                     FSR0H           equ	4074	;# 
   615   000FEB                     PLUSW0          equ	4075	;# 
   616   000FEC                     PREINC0         equ	4076	;# 
   617   000FED                     POSTDEC0        equ	4077	;# 
   618   000FEE                     POSTINC0        equ	4078	;# 
   619   000FEF                     INDF0           equ	4079	;# 
   620   000FF0                     INTCON3         equ	4080	;# 
   621   000FF1                     INTCON2         equ	4081	;# 
   622   000FF2                     INTCON          equ	4082	;# 
   623   000FF3                     PROD            equ	4083	;# 
   624   000FF3                     PRODL           equ	4083	;# 
   625   000FF4                     PRODH           equ	4084	;# 
   626   000FF5                     TABLAT          equ	4085	;# 
   627   000FF6                     TBLPTR          equ	4086	;# 
   628   000FF6                     TBLPTRL         equ	4086	;# 
   629   000FF7                     TBLPTRH         equ	4087	;# 
   630   000FF8                     TBLPTRU         equ	4088	;# 
   631   000FF9                     PCLAT           equ	4089	;# 
   632   000FF9                     PC              equ	4089	;# 
   633   000FF9                     PCL             equ	4089	;# 
   634   000FFA                     PCLATH          equ	4090	;# 
   635   000FFB                     PCLATU          equ	4091	;# 
   636   000FFC                     STKPTR          equ	4092	;# 
   637   000FFD                     TOS             equ	4093	;# 
   638   000FFD                     TOSL            equ	4093	;# 
   639   000FFE                     TOSH            equ	4094	;# 
   640   000FFF                     TOSU            equ	4095	;# 
   641                           
   642                           	psect	idataCOMRAM
   643   0026BA                     __pidataCOMRAM:
   644                           	callstack 0
   645                           
   646                           ;initializer for _menu_sel
   647   0026BA  FFFF               	dw	65535
   648                           
   649                           ;initializer for _LCD_entry_mode
   650   0026BC  06                 	db	6
   651                           
   652                           ;initializer for _LCD_display_control
   653   0026BD  0C                 	db	12
   654   000F3A                     _ANSELC         set	3898
   655   000F38                     _ANSELAbits     set	3896
   656   000F3A                     _ANSELCbits     set	3898
   657   000F39                     _ANSELBbits     set	3897
   658   000F95                     _TRISDbits      set	3989
   659   000F8C                     _LATDbits       set	3980
   660   000F82                     _PORTCbits      set	3970
   661   000F81                     _PORTBbits      set	3969
   662   000FC3                     _ADRESL         set	4035
   663   000FC4                     _ADRESH         set	4036
   664   000FC2                     _ADCON0bits     set	4034
   665   000FCD                     _T1CONbits      set	4045
   666   000FBE                     _CCPR1L         set	4030
   667   000FBF                     _CCPR1H         set	4031
   668   000FBD                     _CCP1CONbits    set	4029
   669   000FAD                     _TXREG          set	4013
   670   000FAC                     _TXSTAbits      set	4012
   671   000FAB                     _RCSTAbits      set	4011
   672   000FAE                     _RCREG1         set	4014
   673   000F9E                     _PIR1bits       set	3998
   674   000FF2                     _INTCONbits     set	4082
   675   000F9D                     _PIE1bits       set	3997
   676   000FAB                     _RCSTA1bits     set	4011
   677   000FAF                     _SPBRG1         set	4015
   678   000FB0                     _SPBRGH1        set	4016
   679   000FB8                     _BAUDCON1bits   set	4024
   680   000FAC                     _TXSTA1bits     set	4012
   681   000FC0                     _ADCON2         set	4032
   682   000FC1                     _ADCON1         set	4033
   683   000FC2                     _ADCON0         set	4034
   684   000F92                     _TRISAbits      set	3986
   685   000F94                     _TRISCbits      set	3988
   686   000F93                     _TRISBbits      set	3987
   687   000FD3                     _OSCCON         set	4051
   688                           
   689                           	psect	smallconst
   690   001000                     __psmallconst:
   691                           	callstack 0
   692   001000  00                 	db	0
   693   001001                     STR_5:
   694   001001  20                 	db	32
   695   001002  20                 	db	32
   696   001003  4E                 	db	78	;'N'
   697   001004  6F                 	db	111	;'o'
   698   001005  74                 	db	116	;'t'
   699   001006  20                 	db	32
   700   001007  44                 	db	68	;'D'
   701   001008  65                 	db	101	;'e'
   702   001009  74                 	db	116	;'t'
   703   00100A  65                 	db	101	;'e'
   704   00100B  63                 	db	99	;'c'
   705   00100C  74                 	db	116	;'t'
   706   00100D  65                 	db	101	;'e'
   707   00100E  64                 	db	100	;'d'
   708   00100F  20                 	db	32
   709   001010  20                 	db	32
   710   001011  00                 	db	0
   711   001012                     STR_2:
   712   001012  3E                 	db	62	;'>'
   713   001013  3E                 	db	62	;'>'
   714   001014  3E                 	db	62	;'>'
   715   001015  20                 	db	32
   716   001016  4F                 	db	79	;'O'
   717   001017  42                 	db	66	;'B'
   718   001018  44                 	db	68	;'D'
   719   001019  49                 	db	73	;'I'
   720   00101A  49                 	db	73	;'I'
   721   00101B  50                 	db	80	;'P'
   722   00101C  49                 	db	73	;'I'
   723   00101D  43                 	db	67	;'C'
   724   00101E  20                 	db	32
   725   00101F  3C                 	db	60	;'<'
   726   001020  3C                 	db	60	;'<'
   727   001021  3C                 	db	60	;'<'
   728   001022  00                 	db	0
   729   001023                     STR_3:
   730   001023  3E                 	db	62	;'>'
   731   001024  3E                 	db	62	;'>'
   732   001025  3E                 	db	62	;'>'
   733   001026  3E                 	db	62	;'>'
   734   001027  3E                 	db	62	;'>'
   735   001028  20                 	db	32
   736   001029  56                 	db	86	;'V'
   737   00102A  31                 	db	49	;'1'
   738   00102B  2E                 	db	46
   739   00102C  30                 	db	48	;'0'
   740   00102D  20                 	db	32
   741   00102E  3C                 	db	60	;'<'
   742   00102F  3C                 	db	60	;'<'
   743   001030  3C                 	db	60	;'<'
   744   001031  3C                 	db	60	;'<'
   745   001032  3C                 	db	60	;'<'
   746   001033  00                 	db	0
   747   001034                     STR_28:
   748   001034  59                 	db	89	;'Y'
   749   001035  2F                 	db	47
   750   001036  4E                 	db	78	;'N'
   751   001037  20                 	db	32
   752   001038  3C                 	db	60	;'<'
   753   001039  3C                 	db	60	;'<'
   754   00103A  3C                 	db	60	;'<'
   755   00103B  3C                 	db	60	;'<'
   756   00103C  3C                 	db	60	;'<'
   757   00103D  3C                 	db	60	;'<'
   758   00103E  3C                 	db	60	;'<'
   759   00103F  3C                 	db	60	;'<'
   760   001040  3C                 	db	60	;'<'
   761   001041  3C                 	db	60	;'<'
   762   001042  3C                 	db	60	;'<'
   763   001043  3C                 	db	60	;'<'
   764   001044  00                 	db	0
   765   001045                     STR_8:
   766   001045  4D                 	db	77	;'M'
   767   001046  45                 	db	69	;'E'
   768   001047  4E                 	db	78	;'N'
   769   001048  55                 	db	85	;'U'
   770   001049  20                 	db	32
   771   00104A  3C                 	db	60	;'<'
   772   00104B  4F                 	db	79	;'O'
   773   00104C  42                 	db	66	;'B'
   774   00104D  44                 	db	68	;'D'
   775   00104E  49                 	db	73	;'I'
   776   00104F  49                 	db	73	;'I'
   777   001050  50                 	db	80	;'P'
   778   001051  49                 	db	73	;'I'
   779   001052  43                 	db	67	;'C'
   780   001053  3E                 	db	62	;'>'
   781   001054  00                 	db	0
   782   001055                     STR_9:
   783   001055  4C                 	db	76	;'L'
   784   001056  52                 	db	82	;'R'
   785   001057  4D                 	db	77	;'M'
   786   001058  20                 	db	32
   787   001059  52                 	db	82	;'R'
   788   00105A  44                 	db	68	;'D'
   789   00105B  43                 	db	67	;'C'
   790   00105C  20                 	db	32
   791   00105D  43                 	db	67	;'C'
   792   00105E  44                 	db	68	;'D'
   793   00105F  43                 	db	67	;'C'
   794   001060  20                 	db	32
   795   001061  44                 	db	68	;'D'
   796   001062  53                 	db	83	;'S'
   797   001063  49                 	db	73	;'I'
   798   001064  00                 	db	0
   799   001065                     STR_32:
   800   001065  4E                 	db	78	;'N'
   801   001066  6F                 	db	111	;'o'
   802   001067  74                 	db	116	;'t'
   803   001068  68                 	db	104	;'h'
   804   001069  69                 	db	105	;'i'
   805   00106A  6E                 	db	110	;'n'
   806   00106B  67                 	db	103	;'g'
   807   00106C  20                 	db	32
   808   00106D  43                 	db	67	;'C'
   809   00106E  6C                 	db	108	;'l'
   810   00106F  65                 	db	101	;'e'
   811   001070  61                 	db	97	;'a'
   812   001071  72                 	db	114	;'r'
   813   001072  65                 	db	101	;'e'
   814   001073  64                 	db	100	;'d'
   815   001074  00                 	db	0
   816   001075                     STR_27:
   817   001075  43                 	db	67	;'C'
   818   001076  6C                 	db	108	;'l'
   819   001077  65                 	db	101	;'e'
   820   001078  61                 	db	97	;'a'
   821   001079  72                 	db	114	;'r'
   822   00107A  20                 	db	32
   823   00107B  43                 	db	67	;'C'
   824   00107C  6F                 	db	111	;'o'
   825   00107D  64                 	db	100	;'d'
   826   00107E  65                 	db	101	;'e'
   827   00107F  28                 	db	40
   828   001080  73                 	db	115	;'s'
   829   001081  29                 	db	41
   830   001082  3F                 	db	63	;'?'
   831   001083  00                 	db	0
   832   001084                     STR_30:
   833   001084  43                 	db	67	;'C'
   834   001085  6F                 	db	111	;'o'
   835   001086  64                 	db	100	;'d'
   836   001087  65                 	db	101	;'e'
   837   001088  73                 	db	115	;'s'
   838   001089  20                 	db	32
   839   00108A  43                 	db	67	;'C'
   840   00108B  6C                 	db	108	;'l'
   841   00108C  65                 	db	101	;'e'
   842   00108D  61                 	db	97	;'a'
   843   00108E  72                 	db	114	;'r'
   844   00108F  65                 	db	101	;'e'
   845   001090  64                 	db	100	;'d'
   846   001091  00                 	db	0
   847   001092                     STR_31:
   848   001092  54                 	db	84	;'T'
   849   001093  6F                 	db	111	;'o'
   850   001094  20                 	db	32
   851   001095  4D                 	db	77	;'M'
   852   001096  65                 	db	101	;'e'
   853   001097  6E                 	db	110	;'n'
   854   001098  75                 	db	117	;'u'
   855   001099  2E                 	db	46
   856   00109A  2E                 	db	46
   857   00109B  2E                 	db	46
   858   00109C  00                 	db	0
   859   00109D                     STR_1:
   860   00109D  41                 	db	65	;'A'
   861   00109E  54                 	db	84	;'T'
   862   00109F  45                 	db	69	;'E'
   863   0010A0  30                 	db	48	;'0'
   864   0010A1  0D                 	db	13
   865   0010A2  00                 	db	0
   866   0010A3                     STR_25:
   867   0010A3  30                 	db	48	;'0'
   868   0010A4  31                 	db	49	;'1'
   869   0010A5  30                 	db	48	;'0'
   870   0010A6  38                 	db	56	;'8'
   871   0010A7  0D                 	db	13
   872   0010A8  00                 	db	0
   873   0010A9                     STR_10:
   874   0010A9  30                 	db	48	;'0'
   875   0010AA  31                 	db	49	;'1'
   876   0010AB  30                 	db	48	;'0'
   877   0010AC  43                 	db	67	;'C'
   878   0010AD  0D                 	db	13
   879   0010AE  00                 	db	0
   880   0010AF                     STR_18:
   881   0010AF  30                 	db	48	;'0'
   882   0010B0  31                 	db	49	;'1'
   883   0010B1  30                 	db	48	;'0'
   884   0010B2  46                 	db	70	;'F'
   885   0010B3  0D                 	db	13
   886   0010B4  00                 	db	0
   887   0010B5                     STR_14:
   888   0010B5  41                 	db	65	;'A'
   889   0010B6  54                 	db	84	;'T'
   890   0010B7  52                 	db	82	;'R'
   891   0010B8  56                 	db	86	;'V'
   892   0010B9  0D                 	db	13
   893   0010BA  00                 	db	0
   894   0010BB                     STR_12:
   895   0010BB  20                 	db	32
   896   0010BC  20                 	db	32
   897   0010BD  20                 	db	32
   898   0010BE  20                 	db	32
   899   0010BF  20                 	db	32
   900   0010C0  00                 	db	0
   901   0010C1                     STR_16:
   902   0010C1  56                 	db	86	;'V'
   903   0010C2  42                 	db	66	;'B'
   904   0010C3  61                 	db	97	;'a'
   905   0010C4  74                 	db	116	;'t'
   906   0010C5  74                 	db	116	;'t'
   907   0010C6  00                 	db	0
   908   0010C7                     STR_4:
   909   0010C7  41                 	db	65	;'A'
   910   0010C8  54                 	db	84	;'T'
   911   0010C9  49                 	db	73	;'I'
   912   0010CA  0D                 	db	13
   913   0010CB  00                 	db	0
   914   0010CC                     STR_26:
   915   0010CC  53                 	db	83	;'S'
   916   0010CD  41                 	db	65	;'A'
   917   0010CE  45                 	db	69	;'E'
   918   0010CF  3A                 	db	58	;':'
   919   0010D0  00                 	db	0
   920   0010D1                     STR_24:
   921   0010D1  45                 	db	69	;'E'
   922   0010D2  4C                 	db	76	;'L'
   923   0010D3  4D                 	db	77	;'M'
   924   0010D4  3A                 	db	58	;':'
   925   0010D5  00                 	db	0
   926   0010D6                     STR_29:
   927   0010D6  30                 	db	48	;'0'
   928   0010D7  34                 	db	52	;'4'
   929   0010D8  0D                 	db	13
   930   0010D9  00                 	db	0
   931   0010DA                     STR_17:
   932   0010DA  4E                 	db	78	;'N'
   933   0010DB  2F                 	db	47
   934   0010DC  41                 	db	65	;'A'
   935   0010DD  00                 	db	0
   936   0010DE                     STR_13:
   937   0010DE  52                 	db	82	;'R'
   938   0010DF  50                 	db	80	;'P'
   939   0010E0  4D                 	db	77	;'M'
   940   0010E1  00                 	db	0
   941   0010E2                     STR_21:
   942   0010E2  41                 	db	65	;'A'
   943   0010E3  49                 	db	73	;'I'
   944   0010E4  54                 	db	84	;'T'
   945   0010E5  00                 	db	0
   946   0010E6                     STR_11:
   947   0010E6  25                 	db	37
   948   0010E7  75                 	db	117	;'u'
   949   0010E8  00                 	db	0
   950   0010E9                     STR_22:
   951   0010E9  43                 	db	67	;'C'
   952   0010EA  00                 	db	0
   953   0010E6                     STR_20          equ	STR_11
   954   001092                     STR_33          equ	STR_31
   955   0010BB                     STR_15          equ	STR_12
   956   0010BD                     STR_19          equ	STR_12+2
   957   0010C7                     STR_6           equ	STR_4
   958   0010C7                     STR_23          equ	STR_4
   959   00109D                     STR_7           equ	STR_1
   960   0010EB  00                 	db	0	; dummy byte at the end
   961   001000                     __smallconst    set	__psmallconst
   962   001000                     __mediumconst   set	__psmallconst
   963   000002                     __activetblptr  equ	2
   964                           
   965                           ; #config settings
   966                           
   967                           	psect	cinit
   968   0023DE                     __pcinit:
   969                           	callstack 0
   970   0023DE                     start_initialization:
   971                           	callstack 0
   972   0023DE                     __initialization:
   973                           	callstack 0
   974                           
   975                           ; Initialize objects allocated to COMRAM (4 bytes)
   976                           ; load TBLPTR registers with __pidataCOMRAM
   977   0023DE  0EBA               	movlw	low __pidataCOMRAM
   978   0023E0  6EF6               	movwf	tblptrl,c
   979   0023E2  0E26               	movlw	high __pidataCOMRAM
   980   0023E4  6EF7               	movwf	tblptrh,c
   981   0023E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   982   0023E8  6EF8               	movwf	tblptru,c
   983   0023EA  EE00  F058         	lfsr	0,__pdataCOMRAM
   984   0023EE  EE10 F004          	lfsr	1,4
   985   0023F2                     copy_data0:
   986   0023F2  0009               	tblrd		*+
   987   0023F4  CFF5 FFEE          	movff	tablat,postinc0
   988   0023F8  50E5               	movf	postdec1,w,c
   989   0023FA  50E1               	movf	fsr1l,w,c
   990   0023FC  E1FA               	bnz	copy_data0
   991                           
   992                           ; Clear objects allocated to BANK0 (80 bytes)
   993   0023FE  EE00  F060         	lfsr	0,__pbssBANK0
   994   002402  0E50               	movlw	80
   995   002404                     clear_0:
   996   002404  6AEE               	clrf	postinc0,c
   997   002406  06E8               	decf	wreg,f,c
   998   002408  E1FD               	bnz	clear_0
   999                           
  1000                           ; Clear objects allocated to COMRAM (40 bytes)
  1001   00240A  EE00  F030         	lfsr	0,__pbssCOMRAM
  1002   00240E  0E28               	movlw	40
  1003   002410                     clear_1:
  1004   002410  6AEE               	clrf	postinc0,c
  1005   002412  06E8               	decf	wreg,f,c
  1006   002414  E1FD               	bnz	clear_1
  1007   002416                     end_of_initialization:
  1008                           	callstack 0
  1009   002416                     __end_of__initialization:
  1010                           	callstack 0
  1011   002416  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1012   002418  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1013   00241A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1014   00241C  6EF8               	movwf	tblptru,c
  1015   00241E  0100               	movlb	0
  1016   002420  EF69  F011         	goto	_main	;jump to C main() function
  1017                           
  1018                           	psect	bssCOMRAM
  1019   000030                     __pbssCOMRAM:
  1020                           	callstack 0
  1021   000030                     	ds	4
  1022   000034                     _width:
  1023                           	callstack 0
  1024   000034                     	ds	2
  1025   000036                     _prec:
  1026                           	callstack 0
  1027   000036                     	ds	2
  1028   000038                     _air_intake_temp:
  1029                           	callstack 0
  1030   000038                     	ds	2
  1031   00003A                     _A_air_intake:
  1032                           	callstack 0
  1033   00003A                     	ds	2
  1034   00003C                     _RPM:
  1035                           	callstack 0
  1036   00003C                     	ds	2
  1037   00003E                     _B_rpm:
  1038                           	callstack 0
  1039   00003E                     	ds	2
  1040   000040                     _A_rpm:
  1041                           	callstack 0
  1042   000040                     	ds	2
  1043   000042                     _result:
  1044                           	callstack 0
  1045   000042                     	ds	2
  1046   000044                     _flags:
  1047                           	callstack 0
  1048   000044                     	ds	1
  1049   000045                     _message_complete:
  1050                           	callstack 0
  1051   000045                     	ds	1
  1052   000046                     _RX_char:
  1053                           	callstack 0
  1054   000046                     	ds	1
  1055   000047                     _buffer_count:
  1056                           	callstack 0
  1057   000047                     	ds	1
  1058   000048                     _rpm_string:
  1059                           	callstack 0
  1060   000048                     	ds	16
  1061                           
  1062                           	psect	dataCOMRAM
  1063   000058                     __pdataCOMRAM:
  1064                           	callstack 0
  1065   000058                     _menu_sel:
  1066                           	callstack 0
  1067   000058                     	ds	2
  1068   00005A                     _LCD_entry_mode:
  1069                           	callstack 0
  1070   00005A                     	ds	1
  1071   00005B                     _LCD_display_control:
  1072                           	callstack 0
  1073   00005B                     	ds	1
  1074                           
  1075                           	psect	bssBANK0
  1076   000060                     __pbssBANK0:
  1077                           	callstack 0
  1078   000060                     _dbuf:
  1079                           	callstack 0
  1080   000060                     	ds	32
  1081   000080                     _buffer:
  1082                           	callstack 0
  1083   000080                     	ds	32
  1084   0000A0                     _air_intake_string:
  1085                           	callstack 0
  1086   0000A0                     	ds	16
  1087                           
  1088                           	psect	cstackBANK0
  1089   0000B0                     __pcstackBANK0:
  1090                           	callstack 0
  1091   0000B0                     ??_main:
  1092                           
  1093                           ; 1 bytes @ 0x0
  1094   0000B0                     	ds	2
  1095                           
  1096                           	psect	cstackCOMRAM
  1097   000001                     __pcstackCOMRAM:
  1098                           	callstack 0
  1099   000001                     ??_UART_ISR:
  1100                           
  1101                           ; 1 bytes @ 0x0
  1102   000001                     	ds	2
  1103   000003                     ?_readADC:
  1104                           	callstack 0
  1105   000003                     ?___lwdiv:
  1106                           	callstack 0
  1107   000003                     ?___lwmod:
  1108                           	callstack 0
  1109   000003                     ?___lmul:
  1110                           	callstack 0
  1111   000003                     ?___aldiv:
  1112                           	callstack 0
  1113   000003                     ?___almod:
  1114                           	callstack 0
  1115   000003                     UART1_SendChar@c:
  1116                           	callstack 0
  1117   000003                     hex_char_to_value@c:
  1118                           	callstack 0
  1119   000003                     strchr@s:
  1120                           	callstack 0
  1121   000003                     ___lwdiv@dividend:
  1122                           	callstack 0
  1123   000003                     ___lwmod@dividend:
  1124                           	callstack 0
  1125   000003                     fputc@c:
  1126                           	callstack 0
  1127   000003                     ___lmul@multiplier:
  1128                           	callstack 0
  1129   000003                     ___aldiv@dividend:
  1130                           	callstack 0
  1131   000003                     ___almod@dividend:
  1132                           	callstack 0
  1133   000003                     ??_LCD_write_command:
  1134   000003                     ??_LCD_write_data:
  1135                           
  1136                           ; 1 bytes @ 0x2
  1137   000003                     	ds	1
  1138   000004                     UART1_SendString@string:
  1139                           	callstack 0
  1140   000004                     strchr@c:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x3
  1144   000004                     	ds	1
  1145   000005                     LCD_write_command@command:
  1146                           	callstack 0
  1147   000005                     LCD_write_data@data:
  1148                           	callstack 0
  1149   000005                     fputc@fp:
  1150                           	callstack 0
  1151   000005                     ___lwdiv@divisor:
  1152                           	callstack 0
  1153   000005                     ___lwmod@divisor:
  1154                           	callstack 0
  1155   000005                     ??_UART1_SendString:
  1156   000005                     ??_readADC:
  1157                           
  1158                           ; 1 bytes @ 0x4
  1159   000005                     	ds	1
  1160   000006                     LCD_cursor_set@column:
  1161                           	callstack 0
  1162   000006                     LCD_configure_cursor_blink@state:
  1163                           	callstack 0
  1164   000006                     UART1_SendString@i:
  1165                           	callstack 0
  1166   000006                     LCD_write_string@string:
  1167                           	callstack 0
  1168   000006                     ??_LCD_clear:
  1169   000006                     ??_fputc:
  1170                           
  1171                           ; 1 bytes @ 0x5
  1172   000006                     	ds	1
  1173   000007                     LCD_cursor_set@row:
  1174                           	callstack 0
  1175   000007                     ___lwmod@counter:
  1176                           	callstack 0
  1177   000007                     ___lwdiv@quotient:
  1178                           	callstack 0
  1179   000007                     ___lmul@multiplicand:
  1180                           	callstack 0
  1181   000007                     ___aldiv@divisor:
  1182                           	callstack 0
  1183   000007                     ___almod@divisor:
  1184                           	callstack 0
  1185   000007                     ??_LCD_init:
  1186   000007                     
  1187                           ; 1 bytes @ 0x6
  1188   000007                     	ds	1
  1189   000008                     ??_LCD_write_string:
  1190                           
  1191                           ; 1 bytes @ 0x7
  1192   000008                     	ds	1
  1193   000009                     ___lwdiv@counter:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0x8
  1197   000009                     	ds	1
  1198   00000A                     LCD_write_string@i:
  1199                           	callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x9
  1202   00000A                     	ds	1
  1203   00000B                     ___aldiv@counter:
  1204                           	callstack 0
  1205   00000B                     ___almod@counter:
  1206                           	callstack 0
  1207   00000B                     vfpfcnvrt@fp:
  1208                           	callstack 0
  1209   00000B                     ___lmul@product:
  1210                           	callstack 0
  1211   00000B                     ??_clear_diagnostic_codes:
  1212   00000B                     
  1213                           ; 1 bytes @ 0xA
  1214   00000B                     	ds	1
  1215   00000C                     ___aldiv@sign:
  1216                           	callstack 0
  1217   00000C                     ___almod@sign:
  1218                           	callstack 0
  1219   00000C                     vfpfcnvrt@fmt:
  1220                           	callstack 0
  1221                           
  1222                           ; 1 bytes @ 0xB
  1223   00000C                     	ds	1
  1224   00000D                     vfpfcnvrt@ap:
  1225                           	callstack 0
  1226   00000D                     clear_diagnostic_codes@opt_sel:
  1227                           	callstack 0
  1228   00000D                     ___aldiv@quotient:
  1229                           	callstack 0
  1230                           
  1231                           ; 4 bytes @ 0xC
  1232   00000D                     	ds	1
  1233   00000E                     ??_vfpfcnvrt:
  1234                           
  1235                           ; 1 bytes @ 0xD
  1236   00000E                     	ds	1
  1237   00000F                     vfpfcnvrt@convarg:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0xE
  1241   00000F                     	ds	2
  1242   000011                     LCD_write_variable@variable:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x10
  1246   000011                     	ds	2
  1247   000013                     vfpfcnvrt@cp:
  1248                           	callstack 0
  1249                           
  1250                           ; 1 bytes @ 0x12
  1251   000013                     	ds	1
  1252   000014                     vfpfcnvrt@c:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x13
  1256   000014                     	ds	1
  1257   000015                     ?_vfprintf:
  1258                           	callstack 0
  1259   000015                     LCD_write_variable@left_offset:
  1260                           	callstack 0
  1261   000015                     vfprintf@fp:
  1262                           	callstack 0
  1263                           
  1264                           ; 1 bytes @ 0x14
  1265   000015                     	ds	1
  1266   000016                     LCD_write_variable@i:
  1267                           	callstack 0
  1268   000016                     vfprintf@fmt:
  1269                           	callstack 0
  1270   000016                     
  1271                           ; 1 bytes @ 0x15
  1272   000016                     	ds	1
  1273   000017                     LCD_write_variable@digits:
  1274                           	callstack 0
  1275   000017                     vfprintf@ap:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x16
  1279   000017                     	ds	1
  1280   000018                     vfprintf@cfmt:
  1281                           	callstack 0
  1282   000018                     LCD_write_variable@temp_variable:
  1283                           	callstack 0
  1284   000018                     
  1285                           ; 1 bytes @ 0x17
  1286   000018                     	ds	1
  1287   000019                     ?_sprintf:
  1288                           	callstack 0
  1289   000019                     sprintf@s:
  1290                           	callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x18
  1293   000019                     	ds	1
  1294   00001A                     sprintf@fmt:
  1295                           	callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x19
  1298   00001A                     	ds	2
  1299   00001C                     ??_welcome_splash:
  1300                           
  1301                           ; 1 bytes @ 0x1B
  1302   00001C                     	ds	1
  1303   00001D                     sprintf@ap:
  1304                           	callstack 0
  1305   00001D                     
  1306                           ; 1 bytes @ 0x1C
  1307   00001D                     	ds	1
  1308   00001E                     welcome_splash@plug_flag:
  1309                           	callstack 0
  1310   00001E                     sprintf@f:
  1311                           	callstack 0
  1312                           
  1313                           ; 11 bytes @ 0x1D
  1314   00001E                     	ds	2
  1315   000020                     welcome_splash@CCP1IF_counter:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x1F
  1319   000020                     	ds	9
  1320   000029                     ??_print_RPM:
  1321   000029                     ??_print_AI_Temp:
  1322                           
  1323                           ; 1 bytes @ 0x28
  1324   000029                     	ds	3
  1325   00002C                     ??_live_reading_mode:
  1326                           
  1327                           ; 1 bytes @ 0x2B
  1328   00002C                     	ds	2
  1329   00002E                     ??_main_menu:
  1330                           
  1331                           ; 1 bytes @ 0x2D
  1332   00002E                     	ds	2
  1333                           
  1334 ;;
  1335 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1336 ;;
  1337 ;; *************** function _main *****************
  1338 ;; Defined at:
  1339 ;;		line 67 in file "OBCII_PIC18F46K22.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;Total ram usage:        2 bytes
  1358 ;; Hardware stack levels required when called: 9
  1359 ;; This function calls:
  1360 ;;		_ADC_init
  1361 ;;		_LCD_clear
  1362 ;;		_LCD_init
  1363 ;;		_UART1_Init
  1364 ;;		_UART1_SendString
  1365 ;;		_input_init
  1366 ;;		_main_menu
  1367 ;;		_welcome_splash
  1368 ;; This function is called by:
  1369 ;;		Startup code after reset
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text0
  1374   0022D2                     __ptext0:
  1375                           	callstack 0
  1376   0022D2                     _main:
  1377                           	callstack 22
  1378   0022D2                     
  1379                           ;OBCII_PIC18F46K22.c: 70:     OSCCON = 0b01110000;
  1380   0022D2  0E70               	movlw	112
  1381   0022D4  6ED3               	movwf	211,c	;volatile
  1382   0022D6                     
  1383                           ;OBCII_PIC18F46K22.c: 74:     LCD_init();
  1384   0022D6  EC4D  F010         	call	_LCD_init	;wreg free
  1385   0022DA                     
  1386                           ;OBCII_PIC18F46K22.c: 75:     LCD_clear();
  1387   0022DA  EC1A  F013         	call	_LCD_clear	;wreg free
  1388   0022DE                     
  1389                           ;OBCII_PIC18F46K22.c: 76:     input_init();
  1390   0022DE  EC44  F013         	call	_input_init	;wreg free
  1391                           
  1392                           ;OBCII_PIC18F46K22.c: 77:     ADC_init();
  1393   0022E2  EC52  F013         	call	_ADC_init	;wreg free
  1394                           
  1395                           ;OBCII_PIC18F46K22.c: 78:     UART1_Init();
  1396   0022E6  ECE0  F012         	call	_UART1_Init	;wreg free
  1397   0022EA                     
  1398                           ;OBCII_PIC18F46K22.c: 80:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  1399   0022EA  0E29               	movlw	41
  1400   0022EC  0100               	movlb	0	; () banked
  1401   0022EE  6FB1               	movwf	(??_main+1)& (0+255),b
  1402   0022F0  0E96               	movlw	150
  1403   0022F2  6FB0               	movwf	??_main& (0+255),b
  1404   0022F4  0E7F               	movlw	127
  1405   0022F6                     u2197:
  1406   0022F6  2EE8               	decfsz	wreg,f,c
  1407   0022F8  D7FE               	bra	u2197
  1408   0022FA  2FB0               	decfsz	??_main& (0+255),f,b
  1409   0022FC  D7FC               	bra	u2197
  1410   0022FE  2FB1               	decfsz	(??_main+1)& (0+255),f,b
  1411   002300  D7FA               	bra	u2197
  1412   002302                     
  1413                           ;OBCII_PIC18F46K22.c: 81:     UART1_SendString("ATE0\r");
  1414   002302  0E9D               	movlw	low STR_1
  1415   002304  6E04               	movwf	UART1_SendString@string^0,c
  1416   002306  ECCA  F011         	call	_UART1_SendString	;wreg free
  1417   00230A                     
  1418                           ;OBCII_PIC18F46K22.c: 82:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1419   00230A  0E02               	movlw	2
  1420   00230C  0100               	movlb	0	; () banked
  1421   00230E  6FB1               	movwf	(??_main+1)& (0+255),b
  1422   002310  0E04               	movlw	4
  1423   002312  6FB0               	movwf	??_main& (0+255),b
  1424   002314  0EBA               	movlw	186
  1425   002316                     u2207:
  1426   002316  2EE8               	decfsz	wreg,f,c
  1427   002318  D7FE               	bra	u2207
  1428   00231A  2FB0               	decfsz	??_main& (0+255),f,b
  1429   00231C  D7FC               	bra	u2207
  1430   00231E  2FB1               	decfsz	(??_main+1)& (0+255),f,b
  1431   002320  D7FA               	bra	u2207
  1432   002322  0000               	nop	
  1433   002324                     l3100:
  1434                           
  1435                           ;OBCII_PIC18F46K22.c: 85:                 welcome_splash();
  1436   002324  ECFA  F00B         	call	_welcome_splash	;wreg free
  1437   002328                     
  1438                           ;OBCII_PIC18F46K22.c: 86:                 main_menu();
  1439   002328  EC76  F008         	call	_main_menu	;wreg free
  1440   00232C  EF92  F011         	goto	l3100
  1441   002330  EF69  F000         	goto	start
  1442   002334                     __end_of_main:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _welcome_splash *****************
  1446 ;; Defined at:
  1447 ;;		line 209 in file "OBCII_PIC18F46K22.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  CCP1IF_count    2   31[COMRAM] volatile unsigned int 
  1452 ;;  plug_flag       2   29[COMRAM] volatile int 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;Total ram usage:        6 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 4
  1469 ;; This function calls:
  1470 ;;		_LCD_cursor_set
  1471 ;;		_LCD_write_string
  1472 ;;		_LCD_write_variable
  1473 ;;		_UART1_SendString
  1474 ;;		___lwdiv
  1475 ;;		_ccp1_init
  1476 ;;		_tmr1_init
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text1
  1483   0017F4                     __ptext1:
  1484                           	callstack 0
  1485   0017F4                     _welcome_splash:
  1486                           	callstack 26
  1487   0017F4                     
  1488                           ;OBCII_PIC18F46K22.c: 210:     volatile int plug_flag = 0;
  1489   0017F4  0E00               	movlw	0
  1490   0017F6  6E1F               	movwf	(welcome_splash@plug_flag+1)^0,c	;volatile
  1491   0017F8  0E00               	movlw	0
  1492   0017FA  6E1E               	movwf	welcome_splash@plug_flag^0,c	;volatile
  1493                           
  1494                           ;OBCII_PIC18F46K22.c: 211:     volatile unsigned int CCP1IF_counter = 0;
  1495   0017FC  0E00               	movlw	0
  1496   0017FE  6E21               	movwf	(welcome_splash@CCP1IF_counter+1)^0,c	;volatile
  1497   001800  0E00               	movlw	0
  1498   001802  6E20               	movwf	welcome_splash@CCP1IF_counter^0,c	;volatile
  1499   001804                     
  1500                           ;OBCII_PIC18F46K22.c: 214:     LCD_cursor_set(1, 1);
  1501   001804  0E01               	movlw	1
  1502   001806  6E06               	movwf	LCD_cursor_set@column^0,c
  1503   001808  0E01               	movlw	1
  1504   00180A  EC9A  F011         	call	_LCD_cursor_set
  1505   00180E                     
  1506                           ;OBCII_PIC18F46K22.c: 215:     LCD_write_string(">>> OBDIIPIC <<<");
  1507   00180E  0E12               	movlw	low STR_2
  1508   001810  6E06               	movwf	LCD_write_string@string^0,c
  1509   001812  5006               	movf	LCD_write_string@string^0,w,c
  1510   001814  A4D8               	btfss	status,2,c
  1511   001816  0E10               	movlw	high __smallconst
  1512   001818  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1513   00181A  EC8B  F010         	call	_LCD_write_string	;wreg free
  1514   00181E                     
  1515                           ;OBCII_PIC18F46K22.c: 216:     LCD_cursor_set(2, 1);
  1516   00181E  0E01               	movlw	1
  1517   001820  6E06               	movwf	LCD_cursor_set@column^0,c
  1518   001822  0E02               	movlw	2
  1519   001824  EC9A  F011         	call	_LCD_cursor_set
  1520   001828                     
  1521                           ;OBCII_PIC18F46K22.c: 217:     LCD_write_string(">>>>> V1.0 <<<<<");
  1522   001828  0E23               	movlw	low STR_3
  1523   00182A  6E06               	movwf	LCD_write_string@string^0,c
  1524   00182C  5006               	movf	LCD_write_string@string^0,w,c
  1525   00182E  A4D8               	btfss	status,2,c
  1526   001830  0E10               	movlw	high __smallconst
  1527   001832  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1528   001834  EC8B  F010         	call	_LCD_write_string	;wreg free
  1529   001838                     
  1530                           ;OBCII_PIC18F46K22.c: 219:     ccp1_init();
  1531   001838  EC33  F013         	call	_ccp1_init	;wreg free
  1532                           
  1533                           ;OBCII_PIC18F46K22.c: 220:     tmr1_init();
  1534   00183C  EC3C  F013         	call	_tmr1_init	;wreg free
  1535                           
  1536                           ;OBCII_PIC18F46K22.c: 222:     while(CCP1IF_counter < (10)*10){
  1537   001840  EF46  F00C         	goto	l2792
  1538   001844                     l178:
  1539                           
  1540                           ;OBCII_PIC18F46K22.c: 223:         if(PIR1bits.CCP1IF){
  1541   001844  A49E               	btfss	158,2,c	;volatile
  1542   001846  EF27  F00C         	goto	u1841
  1543   00184A  EF29  F00C         	goto	u1840
  1544   00184E                     u1841:
  1545   00184E  EF46  F00C         	goto	l2792
  1546   001852                     u1840:
  1547   001852                     
  1548                           ;OBCII_PIC18F46K22.c: 224:             PIR1bits.CCP1IF = 0;
  1549   001852  949E               	bcf	158,2,c	;volatile
  1550   001854                     
  1551                           ;OBCII_PIC18F46K22.c: 225:             CCP1IF_counter++;
  1552   001854  4A20               	infsnz	welcome_splash@CCP1IF_counter^0,f,c	;volatile
  1553   001856  2A21               	incf	(welcome_splash@CCP1IF_counter+1)^0,f,c	;volatile
  1554   001858                     
  1555                           ;OBCII_PIC18F46K22.c: 226:             T1CONbits.TMR1ON = 1;
  1556   001858  80CD               	bsf	205,0,c	;volatile
  1557   00185A                     
  1558                           ;OBCII_PIC18F46K22.c: 227:             LCD_cursor_set(2,16);
  1559   00185A  0E10               	movlw	16
  1560   00185C  6E06               	movwf	LCD_cursor_set@column^0,c
  1561   00185E  0E02               	movlw	2
  1562   001860  EC9A  F011         	call	_LCD_cursor_set
  1563   001864                     
  1564                           ;OBCII_PIC18F46K22.c: 228:             LCD_write_variable((CCP1IF_counter)/10,1);
  1565   001864  C020  F003         	movff	welcome_splash@CCP1IF_counter,___lwdiv@dividend	;volatile
  1566   001868  C021  F004         	movff	welcome_splash@CCP1IF_counter+1,___lwdiv@dividend+1	;volatile
  1567   00186C  0E00               	movlw	0
  1568   00186E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1569   001870  0E0A               	movlw	10
  1570   001872  6E05               	movwf	___lwdiv@divisor^0,c
  1571   001874  ECC8  F010         	call	___lwdiv	;wreg free
  1572   001878  C003  F011         	movff	?___lwdiv,LCD_write_variable@variable
  1573   00187C  C004  F012         	movff	?___lwdiv+1,LCD_write_variable@variable+1
  1574   001880  6A13               	clrf	(LCD_write_variable@variable+2)^0,c
  1575   001882  6A14               	clrf	(LCD_write_variable@variable+3)^0,c
  1576   001884  0E01               	movlw	1
  1577   001886  6E15               	movwf	LCD_write_variable@left_offset^0,c
  1578   001888  EC8B  F00A         	call	_LCD_write_variable	;wreg free
  1579   00188C                     l2792:
  1580                           
  1581                           ;OBCII_PIC18F46K22.c: 222:     while(CCP1IF_counter < (10)*10){
  1582   00188C  5021               	movf	(welcome_splash@CCP1IF_counter+1)^0,w,c	;volatile
  1583   00188E  E109               	bnz	u1850
  1584   001890  0E64               	movlw	100
  1585   001892  5C20               	subwf	welcome_splash@CCP1IF_counter^0,w,c	;volatile
  1586   001894  A0D8               	btfss	status,0,c
  1587   001896  EF4F  F00C         	goto	u1851
  1588   00189A  EF51  F00C         	goto	u1850
  1589   00189E                     u1851:
  1590   00189E  EF22  F00C         	goto	l178
  1591   0018A2                     u1850:
  1592   0018A2                     
  1593                           ;OBCII_PIC18F46K22.c: 231:     UART1_SendString("ATI\r");
  1594   0018A2  0EC7               	movlw	low STR_4
  1595   0018A4  6E04               	movwf	UART1_SendString@string^0,c
  1596   0018A6  ECCA  F011         	call	_UART1_SendString	;wreg free
  1597                           
  1598                           ;OBCII_PIC18F46K22.c: 232:     while(!message_complete){
  1599   0018AA  EF74  F00C         	goto	l2804
  1600   0018AE                     l2796:
  1601                           
  1602                           ;OBCII_PIC18F46K22.c: 233:          LCD_cursor_set(2, 1);
  1603   0018AE  0E01               	movlw	1
  1604   0018B0  6E06               	movwf	LCD_cursor_set@column^0,c
  1605   0018B2  0E02               	movlw	2
  1606   0018B4  EC9A  F011         	call	_LCD_cursor_set
  1607   0018B8                     
  1608                           ;OBCII_PIC18F46K22.c: 234:          LCD_write_string("  Not Detected  ");
  1609   0018B8  0E01               	movlw	low STR_5
  1610   0018BA  6E06               	movwf	LCD_write_string@string^0,c
  1611   0018BC  5006               	movf	LCD_write_string@string^0,w,c
  1612   0018BE  A4D8               	btfss	status,2,c
  1613   0018C0  0E10               	movlw	high __smallconst
  1614   0018C2  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1615   0018C4  EC8B  F010         	call	_LCD_write_string	;wreg free
  1616   0018C8                     
  1617                           ;OBCII_PIC18F46K22.c: 235:          _delay((unsigned long)((50)*(16000000/4000.0)));
  1618   0018C8  0E02               	movlw	2
  1619   0018CA  6E1D               	movwf	(??_welcome_splash+1)^0,c
  1620   0018CC  0E04               	movlw	4
  1621   0018CE  6E1C               	movwf	??_welcome_splash^0,c
  1622   0018D0  0EBA               	movlw	186
  1623   0018D2                     u2217:
  1624   0018D2  2EE8               	decfsz	wreg,f,c
  1625   0018D4  D7FE               	bra	u2217
  1626   0018D6  2E1C               	decfsz	??_welcome_splash^0,f,c
  1627   0018D8  D7FC               	bra	u2217
  1628   0018DA  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  1629   0018DC  D7FA               	bra	u2217
  1630   0018DE  D000               	nop2	
  1631   0018E0                     
  1632                           ;OBCII_PIC18F46K22.c: 236:          UART1_SendString("ATI\r");
  1633   0018E0  0EC7               	movlw	low STR_4
  1634   0018E2  6E04               	movwf	UART1_SendString@string^0,c
  1635   0018E4  ECCA  F011         	call	_UART1_SendString	;wreg free
  1636   0018E8                     l2804:
  1637                           
  1638                           ;OBCII_PIC18F46K22.c: 232:     while(!message_complete){
  1639   0018E8  5045               	movf	_message_complete^0,w,c	;volatile
  1640   0018EA  B4D8               	btfsc	status,2,c
  1641   0018EC  EF7A  F00C         	goto	u1861
  1642   0018F0  EF7C  F00C         	goto	u1860
  1643   0018F4                     u1861:
  1644   0018F4  EF57  F00C         	goto	l2796
  1645   0018F8                     u1860:
  1646   0018F8                     
  1647                           ;OBCII_PIC18F46K22.c: 238:     _delay((unsigned long)((50)*(16000000/4000.0)));
  1648   0018F8  0E02               	movlw	2
  1649   0018FA  6E1D               	movwf	(??_welcome_splash+1)^0,c
  1650   0018FC  0E04               	movlw	4
  1651   0018FE  6E1C               	movwf	??_welcome_splash^0,c
  1652   001900  0EBA               	movlw	186
  1653   001902                     u2227:
  1654   001902  2EE8               	decfsz	wreg,f,c
  1655   001904  D7FE               	bra	u2227
  1656   001906  2E1C               	decfsz	??_welcome_splash^0,f,c
  1657   001908  D7FC               	bra	u2227
  1658   00190A  2E1D               	decfsz	(??_welcome_splash+1)^0,f,c
  1659   00190C  D7FA               	bra	u2227
  1660   00190E  D000               	nop2	
  1661   001910                     
  1662                           ;OBCII_PIC18F46K22.c: 239:     UART1_SendString("ATE0\r");
  1663   001910  0E9D               	movlw	low STR_1
  1664   001912  6E04               	movwf	UART1_SendString@string^0,c
  1665   001914  ECCA  F011         	call	_UART1_SendString	;wreg free
  1666   001918  0012               	return		;funcret
  1667   00191A                     __end_of_welcome_splash:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _tmr1_init *****************
  1671 ;; Defined at:
  1672 ;;		line 198 in file "OBCII_PIC18F46K22.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		None
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 1
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_welcome_splash
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text2
  1701   002678                     __ptext2:
  1702                           	callstack 0
  1703   002678                     _tmr1_init:
  1704                           	callstack 28
  1705   002678                     
  1706                           ;OBCII_PIC18F46K22.c: 200:     T1CONbits.T1CKPS1 = 1;
  1707   002678  8ACD               	bsf	205,5,c	;volatile
  1708                           
  1709                           ;OBCII_PIC18F46K22.c: 201:     T1CONbits.T1CKPS0 = 1;
  1710   00267A  88CD               	bsf	205,4,c	;volatile
  1711                           
  1712                           ;OBCII_PIC18F46K22.c: 202:     T1CONbits.T1OSCEN = 0;
  1713   00267C  96CD               	bcf	205,3,c	;volatile
  1714                           
  1715                           ;OBCII_PIC18F46K22.c: 203:     T1CONbits.T1SYNC = 1;
  1716   00267E  84CD               	bsf	205,2,c	;volatile
  1717                           
  1718                           ;OBCII_PIC18F46K22.c: 204:     T1CONbits.TMR1CS1 = 0;
  1719   002680  9ECD               	bcf	205,7,c	;volatile
  1720                           
  1721                           ;OBCII_PIC18F46K22.c: 205:     T1CONbits.TMR1CS0 = 0;
  1722   002682  9CCD               	bcf	205,6,c	;volatile
  1723                           
  1724                           ;OBCII_PIC18F46K22.c: 206:     T1CONbits.TMR1ON = 1;
  1725   002684  80CD               	bsf	205,0,c	;volatile
  1726   002686  0012               	return		;funcret
  1727   002688                     __end_of_tmr1_init:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _ccp1_init *****************
  1731 ;; Defined at:
  1732 ;;		line 185 in file "OBCII_PIC18F46K22.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_welcome_splash
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text3
  1761   002666                     __ptext3:
  1762                           	callstack 0
  1763   002666                     _ccp1_init:
  1764                           	callstack 28
  1765   002666                     
  1766                           ;OBCII_PIC18F46K22.c: 186:     CCP1CONbits.CCP1M3 = 1;
  1767   002666  86BD               	bsf	189,3,c	;volatile
  1768                           
  1769                           ;OBCII_PIC18F46K22.c: 187:     CCP1CONbits.CCP1M2 = 0;
  1770   002668  94BD               	bcf	189,2,c	;volatile
  1771                           
  1772                           ;OBCII_PIC18F46K22.c: 188:     CCP1CONbits.CCP1M1 = 1;
  1773   00266A  82BD               	bsf	189,1,c	;volatile
  1774                           
  1775                           ;OBCII_PIC18F46K22.c: 189:     CCP1CONbits.CCP1M0 = 1;
  1776   00266C  80BD               	bsf	189,0,c	;volatile
  1777   00266E                     
  1778                           ;OBCII_PIC18F46K22.c: 193:     CCPR1H = 195;
  1779   00266E  0EC3               	movlw	195
  1780   002670  6EBF               	movwf	191,c	;volatile
  1781                           
  1782                           ;OBCII_PIC18F46K22.c: 194:     CCPR1L = 80;
  1783   002672  0E50               	movlw	80
  1784   002674  6EBE               	movwf	190,c	;volatile
  1785   002676  0012               	return		;funcret
  1786   002678                     __end_of_ccp1_init:
  1787                           	callstack 0
  1788                           
  1789 ;; *************** function _LCD_write_variable *****************
  1790 ;; Defined at:
  1791 ;;		line 392 in file "LCD.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  variable        4   16[COMRAM] long 
  1794 ;;  left_offset     1   20[COMRAM] unsigned char 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  i               1   21[COMRAM] unsigned char 
  1797 ;;  temp_variabl    4   23[COMRAM] long 
  1798 ;;  digits          1   22[COMRAM] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1808 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;Total ram usage:       11 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 3
  1815 ;; This function calls:
  1816 ;;		_LCD_write_data
  1817 ;;		___aldiv
  1818 ;;		___almod
  1819 ;;		___lmul
  1820 ;; This function is called by:
  1821 ;;		_welcome_splash
  1822 ;;		_LCD_write_float
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text4
  1827   001516                     __ptext4:
  1828                           	callstack 0
  1829   001516                     _LCD_write_variable:
  1830                           	callstack 26
  1831   001516                     
  1832                           ;LCD.c: 394:     int32_t temp_variable;;LCD.c: 395:     uint8_t digits = 0;
  1833   001516  6A17               	clrf	LCD_write_variable@digits^0,c
  1834   001518                     
  1835                           ;LCD.c: 398:     if(variable < 0) variable *= -1;
  1836   001518  BE14               	btfsc	(LCD_write_variable@variable+3)^0,7,c
  1837   00151A  EF93  F00A         	goto	u1710
  1838   00151E  EF91  F00A         	goto	u1711
  1839   001522                     u1711:
  1840   001522  EFAD  F00A         	goto	l2608
  1841   001526                     u1710:
  1842   001526  C011  F003         	movff	LCD_write_variable@variable,___lmul@multiplier
  1843   00152A  C012  F004         	movff	LCD_write_variable@variable+1,___lmul@multiplier+1
  1844   00152E  C013  F005         	movff	LCD_write_variable@variable+2,___lmul@multiplier+2
  1845   001532  C014  F006         	movff	LCD_write_variable@variable+3,___lmul@multiplier+3
  1846   001536  0EFF               	movlw	255
  1847   001538  6E07               	movwf	___lmul@multiplicand^0,c
  1848   00153A  0EFF               	movlw	255
  1849   00153C  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  1850   00153E  0EFF               	movlw	255
  1851   001540  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  1852   001542  0EFF               	movlw	255
  1853   001544  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  1854   001546  EC02  F011         	call	___lmul	;wreg free
  1855   00154A  C003  F011         	movff	?___lmul,LCD_write_variable@variable
  1856   00154E  C004  F012         	movff	?___lmul+1,LCD_write_variable@variable+1
  1857   001552  C005  F013         	movff	?___lmul+2,LCD_write_variable@variable+2
  1858   001556  C006  F014         	movff	?___lmul+3,LCD_write_variable@variable+3
  1859   00155A                     l2608:
  1860                           
  1861                           ;LCD.c: 401:     temp_variable = variable;
  1862   00155A  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  1863   00155E  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  1864   001562  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  1865   001566  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  1866   00156A                     l2610:
  1867                           
  1868                           ;LCD.c: 403:         digits++;
  1869   00156A  2A17               	incf	LCD_write_variable@digits^0,f,c
  1870   00156C                     
  1871                           ;LCD.c: 404:         if(temp_variable < 10) break;
  1872   00156C  BE1B               	btfsc	(LCD_write_variable@temp_variable+3)^0,7,c
  1873   00156E  EFC6  F00A         	goto	u1720
  1874   001572  501B               	movf	(LCD_write_variable@temp_variable+3)^0,w,c
  1875   001574  101A               	iorwf	(LCD_write_variable@temp_variable+2)^0,w,c
  1876   001576  1019               	iorwf	(LCD_write_variable@temp_variable+1)^0,w,c
  1877   001578  E107               	bnz	u1721
  1878   00157A  0E0A               	movlw	10
  1879   00157C  5C18               	subwf	LCD_write_variable@temp_variable^0,w,c
  1880   00157E  B0D8               	btfsc	status,0,c
  1881   001580  EFC4  F00A         	goto	u1721
  1882   001584  EFC6  F00A         	goto	u1720
  1883   001588                     u1721:
  1884   001588  EFC8  F00A         	goto	l2616
  1885   00158C                     u1720:
  1886   00158C  EFE4  F00A         	goto	l2618
  1887   001590                     l2616:
  1888                           
  1889                           ;LCD.c: 405:         temp_variable /= 10;
  1890   001590  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  1891   001594  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  1892   001598  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  1893   00159C  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  1894   0015A0  0E0A               	movlw	10
  1895   0015A2  6E07               	movwf	___aldiv@divisor^0,c
  1896   0015A4  0E00               	movlw	0
  1897   0015A6  6E08               	movwf	(___aldiv@divisor+1)^0,c
  1898   0015A8  0E00               	movlw	0
  1899   0015AA  6E09               	movwf	(___aldiv@divisor+2)^0,c
  1900   0015AC  0E00               	movlw	0
  1901   0015AE  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  1902   0015B0  EC8D  F00C         	call	___aldiv	;wreg free
  1903   0015B4  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  1904   0015B8  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  1905   0015BC  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  1906   0015C0  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  1907   0015C4  EFB5  F00A         	goto	l2610
  1908   0015C8                     l2618:
  1909                           
  1910                           ;LCD.c: 410:         if(left_offset <= digits) break;
  1911   0015C8  5015               	movf	LCD_write_variable@left_offset^0,w,c
  1912   0015CA  5C17               	subwf	LCD_write_variable@digits^0,w,c
  1913   0015CC  A0D8               	btfss	status,0,c
  1914   0015CE  EFEB  F00A         	goto	u1731
  1915   0015D2  EFED  F00A         	goto	u1730
  1916   0015D6                     u1731:
  1917   0015D6  EFEF  F00A         	goto	l2622
  1918   0015DA                     u1730:
  1919   0015DA  EFF5  F00A         	goto	l401
  1920   0015DE                     l2622:
  1921                           
  1922                           ;LCD.c: 411:         LCD_write_data(' ');
  1923   0015DE  0E20               	movlw	32
  1924   0015E0  EC92  F00D         	call	_LCD_write_data
  1925   0015E4                     
  1926                           ;LCD.c: 412:         left_offset--;
  1927   0015E4  0615               	decf	LCD_write_variable@left_offset^0,f,c
  1928   0015E6  EFE4  F00A         	goto	l2618
  1929   0015EA                     l401:
  1930                           
  1931                           ;LCD.c: 417:         temp_variable = variable;
  1932   0015EA  C011  F018         	movff	LCD_write_variable@variable,LCD_write_variable@temp_variable
  1933   0015EE  C012  F019         	movff	LCD_write_variable@variable+1,LCD_write_variable@temp_variable+1
  1934   0015F2  C013  F01A         	movff	LCD_write_variable@variable+2,LCD_write_variable@temp_variable+2
  1935   0015F6  C014  F01B         	movff	LCD_write_variable@variable+3,LCD_write_variable@temp_variable+3
  1936   0015FA                     
  1937                           ;LCD.c: 418:         for(uint8_t i = 1 ; i < digits ; i++){
  1938   0015FA  0E01               	movlw	1
  1939   0015FC  6E16               	movwf	LCD_write_variable@i^0,c
  1940   0015FE  EF1C  F00B         	goto	l2632
  1941   001602                     l2628:
  1942                           
  1943                           ;LCD.c: 419:             temp_variable /= 10;
  1944   001602  C018  F003         	movff	LCD_write_variable@temp_variable,___aldiv@dividend
  1945   001606  C019  F004         	movff	LCD_write_variable@temp_variable+1,___aldiv@dividend+1
  1946   00160A  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___aldiv@dividend+2
  1947   00160E  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___aldiv@dividend+3
  1948   001612  0E0A               	movlw	10
  1949   001614  6E07               	movwf	___aldiv@divisor^0,c
  1950   001616  0E00               	movlw	0
  1951   001618  6E08               	movwf	(___aldiv@divisor+1)^0,c
  1952   00161A  0E00               	movlw	0
  1953   00161C  6E09               	movwf	(___aldiv@divisor+2)^0,c
  1954   00161E  0E00               	movlw	0
  1955   001620  6E0A               	movwf	(___aldiv@divisor+3)^0,c
  1956   001622  EC8D  F00C         	call	___aldiv	;wreg free
  1957   001626  C003  F018         	movff	?___aldiv,LCD_write_variable@temp_variable
  1958   00162A  C004  F019         	movff	?___aldiv+1,LCD_write_variable@temp_variable+1
  1959   00162E  C005  F01A         	movff	?___aldiv+2,LCD_write_variable@temp_variable+2
  1960   001632  C006  F01B         	movff	?___aldiv+3,LCD_write_variable@temp_variable+3
  1961   001636                     
  1962                           ;LCD.c: 420:         }
  1963   001636  2A16               	incf	LCD_write_variable@i^0,f,c
  1964   001638                     l2632:
  1965   001638  5017               	movf	LCD_write_variable@digits^0,w,c
  1966   00163A  5C16               	subwf	LCD_write_variable@i^0,w,c
  1967   00163C  A0D8               	btfss	status,0,c
  1968   00163E  EF23  F00B         	goto	u1741
  1969   001642  EF25  F00B         	goto	u1740
  1970   001646                     u1741:
  1971   001646  EF01  F00B         	goto	l2628
  1972   00164A                     u1740:
  1973   00164A                     
  1974                           ;LCD.c: 421:         LCD_write_data( (temp_variable%10) + '0' );
  1975   00164A  C018  F003         	movff	LCD_write_variable@temp_variable,___almod@dividend
  1976   00164E  C019  F004         	movff	LCD_write_variable@temp_variable+1,___almod@dividend+1
  1977   001652  C01A  F005         	movff	LCD_write_variable@temp_variable+2,___almod@dividend+2
  1978   001656  C01B  F006         	movff	LCD_write_variable@temp_variable+3,___almod@dividend+3
  1979   00165A  0E0A               	movlw	10
  1980   00165C  6E07               	movwf	___almod@divisor^0,c
  1981   00165E  0E00               	movlw	0
  1982   001660  6E08               	movwf	(___almod@divisor+1)^0,c
  1983   001662  0E00               	movlw	0
  1984   001664  6E09               	movwf	(___almod@divisor+2)^0,c
  1985   001666  0E00               	movlw	0
  1986   001668  6E0A               	movwf	(___almod@divisor+3)^0,c
  1987   00166A  EC8E  F00E         	call	___almod	;wreg free
  1988   00166E  5003               	movf	?___almod^0,w,c
  1989   001670  0F30               	addlw	48
  1990   001672  EC92  F00D         	call	_LCD_write_data
  1991   001676                     
  1992                           ;LCD.c: 422:         digits --;
  1993   001676  0617               	decf	LCD_write_variable@digits^0,f,c
  1994   001678                     
  1995                           ;LCD.c: 423:         if(digits == 0) break;
  1996   001678  5017               	movf	LCD_write_variable@digits^0,w,c
  1997   00167A  A4D8               	btfss	status,2,c
  1998   00167C  EF42  F00B         	goto	u1751
  1999   001680  EF44  F00B         	goto	u1750
  2000   001684                     u1751:
  2001   001684  EFF5  F00A         	goto	l401
  2002   001688                     u1750:
  2003   001688  0012               	return		;funcret
  2004   00168A                     __end_of_LCD_write_variable:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function ___lmul *****************
  2008 ;; Defined at:
  2009 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  multiplier      4    2[COMRAM] unsigned long 
  2012 ;;  multiplicand    4    6[COMRAM] unsigned long 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  product         4   10[COMRAM] unsigned long 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  4    2[COMRAM] unsigned long 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:       12 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 1
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_LCD_write_variable
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text5
  2039   002204                     __ptext5:
  2040                           	callstack 0
  2041   002204                     ___lmul:
  2042                           	callstack 27
  2043   002204  0E00               	movlw	0
  2044   002206  6E0B               	movwf	___lmul@product^0,c
  2045   002208  0E00               	movlw	0
  2046   00220A  6E0C               	movwf	(___lmul@product+1)^0,c
  2047   00220C  0E00               	movlw	0
  2048   00220E  6E0D               	movwf	(___lmul@product+2)^0,c
  2049   002210  0E00               	movlw	0
  2050   002212  6E0E               	movwf	(___lmul@product+3)^0,c
  2051   002214                     l2514:
  2052   002214  A003               	btfss	___lmul@multiplier^0,0,c
  2053   002216  EF0F  F011         	goto	u1571
  2054   00221A  EF11  F011         	goto	u1570
  2055   00221E                     u1571:
  2056   00221E  EF19  F011         	goto	l2518
  2057   002222                     u1570:
  2058   002222  5007               	movf	___lmul@multiplicand^0,w,c
  2059   002224  260B               	addwf	___lmul@product^0,f,c
  2060   002226  5008               	movf	(___lmul@multiplicand+1)^0,w,c
  2061   002228  220C               	addwfc	(___lmul@product+1)^0,f,c
  2062   00222A  5009               	movf	(___lmul@multiplicand+2)^0,w,c
  2063   00222C  220D               	addwfc	(___lmul@product+2)^0,f,c
  2064   00222E  500A               	movf	(___lmul@multiplicand+3)^0,w,c
  2065   002230  220E               	addwfc	(___lmul@product+3)^0,f,c
  2066   002232                     l2518:
  2067   002232  90D8               	bcf	status,0,c
  2068   002234  3607               	rlcf	___lmul@multiplicand^0,f,c
  2069   002236  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2070   002238  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2071   00223A  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2072   00223C  90D8               	bcf	status,0,c
  2073   00223E  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
  2074   002240  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
  2075   002242  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
  2076   002244  3203               	rrcf	___lmul@multiplier^0,f,c
  2077   002246  5003               	movf	___lmul@multiplier^0,w,c
  2078   002248  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
  2079   00224A  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
  2080   00224C  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
  2081   00224E  A4D8               	btfss	status,2,c
  2082   002250  EF2C  F011         	goto	u1581
  2083   002254  EF2E  F011         	goto	u1580
  2084   002258                     u1581:
  2085   002258  EF0A  F011         	goto	l2514
  2086   00225C                     u1580:
  2087   00225C  C00B  F003         	movff	___lmul@product,?___lmul
  2088   002260  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  2089   002264  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  2090   002268  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  2091   00226C  0012               	return		;funcret
  2092   00226E                     __end_of___lmul:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function ___almod *****************
  2096 ;; Defined at:
  2097 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  dividend        4    2[COMRAM] long 
  2100 ;;  divisor         4    6[COMRAM] long 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  sign            1   11[COMRAM] unsigned char 
  2103 ;;  counter         1   10[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  4    2[COMRAM] long 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2113 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;Total ram usage:       10 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_LCD_write_variable
  2124 ;;		_LCD_write_float
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text6
  2129   001D1C                     __ptext6:
  2130                           	callstack 0
  2131   001D1C                     ___almod:
  2132                           	callstack 27
  2133   001D1C  6A0C               	clrf	___almod@sign^0,c
  2134   001D1E  BE06               	btfsc	(___almod@dividend+3)^0,7,c
  2135   001D20  EF96  F00E         	goto	u1650
  2136   001D24  EF94  F00E         	goto	u1651
  2137   001D28                     u1651:
  2138   001D28  EFA0  F00E         	goto	l2574
  2139   001D2C                     u1650:
  2140   001D2C  1E06               	comf	(___almod@dividend+3)^0,f,c
  2141   001D2E  1E05               	comf	(___almod@dividend+2)^0,f,c
  2142   001D30  1E04               	comf	(___almod@dividend+1)^0,f,c
  2143   001D32  6C03               	negf	___almod@dividend^0,c
  2144   001D34  0E00               	movlw	0
  2145   001D36  2204               	addwfc	(___almod@dividend+1)^0,f,c
  2146   001D38  2205               	addwfc	(___almod@dividend+2)^0,f,c
  2147   001D3A  2206               	addwfc	(___almod@dividend+3)^0,f,c
  2148   001D3C  0E01               	movlw	1
  2149   001D3E  6E0C               	movwf	___almod@sign^0,c
  2150   001D40                     l2574:
  2151   001D40  BE0A               	btfsc	(___almod@divisor+3)^0,7,c
  2152   001D42  EFA7  F00E         	goto	u1660
  2153   001D46  EFA5  F00E         	goto	u1661
  2154   001D4A                     u1661:
  2155   001D4A  EFAF  F00E         	goto	l2578
  2156   001D4E                     u1660:
  2157   001D4E  1E0A               	comf	(___almod@divisor+3)^0,f,c
  2158   001D50  1E09               	comf	(___almod@divisor+2)^0,f,c
  2159   001D52  1E08               	comf	(___almod@divisor+1)^0,f,c
  2160   001D54  6C07               	negf	___almod@divisor^0,c
  2161   001D56  0E00               	movlw	0
  2162   001D58  2208               	addwfc	(___almod@divisor+1)^0,f,c
  2163   001D5A  2209               	addwfc	(___almod@divisor+2)^0,f,c
  2164   001D5C  220A               	addwfc	(___almod@divisor+3)^0,f,c
  2165   001D5E                     l2578:
  2166   001D5E  5007               	movf	___almod@divisor^0,w,c
  2167   001D60  1008               	iorwf	(___almod@divisor+1)^0,w,c
  2168   001D62  1009               	iorwf	(___almod@divisor+2)^0,w,c
  2169   001D64  100A               	iorwf	(___almod@divisor+3)^0,w,c
  2170   001D66  B4D8               	btfsc	status,2,c
  2171   001D68  EFB8  F00E         	goto	u1671
  2172   001D6C  EFBA  F00E         	goto	u1670
  2173   001D70                     u1671:
  2174   001D70  EFEA  F00E         	goto	l2594
  2175   001D74                     u1670:
  2176   001D74  0E01               	movlw	1
  2177   001D76  6E0B               	movwf	___almod@counter^0,c
  2178   001D78  EFC4  F00E         	goto	l2584
  2179   001D7C                     l2582:
  2180   001D7C  90D8               	bcf	status,0,c
  2181   001D7E  3607               	rlcf	___almod@divisor^0,f,c
  2182   001D80  3608               	rlcf	(___almod@divisor+1)^0,f,c
  2183   001D82  3609               	rlcf	(___almod@divisor+2)^0,f,c
  2184   001D84  360A               	rlcf	(___almod@divisor+3)^0,f,c
  2185   001D86  2A0B               	incf	___almod@counter^0,f,c
  2186   001D88                     l2584:
  2187   001D88  AE0A               	btfss	(___almod@divisor+3)^0,7,c
  2188   001D8A  EFC9  F00E         	goto	u1681
  2189   001D8E  EFCB  F00E         	goto	u1680
  2190   001D92                     u1681:
  2191   001D92  EFBE  F00E         	goto	l2582
  2192   001D96                     u1680:
  2193   001D96                     l2586:
  2194   001D96  5007               	movf	___almod@divisor^0,w,c
  2195   001D98  5C03               	subwf	___almod@dividend^0,w,c
  2196   001D9A  5008               	movf	(___almod@divisor+1)^0,w,c
  2197   001D9C  5804               	subwfb	(___almod@dividend+1)^0,w,c
  2198   001D9E  5009               	movf	(___almod@divisor+2)^0,w,c
  2199   001DA0  5805               	subwfb	(___almod@dividend+2)^0,w,c
  2200   001DA2  500A               	movf	(___almod@divisor+3)^0,w,c
  2201   001DA4  5806               	subwfb	(___almod@dividend+3)^0,w,c
  2202   001DA6  A0D8               	btfss	status,0,c
  2203   001DA8  EFD8  F00E         	goto	u1691
  2204   001DAC  EFDA  F00E         	goto	u1690
  2205   001DB0                     u1691:
  2206   001DB0  EFE2  F00E         	goto	l2590
  2207   001DB4                     u1690:
  2208   001DB4  5007               	movf	___almod@divisor^0,w,c
  2209   001DB6  5E03               	subwf	___almod@dividend^0,f,c
  2210   001DB8  5008               	movf	(___almod@divisor+1)^0,w,c
  2211   001DBA  5A04               	subwfb	(___almod@dividend+1)^0,f,c
  2212   001DBC  5009               	movf	(___almod@divisor+2)^0,w,c
  2213   001DBE  5A05               	subwfb	(___almod@dividend+2)^0,f,c
  2214   001DC0  500A               	movf	(___almod@divisor+3)^0,w,c
  2215   001DC2  5A06               	subwfb	(___almod@dividend+3)^0,f,c
  2216   001DC4                     l2590:
  2217   001DC4  90D8               	bcf	status,0,c
  2218   001DC6  320A               	rrcf	(___almod@divisor+3)^0,f,c
  2219   001DC8  3209               	rrcf	(___almod@divisor+2)^0,f,c
  2220   001DCA  3208               	rrcf	(___almod@divisor+1)^0,f,c
  2221   001DCC  3207               	rrcf	___almod@divisor^0,f,c
  2222   001DCE  2E0B               	decfsz	___almod@counter^0,f,c
  2223   001DD0  EFCB  F00E         	goto	l2586
  2224   001DD4                     l2594:
  2225   001DD4  500C               	movf	___almod@sign^0,w,c
  2226   001DD6  B4D8               	btfsc	status,2,c
  2227   001DD8  EFF0  F00E         	goto	u1701
  2228   001DDC  EFF2  F00E         	goto	u1700
  2229   001DE0                     u1701:
  2230   001DE0  EFFA  F00E         	goto	l2598
  2231   001DE4                     u1700:
  2232   001DE4  1E06               	comf	(___almod@dividend+3)^0,f,c
  2233   001DE6  1E05               	comf	(___almod@dividend+2)^0,f,c
  2234   001DE8  1E04               	comf	(___almod@dividend+1)^0,f,c
  2235   001DEA  6C03               	negf	___almod@dividend^0,c
  2236   001DEC  0E00               	movlw	0
  2237   001DEE  2204               	addwfc	(___almod@dividend+1)^0,f,c
  2238   001DF0  2205               	addwfc	(___almod@dividend+2)^0,f,c
  2239   001DF2  2206               	addwfc	(___almod@dividend+3)^0,f,c
  2240   001DF4                     l2598:
  2241   001DF4  C003  F003         	movff	___almod@dividend,?___almod
  2242   001DF8  C004  F004         	movff	___almod@dividend+1,?___almod+1
  2243   001DFC  C005  F005         	movff	___almod@dividend+2,?___almod+2
  2244   001E00  C006  F006         	movff	___almod@dividend+3,?___almod+3
  2245   001E04  0012               	return		;funcret
  2246   001E06                     __end_of___almod:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function ___aldiv *****************
  2250 ;; Defined at:
  2251 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  dividend        4    2[COMRAM] long 
  2254 ;;  divisor         4    6[COMRAM] long 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  quotient        4   12[COMRAM] long 
  2257 ;;  sign            1   11[COMRAM] unsigned char 
  2258 ;;  counter         1   10[COMRAM] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  4    2[COMRAM] long 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2268 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;Total ram usage:       14 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_LCD_write_variable
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text7
  2283   00191A                     __ptext7:
  2284                           	callstack 0
  2285   00191A                     ___aldiv:
  2286                           	callstack 27
  2287   00191A  6A0C               	clrf	___aldiv@sign^0,c
  2288   00191C  BE0A               	btfsc	(___aldiv@divisor+3)^0,7,c
  2289   00191E  EF95  F00C         	goto	u1590
  2290   001922  EF93  F00C         	goto	u1591
  2291   001926                     u1591:
  2292   001926  EF9F  F00C         	goto	l2530
  2293   00192A                     u1590:
  2294   00192A  1E0A               	comf	(___aldiv@divisor+3)^0,f,c
  2295   00192C  1E09               	comf	(___aldiv@divisor+2)^0,f,c
  2296   00192E  1E08               	comf	(___aldiv@divisor+1)^0,f,c
  2297   001930  6C07               	negf	___aldiv@divisor^0,c
  2298   001932  0E00               	movlw	0
  2299   001934  2208               	addwfc	(___aldiv@divisor+1)^0,f,c
  2300   001936  2209               	addwfc	(___aldiv@divisor+2)^0,f,c
  2301   001938  220A               	addwfc	(___aldiv@divisor+3)^0,f,c
  2302   00193A  0E01               	movlw	1
  2303   00193C  6E0C               	movwf	___aldiv@sign^0,c
  2304   00193E                     l2530:
  2305   00193E  BE06               	btfsc	(___aldiv@dividend+3)^0,7,c
  2306   001940  EFA6  F00C         	goto	u1600
  2307   001944  EFA4  F00C         	goto	u1601
  2308   001948                     u1601:
  2309   001948  EFB0  F00C         	goto	l2536
  2310   00194C                     u1600:
  2311   00194C  1E06               	comf	(___aldiv@dividend+3)^0,f,c
  2312   00194E  1E05               	comf	(___aldiv@dividend+2)^0,f,c
  2313   001950  1E04               	comf	(___aldiv@dividend+1)^0,f,c
  2314   001952  6C03               	negf	___aldiv@dividend^0,c
  2315   001954  0E00               	movlw	0
  2316   001956  2204               	addwfc	(___aldiv@dividend+1)^0,f,c
  2317   001958  2205               	addwfc	(___aldiv@dividend+2)^0,f,c
  2318   00195A  2206               	addwfc	(___aldiv@dividend+3)^0,f,c
  2319   00195C  0E01               	movlw	1
  2320   00195E  1A0C               	xorwf	___aldiv@sign^0,f,c
  2321   001960                     l2536:
  2322   001960  0E00               	movlw	0
  2323   001962  6E0D               	movwf	___aldiv@quotient^0,c
  2324   001964  0E00               	movlw	0
  2325   001966  6E0E               	movwf	(___aldiv@quotient+1)^0,c
  2326   001968  0E00               	movlw	0
  2327   00196A  6E0F               	movwf	(___aldiv@quotient+2)^0,c
  2328   00196C  0E00               	movlw	0
  2329   00196E  6E10               	movwf	(___aldiv@quotient+3)^0,c
  2330   001970  5007               	movf	___aldiv@divisor^0,w,c
  2331   001972  1008               	iorwf	(___aldiv@divisor+1)^0,w,c
  2332   001974  1009               	iorwf	(___aldiv@divisor+2)^0,w,c
  2333   001976  100A               	iorwf	(___aldiv@divisor+3)^0,w,c
  2334   001978  B4D8               	btfsc	status,2,c
  2335   00197A  EFC1  F00C         	goto	u1611
  2336   00197E  EFC3  F00C         	goto	u1610
  2337   001982                     u1611:
  2338   001982  EFF9  F00C         	goto	l2558
  2339   001986                     u1610:
  2340   001986  0E01               	movlw	1
  2341   001988  6E0B               	movwf	___aldiv@counter^0,c
  2342   00198A  EFCD  F00C         	goto	l2544
  2343   00198E                     l2542:
  2344   00198E  90D8               	bcf	status,0,c
  2345   001990  3607               	rlcf	___aldiv@divisor^0,f,c
  2346   001992  3608               	rlcf	(___aldiv@divisor+1)^0,f,c
  2347   001994  3609               	rlcf	(___aldiv@divisor+2)^0,f,c
  2348   001996  360A               	rlcf	(___aldiv@divisor+3)^0,f,c
  2349   001998  2A0B               	incf	___aldiv@counter^0,f,c
  2350   00199A                     l2544:
  2351   00199A  AE0A               	btfss	(___aldiv@divisor+3)^0,7,c
  2352   00199C  EFD2  F00C         	goto	u1621
  2353   0019A0  EFD4  F00C         	goto	u1620
  2354   0019A4                     u1621:
  2355   0019A4  EFC7  F00C         	goto	l2542
  2356   0019A8                     u1620:
  2357   0019A8                     l2546:
  2358   0019A8  90D8               	bcf	status,0,c
  2359   0019AA  360D               	rlcf	___aldiv@quotient^0,f,c
  2360   0019AC  360E               	rlcf	(___aldiv@quotient+1)^0,f,c
  2361   0019AE  360F               	rlcf	(___aldiv@quotient+2)^0,f,c
  2362   0019B0  3610               	rlcf	(___aldiv@quotient+3)^0,f,c
  2363   0019B2  5007               	movf	___aldiv@divisor^0,w,c
  2364   0019B4  5C03               	subwf	___aldiv@dividend^0,w,c
  2365   0019B6  5008               	movf	(___aldiv@divisor+1)^0,w,c
  2366   0019B8  5804               	subwfb	(___aldiv@dividend+1)^0,w,c
  2367   0019BA  5009               	movf	(___aldiv@divisor+2)^0,w,c
  2368   0019BC  5805               	subwfb	(___aldiv@dividend+2)^0,w,c
  2369   0019BE  500A               	movf	(___aldiv@divisor+3)^0,w,c
  2370   0019C0  5806               	subwfb	(___aldiv@dividend+3)^0,w,c
  2371   0019C2  A0D8               	btfss	status,0,c
  2372   0019C4  EFE6  F00C         	goto	u1631
  2373   0019C8  EFE8  F00C         	goto	u1630
  2374   0019CC                     u1631:
  2375   0019CC  EFF1  F00C         	goto	l2554
  2376   0019D0                     u1630:
  2377   0019D0  5007               	movf	___aldiv@divisor^0,w,c
  2378   0019D2  5E03               	subwf	___aldiv@dividend^0,f,c
  2379   0019D4  5008               	movf	(___aldiv@divisor+1)^0,w,c
  2380   0019D6  5A04               	subwfb	(___aldiv@dividend+1)^0,f,c
  2381   0019D8  5009               	movf	(___aldiv@divisor+2)^0,w,c
  2382   0019DA  5A05               	subwfb	(___aldiv@dividend+2)^0,f,c
  2383   0019DC  500A               	movf	(___aldiv@divisor+3)^0,w,c
  2384   0019DE  5A06               	subwfb	(___aldiv@dividend+3)^0,f,c
  2385   0019E0  800D               	bsf	___aldiv@quotient^0,0,c
  2386   0019E2                     l2554:
  2387   0019E2  90D8               	bcf	status,0,c
  2388   0019E4  320A               	rrcf	(___aldiv@divisor+3)^0,f,c
  2389   0019E6  3209               	rrcf	(___aldiv@divisor+2)^0,f,c
  2390   0019E8  3208               	rrcf	(___aldiv@divisor+1)^0,f,c
  2391   0019EA  3207               	rrcf	___aldiv@divisor^0,f,c
  2392   0019EC  2E0B               	decfsz	___aldiv@counter^0,f,c
  2393   0019EE  EFD4  F00C         	goto	l2546
  2394   0019F2                     l2558:
  2395   0019F2  500C               	movf	___aldiv@sign^0,w,c
  2396   0019F4  B4D8               	btfsc	status,2,c
  2397   0019F6  EFFF  F00C         	goto	u1641
  2398   0019FA  EF01  F00D         	goto	u1640
  2399   0019FE                     u1641:
  2400   0019FE  EF09  F00D         	goto	l2562
  2401   001A02                     u1640:
  2402   001A02  1E10               	comf	(___aldiv@quotient+3)^0,f,c
  2403   001A04  1E0F               	comf	(___aldiv@quotient+2)^0,f,c
  2404   001A06  1E0E               	comf	(___aldiv@quotient+1)^0,f,c
  2405   001A08  6C0D               	negf	___aldiv@quotient^0,c
  2406   001A0A  0E00               	movlw	0
  2407   001A0C  220E               	addwfc	(___aldiv@quotient+1)^0,f,c
  2408   001A0E  220F               	addwfc	(___aldiv@quotient+2)^0,f,c
  2409   001A10  2210               	addwfc	(___aldiv@quotient+3)^0,f,c
  2410   001A12                     l2562:
  2411   001A12  C00D  F003         	movff	___aldiv@quotient,?___aldiv
  2412   001A16  C00E  F004         	movff	___aldiv@quotient+1,?___aldiv+1
  2413   001A1A  C00F  F005         	movff	___aldiv@quotient+2,?___aldiv+2
  2414   001A1E  C010  F006         	movff	___aldiv@quotient+3,?___aldiv+3
  2415   001A22  0012               	return		;funcret
  2416   001A24                     __end_of___aldiv:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _main_menu *****************
  2420 ;; Defined at:
  2421 ;;		line 258 in file "OBCII_PIC18F46K22.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;Total ram usage:        2 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 8
  2442 ;; This function calls:
  2443 ;;		_LCD_clear
  2444 ;;		_LCD_configure_cursor_blink
  2445 ;;		_LCD_cursor_set
  2446 ;;		_clear_diagnostic_codes
  2447 ;;		_display_mm
  2448 ;;		_display_system_info
  2449 ;;		_live_reading_mode
  2450 ;;		_readADC
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text8
  2457   0010EC                     __ptext8:
  2458                           	callstack 0
  2459   0010EC                     _main_menu:
  2460                           	callstack 22
  2461   0010EC                     
  2462                           ;OBCII_PIC18F46K22.c: 260:     LCD_clear();
  2463   0010EC  EC1A  F013         	call	_LCD_clear	;wreg free
  2464   0010F0                     
  2465                           ;OBCII_PIC18F46K22.c: 261:     display_mm();
  2466   0010F0  ECAB  F012         	call	_display_mm	;wreg free
  2467   0010F4                     l2814:
  2468                           
  2469                           ;OBCII_PIC18F46K22.c: 264:         display_mm();
  2470   0010F4  ECAB  F012         	call	_display_mm	;wreg free
  2471                           
  2472                           ;OBCII_PIC18F46K22.c: 265:         result = readADC();
  2473   0010F8  EC90  F012         	call	_readADC	;wreg free
  2474   0010FC  C003  F042         	movff	?_readADC,_result
  2475   001100  C004  F043         	movff	?_readADC+1,_result+1
  2476   001104                     
  2477                           ;OBCII_PIC18F46K22.c: 266:         if(result >= 0 && result <= 255){
  2478   001104  0443               	decf	(_result+1)^0,w,c
  2479   001106  B0D8               	btfsc	status,0,c
  2480   001108  EF88  F008         	goto	u1871
  2481   00110C  EF8A  F008         	goto	u1870
  2482   001110                     u1871:
  2483   001110  EF93  F008         	goto	l2822
  2484   001114                     u1870:
  2485   001114                     
  2486                           ;OBCII_PIC18F46K22.c: 267:             menu_sel = 0;
  2487   001114  0E00               	movlw	0
  2488   001116  6E59               	movwf	(_menu_sel+1)^0,c
  2489   001118  0E00               	movlw	0
  2490   00111A  6E58               	movwf	_menu_sel^0,c
  2491   00111C                     
  2492                           ;OBCII_PIC18F46K22.c: 268:             LCD_cursor_set(2,1);
  2493   00111C  0E01               	movlw	1
  2494   00111E  6E06               	movwf	LCD_cursor_set@column^0,c
  2495   001120  0E02               	movlw	2
  2496   001122  EC9A  F011         	call	_LCD_cursor_set
  2497   001126                     l2822:
  2498                           
  2499                           ;OBCII_PIC18F46K22.c: 271:         if(result >= 256 && result <=511){
  2500   001126  0443               	decf	(_result+1)^0,w,c
  2501   001128  A0D8               	btfss	status,0,c
  2502   00112A  EF99  F008         	goto	u1881
  2503   00112E  EF9B  F008         	goto	u1880
  2504   001132                     u1881:
  2505   001132  EFAD  F008         	goto	l2830
  2506   001136                     u1880:
  2507   001136  0E02               	movlw	2
  2508   001138  5C43               	subwf	(_result+1)^0,w,c
  2509   00113A  B0D8               	btfsc	status,0,c
  2510   00113C  EFA2  F008         	goto	u1891
  2511   001140  EFA4  F008         	goto	u1890
  2512   001144                     u1891:
  2513   001144  EFAD  F008         	goto	l2830
  2514   001148                     u1890:
  2515   001148                     
  2516                           ;OBCII_PIC18F46K22.c: 272:             menu_sel = 1;
  2517   001148  0E00               	movlw	0
  2518   00114A  6E59               	movwf	(_menu_sel+1)^0,c
  2519   00114C  0E01               	movlw	1
  2520   00114E  6E58               	movwf	_menu_sel^0,c
  2521   001150                     
  2522                           ;OBCII_PIC18F46K22.c: 273:             LCD_cursor_set(2,5);
  2523   001150  0E05               	movlw	5
  2524   001152  6E06               	movwf	LCD_cursor_set@column^0,c
  2525   001154  0E02               	movlw	2
  2526   001156  EC9A  F011         	call	_LCD_cursor_set
  2527   00115A                     l2830:
  2528                           
  2529                           ;OBCII_PIC18F46K22.c: 276:         if(result >=512 && result <=767){
  2530   00115A  0E02               	movlw	2
  2531   00115C  5C43               	subwf	(_result+1)^0,w,c
  2532   00115E  A0D8               	btfss	status,0,c
  2533   001160  EFB4  F008         	goto	u1901
  2534   001164  EFB6  F008         	goto	u1900
  2535   001168                     u1901:
  2536   001168  EFC8  F008         	goto	l2838
  2537   00116C                     u1900:
  2538   00116C  0E03               	movlw	3
  2539   00116E  5C43               	subwf	(_result+1)^0,w,c
  2540   001170  B0D8               	btfsc	status,0,c
  2541   001172  EFBD  F008         	goto	u1911
  2542   001176  EFBF  F008         	goto	u1910
  2543   00117A                     u1911:
  2544   00117A  EFC8  F008         	goto	l2838
  2545   00117E                     u1910:
  2546   00117E                     
  2547                           ;OBCII_PIC18F46K22.c: 277:             menu_sel = 2;
  2548   00117E  0E00               	movlw	0
  2549   001180  6E59               	movwf	(_menu_sel+1)^0,c
  2550   001182  0E02               	movlw	2
  2551   001184  6E58               	movwf	_menu_sel^0,c
  2552   001186                     
  2553                           ;OBCII_PIC18F46K22.c: 278:             LCD_cursor_set(2,9);
  2554   001186  0E09               	movlw	9
  2555   001188  6E06               	movwf	LCD_cursor_set@column^0,c
  2556   00118A  0E02               	movlw	2
  2557   00118C  EC9A  F011         	call	_LCD_cursor_set
  2558   001190                     l2838:
  2559                           
  2560                           ;OBCII_PIC18F46K22.c: 280:         if(result >= 768 && result <=1023 ){
  2561   001190  0E03               	movlw	3
  2562   001192  5C43               	subwf	(_result+1)^0,w,c
  2563   001194  A0D8               	btfss	status,0,c
  2564   001196  EFCF  F008         	goto	u1921
  2565   00119A  EFD1  F008         	goto	u1920
  2566   00119E                     u1921:
  2567   00119E  EFE3  F008         	goto	l2846
  2568   0011A2                     u1920:
  2569   0011A2  0E04               	movlw	4
  2570   0011A4  5C43               	subwf	(_result+1)^0,w,c
  2571   0011A6  B0D8               	btfsc	status,0,c
  2572   0011A8  EFD8  F008         	goto	u1931
  2573   0011AC  EFDA  F008         	goto	u1930
  2574   0011B0                     u1931:
  2575   0011B0  EFE3  F008         	goto	l2846
  2576   0011B4                     u1930:
  2577   0011B4                     
  2578                           ;OBCII_PIC18F46K22.c: 281:             menu_sel = 3;
  2579   0011B4  0E00               	movlw	0
  2580   0011B6  6E59               	movwf	(_menu_sel+1)^0,c
  2581   0011B8  0E03               	movlw	3
  2582   0011BA  6E58               	movwf	_menu_sel^0,c
  2583   0011BC                     
  2584                           ;OBCII_PIC18F46K22.c: 282:             LCD_cursor_set(2,13);
  2585   0011BC  0E0D               	movlw	13
  2586   0011BE  6E06               	movwf	LCD_cursor_set@column^0,c
  2587   0011C0  0E02               	movlw	2
  2588   0011C2  EC9A  F011         	call	_LCD_cursor_set
  2589   0011C6                     l2846:
  2590                           
  2591                           ;OBCII_PIC18F46K22.c: 284:         LCD_configure_cursor_blink(1);
  2592   0011C6  0E01               	movlw	1
  2593   0011C8  EC09  F013         	call	_LCD_configure_cursor_blink
  2594   0011CC                     
  2595                           ;OBCII_PIC18F46K22.c: 286:         if (PORTBbits.RB4 == 0) {
  2596   0011CC  B881               	btfsc	129,4,c	;volatile
  2597   0011CE  EFEB  F008         	goto	u1941
  2598   0011D2  EFED  F008         	goto	u1940
  2599   0011D6                     u1941:
  2600   0011D6  EF83  F009         	goto	l2914
  2601   0011DA                     u1940:
  2602   0011DA                     
  2603                           ;OBCII_PIC18F46K22.c: 287:             _delay((unsigned long)((20)*(16000000/4000.0)));
  2604   0011DA  0E68               	movlw	104
  2605   0011DC  6E2E               	movwf	??_main_menu^0,c
  2606   0011DE  0EE4               	movlw	228
  2607   0011E0                     u2237:
  2608   0011E0  2EE8               	decfsz	wreg,f,c
  2609   0011E2  D7FE               	bra	u2237
  2610   0011E4  2E2E               	decfsz	??_main_menu^0,f,c
  2611   0011E6  D7FC               	bra	u2237
  2612   0011E8  D000               	nop2	
  2613   0011EA                     
  2614                           ;OBCII_PIC18F46K22.c: 288:             if (PORTBbits.RB4 == 0) {
  2615   0011EA  B881               	btfsc	129,4,c	;volatile
  2616   0011EC  EFFA  F008         	goto	u1951
  2617   0011F0  EFFC  F008         	goto	u1950
  2618   0011F4                     u1951:
  2619   0011F4  EF83  F009         	goto	l2914
  2620   0011F8                     u1950:
  2621   0011F8                     
  2622                           ;OBCII_PIC18F46K22.c: 289:                 LCD_configure_cursor_blink(0);
  2623   0011F8  0E00               	movlw	0
  2624   0011FA  EC09  F013         	call	_LCD_configure_cursor_blink
  2625                           
  2626                           ;OBCII_PIC18F46K22.c: 290:                 LCD_clear();
  2627   0011FE  EC1A  F013         	call	_LCD_clear	;wreg free
  2628                           
  2629                           ;OBCII_PIC18F46K22.c: 293:                 switch (menu_sel) {
  2630   001202  EF65  F009         	goto	l2912
  2631   001206                     l2856:
  2632                           
  2633                           ;OBCII_PIC18F46K22.c: 296:                             live_reading_mode();
  2634   001206  ECF6  F012         	call	_live_reading_mode	;wreg free
  2635   00120A                     
  2636                           ;OBCII_PIC18F46K22.c: 298:                             if (PORTCbits.RC5 == 0) {
  2637   00120A  BA82               	btfsc	130,5,c	;volatile
  2638   00120C  EF0A  F009         	goto	u1961
  2639   001210  EF0C  F009         	goto	u1960
  2640   001214                     u1961:
  2641   001214  EF03  F009         	goto	l2856
  2642   001218                     u1960:
  2643   001218                     
  2644                           ;OBCII_PIC18F46K22.c: 299:                                 _delay((unsigned long)((20)*(
      +                          16000000/4000.0)));
  2645   001218  0E68               	movlw	104
  2646   00121A  6E2E               	movwf	??_main_menu^0,c
  2647   00121C  0EE4               	movlw	228
  2648   00121E                     u2247:
  2649   00121E  2EE8               	decfsz	wreg,f,c
  2650   001220  D7FE               	bra	u2247
  2651   001222  2E2E               	decfsz	??_main_menu^0,f,c
  2652   001224  D7FC               	bra	u2247
  2653   001226  D000               	nop2	
  2654   001228                     
  2655                           ;OBCII_PIC18F46K22.c: 300:                                 if (PORTCbits.RC5 == 0) {
  2656   001228  BA82               	btfsc	130,5,c	;volatile
  2657   00122A  EF19  F009         	goto	u1971
  2658   00122E  EF1B  F009         	goto	u1970
  2659   001232                     u1971:
  2660   001232  EF03  F009         	goto	l2856
  2661   001236                     u1970:
  2662   001236                     l2864:
  2663                           
  2664                           ;OBCII_PIC18F46K22.c: 301:                                     LCD_clear();
  2665   001236  EC1A  F013         	call	_LCD_clear	;wreg free
  2666   00123A                     
  2667                           ;OBCII_PIC18F46K22.c: 302:                                     display_mm();
  2668   00123A  ECAB  F012         	call	_display_mm	;wreg free
  2669   00123E                     
  2670                           ;OBCII_PIC18F46K22.c: 303:                                     menu_sel = -1;
  2671   00123E  6858               	setf	_menu_sel^0,c
  2672   001240  6859               	setf	(_menu_sel+1)^0,c
  2673                           
  2674                           ;OBCII_PIC18F46K22.c: 304:                                     break;
  2675   001242  EF83  F009         	goto	l2914
  2676   001246                     l212:
  2677                           
  2678                           ;OBCII_PIC18F46K22.c: 315:                             if (PORTCbits.RC5 == 0) {
  2679   001246  BA82               	btfsc	130,5,c	;volatile
  2680   001248  EF28  F009         	goto	u1981
  2681   00124C  EF2A  F009         	goto	u1980
  2682   001250                     u1981:
  2683   001250  EF23  F009         	goto	l212
  2684   001254                     u1980:
  2685   001254                     
  2686                           ;OBCII_PIC18F46K22.c: 316:                                     _delay((unsigned long)((2
      +                          0)*(16000000/4000.0)));
  2687   001254  0E68               	movlw	104
  2688   001256  6E2E               	movwf	??_main_menu^0,c
  2689   001258  0EE4               	movlw	228
  2690   00125A                     u2257:
  2691   00125A  2EE8               	decfsz	wreg,f,c
  2692   00125C  D7FE               	bra	u2257
  2693   00125E  2E2E               	decfsz	??_main_menu^0,f,c
  2694   001260  D7FC               	bra	u2257
  2695   001262  D000               	nop2	
  2696   001264                     
  2697                           ;OBCII_PIC18F46K22.c: 317:                                 if (PORTCbits.RC5 == 0) {
  2698   001264  BA82               	btfsc	130,5,c	;volatile
  2699   001266  EF37  F009         	goto	u1991
  2700   00126A  EF39  F009         	goto	u1990
  2701   00126E                     u1991:
  2702   00126E  EF23  F009         	goto	l212
  2703   001272                     u1990:
  2704   001272  EF1B  F009         	goto	l2864
  2705   001276                     l2880:
  2706                           
  2707                           ;OBCII_PIC18F46K22.c: 330:                                 _delay((unsigned long)((200)*
      +                          (16000000/4000.0)));
  2708   001276  0E05               	movlw	5
  2709   001278  6E2F               	movwf	(??_main_menu+1)^0,c
  2710   00127A  0E0F               	movlw	15
  2711   00127C  6E2E               	movwf	??_main_menu^0,c
  2712   00127E  0EF1               	movlw	241
  2713   001280                     u2267:
  2714   001280  2EE8               	decfsz	wreg,f,c
  2715   001282  D7FE               	bra	u2267
  2716   001284  2E2E               	decfsz	??_main_menu^0,f,c
  2717   001286  D7FC               	bra	u2267
  2718   001288  2E2F               	decfsz	(??_main_menu+1)^0,f,c
  2719   00128A  D7FA               	bra	u2267
  2720   00128C  0000               	nop	
  2721   00128E                     
  2722                           ;OBCII_PIC18F46K22.c: 331:                                 clear_diagnostic_codes();
  2723   00128E  EC92  F009         	call	_clear_diagnostic_codes	;wreg free
  2724                           
  2725                           ;OBCII_PIC18F46K22.c: 332:                                 break;
  2726   001292  EF83  F009         	goto	l2914
  2727   001296                     l2896:
  2728                           
  2729                           ;OBCII_PIC18F46K22.c: 347:                             display_system_info();
  2730   001296  EC58  F013         	call	_display_system_info	;wreg free
  2731   00129A                     
  2732                           ;OBCII_PIC18F46K22.c: 349:                             if (PORTCbits.RC5 == 0) {
  2733   00129A  BA82               	btfsc	130,5,c	;volatile
  2734   00129C  EF52  F009         	goto	u2001
  2735   0012A0  EF54  F009         	goto	u2000
  2736   0012A4                     u2001:
  2737   0012A4  EF4B  F009         	goto	l2896
  2738   0012A8                     u2000:
  2739   0012A8                     
  2740                           ;OBCII_PIC18F46K22.c: 350:                                _delay((unsigned long)((20)*(1
      +                          6000000/4000.0)));
  2741   0012A8  0E68               	movlw	104
  2742   0012AA  6E2E               	movwf	??_main_menu^0,c
  2743   0012AC  0EE4               	movlw	228
  2744   0012AE                     u2277:
  2745   0012AE  2EE8               	decfsz	wreg,f,c
  2746   0012B0  D7FE               	bra	u2277
  2747   0012B2  2E2E               	decfsz	??_main_menu^0,f,c
  2748   0012B4  D7FC               	bra	u2277
  2749   0012B6  D000               	nop2	
  2750   0012B8                     
  2751                           ;OBCII_PIC18F46K22.c: 351:                                 if (PORTCbits.RC5 == 0) {
  2752   0012B8  BA82               	btfsc	130,5,c	;volatile
  2753   0012BA  EF61  F009         	goto	u2011
  2754   0012BE  EF63  F009         	goto	u2010
  2755   0012C2                     u2011:
  2756   0012C2  EF4B  F009         	goto	l2896
  2757   0012C6                     u2010:
  2758   0012C6  EF1B  F009         	goto	l2864
  2759   0012CA                     l2912:
  2760   0012CA  C058  F02E         	movff	_menu_sel,??_main_menu
  2761   0012CE  C059  F02F         	movff	_menu_sel+1,??_main_menu+1
  2762                           
  2763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2764                           ; Switch size 1, requested type "simple"
  2765                           ; Number of cases is 1, Range of values is 0 to 0
  2766                           ; switch strategies available:
  2767                           ; Name         Instructions Cycles
  2768                           ; simple_byte            4     3 (average)
  2769                           ;	Chosen strategy is simple_byte
  2770   0012D2  502F               	movf	(??_main_menu+1)^0,w,c
  2771   0012D4  0A00               	xorlw	0	; case 0
  2772   0012D6  B4D8               	btfsc	status,2,c
  2773   0012D8  EF70  F009         	goto	l3144
  2774   0012DC  EF83  F009         	goto	l202
  2775   0012E0                     l3144:
  2776                           
  2777                           ; Switch size 1, requested type "simple"
  2778                           ; Number of cases is 4, Range of values is 0 to 3
  2779                           ; switch strategies available:
  2780                           ; Name         Instructions Cycles
  2781                           ; simple_byte           13     7 (average)
  2782                           ;	Chosen strategy is simple_byte
  2783   0012E0  502E               	movf	??_main_menu^0,w,c
  2784   0012E2  0A00               	xorlw	0	; case 0
  2785   0012E4  B4D8               	btfsc	status,2,c
  2786   0012E6  EF03  F009         	goto	l2856
  2787   0012EA  0A01               	xorlw	1	; case 1
  2788   0012EC  B4D8               	btfsc	status,2,c
  2789   0012EE  EF23  F009         	goto	l212
  2790   0012F2  0A03               	xorlw	3	; case 2
  2791   0012F4  B4D8               	btfsc	status,2,c
  2792   0012F6  EF3B  F009         	goto	l2880
  2793   0012FA  0A01               	xorlw	1	; case 3
  2794   0012FC  B4D8               	btfsc	status,2,c
  2795   0012FE  EF4B  F009         	goto	l2896
  2796   001302  EF83  F009         	goto	l202
  2797   001306                     l202:
  2798   001306                     l2914:
  2799                           
  2800                           ;OBCII_PIC18F46K22.c: 367:         _delay((unsigned long)((50)*(16000000/4000.0)));
  2801   001306  0E02               	movlw	2
  2802   001308  6E2F               	movwf	(??_main_menu+1)^0,c
  2803   00130A  0E04               	movlw	4
  2804   00130C  6E2E               	movwf	??_main_menu^0,c
  2805   00130E  0EBA               	movlw	186
  2806   001310                     u2287:
  2807   001310  2EE8               	decfsz	wreg,f,c
  2808   001312  D7FE               	bra	u2287
  2809   001314  2E2E               	decfsz	??_main_menu^0,f,c
  2810   001316  D7FC               	bra	u2287
  2811   001318  2E2F               	decfsz	(??_main_menu+1)^0,f,c
  2812   00131A  D7FA               	bra	u2287
  2813   00131C  D000               	nop2	
  2814   00131E  EF7A  F008         	goto	l2814
  2815   001322  0012               	return		;funcret
  2816   001324                     __end_of_main_menu:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _live_reading_mode *****************
  2820 ;; Defined at:
  2821 ;;		line 455 in file "OBCII_PIC18F46K22.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;Total ram usage:        2 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 7
  2842 ;; This function calls:
  2843 ;;		_print_AI_Temp
  2844 ;;		_print_RPM
  2845 ;;		_print_Vbatt
  2846 ;; This function is called by:
  2847 ;;		_main_menu
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text9
  2852   0025EC                     __ptext9:
  2853                           	callstack 0
  2854   0025EC                     _live_reading_mode:
  2855                           	callstack 22
  2856   0025EC                     
  2857                           ;OBCII_PIC18F46K22.c: 456:             print_RPM();
  2858   0025EC  EC12  F00D         	call	_print_RPM	;wreg free
  2859   0025F0                     
  2860                           ;OBCII_PIC18F46K22.c: 457:             print_Vbatt();
  2861   0025F0  ECC1  F00F         	call	_print_Vbatt	;wreg free
  2862   0025F4                     
  2863                           ;OBCII_PIC18F46K22.c: 458:             print_AI_Temp();
  2864   0025F4  EC03  F00F         	call	_print_AI_Temp	;wreg free
  2865   0025F8                     
  2866                           ;OBCII_PIC18F46K22.c: 459:             _delay((unsigned long)((50)*(16000000/4000.0)));
  2867   0025F8  0E02               	movlw	2
  2868   0025FA  6E2D               	movwf	(??_live_reading_mode+1)^0,c
  2869   0025FC  0E04               	movlw	4
  2870   0025FE  6E2C               	movwf	??_live_reading_mode^0,c
  2871   002600  0EBA               	movlw	186
  2872   002602                     u2297:
  2873   002602  2EE8               	decfsz	wreg,f,c
  2874   002604  D7FE               	bra	u2297
  2875   002606  2E2C               	decfsz	??_live_reading_mode^0,f,c
  2876   002608  D7FC               	bra	u2297
  2877   00260A  2E2D               	decfsz	(??_live_reading_mode+1)^0,f,c
  2878   00260C  D7FA               	bra	u2297
  2879   00260E  D000               	nop2	
  2880   002610  0012               	return		;funcret
  2881   002612                     __end_of_live_reading_mode:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _print_Vbatt *****************
  2885 ;; Defined at:
  2886 ;;		line 404 in file "OBCII_PIC18F46K22.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 4
  2907 ;; This function calls:
  2908 ;;		_LCD_cursor_set
  2909 ;;		_LCD_write_string
  2910 ;;		_UART1_SendString
  2911 ;;		_strchr
  2912 ;; This function is called by:
  2913 ;;		_live_reading_mode
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text10
  2918   001F82                     __ptext10:
  2919                           	callstack 0
  2920   001F82                     _print_Vbatt:
  2921                           	callstack 24
  2922   001F82                     
  2923                           ;OBCII_PIC18F46K22.c: 406:     UART1_SendString("ATRV\r");
  2924   001F82  0EB5               	movlw	low STR_14
  2925   001F84  6E04               	movwf	UART1_SendString@string^0,c
  2926   001F86  ECCA  F011         	call	_UART1_SendString	;wreg free
  2927   001F8A                     l2434:
  2928                           
  2929                           ;OBCII_PIC18F46K22.c: 407:     while(!message_complete) {
  2930   001F8A  5045               	movf	_message_complete^0,w,c	;volatile
  2931   001F8C  B4D8               	btfsc	status,2,c
  2932   001F8E  EFCB  F00F         	goto	u1521
  2933   001F92  EFCD  F00F         	goto	u1520
  2934   001F96                     u1521:
  2935   001F96  EFC5  F00F         	goto	l2434
  2936   001F9A                     u1520:
  2937   001F9A                     
  2938                           ;OBCII_PIC18F46K22.c: 411:     LCD_cursor_set(2,7);
  2939   001F9A  0E07               	movlw	7
  2940   001F9C  6E06               	movwf	LCD_cursor_set@column^0,c
  2941   001F9E  0E02               	movlw	2
  2942   001FA0  EC9A  F011         	call	_LCD_cursor_set
  2943   001FA4                     
  2944                           ;OBCII_PIC18F46K22.c: 412:     LCD_write_string("     ");
  2945   001FA4  0EBB               	movlw	low STR_12
  2946   001FA6  6E06               	movwf	LCD_write_string@string^0,c
  2947   001FA8  5006               	movf	LCD_write_string@string^0,w,c
  2948   001FAA  A4D8               	btfss	status,2,c
  2949   001FAC  0E10               	movlw	high __smallconst
  2950   001FAE  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2951   001FB0  EC8B  F010         	call	_LCD_write_string	;wreg free
  2952   001FB4                     
  2953                           ;OBCII_PIC18F46K22.c: 414:     LCD_cursor_set(1,7);
  2954   001FB4  0E07               	movlw	7
  2955   001FB6  6E06               	movwf	LCD_cursor_set@column^0,c
  2956   001FB8  0E01               	movlw	1
  2957   001FBA  EC9A  F011         	call	_LCD_cursor_set
  2958                           
  2959                           ;OBCII_PIC18F46K22.c: 415:     LCD_write_string("VBatt");
  2960   001FBE  0EC1               	movlw	low STR_16
  2961   001FC0  6E06               	movwf	LCD_write_string@string^0,c
  2962   001FC2  5006               	movf	LCD_write_string@string^0,w,c
  2963   001FC4  A4D8               	btfss	status,2,c
  2964   001FC6  0E10               	movlw	high __smallconst
  2965   001FC8  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2966   001FCA  EC8B  F010         	call	_LCD_write_string	;wreg free
  2967   001FCE                     
  2968                           ;OBCII_PIC18F46K22.c: 416:     LCD_cursor_set(2,7);
  2969   001FCE  0E07               	movlw	7
  2970   001FD0  6E06               	movwf	LCD_cursor_set@column^0,c
  2971   001FD2  0E02               	movlw	2
  2972   001FD4  EC9A  F011         	call	_LCD_cursor_set
  2973   001FD8                     
  2974                           ;OBCII_PIC18F46K22.c: 418:     if (!strchr(buffer, 'V')) {
  2975   001FD8  0E80               	movlw	low _buffer
  2976   001FDA  6E03               	movwf	strchr@s^0,c
  2977   001FDC  0E00               	movlw	0
  2978   001FDE  6E05               	movwf	(strchr@c+1)^0,c
  2979   001FE0  0E56               	movlw	86
  2980   001FE2  6E04               	movwf	strchr@c^0,c
  2981   001FE4  EC73  F012         	call	_strchr	;wreg free
  2982   001FE8  0900               	iorlw	0
  2983   001FEA  A4D8               	btfss	status,2,c
  2984   001FEC  EFFA  F00F         	goto	u1531
  2985   001FF0  EFFC  F00F         	goto	u1530
  2986   001FF4                     u1531:
  2987   001FF4  EF06  F010         	goto	l2448
  2988   001FF8                     u1530:
  2989   001FF8                     
  2990                           ;OBCII_PIC18F46K22.c: 419:         LCD_write_string("N/A");
  2991   001FF8  0EDA               	movlw	low STR_17
  2992   001FFA  6E06               	movwf	LCD_write_string@string^0,c
  2993   001FFC  5006               	movf	LCD_write_string@string^0,w,c
  2994   001FFE  A4D8               	btfss	status,2,c
  2995   002000  0E10               	movlw	high __smallconst
  2996   002002  6E07               	movwf	(LCD_write_string@string+1)^0,c
  2997   002004  EC8B  F010         	call	_LCD_write_string	;wreg free
  2998                           
  2999                           ;OBCII_PIC18F46K22.c: 420:     }
  3000   002008  EF0B  F010         	goto	l2450
  3001   00200C                     l2448:
  3002                           
  3003                           ;OBCII_PIC18F46K22.c: 422:     LCD_write_string(buffer);
  3004   00200C  0E80               	movlw	low _buffer
  3005   00200E  6E06               	movwf	LCD_write_string@string^0,c
  3006   002010  6A07               	clrf	(LCD_write_string@string+1)^0,c
  3007   002012  EC8B  F010         	call	_LCD_write_string	;wreg free
  3008   002016                     l2450:
  3009                           
  3010                           ;OBCII_PIC18F46K22.c: 425:     buffer_count = 0;
  3011   002016  6A47               	clrf	_buffer_count^0,c
  3012   002018                     
  3013                           ;OBCII_PIC18F46K22.c: 426:     message_complete = 0;
  3014   002018  6A45               	clrf	_message_complete^0,c	;volatile
  3015   00201A  0012               	return		;funcret
  3016   00201C                     __end_of_print_Vbatt:
  3017                           	callstack 0
  3018                           
  3019 ;; *************** function _strchr *****************
  3020 ;; Defined at:
  3021 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  s               1    2[COMRAM] PTR const unsigned char 
  3024 ;;		 -> buffer(32), 
  3025 ;;  c               2    3[COMRAM] int 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    2[COMRAM] PTR unsigned char 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3037 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;Total ram usage:        4 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 1
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_print_Vbatt
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text11
  3052   0024E6                     __ptext11:
  3053                           	callstack 0
  3054   0024E6                     _strchr:
  3055                           	callstack 26
  3056   0024E6                     l1177:
  3057   0024E6  5003               	movf	strchr@s^0,w,c
  3058   0024E8  6ED9               	movwf	fsr2l,c
  3059   0024EA  6ADA               	clrf	fsr2h,c
  3060   0024EC  5004               	movf	strchr@c^0,w,c
  3061   0024EE  18DE               	xorwf	postinc2,w,c
  3062   0024F0  A4D8               	btfss	status,2,c
  3063   0024F2  EF7D  F012         	goto	u1471
  3064   0024F6  EF7F  F012         	goto	u1470
  3065   0024FA                     u1471:
  3066   0024FA  EF82  F012         	goto	l2372
  3067   0024FE                     u1470:
  3068   0024FE  5003               	movf	strchr@s^0,w,c
  3069   002500  EF8F  F012         	goto	l1179
  3070   002504                     l2372:
  3071   002504  2A03               	incf	strchr@s^0,f,c
  3072   002506  0403               	decf	strchr@s^0,w,c
  3073   002508  6ED9               	movwf	fsr2l,c
  3074   00250A  6ADA               	clrf	fsr2h,c
  3075   00250C  50DF               	movf	indf2,w,c
  3076   00250E  A4D8               	btfss	status,2,c
  3077   002510  EF8C  F012         	goto	u1481
  3078   002514  EF8E  F012         	goto	u1480
  3079   002518                     u1481:
  3080   002518  EF73  F012         	goto	l1177
  3081   00251C                     u1480:
  3082   00251C  0E00               	movlw	0
  3083   00251E                     l1179:
  3084   00251E  0012               	return		;funcret
  3085   002520                     __end_of_strchr:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _print_RPM *****************
  3089 ;; Defined at:
  3090 ;;		line 379 in file "OBCII_PIC18F46K22.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        3 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 6
  3111 ;; This function calls:
  3112 ;;		_LCD_cursor_set
  3113 ;;		_LCD_write_string
  3114 ;;		_UART1_SendString
  3115 ;;		_hex_char_to_value
  3116 ;;		_sprintf
  3117 ;; This function is called by:
  3118 ;;		_live_reading_mode
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text12
  3123   001A24                     __ptext12:
  3124                           	callstack 0
  3125   001A24                     _print_RPM:
  3126                           	callstack 22
  3127   001A24                     
  3128                           ;OBCII_PIC18F46K22.c: 381:     UART1_SendString("010C\r");
  3129   001A24  0EA9               	movlw	low STR_10
  3130   001A26  6E04               	movwf	UART1_SendString@string^0,c
  3131   001A28  ECCA  F011         	call	_UART1_SendString	;wreg free
  3132   001A2C                     l2408:
  3133                           
  3134                           ;OBCII_PIC18F46K22.c: 382:     while(!message_complete) {
  3135   001A2C  5045               	movf	_message_complete^0,w,c	;volatile
  3136   001A2E  B4D8               	btfsc	status,2,c
  3137   001A30  EF1C  F00D         	goto	u1511
  3138   001A34  EF1E  F00D         	goto	u1510
  3139   001A38                     u1511:
  3140   001A38  EF16  F00D         	goto	l2408
  3141   001A3C                     u1510:
  3142   001A3C                     
  3143                           ;OBCII_PIC18F46K22.c: 386:     A_rpm = (hex_char_to_value(buffer[4]) << 4) | hex_char_to
      +                          _value(buffer[5]);
  3144   001A3C  0100               	movlb	0	; () banked
  3145   001A3E  5184               	movf	(_buffer+4)& (0+255),w,b
  3146   001A40  EC0E  F010         	call	_hex_char_to_value
  3147   001A44  6E29               	movwf	??_print_RPM^0,c
  3148   001A46  6A2A               	clrf	(??_print_RPM+1)^0,c
  3149   001A48  3A29               	swapf	??_print_RPM^0,f,c
  3150   001A4A  3A2A               	swapf	(??_print_RPM+1)^0,f,c
  3151   001A4C  0EF0               	movlw	240
  3152   001A4E  162A               	andwf	(??_print_RPM+1)^0,f,c
  3153   001A50  5029               	movf	??_print_RPM^0,w,c
  3154   001A52  0B0F               	andlw	15
  3155   001A54  122A               	iorwf	(??_print_RPM+1)^0,f,c
  3156   001A56  0EF0               	movlw	240
  3157   001A58  1629               	andwf	??_print_RPM^0,f,c
  3158   001A5A  0100               	movlb	0	; () banked
  3159   001A5C  5185               	movf	(_buffer+5)& (0+255),w,b
  3160   001A5E  EC0E  F010         	call	_hex_char_to_value
  3161   001A62  6E2B               	movwf	(??_print_RPM+2)^0,c
  3162   001A64  502B               	movf	(??_print_RPM+2)^0,w,c
  3163   001A66  1029               	iorwf	??_print_RPM^0,w,c
  3164   001A68  6E40               	movwf	_A_rpm^0,c
  3165   001A6A  502A               	movf	(??_print_RPM+1)^0,w,c
  3166   001A6C  6E41               	movwf	(_A_rpm+1)^0,c
  3167                           
  3168                           ;OBCII_PIC18F46K22.c: 387:     B_rpm = (hex_char_to_value(buffer[6]) << 4) | hex_char_to
      +                          _value(buffer[7]);
  3169   001A6E  0100               	movlb	0	; () banked
  3170   001A70  5186               	movf	(_buffer+6)& (0+255),w,b
  3171   001A72  EC0E  F010         	call	_hex_char_to_value
  3172   001A76  6E29               	movwf	??_print_RPM^0,c
  3173   001A78  6A2A               	clrf	(??_print_RPM+1)^0,c
  3174   001A7A  3A29               	swapf	??_print_RPM^0,f,c
  3175   001A7C  3A2A               	swapf	(??_print_RPM+1)^0,f,c
  3176   001A7E  0EF0               	movlw	240
  3177   001A80  162A               	andwf	(??_print_RPM+1)^0,f,c
  3178   001A82  5029               	movf	??_print_RPM^0,w,c
  3179   001A84  0B0F               	andlw	15
  3180   001A86  122A               	iorwf	(??_print_RPM+1)^0,f,c
  3181   001A88  0EF0               	movlw	240
  3182   001A8A  1629               	andwf	??_print_RPM^0,f,c
  3183   001A8C  0100               	movlb	0	; () banked
  3184   001A8E  5187               	movf	(_buffer+7)& (0+255),w,b
  3185   001A90  EC0E  F010         	call	_hex_char_to_value
  3186   001A94  6E2B               	movwf	(??_print_RPM+2)^0,c
  3187   001A96  502B               	movf	(??_print_RPM+2)^0,w,c
  3188   001A98  1029               	iorwf	??_print_RPM^0,w,c
  3189   001A9A  6E3E               	movwf	_B_rpm^0,c
  3190   001A9C  502A               	movf	(??_print_RPM+1)^0,w,c
  3191   001A9E  6E3F               	movwf	(_B_rpm+1)^0,c
  3192   001AA0                     
  3193                           ;OBCII_PIC18F46K22.c: 388:     RPM = ((A_rpm * 256) + B_rpm) / 4;
  3194   001AA0  5040               	movf	_A_rpm^0,w,c
  3195   001AA2  6E2A               	movwf	(??_print_RPM+1)^0,c
  3196   001AA4  6A29               	clrf	??_print_RPM^0,c
  3197   001AA6  503E               	movf	_B_rpm^0,w,c
  3198   001AA8  2629               	addwf	??_print_RPM^0,f,c
  3199   001AAA  503F               	movf	(_B_rpm+1)^0,w,c
  3200   001AAC  222A               	addwfc	(??_print_RPM+1)^0,f,c
  3201   001AAE  90D8               	bcf	status,0,c
  3202   001AB0  322A               	rrcf	(??_print_RPM+1)^0,f,c
  3203   001AB2  3229               	rrcf	??_print_RPM^0,f,c
  3204   001AB4  90D8               	bcf	status,0,c
  3205   001AB6  322A               	rrcf	(??_print_RPM+1)^0,f,c
  3206   001AB8  3229               	rrcf	??_print_RPM^0,f,c
  3207   001ABA  C029  F03C         	movff	??_print_RPM,_RPM
  3208   001ABE  C02A  F03D         	movff	??_print_RPM+1,_RPM+1
  3209   001AC2                     
  3210                           ;OBCII_PIC18F46K22.c: 390:     sprintf(rpm_string, "%u", RPM);
  3211   001AC2  0E48               	movlw	low _rpm_string
  3212   001AC4  6E19               	movwf	sprintf@s^0,c
  3213   001AC6  0EE6               	movlw	low STR_11
  3214   001AC8  6E1A               	movwf	sprintf@fmt^0,c
  3215   001ACA  C03C  F01B         	movff	_RPM,?_sprintf+2
  3216   001ACE  C03D  F01C         	movff	_RPM+1,?_sprintf+3
  3217   001AD2  ECC6  F012         	call	_sprintf	;wreg free
  3218   001AD6                     
  3219                           ;OBCII_PIC18F46K22.c: 392:     LCD_cursor_set(2,1);
  3220   001AD6  0E01               	movlw	1
  3221   001AD8  6E06               	movwf	LCD_cursor_set@column^0,c
  3222   001ADA  0E02               	movlw	2
  3223   001ADC  EC9A  F011         	call	_LCD_cursor_set
  3224   001AE0                     
  3225                           ;OBCII_PIC18F46K22.c: 393:     LCD_write_string("     ");
  3226   001AE0  0EBB               	movlw	low STR_12
  3227   001AE2  6E06               	movwf	LCD_write_string@string^0,c
  3228   001AE4  5006               	movf	LCD_write_string@string^0,w,c
  3229   001AE6  A4D8               	btfss	status,2,c
  3230   001AE8  0E10               	movlw	high __smallconst
  3231   001AEA  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3232   001AEC  EC8B  F010         	call	_LCD_write_string	;wreg free
  3233   001AF0                     
  3234                           ;OBCII_PIC18F46K22.c: 395:     LCD_cursor_set(1,1);
  3235   001AF0  0E01               	movlw	1
  3236   001AF2  6E06               	movwf	LCD_cursor_set@column^0,c
  3237   001AF4  0E01               	movlw	1
  3238   001AF6  EC9A  F011         	call	_LCD_cursor_set
  3239   001AFA                     
  3240                           ;OBCII_PIC18F46K22.c: 396:     LCD_write_string("RPM");
  3241   001AFA  0EDE               	movlw	low STR_13
  3242   001AFC  6E06               	movwf	LCD_write_string@string^0,c
  3243   001AFE  5006               	movf	LCD_write_string@string^0,w,c
  3244   001B00  A4D8               	btfss	status,2,c
  3245   001B02  0E10               	movlw	high __smallconst
  3246   001B04  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3247   001B06  EC8B  F010         	call	_LCD_write_string	;wreg free
  3248   001B0A                     
  3249                           ;OBCII_PIC18F46K22.c: 397:     LCD_cursor_set(2,1);
  3250   001B0A  0E01               	movlw	1
  3251   001B0C  6E06               	movwf	LCD_cursor_set@column^0,c
  3252   001B0E  0E02               	movlw	2
  3253   001B10  EC9A  F011         	call	_LCD_cursor_set
  3254   001B14                     
  3255                           ;OBCII_PIC18F46K22.c: 398:     LCD_write_string(rpm_string);
  3256   001B14  0E48               	movlw	low _rpm_string
  3257   001B16  6E06               	movwf	LCD_write_string@string^0,c
  3258   001B18  6A07               	clrf	(LCD_write_string@string+1)^0,c
  3259   001B1A  EC8B  F010         	call	_LCD_write_string	;wreg free
  3260   001B1E                     
  3261                           ;OBCII_PIC18F46K22.c: 400:     buffer_count = 0;
  3262   001B1E  6A47               	clrf	_buffer_count^0,c
  3263   001B20                     
  3264                           ;OBCII_PIC18F46K22.c: 401:     message_complete = 0;
  3265   001B20  6A45               	clrf	_message_complete^0,c	;volatile
  3266   001B22  0012               	return		;funcret
  3267   001B24                     __end_of_print_RPM:
  3268                           	callstack 0
  3269                           
  3270 ;; *************** function _print_AI_Temp *****************
  3271 ;; Defined at:
  3272 ;;		line 429 in file "OBCII_PIC18F46K22.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;Total ram usage:        3 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 6
  3293 ;; This function calls:
  3294 ;;		_LCD_cursor_set
  3295 ;;		_LCD_write_string
  3296 ;;		_UART1_SendString
  3297 ;;		_hex_char_to_value
  3298 ;;		_sprintf
  3299 ;; This function is called by:
  3300 ;;		_live_reading_mode
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text13
  3305   001E06                     __ptext13:
  3306                           	callstack 0
  3307   001E06                     _print_AI_Temp:
  3308                           	callstack 22
  3309   001E06                     
  3310                           ;OBCII_PIC18F46K22.c: 431:     UART1_SendString("010F\r");
  3311   001E06  0EAF               	movlw	low STR_18
  3312   001E08  6E04               	movwf	UART1_SendString@string^0,c
  3313   001E0A  ECCA  F011         	call	_UART1_SendString	;wreg free
  3314   001E0E                     l2456:
  3315                           
  3316                           ;OBCII_PIC18F46K22.c: 432:      while(!message_complete) {
  3317   001E0E  5045               	movf	_message_complete^0,w,c	;volatile
  3318   001E10  B4D8               	btfsc	status,2,c
  3319   001E12  EF0D  F00F         	goto	u1541
  3320   001E16  EF0F  F00F         	goto	u1540
  3321   001E1A                     u1541:
  3322   001E1A  EF07  F00F         	goto	l2456
  3323   001E1E                     u1540:
  3324   001E1E                     
  3325                           ;OBCII_PIC18F46K22.c: 436:     LCD_cursor_set(2,14);
  3326   001E1E  0E0E               	movlw	14
  3327   001E20  6E06               	movwf	LCD_cursor_set@column^0,c
  3328   001E22  0E02               	movlw	2
  3329   001E24  EC9A  F011         	call	_LCD_cursor_set
  3330   001E28                     
  3331                           ;OBCII_PIC18F46K22.c: 437:     LCD_write_string("   ");
  3332   001E28  0EBD               	movlw	low (STR_12+2)
  3333   001E2A  6E06               	movwf	LCD_write_string@string^0,c
  3334   001E2C  5006               	movf	LCD_write_string@string^0,w,c
  3335   001E2E  A4D8               	btfss	status,2,c
  3336   001E30  0E10               	movlw	high __smallconst
  3337   001E32  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3338   001E34  EC8B  F010         	call	_LCD_write_string	;wreg free
  3339   001E38                     
  3340                           ;OBCII_PIC18F46K22.c: 439:     A_air_intake = (hex_char_to_value(buffer[4]) << 4) | hex_
      +                          char_to_value(buffer[5]);
  3341   001E38  0100               	movlb	0	; () banked
  3342   001E3A  5184               	movf	(_buffer+4)& (0+255),w,b
  3343   001E3C  EC0E  F010         	call	_hex_char_to_value
  3344   001E40  6E29               	movwf	??_print_AI_Temp^0,c
  3345   001E42  6A2A               	clrf	(??_print_AI_Temp+1)^0,c
  3346   001E44  3A29               	swapf	??_print_AI_Temp^0,f,c
  3347   001E46  3A2A               	swapf	(??_print_AI_Temp+1)^0,f,c
  3348   001E48  0EF0               	movlw	240
  3349   001E4A  162A               	andwf	(??_print_AI_Temp+1)^0,f,c
  3350   001E4C  5029               	movf	??_print_AI_Temp^0,w,c
  3351   001E4E  0B0F               	andlw	15
  3352   001E50  122A               	iorwf	(??_print_AI_Temp+1)^0,f,c
  3353   001E52  0EF0               	movlw	240
  3354   001E54  1629               	andwf	??_print_AI_Temp^0,f,c
  3355   001E56  0100               	movlb	0	; () banked
  3356   001E58  5185               	movf	(_buffer+5)& (0+255),w,b
  3357   001E5A  EC0E  F010         	call	_hex_char_to_value
  3358   001E5E  6E2B               	movwf	(??_print_AI_Temp+2)^0,c
  3359   001E60  502B               	movf	(??_print_AI_Temp+2)^0,w,c
  3360   001E62  1029               	iorwf	??_print_AI_Temp^0,w,c
  3361   001E64  6E3A               	movwf	_A_air_intake^0,c
  3362   001E66  502A               	movf	(??_print_AI_Temp+1)^0,w,c
  3363   001E68  6E3B               	movwf	(_A_air_intake+1)^0,c
  3364   001E6A                     
  3365                           ;OBCII_PIC18F46K22.c: 440:     air_intake_temp = A_air_intake - 40;
  3366   001E6A  0ED8               	movlw	216
  3367   001E6C  243A               	addwf	_A_air_intake^0,w,c
  3368   001E6E  6E38               	movwf	_air_intake_temp^0,c
  3369   001E70  0EFF               	movlw	255
  3370   001E72  203B               	addwfc	(_A_air_intake+1)^0,w,c
  3371   001E74  6E39               	movwf	(_air_intake_temp+1)^0,c
  3372   001E76                     
  3373                           ;OBCII_PIC18F46K22.c: 442:     sprintf(air_intake_string, "%u", air_intake_temp);
  3374   001E76  0EA0               	movlw	low _air_intake_string
  3375   001E78  6E19               	movwf	sprintf@s^0,c
  3376   001E7A  0EE6               	movlw	low STR_11
  3377   001E7C  6E1A               	movwf	sprintf@fmt^0,c
  3378   001E7E  C038  F01B         	movff	_air_intake_temp,?_sprintf+2
  3379   001E82  C039  F01C         	movff	_air_intake_temp+1,?_sprintf+3
  3380   001E86  ECC6  F012         	call	_sprintf	;wreg free
  3381   001E8A                     
  3382                           ;OBCII_PIC18F46K22.c: 444:     LCD_cursor_set(1,14);
  3383   001E8A  0E0E               	movlw	14
  3384   001E8C  6E06               	movwf	LCD_cursor_set@column^0,c
  3385   001E8E  0E01               	movlw	1
  3386   001E90  EC9A  F011         	call	_LCD_cursor_set
  3387   001E94                     
  3388                           ;OBCII_PIC18F46K22.c: 445:     LCD_write_string("AIT");
  3389   001E94  0EE2               	movlw	low STR_21
  3390   001E96  6E06               	movwf	LCD_write_string@string^0,c
  3391   001E98  5006               	movf	LCD_write_string@string^0,w,c
  3392   001E9A  A4D8               	btfss	status,2,c
  3393   001E9C  0E10               	movlw	high __smallconst
  3394   001E9E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3395   001EA0  EC8B  F010         	call	_LCD_write_string	;wreg free
  3396   001EA4                     
  3397                           ;OBCII_PIC18F46K22.c: 446:     LCD_cursor_set(2,14);
  3398   001EA4  0E0E               	movlw	14
  3399   001EA6  6E06               	movwf	LCD_cursor_set@column^0,c
  3400   001EA8  0E02               	movlw	2
  3401   001EAA  EC9A  F011         	call	_LCD_cursor_set
  3402   001EAE                     
  3403                           ;OBCII_PIC18F46K22.c: 447:     LCD_write_string(air_intake_string);
  3404   001EAE  0EA0               	movlw	low _air_intake_string
  3405   001EB0  6E06               	movwf	LCD_write_string@string^0,c
  3406   001EB2  6A07               	clrf	(LCD_write_string@string+1)^0,c
  3407   001EB4  EC8B  F010         	call	_LCD_write_string	;wreg free
  3408   001EB8                     
  3409                           ;OBCII_PIC18F46K22.c: 448:     LCD_cursor_set(2,16);
  3410   001EB8  0E10               	movlw	16
  3411   001EBA  6E06               	movwf	LCD_cursor_set@column^0,c
  3412   001EBC  0E02               	movlw	2
  3413   001EBE  EC9A  F011         	call	_LCD_cursor_set
  3414   001EC2                     
  3415                           ;OBCII_PIC18F46K22.c: 449:     LCD_write_string("C");
  3416   001EC2  0EE9               	movlw	low STR_22
  3417   001EC4  6E06               	movwf	LCD_write_string@string^0,c
  3418   001EC6  5006               	movf	LCD_write_string@string^0,w,c
  3419   001EC8  A4D8               	btfss	status,2,c
  3420   001ECA  0E10               	movlw	high __smallconst
  3421   001ECC  6E07               	movwf	(LCD_write_string@string+1)^0,c
  3422   001ECE  EC8B  F010         	call	_LCD_write_string	;wreg free
  3423   001ED2                     
  3424                           ;OBCII_PIC18F46K22.c: 451:     buffer_count = 0;
  3425   001ED2  6A47               	clrf	_buffer_count^0,c
  3426   001ED4                     
  3427                           ;OBCII_PIC18F46K22.c: 452:     message_complete = 0;
  3428   001ED4  6A45               	clrf	_message_complete^0,c	;volatile
  3429   001ED6  0012               	return		;funcret
  3430   001ED8                     __end_of_print_AI_Temp:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _sprintf *****************
  3434 ;; Defined at:
  3435 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  s               1   24[COMRAM] PTR unsigned char 
  3438 ;;		 -> air_intake_string(16), rpm_string(16), 
  3439 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  3440 ;;		 -> STR_20(3), STR_11(3), 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  f              11   29[COMRAM] struct _IO_FILE
  3443 ;;  ret             2    0        int 
  3444 ;;  ap              1   28[COMRAM] PTR void [1]
  3445 ;;		 -> ?_sprintf(2), 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  2   24[COMRAM] int 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;Total ram usage:       16 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 5
  3462 ;; This function calls:
  3463 ;;		_vfprintf
  3464 ;; This function is called by:
  3465 ;;		_print_RPM
  3466 ;;		_print_AI_Temp
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text14
  3471   00258C                     __ptext14:
  3472                           	callstack 0
  3473   00258C                     _sprintf:
  3474                           	callstack 22
  3475   00258C  0E1B               	movlw	low (?_sprintf+2)
  3476   00258E  6E1D               	movwf	sprintf@ap^0,c
  3477   002590  C019  F01E         	movff	sprintf@s,sprintf@f
  3478   002594  0E00               	movlw	0
  3479   002596  6E21               	movwf	(sprintf@f+3)^0,c
  3480   002598  0E00               	movlw	0
  3481   00259A  6E20               	movwf	(sprintf@f+2)^0,c
  3482   00259C  0E00               	movlw	0
  3483   00259E  6E28               	movwf	(sprintf@f+10)^0,c
  3484   0025A0  0E00               	movlw	0
  3485   0025A2  6E27               	movwf	(sprintf@f+9)^0,c
  3486   0025A4  0E1E               	movlw	low sprintf@f
  3487   0025A6  6E15               	movwf	vfprintf@fp^0,c
  3488   0025A8  C01A  F016         	movff	sprintf@fmt,vfprintf@fmt
  3489   0025AC  0E1D               	movlw	low sprintf@ap
  3490   0025AE  6E17               	movwf	vfprintf@ap^0,c
  3491   0025B0  EC54  F012         	call	_vfprintf	;wreg free
  3492   0025B4  5019               	movf	sprintf@s^0,w,c
  3493   0025B6  2420               	addwf	(sprintf@f+2)^0,w,c
  3494   0025B8  6ED9               	movwf	fsr2l,c
  3495   0025BA  6ADA               	clrf	fsr2h,c
  3496   0025BC  6ADF               	clrf	indf2,c
  3497   0025BE  0012               	return		;funcret
  3498   0025C0                     __end_of_sprintf:
  3499                           	callstack 0
  3500                           
  3501 ;; *************** function _vfprintf *****************
  3502 ;; Defined at:
  3503 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  3506 ;;		 -> sprintf@f(11), 
  3507 ;;  fmt             1   21[COMRAM] PTR const unsigned char 
  3508 ;;		 -> STR_20(3), STR_11(3), 
  3509 ;;  ap              1   22[COMRAM] PTR PTR void 
  3510 ;;		 -> sprintf@ap(1), 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  cfmt            1   23[COMRAM] PTR unsigned char 
  3513 ;;		 -> STR_20(3), STR_11(3), 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  2   20[COMRAM] int 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3523 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;Total ram usage:        4 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 4
  3530 ;; This function calls:
  3531 ;;		_vfpfcnvrt
  3532 ;; This function is called by:
  3533 ;;		_sprintf
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text15
  3538   0024A8                     __ptext15:
  3539                           	callstack 0
  3540   0024A8                     _vfprintf:
  3541                           	callstack 22
  3542   0024A8                     
  3543                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3544   0024A8  C016  F018         	movff	vfprintf@fmt,vfprintf@cfmt
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3547   0024AC  EF60  F012         	goto	l2292
  3548   0024B0                     l2290:
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3551   0024B0  C015  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  3552   0024B4  0E18               	movlw	low vfprintf@cfmt
  3553   0024B6  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  3554   0024B8  C017  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  3555   0024BC  EC45  F00B         	call	_vfpfcnvrt	;wreg free
  3556   0024C0                     l2292:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3559   0024C0  C018  FFF6         	movff	vfprintf@cfmt,tblptrl
  3560   0024C4                     	if	1	;There is more than 1 active tblptr byte
  3561   0024C4  0E10               	movlw	high __smallconst
  3562   0024C6  6EF7               	movwf	tblptrh,c
  3563   0024C8                     	endif
  3564   0024C8                     	if	0	;tblptru may be non-zero
  3565   0024C8                     	endif
  3566   0024C8                     	if	0	;tblptru may be non-zero
  3567   0024C8                     	endif
  3568   0024C8  0008               	tblrd		*
  3569   0024CA  50F5               	movf	tablat,w,c
  3570   0024CC  0900               	iorlw	0
  3571   0024CE  A4D8               	btfss	status,2,c
  3572   0024D0  EF6C  F012         	goto	u1321
  3573   0024D4  EF6E  F012         	goto	u1320
  3574   0024D8                     u1321:
  3575   0024D8  EF58  F012         	goto	l2290
  3576   0024DC                     u1320:
  3577   0024DC                     
  3578                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3579   0024DC  0E00               	movlw	0
  3580   0024DE  6E16               	movwf	(?_vfprintf+1)^0,c
  3581   0024E0  0E00               	movlw	0
  3582   0024E2  6E15               	movwf	?_vfprintf^0,c
  3583   0024E4  0012               	return		;funcret
  3584   0024E6                     __end_of_vfprintf:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _vfpfcnvrt *****************
  3588 ;; Defined at:
  3589 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3592 ;;		 -> sprintf@f(11), 
  3593 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  3594 ;;		 -> vfprintf@cfmt(1), 
  3595 ;;  ap              1   12[COMRAM] PTR PTR void 
  3596 ;;		 -> sprintf@ap(1), 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  convarg         4   14[COMRAM] struct .
  3599 ;;  c               1   19[COMRAM] unsigned char 
  3600 ;;  cp              1   18[COMRAM] PTR unsigned char 
  3601 ;;		 -> STR_20(3), STR_11(3), 
  3602 ;;  done            1    0        _Bool 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3612 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;Total ram usage:       10 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 3
  3619 ;; This function calls:
  3620 ;;		___lwdiv
  3621 ;;		___lwmod
  3622 ;;		_fputc
  3623 ;; This function is called by:
  3624 ;;		_vfprintf
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text16
  3629   00168A                     __ptext16:
  3630                           	callstack 0
  3631   00168A                     _vfpfcnvrt:
  3632                           	callstack 22
  3633   00168A                     
  3634                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3635   00168A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3636   00168C  6ED9               	movwf	fsr2l,c
  3637   00168E  6ADA               	clrf	fsr2h,c
  3638   001690  CFDF FFF6          	movff	indf2,tblptrl
  3639   001694                     	if	1	;There is more than 1 active tblptr byte
  3640   001694  0E10               	movlw	high __smallconst
  3641   001696  6EF7               	movwf	tblptrh,c
  3642   001698                     	endif
  3643   001698                     	if	0	;tblptru may be non-zero
  3644   001698                     	endif
  3645   001698                     	if	0	;tblptru may be non-zero
  3646   001698                     	endif
  3647   001698  0008               	tblrd		*
  3648   00169A  50F5               	movf	tablat,w,c
  3649   00169C  0A25               	xorlw	37
  3650   00169E  A4D8               	btfss	status,2,c
  3651   0016A0  EF54  F00B         	goto	u1201
  3652   0016A4  EF56  F00B         	goto	u1200
  3653   0016A8                     u1201:
  3654   0016A8  EFE8  F00B         	goto	l2246
  3655   0016AC                     u1200:
  3656   0016AC                     
  3657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3658   0016AC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3659   0016AE  6ED9               	movwf	fsr2l,c
  3660   0016B0  6ADA               	clrf	fsr2h,c
  3661   0016B2  2ADF               	incf	indf2,f,c
  3662   0016B4                     
  3663                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3664   0016B4  0E00               	movlw	0
  3665   0016B6  6E35               	movwf	(_width+1)^0,c
  3666   0016B8  0E00               	movlw	0
  3667   0016BA  6E34               	movwf	_width^0,c
  3668   0016BC  C034  F044         	movff	_width,_flags
  3669   0016C0                     
  3670                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3671   0016C0  6836               	setf	_prec^0,c
  3672   0016C2  6837               	setf	(_prec+1)^0,c
  3673   0016C4                     
  3674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  3675   0016C4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3676   0016C6  6ED9               	movwf	fsr2l,c
  3677   0016C8  6ADA               	clrf	fsr2h,c
  3678   0016CA  50DF               	movf	indf2,w,c
  3679   0016CC  6E13               	movwf	vfpfcnvrt@cp^0,c
  3680   0016CE  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3681   0016D2                     	if	1	;There is more than 1 active tblptr byte
  3682   0016D2  0E10               	movlw	high __smallconst
  3683   0016D4  6EF7               	movwf	tblptrh,c
  3684   0016D6                     	endif
  3685   0016D6                     	if	0	;tblptru may be non-zero
  3686   0016D6                     	endif
  3687   0016D6                     	if	0	;tblptru may be non-zero
  3688   0016D6                     	endif
  3689   0016D6  0008               	tblrd		*
  3690   0016D8  50F5               	movf	tablat,w,c
  3691   0016DA  0A75               	xorlw	117
  3692   0016DC  A4D8               	btfss	status,2,c
  3693   0016DE  EF73  F00B         	goto	u1211
  3694   0016E2  EF75  F00B         	goto	u1210
  3695   0016E6                     u1211:
  3696   0016E6  EFE2  F00B         	goto	l2242
  3697   0016EA                     u1210:
  3698   0016EA                     
  3699                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  3700   0016EA  500D               	movf	vfpfcnvrt@ap^0,w,c
  3701   0016EC  6ED9               	movwf	fsr2l,c
  3702   0016EE  6ADA               	clrf	fsr2h,c
  3703   0016F0  0E02               	movlw	2
  3704   0016F2  26DF               	addwf	indf2,f,c
  3705   0016F4  5CDF               	subwf	indf2,w,c
  3706   0016F6  6ED9               	movwf	fsr2l,c
  3707   0016F8  6ADA               	clrf	fsr2h,c
  3708   0016FA  CFDE F00F          	movff	postinc2,vfpfcnvrt@convarg
  3709   0016FE  CFDE F010          	movff	postinc2,vfpfcnvrt@convarg+1
  3710   001702                     
  3711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  3712   001702  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3713   001704  6ED9               	movwf	fsr2l,c
  3714   001706  6ADA               	clrf	fsr2h,c
  3715   001708  2813               	incf	vfpfcnvrt@cp^0,w,c
  3716   00170A  6EDF               	movwf	indf2,c
  3717                           
  3718                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  3719   00170C  EFD6  F00B         	goto	l2240
  3720   001710                     l2222:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  3723   001710  0E20               	movlw	32
  3724   001712  6E14               	movwf	vfpfcnvrt@c^0,c
  3725   001714                     l2224:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  3728   001714  0614               	decf	vfpfcnvrt@c^0,f,c
  3729   001716  5014               	movf	vfpfcnvrt@c^0,w,c
  3730   001718  0F60               	addlw	low _dbuf
  3731   00171A  6ED9               	movwf	fsr2l,c
  3732   00171C  6ADA               	clrf	fsr2h,c
  3733   00171E  C00F  F003         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  3734   001722  C010  F004         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  3735   001726  0E00               	movlw	0
  3736   001728  6E06               	movwf	(___lwmod@divisor+1)^0,c
  3737   00172A  0E0A               	movlw	10
  3738   00172C  6E05               	movwf	___lwmod@divisor^0,c
  3739   00172E  EC37  F011         	call	___lwmod	;wreg free
  3740   001732  5003               	movf	?___lwmod^0,w,c
  3741   001734  0F30               	addlw	48
  3742   001736  6EDF               	movwf	indf2,c
  3743   001738                     
  3744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  3745   001738  C00F  F003         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  3746   00173C  C010  F004         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  3747   001740  0E00               	movlw	0
  3748   001742  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  3749   001744  0E0A               	movlw	10
  3750   001746  6E05               	movwf	___lwdiv@divisor^0,c
  3751   001748  ECC8  F010         	call	___lwdiv	;wreg free
  3752   00174C  C003  F00F         	movff	?___lwdiv,vfpfcnvrt@convarg
  3753   001750  C004  F010         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  3754   001754                     
  3755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  3756   001754  500F               	movf	vfpfcnvrt@convarg^0,w,c
  3757   001756  1010               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3758   001758  B4D8               	btfsc	status,2,c
  3759   00175A  EFB1  F00B         	goto	u1221
  3760   00175E  EFB3  F00B         	goto	u1220
  3761   001762                     u1221:
  3762   001762  EFCB  F00B         	goto	l2236
  3763   001766                     u1220:
  3764   001766  5014               	movf	vfpfcnvrt@c^0,w,c
  3765   001768  A4D8               	btfss	status,2,c
  3766   00176A  EFB9  F00B         	goto	u1231
  3767   00176E  EFBB  F00B         	goto	u1230
  3768   001772                     u1231:
  3769   001772  EF8A  F00B         	goto	l2224
  3770   001776                     u1230:
  3771   001776  EFCB  F00B         	goto	l2236
  3772   00177A                     l2232:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  3775   00177A  5014               	movf	vfpfcnvrt@c^0,w,c
  3776   00177C  0F60               	addlw	low _dbuf
  3777   00177E  6ED9               	movwf	fsr2l,c
  3778   001780  6ADA               	clrf	fsr2h,c
  3779   001782  50DF               	movf	indf2,w,c
  3780   001784  6E0E               	movwf	??_vfpfcnvrt^0,c
  3781   001786  500E               	movf	??_vfpfcnvrt^0,w,c
  3782   001788  6E03               	movwf	fputc@c^0,c
  3783   00178A  6A04               	clrf	(fputc@c+1)^0,c
  3784   00178C  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3785   001790  EC6C  F00F         	call	_fputc	;wreg free
  3786   001794  2A14               	incf	vfpfcnvrt@c^0,f,c
  3787   001796                     l2236:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  3790   001796  0E20               	movlw	32
  3791   001798  1814               	xorwf	vfpfcnvrt@c^0,w,c
  3792   00179A  A4D8               	btfss	status,2,c
  3793   00179C  EFD2  F00B         	goto	u1241
  3794   0017A0  EFD4  F00B         	goto	u1240
  3795   0017A4                     u1241:
  3796   0017A4  EFBD  F00B         	goto	l2232
  3797   0017A8                     u1240:
  3798   0017A8  EFF9  F00B         	goto	l1144
  3799   0017AC                     l2240:
  3800   0017AC  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3801   0017B0                     	if	1	;There is more than 1 active tblptr byte
  3802   0017B0  0E10               	movlw	high __smallconst
  3803   0017B2  6EF7               	movwf	tblptrh,c
  3804   0017B4                     	endif
  3805   0017B4                     	if	0	;tblptru may be non-zero
  3806   0017B4                     	endif
  3807   0017B4                     	if	0	;tblptru may be non-zero
  3808   0017B4                     	endif
  3809   0017B4  0008               	tblrd		*
  3810   0017B6  50F5               	movf	tablat,w,c
  3811                           
  3812                           ; Switch size 1, requested type "simple"
  3813                           ; Number of cases is 1, Range of values is 117 to 117
  3814                           ; switch strategies available:
  3815                           ; Name         Instructions Cycles
  3816                           ; simple_byte            4     3 (average)
  3817                           ;	Chosen strategy is simple_byte
  3818   0017B8  0A75               	xorlw	117	; case 117
  3819   0017BA  B4D8               	btfsc	status,2,c
  3820   0017BC  EF88  F00B         	goto	l2222
  3821   0017C0  EFE2  F00B         	goto	l2242
  3822   0017C4                     l2242:
  3823                           
  3824                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3825   0017C4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3826   0017C6  6ED9               	movwf	fsr2l,c
  3827   0017C8  6ADA               	clrf	fsr2h,c
  3828   0017CA  2ADF               	incf	indf2,f,c
  3829   0017CC  EFF9  F00B         	goto	l1144
  3830   0017D0                     l2246:
  3831                           
  3832                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3833   0017D0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3834   0017D2  6ED9               	movwf	fsr2l,c
  3835   0017D4  6ADA               	clrf	fsr2h,c
  3836   0017D6  CFDF FFF6          	movff	indf2,tblptrl
  3837   0017DA                     	if	1	;There is more than 1 active tblptr byte
  3838   0017DA  0E10               	movlw	high __smallconst
  3839   0017DC  6EF7               	movwf	tblptrh,c
  3840   0017DE                     	endif
  3841   0017DE                     	if	0	;tblptru may be non-zero
  3842   0017DE                     	endif
  3843   0017DE                     	if	0	;tblptru may be non-zero
  3844   0017DE                     	endif
  3845   0017DE  0008               	tblrd		*
  3846   0017E0  50F5               	movf	tablat,w,c
  3847   0017E2  6E03               	movwf	fputc@c^0,c
  3848   0017E4  6A04               	clrf	(fputc@c+1)^0,c
  3849   0017E6  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3850   0017EA  EC6C  F00F         	call	_fputc	;wreg free
  3851   0017EE  EFE2  F00B         	goto	l2242
  3852   0017F2                     l1144:
  3853   0017F2  0012               	return		;funcret
  3854   0017F4                     __end_of_vfpfcnvrt:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _fputc *****************
  3858 ;; Defined at:
  3859 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  c               2    2[COMRAM] int 
  3862 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  3863 ;;		 -> sprintf@f(11), 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  2    2[COMRAM] int 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3875 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;Total ram usage:        8 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; Hardware stack levels required when called: 2
  3882 ;; This function calls:
  3883 ;;		_putch
  3884 ;; This function is called by:
  3885 ;;		_vfpfcnvrt
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text17
  3890   001ED8                     __ptext17:
  3891                           	callstack 0
  3892   001ED8                     _fputc:
  3893                           	callstack 22
  3894   001ED8  5005               	movf	fputc@fp^0,w,c
  3895   001EDA  B4D8               	btfsc	status,2,c
  3896   001EDC  EF72  F00F         	goto	u1161
  3897   001EE0  EF74  F00F         	goto	u1160
  3898   001EE4                     u1161:
  3899   001EE4  EF7C  F00F         	goto	l2190
  3900   001EE8                     u1160:
  3901   001EE8  5005               	movf	fputc@fp^0,w,c
  3902   001EEA  A4D8               	btfss	status,2,c
  3903   001EEC  EF7A  F00F         	goto	u1171
  3904   001EF0  EF7C  F00F         	goto	u1170
  3905   001EF4                     u1171:
  3906   001EF4  EF81  F00F         	goto	l2192
  3907   001EF8                     u1170:
  3908   001EF8                     l2190:
  3909   001EF8  5003               	movf	fputc@c^0,w,c
  3910   001EFA  EC5F  F013         	call	_putch
  3911   001EFE  EFC0  F00F         	goto	l1163
  3912   001F02                     l2192:
  3913   001F02  5005               	movf	fputc@fp^0,w,c
  3914   001F04  6ED9               	movwf	fsr2l,c
  3915   001F06  6ADA               	clrf	fsr2h,c
  3916   001F08  0E09               	movlw	9
  3917   001F0A  26D9               	addwf	fsr2l,f,c
  3918   001F0C  50DE               	movf	postinc2,w,c
  3919   001F0E  10DE               	iorwf	postinc2,w,c
  3920   001F10  B4D8               	btfsc	status,2,c
  3921   001F12  EF8D  F00F         	goto	u1181
  3922   001F16  EF8F  F00F         	goto	u1180
  3923   001F1A                     u1181:
  3924   001F1A  EFA8  F00F         	goto	l2196
  3925   001F1E                     u1180:
  3926   001F1E  5005               	movf	fputc@fp^0,w,c
  3927   001F20  6ED9               	movwf	fsr2l,c
  3928   001F22  6ADA               	clrf	fsr2h,c
  3929   001F24  0E09               	movlw	9
  3930   001F26  26D9               	addwf	fsr2l,f,c
  3931   001F28  5005               	movf	fputc@fp^0,w,c
  3932   001F2A  6EE1               	movwf	fsr1l,c
  3933   001F2C  6AE2               	clrf	fsr1h,c
  3934   001F2E  0E02               	movlw	2
  3935   001F30  26E1               	addwf	fsr1l,f,c
  3936   001F32  50DE               	movf	postinc2,w,c
  3937   001F34  5CE6               	subwf	postinc1,w,c
  3938   001F36  50E6               	movf	postinc1,w,c
  3939   001F38  0A80               	xorlw	128
  3940   001F3A  6E0A               	movwf	(??_fputc+4)^0,c
  3941   001F3C  50DE               	movf	postinc2,w,c
  3942   001F3E  0A80               	xorlw	128
  3943   001F40  580A               	subwfb	(??_fputc+4)^0,w,c
  3944   001F42  B0D8               	btfsc	status,0,c
  3945   001F44  EFA6  F00F         	goto	u1191
  3946   001F48  EFA8  F00F         	goto	u1190
  3947   001F4C                     u1191:
  3948   001F4C  EFC0  F00F         	goto	l1163
  3949   001F50                     u1190:
  3950   001F50                     l2196:
  3951   001F50  5005               	movf	fputc@fp^0,w,c
  3952   001F52  6ED9               	movwf	fsr2l,c
  3953   001F54  6ADA               	clrf	fsr2h,c
  3954   001F56  0E02               	movlw	2
  3955   001F58  26D9               	addwf	fsr2l,f,c
  3956   001F5A  50DF               	movf	indf2,w,c
  3957   001F5C  6E06               	movwf	??_fputc^0,c
  3958   001F5E  5005               	movf	fputc@fp^0,w,c
  3959   001F60  6ED9               	movwf	fsr2l,c
  3960   001F62  6ADA               	clrf	fsr2h,c
  3961   001F64  50DF               	movf	indf2,w,c
  3962   001F66  2406               	addwf	??_fputc^0,w,c
  3963   001F68  6ED9               	movwf	fsr2l,c
  3964   001F6A  6ADA               	clrf	fsr2h,c
  3965   001F6C  C003  FFDF         	movff	fputc@c,indf2
  3966   001F70  5005               	movf	fputc@fp^0,w,c
  3967   001F72  6ED9               	movwf	fsr2l,c
  3968   001F74  6ADA               	clrf	fsr2h,c
  3969   001F76  0E02               	movlw	2
  3970   001F78  26D9               	addwf	fsr2l,f,c
  3971   001F7A  2ADE               	incf	postinc2,f,c
  3972   001F7C  0E00               	movlw	0
  3973   001F7E  22DD               	addwfc	postdec2,f,c
  3974   001F80                     l1163:
  3975   001F80  0012               	return		;funcret
  3976   001F82                     __end_of_fputc:
  3977                           	callstack 0
  3978                           
  3979 ;; *************** function _putch *****************
  3980 ;; Defined at:
  3981 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  c               1    wreg     unsigned char 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  c               1    0[COMRAM] unsigned char 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; Hardware stack levels required when called: 1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_fputc
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text18
  4010   0026BE                     __ptext18:
  4011                           	callstack 0
  4012   0026BE                     _putch:
  4013                           	callstack 22
  4014   0026BE  0012               	return		;funcret
  4015   0026C0                     __end_of_putch:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function ___lwmod *****************
  4019 ;; Defined at:
  4020 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  dividend        2    2[COMRAM] unsigned int 
  4023 ;;  divisor         2    4[COMRAM] unsigned int 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  counter         1    6[COMRAM] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2    2[COMRAM] unsigned int 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;Total ram usage:        5 bytes
  4040 ;; Hardware stack levels used: 1
  4041 ;; Hardware stack levels required when called: 1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_vfpfcnvrt
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text19
  4050   00226E                     __ptext19:
  4051                           	callstack 0
  4052   00226E                     ___lwmod:
  4053                           	callstack 23
  4054   00226E  5005               	movf	___lwmod@divisor^0,w,c
  4055   002270  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  4056   002272  B4D8               	btfsc	status,2,c
  4057   002274  EF3E  F011         	goto	u1131
  4058   002278  EF40  F011         	goto	u1130
  4059   00227C                     u1131:
  4060   00227C  EF64  F011         	goto	l921
  4061   002280                     u1130:
  4062   002280  0E01               	movlw	1
  4063   002282  6E07               	movwf	___lwmod@counter^0,c
  4064   002284  EF48  F011         	goto	l2176
  4065   002288                     l2174:
  4066   002288  90D8               	bcf	status,0,c
  4067   00228A  3605               	rlcf	___lwmod@divisor^0,f,c
  4068   00228C  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  4069   00228E  2A07               	incf	___lwmod@counter^0,f,c
  4070   002290                     l2176:
  4071   002290  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  4072   002292  EF4D  F011         	goto	u1141
  4073   002296  EF4F  F011         	goto	u1140
  4074   00229A                     u1141:
  4075   00229A  EF44  F011         	goto	l2174
  4076   00229E                     u1140:
  4077   00229E                     l2178:
  4078   00229E  5005               	movf	___lwmod@divisor^0,w,c
  4079   0022A0  5C03               	subwf	___lwmod@dividend^0,w,c
  4080   0022A2  5006               	movf	(___lwmod@divisor+1)^0,w,c
  4081   0022A4  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  4082   0022A6  A0D8               	btfss	status,0,c
  4083   0022A8  EF58  F011         	goto	u1151
  4084   0022AC  EF5A  F011         	goto	u1150
  4085   0022B0                     u1151:
  4086   0022B0  EF5E  F011         	goto	l2182
  4087   0022B4                     u1150:
  4088   0022B4  5005               	movf	___lwmod@divisor^0,w,c
  4089   0022B6  5E03               	subwf	___lwmod@dividend^0,f,c
  4090   0022B8  5006               	movf	(___lwmod@divisor+1)^0,w,c
  4091   0022BA  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  4092   0022BC                     l2182:
  4093   0022BC  90D8               	bcf	status,0,c
  4094   0022BE  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  4095   0022C0  3205               	rrcf	___lwmod@divisor^0,f,c
  4096   0022C2  2E07               	decfsz	___lwmod@counter^0,f,c
  4097   0022C4  EF4F  F011         	goto	l2178
  4098   0022C8                     l921:
  4099   0022C8  C003  F003         	movff	___lwmod@dividend,?___lwmod
  4100   0022CC  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  4101   0022D0  0012               	return		;funcret
  4102   0022D2                     __end_of___lwmod:
  4103                           	callstack 0
  4104                           
  4105 ;; *************** function ___lwdiv *****************
  4106 ;; Defined at:
  4107 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  dividend        2    2[COMRAM] unsigned int 
  4110 ;;  divisor         2    4[COMRAM] unsigned int 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  quotient        2    6[COMRAM] unsigned int 
  4113 ;;  counter         1    8[COMRAM] unsigned char 
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  2    2[COMRAM] unsigned int 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;Total ram usage:        7 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; Hardware stack levels required when called: 1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_welcome_splash
  4134 ;;		_vfpfcnvrt
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text20
  4139   002190                     __ptext20:
  4140                           	callstack 0
  4141   002190                     ___lwdiv:
  4142                           	callstack 28
  4143   002190  0E00               	movlw	0
  4144   002192  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  4145   002194  0E00               	movlw	0
  4146   002196  6E07               	movwf	___lwdiv@quotient^0,c
  4147   002198  5005               	movf	___lwdiv@divisor^0,w,c
  4148   00219A  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4149   00219C  B4D8               	btfsc	status,2,c
  4150   00219E  EFD3  F010         	goto	u1101
  4151   0021A2  EFD5  F010         	goto	u1100
  4152   0021A6                     u1101:
  4153   0021A6  EFFD  F010         	goto	l911
  4154   0021AA                     u1100:
  4155   0021AA  0E01               	movlw	1
  4156   0021AC  6E09               	movwf	___lwdiv@counter^0,c
  4157   0021AE  EFDD  F010         	goto	l2156
  4158   0021B2                     l2154:
  4159   0021B2  90D8               	bcf	status,0,c
  4160   0021B4  3605               	rlcf	___lwdiv@divisor^0,f,c
  4161   0021B6  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4162   0021B8  2A09               	incf	___lwdiv@counter^0,f,c
  4163   0021BA                     l2156:
  4164   0021BA  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  4165   0021BC  EFE2  F010         	goto	u1111
  4166   0021C0  EFE4  F010         	goto	u1110
  4167   0021C4                     u1111:
  4168   0021C4  EFD9  F010         	goto	l2154
  4169   0021C8                     u1110:
  4170   0021C8                     l2158:
  4171   0021C8  90D8               	bcf	status,0,c
  4172   0021CA  3607               	rlcf	___lwdiv@quotient^0,f,c
  4173   0021CC  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4174   0021CE  5005               	movf	___lwdiv@divisor^0,w,c
  4175   0021D0  5C03               	subwf	___lwdiv@dividend^0,w,c
  4176   0021D2  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  4177   0021D4  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4178   0021D6  A0D8               	btfss	status,0,c
  4179   0021D8  EFF0  F010         	goto	u1121
  4180   0021DC  EFF2  F010         	goto	u1120
  4181   0021E0                     u1121:
  4182   0021E0  EFF7  F010         	goto	l2166
  4183   0021E4                     u1120:
  4184   0021E4  5005               	movf	___lwdiv@divisor^0,w,c
  4185   0021E6  5E03               	subwf	___lwdiv@dividend^0,f,c
  4186   0021E8  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  4187   0021EA  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4188   0021EC  8007               	bsf	___lwdiv@quotient^0,0,c
  4189   0021EE                     l2166:
  4190   0021EE  90D8               	bcf	status,0,c
  4191   0021F0  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4192   0021F2  3205               	rrcf	___lwdiv@divisor^0,f,c
  4193   0021F4  2E09               	decfsz	___lwdiv@counter^0,f,c
  4194   0021F6  EFE4  F010         	goto	l2158
  4195   0021FA                     l911:
  4196   0021FA  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  4197   0021FE  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4198   002202  0012               	return		;funcret
  4199   002204                     __end_of___lwdiv:
  4200                           	callstack 0
  4201                           
  4202 ;; *************** function _hex_char_to_value *****************
  4203 ;; Defined at:
  4204 ;;		line 372 in file "OBCII_PIC18F46K22.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  c               1    wreg     unsigned char 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  c               1    2[COMRAM] unsigned char 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      unsigned char 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;Total ram usage:        1 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_print_RPM
  4229 ;;		_print_AI_Temp
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text21
  4234   00201C                     __ptext21:
  4235                           	callstack 0
  4236   00201C                     _hex_char_to_value:
  4237                           	callstack 26
  4238                           
  4239                           ;incstack = 0
  4240                           ;hex_char_to_value@c stored from wreg
  4241   00201C  6E03               	movwf	hex_char_to_value@c^0,c
  4242   00201E                     
  4243                           ;OBCII_PIC18F46K22.c: 373:     if (c >= '0' && c <= '9') return c - '0';
  4244   00201E  0E2F               	movlw	47
  4245   002020  6403               	cpfsgt	hex_char_to_value@c^0,c
  4246   002022  EF15  F010         	goto	u1411
  4247   002026  EF17  F010         	goto	u1410
  4248   00202A                     u1411:
  4249   00202A  EF23  F010         	goto	l2334
  4250   00202E                     u1410:
  4251   00202E  0E3A               	movlw	58
  4252   002030  6003               	cpfslt	hex_char_to_value@c^0,c
  4253   002032  EF1D  F010         	goto	u1421
  4254   002036  EF1F  F010         	goto	u1420
  4255   00203A                     u1421:
  4256   00203A  EF23  F010         	goto	l2334
  4257   00203E                     u1420:
  4258   00203E  5003               	movf	hex_char_to_value@c^0,w,c
  4259   002040  0FD0               	addlw	208
  4260   002042  EF4C  F010         	goto	l236
  4261   002046                     l2334:
  4262                           
  4263                           ;OBCII_PIC18F46K22.c: 374:     if (c >= 'A' && c <= 'F') return c - 'A' + 10;
  4264   002046  0E40               	movlw	64
  4265   002048  6403               	cpfsgt	hex_char_to_value@c^0,c
  4266   00204A  EF29  F010         	goto	u1431
  4267   00204E  EF2B  F010         	goto	u1430
  4268   002052                     u1431:
  4269   002052  EF37  F010         	goto	l2342
  4270   002056                     u1430:
  4271   002056  0E47               	movlw	71
  4272   002058  6003               	cpfslt	hex_char_to_value@c^0,c
  4273   00205A  EF31  F010         	goto	u1441
  4274   00205E  EF33  F010         	goto	u1440
  4275   002062                     u1441:
  4276   002062  EF37  F010         	goto	l2342
  4277   002066                     u1440:
  4278   002066  5003               	movf	hex_char_to_value@c^0,w,c
  4279   002068  0FC9               	addlw	201
  4280   00206A  EF4C  F010         	goto	l236
  4281   00206E                     l2342:
  4282                           
  4283                           ;OBCII_PIC18F46K22.c: 375:     if (c >= 'a' && c <= 'f') return c - 'a' + 10;
  4284   00206E  0E60               	movlw	96
  4285   002070  6403               	cpfsgt	hex_char_to_value@c^0,c
  4286   002072  EF3D  F010         	goto	u1451
  4287   002076  EF3F  F010         	goto	u1450
  4288   00207A                     u1451:
  4289   00207A  EF4B  F010         	goto	l2350
  4290   00207E                     u1450:
  4291   00207E  0E67               	movlw	103
  4292   002080  6003               	cpfslt	hex_char_to_value@c^0,c
  4293   002082  EF45  F010         	goto	u1461
  4294   002086  EF47  F010         	goto	u1460
  4295   00208A                     u1461:
  4296   00208A  EF4B  F010         	goto	l2350
  4297   00208E                     u1460:
  4298   00208E  5003               	movf	hex_char_to_value@c^0,w,c
  4299   002090  0FA9               	addlw	169
  4300   002092  EF4C  F010         	goto	l236
  4301   002096                     l2350:
  4302                           
  4303                           ;OBCII_PIC18F46K22.c: 376:     return 0;
  4304   002096  0E00               	movlw	0
  4305   002098                     l236:
  4306   002098  0012               	return		;funcret
  4307   00209A                     __end_of_hex_char_to_value:
  4308                           	callstack 0
  4309                           
  4310 ;; *************** function _display_system_info *****************
  4311 ;; Defined at:
  4312 ;;		line 496 in file "OBCII_PIC18F46K22.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;		None
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;Total ram usage:        0 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 5
  4333 ;; This function calls:
  4334 ;;		_print_ELMVer
  4335 ;;		_print_SAEVer
  4336 ;; This function is called by:
  4337 ;;		_main_menu
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text22
  4342   0026B0                     __ptext22:
  4343                           	callstack 0
  4344   0026B0                     _display_system_info:
  4345                           	callstack 24
  4346   0026B0                     
  4347                           ;OBCII_PIC18F46K22.c: 497:     print_ELMVer();
  4348   0026B0  EC33  F012         	call	_print_ELMVer	;wreg free
  4349                           
  4350                           ;OBCII_PIC18F46K22.c: 498:     print_SAEVer();
  4351   0026B4  EC12  F012         	call	_print_SAEVer	;wreg free
  4352   0026B8  0012               	return		;funcret
  4353   0026BA                     __end_of_display_system_info:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function _print_SAEVer *****************
  4357 ;; Defined at:
  4358 ;;		line 480 in file "OBCII_PIC18F46K22.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;Total ram usage:        0 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; Hardware stack levels required when called: 4
  4379 ;; This function calls:
  4380 ;;		_LCD_cursor_set
  4381 ;;		_LCD_write_string
  4382 ;;		_UART1_SendString
  4383 ;; This function is called by:
  4384 ;;		_display_system_info
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text23
  4389   002424                     __ptext23:
  4390                           	callstack 0
  4391   002424                     _print_SAEVer:
  4392                           	callstack 24
  4393   002424                     
  4394                           ;OBCII_PIC18F46K22.c: 481:     UART1_SendString("0108\r");
  4395   002424  0EA3               	movlw	low STR_25
  4396   002426  6E04               	movwf	UART1_SendString@string^0,c
  4397   002428  ECCA  F011         	call	_UART1_SendString	;wreg free
  4398   00242C                     l2500:
  4399                           
  4400                           ;OBCII_PIC18F46K22.c: 483:     while(!message_complete) {
  4401   00242C  5045               	movf	_message_complete^0,w,c	;volatile
  4402   00242E  B4D8               	btfsc	status,2,c
  4403   002430  EF1C  F012         	goto	u1561
  4404   002434  EF1E  F012         	goto	u1560
  4405   002438                     u1561:
  4406   002438  EF16  F012         	goto	l2500
  4407   00243C                     u1560:
  4408   00243C                     
  4409                           ;OBCII_PIC18F46K22.c: 487:     LCD_cursor_set(2,1);
  4410   00243C  0E01               	movlw	1
  4411   00243E  6E06               	movwf	LCD_cursor_set@column^0,c
  4412   002440  0E02               	movlw	2
  4413   002442  EC9A  F011         	call	_LCD_cursor_set
  4414   002446                     
  4415                           ;OBCII_PIC18F46K22.c: 488:     LCD_write_string("SAE:");
  4416   002446  0ECC               	movlw	low STR_26
  4417   002448  6E06               	movwf	LCD_write_string@string^0,c
  4418   00244A  5006               	movf	LCD_write_string@string^0,w,c
  4419   00244C  A4D8               	btfss	status,2,c
  4420   00244E  0E10               	movlw	high __smallconst
  4421   002450  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4422   002452  EC8B  F010         	call	_LCD_write_string	;wreg free
  4423   002456                     
  4424                           ;OBCII_PIC18F46K22.c: 489:     LCD_write_string(buffer);
  4425   002456  0E80               	movlw	low _buffer
  4426   002458  6E06               	movwf	LCD_write_string@string^0,c
  4427   00245A  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4428   00245C  EC8B  F010         	call	_LCD_write_string	;wreg free
  4429   002460                     
  4430                           ;OBCII_PIC18F46K22.c: 492:     buffer_count = 0;
  4431   002460  6A47               	clrf	_buffer_count^0,c
  4432   002462                     
  4433                           ;OBCII_PIC18F46K22.c: 493:     message_complete = 0;
  4434   002462  6A45               	clrf	_message_complete^0,c	;volatile
  4435   002464  0012               	return		;funcret
  4436   002466                     __end_of_print_SAEVer:
  4437                           	callstack 0
  4438                           
  4439 ;; *************** function _print_ELMVer *****************
  4440 ;; Defined at:
  4441 ;;		line 463 in file "OBCII_PIC18F46K22.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used: 1
  4461 ;; Hardware stack levels required when called: 4
  4462 ;; This function calls:
  4463 ;;		_LCD_cursor_set
  4464 ;;		_LCD_write_string
  4465 ;;		_UART1_SendString
  4466 ;; This function is called by:
  4467 ;;		_display_system_info
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text24
  4472   002466                     __ptext24:
  4473                           	callstack 0
  4474   002466                     _print_ELMVer:
  4475                           	callstack 24
  4476   002466                     
  4477                           ;OBCII_PIC18F46K22.c: 465:     UART1_SendString("ATI\r");
  4478   002466  0EC7               	movlw	low STR_4
  4479   002468  6E04               	movwf	UART1_SendString@string^0,c
  4480   00246A  ECCA  F011         	call	_UART1_SendString	;wreg free
  4481   00246E                     l2486:
  4482                           
  4483                           ;OBCII_PIC18F46K22.c: 467:     while(!message_complete) {
  4484   00246E  5045               	movf	_message_complete^0,w,c	;volatile
  4485   002470  B4D8               	btfsc	status,2,c
  4486   002472  EF3D  F012         	goto	u1551
  4487   002476  EF3F  F012         	goto	u1550
  4488   00247A                     u1551:
  4489   00247A  EF37  F012         	goto	l2486
  4490   00247E                     u1550:
  4491   00247E                     
  4492                           ;OBCII_PIC18F46K22.c: 471:     LCD_cursor_set(1,1);
  4493   00247E  0E01               	movlw	1
  4494   002480  6E06               	movwf	LCD_cursor_set@column^0,c
  4495   002482  0E01               	movlw	1
  4496   002484  EC9A  F011         	call	_LCD_cursor_set
  4497   002488                     
  4498                           ;OBCII_PIC18F46K22.c: 472:     LCD_write_string("ELM:");
  4499   002488  0ED1               	movlw	low STR_24
  4500   00248A  6E06               	movwf	LCD_write_string@string^0,c
  4501   00248C  5006               	movf	LCD_write_string@string^0,w,c
  4502   00248E  A4D8               	btfss	status,2,c
  4503   002490  0E10               	movlw	high __smallconst
  4504   002492  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4505   002494  EC8B  F010         	call	_LCD_write_string	;wreg free
  4506   002498                     
  4507                           ;OBCII_PIC18F46K22.c: 473:     LCD_write_string(buffer);
  4508   002498  0E80               	movlw	low _buffer
  4509   00249A  6E06               	movwf	LCD_write_string@string^0,c
  4510   00249C  6A07               	clrf	(LCD_write_string@string+1)^0,c
  4511   00249E  EC8B  F010         	call	_LCD_write_string	;wreg free
  4512   0024A2                     
  4513                           ;OBCII_PIC18F46K22.c: 476:     buffer_count = 0;
  4514   0024A2  6A47               	clrf	_buffer_count^0,c
  4515   0024A4                     
  4516                           ;OBCII_PIC18F46K22.c: 477:     message_complete = 0;
  4517   0024A4  6A45               	clrf	_message_complete^0,c	;volatile
  4518   0024A6  0012               	return		;funcret
  4519   0024A8                     __end_of_print_ELMVer:
  4520                           	callstack 0
  4521                           
  4522 ;; *************** function _clear_diagnostic_codes *****************
  4523 ;; Defined at:
  4524 ;;		line 508 in file "OBCII_PIC18F46K22.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;		None
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  opt_sel         2   12[COMRAM] int 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;Total ram usage:        4 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 5
  4545 ;; This function calls:
  4546 ;;		_LCD_clear
  4547 ;;		_LCD_configure_cursor_blink
  4548 ;;		_LCD_cursor_set
  4549 ;;		_LCD_write_string
  4550 ;;		_UART1_SendString
  4551 ;;		_display_mm
  4552 ;;		_readADC
  4553 ;; This function is called by:
  4554 ;;		_main_menu
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text25
  4559   001324                     __ptext25:
  4560                           	callstack 0
  4561   001324                     _clear_diagnostic_codes:
  4562                           	callstack 24
  4563   001324                     
  4564                           ;OBCII_PIC18F46K22.c: 510:     int opt_sel = 0;
  4565   001324  0E00               	movlw	0
  4566   001326  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
  4567   001328  0E00               	movlw	0
  4568   00132A  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
  4569   00132C                     
  4570                           ;OBCII_PIC18F46K22.c: 511:     LCD_clear();
  4571   00132C  EC1A  F013         	call	_LCD_clear	;wreg free
  4572   001330                     
  4573                           ;OBCII_PIC18F46K22.c: 512:     LCD_cursor_set(1,1);
  4574   001330  0E01               	movlw	1
  4575   001332  6E06               	movwf	LCD_cursor_set@column^0,c
  4576   001334  0E01               	movlw	1
  4577   001336  EC9A  F011         	call	_LCD_cursor_set
  4578   00133A                     
  4579                           ;OBCII_PIC18F46K22.c: 513:     LCD_write_string("Clear Code(s)?");
  4580   00133A  0E75               	movlw	low STR_27
  4581   00133C  6E06               	movwf	LCD_write_string@string^0,c
  4582   00133E  5006               	movf	LCD_write_string@string^0,w,c
  4583   001340  A4D8               	btfss	status,2,c
  4584   001342  0E10               	movlw	high __smallconst
  4585   001344  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4586   001346  EC8B  F010         	call	_LCD_write_string	;wreg free
  4587   00134A                     
  4588                           ;OBCII_PIC18F46K22.c: 514:     LCD_cursor_set(2,1);
  4589   00134A  0E01               	movlw	1
  4590   00134C  6E06               	movwf	LCD_cursor_set@column^0,c
  4591   00134E  0E02               	movlw	2
  4592   001350  EC9A  F011         	call	_LCD_cursor_set
  4593   001354                     
  4594                           ;OBCII_PIC18F46K22.c: 515:     LCD_write_string("Y/N <<<<<<<<<<<<");
  4595   001354  0E34               	movlw	low STR_28
  4596   001356  6E06               	movwf	LCD_write_string@string^0,c
  4597   001358  5006               	movf	LCD_write_string@string^0,w,c
  4598   00135A  A4D8               	btfss	status,2,c
  4599   00135C  0E10               	movlw	high __smallconst
  4600   00135E  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4601   001360  EC8B  F010         	call	_LCD_write_string	;wreg free
  4602   001364                     
  4603                           ;OBCII_PIC18F46K22.c: 516:     LCD_configure_cursor_blink(1);
  4604   001364  0E01               	movlw	1
  4605   001366  EC09  F013         	call	_LCD_configure_cursor_blink
  4606   00136A                     l2664:
  4607                           
  4608                           ;OBCII_PIC18F46K22.c: 519:         result = readADC();
  4609   00136A  EC90  F012         	call	_readADC	;wreg free
  4610   00136E  C003  F042         	movff	?_readADC,_result
  4611   001372  C004  F043         	movff	?_readADC+1,_result+1
  4612   001376                     
  4613                           ;OBCII_PIC18F46K22.c: 520:         if(result >= 0 && result <= 511){
  4614   001376  0E02               	movlw	2
  4615   001378  5C43               	subwf	(_result+1)^0,w,c
  4616   00137A  B0D8               	btfsc	status,0,c
  4617   00137C  EFC2  F009         	goto	u1761
  4618   001380  EFC4  F009         	goto	u1760
  4619   001384                     u1761:
  4620   001384  EFCD  F009         	goto	l2672
  4621   001388                     u1760:
  4622   001388                     
  4623                           ;OBCII_PIC18F46K22.c: 521:             opt_sel = 0;
  4624   001388  0E00               	movlw	0
  4625   00138A  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
  4626   00138C  0E00               	movlw	0
  4627   00138E  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
  4628   001390                     
  4629                           ;OBCII_PIC18F46K22.c: 522:             LCD_cursor_set(2,1);
  4630   001390  0E01               	movlw	1
  4631   001392  6E06               	movwf	LCD_cursor_set@column^0,c
  4632   001394  0E02               	movlw	2
  4633   001396  EC9A  F011         	call	_LCD_cursor_set
  4634   00139A                     l2672:
  4635                           
  4636                           ;OBCII_PIC18F46K22.c: 525:         if(result >= 512 && result <=1023){
  4637   00139A  0E02               	movlw	2
  4638   00139C  5C43               	subwf	(_result+1)^0,w,c
  4639   00139E  A0D8               	btfss	status,0,c
  4640   0013A0  EFD4  F009         	goto	u1771
  4641   0013A4  EFD6  F009         	goto	u1770
  4642   0013A8                     u1771:
  4643   0013A8  EFE8  F009         	goto	l2680
  4644   0013AC                     u1770:
  4645   0013AC  0E04               	movlw	4
  4646   0013AE  5C43               	subwf	(_result+1)^0,w,c
  4647   0013B0  B0D8               	btfsc	status,0,c
  4648   0013B2  EFDD  F009         	goto	u1781
  4649   0013B6  EFDF  F009         	goto	u1780
  4650   0013BA                     u1781:
  4651   0013BA  EFE8  F009         	goto	l2680
  4652   0013BE                     u1780:
  4653   0013BE                     
  4654                           ;OBCII_PIC18F46K22.c: 526:             opt_sel = 1;
  4655   0013BE  0E00               	movlw	0
  4656   0013C0  6E0E               	movwf	(clear_diagnostic_codes@opt_sel+1)^0,c
  4657   0013C2  0E01               	movlw	1
  4658   0013C4  6E0D               	movwf	clear_diagnostic_codes@opt_sel^0,c
  4659   0013C6                     
  4660                           ;OBCII_PIC18F46K22.c: 527:             LCD_cursor_set(2,3);
  4661   0013C6  0E03               	movlw	3
  4662   0013C8  6E06               	movwf	LCD_cursor_set@column^0,c
  4663   0013CA  0E02               	movlw	2
  4664   0013CC  EC9A  F011         	call	_LCD_cursor_set
  4665   0013D0                     l2680:
  4666                           
  4667                           ;OBCII_PIC18F46K22.c: 529:             if (PORTCbits.RC5 == 0) {
  4668   0013D0  BA82               	btfsc	130,5,c	;volatile
  4669   0013D2  EFED  F009         	goto	u1791
  4670   0013D6  EFEF  F009         	goto	u1790
  4671   0013DA                     u1791:
  4672   0013DA  EF06  F00A         	goto	l285
  4673   0013DE                     u1790:
  4674   0013DE                     
  4675                           ;OBCII_PIC18F46K22.c: 530:                 _delay((unsigned long)((20)*(16000000/4000.0)
      +                          ));
  4676   0013DE  0E68               	movlw	104
  4677   0013E0  6E0B               	movwf	??_clear_diagnostic_codes^0,c
  4678   0013E2  0EE4               	movlw	228
  4679   0013E4                     u2307:
  4680   0013E4  2EE8               	decfsz	wreg,f,c
  4681   0013E6  D7FE               	bra	u2307
  4682   0013E8  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
  4683   0013EA  D7FC               	bra	u2307
  4684   0013EC  D000               	nop2	
  4685   0013EE                     
  4686                           ;OBCII_PIC18F46K22.c: 531:                 if (PORTCbits.RC5 == 0) {
  4687   0013EE  BA82               	btfsc	130,5,c	;volatile
  4688   0013F0  EFFC  F009         	goto	u1801
  4689   0013F4  EFFE  F009         	goto	u1800
  4690   0013F8                     u1801:
  4691   0013F8  EF06  F00A         	goto	l285
  4692   0013FC                     u1800:
  4693   0013FC                     
  4694                           ;OBCII_PIC18F46K22.c: 532:                     LCD_clear();
  4695   0013FC  EC1A  F013         	call	_LCD_clear	;wreg free
  4696   001400                     
  4697                           ;OBCII_PIC18F46K22.c: 533:                     display_mm();
  4698   001400  ECAB  F012         	call	_display_mm	;wreg free
  4699   001404                     
  4700                           ;OBCII_PIC18F46K22.c: 534:                     menu_sel = -1;
  4701   001404  6858               	setf	_menu_sel^0,c
  4702   001406  6859               	setf	(_menu_sel+1)^0,c
  4703                           
  4704                           ;OBCII_PIC18F46K22.c: 535:                     break;
  4705   001408  EF8A  F00A         	goto	l299
  4706   00140C                     l285:
  4707                           
  4708                           ;OBCII_PIC18F46K22.c: 539:         if (PORTBbits.RB4 == 0) {
  4709   00140C  B881               	btfsc	129,4,c	;volatile
  4710   00140E  EF0B  F00A         	goto	u1811
  4711   001412  EF0D  F00A         	goto	u1810
  4712   001416                     u1811:
  4713   001416  EFB5  F009         	goto	l2664
  4714   00141A                     u1810:
  4715   00141A                     
  4716                           ;OBCII_PIC18F46K22.c: 540:             _delay((unsigned long)((20)*(16000000/4000.0)));
  4717   00141A  0E68               	movlw	104
  4718   00141C  6E0B               	movwf	??_clear_diagnostic_codes^0,c
  4719   00141E  0EE4               	movlw	228
  4720   001420                     u2317:
  4721   001420  2EE8               	decfsz	wreg,f,c
  4722   001422  D7FE               	bra	u2317
  4723   001424  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
  4724   001426  D7FC               	bra	u2317
  4725   001428  D000               	nop2	
  4726   00142A                     
  4727                           ;OBCII_PIC18F46K22.c: 541:             if (PORTBbits.RB4 == 0) {
  4728   00142A  B881               	btfsc	129,4,c	;volatile
  4729   00142C  EF1A  F00A         	goto	u1821
  4730   001430  EF1C  F00A         	goto	u1820
  4731   001434                     u1821:
  4732   001434  EFB5  F009         	goto	l2664
  4733   001438                     u1820:
  4734   001438  EF74  F00A         	goto	l2724
  4735   00143C                     l2698:
  4736                           
  4737                           ;OBCII_PIC18F46K22.c: 545:                     UART1_SendString("04\r");
  4738   00143C  0ED6               	movlw	low STR_29
  4739   00143E  6E04               	movwf	UART1_SendString@string^0,c
  4740   001440  ECCA  F011         	call	_UART1_SendString	;wreg free
  4741   001444                     l2700:
  4742                           
  4743                           ;OBCII_PIC18F46K22.c: 546:                     while(!message_complete){
  4744   001444  5045               	movf	_message_complete^0,w,c	;volatile
  4745   001446  B4D8               	btfsc	status,2,c
  4746   001448  EF28  F00A         	goto	u1831
  4747   00144C  EF2A  F00A         	goto	u1830
  4748   001450                     u1831:
  4749   001450  EF22  F00A         	goto	l2700
  4750   001454                     u1830:
  4751   001454                     
  4752                           ;OBCII_PIC18F46K22.c: 550:                     LCD_clear();
  4753   001454  EC1A  F013         	call	_LCD_clear	;wreg free
  4754                           
  4755                           ;OBCII_PIC18F46K22.c: 551:                     LCD_cursor_set(1,1);
  4756   001458  0E01               	movlw	1
  4757   00145A  6E06               	movwf	LCD_cursor_set@column^0,c
  4758   00145C  0E01               	movlw	1
  4759   00145E  EC9A  F011         	call	_LCD_cursor_set
  4760   001462                     
  4761                           ;OBCII_PIC18F46K22.c: 552:                     LCD_write_string("Codes Cleared");
  4762   001462  0E84               	movlw	low STR_30
  4763   001464  6E06               	movwf	LCD_write_string@string^0,c
  4764   001466  5006               	movf	LCD_write_string@string^0,w,c
  4765   001468  A4D8               	btfss	status,2,c
  4766   00146A  0E10               	movlw	high __smallconst
  4767   00146C  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4768   00146E  EC8B  F010         	call	_LCD_write_string	;wreg free
  4769   001472                     
  4770                           ;OBCII_PIC18F46K22.c: 553:                     LCD_cursor_set(2,1);
  4771   001472  0E01               	movlw	1
  4772   001474  6E06               	movwf	LCD_cursor_set@column^0,c
  4773   001476  0E02               	movlw	2
  4774   001478  EC9A  F011         	call	_LCD_cursor_set
  4775                           
  4776                           ;OBCII_PIC18F46K22.c: 554:                     LCD_write_string("To Menu...");
  4777   00147C  0E92               	movlw	low STR_31
  4778   00147E  6E06               	movwf	LCD_write_string@string^0,c
  4779   001480  5006               	movf	LCD_write_string@string^0,w,c
  4780   001482  A4D8               	btfss	status,2,c
  4781   001484  0E10               	movlw	high __smallconst
  4782   001486  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4783   001488  EC8B  F010         	call	_LCD_write_string	;wreg free
  4784   00148C                     l2708:
  4785                           
  4786                           ;OBCII_PIC18F46K22.c: 556:                     menu_sel = -1;
  4787   00148C  6858               	setf	_menu_sel^0,c
  4788   00148E  6859               	setf	(_menu_sel+1)^0,c
  4789   001490                     
  4790                           ;OBCII_PIC18F46K22.c: 557:                     _delay((unsigned long)((2000)*(16000000/4
      +                          000.0)));
  4791   001490  0E29               	movlw	41
  4792   001492  6E0C               	movwf	(??_clear_diagnostic_codes+1)^0,c
  4793   001494  0E96               	movlw	150
  4794   001496  6E0B               	movwf	??_clear_diagnostic_codes^0,c
  4795   001498  0E7F               	movlw	127
  4796   00149A                     u2327:
  4797   00149A  2EE8               	decfsz	wreg,f,c
  4798   00149C  D7FE               	bra	u2327
  4799   00149E  2E0B               	decfsz	??_clear_diagnostic_codes^0,f,c
  4800   0014A0  D7FC               	bra	u2327
  4801   0014A2  2E0C               	decfsz	(??_clear_diagnostic_codes+1)^0,f,c
  4802   0014A4  D7FA               	bra	u2327
  4803   0014A6  0000               	nop	
  4804                           
  4805                           ;OBCII_PIC18F46K22.c: 559:                         break;
  4806   0014A8  EF8A  F00A         	goto	l299
  4807   0014AC                     l2712:
  4808                           
  4809                           ;OBCII_PIC18F46K22.c: 563:                     LCD_clear();
  4810   0014AC  EC1A  F013         	call	_LCD_clear	;wreg free
  4811                           
  4812                           ;OBCII_PIC18F46K22.c: 564:                     LCD_cursor_set(1,1);
  4813   0014B0  0E01               	movlw	1
  4814   0014B2  6E06               	movwf	LCD_cursor_set@column^0,c
  4815   0014B4  0E01               	movlw	1
  4816   0014B6  EC9A  F011         	call	_LCD_cursor_set
  4817   0014BA                     
  4818                           ;OBCII_PIC18F46K22.c: 565:                     LCD_write_string("Nothing Cleared");
  4819   0014BA  0E65               	movlw	low STR_32
  4820   0014BC  6E06               	movwf	LCD_write_string@string^0,c
  4821   0014BE  5006               	movf	LCD_write_string@string^0,w,c
  4822   0014C0  A4D8               	btfss	status,2,c
  4823   0014C2  0E10               	movlw	high __smallconst
  4824   0014C4  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4825   0014C6  EC8B  F010         	call	_LCD_write_string	;wreg free
  4826   0014CA                     
  4827                           ;OBCII_PIC18F46K22.c: 566:                     LCD_cursor_set(2,1);
  4828   0014CA  0E01               	movlw	1
  4829   0014CC  6E06               	movwf	LCD_cursor_set@column^0,c
  4830   0014CE  0E02               	movlw	2
  4831   0014D0  EC9A  F011         	call	_LCD_cursor_set
  4832                           
  4833                           ;OBCII_PIC18F46K22.c: 567:                     LCD_write_string("To Menu...");
  4834   0014D4  0E92               	movlw	low STR_31
  4835   0014D6  6E06               	movwf	LCD_write_string@string^0,c
  4836   0014D8  5006               	movf	LCD_write_string@string^0,w,c
  4837   0014DA  A4D8               	btfss	status,2,c
  4838   0014DC  0E10               	movlw	high __smallconst
  4839   0014DE  6E07               	movwf	(LCD_write_string@string+1)^0,c
  4840   0014E0  EC8B  F010         	call	_LCD_write_string	;wreg free
  4841   0014E4  EF46  F00A         	goto	l2708
  4842   0014E8                     l2724:
  4843   0014E8  C00D  F00B         	movff	clear_diagnostic_codes@opt_sel,??_clear_diagnostic_codes
  4844   0014EC  C00E  F00C         	movff	clear_diagnostic_codes@opt_sel+1,??_clear_diagnostic_codes+1
  4845                           
  4846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4847                           ; Switch size 1, requested type "simple"
  4848                           ; Number of cases is 1, Range of values is 0 to 0
  4849                           ; switch strategies available:
  4850                           ; Name         Instructions Cycles
  4851                           ; simple_byte            4     3 (average)
  4852                           ;	Chosen strategy is simple_byte
  4853   0014F0  500C               	movf	(??_clear_diagnostic_codes+1)^0,w,c
  4854   0014F2  0A00               	xorlw	0	; case 0
  4855   0014F4  B4D8               	btfsc	status,2,c
  4856   0014F6  EF7F  F00A         	goto	l3146
  4857   0014FA  EF8A  F00A         	goto	l299
  4858   0014FE                     l3146:
  4859                           
  4860                           ; Switch size 1, requested type "simple"
  4861                           ; Number of cases is 2, Range of values is 0 to 1
  4862                           ; switch strategies available:
  4863                           ; Name         Instructions Cycles
  4864                           ; simple_byte            7     4 (average)
  4865                           ;	Chosen strategy is simple_byte
  4866   0014FE  500B               	movf	??_clear_diagnostic_codes^0,w,c
  4867   001500  0A00               	xorlw	0	; case 0
  4868   001502  B4D8               	btfsc	status,2,c
  4869   001504  EF1E  F00A         	goto	l2698
  4870   001508  0A01               	xorlw	1	; case 1
  4871   00150A  B4D8               	btfsc	status,2,c
  4872   00150C  EF56  F00A         	goto	l2712
  4873   001510  EF8A  F00A         	goto	l299
  4874   001514                     l299:
  4875   001514  0012               	return		;funcret
  4876   001516                     __end_of_clear_diagnostic_codes:
  4877                           	callstack 0
  4878                           
  4879 ;; *************** function _readADC *****************
  4880 ;; Defined at:
  4881 ;;		line 244 in file "OBCII_PIC18F46K22.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  2    2[COMRAM] unsigned int 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;Total ram usage:        4 bytes
  4900 ;; Hardware stack levels used: 1
  4901 ;; Hardware stack levels required when called: 1
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_main_menu
  4906 ;;		_clear_diagnostic_codes
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text26
  4911   002520                     __ptext26:
  4912                           	callstack 0
  4913   002520                     _readADC:
  4914                           	callstack 28
  4915   002520                     
  4916                           ;OBCII_PIC18F46K22.c: 245:     ADCON0bits.GO = 1;
  4917   002520  82C2               	bsf	194,1,c	;volatile
  4918   002522                     l187:
  4919   002522  B2C2               	btfsc	194,1,c	;volatile
  4920   002524  EF96  F012         	goto	u1491
  4921   002528  EF98  F012         	goto	u1490
  4922   00252C                     u1491:
  4923   00252C  EF91  F012         	goto	l187
  4924   002530                     u1490:
  4925   002530                     
  4926                           ;OBCII_PIC18F46K22.c: 247:     _delay((unsigned long)((10)*(16000000/4000.0)));
  4927   002530  0E34               	movlw	52
  4928   002532  6E05               	movwf	??_readADC^0,c
  4929   002534  0EF2               	movlw	242
  4930   002536                     u2337:
  4931   002536  2EE8               	decfsz	wreg,f,c
  4932   002538  D7FE               	bra	u2337
  4933   00253A  2E05               	decfsz	??_readADC^0,f,c
  4934   00253C  D7FC               	bra	u2337
  4935   00253E                     
  4936                           ;OBCII_PIC18F46K22.c: 248:     return ((ADRESH << 8) | ADRESL);
  4937   00253E  50C3               	movf	195,w,c	;volatile
  4938   002540  CFC4 F005          	movff	4036,??_readADC	;volatile
  4939   002544  6A06               	clrf	(??_readADC+1)^0,c
  4940   002546  C005  F006         	movff	??_readADC,??_readADC+1
  4941   00254A  6A05               	clrf	??_readADC^0,c
  4942   00254C  1005               	iorwf	??_readADC^0,w,c
  4943   00254E  6E03               	movwf	?_readADC^0,c
  4944   002550  5006               	movf	(??_readADC+1)^0,w,c
  4945   002552  6E04               	movwf	(?_readADC+1)^0,c
  4946   002554  0012               	return		;funcret
  4947   002556                     __end_of_readADC:
  4948                           	callstack 0
  4949                           
  4950 ;; *************** function _display_mm *****************
  4951 ;; Defined at:
  4952 ;;		line 251 in file "OBCII_PIC18F46K22.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      void 
  4959 ;; Registers used:
  4960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;Total ram usage:        0 bytes
  4971 ;; Hardware stack levels used: 1
  4972 ;; Hardware stack levels required when called: 4
  4973 ;; This function calls:
  4974 ;;		_LCD_cursor_set
  4975 ;;		_LCD_write_string
  4976 ;; This function is called by:
  4977 ;;		_main_menu
  4978 ;;		_clear_diagnostic_codes
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text27
  4983   002556                     __ptext27:
  4984                           	callstack 0
  4985   002556                     _display_mm:
  4986                           	callstack 25
  4987   002556                     
  4988                           ;OBCII_PIC18F46K22.c: 252:     LCD_cursor_set(1,1);
  4989   002556  0E01               	movlw	1
  4990   002558  6E06               	movwf	LCD_cursor_set@column^0,c
  4991   00255A  0E01               	movlw	1
  4992   00255C  EC9A  F011         	call	_LCD_cursor_set
  4993   002560                     
  4994                           ;OBCII_PIC18F46K22.c: 253:     LCD_write_string("MENU <OBDIIPIC>");
  4995   002560  0E45               	movlw	low STR_8
  4996   002562  6E06               	movwf	LCD_write_string@string^0,c
  4997   002564  5006               	movf	LCD_write_string@string^0,w,c
  4998   002566  A4D8               	btfss	status,2,c
  4999   002568  0E10               	movlw	high __smallconst
  5000   00256A  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5001   00256C  EC8B  F010         	call	_LCD_write_string	;wreg free
  5002   002570                     
  5003                           ;OBCII_PIC18F46K22.c: 254:     LCD_cursor_set(2,1);
  5004   002570  0E01               	movlw	1
  5005   002572  6E06               	movwf	LCD_cursor_set@column^0,c
  5006   002574  0E02               	movlw	2
  5007   002576  EC9A  F011         	call	_LCD_cursor_set
  5008                           
  5009                           ;OBCII_PIC18F46K22.c: 255:     LCD_write_string("LRM RDC CDC DSI");
  5010   00257A  0E55               	movlw	low STR_9
  5011   00257C  6E06               	movwf	LCD_write_string@string^0,c
  5012   00257E  5006               	movf	LCD_write_string@string^0,w,c
  5013   002580  A4D8               	btfss	status,2,c
  5014   002582  0E10               	movlw	high __smallconst
  5015   002584  6E07               	movwf	(LCD_write_string@string+1)^0,c
  5016   002586  EC8B  F010         	call	_LCD_write_string	;wreg free
  5017   00258A  0012               	return		;funcret
  5018   00258C                     __end_of_display_mm:
  5019                           	callstack 0
  5020                           
  5021 ;; *************** function _LCD_write_string *****************
  5022 ;; Defined at:
  5023 ;;		line 362 in file "LCD.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  string          2    5[COMRAM] PTR unsigned char 
  5026 ;;		 -> STR_33(11), STR_32(16), STR_31(11), STR_30(14), 
  5027 ;;		 -> STR_28(17), STR_27(15), STR_26(5), STR_24(5), 
  5028 ;;		 -> STR_22(2), STR_21(4), air_intake_string(16), STR_19(4), 
  5029 ;;		 -> STR_17(4), STR_16(6), STR_15(6), STR_13(4), 
  5030 ;;		 -> STR_12(6), rpm_string(16), STR_9(16), STR_8(16), 
  5031 ;;		 -> STR_5(17), STR_3(17), STR_2(17), buffer(32), 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  i               1    9[COMRAM] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;Total ram usage:        5 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 3
  5050 ;; This function calls:
  5051 ;;		_LCD_write_data
  5052 ;; This function is called by:
  5053 ;;		_welcome_splash
  5054 ;;		_display_mm
  5055 ;;		_print_RPM
  5056 ;;		_print_Vbatt
  5057 ;;		_print_AI_Temp
  5058 ;;		_print_ELMVer
  5059 ;;		_print_SAEVer
  5060 ;;		_clear_diagnostic_codes
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text28
  5065   002116                     __ptext28:
  5066                           	callstack 0
  5067   002116                     _LCD_write_string:
  5068                           	callstack 26
  5069   002116                     
  5070                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  5071   002116  6A0A               	clrf	LCD_write_string@i^0,c
  5072   002118  EFA8  F010         	goto	l2324
  5073   00211C                     l2320:
  5074                           
  5075                           ;LCD.c: 366:         LCD_write_data(string[i]);
  5076   00211C  500A               	movf	LCD_write_string@i^0,w,c
  5077   00211E  2406               	addwf	LCD_write_string@string^0,w,c
  5078   002120  6E08               	movwf	??_LCD_write_string^0,c
  5079   002122  0E00               	movlw	0
  5080   002124  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  5081   002126  6E09               	movwf	(??_LCD_write_string+1)^0,c
  5082   002128  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  5083   00212C  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  5084   002130  0E00               	movlw	low (__smallconst shr (0+16))
  5085   002132  6EF8               	movwf	tblptru,c
  5086   002134  0E0F               	movlw	(high __ramtop+-1)
  5087   002136  64F7               	cpfsgt	tblptrh,c
  5088   002138  D003               	bra	u1387
  5089   00213A  0008               	tblrd		*
  5090   00213C  50F5               	movf	tablat,w,c
  5091   00213E  D005               	bra	u1380
  5092   002140                     u1387:
  5093   002140  CFF6 FFE9          	movff	tblptrl,fsr0l
  5094   002144  CFF7 FFEA          	movff	tblptrh,fsr0h
  5095   002148  50EF               	movf	indf0,w,c
  5096   00214A                     u1380:
  5097   00214A  EC92  F00D         	call	_LCD_write_data
  5098   00214E                     
  5099                           ;LCD.c: 367:     }
  5100   00214E  2A0A               	incf	LCD_write_string@i^0,f,c
  5101   002150                     l2324:
  5102   002150  500A               	movf	LCD_write_string@i^0,w,c
  5103   002152  2406               	addwf	LCD_write_string@string^0,w,c
  5104   002154  6E08               	movwf	??_LCD_write_string^0,c
  5105   002156  0E00               	movlw	0
  5106   002158  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  5107   00215A  6E09               	movwf	(??_LCD_write_string+1)^0,c
  5108   00215C  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  5109   002160  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  5110   002164  0E00               	movlw	low (__smallconst shr (0+16))
  5111   002166  6EF8               	movwf	tblptru,c
  5112   002168  0E0F               	movlw	(high __ramtop+-1)
  5113   00216A  64F7               	cpfsgt	tblptrh,c
  5114   00216C  D003               	bra	u1397
  5115   00216E  0008               	tblrd		*
  5116   002170  50F5               	movf	tablat,w,c
  5117   002172  D005               	bra	u1390
  5118   002174                     u1397:
  5119   002174  CFF6 FFE9          	movff	tblptrl,fsr0l
  5120   002178  CFF7 FFEA          	movff	tblptrh,fsr0h
  5121   00217C  50EF               	movf	indf0,w,c
  5122   00217E                     u1390:
  5123   00217E  0900               	iorlw	0
  5124   002180  A4D8               	btfss	status,2,c
  5125   002182  EFC5  F010         	goto	u1401
  5126   002186  EFC7  F010         	goto	u1400
  5127   00218A                     u1401:
  5128   00218A  EF8E  F010         	goto	l2320
  5129   00218E                     u1400:
  5130   00218E  0012               	return		;funcret
  5131   002190                     __end_of_LCD_write_string:
  5132                           	callstack 0
  5133                           
  5134 ;; *************** function _LCD_write_data *****************
  5135 ;; Defined at:
  5136 ;;		line 74 in file "LCD.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  data            1    wreg     unsigned char 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  data            1    4[COMRAM] unsigned char 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;Total ram usage:        3 bytes
  5155 ;; Hardware stack levels used: 1
  5156 ;; Hardware stack levels required when called: 2
  5157 ;; This function calls:
  5158 ;;		_LCD_pulse_clock
  5159 ;; This function is called by:
  5160 ;;		_LCD_write_string
  5161 ;;		_LCD_write_variable
  5162 ;;		_LCD_add_character
  5163 ;;		_LCD_write_char
  5164 ;;		_LCD_write_float
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text29
  5169   001B24                     __ptext29:
  5170                           	callstack 0
  5171   001B24                     _LCD_write_data:
  5172                           	callstack 26
  5173                           
  5174                           ;incstack = 0
  5175                           ;LCD_write_data@data stored from wreg
  5176   001B24  6E05               	movwf	LCD_write_data@data^0,c
  5177   001B26                     
  5178                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
  5179   001B26  848C               	bsf	140,2,c	;volatile
  5180   001B28                     
  5181                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
  5182   001B28  6A03               	clrf	??_LCD_write_data^0,c
  5183   001B2A  AE05               	btfss	LCD_write_data@data^0,7,c
  5184   001B2C  D001               	bra	u1295
  5185   001B2E  2A03               	incf	??_LCD_write_data^0,f,c
  5186   001B30                     u1295:
  5187   001B30  0E01               	movlw	1
  5188   001B32  1603               	andwf	??_LCD_write_data^0,f,c
  5189   001B34  3203               	rrcf	??_LCD_write_data^0,f,c
  5190   001B36  3203               	rrcf	??_LCD_write_data^0,f,c
  5191   001B38  508C               	movf	140,w,c	;volatile
  5192   001B3A  1803               	xorwf	??_LCD_write_data^0,w,c
  5193   001B3C  0B7F               	andlw	-129
  5194   001B3E  1803               	xorwf	??_LCD_write_data^0,w,c
  5195   001B40  6E8C               	movwf	140,c	;volatile
  5196                           
  5197                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
  5198   001B42  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5199   001B46  0E06               	movlw	6
  5200   001B48  6E04               	movwf	(??_LCD_write_data+1)^0,c
  5201   001B4A                     u1305:
  5202   001B4A  90D8               	bcf	status,0,c
  5203   001B4C  3203               	rrcf	??_LCD_write_data^0,f,c
  5204   001B4E  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  5205   001B50  EFA5  F00D         	goto	u1305
  5206   001B54  0E01               	movlw	1
  5207   001B56  1603               	andwf	??_LCD_write_data^0,f,c
  5208   001B58  3A03               	swapf	??_LCD_write_data^0,f,c
  5209   001B5A  4603               	rlncf	??_LCD_write_data^0,f,c
  5210   001B5C  4603               	rlncf	??_LCD_write_data^0,f,c
  5211   001B5E  508C               	movf	140,w,c	;volatile
  5212   001B60  1803               	xorwf	??_LCD_write_data^0,w,c
  5213   001B62  0BBF               	andlw	-65
  5214   001B64  1803               	xorwf	??_LCD_write_data^0,w,c
  5215   001B66  6E8C               	movwf	140,c	;volatile
  5216                           
  5217                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
  5218   001B68  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5219   001B6C  0E05               	movlw	5
  5220   001B6E  6E04               	movwf	(??_LCD_write_data+1)^0,c
  5221   001B70                     u1315:
  5222   001B70  90D8               	bcf	status,0,c
  5223   001B72  3203               	rrcf	??_LCD_write_data^0,f,c
  5224   001B74  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  5225   001B76  EFB8  F00D         	goto	u1315
  5226   001B7A  0E01               	movlw	1
  5227   001B7C  1603               	andwf	??_LCD_write_data^0,f,c
  5228   001B7E  3A03               	swapf	??_LCD_write_data^0,f,c
  5229   001B80  4603               	rlncf	??_LCD_write_data^0,f,c
  5230   001B82  508C               	movf	140,w,c	;volatile
  5231   001B84  1803               	xorwf	??_LCD_write_data^0,w,c
  5232   001B86  0BDF               	andlw	-33
  5233   001B88  1803               	xorwf	??_LCD_write_data^0,w,c
  5234   001B8A  6E8C               	movwf	140,c	;volatile
  5235                           
  5236                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
  5237   001B8C  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5238   001B90  3A03               	swapf	??_LCD_write_data^0,f,c
  5239   001B92  0E0F               	movlw	15
  5240   001B94  1603               	andwf	??_LCD_write_data^0,f,c
  5241   001B96  0E01               	movlw	1
  5242   001B98  1603               	andwf	??_LCD_write_data^0,f,c
  5243   001B9A  3A03               	swapf	??_LCD_write_data^0,f,c
  5244   001B9C  508C               	movf	140,w,c	;volatile
  5245   001B9E  1803               	xorwf	??_LCD_write_data^0,w,c
  5246   001BA0  0BEF               	andlw	-17
  5247   001BA2  1803               	xorwf	??_LCD_write_data^0,w,c
  5248   001BA4  6E8C               	movwf	140,c	;volatile
  5249   001BA6                     
  5250                           ;LCD.c: 85:     LCD_pulse_clock();
  5251   001BA6  EC4C  F013         	call	_LCD_pulse_clock	;wreg free
  5252   001BAA                     
  5253                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
  5254   001BAA  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5255   001BAE  90D8               	bcf	status,0,c
  5256   001BB0  3203               	rrcf	??_LCD_write_data^0,f,c
  5257   001BB2  90D8               	bcf	status,0,c
  5258   001BB4  3203               	rrcf	??_LCD_write_data^0,f,c
  5259   001BB6  90D8               	bcf	status,0,c
  5260   001BB8  3203               	rrcf	??_LCD_write_data^0,f,c
  5261   001BBA  0E01               	movlw	1
  5262   001BBC  1603               	andwf	??_LCD_write_data^0,f,c
  5263   001BBE  3203               	rrcf	??_LCD_write_data^0,f,c
  5264   001BC0  3203               	rrcf	??_LCD_write_data^0,f,c
  5265   001BC2  508C               	movf	140,w,c	;volatile
  5266   001BC4  1803               	xorwf	??_LCD_write_data^0,w,c
  5267   001BC6  0B7F               	andlw	-129
  5268   001BC8  1803               	xorwf	??_LCD_write_data^0,w,c
  5269   001BCA  6E8C               	movwf	140,c	;volatile
  5270   001BCC                     
  5271                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
  5272   001BCC  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5273   001BD0  90D8               	bcf	status,0,c
  5274   001BD2  3203               	rrcf	??_LCD_write_data^0,f,c
  5275   001BD4  90D8               	bcf	status,0,c
  5276   001BD6  3203               	rrcf	??_LCD_write_data^0,f,c
  5277   001BD8  0E01               	movlw	1
  5278   001BDA  1603               	andwf	??_LCD_write_data^0,f,c
  5279   001BDC  3A03               	swapf	??_LCD_write_data^0,f,c
  5280   001BDE  4603               	rlncf	??_LCD_write_data^0,f,c
  5281   001BE0  4603               	rlncf	??_LCD_write_data^0,f,c
  5282   001BE2  508C               	movf	140,w,c	;volatile
  5283   001BE4  1803               	xorwf	??_LCD_write_data^0,w,c
  5284   001BE6  0BBF               	andlw	-65
  5285   001BE8  1803               	xorwf	??_LCD_write_data^0,w,c
  5286   001BEA  6E8C               	movwf	140,c	;volatile
  5287   001BEC                     
  5288                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
  5289   001BEC  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5290   001BF0  90D8               	bcf	status,0,c
  5291   001BF2  3203               	rrcf	??_LCD_write_data^0,f,c
  5292   001BF4  0E01               	movlw	1
  5293   001BF6  1603               	andwf	??_LCD_write_data^0,f,c
  5294   001BF8  3A03               	swapf	??_LCD_write_data^0,f,c
  5295   001BFA  4603               	rlncf	??_LCD_write_data^0,f,c
  5296   001BFC  508C               	movf	140,w,c	;volatile
  5297   001BFE  1803               	xorwf	??_LCD_write_data^0,w,c
  5298   001C00  0BDF               	andlw	-33
  5299   001C02  1803               	xorwf	??_LCD_write_data^0,w,c
  5300   001C04  6E8C               	movwf	140,c	;volatile
  5301   001C06                     
  5302                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
  5303   001C06  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  5304   001C0A  0E01               	movlw	1
  5305   001C0C  1603               	andwf	??_LCD_write_data^0,f,c
  5306   001C0E  3A03               	swapf	??_LCD_write_data^0,f,c
  5307   001C10  508C               	movf	140,w,c	;volatile
  5308   001C12  1803               	xorwf	??_LCD_write_data^0,w,c
  5309   001C14  0BEF               	andlw	-17
  5310   001C16  1803               	xorwf	??_LCD_write_data^0,w,c
  5311   001C18  6E8C               	movwf	140,c	;volatile
  5312   001C1A                     
  5313                           ;LCD.c: 94:     LCD_pulse_clock();
  5314   001C1A  EC4C  F013         	call	_LCD_pulse_clock	;wreg free
  5315   001C1E  0012               	return		;funcret
  5316   001C20                     __end_of_LCD_write_data:
  5317                           	callstack 0
  5318                           
  5319 ;; *************** function _LCD_cursor_set *****************
  5320 ;; Defined at:
  5321 ;;		line 159 in file "LCD.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  row             1    wreg     unsigned char 
  5324 ;;  column          1    5[COMRAM] unsigned char 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  row             1    6[COMRAM] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0, cstack
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5336 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;Total ram usage:        2 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 3
  5343 ;; This function calls:
  5344 ;;		_LCD_write_command
  5345 ;; This function is called by:
  5346 ;;		_welcome_splash
  5347 ;;		_display_mm
  5348 ;;		_main_menu
  5349 ;;		_print_RPM
  5350 ;;		_print_Vbatt
  5351 ;;		_print_AI_Temp
  5352 ;;		_print_ELMVer
  5353 ;;		_print_SAEVer
  5354 ;;		_clear_diagnostic_codes
  5355 ;;		_LCD_add_character
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text30
  5360   002334                     __ptext30:
  5361                           	callstack 0
  5362   002334                     _LCD_cursor_set:
  5363                           	callstack 26
  5364                           
  5365                           ;incstack = 0
  5366                           ;LCD_cursor_set@row stored from wreg
  5367   002334  6E07               	movwf	LCD_cursor_set@row^0,c
  5368   002336                     
  5369                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
  5370   002336  0407               	decf	LCD_cursor_set@row^0,w,c
  5371   002338  A4D8               	btfss	status,2,c
  5372   00233A  EFA1  F011         	goto	u1341
  5373   00233E  EFA3  F011         	goto	u1340
  5374   002342                     u1341:
  5375   002342  EFA5  F011         	goto	l328
  5376   002346                     u1340:
  5377   002346  0E7F               	movlw	127
  5378   002348  2606               	addwf	LCD_cursor_set@column^0,f,c
  5379   00234A                     l328:
  5380                           
  5381                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
  5382   00234A  0E02               	movlw	2
  5383   00234C  1807               	xorwf	LCD_cursor_set@row^0,w,c
  5384   00234E  A4D8               	btfss	status,2,c
  5385   002350  EFAC  F011         	goto	u1351
  5386   002354  EFAE  F011         	goto	u1350
  5387   002358                     u1351:
  5388   002358  EFB0  F011         	goto	l329
  5389   00235C                     u1350:
  5390   00235C  0EBF               	movlw	191
  5391   00235E  2606               	addwf	LCD_cursor_set@column^0,f,c
  5392   002360                     l329:
  5393                           
  5394                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
  5395   002360  0E03               	movlw	3
  5396   002362  1807               	xorwf	LCD_cursor_set@row^0,w,c
  5397   002364  A4D8               	btfss	status,2,c
  5398   002366  EFB7  F011         	goto	u1361
  5399   00236A  EFB9  F011         	goto	u1360
  5400   00236E                     u1361:
  5401   00236E  EFBB  F011         	goto	l330
  5402   002372                     u1360:
  5403   002372  0E93               	movlw	147
  5404   002374  2606               	addwf	LCD_cursor_set@column^0,f,c
  5405   002376                     l330:
  5406                           
  5407                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
  5408   002376  0E04               	movlw	4
  5409   002378  1807               	xorwf	LCD_cursor_set@row^0,w,c
  5410   00237A  A4D8               	btfss	status,2,c
  5411   00237C  EFC2  F011         	goto	u1371
  5412   002380  EFC4  F011         	goto	u1370
  5413   002384                     u1371:
  5414   002384  EFC6  F011         	goto	l2316
  5415   002388                     u1370:
  5416   002388  0ED3               	movlw	211
  5417   00238A  2606               	addwf	LCD_cursor_set@column^0,f,c
  5418   00238C                     l2316:
  5419                           
  5420                           ;LCD.c: 168:    LCD_write_command(column);
  5421   00238C  5006               	movf	LCD_cursor_set@column^0,w,c
  5422   00238E  EC10  F00E         	call	_LCD_write_command
  5423   002392  0012               	return		;funcret
  5424   002394                     __end_of_LCD_cursor_set:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _UART1_SendString *****************
  5428 ;; Defined at:
  5429 ;;		line 173 in file "OBCII_PIC18F46K22.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  string          1    3[COMRAM] PTR unsigned char 
  5432 ;;		 -> STR_29(4), STR_25(6), STR_23(5), STR_18(6), 
  5433 ;;		 -> STR_14(6), STR_10(6), STR_7(6), STR_6(5), 
  5434 ;;		 -> STR_4(5), STR_1(6), 
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;  i               2    5[COMRAM] unsigned int 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  1    wreg      void 
  5439 ;; Registers used:
  5440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5446 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;Total ram usage:        4 bytes
  5451 ;; Hardware stack levels used: 1
  5452 ;; Hardware stack levels required when called: 2
  5453 ;; This function calls:
  5454 ;;		_UART1_SendChar
  5455 ;; This function is called by:
  5456 ;;		_main
  5457 ;;		_welcome_splash
  5458 ;;		_print_RPM
  5459 ;;		_print_Vbatt
  5460 ;;		_print_AI_Temp
  5461 ;;		_print_ELMVer
  5462 ;;		_print_SAEVer
  5463 ;;		_clear_diagnostic_codes
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text31
  5468   002394                     __ptext31:
  5469                           	callstack 0
  5470   002394                     _UART1_SendString:
  5471                           	callstack 27
  5472   002394                     
  5473                           ;OBCII_PIC18F46K22.c: 174:     for (unsigned int i = 0; string[i] != '\0'; i++){
  5474   002394  0E00               	movlw	0
  5475   002396  6E07               	movwf	(UART1_SendString@i+1)^0,c
  5476   002398  0E00               	movlw	0
  5477   00239A  6E06               	movwf	UART1_SendString@i^0,c
  5478   00239C  EFDD  F011         	goto	l2304
  5479   0023A0                     l2300:
  5480                           
  5481                           ;OBCII_PIC18F46K22.c: 175:         UART1_SendChar(string[i]);
  5482   0023A0  5004               	movf	UART1_SendString@string^0,w,c
  5483   0023A2  2406               	addwf	UART1_SendString@i^0,w,c
  5484   0023A4  6E05               	movwf	??_UART1_SendString^0,c
  5485   0023A6  C005  FFF6         	movff	??_UART1_SendString,tblptrl
  5486   0023AA                     	if	1	;There is more than 1 active tblptr byte
  5487   0023AA  0E10               	movlw	high __smallconst
  5488   0023AC  6EF7               	movwf	tblptrh,c
  5489   0023AE                     	endif
  5490   0023AE                     	if	0	;tblptru may be non-zero
  5491   0023AE                     	endif
  5492   0023AE                     	if	0	;tblptru may be non-zero
  5493   0023AE                     	endif
  5494   0023AE  0008               	tblrd		*
  5495   0023B0  50F5               	movf	tablat,w,c
  5496   0023B2  EC28  F013         	call	_UART1_SendChar
  5497   0023B6                     
  5498                           ;OBCII_PIC18F46K22.c: 176:     }
  5499   0023B6  4A06               	infsnz	UART1_SendString@i^0,f,c
  5500   0023B8  2A07               	incf	(UART1_SendString@i+1)^0,f,c
  5501   0023BA                     l2304:
  5502   0023BA  5004               	movf	UART1_SendString@string^0,w,c
  5503   0023BC  2406               	addwf	UART1_SendString@i^0,w,c
  5504   0023BE  6E05               	movwf	??_UART1_SendString^0,c
  5505   0023C0  C005  FFF6         	movff	??_UART1_SendString,tblptrl
  5506   0023C4                     	if	1	;There is more than 1 active tblptr byte
  5507   0023C4  0E10               	movlw	high __smallconst
  5508   0023C6  6EF7               	movwf	tblptrh,c
  5509   0023C8                     	endif
  5510   0023C8                     	if	0	;tblptru may be non-zero
  5511   0023C8                     	endif
  5512   0023C8                     	if	0	;tblptru may be non-zero
  5513   0023C8                     	endif
  5514   0023C8  0008               	tblrd		*
  5515   0023CA  50F5               	movf	tablat,w,c
  5516   0023CC  0900               	iorlw	0
  5517   0023CE  A4D8               	btfss	status,2,c
  5518   0023D0  EFEC  F011         	goto	u1331
  5519   0023D4  EFEE  F011         	goto	u1330
  5520   0023D8                     u1331:
  5521   0023D8  EFD0  F011         	goto	l2300
  5522   0023DC                     u1330:
  5523   0023DC  0012               	return		;funcret
  5524   0023DE                     __end_of_UART1_SendString:
  5525                           	callstack 0
  5526                           
  5527 ;; *************** function _UART1_SendChar *****************
  5528 ;; Defined at:
  5529 ;;		line 179 in file "OBCII_PIC18F46K22.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  c               1    wreg     unsigned char 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;  c               1    2[COMRAM] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		wreg
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;Total ram usage:        1 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; Hardware stack levels required when called: 1
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_UART1_SendString
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557                           	psect	text32
  5558   002650                     __ptext32:
  5559                           	callstack 0
  5560   002650                     _UART1_SendChar:
  5561                           	callstack 27
  5562                           
  5563                           ;incstack = 0
  5564                           ;UART1_SendChar@c stored from wreg
  5565   002650  6E03               	movwf	UART1_SendChar@c^0,c
  5566   002652                     l165:
  5567   002652  A2AC               	btfss	172,1,c	;volatile
  5568   002654  EF2E  F013         	goto	u1251
  5569   002658  EF30  F013         	goto	u1250
  5570   00265C                     u1251:
  5571   00265C  EF29  F013         	goto	l165
  5572   002660                     u1250:
  5573   002660                     
  5574                           ;OBCII_PIC18F46K22.c: 181:         TXREG = c;
  5575   002660  C003  FFAD         	movff	UART1_SendChar@c,4013	;volatile
  5576   002664  0012               	return		;funcret
  5577   002666                     __end_of_UART1_SendChar:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function _LCD_configure_cursor_blink *****************
  5581 ;; Defined at:
  5582 ;;		line 231 in file "LCD.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  state           1    wreg     unsigned char 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  state           1    5[COMRAM] unsigned char 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;Total ram usage:        1 bytes
  5601 ;; Hardware stack levels used: 1
  5602 ;; Hardware stack levels required when called: 3
  5603 ;; This function calls:
  5604 ;;		_LCD_write_command
  5605 ;; This function is called by:
  5606 ;;		_main_menu
  5607 ;;		_clear_diagnostic_codes
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text33
  5612   002612                     __ptext33:
  5613                           	callstack 0
  5614   002612                     _LCD_configure_cursor_blink:
  5615                           	callstack 25
  5616                           
  5617                           ;incstack = 0
  5618                           ;LCD_configure_cursor_blink@state stored from wreg
  5619   002612  6E06               	movwf	LCD_configure_cursor_blink@state^0,c
  5620   002614                     
  5621                           ;LCD.c: 234:     if(state){
  5622   002614  5006               	movf	LCD_configure_cursor_blink@state^0,w,c
  5623   002616  B4D8               	btfsc	status,2,c
  5624   002618  EF10  F013         	goto	u1501
  5625   00261C  EF12  F013         	goto	u1500
  5626   002620                     u1501:
  5627   002620  EF15  F013         	goto	l2402
  5628   002624                     u1500:
  5629   002624                     
  5630                           ;LCD.c: 235:         LCD_display_control |= 0b00000001;
  5631   002624  805B               	bsf	_LCD_display_control^0,0,c
  5632                           
  5633                           ;LCD.c: 236:     }
  5634   002626  EF16  F013         	goto	l2404
  5635   00262A                     l2402:
  5636                           
  5637                           ;LCD.c: 238:         LCD_display_control &= 0b11111110;
  5638   00262A  905B               	bcf	_LCD_display_control^0,0,c
  5639   00262C                     l2404:
  5640                           
  5641                           ;LCD.c: 242:     LCD_write_command(LCD_display_control);
  5642   00262C  505B               	movf	_LCD_display_control^0,w,c
  5643   00262E  EC10  F00E         	call	_LCD_write_command
  5644   002632  0012               	return		;funcret
  5645   002634                     __end_of_LCD_configure_cursor_blink:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function _input_init *****************
  5649 ;; Defined at:
  5650 ;;		line 92 in file "OBCII_PIC18F46K22.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		None
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;Total ram usage:        0 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 1
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_main
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text34
  5679   002688                     __ptext34:
  5680                           	callstack 0
  5681   002688                     _input_init:
  5682                           	callstack 29
  5683   002688                     
  5684                           ;OBCII_PIC18F46K22.c: 95:     TRISBbits.TRISB4 = 1;
  5685   002688  8893               	bsf	147,4,c	;volatile
  5686                           
  5687                           ;OBCII_PIC18F46K22.c: 96:     ANSELBbits.ANSB4 = 0;
  5688   00268A  010F               	movlb	15	; () banked
  5689   00268C  9939               	bcf	57,4,b	;volatile
  5690                           
  5691                           ;OBCII_PIC18F46K22.c: 98:     TRISCbits.TRISC5 = 1;
  5692   00268E  8A94               	bsf	148,5,c	;volatile
  5693                           
  5694                           ;OBCII_PIC18F46K22.c: 99:     ANSELCbits.ANSC5 = 0;
  5695   002690  9B3A               	bcf	58,5,b	;volatile
  5696                           
  5697                           ;OBCII_PIC18F46K22.c: 101:     TRISAbits.TRISA0 = 1;
  5698   002692  8092               	bsf	146,0,c	;volatile
  5699                           
  5700                           ;OBCII_PIC18F46K22.c: 102:     ANSELAbits.ANSA0 = 1;
  5701   002694  8138               	bsf	56,0,b	;volatile
  5702   002696                     
  5703                           ; BSR set to: 15
  5704   002696  0012               	return		;funcret
  5705   002698                     __end_of_input_init:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function _UART1_Init *****************
  5709 ;; Defined at:
  5710 ;;		line 114 in file "OBCII_PIC18F46K22.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		wreg, status,2
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used: 1
  5730 ;; Hardware stack levels required when called: 1
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_main
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text35
  5739   0025C0                     __ptext35:
  5740                           	callstack 0
  5741   0025C0                     _UART1_Init:
  5742                           	callstack 29
  5743   0025C0                     
  5744                           ;OBCII_PIC18F46K22.c: 115:     ANSELC = 0;
  5745   0025C0  010F               	movlb	15	; () banked
  5746   0025C2  6B3A               	clrf	58,b	;volatile
  5747                           
  5748                           ;OBCII_PIC18F46K22.c: 118:     TRISCbits.TRISC6 = 0;
  5749   0025C4  9C94               	bcf	148,6,c	;volatile
  5750                           
  5751                           ;OBCII_PIC18F46K22.c: 119:     TRISCbits.TRISC7 = 1;
  5752   0025C6  8E94               	bsf	148,7,c	;volatile
  5753                           
  5754                           ;OBCII_PIC18F46K22.c: 123:     TXSTA1bits.TXEN = 1;
  5755   0025C8  8AAC               	bsf	172,5,c	;volatile
  5756                           
  5757                           ;OBCII_PIC18F46K22.c: 124:     TXSTA1bits.TX9 = 0;
  5758   0025CA  9CAC               	bcf	172,6,c	;volatile
  5759                           
  5760                           ;OBCII_PIC18F46K22.c: 125:     TXSTA1bits.SYNC = 0;
  5761   0025CC  98AC               	bcf	172,4,c	;volatile
  5762                           
  5763                           ;OBCII_PIC18F46K22.c: 128:     TXSTA1bits.BRGH = 1;
  5764   0025CE  84AC               	bsf	172,2,c	;volatile
  5765                           
  5766                           ;OBCII_PIC18F46K22.c: 129:     BAUDCON1bits.BRG16 = 1;
  5767   0025D0  86B8               	bsf	184,3,c	;volatile
  5768   0025D2                     
  5769                           ; BSR set to: 15
  5770                           ;OBCII_PIC18F46K22.c: 132:     SPBRGH1 = 0b00000001;
  5771   0025D2  0E01               	movlw	1
  5772   0025D4  6EB0               	movwf	176,c	;volatile
  5773                           
  5774                           ;OBCII_PIC18F46K22.c: 133:     SPBRG1 = 0b10100000;
  5775   0025D6  0EA0               	movlw	160
  5776   0025D8  6EAF               	movwf	175,c	;volatile
  5777   0025DA                     
  5778                           ; BSR set to: 15
  5779                           ;OBCII_PIC18F46K22.c: 136:     BAUDCON1bits.CKTXP = 0;
  5780   0025DA  98B8               	bcf	184,4,c	;volatile
  5781   0025DC                     
  5782                           ; BSR set to: 15
  5783                           ;OBCII_PIC18F46K22.c: 137:     BAUDCON1bits.DTRXP = 0;
  5784   0025DC  9AB8               	bcf	184,5,c	;volatile
  5785   0025DE                     
  5786                           ; BSR set to: 15
  5787                           ;OBCII_PIC18F46K22.c: 140:     RCSTA1bits.SPEN = 1;
  5788   0025DE  8EAB               	bsf	171,7,c	;volatile
  5789   0025E0                     
  5790                           ; BSR set to: 15
  5791                           ;OBCII_PIC18F46K22.c: 141:     RCSTA1bits.CREN = 1;
  5792   0025E0  88AB               	bsf	171,4,c	;volatile
  5793   0025E2                     
  5794                           ; BSR set to: 15
  5795                           ;OBCII_PIC18F46K22.c: 142:     RCSTA1bits.RX9 = 0;
  5796   0025E2  9CAB               	bcf	171,6,c	;volatile
  5797   0025E4                     
  5798                           ; BSR set to: 15
  5799                           ;OBCII_PIC18F46K22.c: 145:     PIE1bits.RC1IE = 1;
  5800   0025E4  8A9D               	bsf	157,5,c	;volatile
  5801   0025E6                     
  5802                           ; BSR set to: 15
  5803                           ;OBCII_PIC18F46K22.c: 146:     INTCONbits.PEIE = 1;
  5804   0025E6  8CF2               	bsf	242,6,c	;volatile
  5805   0025E8                     
  5806                           ; BSR set to: 15
  5807                           ;OBCII_PIC18F46K22.c: 147:     INTCONbits.GIE = 1;
  5808   0025E8  8EF2               	bsf	242,7,c	;volatile
  5809   0025EA                     
  5810                           ; BSR set to: 15
  5811   0025EA  0012               	return		;funcret
  5812   0025EC                     __end_of_UART1_Init:
  5813                           	callstack 0
  5814                           
  5815 ;; *************** function _LCD_init *****************
  5816 ;; Defined at:
  5817 ;;		line 106 in file "LCD.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;Total ram usage:        2 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 4
  5838 ;; This function calls:
  5839 ;;		_LCD_clear
  5840 ;;		_LCD_pulse_clock
  5841 ;;		_LCD_write_command
  5842 ;; This function is called by:
  5843 ;;		_main
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text36
  5848   00209A                     __ptext36:
  5849                           	callstack 0
  5850   00209A                     _LCD_init:
  5851                           	callstack 26
  5852   00209A                     
  5853                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
  5854   00209A  9495               	bcf	149,2,c	;volatile
  5855   00209C  948C               	bcf	140,2,c	;volatile
  5856                           
  5857                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
  5858   00209E  9695               	bcf	149,3,c	;volatile
  5859   0020A0  968C               	bcf	140,3,c	;volatile
  5860                           
  5861                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
  5862   0020A2  9895               	bcf	149,4,c	;volatile
  5863   0020A4  988C               	bcf	140,4,c	;volatile
  5864                           
  5865                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
  5866   0020A6  9A95               	bcf	149,5,c	;volatile
  5867   0020A8  9A8C               	bcf	140,5,c	;volatile
  5868                           
  5869                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
  5870   0020AA  9C95               	bcf	149,6,c	;volatile
  5871   0020AC  9C8C               	bcf	140,6,c	;volatile
  5872                           
  5873                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
  5874   0020AE  9E95               	bcf	149,7,c	;volatile
  5875   0020B0  9E8C               	bcf	140,7,c	;volatile
  5876   0020B2                     
  5877                           ;LCD.c: 121:     _delay((unsigned long)((60)*(16000000/4000.0)));
  5878   0020B2  0E02               	movlw	2
  5879   0020B4  6E08               	movwf	(??_LCD_init+1)^0,c
  5880   0020B6  0E38               	movlw	56
  5881   0020B8  6E07               	movwf	??_LCD_init^0,c
  5882   0020BA  0EAD               	movlw	173
  5883   0020BC                     u2347:
  5884   0020BC  2EE8               	decfsz	wreg,f,c
  5885   0020BE  D7FE               	bra	u2347
  5886   0020C0  2E07               	decfsz	??_LCD_init^0,f,c
  5887   0020C2  D7FC               	bra	u2347
  5888   0020C4  2E08               	decfsz	(??_LCD_init+1)^0,f,c
  5889   0020C6  D7FA               	bra	u2347
  5890   0020C8  0000               	nop	
  5891   0020CA                     
  5892                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  5893   0020CA  9E8C               	bcf	140,7,c	;volatile
  5894   0020CC  9C8C               	bcf	140,6,c	;volatile
  5895   0020CE  8A8C               	bsf	140,5,c	;volatile
  5896   0020D0  888C               	bsf	140,4,c	;volatile
  5897   0020D2                     
  5898                           ;LCD.c: 127:     LCD_pulse_clock();
  5899   0020D2  EC4C  F013         	call	_LCD_pulse_clock	;wreg free
  5900   0020D6                     
  5901                           ;LCD.c: 130:     _delay((unsigned long)((6)*(16000000/4000.0)));
  5902   0020D6  0E20               	movlw	32
  5903   0020D8  6E07               	movwf	??_LCD_init^0,c
  5904   0020DA  0E2A               	movlw	42
  5905   0020DC                     u2357:
  5906   0020DC  2EE8               	decfsz	wreg,f,c
  5907   0020DE  D7FE               	bra	u2357
  5908   0020E0  2E07               	decfsz	??_LCD_init^0,f,c
  5909   0020E2  D7FC               	bra	u2357
  5910                           
  5911                           ;LCD.c: 133:     LCD_pulse_clock();
  5912   0020E4  EC4C  F013         	call	_LCD_pulse_clock	;wreg free
  5913   0020E8                     
  5914                           ;LCD.c: 136:     _delay((unsigned long)((150)*(16000000/4000000.0)));
  5915   0020E8  0EC8               	movlw	200
  5916   0020EA                     u2367:
  5917   0020EA  2EE8               	decfsz	wreg,f,c
  5918   0020EC  D7FE               	bra	u2367
  5919   0020EE                     
  5920                           ;LCD.c: 139:     LCD_pulse_clock();
  5921   0020EE  EC4C  F013         	call	_LCD_pulse_clock	;wreg free
  5922   0020F2                     
  5923                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  5924   0020F2  9E8C               	bcf	140,7,c	;volatile
  5925   0020F4  9C8C               	bcf	140,6,c	;volatile
  5926   0020F6  8A8C               	bsf	140,5,c	;volatile
  5927   0020F8  988C               	bcf	140,4,c	;volatile
  5928   0020FA                     
  5929                           ;LCD.c: 145:     LCD_pulse_clock();
  5930   0020FA  EC4C  F013         	call	_LCD_pulse_clock	;wreg free
  5931   0020FE                     
  5932                           ;LCD.c: 148:     LCD_write_command(0x28);
  5933   0020FE  0E28               	movlw	40
  5934   002100  EC10  F00E         	call	_LCD_write_command
  5935   002104                     
  5936                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
  5937   002104  505B               	movf	_LCD_display_control^0,w,c
  5938   002106  EC10  F00E         	call	_LCD_write_command
  5939   00210A                     
  5940                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
  5941   00210A  505A               	movf	_LCD_entry_mode^0,w,c
  5942   00210C  EC10  F00E         	call	_LCD_write_command
  5943   002110                     
  5944                           ;LCD.c: 151:     LCD_clear();
  5945   002110  EC1A  F013         	call	_LCD_clear	;wreg free
  5946   002114  0012               	return		;funcret
  5947   002116                     __end_of_LCD_init:
  5948                           	callstack 0
  5949                           
  5950 ;; *************** function _LCD_clear *****************
  5951 ;; Defined at:
  5952 ;;		line 248 in file "LCD.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;		None
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;Total ram usage:        1 bytes
  5971 ;; Hardware stack levels used: 1
  5972 ;; Hardware stack levels required when called: 3
  5973 ;; This function calls:
  5974 ;;		_LCD_write_command
  5975 ;; This function is called by:
  5976 ;;		_main
  5977 ;;		_main_menu
  5978 ;;		_clear_diagnostic_codes
  5979 ;;		_LCD_init
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text37
  5984   002634                     __ptext37:
  5985                           	callstack 0
  5986   002634                     _LCD_clear:
  5987                           	callstack 25
  5988   002634                     
  5989                           ;LCD.c: 251:     LCD_write_command(0x01);
  5990   002634  0E01               	movlw	1
  5991   002636  EC10  F00E         	call	_LCD_write_command
  5992   00263A                     
  5993                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(16000000/4000000.0)));
  5994   00263A  0E0C               	movlw	12
  5995   00263C  6E06               	movwf	??_LCD_clear^0,c
  5996   00263E  0EA2               	movlw	162
  5997   002640                     u2377:
  5998   002640  2EE8               	decfsz	wreg,f,c
  5999   002642  D7FE               	bra	u2377
  6000   002644  2E06               	decfsz	??_LCD_clear^0,f,c
  6001   002646  D7FC               	bra	u2377
  6002   002648                     
  6003                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
  6004   002648  505A               	movf	_LCD_entry_mode^0,w,c
  6005   00264A  EC10  F00E         	call	_LCD_write_command
  6006   00264E  0012               	return		;funcret
  6007   002650                     __end_of_LCD_clear:
  6008                           	callstack 0
  6009                           
  6010 ;; *************** function _LCD_write_command *****************
  6011 ;; Defined at:
  6012 ;;		line 46 in file "LCD.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  command         1    wreg     unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  command         1    4[COMRAM] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6029 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;Total ram usage:        3 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 2
  6033 ;; This function calls:
  6034 ;;		_LCD_pulse_clock
  6035 ;; This function is called by:
  6036 ;;		_LCD_init
  6037 ;;		_LCD_cursor_set
  6038 ;;		_LCD_configure_cursor_blink
  6039 ;;		_LCD_clear
  6040 ;;		_LCD_cursor_increment
  6041 ;;		_LCD_cursor_decrement
  6042 ;;		_LCD_configure_lcd_display
  6043 ;;		_LCD_configure_cursor_display
  6044 ;;		_LCD_shift_reset
  6045 ;;		_LCD_shift_left
  6046 ;;		_LCD_shift_right
  6047 ;;		_LCD_configure_entry_id
  6048 ;;		_LCD_configure_entry_shift
  6049 ;;		_LCD_add_character
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text38
  6054   001C20                     __ptext38:
  6055                           	callstack 0
  6056   001C20                     _LCD_write_command:
  6057                           	callstack 26
  6058                           
  6059                           ;incstack = 0
  6060                           ;LCD_write_command@command stored from wreg
  6061   001C20  6E05               	movwf	LCD_write_command@command^0,c
  6062   001C22                     
  6063                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
  6064   001C22  948C               	bcf	140,2,c	;volatile
  6065   001C24                     
  6066                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
  6067   001C24  6A03               	clrf	??_LCD_write_command^0,c
  6068   001C26  AE05               	btfss	LCD_write_command@command^0,7,c
  6069   001C28  D001               	bra	u1265
  6070   001C2A  2A03               	incf	??_LCD_write_command^0,f,c
  6071   001C2C                     u1265:
  6072   001C2C  0E01               	movlw	1
  6073   001C2E  1603               	andwf	??_LCD_write_command^0,f,c
  6074   001C30  3203               	rrcf	??_LCD_write_command^0,f,c
  6075   001C32  3203               	rrcf	??_LCD_write_command^0,f,c
  6076   001C34  508C               	movf	140,w,c	;volatile
  6077   001C36  1803               	xorwf	??_LCD_write_command^0,w,c
  6078   001C38  0B7F               	andlw	-129
  6079   001C3A  1803               	xorwf	??_LCD_write_command^0,w,c
  6080   001C3C  6E8C               	movwf	140,c	;volatile
  6081                           
  6082                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
  6083   001C3E  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6084   001C42  0E06               	movlw	6
  6085   001C44  6E04               	movwf	(??_LCD_write_command+1)^0,c
  6086   001C46                     u1275:
  6087   001C46  90D8               	bcf	status,0,c
  6088   001C48  3203               	rrcf	??_LCD_write_command^0,f,c
  6089   001C4A  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
  6090   001C4C  EF23  F00E         	goto	u1275
  6091   001C50  0E01               	movlw	1
  6092   001C52  1603               	andwf	??_LCD_write_command^0,f,c
  6093   001C54  3A03               	swapf	??_LCD_write_command^0,f,c
  6094   001C56  4603               	rlncf	??_LCD_write_command^0,f,c
  6095   001C58  4603               	rlncf	??_LCD_write_command^0,f,c
  6096   001C5A  508C               	movf	140,w,c	;volatile
  6097   001C5C  1803               	xorwf	??_LCD_write_command^0,w,c
  6098   001C5E  0BBF               	andlw	-65
  6099   001C60  1803               	xorwf	??_LCD_write_command^0,w,c
  6100   001C62  6E8C               	movwf	140,c	;volatile
  6101                           
  6102                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
  6103   001C64  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6104   001C68  0E05               	movlw	5
  6105   001C6A  6E04               	movwf	(??_LCD_write_command+1)^0,c
  6106   001C6C                     u1285:
  6107   001C6C  90D8               	bcf	status,0,c
  6108   001C6E  3203               	rrcf	??_LCD_write_command^0,f,c
  6109   001C70  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
  6110   001C72  EF36  F00E         	goto	u1285
  6111   001C76  0E01               	movlw	1
  6112   001C78  1603               	andwf	??_LCD_write_command^0,f,c
  6113   001C7A  3A03               	swapf	??_LCD_write_command^0,f,c
  6114   001C7C  4603               	rlncf	??_LCD_write_command^0,f,c
  6115   001C7E  508C               	movf	140,w,c	;volatile
  6116   001C80  1803               	xorwf	??_LCD_write_command^0,w,c
  6117   001C82  0BDF               	andlw	-33
  6118   001C84  1803               	xorwf	??_LCD_write_command^0,w,c
  6119   001C86  6E8C               	movwf	140,c	;volatile
  6120                           
  6121                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
  6122   001C88  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6123   001C8C  3A03               	swapf	??_LCD_write_command^0,f,c
  6124   001C8E  0E0F               	movlw	15
  6125   001C90  1603               	andwf	??_LCD_write_command^0,f,c
  6126   001C92  0E01               	movlw	1
  6127   001C94  1603               	andwf	??_LCD_write_command^0,f,c
  6128   001C96  3A03               	swapf	??_LCD_write_command^0,f,c
  6129   001C98  508C               	movf	140,w,c	;volatile
  6130   001C9A  1803               	xorwf	??_LCD_write_command^0,w,c
  6131   001C9C  0BEF               	andlw	-17
  6132   001C9E  1803               	xorwf	??_LCD_write_command^0,w,c
  6133   001CA0  6E8C               	movwf	140,c	;volatile
  6134   001CA2                     
  6135                           ;LCD.c: 57:     LCD_pulse_clock();
  6136   001CA2  EC4C  F013         	call	_LCD_pulse_clock	;wreg free
  6137   001CA6                     
  6138                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
  6139   001CA6  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6140   001CAA  90D8               	bcf	status,0,c
  6141   001CAC  3203               	rrcf	??_LCD_write_command^0,f,c
  6142   001CAE  90D8               	bcf	status,0,c
  6143   001CB0  3203               	rrcf	??_LCD_write_command^0,f,c
  6144   001CB2  90D8               	bcf	status,0,c
  6145   001CB4  3203               	rrcf	??_LCD_write_command^0,f,c
  6146   001CB6  0E01               	movlw	1
  6147   001CB8  1603               	andwf	??_LCD_write_command^0,f,c
  6148   001CBA  3203               	rrcf	??_LCD_write_command^0,f,c
  6149   001CBC  3203               	rrcf	??_LCD_write_command^0,f,c
  6150   001CBE  508C               	movf	140,w,c	;volatile
  6151   001CC0  1803               	xorwf	??_LCD_write_command^0,w,c
  6152   001CC2  0B7F               	andlw	-129
  6153   001CC4  1803               	xorwf	??_LCD_write_command^0,w,c
  6154   001CC6  6E8C               	movwf	140,c	;volatile
  6155   001CC8                     
  6156                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
  6157   001CC8  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6158   001CCC  90D8               	bcf	status,0,c
  6159   001CCE  3203               	rrcf	??_LCD_write_command^0,f,c
  6160   001CD0  90D8               	bcf	status,0,c
  6161   001CD2  3203               	rrcf	??_LCD_write_command^0,f,c
  6162   001CD4  0E01               	movlw	1
  6163   001CD6  1603               	andwf	??_LCD_write_command^0,f,c
  6164   001CD8  3A03               	swapf	??_LCD_write_command^0,f,c
  6165   001CDA  4603               	rlncf	??_LCD_write_command^0,f,c
  6166   001CDC  4603               	rlncf	??_LCD_write_command^0,f,c
  6167   001CDE  508C               	movf	140,w,c	;volatile
  6168   001CE0  1803               	xorwf	??_LCD_write_command^0,w,c
  6169   001CE2  0BBF               	andlw	-65
  6170   001CE4  1803               	xorwf	??_LCD_write_command^0,w,c
  6171   001CE6  6E8C               	movwf	140,c	;volatile
  6172   001CE8                     
  6173                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
  6174   001CE8  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6175   001CEC  90D8               	bcf	status,0,c
  6176   001CEE  3203               	rrcf	??_LCD_write_command^0,f,c
  6177   001CF0  0E01               	movlw	1
  6178   001CF2  1603               	andwf	??_LCD_write_command^0,f,c
  6179   001CF4  3A03               	swapf	??_LCD_write_command^0,f,c
  6180   001CF6  4603               	rlncf	??_LCD_write_command^0,f,c
  6181   001CF8  508C               	movf	140,w,c	;volatile
  6182   001CFA  1803               	xorwf	??_LCD_write_command^0,w,c
  6183   001CFC  0BDF               	andlw	-33
  6184   001CFE  1803               	xorwf	??_LCD_write_command^0,w,c
  6185   001D00  6E8C               	movwf	140,c	;volatile
  6186   001D02                     
  6187                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
  6188   001D02  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  6189   001D06  0E01               	movlw	1
  6190   001D08  1603               	andwf	??_LCD_write_command^0,f,c
  6191   001D0A  3A03               	swapf	??_LCD_write_command^0,f,c
  6192   001D0C  508C               	movf	140,w,c	;volatile
  6193   001D0E  1803               	xorwf	??_LCD_write_command^0,w,c
  6194   001D10  0BEF               	andlw	-17
  6195   001D12  1803               	xorwf	??_LCD_write_command^0,w,c
  6196   001D14  6E8C               	movwf	140,c	;volatile
  6197   001D16                     
  6198                           ;LCD.c: 66:     LCD_pulse_clock();
  6199   001D16  EC4C  F013         	call	_LCD_pulse_clock	;wreg free
  6200   001D1A  0012               	return		;funcret
  6201   001D1C                     __end_of_LCD_write_command:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function _LCD_pulse_clock *****************
  6205 ;; Defined at:
  6206 ;;		line 34 in file "LCD.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;Total ram usage:        0 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_LCD_write_command
  6231 ;;		_LCD_write_data
  6232 ;;		_LCD_init
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text39
  6237   002698                     __ptext39:
  6238                           	callstack 0
  6239   002698                     _LCD_pulse_clock:
  6240                           	callstack 26
  6241   002698                     
  6242                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
  6243   002698  868C               	bsf	140,3,c	;volatile
  6244   00269A                     
  6245                           ;LCD.c: 37:   _delay((unsigned long)((60)*(16000000/4000000.0)));
  6246   00269A  0E50               	movlw	80
  6247   00269C                     u2387:
  6248   00269C  2EE8               	decfsz	wreg,f,c
  6249   00269E  D7FE               	bra	u2387
  6250   0026A0                     
  6251                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
  6252   0026A0  968C               	bcf	140,3,c	;volatile
  6253   0026A2  0012               	return		;funcret
  6254   0026A4                     __end_of_LCD_pulse_clock:
  6255                           	callstack 0
  6256                           
  6257 ;; *************** function _ADC_init *****************
  6258 ;; Defined at:
  6259 ;;		line 106 in file "OBCII_PIC18F46K22.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;		None
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      void 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;Total ram usage:        0 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 1
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_main
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text40
  6288   0026A4                     __ptext40:
  6289                           	callstack 0
  6290   0026A4                     _ADC_init:
  6291                           	callstack 29
  6292   0026A4                     
  6293                           ;OBCII_PIC18F46K22.c: 108:     ADCON0 = 0b00000001;
  6294   0026A4  0E01               	movlw	1
  6295   0026A6  6EC2               	movwf	194,c	;volatile
  6296   0026A8                     
  6297                           ;OBCII_PIC18F46K22.c: 109:     ADCON1 = 0b00000000;
  6298   0026A8  6AC1               	clrf	193,c	;volatile
  6299                           
  6300                           ;OBCII_PIC18F46K22.c: 110:     ADCON2 = 0b10101010;
  6301   0026AA  0EAA               	movlw	170
  6302   0026AC  6EC0               	movwf	192,c	;volatile
  6303   0026AE  0012               	return		;funcret
  6304   0026B0                     __end_of_ADC_init:
  6305                           	callstack 0
  6306                           
  6307 ;; *************** function _UART_ISR *****************
  6308 ;; Defined at:
  6309 ;;		line 150 in file "OBCII_PIC18F46K22.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;		None
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      void 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;Total ram usage:        2 bytes
  6328 ;; Hardware stack levels used: 1
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		Interrupt level 2
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	intcode
  6337   000008                     __pintcode:
  6338                           	callstack 0
  6339   000008                     _UART_ISR:
  6340                           	callstack 22
  6341                           
  6342                           ;incstack = 0
  6343   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6344   00000A  CFD9 F001          	movff	fsr2l,??_UART_ISR
  6345   00000E  CFDA F002          	movff	fsr2h,??_UART_ISR+1
  6346   000012                     
  6347                           ;OBCII_PIC18F46K22.c: 151:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
  6348   000012  AA9D               	btfss	157,5,c	;volatile
  6349   000014  EF0E  F000         	goto	i2u202_41
  6350   000018  EF10  F000         	goto	i2u202_40
  6351   00001C                     i2u202_41:
  6352   00001C  EF63  F000         	goto	i2l156
  6353   000020                     i2u202_40:
  6354   000020  AA9E               	btfss	158,5,c	;volatile
  6355   000022  EF15  F000         	goto	i2u203_41
  6356   000026  EF17  F000         	goto	i2u203_40
  6357   00002A                     i2u203_41:
  6358   00002A  EF63  F000         	goto	i2l156
  6359   00002E                     i2u203_40:
  6360   00002E                     
  6361                           ;OBCII_PIC18F46K22.c: 152:         RX_char = RCREG1;
  6362   00002E  CFAE F046          	movff	4014,_RX_char	;volatile
  6363                           
  6364                           ;OBCII_PIC18F46K22.c: 155:         if (RCSTAbits.OERR) {
  6365   000032  A2AB               	btfss	171,1,c	;volatile
  6366   000034  EF1E  F000         	goto	i2u204_41
  6367   000038  EF20  F000         	goto	i2u204_40
  6368   00003C                     i2u204_41:
  6369   00003C  EF22  F000         	goto	i2l2948
  6370   000040                     i2u204_40:
  6371   000040                     
  6372                           ;OBCII_PIC18F46K22.c: 156:             RCSTAbits.CREN = 0;
  6373   000040  98AB               	bcf	171,4,c	;volatile
  6374                           
  6375                           ;OBCII_PIC18F46K22.c: 157:             RCSTAbits.CREN = 1;
  6376   000042  88AB               	bsf	171,4,c	;volatile
  6377   000044                     i2l2948:
  6378                           
  6379                           ;OBCII_PIC18F46K22.c: 161:         if ((RX_char >= 32 && RX_char <= 126) && RX_char != '
      +                          >') {
  6380   000044  0E1F               	movlw	31
  6381   000046  6446               	cpfsgt	_RX_char^0,c
  6382   000048  EF28  F000         	goto	i2u205_41
  6383   00004C  EF2A  F000         	goto	i2u205_40
  6384   000050                     i2u205_41:
  6385   000050  EF42  F000         	goto	i2l2958
  6386   000054                     i2u205_40:
  6387   000054  0E7F               	movlw	127
  6388   000056  6046               	cpfslt	_RX_char^0,c
  6389   000058  EF30  F000         	goto	i2u206_41
  6390   00005C  EF32  F000         	goto	i2u206_40
  6391   000060                     i2u206_41:
  6392   000060  EF42  F000         	goto	i2l2958
  6393   000064                     i2u206_40:
  6394   000064  0E3E               	movlw	62
  6395   000066  1846               	xorwf	_RX_char^0,w,c
  6396   000068  B4D8               	btfsc	status,2,c
  6397   00006A  EF39  F000         	goto	i2u207_41
  6398   00006E  EF3B  F000         	goto	i2u207_40
  6399   000072                     i2u207_41:
  6400   000072  EF42  F000         	goto	i2l2958
  6401   000076                     i2u207_40:
  6402   000076                     
  6403                           ;OBCII_PIC18F46K22.c: 162:             buffer[buffer_count] = RX_char;
  6404   000076  5047               	movf	_buffer_count^0,w,c
  6405   000078  0F80               	addlw	low _buffer
  6406   00007A  6ED9               	movwf	fsr2l,c
  6407   00007C  6ADA               	clrf	fsr2h,c
  6408   00007E  C046  FFDF         	movff	_RX_char,indf2
  6409   000082                     
  6410                           ;OBCII_PIC18F46K22.c: 163:             buffer_count++;
  6411   000082  2A47               	incf	_buffer_count^0,f,c
  6412   000084                     i2l2958:
  6413                           
  6414                           ;OBCII_PIC18F46K22.c: 166:         if (RX_char == '>' || RX_char == '\n' || buffer_count
      +                           >= 32 -1) {
  6415   000084  0E3E               	movlw	62
  6416   000086  1846               	xorwf	_RX_char^0,w,c
  6417   000088  B4D8               	btfsc	status,2,c
  6418   00008A  EF49  F000         	goto	i2u208_41
  6419   00008E  EF4B  F000         	goto	i2u208_40
  6420   000092                     i2u208_41:
  6421   000092  EF5C  F000         	goto	i2l2964
  6422   000096                     i2u208_40:
  6423   000096  0E0A               	movlw	10
  6424   000098  1846               	xorwf	_RX_char^0,w,c
  6425   00009A  B4D8               	btfsc	status,2,c
  6426   00009C  EF52  F000         	goto	i2u209_41
  6427   0000A0  EF54  F000         	goto	i2u209_40
  6428   0000A4                     i2u209_41:
  6429   0000A4  EF5C  F000         	goto	i2l2964
  6430   0000A8                     i2u209_40:
  6431   0000A8  0E1E               	movlw	30
  6432   0000AA  6447               	cpfsgt	_buffer_count^0,c
  6433   0000AC  EF5A  F000         	goto	i2u210_41
  6434   0000B0  EF5C  F000         	goto	i2u210_40
  6435   0000B4                     i2u210_41:
  6436   0000B4  EF63  F000         	goto	i2l156
  6437   0000B8                     i2u210_40:
  6438   0000B8                     i2l2964:
  6439                           
  6440                           ;OBCII_PIC18F46K22.c: 167:             buffer[buffer_count] = '\0';
  6441   0000B8  5047               	movf	_buffer_count^0,w,c
  6442   0000BA  0F80               	addlw	low _buffer
  6443   0000BC  6ED9               	movwf	fsr2l,c
  6444   0000BE  6ADA               	clrf	fsr2h,c
  6445   0000C0  6ADF               	clrf	indf2,c
  6446   0000C2                     
  6447                           ;OBCII_PIC18F46K22.c: 168:             message_complete = 1;
  6448   0000C2  0E01               	movlw	1
  6449   0000C4  6E45               	movwf	_message_complete^0,c	;volatile
  6450   0000C6                     i2l156:
  6451   0000C6  C002  FFDA         	movff	??_UART_ISR+1,fsr2h
  6452   0000CA  C001  FFD9         	movff	??_UART_ISR,fsr2l
  6453   0000CE  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6454   0000D0  0011               	retfie		f
  6455   0000D2                     __end_of_UART_ISR:
  6456                           	callstack 0
  6457                           
  6458                           	psect	rparam
  6459   000001                     ___rparam_used  equ	1
  6460   000000                     ___param_bank   equ	0
  6461   000000                     __Lparam        equ	__Lrparam
  6462   000000                     __Hparam        equ	__Hrparam
  6463                           
  6464                           	psect	temp
  6465   00005C                     btemp:
  6466                           	callstack 0
  6467   00005C                     	ds	1
  6468   00005C                     int$flags       set	btemp
  6469   00005D                     wtemp8          set	btemp+1
  6470   00005D                     ttemp5          set	btemp+1
  6471   000060                     ttemp6          set	btemp+4
  6472   000064                     ttemp7          set	btemp+8
  6473                           
  6474                           	psect	config
  6475                           
  6476                           ; Padding undefined space
  6477   300000                     	org	3145728
  6478   300000  FF                 	db	255
  6479                           
  6480                           ;Config register CONFIG1H @ 0x300001
  6481                           ;	Oscillator Selection bits
  6482                           ;	FOSC = INTIO67, Internal oscillator block
  6483                           ;	4X PLL Enable
  6484                           ;	PLLCFG = ON, Oscillator multiplied by 4
  6485                           ;	Primary clock enable bit
  6486                           ;	PRICLKEN = ON, Primary clock is always enabled
  6487                           ;	Fail-Safe Clock Monitor Enable bit
  6488                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6489                           ;	Internal/External Oscillator Switchover bit
  6490                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6491   300001                     	org	3145729
  6492   300001  38                 	db	56
  6493                           
  6494                           ;Config register CONFIG2L @ 0x300002
  6495                           ;	Power-up Timer Enable bit
  6496                           ;	PWRTEN = ON, Power up timer enabled
  6497                           ;	Brown-out Reset Enable bits
  6498                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6499                           ;	Brown Out Reset Voltage bits
  6500                           ;	BORV = 250, VBOR set to 2.50 V nominal
  6501   300002                     	org	3145730
  6502   300002  0E                 	db	14
  6503                           
  6504                           ;Config register CONFIG2H @ 0x300003
  6505                           ;	Watchdog Timer Enable bits
  6506                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6507                           ;	Watchdog Timer Postscale Select bits
  6508                           ;	WDTPS = 32768, 1:32768
  6509   300003                     	org	3145731
  6510   300003  3C                 	db	60
  6511                           
  6512                           ; Padding undefined space
  6513   300004                     	org	3145732
  6514   300004  FF                 	db	255
  6515                           
  6516                           ;Config register CONFIG3H @ 0x300005
  6517                           ;	CCP2 MUX bit
  6518                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6519                           ;	PORTB A/D Enable bit
  6520                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6521                           ;	P3A/CCP3 Mux bit
  6522                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6523                           ;	HFINTOSC Fast Start-up
  6524                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6525                           ;	Timer3 Clock input mux bit
  6526                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6527                           ;	ECCP2 B output mux bit
  6528                           ;	P2BMX = PORTD2, P2B is on RD2
  6529                           ;	MCLR Pin Enable bit
  6530                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6531   300005                     	org	3145733
  6532   300005  BF                 	db	191
  6533                           
  6534                           ;Config register CONFIG4L @ 0x300006
  6535                           ;	Stack Full/Underflow Reset Enable bit
  6536                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6537                           ;	Single-Supply ICSP Enable bit
  6538                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6539                           ;	Extended Instruction Set Enable bit
  6540                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6541                           ;	Background Debug
  6542                           ;	DEBUG = 0x1, unprogrammed default
  6543   300006                     	org	3145734
  6544   300006  85                 	db	133
  6545                           
  6546                           ; Padding undefined space
  6547   300007                     	org	3145735
  6548   300007  FF                 	db	255
  6549                           
  6550                           ;Config register CONFIG5L @ 0x300008
  6551                           ;	Code Protection Block 0
  6552                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6553                           ;	Code Protection Block 1
  6554                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6555                           ;	Code Protection Block 2
  6556                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6557                           ;	Code Protection Block 3
  6558                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6559   300008                     	org	3145736
  6560   300008  0F                 	db	15
  6561                           
  6562                           ;Config register CONFIG5H @ 0x300009
  6563                           ;	Boot Block Code Protection bit
  6564                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6565                           ;	Data EEPROM Code Protection bit
  6566                           ;	CPD = OFF, Data EEPROM not code-protected
  6567   300009                     	org	3145737
  6568   300009  C0                 	db	192
  6569                           
  6570                           ;Config register CONFIG6L @ 0x30000A
  6571                           ;	Write Protection Block 0
  6572                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6573                           ;	Write Protection Block 1
  6574                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6575                           ;	Write Protection Block 2
  6576                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6577                           ;	Write Protection Block 3
  6578                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6579   30000A                     	org	3145738
  6580   30000A  0F                 	db	15
  6581                           
  6582                           ;Config register CONFIG6H @ 0x30000B
  6583                           ;	Configuration Register Write Protection bit
  6584                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6585                           ;	Boot Block Write Protection bit
  6586                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6587                           ;	Data EEPROM Write Protection bit
  6588                           ;	WRTD = OFF, Data EEPROM not write-protected
  6589   30000B                     	org	3145739
  6590   30000B  E0                 	db	224
  6591                           
  6592                           ;Config register CONFIG7L @ 0x30000C
  6593                           ;	Table Read Protection Block 0
  6594                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6595                           ;	Table Read Protection Block 1
  6596                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6597                           ;	Table Read Protection Block 2
  6598                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6599                           ;	Table Read Protection Block 3
  6600                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6601   30000C                     	org	3145740
  6602   30000C  0F                 	db	15
  6603                           
  6604                           ;Config register CONFIG7H @ 0x30000D
  6605                           ;	Boot Block Table Read Protection bit
  6606                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6607   30000D                     	org	3145741
  6608   30000D  40                 	db	64
  6609                           tosu	equ	0xFFF
  6610                           tosh	equ	0xFFE
  6611                           tosl	equ	0xFFD
  6612                           stkptr	equ	0xFFC
  6613                           pclatu	equ	0xFFB
  6614                           pclath	equ	0xFFA
  6615                           pcl	equ	0xFF9
  6616                           tblptru	equ	0xFF8
  6617                           tblptrh	equ	0xFF7
  6618                           tblptrl	equ	0xFF6
  6619                           tablat	equ	0xFF5
  6620                           prodh	equ	0xFF4
  6621                           prodl	equ	0xFF3
  6622                           indf0	equ	0xFEF
  6623                           postinc0	equ	0xFEE
  6624                           postdec0	equ	0xFED
  6625                           preinc0	equ	0xFEC
  6626                           plusw0	equ	0xFEB
  6627                           fsr0h	equ	0xFEA
  6628                           fsr0l	equ	0xFE9
  6629                           wreg	equ	0xFE8
  6630                           indf1	equ	0xFE7
  6631                           postinc1	equ	0xFE6
  6632                           postdec1	equ	0xFE5
  6633                           preinc1	equ	0xFE4
  6634                           plusw1	equ	0xFE3
  6635                           fsr1h	equ	0xFE2
  6636                           fsr1l	equ	0xFE1
  6637                           bsr	equ	0xFE0
  6638                           indf2	equ	0xFDF
  6639                           postinc2	equ	0xFDE
  6640                           postdec2	equ	0xFDD
  6641                           preinc2	equ	0xFDC
  6642                           plusw2	equ	0xFDB
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8

Data Sizes:
    Strings     234
    Constant    0
    Data        4
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      91
    BANK0           160      2      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(COMRAM[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(COMRAM[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 32
		 -> air_intake_string(BANK0[16]), buffer(BANK0[32]), rpm_string(COMRAM[16]), STR_12(CODE[6]), 
		 -> STR_13(CODE[4]), STR_15(CODE[6]), STR_16(CODE[6]), STR_17(CODE[4]), 
		 -> STR_19(CODE[4]), STR_2(CODE[17]), STR_21(CODE[4]), STR_22(CODE[2]), 
		 -> STR_24(CODE[5]), STR_26(CODE[5]), STR_27(CODE[15]), STR_28(CODE[17]), 
		 -> STR_3(CODE[17]), STR_30(CODE[14]), STR_31(CODE[11]), STR_32(CODE[16]), 
		 -> STR_33(CODE[11]), STR_5(CODE[17]), STR_8(CODE[16]), STR_9(CODE[16]), 

    S1979$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(COMRAM[16]), 

    S1979$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK0[32]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_20(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> air_intake_string(BANK0[16]), rpm_string(COMRAM[16]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 32
		 -> buffer(BANK0[32]), 

    UART1_SendString@string	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), STR_10(CODE[6]), STR_14(CODE[6]), STR_18(CODE[6]), 
		 -> STR_23(CODE[5]), STR_25(CODE[6]), STR_29(CODE[4]), STR_4(CODE[5]), 
		 -> STR_6(CODE[5]), STR_7(CODE[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_20(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_20(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_20(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_main_menu
    _welcome_splash->_LCD_write_variable
    _LCD_write_variable->___aldiv
    _main_menu->_live_reading_mode
    _live_reading_mode->_print_AI_Temp
    _live_reading_mode->_print_RPM
    _print_Vbatt->_LCD_write_string
    _print_RPM->_sprintf
    _print_AI_Temp->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _print_SAEVer->_LCD_write_string
    _print_ELMVer->_LCD_write_string
    _clear_diagnostic_codes->_LCD_write_string
    _display_mm->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _UART1_SendString->_UART1_SendChar
    _LCD_configure_cursor_blink->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14643
                                              0 BANK0      2     2      0
                           _ADC_init
                          _LCD_clear
                           _LCD_init
                         _UART1_Init
                   _UART1_SendString
                         _input_init
                          _main_menu
                     _welcome_splash
 ---------------------------------------------------------------------------------
 (1) _welcome_splash                                       6     6      0    2326
                                             27 COMRAM     6     6      0
                     _LCD_cursor_set
                   _LCD_write_string
                 _LCD_write_variable
                   _UART1_SendString
                            ___lwdiv
                          _ccp1_init
                          _tmr1_init
 ---------------------------------------------------------------------------------
 (2) _tmr1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ccp1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_write_variable                                  11     6      5    1231
                                             16 COMRAM    11     6      5
                     _LCD_write_data
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8      94
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     300
                                              2 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            2     2      0   11492
                                             45 COMRAM     2     2      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
             _clear_diagnostic_codes
                         _display_mm
                _display_system_info
                  _live_reading_mode
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _live_reading_mode                                    2     2      0    5924
                                             43 COMRAM     2     2      0
                      _print_AI_Temp
                          _print_RPM
                        _print_Vbatt
 ---------------------------------------------------------------------------------
 (3) _print_Vbatt                                          0     0      0     972
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               4     1      3      90
                                              2 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _print_RPM                                            3     3      0    2476
                                             40 COMRAM     3     3      0
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                  _hex_char_to_value
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _print_AI_Temp                                        3     3      0    2476
                                             40 COMRAM     3     3      0
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                  _hex_char_to_value
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    14      4    1333
                                             24 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             4     1      3    1130
                                             20 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           11     8      3    1005
                                             10 COMRAM    10     7      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     230
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     166
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _hex_char_to_value                                    1     1      0     261
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _display_system_info                                  0     0      0    1764
                       _print_ELMVer
                       _print_SAEVer
 ---------------------------------------------------------------------------------
 (3) _print_SAEVer                                         0     0      0     882
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
 ---------------------------------------------------------------------------------
 (3) _print_ELMVer                                         0     0      0     882
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
 ---------------------------------------------------------------------------------
 (2) _clear_diagnostic_codes                               4     4      0    2153
                                             10 COMRAM     4     4      0
                          _LCD_clear
         _LCD_configure_cursor_blink
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                         _display_mm
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _display_mm                                           0     0      0     753
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     5     3      2     348
                                              5 COMRAM     5     3      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (3) _LCD_write_data                                       3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_set                                       2     1      1     405
                                              5 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _UART1_SendString                                     4     3      1     129
                                              3 COMRAM     4     3      1
                     _UART1_SendChar
 ---------------------------------------------------------------------------------
 (3) _UART1_SendChar                                       1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_configure_cursor_blink                           1     1      0     261
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _input_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     464
                                              6 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            1     1      0     232
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_write_command                                    3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _UART_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _UART1_Init
   _UART1_SendString
     _UART1_SendChar
   _input_init
   _main_menu
     _LCD_clear
     _LCD_configure_cursor_blink
       _LCD_write_command
     _LCD_cursor_set
       _LCD_write_command
     _clear_diagnostic_codes
       _LCD_clear
       _LCD_configure_cursor_blink
       _LCD_cursor_set
       _LCD_write_string
         _LCD_write_data
           _LCD_pulse_clock
       _UART1_SendString
       _display_mm
         _LCD_cursor_set
         _LCD_write_string
       _readADC
     _display_mm
     _display_system_info
       _print_ELMVer
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
       _print_SAEVer
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
     _live_reading_mode
       _print_AI_Temp
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _hex_char_to_value
         _sprintf
           _vfprintf
             _vfpfcnvrt
               ___lwdiv
               ___lwmod
               _fputc
                 _putch
       _print_RPM
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _hex_char_to_value
         _sprintf
       _print_Vbatt
         _LCD_cursor_set
         _LCD_write_string
         _UART1_SendString
         _strchr
     _readADC
   _welcome_splash
     _LCD_cursor_set
     _LCD_write_string
     _LCD_write_variable
       _LCD_write_data
       ___aldiv
       ___almod
       ___lmul
       ___lwdiv (ARG)
     _UART1_SendString
     ___lwdiv
     _ccp1_init
     _tmr1_init

 _UART_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      2      82     51.2%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     47      91     96.8%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        70      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     173      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 28 18:37:48 2025

                               l202 1306                                 l212 1246  
                               l142 26AE                                 l145 25EA  
                               l401 15EA                                 l162 23DC  
                               l330 2376                                 l322 1C1E  
                               l139 2696                                 l171 2676  
                               l316 26A2                                 l332 2392  
                               l236 2098                                 l244 1B22  
                               l252 201A                                 l325 2114  
                               l165 2652                                 l261 2610  
                               l190 2554                                 l174 2686  
                               l319 1D1A                                 l431 225C  
                               l168 2664                                 l328 234A  
                               l512 1E04                                 l432 226C  
                               l408 1688                                 l184 1918  
                               l353 2632                                 l329 2360  
                               l193 258A                                 l273 2464  
                               l258 1ED6                                 l178 1844  
                               l187 2522                                 l267 24A6  
                               l356 264E                                 l276 26B8  
                               l285 140C                                 l386 218E  
                               l299 1514                                 l911 21FA  
                               l921 22C8                                 l499 1A22  
                               l918 2202                                 l928 22D0  
                               _RPM 003C                                 wreg 0FE8  
                        _TXSTA1bits 0FAC                                l1107 25BE  
                              l1151 24E4                                l2200 2698  
                              l1144 17F2                                l2202 269A  
                              l2210 16B4                                l1163 1F80  
                              l2204 26A0                                l2300 23A0  
                              l2220 1702                                l2212 16C0  
                              l3100 2324                                l2302 23B6  
                              l2310 235C                                l2150 2198  
                              l1174 26BE                                l2230 1766  
                              l2222 1710                                l2214 16C4  
                              l2206 168A                                l3102 2328  
                              l2400 2624                                l2304 23BA  
                              l2312 2372                                l2320 211C  
                              l2160 21CE                                l2152 21AA  
                              l2232 177A                                l2224 1714  
                              l2240 17AC                                l2216 16CE  
                              l2208 16AC                                l1177 24E6  
                              l2402 262A                                l2314 2388  
                              l2306 2336                                l2322 214E  
                              l2330 203E                                l2162 21E4  
                              l2154 21B2                                l2170 226E  
                              l2234 1794                                l2226 1738  
                              l2218 16EA                                l2242 17C4  
                              l2410 1A3C                                l1179 251E  
                              l2260 1CA2                                l2404 262C  
                              l2252 2652                                l2316 238C  
                              l2308 2346                                l2324 2150  
                              l2500 242C                                l2164 21EC  
                              l2156 21BA                                l2148 2190  
                              l2180 22B4                                l2172 2280  
                              l2236 1796                                l2228 1754  
                              l2420 1AF0                                l2412 1AA0  
                              l2270 1D16                                l2262 1CA6  
                              l2254 2660                                l2318 2116  
                              l2510 2462                                l2502 243C  
                              l2350 2096                                l2342 206E  
                              l2334 2046                                l2326 201E  
                              l2166 21EE                                l2158 21C8  
                              l2182 22BC                                l2174 2288  
                              l2190 1EF8                                l2246 17D0  
                              l2430 1B20                                l2422 1AFA  
                              l2414 1AC2                                l2406 1A24  
                              l2264 1CC8                                l2256 1C22  
                              l2280 1BCC                                l2272 1B26  
                              l2504 2446                                l2344 207E  
                              l2336 2056                                l2328 202E  
                              l2168 21F4                                l2184 22C2  
                              l2176 2290                                l2192 1F02  
                              l2360 25A4                                l2424 1B0A  
                              l2416 1AD6                                l2408 1A2C  
                              l2440 1FB4                                l2432 1F82  
                              l3144 12E0                                l2520 223C  
                              l2512 2204                                l1640 2678  
                              l1810 26A8                                l2266 1CE8  
                              l2258 1C24                                l2282 1BEC  
                              l2274 1B28                                l3146 14FE  
                              l2506 2456                                l2346 208E  
                              l2338 2066                                l2178 229E  
                              l2194 1F1E                                l2186 1ED8  
                              l2290 24B0                                l2362 25B4  
                              l2354 258C                                l2426 1B14  
                              l2418 1AE0                                l2450 2016  
                              l2442 1FCE                                l2434 1F8A  
                              l2530 193E                                l2522 191A  
                              l2514 2214                                l2610 156A  
                              l2602 1516                                l3090 22DA  
                              l2268 1D02                                l2380 263A  
                              l1820 25DE                                l1812 25C0  
                              l2284 1C06                                l2276 1BA6  
                              l2700 1444                                l2508 2460  
                              l2196 1F50                                l2188 1EE8  
                              l2292 24C0                                l2356 2594  
                              l2460 1E28                                l2428 1B1E  
                              l2372 2504                                l2452 2018  
                              l2444 1FD8                                l2436 1F9A  
                              l2540 1986                                l2532 194C  
                              l2524 191C                                l2516 2222  
                              l2612 156C                                l2604 1518  
                              l1636 2666                                l3092 22DE  
                              l2382 2648                                l1830 25E8  
                              l1822 25E0                                l1814 25D2  
                              l1806 2688                                l2286 1C1A  
                              l2278 1BAA                                l2710 1490  
                              l2702 1454                                l2294 24DC  
                              l2358 259C                                l2470 1E94  
                              l2462 1E38                                l2454 1E06  
                              l2374 251C                                l2366 24E6  
                              l2446 1FF8                                l2438 1FA4  
                              l2550 19D0                                l2542 198E  
                              l2534 195C                                l2526 192A  
                              l2518 2232                                l2630 1636  
                              l2622 15DE                                l2606 1526  
                              l1638 266E                                l3094 22EA  
                              l3086 22D2                                l1808 26A4  
                              l1824 25E2                                l1816 25DA  
                              l2392 2556                                l2384 2520  
                              l2712 14AC                                l2704 1462  
                              l2288 24A8                                l2480 1ED2  
                              l2472 1EA4                                l2464 1E6A  
                              l2456 1E0E                                l2368 24FE  
                              l2448 200C                                l2560 1A02  
                              l2552 19E0                                l2544 199A  
                              l2536 1960                                l2528 193A  
                              l2632 1638                                l2624 15E4  
                              l2616 1590                                l2608 155A  
                              l2800 18C8                                l3096 2302  
                              l3088 22D6                                l2378 2634  
                              l1826 25E4                                l1818 25DC  
                              l2298 2394                                l2394 2560  
                              l2386 2530                                l2714 14BA  
                              l2706 1472                                l2650 1324  
                              l2490 2488                                l2730 26B0  
                              l2482 1ED4                                l2474 1EAE  
                              l2466 1E76                                l2458 1E1E  
                              l2642 25EC                                l2810 10EC  
                              l2562 1A12                                l2554 19E2  
                              l2546 19A8                                l2538 1970  
                              l2570 1D2C                                l2634 164A  
                              l2626 15FA                                l2618 15C8  
                              l2802 18E0                                l3098 230A  
                              l2740 20CE                                l2732 209A  
                              l1828 25E6                                l2396 2570  
                              l2388 253E                                l2716 14CA  
                              l2708 148C                                l2724 14E8  
                              l2660 1354                                l2652 132C  
                              l2492 2498                                l2484 2466  
                              l2476 1EB8                                l2468 1E8A  
                              l2644 25F0                                l2900 12A8  
                              l2820 111C                                l2812 10F0  
                              l2556 19EC                                l2548 19B2  
                              l2580 1D74                                l2572 1D3C  
                              l2636 1676                                l2628 1602  
                              l2804 18E8                                l2750 20EE  
                              l2742 20D0                                l2734 20B2  
                              l2398 2614                                l2670 1390  
                              l2662 1364                                l2654 1330  
                              l2494 24A2                                l2486 246E  
                              l2478 1EC2                                l2646 25F4  
                              l2902 12B8                                l2830 115A  
                              l2822 1126                                l2814 10F4  
                              l2558 19F2                                l2590 1DC4  
                              l2582 1D7C                                l2574 1D40  
                              l2566 1D1C                                l2638 1678  
                              l2806 18F8                                l2760 20FA  
                              l2752 20F2                                l2744 20D2  
                              l2736 20CA                                l2680 13D0  
                              l2672 139A                                l2664 136A  
                              l2656 133A                                l2496 24A4  
                              l2488 247E                                l2648 25F8  
                              l2912 12CA                                l2840 11A2  
                              l2832 116C                                l2824 1136  
                              l2816 1104                                l2592 1DCE  
                              l2584 1D88                                l2576 1D4E  
                              l2568 1D1E                                l2808 1910  
                              l2762 20FE                                l2754 20F4  
                              l2746 20D6                                l2738 20CC  
                              l2690 1404                                l2682 13DE  
                              l2674 13AC                                l2666 1376  
                              l2658 134A                                l2498 2424  
                              l2850 11DA                                l2914 1306  
                              l2842 11B4                                l2834 117E  
                              l2826 1148                                l2818 1114  
                              l2586 1D96                                l2594 1DD4  
                              l2578 1D5E                                l2770 17F4  
                              l2764 2104                                l2756 20F6  
                              l2748 20E8                                l2692 141A  
                              l2684 13EE                                l2676 13BE  
                              l2668 1388                                l2860 1218  
                              l2852 11EA                                l2844 11BC  
                              l2836 1186                                l2828 1150  
                              l2596 1DE4                                l2588 1DB4  
                              l2780 1838                                l2772 1804  
                              l2766 210A                                l2758 20F8  
                              l2694 142A                                l2686 13FC  
                              l2678 13C6                                l2870 1254  
                              l2862 1228                                l2854 11F8  
                              l2846 11C6                                l2838 1190  
                              l2598 1DF4                                l2790 1864  
                              l2782 1852                                l2774 180E  
                              l2768 2110                                l2688 1400  
                              l2880 1276                                l2872 1264  
                              l2864 1236                                l2856 1206  
                              l2848 11CC                                l2784 1854  
                              l2792 188C                                l2776 181E  
                              l2698 143C                                l2882 128E  
                              l2866 123A                                l2858 120A  
                              l2794 18A2                                l2786 1858  
                              l2778 1828                                l2868 123E  
                              l2796 18AE                                l2788 185A  
                              l2798 18B8                                l2896 1296  
                              l2898 129A                                STR_1 109D  
                              STR_2 1012                                STR_3 1023  
                              STR_4 10C7                                STR_5 1001  
                              STR_6 10C7                                STR_7 109D  
                              STR_8 1045                                STR_9 1055  
                              u1100 21AA                                u1101 21A6  
                              u1110 21C8                                u1111 21C4  
                              u1120 21E4                                u1200 16AC  
                              u2000 12A8                                u1121 21E0  
                              u1201 16A8                                u2001 12A4  
                              u1130 2280                                u1210 16EA  
                              u2010 12C6                                u1131 227C  
                              u1211 16E6                                u2011 12C2  
                              u1140 229E                                u1220 1766  
                              u1141 229A                                u1221 1762  
                              u1150 22B4                                u1230 1776  
                              u1151 22B0                                u1231 1772  
                              u1400 218E                                u1160 1EE8  
                              u1240 17A8                                u1320 24DC  
                              u1305 1B4A                                u1401 218A  
                              u1161 1EE4                                u1241 17A4  
                              u1321 24D8                                u1250 2660  
                              u1330 23DC                                u1410 202E  
                              u1170 1EF8                                u1251 265C  
                              u1331 23D8                                u1315 1B70  
                              u1411 202A                                u1171 1EF4  
                              u1500 2624                                u1340 2346  
                              u1420 203E                                u1180 1F1E  
                              u1501 2620                                u1341 2342  
                              u1421 203A                                u1181 1F1A  
                              u1350 235C                                u1430 2056  
                              u1190 1F50                                u1510 1A3C  
                              u1351 2358                                u1431 2052  
                              u1191 1F4C                                u1511 1A38  
                              u2207 2316                                u1360 2372  
                              u1440 2066                                u1520 1F9A  
                              u1600 194C                                u1265 1C2C  
                              u1361 236E                                u1441 2062  
                              u1521 1F96                                u1601 1948  
                              u2217 18D2                                u1370 2388  
                              u1450 207E                                u1530 1FF8  
                              u1610 1986                                u1275 1C46  
                              u1371 2384                                u2307 13E4  
                              u1451 207A                                u1531 1FF4  
                              u1611 1982                                u2227 1902  
                              u1380 214A                                u1460 208E  
                              u1540 1E1E                                u1620 19A8  
                              u1700 1DE4                                u1285 1C6C  
                              u2317 1420                                u1461 208A  
                              u1541 1E1A                                u2237 11E0  
                              u1621 19A4                                u1701 1DE0  
                              u1390 217E                                u1550 247E  
                              u1470 24FE                                u1630 19D0  
                              u1710 1526                                u1295 1B30  
                              u2327 149A                                u1551 247A  
                              u1471 24FA                                u2247 121E  
                              u1631 19CC                                u1711 1522  
                              u1800 13FC                                u1560 243C  
                              u1480 251C                                u1640 1A02  
                              u1720 158C                                u2337 2536  
                              u1801 13F8                                u1561 2438  
                              u1481 2518                                u2257 125A  
                              u1641 19FE                                u1721 1588  
                              u1490 2530                                u1810 141A  
                              u1650 1D2C                                u1570 2222  
                              u1730 15DA                                u2347 20BC  
                              u1387 2140                                u1491 252C  
                              u1811 1416                                u2267 1280  
                              u1651 1D28                                u1571 221E  
                              u1731 15D6                                u1820 1438  
                              u1900 116C                                u1660 1D4E  
                              u1580 225C                                u1740 164A  
                              u2357 20DC                                u1397 2174  
                              u1821 1434                                u2277 12AE  
                              u1901 1168                                u1661 1D4A  
                              u1581 2258                                u1741 1646  
                              u2197 22F6                                u1830 1454  
                              u1910 117E                                u1590 192A  
                              u1670 1D74                                u1750 1688  
                              u2367 20EA                                u1831 1450  
                              u2287 1310                                u1911 117A  
                              u1591 1926                                u1671 1D70  
                              u1751 1684                                u1760 1388  
                              u1920 11A2                                u1680 1D96  
                              u1840 1852                                u2377 2640  
                              u1761 1384                                u2297 2602  
                              u1921 119E                                u1681 1D92  
                              u1841 184E                                u1770 13AC  
                              u1930 11B4                                u1690 1DB4  
                              u1850 18A2                                u2387 269C  
                              u1771 13A8                                u1931 11B0  
                              u1691 1DB0                                u1851 189E  
                              u1780 13BE                                u1940 11DA  
                              u1860 18F8                                u1781 13BA  
                              u1941 11D6                                u1861 18F4  
                              u1790 13DE                                u1950 11F8  
                              u1870 1114                                u1791 13DA  
                              u1951 11F4                                u1871 1110  
                              u1960 1218                                u1880 1136  
                              u1961 1214                                u1881 1132  
                              u1970 1236                                u1890 1148  
                              u1971 1232                                u1891 1144  
                              u1980 1254                                u1981 1250  
                              u1990 1272                                u1991 126E  
                    _UART1_SendChar 2650                   _live_reading_mode 25EC  
                 _air_intake_string 00A0                                _dbuf 0060  
                              _main 22D2                                _prec 0036  
                              fsr0h 0FEA                                fsr1h 0FE2  
                   ??_print_AI_Temp 0029                                indf0 0FEF  
                              fsr2h 0FDA                                fsr0l 0FE9  
                              indf2 0FDF                                fsr1l 0FE1  
                              fsr2l 0FD9                                btemp 005C  
                ?_live_reading_mode 0001                                start 00D2  
                  __end_of_ADC_init 26B0                        ___param_bank 0000  
               ??_live_reading_mode 002C                         ?_UART1_Init 0001  
                      _BAUDCON1bits 0FB8                    __end_of_LCD_init 2116  
                   __end_of___aldiv 1A24                     __end_of___almod 1E06  
                             ?_main 0001                               STR_10 10A9  
                             STR_11 10E6                               STR_20 10E6  
                             STR_12 10BB                               STR_21 10E2  
                             STR_13 10DE                               STR_22 10E9  
                             STR_14 10B5                               STR_30 1084  
                             STR_23 10C7                               STR_15 10BB  
                             STR_31 1092                               STR_24 10D1  
                             STR_16 10C1                               STR_32 1065  
                             STR_33 1092                               STR_17 10DA  
                             STR_25 10A3                               STR_26 10CC  
                             STR_18 10AF                               STR_19 10BD  
                             STR_27 1075                               STR_28 1034  
                             STR_29 10D6                     __end_of___lwdiv 2204  
                   __end_of___lwmod 22D2                               i2l156 00C6  
                      vfpfcnvrt@fmt 000C                               _TXREG 0FAD  
                             _A_rpm 0040                               _B_rpm 003E  
               ___lmul@multiplicand 0007                    __end_of_UART_ISR 00D2  
                   __end_of_readADC 2556              __end_of_UART1_SendChar 2666  
                             _flags 0044        welcome_splash@CCP1IF_counter 0020  
                             _fputc 1ED8           __end_of_live_reading_mode 2612  
                             _width 0034                               _putch 26BE  
                             tablat 0FF5                   UART1_SendString@i 0006  
           ?_clear_diagnostic_codes 0001                               ttemp5 005D  
                             ttemp6 0060                               ttemp7 0064  
                             status 0FD8                               wtemp8 005D  
                   __end_of_sprintf 25C0                     __initialization 23DE  
                      __end_of_main 2334                   ?_LCD_write_string 0006  
                            ??_main 00B0                       __activetblptr 0002  
                ??_LCD_write_string 0008                   __end_of_LCD_clear 2650  
                            _ADCON0 0FC2                              _ADCON1 0FC1  
                            _ADCON2 0FC0                     ?_UART1_SendChar 0001  
                            ?_fputc 0003                              _ADRESH 0FC4  
                            _ADRESL 0FC3                              _CCPR1H 0FBF  
                            _CCPR1L 0FBE                              ?_putch 0001  
                            _ANSELC 0F3A      __end_of_clear_diagnostic_codes 1516  
                            i2l2940 0012                              i2l2950 0054  
                            i2l2942 0020                              i2l2960 0096  
                            i2l2952 0064                              i2l2944 002E  
                            i2l2962 00A8                              i2l2954 0076  
                            i2l2946 0040                              i2l2964 00B8  
                            i2l2956 0082                              i2l2948 0044  
                            i2l2966 00C2                              i2l2958 0084  
                            _RCREG1 0FAE                 _display_system_info 26B0  
            LCD_write_string@string 0006                              _OSCCON 0FD3  
                            _SPBRG1 0FAF       clear_diagnostic_codes@opt_sel 000D  
                  _UART1_SendString 2394     LCD_write_variable@temp_variable 0018  
                      vfprintf@cfmt 0018                              ___lmul 2204  
                         ??___aldiv 000B                           ??___almod 000B  
                         ??___lwdiv 0007        ??_LCD_configure_cursor_blink 0006  
                         ??___lwmod 0007                              _buffer 0080  
              ?_display_system_info 0001                              clear_0 2404  
                            clear_1 2410                              isa$std 0001  
                            _result 0042                              _strchr 24E6  
                         ??_readADC 0005                              fputc@c 0003  
                      __pdataCOMRAM 0058                    ??_welcome_splash 001C  
                      __mediumconst 1000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                         ?_ADC_init 0001                              putch@c 0001  
                  __end_of_vfprintf 24E6                           ??_sprintf 001D  
                      ?_print_Vbatt 0001                          __accesstop 0060  
           __end_of__initialization 2416                           ?_LCD_init 0001  
                     ___rparam_used 0001                     UART1_SendChar@c 0003  
                    __pcstackCOMRAM 0001                           ?_UART_ISR 0001  
                    _LCD_entry_mode 005A                   _LCD_write_command 1C20  
                     __end_of_fputc 1F82               ??_display_system_info 000B  
                     __end_of_putch 26C0                      _LCD_cursor_set 2334  
                ?_LCD_write_command 0001          __end_of_LCD_write_variable 168A  
                 _hex_char_to_value 201C                  ?_hex_char_to_value 0001  
               ??_LCD_write_command 0003                          ??_ADC_init 0003  
                           ??_fputc 0006                             ??_putch 0003  
                        __pbssBANK0 0060                 ??_hex_char_to_value 0003  
                        ??_LCD_init 0007           __end_of_LCD_write_command 1D1C  
                           ?___lmul 0003                        ??_UART1_Init 0003  
                        ??_UART_ISR 0001              __end_of_LCD_cursor_set 2394  
                    ___lmul@product 000B           __end_of_hex_char_to_value 209A  
                 __end_of_ccp1_init 2678                             ?_strchr 0003  
                           _SPBRGH1 0FB0                          _display_mm 2556  
          LCD_write_command@command 0005                  __end_of_UART1_Init 25EC  
                           _RX_char 0046               __end_of_print_AI_Temp 1ED8  
                           __Hparam 0000                             __Lparam 0000  
__end_of_LCD_configure_cursor_blink 2634          _LCD_configure_cursor_blink 2612  
                  _message_complete 0045                             ___aldiv 191A  
                           ___almod 1D1C                     ?_LCD_cursor_set 0006  
                    _LCD_write_data 1B24                             ___lwdiv 2190  
        LCD_write_variable@variable 0011                             ___lwmod 226E  
                         ?_vfprintf 0015                        __psmallconst 1000  
                 __end_of_main_menu 1324                             __pcinit 23DE  
                           __ramtop 1000                             __ptext0 22D2  
                           __ptext1 17F4                             __ptext2 2678  
                           __ptext3 2666                             __ptext4 1516  
                           __ptext5 2204                             __ptext6 1D1C  
                           __ptext7 191A                             __ptext8 10EC  
                           __ptext9 25EC                             _readADC 2520  
                         _T1CONbits 0FCD                    ??_UART1_SendChar 0003  
                  ___aldiv@dividend 0003            __end_of_UART1_SendString 23DE  
                        _input_init 2688                             _sprintf 258C  
                         _LCD_clear 2634                end_of_initialization 2416  
                 __end_of_tmr1_init 2688                             fputc@fp 0005  
                     __Lmediumconst 0000                LCD_cursor_set@column 0006  
                 __end_of_print_RPM 1B24                       ?_print_ELMVer 0001  
                      _buffer_count 0047                 _LCD_display_control 005B  
            __end_of_LCD_write_data 1C20                   __end_of_vfpfcnvrt 17F4  
                     ?_print_SAEVer 0001                           _RCSTAbits 0FAB  
                  ___aldiv@quotient 000D                             postdec1 0FE5  
                           postdec2 0FDD                             postinc0 0FEE  
                           postinc1 0FE6                             postinc2 0FDE  
                  vfpfcnvrt@convarg 000F                          ??_vfprintf 0018  
                           strchr@c 0004                             strchr@s 0003  
                         _PORTBbits 0F81                           _PORTCbits 0F82  
                 ??_LCD_pulse_clock 0003                          _rpm_string 0048  
                         _TRISAbits 0F92                           _TRISBbits 0F93  
                         _TRISCbits 0F94                           _TRISDbits 0F95  
                       ?_display_mm 0001                          ?_LCD_clear 0001  
                   _air_intake_temp 0038                         _CCP1CONbits 0FBD  
                         _TXSTAbits 0FAC                      ??_print_ELMVer 000B  
                    ??_print_SAEVer 000B                     ?_LCD_write_data 0001  
                    __end_of___lmul 226E                         vfpfcnvrt@ap 000D  
                       vfpfcnvrt@cp 0013                         vfpfcnvrt@fp 000B  
                     __pidataCOMRAM 26BA                      __end_of_strchr 2520  
               start_initialization 23DE                         ?_input_init 0001  
                _LCD_write_variable 1516                 LCD_write_variable@i 0016  
               ?_LCD_write_variable 0011         __end_of_display_system_info 26BA  
                       vfprintf@fmt 0016                            ??___lmul 000B  
                          ??_strchr 0006                ??_LCD_write_variable 0016  
          ??_clear_diagnostic_codes 000B                         __pbssCOMRAM 0030  
                         _ccp1_init 2666                       __pcstackBANK0 00B0  
                       ??_LCD_clear 0006                    _LCD_write_string 2116  
                  ??_LCD_cursor_set 0007                    ___lwdiv@dividend 0003  
   LCD_configure_cursor_blink@state 0006                           __pintcode 0008  
                          ?___aldiv 0003                            ?___almod 0003  
       ?_LCD_configure_cursor_blink 0001                            ?___lwdiv 0003  
                          ?___lwmod 0003              UART1_SendString@string 0004  
                  ___almod@dividend 0003                            ?_readADC 0003  
                       __smallconst 1000                           _main_menu 10EC  
                        ?_ccp1_init 0001                __end_of_print_ELMVer 24A8  
                          _ADC_init 26A4                __end_of_print_SAEVer 2466  
                 ?_UART1_SendString 0004                    ___lwdiv@quotient 0007  
                          ?_sprintf 0019                  LCD_write_data@data 0005  
                ??_UART1_SendString 0005                     ___aldiv@divisor 0007  
                   ___aldiv@counter 000B                            _LATDbits 0F8C  
                          _LCD_init 209A                            _PIE1bits 0F9D  
                         _tmr1_init 2678                            i2u210_40 00B8  
                          i2u202_40 0020                            i2u210_41 00B4  
                          i2u202_41 001C                            i2u203_40 002E  
                          i2u203_41 002A                            i2u204_40 0040  
                          i2u204_41 003C                            i2u205_40 0054  
                          i2u205_41 0050                            i2u206_40 0064  
                          i2u206_41 0060                            i2u207_40 0076  
                          i2u207_41 0072                            i2u208_40 0096  
                          i2u208_41 0092                            i2u209_40 00A8  
                          i2u209_41 00A4                            _PIR1bits 0F9E  
                   _LCD_pulse_clock 2698                            _UART_ISR 0008  
                         _print_RPM 1A24                           _vfpfcnvrt 168A  
                        _ADCON0bits 0FC2                          ?_main_menu 0001  
                      ??_display_mm 000B                          vfpfcnvrt@c 0014  
                     ??_print_Vbatt 000B                   ___lmul@multiplier 0003  
                         copy_data0 23F2                    ??_LCD_write_data 0003  
                        ?_tmr1_init 0001                            __Hrparam 0000  
          LCD_write_variable@digits 0017                           modff@F522 0030  
                        vfprintf@ap 0017                            __Lrparam 0000  
                        vfprintf@fp 0015                  hex_char_to_value@c 0003  
                 LCD_cursor_set@row 0007                          ?_print_RPM 0001  
                __end_of_display_mm 258C                          ?_vfpfcnvrt 000B  
                        _ANSELAbits 0F38                          _ANSELBbits 0F39  
                        _ANSELCbits 0F3A                          sprintf@fmt 001A  
                       ??_ccp1_init 0003                     ___lwdiv@divisor 0005  
                   ___lwdiv@counter 0009                        ??_input_init 0003  
                          __ptext10 1F82                            __ptext11 24E6  
                          __ptext20 2190                            __ptext12 1A24  
                          __ptext21 201C                            __ptext13 1E06  
                          __ptext30 2334                            __ptext22 26B0  
                          __ptext14 258C                            __ptext31 2394  
                          __ptext23 2424                            __ptext15 24A8  
                          __ptext40 26A4                            __ptext32 2650  
                          __ptext24 2466                            __ptext16 168A  
                          __ptext33 2612                            __ptext25 1324  
                          __ptext17 1ED8                            __ptext34 2688  
                          __ptext26 2520                            __ptext18 26BE  
                          __ptext35 25C0                            __ptext27 2556  
                          __ptext19 226E                            __ptext36 209A  
                          __ptext28 2116                            __ptext37 2634  
                          __ptext29 1B24                            __ptext38 1C20  
                          __ptext39 2698                     ___almod@divisor 0007  
                   ___almod@counter 000B                      _welcome_splash 17F4  
           __end_of_LCD_pulse_clock 26A4                            _menu_sel 0058  
               __end_of_print_Vbatt 201C              _clear_diagnostic_codes 1324  
                     _print_AI_Temp 1E06                            isa$xinst 0000  
                          int$flags 005C                            _vfprintf 24A8  
                __end_of_input_init 2698            __end_of_LCD_write_string 2190  
     LCD_write_variable@left_offset 0015                         ??_main_menu 002E  
                        _INTCONbits 0FF2              __end_of_welcome_splash 191A  
                 LCD_write_string@i 000A                            intlevel2 0000  
                         sprintf@ap 001D                    ___lwmod@dividend 0003  
                       ??_tmr1_init 0003                          _RCSTA1bits 0FAB  
                    ?_print_AI_Temp 0001             welcome_splash@plug_flag 001E  
                      _print_ELMVer 2466                        _print_SAEVer 2424  
                        _UART1_Init 25C0                         ??_print_RPM 0029  
                       ??_vfpfcnvrt 000E                            sprintf@f 001E  
                          sprintf@s 0019                     ___lwmod@divisor 0005  
                      _A_air_intake 003A                     ___lwmod@counter 0007  
                      ___aldiv@sign 000C                     ?_welcome_splash 0001  
                       _print_Vbatt 1F82                        ___almod@sign 000C  
                  ?_LCD_pulse_clock 0001  
