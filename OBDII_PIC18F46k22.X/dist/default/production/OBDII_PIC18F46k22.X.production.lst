

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 22 18:32:59 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F46K22 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000FE0                     bsr             equ	4064
    59   000FE9                     fsr0            equ	4073
    60   000FEA                     fsr0h           equ	4074
    61   000FE9                     fsr0l           equ	4073
    62   000FE1                     fsr1            equ	4065
    63   000FE2                     fsr1h           equ	4066
    64   000FE1                     fsr1l           equ	4065
    65   000FD9                     fsr2            equ	4057
    66   000FDA                     fsr2h           equ	4058
    67   000FD9                     fsr2l           equ	4057
    68   000FEF                     indf0           equ	4079
    69   000FE7                     indf1           equ	4071
    70   000FDF                     indf2           equ	4063
    71   000FF2                     intcon          equ	4082
    72   000000                     nvmcon          equ	0
    73   000FF9                     pcl             equ	4089
    74   000FFA                     pclath          equ	4090
    75   000FFB                     pclatu          equ	4091
    76   000FEB                     plusw0          equ	4075
    77   000FE3                     plusw1          equ	4067
    78   000FDB                     plusw2          equ	4059
    79   000FED                     postdec0        equ	4077
    80   000FE5                     postdec1        equ	4069
    81   000FDD                     postdec2        equ	4061
    82   000FEE                     postinc0        equ	4078
    83   000FE6                     postinc1        equ	4070
    84   000FDE                     postinc2        equ	4062
    85   000FEC                     preinc0         equ	4076
    86   000FE4                     preinc1         equ	4068
    87   000FDC                     preinc2         equ	4060
    88   000FF3                     prod            equ	4083
    89   000FF4                     prodh           equ	4084
    90   000FF3                     prodl           equ	4083
    91   000FD8                     status          equ	4056
    92   000FF5                     tablat          equ	4085
    93   000FF6                     tblptr          equ	4086
    94   000FF7                     tblptrh         equ	4087
    95   000FF6                     tblptrl         equ	4086
    96   000FF8                     tblptru         equ	4088
    97   000FFD                     tosl            equ	4093
    98   000FE8                     wreg            equ	4072
    99   000F38                     ANSELA          equ	3896	;# 
   100   000F39                     ANSELB          equ	3897	;# 
   101   000F3A                     ANSELC          equ	3898	;# 
   102   000F3B                     ANSELD          equ	3899	;# 
   103   000F3C                     ANSELE          equ	3900	;# 
   104   000F3D                     PMD2            equ	3901	;# 
   105   000F3E                     PMD1            equ	3902	;# 
   106   000F3F                     PMD0            equ	3903	;# 
   107   000F40                     VREFCON2        equ	3904	;# 
   108   000F40                     DACCON1         equ	3904	;# 
   109   000F41                     VREFCON1        equ	3905	;# 
   110   000F41                     DACCON0         equ	3905	;# 
   111   000F42                     VREFCON0        equ	3906	;# 
   112   000F42                     FVRCON          equ	3906	;# 
   113   000F43                     CTMUICON        equ	3907	;# 
   114   000F43                     CTMUICONH       equ	3907	;# 
   115   000F44                     CTMUCONL        equ	3908	;# 
   116   000F44                     CTMUCON1        equ	3908	;# 
   117   000F45                     CTMUCONH        equ	3909	;# 
   118   000F45                     CTMUCON0        equ	3909	;# 
   119   000F46                     SRCON1          equ	3910	;# 
   120   000F47                     SRCON0          equ	3911	;# 
   121   000F48                     CCPTMRS1        equ	3912	;# 
   122   000F49                     CCPTMRS0        equ	3913	;# 
   123   000F4A                     T6CON           equ	3914	;# 
   124   000F4B                     PR6             equ	3915	;# 
   125   000F4C                     TMR6            equ	3916	;# 
   126   000F4D                     T5GCON          equ	3917	;# 
   127   000F4E                     T5CON           equ	3918	;# 
   128   000F4F                     TMR5            equ	3919	;# 
   129   000F4F                     TMR5L           equ	3919	;# 
   130   000F50                     TMR5H           equ	3920	;# 
   131   000F51                     T4CON           equ	3921	;# 
   132   000F52                     PR4             equ	3922	;# 
   133   000F53                     TMR4            equ	3923	;# 
   134   000F54                     CCP5CON         equ	3924	;# 
   135   000F55                     CCPR5           equ	3925	;# 
   136   000F55                     CCPR5L          equ	3925	;# 
   137   000F56                     CCPR5H          equ	3926	;# 
   138   000F57                     CCP4CON         equ	3927	;# 
   139   000F58                     CCPR4           equ	3928	;# 
   140   000F58                     CCPR4L          equ	3928	;# 
   141   000F59                     CCPR4H          equ	3929	;# 
   142   000F5A                     PSTR3CON        equ	3930	;# 
   143   000F5B                     ECCP3AS         equ	3931	;# 
   144   000F5B                     CCP3AS          equ	3931	;# 
   145   000F5C                     PWM3CON         equ	3932	;# 
   146   000F5D                     CCP3CON         equ	3933	;# 
   147   000F5E                     CCPR3           equ	3934	;# 
   148   000F5E                     CCPR3L          equ	3934	;# 
   149   000F5F                     CCPR3H          equ	3935	;# 
   150   000F60                     SLRCON          equ	3936	;# 
   151   000F61                     WPUB            equ	3937	;# 
   152   000F62                     IOCB            equ	3938	;# 
   153   000F63                     PSTR2CON        equ	3939	;# 
   154   000F64                     ECCP2AS         equ	3940	;# 
   155   000F64                     CCP2AS          equ	3940	;# 
   156   000F65                     PWM2CON         equ	3941	;# 
   157   000F66                     CCP2CON         equ	3942	;# 
   158   000F67                     CCPR2           equ	3943	;# 
   159   000F67                     CCPR2L          equ	3943	;# 
   160   000F68                     CCPR2H          equ	3944	;# 
   161   000F69                     SSP2CON3        equ	3945	;# 
   162   000F6A                     SSP2MSK         equ	3946	;# 
   163   000F6B                     SSP2CON2        equ	3947	;# 
   164   000F6C                     SSP2CON1        equ	3948	;# 
   165   000F6D                     SSP2STAT        equ	3949	;# 
   166   000F6E                     SSP2ADD         equ	3950	;# 
   167   000F6F                     SSP2BUF         equ	3951	;# 
   168   000F70                     BAUDCON2        equ	3952	;# 
   169   000F70                     BAUD2CON        equ	3952	;# 
   170   000F71                     RCSTA2          equ	3953	;# 
   171   000F71                     RC2STA          equ	3953	;# 
   172   000F72                     TXSTA2          equ	3954	;# 
   173   000F72                     TX2STA          equ	3954	;# 
   174   000F73                     TXREG2          equ	3955	;# 
   175   000F73                     TX2REG          equ	3955	;# 
   176   000F74                     RCREG2          equ	3956	;# 
   177   000F74                     RC2REG          equ	3956	;# 
   178   000F75                     SPBRG2          equ	3957	;# 
   179   000F75                     SP2BRG          equ	3957	;# 
   180   000F76                     SPBRGH2         equ	3958	;# 
   181   000F76                     SP2BRGH         equ	3958	;# 
   182   000F77                     CM2CON1         equ	3959	;# 
   183   000F77                     CM12CON         equ	3959	;# 
   184   000F78                     CM2CON0         equ	3960	;# 
   185   000F78                     CM2CON          equ	3960	;# 
   186   000F79                     CM1CON0         equ	3961	;# 
   187   000F79                     CM1CON          equ	3961	;# 
   188   000F7A                     PIE4            equ	3962	;# 
   189   000F7B                     PIR4            equ	3963	;# 
   190   000F7C                     IPR4            equ	3964	;# 
   191   000F7D                     PIE5            equ	3965	;# 
   192   000F7E                     PIR5            equ	3966	;# 
   193   000F7F                     IPR5            equ	3967	;# 
   194   000F80                     PORTA           equ	3968	;# 
   195   000F81                     PORTB           equ	3969	;# 
   196   000F82                     PORTC           equ	3970	;# 
   197   000F83                     PORTD           equ	3971	;# 
   198   000F84                     PORTE           equ	3972	;# 
   199   000F89                     LATA            equ	3977	;# 
   200   000F8A                     LATB            equ	3978	;# 
   201   000F8B                     LATC            equ	3979	;# 
   202   000F8C                     LATD            equ	3980	;# 
   203   000F8D                     LATE            equ	3981	;# 
   204   000F92                     TRISA           equ	3986	;# 
   205   000F92                     DDRA            equ	3986	;# 
   206   000F93                     TRISB           equ	3987	;# 
   207   000F93                     DDRB            equ	3987	;# 
   208   000F94                     TRISC           equ	3988	;# 
   209   000F94                     DDRC            equ	3988	;# 
   210   000F95                     TRISD           equ	3989	;# 
   211   000F95                     DDRD            equ	3989	;# 
   212   000F96                     TRISE           equ	3990	;# 
   213   000F96                     DDRE            equ	3990	;# 
   214   000F9B                     OSCTUNE         equ	3995	;# 
   215   000F9C                     HLVDCON         equ	3996	;# 
   216   000F9C                     LVDCON          equ	3996	;# 
   217   000F9D                     PIE1            equ	3997	;# 
   218   000F9E                     PIR1            equ	3998	;# 
   219   000F9F                     IPR1            equ	3999	;# 
   220   000FA0                     PIE2            equ	4000	;# 
   221   000FA1                     PIR2            equ	4001	;# 
   222   000FA2                     IPR2            equ	4002	;# 
   223   000FA3                     PIE3            equ	4003	;# 
   224   000FA4                     PIR3            equ	4004	;# 
   225   000FA5                     IPR3            equ	4005	;# 
   226   000FA6                     EECON1          equ	4006	;# 
   227   000FA7                     EECON2          equ	4007	;# 
   228   000FA8                     EEDATA          equ	4008	;# 
   229   000FA9                     EEADR           equ	4009	;# 
   230   000FAA                     EEADRH          equ	4010	;# 
   231   000FAB                     RCSTA1          equ	4011	;# 
   232   000FAB                     RCSTA           equ	4011	;# 
   233   000FAB                     RC1STA          equ	4011	;# 
   234   000FAC                     TXSTA1          equ	4012	;# 
   235   000FAC                     TXSTA           equ	4012	;# 
   236   000FAC                     TX1STA          equ	4012	;# 
   237   000FAD                     TXREG1          equ	4013	;# 
   238   000FAD                     TXREG           equ	4013	;# 
   239   000FAD                     TX1REG          equ	4013	;# 
   240   000FAE                     RCREG1          equ	4014	;# 
   241   000FAE                     RCREG           equ	4014	;# 
   242   000FAE                     RC1REG          equ	4014	;# 
   243   000FAF                     SPBRG1          equ	4015	;# 
   244   000FAF                     SPBRG           equ	4015	;# 
   245   000FAF                     SP1BRG          equ	4015	;# 
   246   000FB0                     SPBRGH1         equ	4016	;# 
   247   000FB0                     SPBRGH          equ	4016	;# 
   248   000FB0                     SP1BRGH         equ	4016	;# 
   249   000FB1                     T3CON           equ	4017	;# 
   250   000FB2                     TMR3            equ	4018	;# 
   251   000FB2                     TMR3L           equ	4018	;# 
   252   000FB3                     TMR3H           equ	4019	;# 
   253   000FB4                     T3GCON          equ	4020	;# 
   254   000FB6                     ECCP1AS         equ	4022	;# 
   255   000FB6                     ECCPAS          equ	4022	;# 
   256   000FB7                     PWM1CON         equ	4023	;# 
   257   000FB7                     PWMCON          equ	4023	;# 
   258   000FB8                     BAUDCON1        equ	4024	;# 
   259   000FB8                     BAUDCON         equ	4024	;# 
   260   000FB8                     BAUDCTL         equ	4024	;# 
   261   000FB8                     BAUD1CON        equ	4024	;# 
   262   000FB9                     PSTR1CON        equ	4025	;# 
   263   000FB9                     PSTRCON         equ	4025	;# 
   264   000FBA                     T2CON           equ	4026	;# 
   265   000FBB                     PR2             equ	4027	;# 
   266   000FBC                     TMR2            equ	4028	;# 
   267   000FBD                     CCP1CON         equ	4029	;# 
   268   000FBE                     CCPR1           equ	4030	;# 
   269   000FBE                     CCPR1L          equ	4030	;# 
   270   000FBF                     CCPR1H          equ	4031	;# 
   271   000FC0                     ADCON2          equ	4032	;# 
   272   000FC1                     ADCON1          equ	4033	;# 
   273   000FC2                     ADCON0          equ	4034	;# 
   274   000FC3                     ADRES           equ	4035	;# 
   275   000FC3                     ADRESL          equ	4035	;# 
   276   000FC4                     ADRESH          equ	4036	;# 
   277   000FC5                     SSP1CON2        equ	4037	;# 
   278   000FC5                     SSPCON2         equ	4037	;# 
   279   000FC6                     SSP1CON1        equ	4038	;# 
   280   000FC6                     SSPCON1         equ	4038	;# 
   281   000FC7                     SSP1STAT        equ	4039	;# 
   282   000FC7                     SSPSTAT         equ	4039	;# 
   283   000FC8                     SSP1ADD         equ	4040	;# 
   284   000FC8                     SSPADD          equ	4040	;# 
   285   000FC9                     SSP1BUF         equ	4041	;# 
   286   000FC9                     SSPBUF          equ	4041	;# 
   287   000FCA                     SSP1MSK         equ	4042	;# 
   288   000FCA                     SSPMSK          equ	4042	;# 
   289   000FCB                     SSP1CON3        equ	4043	;# 
   290   000FCB                     SSPCON3         equ	4043	;# 
   291   000FCC                     T1GCON          equ	4044	;# 
   292   000FCD                     T1CON           equ	4045	;# 
   293   000FCE                     TMR1            equ	4046	;# 
   294   000FCE                     TMR1L           equ	4046	;# 
   295   000FCF                     TMR1H           equ	4047	;# 
   296   000FD0                     RCON            equ	4048	;# 
   297   000FD1                     WDTCON          equ	4049	;# 
   298   000FD2                     OSCCON2         equ	4050	;# 
   299   000FD3                     OSCCON          equ	4051	;# 
   300   000FD5                     T0CON           equ	4053	;# 
   301   000FD6                     TMR0            equ	4054	;# 
   302   000FD6                     TMR0L           equ	4054	;# 
   303   000FD7                     TMR0H           equ	4055	;# 
   304   000FD8                     STATUS          equ	4056	;# 
   305   000FD9                     FSR2            equ	4057	;# 
   306   000FD9                     FSR2L           equ	4057	;# 
   307   000FDA                     FSR2H           equ	4058	;# 
   308   000FDB                     PLUSW2          equ	4059	;# 
   309   000FDC                     PREINC2         equ	4060	;# 
   310   000FDD                     POSTDEC2        equ	4061	;# 
   311   000FDE                     POSTINC2        equ	4062	;# 
   312   000FDF                     INDF2           equ	4063	;# 
   313   000FE0                     BSR             equ	4064	;# 
   314   000FE1                     FSR1            equ	4065	;# 
   315   000FE1                     FSR1L           equ	4065	;# 
   316   000FE2                     FSR1H           equ	4066	;# 
   317   000FE3                     PLUSW1          equ	4067	;# 
   318   000FE4                     PREINC1         equ	4068	;# 
   319   000FE5                     POSTDEC1        equ	4069	;# 
   320   000FE6                     POSTINC1        equ	4070	;# 
   321   000FE7                     INDF1           equ	4071	;# 
   322   000FE8                     WREG            equ	4072	;# 
   323   000FE9                     FSR0            equ	4073	;# 
   324   000FE9                     FSR0L           equ	4073	;# 
   325   000FEA                     FSR0H           equ	4074	;# 
   326   000FEB                     PLUSW0          equ	4075	;# 
   327   000FEC                     PREINC0         equ	4076	;# 
   328   000FED                     POSTDEC0        equ	4077	;# 
   329   000FEE                     POSTINC0        equ	4078	;# 
   330   000FEF                     INDF0           equ	4079	;# 
   331   000FF0                     INTCON3         equ	4080	;# 
   332   000FF1                     INTCON2         equ	4081	;# 
   333   000FF2                     INTCON          equ	4082	;# 
   334   000FF3                     PROD            equ	4083	;# 
   335   000FF3                     PRODL           equ	4083	;# 
   336   000FF4                     PRODH           equ	4084	;# 
   337   000FF5                     TABLAT          equ	4085	;# 
   338   000FF6                     TBLPTR          equ	4086	;# 
   339   000FF6                     TBLPTRL         equ	4086	;# 
   340   000FF7                     TBLPTRH         equ	4087	;# 
   341   000FF8                     TBLPTRU         equ	4088	;# 
   342   000FF9                     PCLAT           equ	4089	;# 
   343   000FF9                     PC              equ	4089	;# 
   344   000FF9                     PCL             equ	4089	;# 
   345   000FFA                     PCLATH          equ	4090	;# 
   346   000FFB                     PCLATU          equ	4091	;# 
   347   000FFC                     STKPTR          equ	4092	;# 
   348   000FFD                     TOS             equ	4093	;# 
   349   000FFD                     TOSL            equ	4093	;# 
   350   000FFE                     TOSH            equ	4094	;# 
   351   000FFF                     TOSU            equ	4095	;# 
   352   000F38                     ANSELA          equ	3896	;# 
   353   000F39                     ANSELB          equ	3897	;# 
   354   000F3A                     ANSELC          equ	3898	;# 
   355   000F3B                     ANSELD          equ	3899	;# 
   356   000F3C                     ANSELE          equ	3900	;# 
   357   000F3D                     PMD2            equ	3901	;# 
   358   000F3E                     PMD1            equ	3902	;# 
   359   000F3F                     PMD0            equ	3903	;# 
   360   000F40                     VREFCON2        equ	3904	;# 
   361   000F40                     DACCON1         equ	3904	;# 
   362   000F41                     VREFCON1        equ	3905	;# 
   363   000F41                     DACCON0         equ	3905	;# 
   364   000F42                     VREFCON0        equ	3906	;# 
   365   000F42                     FVRCON          equ	3906	;# 
   366   000F43                     CTMUICON        equ	3907	;# 
   367   000F43                     CTMUICONH       equ	3907	;# 
   368   000F44                     CTMUCONL        equ	3908	;# 
   369   000F44                     CTMUCON1        equ	3908	;# 
   370   000F45                     CTMUCONH        equ	3909	;# 
   371   000F45                     CTMUCON0        equ	3909	;# 
   372   000F46                     SRCON1          equ	3910	;# 
   373   000F47                     SRCON0          equ	3911	;# 
   374   000F48                     CCPTMRS1        equ	3912	;# 
   375   000F49                     CCPTMRS0        equ	3913	;# 
   376   000F4A                     T6CON           equ	3914	;# 
   377   000F4B                     PR6             equ	3915	;# 
   378   000F4C                     TMR6            equ	3916	;# 
   379   000F4D                     T5GCON          equ	3917	;# 
   380   000F4E                     T5CON           equ	3918	;# 
   381   000F4F                     TMR5            equ	3919	;# 
   382   000F4F                     TMR5L           equ	3919	;# 
   383   000F50                     TMR5H           equ	3920	;# 
   384   000F51                     T4CON           equ	3921	;# 
   385   000F52                     PR4             equ	3922	;# 
   386   000F53                     TMR4            equ	3923	;# 
   387   000F54                     CCP5CON         equ	3924	;# 
   388   000F55                     CCPR5           equ	3925	;# 
   389   000F55                     CCPR5L          equ	3925	;# 
   390   000F56                     CCPR5H          equ	3926	;# 
   391   000F57                     CCP4CON         equ	3927	;# 
   392   000F58                     CCPR4           equ	3928	;# 
   393   000F58                     CCPR4L          equ	3928	;# 
   394   000F59                     CCPR4H          equ	3929	;# 
   395   000F5A                     PSTR3CON        equ	3930	;# 
   396   000F5B                     ECCP3AS         equ	3931	;# 
   397   000F5B                     CCP3AS          equ	3931	;# 
   398   000F5C                     PWM3CON         equ	3932	;# 
   399   000F5D                     CCP3CON         equ	3933	;# 
   400   000F5E                     CCPR3           equ	3934	;# 
   401   000F5E                     CCPR3L          equ	3934	;# 
   402   000F5F                     CCPR3H          equ	3935	;# 
   403   000F60                     SLRCON          equ	3936	;# 
   404   000F61                     WPUB            equ	3937	;# 
   405   000F62                     IOCB            equ	3938	;# 
   406   000F63                     PSTR2CON        equ	3939	;# 
   407   000F64                     ECCP2AS         equ	3940	;# 
   408   000F64                     CCP2AS          equ	3940	;# 
   409   000F65                     PWM2CON         equ	3941	;# 
   410   000F66                     CCP2CON         equ	3942	;# 
   411   000F67                     CCPR2           equ	3943	;# 
   412   000F67                     CCPR2L          equ	3943	;# 
   413   000F68                     CCPR2H          equ	3944	;# 
   414   000F69                     SSP2CON3        equ	3945	;# 
   415   000F6A                     SSP2MSK         equ	3946	;# 
   416   000F6B                     SSP2CON2        equ	3947	;# 
   417   000F6C                     SSP2CON1        equ	3948	;# 
   418   000F6D                     SSP2STAT        equ	3949	;# 
   419   000F6E                     SSP2ADD         equ	3950	;# 
   420   000F6F                     SSP2BUF         equ	3951	;# 
   421   000F70                     BAUDCON2        equ	3952	;# 
   422   000F70                     BAUD2CON        equ	3952	;# 
   423   000F71                     RCSTA2          equ	3953	;# 
   424   000F71                     RC2STA          equ	3953	;# 
   425   000F72                     TXSTA2          equ	3954	;# 
   426   000F72                     TX2STA          equ	3954	;# 
   427   000F73                     TXREG2          equ	3955	;# 
   428   000F73                     TX2REG          equ	3955	;# 
   429   000F74                     RCREG2          equ	3956	;# 
   430   000F74                     RC2REG          equ	3956	;# 
   431   000F75                     SPBRG2          equ	3957	;# 
   432   000F75                     SP2BRG          equ	3957	;# 
   433   000F76                     SPBRGH2         equ	3958	;# 
   434   000F76                     SP2BRGH         equ	3958	;# 
   435   000F77                     CM2CON1         equ	3959	;# 
   436   000F77                     CM12CON         equ	3959	;# 
   437   000F78                     CM2CON0         equ	3960	;# 
   438   000F78                     CM2CON          equ	3960	;# 
   439   000F79                     CM1CON0         equ	3961	;# 
   440   000F79                     CM1CON          equ	3961	;# 
   441   000F7A                     PIE4            equ	3962	;# 
   442   000F7B                     PIR4            equ	3963	;# 
   443   000F7C                     IPR4            equ	3964	;# 
   444   000F7D                     PIE5            equ	3965	;# 
   445   000F7E                     PIR5            equ	3966	;# 
   446   000F7F                     IPR5            equ	3967	;# 
   447   000F80                     PORTA           equ	3968	;# 
   448   000F81                     PORTB           equ	3969	;# 
   449   000F82                     PORTC           equ	3970	;# 
   450   000F83                     PORTD           equ	3971	;# 
   451   000F84                     PORTE           equ	3972	;# 
   452   000F89                     LATA            equ	3977	;# 
   453   000F8A                     LATB            equ	3978	;# 
   454   000F8B                     LATC            equ	3979	;# 
   455   000F8C                     LATD            equ	3980	;# 
   456   000F8D                     LATE            equ	3981	;# 
   457   000F92                     TRISA           equ	3986	;# 
   458   000F92                     DDRA            equ	3986	;# 
   459   000F93                     TRISB           equ	3987	;# 
   460   000F93                     DDRB            equ	3987	;# 
   461   000F94                     TRISC           equ	3988	;# 
   462   000F94                     DDRC            equ	3988	;# 
   463   000F95                     TRISD           equ	3989	;# 
   464   000F95                     DDRD            equ	3989	;# 
   465   000F96                     TRISE           equ	3990	;# 
   466   000F96                     DDRE            equ	3990	;# 
   467   000F9B                     OSCTUNE         equ	3995	;# 
   468   000F9C                     HLVDCON         equ	3996	;# 
   469   000F9C                     LVDCON          equ	3996	;# 
   470   000F9D                     PIE1            equ	3997	;# 
   471   000F9E                     PIR1            equ	3998	;# 
   472   000F9F                     IPR1            equ	3999	;# 
   473   000FA0                     PIE2            equ	4000	;# 
   474   000FA1                     PIR2            equ	4001	;# 
   475   000FA2                     IPR2            equ	4002	;# 
   476   000FA3                     PIE3            equ	4003	;# 
   477   000FA4                     PIR3            equ	4004	;# 
   478   000FA5                     IPR3            equ	4005	;# 
   479   000FA6                     EECON1          equ	4006	;# 
   480   000FA7                     EECON2          equ	4007	;# 
   481   000FA8                     EEDATA          equ	4008	;# 
   482   000FA9                     EEADR           equ	4009	;# 
   483   000FAA                     EEADRH          equ	4010	;# 
   484   000FAB                     RCSTA1          equ	4011	;# 
   485   000FAB                     RCSTA           equ	4011	;# 
   486   000FAB                     RC1STA          equ	4011	;# 
   487   000FAC                     TXSTA1          equ	4012	;# 
   488   000FAC                     TXSTA           equ	4012	;# 
   489   000FAC                     TX1STA          equ	4012	;# 
   490   000FAD                     TXREG1          equ	4013	;# 
   491   000FAD                     TXREG           equ	4013	;# 
   492   000FAD                     TX1REG          equ	4013	;# 
   493   000FAE                     RCREG1          equ	4014	;# 
   494   000FAE                     RCREG           equ	4014	;# 
   495   000FAE                     RC1REG          equ	4014	;# 
   496   000FAF                     SPBRG1          equ	4015	;# 
   497   000FAF                     SPBRG           equ	4015	;# 
   498   000FAF                     SP1BRG          equ	4015	;# 
   499   000FB0                     SPBRGH1         equ	4016	;# 
   500   000FB0                     SPBRGH          equ	4016	;# 
   501   000FB0                     SP1BRGH         equ	4016	;# 
   502   000FB1                     T3CON           equ	4017	;# 
   503   000FB2                     TMR3            equ	4018	;# 
   504   000FB2                     TMR3L           equ	4018	;# 
   505   000FB3                     TMR3H           equ	4019	;# 
   506   000FB4                     T3GCON          equ	4020	;# 
   507   000FB6                     ECCP1AS         equ	4022	;# 
   508   000FB6                     ECCPAS          equ	4022	;# 
   509   000FB7                     PWM1CON         equ	4023	;# 
   510   000FB7                     PWMCON          equ	4023	;# 
   511   000FB8                     BAUDCON1        equ	4024	;# 
   512   000FB8                     BAUDCON         equ	4024	;# 
   513   000FB8                     BAUDCTL         equ	4024	;# 
   514   000FB8                     BAUD1CON        equ	4024	;# 
   515   000FB9                     PSTR1CON        equ	4025	;# 
   516   000FB9                     PSTRCON         equ	4025	;# 
   517   000FBA                     T2CON           equ	4026	;# 
   518   000FBB                     PR2             equ	4027	;# 
   519   000FBC                     TMR2            equ	4028	;# 
   520   000FBD                     CCP1CON         equ	4029	;# 
   521   000FBE                     CCPR1           equ	4030	;# 
   522   000FBE                     CCPR1L          equ	4030	;# 
   523   000FBF                     CCPR1H          equ	4031	;# 
   524   000FC0                     ADCON2          equ	4032	;# 
   525   000FC1                     ADCON1          equ	4033	;# 
   526   000FC2                     ADCON0          equ	4034	;# 
   527   000FC3                     ADRES           equ	4035	;# 
   528   000FC3                     ADRESL          equ	4035	;# 
   529   000FC4                     ADRESH          equ	4036	;# 
   530   000FC5                     SSP1CON2        equ	4037	;# 
   531   000FC5                     SSPCON2         equ	4037	;# 
   532   000FC6                     SSP1CON1        equ	4038	;# 
   533   000FC6                     SSPCON1         equ	4038	;# 
   534   000FC7                     SSP1STAT        equ	4039	;# 
   535   000FC7                     SSPSTAT         equ	4039	;# 
   536   000FC8                     SSP1ADD         equ	4040	;# 
   537   000FC8                     SSPADD          equ	4040	;# 
   538   000FC9                     SSP1BUF         equ	4041	;# 
   539   000FC9                     SSPBUF          equ	4041	;# 
   540   000FCA                     SSP1MSK         equ	4042	;# 
   541   000FCA                     SSPMSK          equ	4042	;# 
   542   000FCB                     SSP1CON3        equ	4043	;# 
   543   000FCB                     SSPCON3         equ	4043	;# 
   544   000FCC                     T1GCON          equ	4044	;# 
   545   000FCD                     T1CON           equ	4045	;# 
   546   000FCE                     TMR1            equ	4046	;# 
   547   000FCE                     TMR1L           equ	4046	;# 
   548   000FCF                     TMR1H           equ	4047	;# 
   549   000FD0                     RCON            equ	4048	;# 
   550   000FD1                     WDTCON          equ	4049	;# 
   551   000FD2                     OSCCON2         equ	4050	;# 
   552   000FD3                     OSCCON          equ	4051	;# 
   553   000FD5                     T0CON           equ	4053	;# 
   554   000FD6                     TMR0            equ	4054	;# 
   555   000FD6                     TMR0L           equ	4054	;# 
   556   000FD7                     TMR0H           equ	4055	;# 
   557   000FD8                     STATUS          equ	4056	;# 
   558   000FD9                     FSR2            equ	4057	;# 
   559   000FD9                     FSR2L           equ	4057	;# 
   560   000FDA                     FSR2H           equ	4058	;# 
   561   000FDB                     PLUSW2          equ	4059	;# 
   562   000FDC                     PREINC2         equ	4060	;# 
   563   000FDD                     POSTDEC2        equ	4061	;# 
   564   000FDE                     POSTINC2        equ	4062	;# 
   565   000FDF                     INDF2           equ	4063	;# 
   566   000FE0                     BSR             equ	4064	;# 
   567   000FE1                     FSR1            equ	4065	;# 
   568   000FE1                     FSR1L           equ	4065	;# 
   569   000FE2                     FSR1H           equ	4066	;# 
   570   000FE3                     PLUSW1          equ	4067	;# 
   571   000FE4                     PREINC1         equ	4068	;# 
   572   000FE5                     POSTDEC1        equ	4069	;# 
   573   000FE6                     POSTINC1        equ	4070	;# 
   574   000FE7                     INDF1           equ	4071	;# 
   575   000FE8                     WREG            equ	4072	;# 
   576   000FE9                     FSR0            equ	4073	;# 
   577   000FE9                     FSR0L           equ	4073	;# 
   578   000FEA                     FSR0H           equ	4074	;# 
   579   000FEB                     PLUSW0          equ	4075	;# 
   580   000FEC                     PREINC0         equ	4076	;# 
   581   000FED                     POSTDEC0        equ	4077	;# 
   582   000FEE                     POSTINC0        equ	4078	;# 
   583   000FEF                     INDF0           equ	4079	;# 
   584   000FF0                     INTCON3         equ	4080	;# 
   585   000FF1                     INTCON2         equ	4081	;# 
   586   000FF2                     INTCON          equ	4082	;# 
   587   000FF3                     PROD            equ	4083	;# 
   588   000FF3                     PRODL           equ	4083	;# 
   589   000FF4                     PRODH           equ	4084	;# 
   590   000FF5                     TABLAT          equ	4085	;# 
   591   000FF6                     TBLPTR          equ	4086	;# 
   592   000FF6                     TBLPTRL         equ	4086	;# 
   593   000FF7                     TBLPTRH         equ	4087	;# 
   594   000FF8                     TBLPTRU         equ	4088	;# 
   595   000FF9                     PCLAT           equ	4089	;# 
   596   000FF9                     PC              equ	4089	;# 
   597   000FF9                     PCL             equ	4089	;# 
   598   000FFA                     PCLATH          equ	4090	;# 
   599   000FFB                     PCLATU          equ	4091	;# 
   600   000FFC                     STKPTR          equ	4092	;# 
   601   000FFD                     TOS             equ	4093	;# 
   602   000FFD                     TOSL            equ	4093	;# 
   603   000FFE                     TOSH            equ	4094	;# 
   604   000FFF                     TOSU            equ	4095	;# 
   605                           
   606                           	psect	idataCOMRAM
   607   0013D4                     __pidataCOMRAM:
   608                           	callstack 0
   609                           
   610                           ;initializer for _LCD_entry_mode
   611   0013D4  06                 	db	6
   612                           
   613                           ;initializer for _LCD_display_control
   614   0013D5  0C                 	db	12
   615   000F95                     _TRISDbits      set	3989
   616   000F8C                     _LATDbits       set	3980
   617   000F9B                     _OSCTUNEbits    set	3995
   618   000FD3                     _OSCCON         set	4051
   619                           
   620                           	psect	smallconst
   621   001000                     __psmallconst:
   622                           	callstack 0
   623   001000  00                 	db	0
   624   001001                     STR_1:
   625   001001  2A                 	db	42
   626   001002  2A                 	db	42
   627   001003  2A                 	db	42
   628   001004  20                 	db	32
   629   001005  4F                 	db	79	;'O'
   630   001006  42                 	db	66	;'B'
   631   001007  44                 	db	68	;'D'
   632   001008  49                 	db	73	;'I'
   633   001009  49                 	db	73	;'I'
   634   00100A  50                 	db	80	;'P'
   635   00100B  49                 	db	73	;'I'
   636   00100C  43                 	db	67	;'C'
   637   00100D  20                 	db	32
   638   00100E  2A                 	db	42
   639   00100F  2A                 	db	42
   640   001010  2A                 	db	42
   641   001011  00                 	db	0
   642   001012                     STR_2:
   643   001012  45                 	db	69	;'E'
   644   001013  43                 	db	67	;'C'
   645   001014  45                 	db	69	;'E'
   646   001015  33                 	db	51	;'3'
   647   001016  33                 	db	51	;'3'
   648   001017  30                 	db	48	;'0'
   649   001018  31                 	db	49	;'1'
   650   001019  4C                 	db	76	;'L'
   651   00101A  20                 	db	32
   652   00101B  50                 	db	80	;'P'
   653   00101C  72                 	db	114	;'r'
   654   00101D  6F                 	db	111	;'o'
   655   00101E  6A                 	db	106	;'j'
   656   00101F  65                 	db	101	;'e'
   657   001020  63                 	db	99	;'c'
   658   001021  74                 	db	116	;'t'
   659   001022  00                 	db	0
   660   001023  00                 	db	0	; dummy byte at the end
   661   001000                     __smallconst    set	__psmallconst
   662   001000                     __mediumconst   set	__psmallconst
   663   000001                     __activetblptr  equ	1
   664                           
   665                           ; #config settings
   666                           
   667                           	psect	cinit
   668   00133A                     __pcinit:
   669                           	callstack 0
   670   00133A                     start_initialization:
   671                           	callstack 0
   672   00133A                     __initialization:
   673                           	callstack 0
   674                           
   675                           ; Initialize objects allocated to COMRAM (2 bytes)
   676                           ; load TBLPTR registers with __pidataCOMRAM
   677   00133A  0ED4               	movlw	low __pidataCOMRAM
   678   00133C  6EF6               	movwf	tblptrl,c
   679   00133E  0E13               	movlw	high __pidataCOMRAM
   680   001340  6EF7               	movwf	tblptrh,c
   681   001342  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   682   001344  6EF8               	movwf	tblptru,c
   683   001346  0009               	tblrd		*+	;fetch initializer
   684   001348  CFF5 F00B          	movff	tablat,__pdataCOMRAM
   685   00134C  0009               	tblrd		*+	;fetch initializer
   686   00134E  CFF5 F00C          	movff	tablat,__pdataCOMRAM+1
   687                           
   688                           ; Clear objects allocated to COMRAM (4 bytes)
   689   001352  6A0A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   690   001354  6A09               	clrf	(__pbssCOMRAM+2)& (0+255),c
   691   001356  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
   692   001358  6A07               	clrf	__pbssCOMRAM& (0+255),c
   693   00135A                     end_of_initialization:
   694                           	callstack 0
   695   00135A                     __end_of__initialization:
   696                           	callstack 0
   697   00135A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   698   00135C  6EF8               	movwf	tblptru,c
   699   00135E  0E10               	movlw	high __Lsmallconst
   700   001360  6EF7               	movwf	tblptrh,c
   701   001362  0100               	movlb	0
   702   001364  EFD6  F009         	goto	_main	;jump to C main() function
   703                           
   704                           	psect	bssCOMRAM
   705   000007                     __pbssCOMRAM:
   706                           	callstack 0
   707   000007                     	ds	4
   708                           
   709                           	psect	dataCOMRAM
   710   00000B                     __pdataCOMRAM:
   711                           	callstack 0
   712   00000B                     _LCD_entry_mode:
   713                           	callstack 0
   714   00000B                     	ds	1
   715   00000C                     _LCD_display_control:
   716                           	callstack 0
   717   00000C                     	ds	1
   718                           
   719                           	psect	cstackCOMRAM
   720   000001                     __pcstackCOMRAM:
   721                           	callstack 0
   722   000001                     ??_LCD_write_command:
   723   000001                     ??_LCD_write_data:
   724                           
   725                           ; 1 bytes @ 0x0
   726   000001                     	ds	2
   727   000003                     LCD_write_command@command:
   728                           	callstack 0
   729   000003                     LCD_write_data@data:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x2
   733   000003                     	ds	1
   734   000004                     LCD_cursor_set@column:
   735                           	callstack 0
   736   000004                     LCD_write_string@string:
   737                           	callstack 0
   738   000004                     ??_LCD_clear:
   739                           
   740                           ; 1 bytes @ 0x3
   741   000004                     	ds	1
   742   000005                     LCD_cursor_set@row:
   743                           	callstack 0
   744   000005                     ??_LCD_write_string:
   745   000005                     ??_LCD_init:
   746                           
   747                           ; 1 bytes @ 0x4
   748   000005                     	ds	1
   749   000006                     LCD_write_string@i:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x5
   753   000006                     	ds	1
   754   000007                     
   755                           ; 1 bytes @ 0x6
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 18 in file "OBCII_PIC18F46K22.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels required when called: 4
   781 ;; This function calls:
   782 ;;		_LCD_clear
   783 ;;		_LCD_init
   784 ;;		_welcomeSplash
   785 ;; This function is called by:
   786 ;;		Startup code after reset
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text0
   791   0013AC                     __ptext0:
   792                           	callstack 0
   793   0013AC                     _main:
   794                           	callstack 27
   795   0013AC                     
   796                           ;OBCII_PIC18F46K22.c: 20:     OSCCON = 0b01110000;
   797   0013AC  0E70               	movlw	112
   798   0013AE  6ED3               	movwf	211,c	;volatile
   799   0013B0                     
   800                           ;OBCII_PIC18F46K22.c: 21:     OSCTUNEbits.PLLEN = 1;
   801   0013B0  8C9B               	bsf	155,6,c	;volatile
   802   0013B2                     
   803                           ;OBCII_PIC18F46K22.c: 22:     LCD_init();
   804   0013B2  EC0E  F009         	call	_LCD_init	;wreg free
   805   0013B6                     
   806                           ;OBCII_PIC18F46K22.c: 23:     LCD_clear();
   807   0013B6  ECC7  F009         	call	_LCD_clear	;wreg free
   808   0013BA                     l1106:
   809                           
   810                           ;OBCII_PIC18F46K22.c: 26:     welcomeSplash();
   811   0013BA  ECB4  F009         	call	_welcomeSplash	;wreg free
   812   0013BE  EFDD  F009         	goto	l1106
   813   0013C2  EFFE  F07F         	goto	start
   814   0013C6                     __end_of_main:
   815                           	callstack 0
   816                           
   817 ;; *************** function _welcomeSplash *****************
   818 ;; Defined at:
   819 ;;		line 7 in file "OBCII_PIC18F46K22.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 3
   840 ;; This function calls:
   841 ;;		_LCD_cursor_set
   842 ;;		_LCD_write_string
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text1
   849   001368                     __ptext1:
   850                           	callstack 0
   851   001368                     _welcomeSplash:
   852                           	callstack 27
   853   001368                     
   854                           ;OBCII_PIC18F46K22.c: 10:     LCD_cursor_set(1,1);
   855   001368  0E01               	movlw	1
   856   00136A  6E04               	movwf	LCD_cursor_set@column^0,c
   857   00136C  0E01               	movlw	1
   858   00136E  EC50  F009         	call	_LCD_cursor_set
   859   001372                     
   860                           ;OBCII_PIC18F46K22.c: 11:     LCD_write_string("*** OBDIIPIC ***");
   861   001372  0E01               	movlw	low STR_1
   862   001374  6E04               	movwf	LCD_write_string@string^0,c
   863   001376  EC80  F009         	call	_LCD_write_string	;wreg free
   864   00137A                     
   865                           ;OBCII_PIC18F46K22.c: 12:     LCD_cursor_set(2,1);
   866   00137A  0E01               	movlw	1
   867   00137C  6E04               	movwf	LCD_cursor_set@column^0,c
   868   00137E  0E02               	movlw	2
   869   001380  EC50  F009         	call	_LCD_cursor_set
   870                           
   871                           ;OBCII_PIC18F46K22.c: 13:     LCD_write_string("ECE3301L Project");
   872   001384  0E12               	movlw	low STR_2
   873   001386  6E04               	movwf	LCD_write_string@string^0,c
   874   001388  EC80  F009         	call	_LCD_write_string	;wreg free
   875   00138C  0012               	return		;funcret
   876   00138E                     __end_of_welcomeSplash:
   877                           	callstack 0
   878                           
   879 ;; *************** function _LCD_write_string *****************
   880 ;; Defined at:
   881 ;;		line 362 in file "LCD.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  string          1    3[COMRAM] PTR unsigned char 
   884 ;;		 -> STR_2(17), STR_1(17), 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  i               1    5[COMRAM] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   896 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;Total ram usage:        3 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; Hardware stack levels required when called: 2
   903 ;; This function calls:
   904 ;;		_LCD_write_data
   905 ;; This function is called by:
   906 ;;		_welcomeSplash
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text2
   911   001300                     __ptext2:
   912                           	callstack 0
   913   001300                     _LCD_write_string:
   914                           	callstack 27
   915   001300                     
   916                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
   917   001300  6A06               	clrf	LCD_write_string@i^0,c
   918   001302  EF8D  F009         	goto	l1090
   919   001306                     l1086:
   920                           
   921                           ;LCD.c: 366:         LCD_write_data(string[i]);
   922   001306  5004               	movf	LCD_write_string@string^0,w,c
   923   001308  2406               	addwf	LCD_write_string@i^0,w,c
   924   00130A  6E05               	movwf	??_LCD_write_string^0,c
   925   00130C  C005  FFF6         	movff	??_LCD_write_string,tblptrl
   926   001310                     	if	0	;There is only one active tblptr byte
   927   001310                     	endif
   928   001310                     	if	0	;tblptru may be non-zero
   929   001310                     	endif
   930   001310                     	if	0	;tblptru may be non-zero
   931   001310                     	endif
   932   001310  0008               	tblrd		*
   933   001312  50F5               	movf	tablat,w,c
   934   001314  EC12  F008         	call	_LCD_write_data
   935   001318                     
   936                           ;LCD.c: 367:     }
   937   001318  2A06               	incf	LCD_write_string@i^0,f,c
   938   00131A                     l1090:
   939   00131A  5004               	movf	LCD_write_string@string^0,w,c
   940   00131C  2406               	addwf	LCD_write_string@i^0,w,c
   941   00131E  6E05               	movwf	??_LCD_write_string^0,c
   942   001320  C005  FFF6         	movff	??_LCD_write_string,tblptrl
   943   001324                     	if	0	;There is only one active tblptr byte
   944   001324                     	endif
   945   001324                     	if	0	;tblptru may be non-zero
   946   001324                     	endif
   947   001324                     	if	0	;tblptru may be non-zero
   948   001324                     	endif
   949   001324  0008               	tblrd		*
   950   001326  50F5               	movf	tablat,w,c
   951   001328  0900               	iorlw	0
   952   00132A  A4D8               	btfss	status,2,c
   953   00132C  EF9A  F009         	goto	u301
   954   001330  EF9C  F009         	goto	u300
   955   001334                     u301:
   956   001334  EF83  F009         	goto	l1086
   957   001338                     u300:
   958   001338  0012               	return		;funcret
   959   00133A                     __end_of_LCD_write_string:
   960                           	callstack 0
   961                           
   962 ;; *************** function _LCD_write_data *****************
   963 ;; Defined at:
   964 ;;		line 74 in file "LCD.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  data            1    wreg     unsigned char 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  data            1    2[COMRAM] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;Total ram usage:        3 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 1
   985 ;; This function calls:
   986 ;;		_LCD_pulse_clock
   987 ;; This function is called by:
   988 ;;		_LCD_write_string
   989 ;;		_LCD_add_character
   990 ;;		_LCD_write_char
   991 ;;		_LCD_write_variable
   992 ;;		_LCD_write_float
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text3
   997   001024                     __ptext3:
   998                           	callstack 0
   999   001024                     _LCD_write_data:
  1000                           	callstack 27
  1001                           
  1002                           ;incstack = 0
  1003                           ;LCD_write_data@data stored from wreg
  1004   001024  6E03               	movwf	LCD_write_data@data^0,c
  1005   001026                     
  1006                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
  1007   001026  848C               	bsf	140,2,c	;volatile
  1008   001028                     
  1009                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
  1010   001028  6A01               	clrf	??_LCD_write_data^0,c
  1011   00102A  AE03               	btfss	LCD_write_data@data^0,7,c
  1012   00102C  D001               	bra	u45
  1013   00102E  2A01               	incf	??_LCD_write_data^0,f,c
  1014   001030                     u45:
  1015   001030  0E01               	movlw	1
  1016   001032  1601               	andwf	??_LCD_write_data^0,f,c
  1017   001034  3201               	rrcf	??_LCD_write_data^0,f,c
  1018   001036  3201               	rrcf	??_LCD_write_data^0,f,c
  1019   001038  508C               	movf	140,w,c	;volatile
  1020   00103A  1801               	xorwf	??_LCD_write_data^0,w,c
  1021   00103C  0B7F               	andlw	-129
  1022   00103E  1801               	xorwf	??_LCD_write_data^0,w,c
  1023   001040  6E8C               	movwf	140,c	;volatile
  1024                           
  1025                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
  1026   001042  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1027   001046  0E06               	movlw	6
  1028   001048  6E02               	movwf	(??_LCD_write_data+1)^0,c
  1029   00104A                     u55:
  1030   00104A  90D8               	bcf	status,0,c
  1031   00104C  3201               	rrcf	??_LCD_write_data^0,f,c
  1032   00104E  2E02               	decfsz	(??_LCD_write_data+1)^0,f,c
  1033   001050  EF25  F008         	goto	u55
  1034   001054  0E01               	movlw	1
  1035   001056  1601               	andwf	??_LCD_write_data^0,f,c
  1036   001058  3A01               	swapf	??_LCD_write_data^0,f,c
  1037   00105A  4601               	rlncf	??_LCD_write_data^0,f,c
  1038   00105C  4601               	rlncf	??_LCD_write_data^0,f,c
  1039   00105E  508C               	movf	140,w,c	;volatile
  1040   001060  1801               	xorwf	??_LCD_write_data^0,w,c
  1041   001062  0BBF               	andlw	-65
  1042   001064  1801               	xorwf	??_LCD_write_data^0,w,c
  1043   001066  6E8C               	movwf	140,c	;volatile
  1044                           
  1045                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
  1046   001068  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1047   00106C  0E05               	movlw	5
  1048   00106E  6E02               	movwf	(??_LCD_write_data+1)^0,c
  1049   001070                     u65:
  1050   001070  90D8               	bcf	status,0,c
  1051   001072  3201               	rrcf	??_LCD_write_data^0,f,c
  1052   001074  2E02               	decfsz	(??_LCD_write_data+1)^0,f,c
  1053   001076  EF38  F008         	goto	u65
  1054   00107A  0E01               	movlw	1
  1055   00107C  1601               	andwf	??_LCD_write_data^0,f,c
  1056   00107E  3A01               	swapf	??_LCD_write_data^0,f,c
  1057   001080  4601               	rlncf	??_LCD_write_data^0,f,c
  1058   001082  508C               	movf	140,w,c	;volatile
  1059   001084  1801               	xorwf	??_LCD_write_data^0,w,c
  1060   001086  0BDF               	andlw	-33
  1061   001088  1801               	xorwf	??_LCD_write_data^0,w,c
  1062   00108A  6E8C               	movwf	140,c	;volatile
  1063                           
  1064                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
  1065   00108C  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1066   001090  3A01               	swapf	??_LCD_write_data^0,f,c
  1067   001092  0E0F               	movlw	15
  1068   001094  1601               	andwf	??_LCD_write_data^0,f,c
  1069   001096  0E01               	movlw	1
  1070   001098  1601               	andwf	??_LCD_write_data^0,f,c
  1071   00109A  3A01               	swapf	??_LCD_write_data^0,f,c
  1072   00109C  508C               	movf	140,w,c	;volatile
  1073   00109E  1801               	xorwf	??_LCD_write_data^0,w,c
  1074   0010A0  0BEF               	andlw	-17
  1075   0010A2  1801               	xorwf	??_LCD_write_data^0,w,c
  1076   0010A4  6E8C               	movwf	140,c	;volatile
  1077   0010A6                     
  1078                           ;LCD.c: 85:     LCD_pulse_clock();
  1079   0010A6  ECE3  F009         	call	_LCD_pulse_clock	;wreg free
  1080   0010AA                     
  1081                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
  1082   0010AA  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1083   0010AE  90D8               	bcf	status,0,c
  1084   0010B0  3201               	rrcf	??_LCD_write_data^0,f,c
  1085   0010B2  90D8               	bcf	status,0,c
  1086   0010B4  3201               	rrcf	??_LCD_write_data^0,f,c
  1087   0010B6  90D8               	bcf	status,0,c
  1088   0010B8  3201               	rrcf	??_LCD_write_data^0,f,c
  1089   0010BA  0E01               	movlw	1
  1090   0010BC  1601               	andwf	??_LCD_write_data^0,f,c
  1091   0010BE  3201               	rrcf	??_LCD_write_data^0,f,c
  1092   0010C0  3201               	rrcf	??_LCD_write_data^0,f,c
  1093   0010C2  508C               	movf	140,w,c	;volatile
  1094   0010C4  1801               	xorwf	??_LCD_write_data^0,w,c
  1095   0010C6  0B7F               	andlw	-129
  1096   0010C8  1801               	xorwf	??_LCD_write_data^0,w,c
  1097   0010CA  6E8C               	movwf	140,c	;volatile
  1098   0010CC                     
  1099                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
  1100   0010CC  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1101   0010D0  90D8               	bcf	status,0,c
  1102   0010D2  3201               	rrcf	??_LCD_write_data^0,f,c
  1103   0010D4  90D8               	bcf	status,0,c
  1104   0010D6  3201               	rrcf	??_LCD_write_data^0,f,c
  1105   0010D8  0E01               	movlw	1
  1106   0010DA  1601               	andwf	??_LCD_write_data^0,f,c
  1107   0010DC  3A01               	swapf	??_LCD_write_data^0,f,c
  1108   0010DE  4601               	rlncf	??_LCD_write_data^0,f,c
  1109   0010E0  4601               	rlncf	??_LCD_write_data^0,f,c
  1110   0010E2  508C               	movf	140,w,c	;volatile
  1111   0010E4  1801               	xorwf	??_LCD_write_data^0,w,c
  1112   0010E6  0BBF               	andlw	-65
  1113   0010E8  1801               	xorwf	??_LCD_write_data^0,w,c
  1114   0010EA  6E8C               	movwf	140,c	;volatile
  1115   0010EC                     
  1116                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
  1117   0010EC  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1118   0010F0  90D8               	bcf	status,0,c
  1119   0010F2  3201               	rrcf	??_LCD_write_data^0,f,c
  1120   0010F4  0E01               	movlw	1
  1121   0010F6  1601               	andwf	??_LCD_write_data^0,f,c
  1122   0010F8  3A01               	swapf	??_LCD_write_data^0,f,c
  1123   0010FA  4601               	rlncf	??_LCD_write_data^0,f,c
  1124   0010FC  508C               	movf	140,w,c	;volatile
  1125   0010FE  1801               	xorwf	??_LCD_write_data^0,w,c
  1126   001100  0BDF               	andlw	-33
  1127   001102  1801               	xorwf	??_LCD_write_data^0,w,c
  1128   001104  6E8C               	movwf	140,c	;volatile
  1129   001106                     
  1130                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
  1131   001106  C003  F001         	movff	LCD_write_data@data,??_LCD_write_data
  1132   00110A  0E01               	movlw	1
  1133   00110C  1601               	andwf	??_LCD_write_data^0,f,c
  1134   00110E  3A01               	swapf	??_LCD_write_data^0,f,c
  1135   001110  508C               	movf	140,w,c	;volatile
  1136   001112  1801               	xorwf	??_LCD_write_data^0,w,c
  1137   001114  0BEF               	andlw	-17
  1138   001116  1801               	xorwf	??_LCD_write_data^0,w,c
  1139   001118  6E8C               	movwf	140,c	;volatile
  1140   00111A                     
  1141                           ;LCD.c: 94:     LCD_pulse_clock();
  1142   00111A  ECE3  F009         	call	_LCD_pulse_clock	;wreg free
  1143   00111E  0012               	return		;funcret
  1144   001120                     __end_of_LCD_write_data:
  1145                           	callstack 0
  1146                           
  1147 ;; *************** function _LCD_cursor_set *****************
  1148 ;; Defined at:
  1149 ;;		line 159 in file "LCD.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  row             1    wreg     unsigned char 
  1152 ;;  column          1    3[COMRAM] unsigned char 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  row             1    4[COMRAM] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1164 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;Total ram usage:        2 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; Hardware stack levels required when called: 2
  1171 ;; This function calls:
  1172 ;;		_LCD_write_command
  1173 ;; This function is called by:
  1174 ;;		_welcomeSplash
  1175 ;;		_LCD_add_character
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text4
  1180   0012A0                     __ptext4:
  1181                           	callstack 0
  1182   0012A0                     _LCD_cursor_set:
  1183                           	callstack 27
  1184                           
  1185                           ;incstack = 0
  1186                           ;LCD_cursor_set@row stored from wreg
  1187   0012A0  6E05               	movwf	LCD_cursor_set@row^0,c
  1188   0012A2                     
  1189                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
  1190   0012A2  0405               	decf	LCD_cursor_set@row^0,w,c
  1191   0012A4  A4D8               	btfss	status,2,c
  1192   0012A6  EF57  F009         	goto	u261
  1193   0012AA  EF59  F009         	goto	u260
  1194   0012AE                     u261:
  1195   0012AE  EF5B  F009         	goto	l52
  1196   0012B2                     u260:
  1197   0012B2  0E7F               	movlw	127
  1198   0012B4  2604               	addwf	LCD_cursor_set@column^0,f,c
  1199   0012B6                     l52:
  1200                           
  1201                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
  1202   0012B6  0E02               	movlw	2
  1203   0012B8  1805               	xorwf	LCD_cursor_set@row^0,w,c
  1204   0012BA  A4D8               	btfss	status,2,c
  1205   0012BC  EF62  F009         	goto	u271
  1206   0012C0  EF64  F009         	goto	u270
  1207   0012C4                     u271:
  1208   0012C4  EF66  F009         	goto	l53
  1209   0012C8                     u270:
  1210   0012C8  0EBF               	movlw	191
  1211   0012CA  2604               	addwf	LCD_cursor_set@column^0,f,c
  1212   0012CC                     l53:
  1213                           
  1214                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
  1215   0012CC  0E03               	movlw	3
  1216   0012CE  1805               	xorwf	LCD_cursor_set@row^0,w,c
  1217   0012D0  A4D8               	btfss	status,2,c
  1218   0012D2  EF6D  F009         	goto	u281
  1219   0012D6  EF6F  F009         	goto	u280
  1220   0012DA                     u281:
  1221   0012DA  EF71  F009         	goto	l54
  1222   0012DE                     u280:
  1223   0012DE  0E93               	movlw	147
  1224   0012E0  2604               	addwf	LCD_cursor_set@column^0,f,c
  1225   0012E2                     l54:
  1226                           
  1227                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
  1228   0012E2  0E04               	movlw	4
  1229   0012E4  1805               	xorwf	LCD_cursor_set@row^0,w,c
  1230   0012E6  A4D8               	btfss	status,2,c
  1231   0012E8  EF78  F009         	goto	u291
  1232   0012EC  EF7A  F009         	goto	u290
  1233   0012F0                     u291:
  1234   0012F0  EF7C  F009         	goto	l1082
  1235   0012F4                     u290:
  1236   0012F4  0ED3               	movlw	211
  1237   0012F6  2604               	addwf	LCD_cursor_set@column^0,f,c
  1238   0012F8                     l1082:
  1239                           
  1240                           ;LCD.c: 168:    LCD_write_command(column);
  1241   0012F8  5004               	movf	LCD_cursor_set@column^0,w,c
  1242   0012FA  EC90  F008         	call	_LCD_write_command
  1243   0012FE  0012               	return		;funcret
  1244   001300                     __end_of_LCD_cursor_set:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function _LCD_init *****************
  1248 ;; Defined at:
  1249 ;;		line 106 in file "LCD.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;Total ram usage:        2 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 3
  1270 ;; This function calls:
  1271 ;;		_LCD_clear
  1272 ;;		_LCD_pulse_clock
  1273 ;;		_LCD_write_command
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text5
  1280   00121C                     __ptext5:
  1281                           	callstack 0
  1282   00121C                     _LCD_init:
  1283                           	callstack 27
  1284   00121C                     
  1285                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
  1286   00121C  9495               	bcf	149,2,c	;volatile
  1287   00121E  948C               	bcf	140,2,c	;volatile
  1288                           
  1289                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
  1290   001220  9695               	bcf	149,3,c	;volatile
  1291   001222  968C               	bcf	140,3,c	;volatile
  1292                           
  1293                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
  1294   001224  9895               	bcf	149,4,c	;volatile
  1295   001226  988C               	bcf	140,4,c	;volatile
  1296                           
  1297                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
  1298   001228  9A95               	bcf	149,5,c	;volatile
  1299   00122A  9A8C               	bcf	140,5,c	;volatile
  1300                           
  1301                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
  1302   00122C  9C95               	bcf	149,6,c	;volatile
  1303   00122E  9C8C               	bcf	140,6,c	;volatile
  1304                           
  1305                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
  1306   001230  9E95               	bcf	149,7,c	;volatile
  1307   001232  9E8C               	bcf	140,7,c	;volatile
  1308   001234                     
  1309                           ;LCD.c: 121:     _delay((unsigned long)((60)*(64000000/4000.0)));
  1310   001234  0E05               	movlw	5
  1311   001236  6E06               	movwf	(??_LCD_init+1)^0,c
  1312   001238  0EDF               	movlw	223
  1313   00123A  6E05               	movwf	??_LCD_init^0,c
  1314   00123C  0EBC               	movlw	188
  1315   00123E                     u327:
  1316   00123E  2EE8               	decfsz	wreg,f,c
  1317   001240  D7FE               	bra	u327
  1318   001242  2E05               	decfsz	??_LCD_init^0,f,c
  1319   001244  D7FC               	bra	u327
  1320   001246  2E06               	decfsz	(??_LCD_init+1)^0,f,c
  1321   001248  D7FA               	bra	u327
  1322   00124A                     
  1323                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  1324   00124A  9E8C               	bcf	140,7,c	;volatile
  1325   00124C  9C8C               	bcf	140,6,c	;volatile
  1326   00124E  8A8C               	bsf	140,5,c	;volatile
  1327   001250  888C               	bsf	140,4,c	;volatile
  1328   001252                     
  1329                           ;LCD.c: 127:     LCD_pulse_clock();
  1330   001252  ECE3  F009         	call	_LCD_pulse_clock	;wreg free
  1331   001256                     
  1332                           ;LCD.c: 130:     _delay((unsigned long)((6)*(64000000/4000.0)));
  1333   001256  0E7D               	movlw	125
  1334   001258  6E05               	movwf	??_LCD_init^0,c
  1335   00125A  0EAC               	movlw	172
  1336   00125C                     u337:
  1337   00125C  2EE8               	decfsz	wreg,f,c
  1338   00125E  D7FE               	bra	u337
  1339   001260  2E05               	decfsz	??_LCD_init^0,f,c
  1340   001262  D7FC               	bra	u337
  1341                           
  1342                           ;LCD.c: 133:     LCD_pulse_clock();
  1343   001264  ECE3  F009         	call	_LCD_pulse_clock	;wreg free
  1344   001268                     
  1345                           ;LCD.c: 136:     _delay((unsigned long)((150)*(64000000/4000000.0)));
  1346   001268  0E04               	movlw	4
  1347   00126A  6E05               	movwf	??_LCD_init^0,c
  1348   00126C  0E1C               	movlw	28
  1349   00126E                     u347:
  1350   00126E  2EE8               	decfsz	wreg,f,c
  1351   001270  D7FE               	bra	u347
  1352   001272  2E05               	decfsz	??_LCD_init^0,f,c
  1353   001274  D7FC               	bra	u347
  1354   001276  D000               	nop2	
  1355   001278                     
  1356                           ;LCD.c: 139:     LCD_pulse_clock();
  1357   001278  ECE3  F009         	call	_LCD_pulse_clock	;wreg free
  1358   00127C                     
  1359                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  1360   00127C  9E8C               	bcf	140,7,c	;volatile
  1361   00127E  9C8C               	bcf	140,6,c	;volatile
  1362   001280  8A8C               	bsf	140,5,c	;volatile
  1363   001282  988C               	bcf	140,4,c	;volatile
  1364   001284                     
  1365                           ;LCD.c: 145:     LCD_pulse_clock();
  1366   001284  ECE3  F009         	call	_LCD_pulse_clock	;wreg free
  1367   001288                     
  1368                           ;LCD.c: 148:     LCD_write_command(0x28);
  1369   001288  0E28               	movlw	40
  1370   00128A  EC90  F008         	call	_LCD_write_command
  1371   00128E                     
  1372                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
  1373   00128E  500C               	movf	_LCD_display_control^0,w,c
  1374   001290  EC90  F008         	call	_LCD_write_command
  1375   001294                     
  1376                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
  1377   001294  500B               	movf	_LCD_entry_mode^0,w,c
  1378   001296  EC90  F008         	call	_LCD_write_command
  1379   00129A                     
  1380                           ;LCD.c: 151:     LCD_clear();
  1381   00129A  ECC7  F009         	call	_LCD_clear	;wreg free
  1382   00129E  0012               	return		;funcret
  1383   0012A0                     __end_of_LCD_init:
  1384                           	callstack 0
  1385                           
  1386 ;; *************** function _LCD_clear *****************
  1387 ;; Defined at:
  1388 ;;		line 248 in file "LCD.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;Total ram usage:        1 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 2
  1409 ;; This function calls:
  1410 ;;		_LCD_write_command
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;;		_LCD_init
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text6
  1418   00138E                     __ptext6:
  1419                           	callstack 0
  1420   00138E                     _LCD_clear:
  1421                           	callstack 27
  1422   00138E                     
  1423                           ;LCD.c: 251:     LCD_write_command(0x01);
  1424   00138E  0E01               	movlw	1
  1425   001390  EC90  F008         	call	_LCD_write_command
  1426   001394                     
  1427                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(64000000/4000000.0)));
  1428   001394  0E2F               	movlw	47
  1429   001396  6E04               	movwf	??_LCD_clear^0,c
  1430   001398  0E8A               	movlw	138
  1431   00139A                     u357:
  1432   00139A  2EE8               	decfsz	wreg,f,c
  1433   00139C  D7FE               	bra	u357
  1434   00139E  2E04               	decfsz	??_LCD_clear^0,f,c
  1435   0013A0  D7FC               	bra	u357
  1436   0013A2  D000               	nop2	
  1437   0013A4                     
  1438                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
  1439   0013A4  500B               	movf	_LCD_entry_mode^0,w,c
  1440   0013A6  EC90  F008         	call	_LCD_write_command
  1441   0013AA  0012               	return		;funcret
  1442   0013AC                     __end_of_LCD_clear:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _LCD_write_command *****************
  1446 ;; Defined at:
  1447 ;;		line 46 in file "LCD.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  command         1    wreg     unsigned char 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  command         1    2[COMRAM] unsigned char 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;Total ram usage:        3 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 1
  1468 ;; This function calls:
  1469 ;;		_LCD_pulse_clock
  1470 ;; This function is called by:
  1471 ;;		_LCD_init
  1472 ;;		_LCD_cursor_set
  1473 ;;		_LCD_clear
  1474 ;;		_LCD_cursor_increment
  1475 ;;		_LCD_cursor_decrement
  1476 ;;		_LCD_configure_lcd_display
  1477 ;;		_LCD_configure_cursor_display
  1478 ;;		_LCD_configure_cursor_blink
  1479 ;;		_LCD_shift_reset
  1480 ;;		_LCD_shift_left
  1481 ;;		_LCD_shift_right
  1482 ;;		_LCD_configure_entry_id
  1483 ;;		_LCD_configure_entry_shift
  1484 ;;		_LCD_add_character
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text7
  1489   001120                     __ptext7:
  1490                           	callstack 0
  1491   001120                     _LCD_write_command:
  1492                           	callstack 27
  1493                           
  1494                           ;incstack = 0
  1495                           ;LCD_write_command@command stored from wreg
  1496   001120  6E03               	movwf	LCD_write_command@command^0,c
  1497   001122                     
  1498                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
  1499   001122  948C               	bcf	140,2,c	;volatile
  1500   001124                     
  1501                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
  1502   001124  6A01               	clrf	??_LCD_write_command^0,c
  1503   001126  AE03               	btfss	LCD_write_command@command^0,7,c
  1504   001128  D001               	bra	u15
  1505   00112A  2A01               	incf	??_LCD_write_command^0,f,c
  1506   00112C                     u15:
  1507   00112C  0E01               	movlw	1
  1508   00112E  1601               	andwf	??_LCD_write_command^0,f,c
  1509   001130  3201               	rrcf	??_LCD_write_command^0,f,c
  1510   001132  3201               	rrcf	??_LCD_write_command^0,f,c
  1511   001134  508C               	movf	140,w,c	;volatile
  1512   001136  1801               	xorwf	??_LCD_write_command^0,w,c
  1513   001138  0B7F               	andlw	-129
  1514   00113A  1801               	xorwf	??_LCD_write_command^0,w,c
  1515   00113C  6E8C               	movwf	140,c	;volatile
  1516                           
  1517                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
  1518   00113E  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  1519   001142  0E06               	movlw	6
  1520   001144  6E02               	movwf	(??_LCD_write_command+1)^0,c
  1521   001146                     u25:
  1522   001146  90D8               	bcf	status,0,c
  1523   001148  3201               	rrcf	??_LCD_write_command^0,f,c
  1524   00114A  2E02               	decfsz	(??_LCD_write_command+1)^0,f,c
  1525   00114C  EFA3  F008         	goto	u25
  1526   001150  0E01               	movlw	1
  1527   001152  1601               	andwf	??_LCD_write_command^0,f,c
  1528   001154  3A01               	swapf	??_LCD_write_command^0,f,c
  1529   001156  4601               	rlncf	??_LCD_write_command^0,f,c
  1530   001158  4601               	rlncf	??_LCD_write_command^0,f,c
  1531   00115A  508C               	movf	140,w,c	;volatile
  1532   00115C  1801               	xorwf	??_LCD_write_command^0,w,c
  1533   00115E  0BBF               	andlw	-65
  1534   001160  1801               	xorwf	??_LCD_write_command^0,w,c
  1535   001162  6E8C               	movwf	140,c	;volatile
  1536                           
  1537                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
  1538   001164  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  1539   001168  0E05               	movlw	5
  1540   00116A  6E02               	movwf	(??_LCD_write_command+1)^0,c
  1541   00116C                     u35:
  1542   00116C  90D8               	bcf	status,0,c
  1543   00116E  3201               	rrcf	??_LCD_write_command^0,f,c
  1544   001170  2E02               	decfsz	(??_LCD_write_command+1)^0,f,c
  1545   001172  EFB6  F008         	goto	u35
  1546   001176  0E01               	movlw	1
  1547   001178  1601               	andwf	??_LCD_write_command^0,f,c
  1548   00117A  3A01               	swapf	??_LCD_write_command^0,f,c
  1549   00117C  4601               	rlncf	??_LCD_write_command^0,f,c
  1550   00117E  508C               	movf	140,w,c	;volatile
  1551   001180  1801               	xorwf	??_LCD_write_command^0,w,c
  1552   001182  0BDF               	andlw	-33
  1553   001184  1801               	xorwf	??_LCD_write_command^0,w,c
  1554   001186  6E8C               	movwf	140,c	;volatile
  1555                           
  1556                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
  1557   001188  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  1558   00118C  3A01               	swapf	??_LCD_write_command^0,f,c
  1559   00118E  0E0F               	movlw	15
  1560   001190  1601               	andwf	??_LCD_write_command^0,f,c
  1561   001192  0E01               	movlw	1
  1562   001194  1601               	andwf	??_LCD_write_command^0,f,c
  1563   001196  3A01               	swapf	??_LCD_write_command^0,f,c
  1564   001198  508C               	movf	140,w,c	;volatile
  1565   00119A  1801               	xorwf	??_LCD_write_command^0,w,c
  1566   00119C  0BEF               	andlw	-17
  1567   00119E  1801               	xorwf	??_LCD_write_command^0,w,c
  1568   0011A0  6E8C               	movwf	140,c	;volatile
  1569   0011A2                     
  1570                           ;LCD.c: 57:     LCD_pulse_clock();
  1571   0011A2  ECE3  F009         	call	_LCD_pulse_clock	;wreg free
  1572   0011A6                     
  1573                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
  1574   0011A6  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  1575   0011AA  90D8               	bcf	status,0,c
  1576   0011AC  3201               	rrcf	??_LCD_write_command^0,f,c
  1577   0011AE  90D8               	bcf	status,0,c
  1578   0011B0  3201               	rrcf	??_LCD_write_command^0,f,c
  1579   0011B2  90D8               	bcf	status,0,c
  1580   0011B4  3201               	rrcf	??_LCD_write_command^0,f,c
  1581   0011B6  0E01               	movlw	1
  1582   0011B8  1601               	andwf	??_LCD_write_command^0,f,c
  1583   0011BA  3201               	rrcf	??_LCD_write_command^0,f,c
  1584   0011BC  3201               	rrcf	??_LCD_write_command^0,f,c
  1585   0011BE  508C               	movf	140,w,c	;volatile
  1586   0011C0  1801               	xorwf	??_LCD_write_command^0,w,c
  1587   0011C2  0B7F               	andlw	-129
  1588   0011C4  1801               	xorwf	??_LCD_write_command^0,w,c
  1589   0011C6  6E8C               	movwf	140,c	;volatile
  1590   0011C8                     
  1591                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
  1592   0011C8  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  1593   0011CC  90D8               	bcf	status,0,c
  1594   0011CE  3201               	rrcf	??_LCD_write_command^0,f,c
  1595   0011D0  90D8               	bcf	status,0,c
  1596   0011D2  3201               	rrcf	??_LCD_write_command^0,f,c
  1597   0011D4  0E01               	movlw	1
  1598   0011D6  1601               	andwf	??_LCD_write_command^0,f,c
  1599   0011D8  3A01               	swapf	??_LCD_write_command^0,f,c
  1600   0011DA  4601               	rlncf	??_LCD_write_command^0,f,c
  1601   0011DC  4601               	rlncf	??_LCD_write_command^0,f,c
  1602   0011DE  508C               	movf	140,w,c	;volatile
  1603   0011E0  1801               	xorwf	??_LCD_write_command^0,w,c
  1604   0011E2  0BBF               	andlw	-65
  1605   0011E4  1801               	xorwf	??_LCD_write_command^0,w,c
  1606   0011E6  6E8C               	movwf	140,c	;volatile
  1607   0011E8                     
  1608                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
  1609   0011E8  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  1610   0011EC  90D8               	bcf	status,0,c
  1611   0011EE  3201               	rrcf	??_LCD_write_command^0,f,c
  1612   0011F0  0E01               	movlw	1
  1613   0011F2  1601               	andwf	??_LCD_write_command^0,f,c
  1614   0011F4  3A01               	swapf	??_LCD_write_command^0,f,c
  1615   0011F6  4601               	rlncf	??_LCD_write_command^0,f,c
  1616   0011F8  508C               	movf	140,w,c	;volatile
  1617   0011FA  1801               	xorwf	??_LCD_write_command^0,w,c
  1618   0011FC  0BDF               	andlw	-33
  1619   0011FE  1801               	xorwf	??_LCD_write_command^0,w,c
  1620   001200  6E8C               	movwf	140,c	;volatile
  1621   001202                     
  1622                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
  1623   001202  C003  F001         	movff	LCD_write_command@command,??_LCD_write_command
  1624   001206  0E01               	movlw	1
  1625   001208  1601               	andwf	??_LCD_write_command^0,f,c
  1626   00120A  3A01               	swapf	??_LCD_write_command^0,f,c
  1627   00120C  508C               	movf	140,w,c	;volatile
  1628   00120E  1801               	xorwf	??_LCD_write_command^0,w,c
  1629   001210  0BEF               	andlw	-17
  1630   001212  1801               	xorwf	??_LCD_write_command^0,w,c
  1631   001214  6E8C               	movwf	140,c	;volatile
  1632   001216                     
  1633                           ;LCD.c: 66:     LCD_pulse_clock();
  1634   001216  ECE3  F009         	call	_LCD_pulse_clock	;wreg free
  1635   00121A  0012               	return		;funcret
  1636   00121C                     __end_of_LCD_write_command:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _LCD_pulse_clock *****************
  1640 ;; Defined at:
  1641 ;;		line 34 in file "LCD.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_LCD_write_command
  1665 ;;		_LCD_write_data
  1666 ;;		_LCD_init
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text8
  1671   0013C6                     __ptext8:
  1672                           	callstack 0
  1673   0013C6                     _LCD_pulse_clock:
  1674                           	callstack 27
  1675   0013C6                     
  1676                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
  1677   0013C6  868C               	bsf	140,3,c	;volatile
  1678   0013C8                     
  1679                           ;LCD.c: 37:   _delay((unsigned long)((60)*(64000000/4000000.0)));
  1680   0013C8  0EC0               	movlw	192
  1681   0013CA                     u367:
  1682   0013CA  D000               	nop2	
  1683   0013CC  2EE8               	decfsz	wreg,f,c
  1684   0013CE  D7FD               	bra	u367
  1685   0013D0                     
  1686                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
  1687   0013D0  968C               	bcf	140,3,c	;volatile
  1688   0013D2  0012               	return		;funcret
  1689   0013D4                     __end_of_LCD_pulse_clock:
  1690                           	callstack 0
  1691                           
  1692                           	psect	rparam
  1693   000001                     ___rparam_used  equ	1
  1694   000000                     ___param_bank   equ	0
  1695   000000                     __Lparam        equ	__Lrparam
  1696   000000                     __Hparam        equ	__Hrparam
  1697                           
  1698                           	psect	config
  1699                           
  1700                           ; Padding undefined space
  1701   300000                     	org	3145728
  1702   300000  FF                 	db	255
  1703                           
  1704                           ;Config register CONFIG1H @ 0x300001
  1705                           ;	Oscillator Selection bits
  1706                           ;	FOSC = INTIO67, Internal oscillator block
  1707                           ;	4X PLL Enable
  1708                           ;	PLLCFG = ON, Oscillator multiplied by 4
  1709                           ;	Primary clock enable bit
  1710                           ;	PRICLKEN = ON, Primary clock is always enabled
  1711                           ;	Fail-Safe Clock Monitor Enable bit
  1712                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1713                           ;	Internal/External Oscillator Switchover bit
  1714                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1715   300001                     	org	3145729
  1716   300001  38                 	db	56
  1717                           
  1718                           ;Config register CONFIG2L @ 0x300002
  1719                           ;	Power-up Timer Enable bit
  1720                           ;	PWRTEN = ON, Power up timer enabled
  1721                           ;	Brown-out Reset Enable bits
  1722                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1723                           ;	Brown Out Reset Voltage bits
  1724                           ;	BORV = 250, VBOR set to 2.50 V nominal
  1725   300002                     	org	3145730
  1726   300002  0E                 	db	14
  1727                           
  1728                           ;Config register CONFIG2H @ 0x300003
  1729                           ;	Watchdog Timer Enable bits
  1730                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1731                           ;	Watchdog Timer Postscale Select bits
  1732                           ;	WDTPS = 32768, 1:32768
  1733   300003                     	org	3145731
  1734   300003  3C                 	db	60
  1735                           
  1736                           ; Padding undefined space
  1737   300004                     	org	3145732
  1738   300004  FF                 	db	255
  1739                           
  1740                           ;Config register CONFIG3H @ 0x300005
  1741                           ;	CCP2 MUX bit
  1742                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1743                           ;	PORTB A/D Enable bit
  1744                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1745                           ;	P3A/CCP3 Mux bit
  1746                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1747                           ;	HFINTOSC Fast Start-up
  1748                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1749                           ;	Timer3 Clock input mux bit
  1750                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1751                           ;	ECCP2 B output mux bit
  1752                           ;	P2BMX = PORTD2, P2B is on RD2
  1753                           ;	MCLR Pin Enable bit
  1754                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1755   300005                     	org	3145733
  1756   300005  BF                 	db	191
  1757                           
  1758                           ;Config register CONFIG4L @ 0x300006
  1759                           ;	Stack Full/Underflow Reset Enable bit
  1760                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1761                           ;	Single-Supply ICSP Enable bit
  1762                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1763                           ;	Extended Instruction Set Enable bit
  1764                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1765                           ;	Background Debug
  1766                           ;	DEBUG = 0x1, unprogrammed default
  1767   300006                     	org	3145734
  1768   300006  85                 	db	133
  1769                           
  1770                           ; Padding undefined space
  1771   300007                     	org	3145735
  1772   300007  FF                 	db	255
  1773                           
  1774                           ;Config register CONFIG5L @ 0x300008
  1775                           ;	Code Protection Block 0
  1776                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1777                           ;	Code Protection Block 1
  1778                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1779                           ;	Code Protection Block 2
  1780                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1781                           ;	Code Protection Block 3
  1782                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1783   300008                     	org	3145736
  1784   300008  0F                 	db	15
  1785                           
  1786                           ;Config register CONFIG5H @ 0x300009
  1787                           ;	Boot Block Code Protection bit
  1788                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1789                           ;	Data EEPROM Code Protection bit
  1790                           ;	CPD = OFF, Data EEPROM not code-protected
  1791   300009                     	org	3145737
  1792   300009  C0                 	db	192
  1793                           
  1794                           ;Config register CONFIG6L @ 0x30000A
  1795                           ;	Write Protection Block 0
  1796                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1797                           ;	Write Protection Block 1
  1798                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1799                           ;	Write Protection Block 2
  1800                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1801                           ;	Write Protection Block 3
  1802                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1803   30000A                     	org	3145738
  1804   30000A  0F                 	db	15
  1805                           
  1806                           ;Config register CONFIG6H @ 0x30000B
  1807                           ;	Configuration Register Write Protection bit
  1808                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1809                           ;	Boot Block Write Protection bit
  1810                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1811                           ;	Data EEPROM Write Protection bit
  1812                           ;	WRTD = OFF, Data EEPROM not write-protected
  1813   30000B                     	org	3145739
  1814   30000B  E0                 	db	224
  1815                           
  1816                           ;Config register CONFIG7L @ 0x30000C
  1817                           ;	Table Read Protection Block 0
  1818                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1819                           ;	Table Read Protection Block 1
  1820                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1821                           ;	Table Read Protection Block 2
  1822                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1823                           ;	Table Read Protection Block 3
  1824                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1825   30000C                     	org	3145740
  1826   30000C  0F                 	db	15
  1827                           
  1828                           ;Config register CONFIG7H @ 0x30000D
  1829                           ;	Boot Block Table Read Protection bit
  1830                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1831   30000D                     	org	3145741
  1832   30000D  40                 	db	64
  1833                           tosu	equ	0xFFF
  1834                           tosh	equ	0xFFE
  1835                           tosl	equ	0xFFD
  1836                           stkptr	equ	0xFFC
  1837                           pclatu	equ	0xFFB
  1838                           pclath	equ	0xFFA
  1839                           pcl	equ	0xFF9
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           prodh	equ	0xFF4
  1845                           prodl	equ	0xFF3
  1846                           indf0	equ	0xFEF
  1847                           postinc0	equ	0xFEE
  1848                           postdec0	equ	0xFED
  1849                           preinc0	equ	0xFEC
  1850                           plusw0	equ	0xFEB
  1851                           fsr0h	equ	0xFEA
  1852                           fsr0l	equ	0xFE9
  1853                           wreg	equ	0xFE8
  1854                           indf1	equ	0xFE7
  1855                           postinc1	equ	0xFE6
  1856                           postdec1	equ	0xFE5
  1857                           preinc1	equ	0xFE4
  1858                           plusw1	equ	0xFE3
  1859                           fsr1h	equ	0xFE2
  1860                           fsr1l	equ	0xFE1
  1861                           bsr	equ	0xFE0
  1862                           indf2	equ	0xFDF
  1863                           postinc2	equ	0xFDE
  1864                           postdec2	equ	0xFDD
  1865                           preinc2	equ	0xFDC
  1866                           plusw2	equ	0xFDB
  1867                           fsr2h	equ	0xFDA
  1868                           fsr2l	equ	0xFD9
  1869                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    LCD_write_string@string	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_LCD_init
    _welcomeSplash->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     837
                          _LCD_clear
                           _LCD_init
                      _welcomeSplash
 ---------------------------------------------------------------------------------
 (1) _welcomeSplash                                        0     0      0     477
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     3     2      1     212
                                              3 COMRAM     3     2      1
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (3) _LCD_write_data                                       3     3      0     120
                                              0 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_set                                       2     1      1     265
                                              3 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     240
                                              4 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     120
                                              3 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_write_command                                    3     3      0     120
                                              0 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _welcomeSplash
     _LCD_cursor_set
       _LCD_write_command
     _LCD_write_string
       _LCD_write_data
         _LCD_pulse_clock

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         115      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      6      12     12.6%
BITBIGSFRl          84      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      12      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 22 18:32:59 2025

                       l15 138C                         l40 13D2                         l43 121A  
                       l52 12B6                         l53 12CC                         l54 12E2  
                       l46 111E                         l80 13AA                         l56 12FE  
                       l49 129E                         u15 112C                         u25 1146  
                       u35 116C                         u45 1030                         u55 104A  
                       u65 1070                        l110 1338                        l900 124A  
                      l830 13D0                        l910 1256                        l902 124C  
                      l840 11C8                        l832 1122                        l920 1280  
                      l912 1268                        l904 124E                        l826 13C6  
                      l842 11E8                        l834 1124                        l930 1294  
                      l922 1282                        l914 1278                        l906 1250  
                      l850 1028                        l828 13C8                        l844 1202  
                      l836 11A2                        l932 129A                        l924 1284  
                      l916 127C                        l908 1252                        l860 1106  
                      l852 10A6                        l846 1216                        l838 11A6  
                      l926 1288                        l918 127E                        l862 111A  
                      l854 10AA                        l928 128E                        l856 10CC  
                      l848 1026                        l858 10EC                        l884 138E  
                      l886 1394                        l888 13A4                        l896 121C  
                      l898 1234                        u300 1338                        u301 1334  
                      u260 12B2                        u261 12AE                        u270 12C8  
                      u327 123E                        u271 12C4                        u280 12DE  
                      u337 125C                        u281 12DA                        u290 12F4  
                      u347 126E                        u291 12F0                        u357 139A  
                      u367 13CA                        wreg 0FE8                       l1100 13B0  
                     l1102 13B2                       l1104 13B6                       l1106 13BA  
                     l1080 12F4                       l1072 12A2                       l1082 12F8  
                     l1074 12B2                       l1090 131A                       l1076 12C8  
                     l1084 1300                       l1092 1368                       l1078 12DE  
                     l1086 1306                       l1094 1372                       l1088 1318  
                     l1096 137A                       l1098 13AC                       STR_1 1001  
                     STR_2 1012                       _main 13AC                       start FFFC  
             ___param_bank 0000           __end_of_LCD_init 12A0                      ?_main 0001  
          ??_welcomeSplash 0007                      tablat 0FF5                      status 0FD8  
          __initialization 133A               __end_of_main 13C6          ?_LCD_write_string 0004  
                   ??_main 0007              __activetblptr 0001         ??_LCD_write_string 0005  
        __end_of_LCD_clear 13AC     LCD_write_string@string 0004                     _OSCCON 0FD3  
                   isa$std 0001               __pdataCOMRAM 000B               __mediumconst 1000  
                   tblptrh 0FF7                     tblptrl 0FF6                     tblptru 0FF8  
               __accesstop 0060    __end_of__initialization 135A                  ?_LCD_init 0001  
            ___rparam_used 0001             __pcstackCOMRAM 0001             _LCD_entry_mode 000B  
        _LCD_write_command 1120             _LCD_cursor_set 12A0         ?_LCD_write_command 0001  
      ??_LCD_write_command 0001                 ??_LCD_init 0005  __end_of_LCD_write_command 121C  
   __end_of_LCD_cursor_set 1300   LCD_write_command@command 0003                    __Hparam 0000  
                  __Lparam 0000            ?_LCD_cursor_set 0004             _LCD_write_data 1024  
             __psmallconst 1000                    __pcinit 133A                    __ramtop 1000  
                  __ptext0 13AC                    __ptext1 1368                    __ptext2 1300  
                  __ptext3 1024                    __ptext4 12A0                    __ptext5 121C  
                  __ptext6 138E                    __ptext7 1120                    __ptext8 13C6  
                _LCD_clear 138E       end_of_initialization 135A      __end_of_welcomeSplash 138E  
     LCD_cursor_set@column 0004        _LCD_display_control 000C     __end_of_LCD_write_data 1120  
        ??_LCD_pulse_clock 0001                  _TRISDbits 0F95                 ?_LCD_clear 0001  
          ?_LCD_write_data 0001              __pidataCOMRAM 13D4        start_initialization 133A  
              __pbssCOMRAM 0007                ??_LCD_clear 0004           _LCD_write_string 1300  
         ??_LCD_cursor_set 0005                __smallconst 1000         LCD_write_data@data 0003  
                 _LATDbits 0F8C                   _LCD_init 121C            _LCD_pulse_clock 13C6  
         ??_LCD_write_data 0001                   __Hrparam 0000                  modff@F522 0007  
                 __Lrparam 0000               __Lsmallconst 1000          LCD_cursor_set@row 0005  
  __end_of_LCD_pulse_clock 13D4                   isa$xinst 0000   __end_of_LCD_write_string 133A  
              _OSCTUNEbits 0F9B          LCD_write_string@i 0006              _welcomeSplash 1368  
           ?_welcomeSplash 0001           ?_LCD_pulse_clock 0001  
