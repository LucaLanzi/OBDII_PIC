

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Apr 26 23:44:55 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 12/10/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F46K22 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000FE0                     bsr             equ	4064
    74   000FE9                     fsr0            equ	4073
    75   000FEA                     fsr0h           equ	4074
    76   000FE9                     fsr0l           equ	4073
    77   000FE1                     fsr1            equ	4065
    78   000FE2                     fsr1h           equ	4066
    79   000FE1                     fsr1l           equ	4065
    80   000FD9                     fsr2            equ	4057
    81   000FDA                     fsr2h           equ	4058
    82   000FD9                     fsr2l           equ	4057
    83   000FEF                     indf0           equ	4079
    84   000FE7                     indf1           equ	4071
    85   000FDF                     indf2           equ	4063
    86   000FF2                     intcon          equ	4082
    87   000000                     nvmcon          equ	0
    88   000FF9                     pcl             equ	4089
    89   000FFA                     pclath          equ	4090
    90   000FFB                     pclatu          equ	4091
    91   000FEB                     plusw0          equ	4075
    92   000FE3                     plusw1          equ	4067
    93   000FDB                     plusw2          equ	4059
    94   000FED                     postdec0        equ	4077
    95   000FE5                     postdec1        equ	4069
    96   000FDD                     postdec2        equ	4061
    97   000FEE                     postinc0        equ	4078
    98   000FE6                     postinc1        equ	4070
    99   000FDE                     postinc2        equ	4062
   100   000FEC                     preinc0         equ	4076
   101   000FE4                     preinc1         equ	4068
   102   000FDC                     preinc2         equ	4060
   103   000FF3                     prod            equ	4083
   104   000FF4                     prodh           equ	4084
   105   000FF3                     prodl           equ	4083
   106   000FD8                     status          equ	4056
   107   000FF5                     tablat          equ	4085
   108   000FF6                     tblptr          equ	4086
   109   000FF7                     tblptrh         equ	4087
   110   000FF6                     tblptrl         equ	4086
   111   000FF8                     tblptru         equ	4088
   112   000FFD                     tosl            equ	4093
   113   000FE8                     wreg            equ	4072
   114   000F38                     ANSELA          equ	3896	;# 
   115   000F39                     ANSELB          equ	3897	;# 
   116   000F3A                     ANSELC          equ	3898	;# 
   117   000F3B                     ANSELD          equ	3899	;# 
   118   000F3C                     ANSELE          equ	3900	;# 
   119   000F3D                     PMD2            equ	3901	;# 
   120   000F3E                     PMD1            equ	3902	;# 
   121   000F3F                     PMD0            equ	3903	;# 
   122   000F40                     VREFCON2        equ	3904	;# 
   123   000F40                     DACCON1         equ	3904	;# 
   124   000F41                     VREFCON1        equ	3905	;# 
   125   000F41                     DACCON0         equ	3905	;# 
   126   000F42                     VREFCON0        equ	3906	;# 
   127   000F42                     FVRCON          equ	3906	;# 
   128   000F43                     CTMUICON        equ	3907	;# 
   129   000F43                     CTMUICONH       equ	3907	;# 
   130   000F44                     CTMUCONL        equ	3908	;# 
   131   000F44                     CTMUCON1        equ	3908	;# 
   132   000F45                     CTMUCONH        equ	3909	;# 
   133   000F45                     CTMUCON0        equ	3909	;# 
   134   000F46                     SRCON1          equ	3910	;# 
   135   000F47                     SRCON0          equ	3911	;# 
   136   000F48                     CCPTMRS1        equ	3912	;# 
   137   000F49                     CCPTMRS0        equ	3913	;# 
   138   000F4A                     T6CON           equ	3914	;# 
   139   000F4B                     PR6             equ	3915	;# 
   140   000F4C                     TMR6            equ	3916	;# 
   141   000F4D                     T5GCON          equ	3917	;# 
   142   000F4E                     T5CON           equ	3918	;# 
   143   000F4F                     TMR5            equ	3919	;# 
   144   000F4F                     TMR5L           equ	3919	;# 
   145   000F50                     TMR5H           equ	3920	;# 
   146   000F51                     T4CON           equ	3921	;# 
   147   000F52                     PR4             equ	3922	;# 
   148   000F53                     TMR4            equ	3923	;# 
   149   000F54                     CCP5CON         equ	3924	;# 
   150   000F55                     CCPR5           equ	3925	;# 
   151   000F55                     CCPR5L          equ	3925	;# 
   152   000F56                     CCPR5H          equ	3926	;# 
   153   000F57                     CCP4CON         equ	3927	;# 
   154   000F58                     CCPR4           equ	3928	;# 
   155   000F58                     CCPR4L          equ	3928	;# 
   156   000F59                     CCPR4H          equ	3929	;# 
   157   000F5A                     PSTR3CON        equ	3930	;# 
   158   000F5B                     ECCP3AS         equ	3931	;# 
   159   000F5B                     CCP3AS          equ	3931	;# 
   160   000F5C                     PWM3CON         equ	3932	;# 
   161   000F5D                     CCP3CON         equ	3933	;# 
   162   000F5E                     CCPR3           equ	3934	;# 
   163   000F5E                     CCPR3L          equ	3934	;# 
   164   000F5F                     CCPR3H          equ	3935	;# 
   165   000F60                     SLRCON          equ	3936	;# 
   166   000F61                     WPUB            equ	3937	;# 
   167   000F62                     IOCB            equ	3938	;# 
   168   000F63                     PSTR2CON        equ	3939	;# 
   169   000F64                     ECCP2AS         equ	3940	;# 
   170   000F64                     CCP2AS          equ	3940	;# 
   171   000F65                     PWM2CON         equ	3941	;# 
   172   000F66                     CCP2CON         equ	3942	;# 
   173   000F67                     CCPR2           equ	3943	;# 
   174   000F67                     CCPR2L          equ	3943	;# 
   175   000F68                     CCPR2H          equ	3944	;# 
   176   000F69                     SSP2CON3        equ	3945	;# 
   177   000F6A                     SSP2MSK         equ	3946	;# 
   178   000F6B                     SSP2CON2        equ	3947	;# 
   179   000F6C                     SSP2CON1        equ	3948	;# 
   180   000F6D                     SSP2STAT        equ	3949	;# 
   181   000F6E                     SSP2ADD         equ	3950	;# 
   182   000F6F                     SSP2BUF         equ	3951	;# 
   183   000F70                     BAUDCON2        equ	3952	;# 
   184   000F70                     BAUD2CON        equ	3952	;# 
   185   000F71                     RCSTA2          equ	3953	;# 
   186   000F71                     RC2STA          equ	3953	;# 
   187   000F72                     TXSTA2          equ	3954	;# 
   188   000F72                     TX2STA          equ	3954	;# 
   189   000F73                     TXREG2          equ	3955	;# 
   190   000F73                     TX2REG          equ	3955	;# 
   191   000F74                     RCREG2          equ	3956	;# 
   192   000F74                     RC2REG          equ	3956	;# 
   193   000F75                     SPBRG2          equ	3957	;# 
   194   000F75                     SP2BRG          equ	3957	;# 
   195   000F76                     SPBRGH2         equ	3958	;# 
   196   000F76                     SP2BRGH         equ	3958	;# 
   197   000F77                     CM2CON1         equ	3959	;# 
   198   000F77                     CM12CON         equ	3959	;# 
   199   000F78                     CM2CON0         equ	3960	;# 
   200   000F78                     CM2CON          equ	3960	;# 
   201   000F79                     CM1CON0         equ	3961	;# 
   202   000F79                     CM1CON          equ	3961	;# 
   203   000F7A                     PIE4            equ	3962	;# 
   204   000F7B                     PIR4            equ	3963	;# 
   205   000F7C                     IPR4            equ	3964	;# 
   206   000F7D                     PIE5            equ	3965	;# 
   207   000F7E                     PIR5            equ	3966	;# 
   208   000F7F                     IPR5            equ	3967	;# 
   209   000F80                     PORTA           equ	3968	;# 
   210   000F81                     PORTB           equ	3969	;# 
   211   000F82                     PORTC           equ	3970	;# 
   212   000F83                     PORTD           equ	3971	;# 
   213   000F84                     PORTE           equ	3972	;# 
   214   000F89                     LATA            equ	3977	;# 
   215   000F8A                     LATB            equ	3978	;# 
   216   000F8B                     LATC            equ	3979	;# 
   217   000F8C                     LATD            equ	3980	;# 
   218   000F8D                     LATE            equ	3981	;# 
   219   000F92                     TRISA           equ	3986	;# 
   220   000F92                     DDRA            equ	3986	;# 
   221   000F93                     TRISB           equ	3987	;# 
   222   000F93                     DDRB            equ	3987	;# 
   223   000F94                     TRISC           equ	3988	;# 
   224   000F94                     DDRC            equ	3988	;# 
   225   000F95                     TRISD           equ	3989	;# 
   226   000F95                     DDRD            equ	3989	;# 
   227   000F96                     TRISE           equ	3990	;# 
   228   000F96                     DDRE            equ	3990	;# 
   229   000F9B                     OSCTUNE         equ	3995	;# 
   230   000F9C                     HLVDCON         equ	3996	;# 
   231   000F9C                     LVDCON          equ	3996	;# 
   232   000F9D                     PIE1            equ	3997	;# 
   233   000F9E                     PIR1            equ	3998	;# 
   234   000F9F                     IPR1            equ	3999	;# 
   235   000FA0                     PIE2            equ	4000	;# 
   236   000FA1                     PIR2            equ	4001	;# 
   237   000FA2                     IPR2            equ	4002	;# 
   238   000FA3                     PIE3            equ	4003	;# 
   239   000FA4                     PIR3            equ	4004	;# 
   240   000FA5                     IPR3            equ	4005	;# 
   241   000FA6                     EECON1          equ	4006	;# 
   242   000FA7                     EECON2          equ	4007	;# 
   243   000FA8                     EEDATA          equ	4008	;# 
   244   000FA9                     EEADR           equ	4009	;# 
   245   000FAA                     EEADRH          equ	4010	;# 
   246   000FAB                     RCSTA1          equ	4011	;# 
   247   000FAB                     RCSTA           equ	4011	;# 
   248   000FAB                     RC1STA          equ	4011	;# 
   249   000FAC                     TXSTA1          equ	4012	;# 
   250   000FAC                     TXSTA           equ	4012	;# 
   251   000FAC                     TX1STA          equ	4012	;# 
   252   000FAD                     TXREG1          equ	4013	;# 
   253   000FAD                     TXREG           equ	4013	;# 
   254   000FAD                     TX1REG          equ	4013	;# 
   255   000FAE                     RCREG1          equ	4014	;# 
   256   000FAE                     RCREG           equ	4014	;# 
   257   000FAE                     RC1REG          equ	4014	;# 
   258   000FAF                     SPBRG1          equ	4015	;# 
   259   000FAF                     SPBRG           equ	4015	;# 
   260   000FAF                     SP1BRG          equ	4015	;# 
   261   000FB0                     SPBRGH1         equ	4016	;# 
   262   000FB0                     SPBRGH          equ	4016	;# 
   263   000FB0                     SP1BRGH         equ	4016	;# 
   264   000FB1                     T3CON           equ	4017	;# 
   265   000FB2                     TMR3            equ	4018	;# 
   266   000FB2                     TMR3L           equ	4018	;# 
   267   000FB3                     TMR3H           equ	4019	;# 
   268   000FB4                     T3GCON          equ	4020	;# 
   269   000FB6                     ECCP1AS         equ	4022	;# 
   270   000FB6                     ECCPAS          equ	4022	;# 
   271   000FB7                     PWM1CON         equ	4023	;# 
   272   000FB7                     PWMCON          equ	4023	;# 
   273   000FB8                     BAUDCON1        equ	4024	;# 
   274   000FB8                     BAUDCON         equ	4024	;# 
   275   000FB8                     BAUDCTL         equ	4024	;# 
   276   000FB8                     BAUD1CON        equ	4024	;# 
   277   000FB9                     PSTR1CON        equ	4025	;# 
   278   000FB9                     PSTRCON         equ	4025	;# 
   279   000FBA                     T2CON           equ	4026	;# 
   280   000FBB                     PR2             equ	4027	;# 
   281   000FBC                     TMR2            equ	4028	;# 
   282   000FBD                     CCP1CON         equ	4029	;# 
   283   000FBE                     CCPR1           equ	4030	;# 
   284   000FBE                     CCPR1L          equ	4030	;# 
   285   000FBF                     CCPR1H          equ	4031	;# 
   286   000FC0                     ADCON2          equ	4032	;# 
   287   000FC1                     ADCON1          equ	4033	;# 
   288   000FC2                     ADCON0          equ	4034	;# 
   289   000FC3                     ADRES           equ	4035	;# 
   290   000FC3                     ADRESL          equ	4035	;# 
   291   000FC4                     ADRESH          equ	4036	;# 
   292   000FC5                     SSP1CON2        equ	4037	;# 
   293   000FC5                     SSPCON2         equ	4037	;# 
   294   000FC6                     SSP1CON1        equ	4038	;# 
   295   000FC6                     SSPCON1         equ	4038	;# 
   296   000FC7                     SSP1STAT        equ	4039	;# 
   297   000FC7                     SSPSTAT         equ	4039	;# 
   298   000FC8                     SSP1ADD         equ	4040	;# 
   299   000FC8                     SSPADD          equ	4040	;# 
   300   000FC9                     SSP1BUF         equ	4041	;# 
   301   000FC9                     SSPBUF          equ	4041	;# 
   302   000FCA                     SSP1MSK         equ	4042	;# 
   303   000FCA                     SSPMSK          equ	4042	;# 
   304   000FCB                     SSP1CON3        equ	4043	;# 
   305   000FCB                     SSPCON3         equ	4043	;# 
   306   000FCC                     T1GCON          equ	4044	;# 
   307   000FCD                     T1CON           equ	4045	;# 
   308   000FCE                     TMR1            equ	4046	;# 
   309   000FCE                     TMR1L           equ	4046	;# 
   310   000FCF                     TMR1H           equ	4047	;# 
   311   000FD0                     RCON            equ	4048	;# 
   312   000FD1                     WDTCON          equ	4049	;# 
   313   000FD2                     OSCCON2         equ	4050	;# 
   314   000FD3                     OSCCON          equ	4051	;# 
   315   000FD5                     T0CON           equ	4053	;# 
   316   000FD6                     TMR0            equ	4054	;# 
   317   000FD6                     TMR0L           equ	4054	;# 
   318   000FD7                     TMR0H           equ	4055	;# 
   319   000FD8                     STATUS          equ	4056	;# 
   320   000FD9                     FSR2            equ	4057	;# 
   321   000FD9                     FSR2L           equ	4057	;# 
   322   000FDA                     FSR2H           equ	4058	;# 
   323   000FDB                     PLUSW2          equ	4059	;# 
   324   000FDC                     PREINC2         equ	4060	;# 
   325   000FDD                     POSTDEC2        equ	4061	;# 
   326   000FDE                     POSTINC2        equ	4062	;# 
   327   000FDF                     INDF2           equ	4063	;# 
   328   000FE0                     BSR             equ	4064	;# 
   329   000FE1                     FSR1            equ	4065	;# 
   330   000FE1                     FSR1L           equ	4065	;# 
   331   000FE2                     FSR1H           equ	4066	;# 
   332   000FE3                     PLUSW1          equ	4067	;# 
   333   000FE4                     PREINC1         equ	4068	;# 
   334   000FE5                     POSTDEC1        equ	4069	;# 
   335   000FE6                     POSTINC1        equ	4070	;# 
   336   000FE7                     INDF1           equ	4071	;# 
   337   000FE8                     WREG            equ	4072	;# 
   338   000FE9                     FSR0            equ	4073	;# 
   339   000FE9                     FSR0L           equ	4073	;# 
   340   000FEA                     FSR0H           equ	4074	;# 
   341   000FEB                     PLUSW0          equ	4075	;# 
   342   000FEC                     PREINC0         equ	4076	;# 
   343   000FED                     POSTDEC0        equ	4077	;# 
   344   000FEE                     POSTINC0        equ	4078	;# 
   345   000FEF                     INDF0           equ	4079	;# 
   346   000FF0                     INTCON3         equ	4080	;# 
   347   000FF1                     INTCON2         equ	4081	;# 
   348   000FF2                     INTCON          equ	4082	;# 
   349   000FF3                     PROD            equ	4083	;# 
   350   000FF3                     PRODL           equ	4083	;# 
   351   000FF4                     PRODH           equ	4084	;# 
   352   000FF5                     TABLAT          equ	4085	;# 
   353   000FF6                     TBLPTR          equ	4086	;# 
   354   000FF6                     TBLPTRL         equ	4086	;# 
   355   000FF7                     TBLPTRH         equ	4087	;# 
   356   000FF8                     TBLPTRU         equ	4088	;# 
   357   000FF9                     PCLAT           equ	4089	;# 
   358   000FF9                     PC              equ	4089	;# 
   359   000FF9                     PCL             equ	4089	;# 
   360   000FFA                     PCLATH          equ	4090	;# 
   361   000FFB                     PCLATU          equ	4091	;# 
   362   000FFC                     STKPTR          equ	4092	;# 
   363   000FFD                     TOS             equ	4093	;# 
   364   000FFD                     TOSL            equ	4093	;# 
   365   000FFE                     TOSH            equ	4094	;# 
   366   000FFF                     TOSU            equ	4095	;# 
   367   000F38                     ANSELA          equ	3896	;# 
   368   000F39                     ANSELB          equ	3897	;# 
   369   000F3A                     ANSELC          equ	3898	;# 
   370   000F3B                     ANSELD          equ	3899	;# 
   371   000F3C                     ANSELE          equ	3900	;# 
   372   000F3D                     PMD2            equ	3901	;# 
   373   000F3E                     PMD1            equ	3902	;# 
   374   000F3F                     PMD0            equ	3903	;# 
   375   000F40                     VREFCON2        equ	3904	;# 
   376   000F40                     DACCON1         equ	3904	;# 
   377   000F41                     VREFCON1        equ	3905	;# 
   378   000F41                     DACCON0         equ	3905	;# 
   379   000F42                     VREFCON0        equ	3906	;# 
   380   000F42                     FVRCON          equ	3906	;# 
   381   000F43                     CTMUICON        equ	3907	;# 
   382   000F43                     CTMUICONH       equ	3907	;# 
   383   000F44                     CTMUCONL        equ	3908	;# 
   384   000F44                     CTMUCON1        equ	3908	;# 
   385   000F45                     CTMUCONH        equ	3909	;# 
   386   000F45                     CTMUCON0        equ	3909	;# 
   387   000F46                     SRCON1          equ	3910	;# 
   388   000F47                     SRCON0          equ	3911	;# 
   389   000F48                     CCPTMRS1        equ	3912	;# 
   390   000F49                     CCPTMRS0        equ	3913	;# 
   391   000F4A                     T6CON           equ	3914	;# 
   392   000F4B                     PR6             equ	3915	;# 
   393   000F4C                     TMR6            equ	3916	;# 
   394   000F4D                     T5GCON          equ	3917	;# 
   395   000F4E                     T5CON           equ	3918	;# 
   396   000F4F                     TMR5            equ	3919	;# 
   397   000F4F                     TMR5L           equ	3919	;# 
   398   000F50                     TMR5H           equ	3920	;# 
   399   000F51                     T4CON           equ	3921	;# 
   400   000F52                     PR4             equ	3922	;# 
   401   000F53                     TMR4            equ	3923	;# 
   402   000F54                     CCP5CON         equ	3924	;# 
   403   000F55                     CCPR5           equ	3925	;# 
   404   000F55                     CCPR5L          equ	3925	;# 
   405   000F56                     CCPR5H          equ	3926	;# 
   406   000F57                     CCP4CON         equ	3927	;# 
   407   000F58                     CCPR4           equ	3928	;# 
   408   000F58                     CCPR4L          equ	3928	;# 
   409   000F59                     CCPR4H          equ	3929	;# 
   410   000F5A                     PSTR3CON        equ	3930	;# 
   411   000F5B                     ECCP3AS         equ	3931	;# 
   412   000F5B                     CCP3AS          equ	3931	;# 
   413   000F5C                     PWM3CON         equ	3932	;# 
   414   000F5D                     CCP3CON         equ	3933	;# 
   415   000F5E                     CCPR3           equ	3934	;# 
   416   000F5E                     CCPR3L          equ	3934	;# 
   417   000F5F                     CCPR3H          equ	3935	;# 
   418   000F60                     SLRCON          equ	3936	;# 
   419   000F61                     WPUB            equ	3937	;# 
   420   000F62                     IOCB            equ	3938	;# 
   421   000F63                     PSTR2CON        equ	3939	;# 
   422   000F64                     ECCP2AS         equ	3940	;# 
   423   000F64                     CCP2AS          equ	3940	;# 
   424   000F65                     PWM2CON         equ	3941	;# 
   425   000F66                     CCP2CON         equ	3942	;# 
   426   000F67                     CCPR2           equ	3943	;# 
   427   000F67                     CCPR2L          equ	3943	;# 
   428   000F68                     CCPR2H          equ	3944	;# 
   429   000F69                     SSP2CON3        equ	3945	;# 
   430   000F6A                     SSP2MSK         equ	3946	;# 
   431   000F6B                     SSP2CON2        equ	3947	;# 
   432   000F6C                     SSP2CON1        equ	3948	;# 
   433   000F6D                     SSP2STAT        equ	3949	;# 
   434   000F6E                     SSP2ADD         equ	3950	;# 
   435   000F6F                     SSP2BUF         equ	3951	;# 
   436   000F70                     BAUDCON2        equ	3952	;# 
   437   000F70                     BAUD2CON        equ	3952	;# 
   438   000F71                     RCSTA2          equ	3953	;# 
   439   000F71                     RC2STA          equ	3953	;# 
   440   000F72                     TXSTA2          equ	3954	;# 
   441   000F72                     TX2STA          equ	3954	;# 
   442   000F73                     TXREG2          equ	3955	;# 
   443   000F73                     TX2REG          equ	3955	;# 
   444   000F74                     RCREG2          equ	3956	;# 
   445   000F74                     RC2REG          equ	3956	;# 
   446   000F75                     SPBRG2          equ	3957	;# 
   447   000F75                     SP2BRG          equ	3957	;# 
   448   000F76                     SPBRGH2         equ	3958	;# 
   449   000F76                     SP2BRGH         equ	3958	;# 
   450   000F77                     CM2CON1         equ	3959	;# 
   451   000F77                     CM12CON         equ	3959	;# 
   452   000F78                     CM2CON0         equ	3960	;# 
   453   000F78                     CM2CON          equ	3960	;# 
   454   000F79                     CM1CON0         equ	3961	;# 
   455   000F79                     CM1CON          equ	3961	;# 
   456   000F7A                     PIE4            equ	3962	;# 
   457   000F7B                     PIR4            equ	3963	;# 
   458   000F7C                     IPR4            equ	3964	;# 
   459   000F7D                     PIE5            equ	3965	;# 
   460   000F7E                     PIR5            equ	3966	;# 
   461   000F7F                     IPR5            equ	3967	;# 
   462   000F80                     PORTA           equ	3968	;# 
   463   000F81                     PORTB           equ	3969	;# 
   464   000F82                     PORTC           equ	3970	;# 
   465   000F83                     PORTD           equ	3971	;# 
   466   000F84                     PORTE           equ	3972	;# 
   467   000F89                     LATA            equ	3977	;# 
   468   000F8A                     LATB            equ	3978	;# 
   469   000F8B                     LATC            equ	3979	;# 
   470   000F8C                     LATD            equ	3980	;# 
   471   000F8D                     LATE            equ	3981	;# 
   472   000F92                     TRISA           equ	3986	;# 
   473   000F92                     DDRA            equ	3986	;# 
   474   000F93                     TRISB           equ	3987	;# 
   475   000F93                     DDRB            equ	3987	;# 
   476   000F94                     TRISC           equ	3988	;# 
   477   000F94                     DDRC            equ	3988	;# 
   478   000F95                     TRISD           equ	3989	;# 
   479   000F95                     DDRD            equ	3989	;# 
   480   000F96                     TRISE           equ	3990	;# 
   481   000F96                     DDRE            equ	3990	;# 
   482   000F9B                     OSCTUNE         equ	3995	;# 
   483   000F9C                     HLVDCON         equ	3996	;# 
   484   000F9C                     LVDCON          equ	3996	;# 
   485   000F9D                     PIE1            equ	3997	;# 
   486   000F9E                     PIR1            equ	3998	;# 
   487   000F9F                     IPR1            equ	3999	;# 
   488   000FA0                     PIE2            equ	4000	;# 
   489   000FA1                     PIR2            equ	4001	;# 
   490   000FA2                     IPR2            equ	4002	;# 
   491   000FA3                     PIE3            equ	4003	;# 
   492   000FA4                     PIR3            equ	4004	;# 
   493   000FA5                     IPR3            equ	4005	;# 
   494   000FA6                     EECON1          equ	4006	;# 
   495   000FA7                     EECON2          equ	4007	;# 
   496   000FA8                     EEDATA          equ	4008	;# 
   497   000FA9                     EEADR           equ	4009	;# 
   498   000FAA                     EEADRH          equ	4010	;# 
   499   000FAB                     RCSTA1          equ	4011	;# 
   500   000FAB                     RCSTA           equ	4011	;# 
   501   000FAB                     RC1STA          equ	4011	;# 
   502   000FAC                     TXSTA1          equ	4012	;# 
   503   000FAC                     TXSTA           equ	4012	;# 
   504   000FAC                     TX1STA          equ	4012	;# 
   505   000FAD                     TXREG1          equ	4013	;# 
   506   000FAD                     TXREG           equ	4013	;# 
   507   000FAD                     TX1REG          equ	4013	;# 
   508   000FAE                     RCREG1          equ	4014	;# 
   509   000FAE                     RCREG           equ	4014	;# 
   510   000FAE                     RC1REG          equ	4014	;# 
   511   000FAF                     SPBRG1          equ	4015	;# 
   512   000FAF                     SPBRG           equ	4015	;# 
   513   000FAF                     SP1BRG          equ	4015	;# 
   514   000FB0                     SPBRGH1         equ	4016	;# 
   515   000FB0                     SPBRGH          equ	4016	;# 
   516   000FB0                     SP1BRGH         equ	4016	;# 
   517   000FB1                     T3CON           equ	4017	;# 
   518   000FB2                     TMR3            equ	4018	;# 
   519   000FB2                     TMR3L           equ	4018	;# 
   520   000FB3                     TMR3H           equ	4019	;# 
   521   000FB4                     T3GCON          equ	4020	;# 
   522   000FB6                     ECCP1AS         equ	4022	;# 
   523   000FB6                     ECCPAS          equ	4022	;# 
   524   000FB7                     PWM1CON         equ	4023	;# 
   525   000FB7                     PWMCON          equ	4023	;# 
   526   000FB8                     BAUDCON1        equ	4024	;# 
   527   000FB8                     BAUDCON         equ	4024	;# 
   528   000FB8                     BAUDCTL         equ	4024	;# 
   529   000FB8                     BAUD1CON        equ	4024	;# 
   530   000FB9                     PSTR1CON        equ	4025	;# 
   531   000FB9                     PSTRCON         equ	4025	;# 
   532   000FBA                     T2CON           equ	4026	;# 
   533   000FBB                     PR2             equ	4027	;# 
   534   000FBC                     TMR2            equ	4028	;# 
   535   000FBD                     CCP1CON         equ	4029	;# 
   536   000FBE                     CCPR1           equ	4030	;# 
   537   000FBE                     CCPR1L          equ	4030	;# 
   538   000FBF                     CCPR1H          equ	4031	;# 
   539   000FC0                     ADCON2          equ	4032	;# 
   540   000FC1                     ADCON1          equ	4033	;# 
   541   000FC2                     ADCON0          equ	4034	;# 
   542   000FC3                     ADRES           equ	4035	;# 
   543   000FC3                     ADRESL          equ	4035	;# 
   544   000FC4                     ADRESH          equ	4036	;# 
   545   000FC5                     SSP1CON2        equ	4037	;# 
   546   000FC5                     SSPCON2         equ	4037	;# 
   547   000FC6                     SSP1CON1        equ	4038	;# 
   548   000FC6                     SSPCON1         equ	4038	;# 
   549   000FC7                     SSP1STAT        equ	4039	;# 
   550   000FC7                     SSPSTAT         equ	4039	;# 
   551   000FC8                     SSP1ADD         equ	4040	;# 
   552   000FC8                     SSPADD          equ	4040	;# 
   553   000FC9                     SSP1BUF         equ	4041	;# 
   554   000FC9                     SSPBUF          equ	4041	;# 
   555   000FCA                     SSP1MSK         equ	4042	;# 
   556   000FCA                     SSPMSK          equ	4042	;# 
   557   000FCB                     SSP1CON3        equ	4043	;# 
   558   000FCB                     SSPCON3         equ	4043	;# 
   559   000FCC                     T1GCON          equ	4044	;# 
   560   000FCD                     T1CON           equ	4045	;# 
   561   000FCE                     TMR1            equ	4046	;# 
   562   000FCE                     TMR1L           equ	4046	;# 
   563   000FCF                     TMR1H           equ	4047	;# 
   564   000FD0                     RCON            equ	4048	;# 
   565   000FD1                     WDTCON          equ	4049	;# 
   566   000FD2                     OSCCON2         equ	4050	;# 
   567   000FD3                     OSCCON          equ	4051	;# 
   568   000FD5                     T0CON           equ	4053	;# 
   569   000FD6                     TMR0            equ	4054	;# 
   570   000FD6                     TMR0L           equ	4054	;# 
   571   000FD7                     TMR0H           equ	4055	;# 
   572   000FD8                     STATUS          equ	4056	;# 
   573   000FD9                     FSR2            equ	4057	;# 
   574   000FD9                     FSR2L           equ	4057	;# 
   575   000FDA                     FSR2H           equ	4058	;# 
   576   000FDB                     PLUSW2          equ	4059	;# 
   577   000FDC                     PREINC2         equ	4060	;# 
   578   000FDD                     POSTDEC2        equ	4061	;# 
   579   000FDE                     POSTINC2        equ	4062	;# 
   580   000FDF                     INDF2           equ	4063	;# 
   581   000FE0                     BSR             equ	4064	;# 
   582   000FE1                     FSR1            equ	4065	;# 
   583   000FE1                     FSR1L           equ	4065	;# 
   584   000FE2                     FSR1H           equ	4066	;# 
   585   000FE3                     PLUSW1          equ	4067	;# 
   586   000FE4                     PREINC1         equ	4068	;# 
   587   000FE5                     POSTDEC1        equ	4069	;# 
   588   000FE6                     POSTINC1        equ	4070	;# 
   589   000FE7                     INDF1           equ	4071	;# 
   590   000FE8                     WREG            equ	4072	;# 
   591   000FE9                     FSR0            equ	4073	;# 
   592   000FE9                     FSR0L           equ	4073	;# 
   593   000FEA                     FSR0H           equ	4074	;# 
   594   000FEB                     PLUSW0          equ	4075	;# 
   595   000FEC                     PREINC0         equ	4076	;# 
   596   000FED                     POSTDEC0        equ	4077	;# 
   597   000FEE                     POSTINC0        equ	4078	;# 
   598   000FEF                     INDF0           equ	4079	;# 
   599   000FF0                     INTCON3         equ	4080	;# 
   600   000FF1                     INTCON2         equ	4081	;# 
   601   000FF2                     INTCON          equ	4082	;# 
   602   000FF3                     PROD            equ	4083	;# 
   603   000FF3                     PRODL           equ	4083	;# 
   604   000FF4                     PRODH           equ	4084	;# 
   605   000FF5                     TABLAT          equ	4085	;# 
   606   000FF6                     TBLPTR          equ	4086	;# 
   607   000FF6                     TBLPTRL         equ	4086	;# 
   608   000FF7                     TBLPTRH         equ	4087	;# 
   609   000FF8                     TBLPTRU         equ	4088	;# 
   610   000FF9                     PCLAT           equ	4089	;# 
   611   000FF9                     PC              equ	4089	;# 
   612   000FF9                     PCL             equ	4089	;# 
   613   000FFA                     PCLATH          equ	4090	;# 
   614   000FFB                     PCLATU          equ	4091	;# 
   615   000FFC                     STKPTR          equ	4092	;# 
   616   000FFD                     TOS             equ	4093	;# 
   617   000FFD                     TOSL            equ	4093	;# 
   618   000FFE                     TOSH            equ	4094	;# 
   619   000FFF                     TOSU            equ	4095	;# 
   620                           
   621                           	psect	idataCOMRAM
   622   001A16                     __pidataCOMRAM:
   623                           	callstack 0
   624                           
   625                           ;initializer for _LCD_entry_mode
   626   001A16  06                 	db	6
   627                           
   628                           ;initializer for _LCD_display_control
   629   001A17  0C                 	db	12
   630   000F3A                     _ANSELC         set	3898
   631   000F95                     _TRISDbits      set	3989
   632   000F8C                     _LATDbits       set	3980
   633   000FAD                     _TXREG          set	4013
   634   000FAC                     _TXSTAbits      set	4012
   635   000FAB                     _RCSTAbits      set	4011
   636   000FAE                     _RCREG1         set	4014
   637   000F9E                     _PIR1bits       set	3998
   638   000FF2                     _INTCONbits     set	4082
   639   000F9D                     _PIE1bits       set	3997
   640   000FAB                     _RCSTA1bits     set	4011
   641   000FAF                     _SPBRG1         set	4015
   642   000FB0                     _SPBRGH1        set	4016
   643   000FB8                     _BAUDCON1bits   set	4024
   644   000FAC                     _TXSTA1bits     set	4012
   645   000F94                     _TRISCbits      set	3988
   646   000FD3                     _OSCCON         set	4051
   647                           
   648                           	psect	smallconst
   649   001000                     __psmallconst:
   650                           	callstack 0
   651   001000  00                 	db	0
   652   001001                     STR_1:
   653   001001  41                 	db	65	;'A'
   654   001002  54                 	db	84	;'T'
   655   001003  45                 	db	69	;'E'
   656   001004  30                 	db	48	;'0'
   657   001005  0D                 	db	13
   658   001006  00                 	db	0
   659   001007                     STR_2:
   660   001007  30                 	db	48	;'0'
   661   001008  31                 	db	49	;'1'
   662   001009  30                 	db	48	;'0'
   663   00100A  43                 	db	67	;'C'
   664   00100B  0D                 	db	13
   665   00100C  00                 	db	0
   666   00100D                     STR_5:
   667   00100D  41                 	db	65	;'A'
   668   00100E  54                 	db	84	;'T'
   669   00100F  52                 	db	82	;'R'
   670   001010  56                 	db	86	;'V'
   671   001011  0D                 	db	13
   672   001012  00                 	db	0
   673   001013                     STR_7:
   674   001013  20                 	db	32
   675   001014  20                 	db	32
   676   001015  20                 	db	32
   677   001016  20                 	db	32
   678   001017  20                 	db	32
   679   001018  00                 	db	0
   680   001019                     STR_6:
   681   001019  56                 	db	86	;'V'
   682   00101A  42                 	db	66	;'B'
   683   00101B  61                 	db	97	;'a'
   684   00101C  74                 	db	116	;'t'
   685   00101D  74                 	db	116	;'t'
   686   00101E  00                 	db	0
   687   00101F                     STR_4:
   688   00101F  52                 	db	82	;'R'
   689   001020  50                 	db	80	;'P'
   690   001021  4D                 	db	77	;'M'
   691   001022  00                 	db	0
   692   001023                     STR_3:
   693   001023  25                 	db	37
   694   001024  75                 	db	117	;'u'
   695   001025  00                 	db	0
   696   001026  00                 	db	0	; dummy byte at the end
   697   001000                     __smallconst    set	__psmallconst
   698   001000                     __mediumconst   set	__psmallconst
   699   000002                     __activetblptr  equ	2
   700                           
   701                           ; #config settings
   702                           
   703                           	psect	cinit
   704   0018FC                     __pcinit:
   705                           	callstack 0
   706   0018FC                     start_initialization:
   707                           	callstack 0
   708   0018FC                     __initialization:
   709                           	callstack 0
   710                           
   711                           ; Initialize objects allocated to COMRAM (2 bytes)
   712                           ; load TBLPTR registers with __pidataCOMRAM
   713   0018FC  0E16               	movlw	low __pidataCOMRAM
   714   0018FE  6EF6               	movwf	tblptrl,c
   715   001900  0E1A               	movlw	high __pidataCOMRAM
   716   001902  6EF7               	movwf	tblptrh,c
   717   001904  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   718   001906  6EF8               	movwf	tblptru,c
   719   001908  0009               	tblrd		*+	;fetch initializer
   720   00190A  CFF5 F050          	movff	tablat,__pdataCOMRAM
   721   00190E  0009               	tblrd		*+	;fetch initializer
   722   001910  CFF5 F051          	movff	tablat,__pdataCOMRAM+1
   723                           
   724                           ; Clear objects allocated to BANK0 (64 bytes)
   725   001914  EE00  F060         	lfsr	0,__pbssBANK0
   726   001918  0E40               	movlw	64
   727   00191A                     clear_0:
   728   00191A  6AEE               	clrf	postinc0,c
   729   00191C  06E8               	decf	wreg,f,c
   730   00191E  E1FD               	bnz	clear_0
   731                           
   732                           ; Clear objects allocated to COMRAM (12 bytes)
   733   001920  EE00  F044         	lfsr	0,__pbssCOMRAM
   734   001924  0E0C               	movlw	12
   735   001926                     clear_1:
   736   001926  6AEE               	clrf	postinc0,c
   737   001928  06E8               	decf	wreg,f,c
   738   00192A  E1FD               	bnz	clear_1
   739   00192C                     end_of_initialization:
   740                           	callstack 0
   741   00192C                     __end_of__initialization:
   742                           	callstack 0
   743   00192C  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   744   00192E  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   745   001930  0E00               	movlw	low (__Lmediumconst shr (0+16))
   746   001932  6EF8               	movwf	tblptru,c
   747   001934  0100               	movlb	0
   748   001936  EF2C  F00C         	goto	_main	;jump to C main() function
   749                           
   750                           	psect	bssCOMRAM
   751   000044                     __pbssCOMRAM:
   752                           	callstack 0
   753   000044                     	ds	4
   754   000048                     _width:
   755                           	callstack 0
   756   000048                     	ds	2
   757   00004A                     _prec:
   758                           	callstack 0
   759   00004A                     	ds	2
   760   00004C                     _flags:
   761                           	callstack 0
   762   00004C                     	ds	1
   763   00004D                     _message_complete:
   764                           	callstack 0
   765   00004D                     	ds	1
   766   00004E                     _RX_char:
   767                           	callstack 0
   768   00004E                     	ds	1
   769   00004F                     _buffer_count:
   770                           	callstack 0
   771   00004F                     	ds	1
   772                           
   773                           	psect	dataCOMRAM
   774   000050                     __pdataCOMRAM:
   775                           	callstack 0
   776   000050                     _LCD_entry_mode:
   777                           	callstack 0
   778   000050                     	ds	1
   779   000051                     _LCD_display_control:
   780                           	callstack 0
   781   000051                     	ds	1
   782                           
   783                           	psect	bssBANK0
   784   000060                     __pbssBANK0:
   785                           	callstack 0
   786   000060                     _dbuf:
   787                           	callstack 0
   788   000060                     	ds	32
   789   000080                     _buffer:
   790                           	callstack 0
   791   000080                     	ds	32
   792                           
   793                           	psect	cstackCOMRAM
   794   000001                     __pcstackCOMRAM:
   795                           	callstack 0
   796   000001                     ??_UART_ISR:
   797                           
   798                           ; 1 bytes @ 0x0
   799   000001                     	ds	2
   800   000003                     ?___lwdiv:
   801                           	callstack 0
   802   000003                     ?___lwmod:
   803                           	callstack 0
   804   000003                     UART1_SendChar@c:
   805                           	callstack 0
   806   000003                     hex_char_to_value@c:
   807                           	callstack 0
   808   000003                     ___lwdiv@dividend:
   809                           	callstack 0
   810   000003                     ___lwmod@dividend:
   811                           	callstack 0
   812   000003                     fputc@c:
   813                           	callstack 0
   814   000003                     ??_LCD_write_command:
   815   000003                     ??_LCD_write_data:
   816                           
   817                           ; 1 bytes @ 0x2
   818   000003                     	ds	1
   819   000004                     UART1_SendString@string:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x3
   823   000004                     	ds	1
   824   000005                     LCD_write_command@command:
   825                           	callstack 0
   826   000005                     LCD_write_data@data:
   827                           	callstack 0
   828   000005                     fputc@fp:
   829                           	callstack 0
   830   000005                     ___lwdiv@divisor:
   831                           	callstack 0
   832   000005                     ___lwmod@divisor:
   833                           	callstack 0
   834   000005                     ??_UART1_SendString:
   835                           
   836                           ; 1 bytes @ 0x4
   837   000005                     	ds	1
   838   000006                     LCD_cursor_set@column:
   839                           	callstack 0
   840   000006                     UART1_SendString@i:
   841                           	callstack 0
   842   000006                     LCD_write_string@string:
   843                           	callstack 0
   844   000006                     ??_LCD_clear:
   845   000006                     ??_fputc:
   846                           
   847                           ; 1 bytes @ 0x5
   848   000006                     	ds	1
   849   000007                     LCD_cursor_set@row:
   850                           	callstack 0
   851   000007                     ___lwmod@counter:
   852                           	callstack 0
   853   000007                     ___lwdiv@quotient:
   854                           	callstack 0
   855   000007                     ??_LCD_init:
   856   000007                     
   857                           ; 1 bytes @ 0x6
   858   000007                     	ds	1
   859   000008                     ??_LCD_write_string:
   860                           
   861                           ; 1 bytes @ 0x7
   862   000008                     	ds	1
   863   000009                     ___lwdiv@counter:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x8
   867   000009                     	ds	1
   868   00000A                     LCD_write_string@i:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x9
   872   00000A                     	ds	1
   873   00000B                     vfpfcnvrt@fp:
   874                           	callstack 0
   875   00000B                     ??_print_Vbatt:
   876                           
   877                           ; 1 bytes @ 0xA
   878   00000B                     	ds	1
   879   00000C                     vfpfcnvrt@fmt:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0xB
   883   00000C                     	ds	1
   884   00000D                     vfpfcnvrt@ap:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0xC
   888   00000D                     	ds	1
   889   00000E                     ??_vfpfcnvrt:
   890                           
   891                           ; 1 bytes @ 0xD
   892   00000E                     	ds	1
   893   00000F                     vfpfcnvrt@convarg:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0xE
   897   00000F                     	ds	4
   898   000013                     vfpfcnvrt@cp:
   899                           	callstack 0
   900                           
   901                           ; 1 bytes @ 0x12
   902   000013                     	ds	1
   903   000014                     vfpfcnvrt@c:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x13
   907   000014                     	ds	1
   908   000015                     ?_vfprintf:
   909                           	callstack 0
   910   000015                     vfprintf@fp:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x14
   914   000015                     	ds	1
   915   000016                     vfprintf@fmt:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x15
   919   000016                     	ds	1
   920   000017                     vfprintf@ap:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x16
   924   000017                     	ds	1
   925   000018                     vfprintf@cfmt:
   926                           	callstack 0
   927   000018                     
   928                           ; 1 bytes @ 0x17
   929   000018                     	ds	1
   930   000019                     ?_sprintf:
   931                           	callstack 0
   932   000019                     sprintf@s:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x18
   936   000019                     	ds	1
   937   00001A                     sprintf@fmt:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x19
   941   00001A                     	ds	3
   942   00001D                     sprintf@ap:
   943                           	callstack 0
   944   00001D                     
   945                           ; 1 bytes @ 0x1C
   946   00001D                     	ds	1
   947   00001E                     sprintf@f:
   948                           	callstack 0
   949                           
   950                           ; 11 bytes @ 0x1D
   951   00001E                     	ds	11
   952   000029                     ??_print_RPM:
   953                           
   954                           ; 1 bytes @ 0x28
   955   000029                     	ds	3
   956   00002C                     print_RPM@rpm_string:
   957                           	callstack 0
   958                           
   959                           ; 16 bytes @ 0x2B
   960   00002C                     	ds	16
   961   00003C                     print_RPM@A:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x3B
   965   00003C                     	ds	2
   966   00003E                     print_RPM@B:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x3D
   970   00003E                     	ds	2
   971   000040                     print_RPM@RPM:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x3F
   975   000040                     	ds	2
   976   000042                     ??_main:
   977                           
   978                           ; 1 bytes @ 0x41
   979   000042                     	ds	2
   980                           
   981 ;;
   982 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   983 ;;
   984 ;; *************** function _main *****************
   985 ;; Defined at:
   986 ;;		line 27 in file "OBCII_PIC18F46K22.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;Total ram usage:        2 bytes
  1005 ;; Hardware stack levels required when called: 7
  1006 ;; This function calls:
  1007 ;;		_LCD_clear
  1008 ;;		_LCD_init
  1009 ;;		_UART1_Init
  1010 ;;		_UART1_SendString
  1011 ;;		_print_RPM
  1012 ;;		_print_Vbatt
  1013 ;; This function is called by:
  1014 ;;		Startup code after reset
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text0
  1019   001858                     __ptext0:
  1020                           	callstack 0
  1021   001858                     _main:
  1022                           	callstack 24
  1023   001858                     
  1024                           ;OBCII_PIC18F46K22.c: 29:     OSCCON = 0b01110000;
  1025   001858  0E70               	movlw	112
  1026   00185A  6ED3               	movwf	211,c	;volatile
  1027   00185C                     
  1028                           ;OBCII_PIC18F46K22.c: 32:     LCD_init();
  1029   00185C  EC15  F00B         	call	_LCD_init	;wreg free
  1030   001860                     
  1031                           ;OBCII_PIC18F46K22.c: 33:     LCD_clear();
  1032   001860  ECEC  F00C         	call	_LCD_clear	;wreg free
  1033   001864                     
  1034                           ;OBCII_PIC18F46K22.c: 34:     UART1_Init();
  1035   001864  ECD6  F00C         	call	_UART1_Init	;wreg free
  1036   001868                     
  1037                           ;OBCII_PIC18F46K22.c: 36:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  1038   001868  0E29               	movlw	41
  1039   00186A  6E43               	movwf	(??_main+1)^0,c
  1040   00186C  0E96               	movlw	150
  1041   00186E  6E42               	movwf	??_main^0,c
  1042   001870  0E7F               	movlw	127
  1043   001872                     u1257:
  1044   001872  2EE8               	decfsz	wreg,f,c
  1045   001874  D7FE               	bra	u1257
  1046   001876  2E42               	decfsz	??_main^0,f,c
  1047   001878  D7FC               	bra	u1257
  1048   00187A  2E43               	decfsz	(??_main+1)^0,f,c
  1049   00187C  D7FA               	bra	u1257
  1050   00187E  0000               	nop	
  1051   001880                     
  1052                           ;OBCII_PIC18F46K22.c: 37:     UART1_SendString("ATE0\r");
  1053   001880  0E01               	movlw	low STR_1
  1054   001882  6E04               	movwf	UART1_SendString@string^0,c
  1055   001884  EC59  F00C         	call	_UART1_SendString	;wreg free
  1056   001888                     
  1057                           ;OBCII_PIC18F46K22.c: 38:     _delay((unsigned long)((500)*(16000000/4000.0)));
  1058   001888  0E0B               	movlw	11
  1059   00188A  6E43               	movwf	(??_main+1)^0,c
  1060   00188C  0E26               	movlw	38
  1061   00188E  6E42               	movwf	??_main^0,c
  1062   001890  0E5E               	movlw	94
  1063   001892                     u1267:
  1064   001892  2EE8               	decfsz	wreg,f,c
  1065   001894  D7FE               	bra	u1267
  1066   001896  2E42               	decfsz	??_main^0,f,c
  1067   001898  D7FC               	bra	u1267
  1068   00189A  2E43               	decfsz	(??_main+1)^0,f,c
  1069   00189C  D7FA               	bra	u1267
  1070   00189E                     
  1071                           ;OBCII_PIC18F46K22.c: 39:     LCD_clear();
  1072   00189E  ECEC  F00C         	call	_LCD_clear	;wreg free
  1073   0018A2                     l1858:
  1074                           
  1075                           ;OBCII_PIC18F46K22.c: 42:             print_RPM();
  1076   0018A2  ECC9  F008         	call	_print_RPM	;wreg free
  1077   0018A6                     
  1078                           ;OBCII_PIC18F46K22.c: 43:             print_Vbatt();
  1079   0018A6  ECD7  F00A         	call	_print_Vbatt	;wreg free
  1080   0018AA  EF51  F00C         	goto	l1858
  1081   0018AE  EF69  F000         	goto	start
  1082   0018B2                     __end_of_main:
  1083                           	callstack 0
  1084                           
  1085 ;; *************** function _print_Vbatt *****************
  1086 ;; Defined at:
  1087 ;;		line 157 in file "OBCII_PIC18F46K22.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;Total ram usage:        2 bytes
  1106 ;; Hardware stack levels used: 1
  1107 ;; Hardware stack levels required when called: 4
  1108 ;; This function calls:
  1109 ;;		_LCD_cursor_set
  1110 ;;		_LCD_write_string
  1111 ;;		_UART1_SendString
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text1
  1118   0015AE                     __ptext1:
  1119                           	callstack 0
  1120   0015AE                     _print_Vbatt:
  1121                           	callstack 26
  1122   0015AE                     
  1123                           ;OBCII_PIC18F46K22.c: 159:     UART1_SendString("ATRV\r");
  1124   0015AE  0E0D               	movlw	low STR_5
  1125   0015B0  6E04               	movwf	UART1_SendString@string^0,c
  1126   0015B2  EC59  F00C         	call	_UART1_SendString	;wreg free
  1127   0015B6                     l1782:
  1128                           
  1129                           ;OBCII_PIC18F46K22.c: 160:     while(!message_complete) {
  1130   0015B6  504D               	movf	_message_complete^0,w,c	;volatile
  1131   0015B8  B4D8               	btfsc	status,2,c
  1132   0015BA  EFE1  F00A         	goto	u1011
  1133   0015BE  EFE3  F00A         	goto	u1010
  1134   0015C2                     u1011:
  1135   0015C2  EFDB  F00A         	goto	l1782
  1136   0015C6                     u1010:
  1137   0015C6                     
  1138                           ;OBCII_PIC18F46K22.c: 164:     LCD_cursor_set(1,7);
  1139   0015C6  0E07               	movlw	7
  1140   0015C8  6E06               	movwf	LCD_cursor_set@column^0,c
  1141   0015CA  0E01               	movlw	1
  1142   0015CC  ECFC  F00B         	call	_LCD_cursor_set
  1143   0015D0                     
  1144                           ;OBCII_PIC18F46K22.c: 165:     LCD_write_string("VBatt");
  1145   0015D0  0E19               	movlw	low STR_6
  1146   0015D2  6E06               	movwf	LCD_write_string@string^0,c
  1147   0015D4  5006               	movf	LCD_write_string@string^0,w,c
  1148   0015D6  A4D8               	btfss	status,2,c
  1149   0015D8  0E10               	movlw	high __smallconst
  1150   0015DA  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1151   0015DC  EC53  F00B         	call	_LCD_write_string	;wreg free
  1152   0015E0                     
  1153                           ;OBCII_PIC18F46K22.c: 166:     LCD_cursor_set(2,7);
  1154   0015E0  0E07               	movlw	7
  1155   0015E2  6E06               	movwf	LCD_cursor_set@column^0,c
  1156   0015E4  0E02               	movlw	2
  1157   0015E6  ECFC  F00B         	call	_LCD_cursor_set
  1158                           
  1159                           ;OBCII_PIC18F46K22.c: 167:     LCD_write_string(buffer);
  1160   0015EA  0E80               	movlw	low _buffer
  1161   0015EC  6E06               	movwf	LCD_write_string@string^0,c
  1162   0015EE  6A07               	clrf	(LCD_write_string@string+1)^0,c
  1163   0015F0  EC53  F00B         	call	_LCD_write_string	;wreg free
  1164   0015F4                     
  1165                           ;OBCII_PIC18F46K22.c: 168:     LCD_cursor_set(2,12);
  1166   0015F4  0E0C               	movlw	12
  1167   0015F6  6E06               	movwf	LCD_cursor_set@column^0,c
  1168   0015F8  0E02               	movlw	2
  1169   0015FA  ECFC  F00B         	call	_LCD_cursor_set
  1170   0015FE                     
  1171                           ;OBCII_PIC18F46K22.c: 169:     LCD_write_string("     ");
  1172   0015FE  0E13               	movlw	low STR_7
  1173   001600  6E06               	movwf	LCD_write_string@string^0,c
  1174   001602  5006               	movf	LCD_write_string@string^0,w,c
  1175   001604  A4D8               	btfss	status,2,c
  1176   001606  0E10               	movlw	high __smallconst
  1177   001608  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1178   00160A  EC53  F00B         	call	_LCD_write_string	;wreg free
  1179   00160E                     
  1180                           ;OBCII_PIC18F46K22.c: 171:     buffer_count = 0;
  1181   00160E  6A4F               	clrf	_buffer_count^0,c
  1182   001610                     
  1183                           ;OBCII_PIC18F46K22.c: 172:     message_complete = 0;
  1184   001610  6A4D               	clrf	_message_complete^0,c	;volatile
  1185   001612                     
  1186                           ;OBCII_PIC18F46K22.c: 174:     _delay((unsigned long)((500)*(16000000/4000.0)));
  1187   001612  0E0B               	movlw	11
  1188   001614  6E0C               	movwf	(??_print_Vbatt+1)^0,c
  1189   001616  0E26               	movlw	38
  1190   001618  6E0B               	movwf	??_print_Vbatt^0,c
  1191   00161A  0E5E               	movlw	94
  1192   00161C                     u1277:
  1193   00161C  2EE8               	decfsz	wreg,f,c
  1194   00161E  D7FE               	bra	u1277
  1195   001620  2E0B               	decfsz	??_print_Vbatt^0,f,c
  1196   001622  D7FC               	bra	u1277
  1197   001624  2E0C               	decfsz	(??_print_Vbatt+1)^0,f,c
  1198   001626  D7FA               	bra	u1277
  1199   001628  0012               	return		;funcret
  1200   00162A                     __end_of_print_Vbatt:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _print_RPM *****************
  1204 ;; Defined at:
  1205 ;;		line 132 in file "OBCII_PIC18F46K22.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  rpm_string     16   43[COMRAM] unsigned char [16]
  1210 ;;  RPM             2   63[COMRAM] unsigned int 
  1211 ;;  B               2   61[COMRAM] unsigned int 
  1212 ;;  A               2   59[COMRAM] unsigned int 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;Total ram usage:       25 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 6
  1229 ;; This function calls:
  1230 ;;		_LCD_cursor_set
  1231 ;;		_LCD_write_string
  1232 ;;		_UART1_SendString
  1233 ;;		_hex_char_to_value
  1234 ;;		_sprintf
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text2
  1241   001192                     __ptext2:
  1242                           	callstack 0
  1243   001192                     _print_RPM:
  1244                           	callstack 24
  1245   001192                     
  1246                           ;OBCII_PIC18F46K22.c: 134:     UART1_SendString("010C\r");
  1247   001192  0E07               	movlw	low STR_2
  1248   001194  6E04               	movwf	UART1_SendString@string^0,c
  1249   001196  EC59  F00C         	call	_UART1_SendString	;wreg free
  1250   00119A                     l1758:
  1251                           
  1252                           ;OBCII_PIC18F46K22.c: 135:     while(!message_complete) {
  1253   00119A  504D               	movf	_message_complete^0,w,c	;volatile
  1254   00119C  B4D8               	btfsc	status,2,c
  1255   00119E  EFD3  F008         	goto	u1001
  1256   0011A2  EFD5  F008         	goto	u1000
  1257   0011A6                     u1001:
  1258   0011A6  EFCD  F008         	goto	l1758
  1259   0011AA                     u1000:
  1260   0011AA                     
  1261                           ;OBCII_PIC18F46K22.c: 139:     unsigned int A = (hex_char_to_value(buffer[4]) << 4) | he
      +                          x_char_to_value(buffer[5]);
  1262   0011AA  0100               	movlb	0	; () banked
  1263   0011AC  5184               	movf	(_buffer+4)& (0+255),w,b
  1264   0011AE  EC98  F00A         	call	_hex_char_to_value
  1265   0011B2  6E29               	movwf	??_print_RPM^0,c
  1266   0011B4  6A2A               	clrf	(??_print_RPM+1)^0,c
  1267   0011B6  3A29               	swapf	??_print_RPM^0,f,c
  1268   0011B8  3A2A               	swapf	(??_print_RPM+1)^0,f,c
  1269   0011BA  0EF0               	movlw	240
  1270   0011BC  162A               	andwf	(??_print_RPM+1)^0,f,c
  1271   0011BE  5029               	movf	??_print_RPM^0,w,c
  1272   0011C0  0B0F               	andlw	15
  1273   0011C2  122A               	iorwf	(??_print_RPM+1)^0,f,c
  1274   0011C4  0EF0               	movlw	240
  1275   0011C6  1629               	andwf	??_print_RPM^0,f,c
  1276   0011C8  0100               	movlb	0	; () banked
  1277   0011CA  5185               	movf	(_buffer+5)& (0+255),w,b
  1278   0011CC  EC98  F00A         	call	_hex_char_to_value
  1279   0011D0  6E2B               	movwf	(??_print_RPM+2)^0,c
  1280   0011D2  502B               	movf	(??_print_RPM+2)^0,w,c
  1281   0011D4  1029               	iorwf	??_print_RPM^0,w,c
  1282   0011D6  6E3C               	movwf	print_RPM@A^0,c
  1283   0011D8  502A               	movf	(??_print_RPM+1)^0,w,c
  1284   0011DA  6E3D               	movwf	(print_RPM@A+1)^0,c
  1285                           
  1286                           ;OBCII_PIC18F46K22.c: 140:     unsigned int B = (hex_char_to_value(buffer[6]) << 4) | he
      +                          x_char_to_value(buffer[7]);
  1287   0011DC  0100               	movlb	0	; () banked
  1288   0011DE  5186               	movf	(_buffer+6)& (0+255),w,b
  1289   0011E0  EC98  F00A         	call	_hex_char_to_value
  1290   0011E4  6E29               	movwf	??_print_RPM^0,c
  1291   0011E6  6A2A               	clrf	(??_print_RPM+1)^0,c
  1292   0011E8  3A29               	swapf	??_print_RPM^0,f,c
  1293   0011EA  3A2A               	swapf	(??_print_RPM+1)^0,f,c
  1294   0011EC  0EF0               	movlw	240
  1295   0011EE  162A               	andwf	(??_print_RPM+1)^0,f,c
  1296   0011F0  5029               	movf	??_print_RPM^0,w,c
  1297   0011F2  0B0F               	andlw	15
  1298   0011F4  122A               	iorwf	(??_print_RPM+1)^0,f,c
  1299   0011F6  0EF0               	movlw	240
  1300   0011F8  1629               	andwf	??_print_RPM^0,f,c
  1301   0011FA  0100               	movlb	0	; () banked
  1302   0011FC  5187               	movf	(_buffer+7)& (0+255),w,b
  1303   0011FE  EC98  F00A         	call	_hex_char_to_value
  1304   001202  6E2B               	movwf	(??_print_RPM+2)^0,c
  1305   001204  502B               	movf	(??_print_RPM+2)^0,w,c
  1306   001206  1029               	iorwf	??_print_RPM^0,w,c
  1307   001208  6E3E               	movwf	print_RPM@B^0,c
  1308   00120A  502A               	movf	(??_print_RPM+1)^0,w,c
  1309   00120C  6E3F               	movwf	(print_RPM@B+1)^0,c
  1310   00120E                     
  1311                           ;OBCII_PIC18F46K22.c: 141:     unsigned int RPM = ((A * 256) + B) / 4;
  1312   00120E  503C               	movf	print_RPM@A^0,w,c
  1313   001210  6E2A               	movwf	(??_print_RPM+1)^0,c
  1314   001212  6A29               	clrf	??_print_RPM^0,c
  1315   001214  503E               	movf	print_RPM@B^0,w,c
  1316   001216  2629               	addwf	??_print_RPM^0,f,c
  1317   001218  503F               	movf	(print_RPM@B+1)^0,w,c
  1318   00121A  222A               	addwfc	(??_print_RPM+1)^0,f,c
  1319   00121C  90D8               	bcf	status,0,c
  1320   00121E  322A               	rrcf	(??_print_RPM+1)^0,f,c
  1321   001220  3229               	rrcf	??_print_RPM^0,f,c
  1322   001222  90D8               	bcf	status,0,c
  1323   001224  322A               	rrcf	(??_print_RPM+1)^0,f,c
  1324   001226  3229               	rrcf	??_print_RPM^0,f,c
  1325   001228  C029  F040         	movff	??_print_RPM,print_RPM@RPM
  1326   00122C  C02A  F041         	movff	??_print_RPM+1,print_RPM@RPM+1
  1327   001230                     
  1328                           ;OBCII_PIC18F46K22.c: 143:     char rpm_string[16];;OBCII_PIC18F46K22.c: 144:     sprint
      +                          f(rpm_string, "%u", RPM);
  1329   001230  0E2C               	movlw	low print_RPM@rpm_string
  1330   001232  6E19               	movwf	sprintf@s^0,c
  1331   001234  0E23               	movlw	low STR_3
  1332   001236  6E1A               	movwf	sprintf@fmt^0,c
  1333   001238  C040  F01B         	movff	print_RPM@RPM,?_sprintf+2
  1334   00123C  C041  F01C         	movff	print_RPM@RPM+1,?_sprintf+3
  1335   001240  ECBC  F00C         	call	_sprintf	;wreg free
  1336   001244                     
  1337                           ;OBCII_PIC18F46K22.c: 146:     LCD_cursor_set(1,1);
  1338   001244  0E01               	movlw	1
  1339   001246  6E06               	movwf	LCD_cursor_set@column^0,c
  1340   001248  0E01               	movlw	1
  1341   00124A  ECFC  F00B         	call	_LCD_cursor_set
  1342   00124E                     
  1343                           ;OBCII_PIC18F46K22.c: 147:     LCD_write_string("RPM");
  1344   00124E  0E1F               	movlw	low STR_4
  1345   001250  6E06               	movwf	LCD_write_string@string^0,c
  1346   001252  5006               	movf	LCD_write_string@string^0,w,c
  1347   001254  A4D8               	btfss	status,2,c
  1348   001256  0E10               	movlw	high __smallconst
  1349   001258  6E07               	movwf	(LCD_write_string@string+1)^0,c
  1350   00125A  EC53  F00B         	call	_LCD_write_string	;wreg free
  1351   00125E                     
  1352                           ;OBCII_PIC18F46K22.c: 148:     LCD_cursor_set(2,1);
  1353   00125E  0E01               	movlw	1
  1354   001260  6E06               	movwf	LCD_cursor_set@column^0,c
  1355   001262  0E02               	movlw	2
  1356   001264  ECFC  F00B         	call	_LCD_cursor_set
  1357   001268                     
  1358                           ;OBCII_PIC18F46K22.c: 149:     LCD_write_string(rpm_string);
  1359   001268  0E2C               	movlw	low print_RPM@rpm_string
  1360   00126A  6E06               	movwf	LCD_write_string@string^0,c
  1361   00126C  6A07               	clrf	(LCD_write_string@string+1)^0,c
  1362   00126E  EC53  F00B         	call	_LCD_write_string	;wreg free
  1363   001272                     
  1364                           ;OBCII_PIC18F46K22.c: 151:     buffer_count = 0;
  1365   001272  6A4F               	clrf	_buffer_count^0,c
  1366   001274                     
  1367                           ;OBCII_PIC18F46K22.c: 152:     message_complete = 0;
  1368   001274  6A4D               	clrf	_message_complete^0,c	;volatile
  1369   001276                     
  1370                           ;OBCII_PIC18F46K22.c: 154:     _delay((unsigned long)((500)*(16000000/4000.0)));
  1371   001276  0E0B               	movlw	11
  1372   001278  6E2A               	movwf	(??_print_RPM+1)^0,c
  1373   00127A  0E26               	movlw	38
  1374   00127C  6E29               	movwf	??_print_RPM^0,c
  1375   00127E  0E5E               	movlw	94
  1376   001280                     u1287:
  1377   001280  2EE8               	decfsz	wreg,f,c
  1378   001282  D7FE               	bra	u1287
  1379   001284  2E29               	decfsz	??_print_RPM^0,f,c
  1380   001286  D7FC               	bra	u1287
  1381   001288  2E2A               	decfsz	(??_print_RPM+1)^0,f,c
  1382   00128A  D7FA               	bra	u1287
  1383   00128C  0012               	return		;funcret
  1384   00128E                     __end_of_print_RPM:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _sprintf *****************
  1388 ;; Defined at:
  1389 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  s               1   24[COMRAM] PTR unsigned char 
  1392 ;;		 -> print_RPM@rpm_string(16), 
  1393 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  1394 ;;		 -> STR_3(3), 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  f              11   29[COMRAM] struct _IO_FILE
  1397 ;;  ret             2    0        int 
  1398 ;;  ap              1   28[COMRAM] PTR void [1]
  1399 ;;		 -> ?_sprintf(2), 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2   24[COMRAM] int 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;Total ram usage:       16 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; Hardware stack levels required when called: 5
  1416 ;; This function calls:
  1417 ;;		_vfprintf
  1418 ;; This function is called by:
  1419 ;;		_print_RPM
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text3
  1424   001978                     __ptext3:
  1425                           	callstack 0
  1426   001978                     _sprintf:
  1427                           	callstack 24
  1428   001978  0E1B               	movlw	low (?_sprintf+2)
  1429   00197A  6E1D               	movwf	sprintf@ap^0,c
  1430   00197C  C019  F01E         	movff	sprintf@s,sprintf@f
  1431   001980  0E00               	movlw	0
  1432   001982  6E21               	movwf	(sprintf@f+3)^0,c
  1433   001984  0E00               	movlw	0
  1434   001986  6E20               	movwf	(sprintf@f+2)^0,c
  1435   001988  0E00               	movlw	0
  1436   00198A  6E28               	movwf	(sprintf@f+10)^0,c
  1437   00198C  0E00               	movlw	0
  1438   00198E  6E27               	movwf	(sprintf@f+9)^0,c
  1439   001990  0E1E               	movlw	low sprintf@f
  1440   001992  6E15               	movwf	vfprintf@fp^0,c
  1441   001994  C01A  F016         	movff	sprintf@fmt,vfprintf@fmt
  1442   001998  0E1D               	movlw	low sprintf@ap
  1443   00199A  6E17               	movwf	vfprintf@ap^0,c
  1444   00199C  EC9D  F00C         	call	_vfprintf	;wreg free
  1445   0019A0  5019               	movf	sprintf@s^0,w,c
  1446   0019A2  2420               	addwf	(sprintf@f+2)^0,w,c
  1447   0019A4  6ED9               	movwf	fsr2l,c
  1448   0019A6  6ADA               	clrf	fsr2h,c
  1449   0019A8  6ADF               	clrf	indf2,c
  1450   0019AA  0012               	return		;funcret
  1451   0019AC                     __end_of_sprintf:
  1452                           	callstack 0
  1453                           
  1454 ;; *************** function _vfprintf *****************
  1455 ;; Defined at:
  1456 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  1459 ;;		 -> sprintf@f(11), 
  1460 ;;  fmt             1   21[COMRAM] PTR const unsigned char 
  1461 ;;		 -> STR_3(3), 
  1462 ;;  ap              1   22[COMRAM] PTR PTR void 
  1463 ;;		 -> sprintf@ap(1), 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  cfmt            1   23[COMRAM] PTR unsigned char 
  1466 ;;		 -> STR_3(3), 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2   20[COMRAM] int 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1476 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;Total ram usage:        4 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 4
  1483 ;; This function calls:
  1484 ;;		_vfpfcnvrt
  1485 ;; This function is called by:
  1486 ;;		_sprintf
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text4
  1491   00193A                     __ptext4:
  1492                           	callstack 0
  1493   00193A                     _vfprintf:
  1494                           	callstack 24
  1495   00193A                     
  1496                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1497   00193A  C016  F018         	movff	vfprintf@fmt,vfprintf@cfmt
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1500   00193E  EFA9  F00C         	goto	l1638
  1501   001942                     l1636:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1504   001942  C015  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1505   001946  0E18               	movlw	low vfprintf@cfmt
  1506   001948  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1507   00194A  C017  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1508   00194E  EC14  F008         	call	_vfpfcnvrt	;wreg free
  1509   001952                     l1638:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1512   001952  C018  FFF6         	movff	vfprintf@cfmt,tblptrl
  1513   001956                     	if	1	;There is more than 1 active tblptr byte
  1514   001956  0E10               	movlw	high __smallconst
  1515   001958  6EF7               	movwf	tblptrh,c
  1516   00195A                     	endif
  1517   00195A                     	if	0	;tblptru may be non-zero
  1518   00195A                     	endif
  1519   00195A                     	if	0	;tblptru may be non-zero
  1520   00195A                     	endif
  1521   00195A  0008               	tblrd		*
  1522   00195C  50F5               	movf	tablat,w,c
  1523   00195E  0900               	iorlw	0
  1524   001960  A4D8               	btfss	status,2,c
  1525   001962  EFB5  F00C         	goto	u851
  1526   001966  EFB7  F00C         	goto	u850
  1527   00196A                     u851:
  1528   00196A  EFA1  F00C         	goto	l1636
  1529   00196E                     u850:
  1530   00196E                     
  1531                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1532   00196E  0E00               	movlw	0
  1533   001970  6E16               	movwf	(?_vfprintf+1)^0,c
  1534   001972  0E00               	movlw	0
  1535   001974  6E15               	movwf	?_vfprintf^0,c
  1536   001976  0012               	return		;funcret
  1537   001978                     __end_of_vfprintf:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _vfpfcnvrt *****************
  1541 ;; Defined at:
  1542 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1545 ;;		 -> sprintf@f(11), 
  1546 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1547 ;;		 -> vfprintf@cfmt(1), 
  1548 ;;  ap              1   12[COMRAM] PTR PTR void 
  1549 ;;		 -> sprintf@ap(1), 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  convarg         4   14[COMRAM] struct .
  1552 ;;  c               1   19[COMRAM] unsigned char 
  1553 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1554 ;;		 -> STR_3(3), 
  1555 ;;  done            1    0        _Bool 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1565 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;Total ram usage:       10 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 3
  1572 ;; This function calls:
  1573 ;;		___lwdiv
  1574 ;;		___lwmod
  1575 ;;		_fputc
  1576 ;; This function is called by:
  1577 ;;		_vfprintf
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text5
  1582   001028                     __ptext5:
  1583                           	callstack 0
  1584   001028                     _vfpfcnvrt:
  1585                           	callstack 24
  1586   001028                     
  1587                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1588   001028  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1589   00102A  6ED9               	movwf	fsr2l,c
  1590   00102C  6ADA               	clrf	fsr2h,c
  1591   00102E  CFDF FFF6          	movff	indf2,tblptrl
  1592   001032                     	if	1	;There is more than 1 active tblptr byte
  1593   001032  0E10               	movlw	high __smallconst
  1594   001034  6EF7               	movwf	tblptrh,c
  1595   001036                     	endif
  1596   001036                     	if	0	;tblptru may be non-zero
  1597   001036                     	endif
  1598   001036                     	if	0	;tblptru may be non-zero
  1599   001036                     	endif
  1600   001036  0008               	tblrd		*
  1601   001038  50F5               	movf	tablat,w,c
  1602   00103A  0A25               	xorlw	37
  1603   00103C  A4D8               	btfss	status,2,c
  1604   00103E  EF23  F008         	goto	u731
  1605   001042  EF25  F008         	goto	u730
  1606   001046                     u731:
  1607   001046  EFB7  F008         	goto	l1592
  1608   00104A                     u730:
  1609   00104A                     
  1610                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1611   00104A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1612   00104C  6ED9               	movwf	fsr2l,c
  1613   00104E  6ADA               	clrf	fsr2h,c
  1614   001050  2ADF               	incf	indf2,f,c
  1615   001052                     
  1616                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1617   001052  0E00               	movlw	0
  1618   001054  6E49               	movwf	(_width+1)^0,c
  1619   001056  0E00               	movlw	0
  1620   001058  6E48               	movwf	_width^0,c
  1621   00105A  C048  F04C         	movff	_width,_flags
  1622   00105E                     
  1623                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1624   00105E  684A               	setf	_prec^0,c
  1625   001060  684B               	setf	(_prec+1)^0,c
  1626   001062                     
  1627                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1628   001062  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1629   001064  6ED9               	movwf	fsr2l,c
  1630   001066  6ADA               	clrf	fsr2h,c
  1631   001068  50DF               	movf	indf2,w,c
  1632   00106A  6E13               	movwf	vfpfcnvrt@cp^0,c
  1633   00106C  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1634   001070                     	if	1	;There is more than 1 active tblptr byte
  1635   001070  0E10               	movlw	high __smallconst
  1636   001072  6EF7               	movwf	tblptrh,c
  1637   001074                     	endif
  1638   001074                     	if	0	;tblptru may be non-zero
  1639   001074                     	endif
  1640   001074                     	if	0	;tblptru may be non-zero
  1641   001074                     	endif
  1642   001074  0008               	tblrd		*
  1643   001076  50F5               	movf	tablat,w,c
  1644   001078  0A75               	xorlw	117
  1645   00107A  A4D8               	btfss	status,2,c
  1646   00107C  EF42  F008         	goto	u741
  1647   001080  EF44  F008         	goto	u740
  1648   001084                     u741:
  1649   001084  EFB1  F008         	goto	l1588
  1650   001088                     u740:
  1651   001088                     
  1652                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1653   001088  500D               	movf	vfpfcnvrt@ap^0,w,c
  1654   00108A  6ED9               	movwf	fsr2l,c
  1655   00108C  6ADA               	clrf	fsr2h,c
  1656   00108E  0E02               	movlw	2
  1657   001090  26DF               	addwf	indf2,f,c
  1658   001092  5CDF               	subwf	indf2,w,c
  1659   001094  6ED9               	movwf	fsr2l,c
  1660   001096  6ADA               	clrf	fsr2h,c
  1661   001098  CFDE F00F          	movff	postinc2,vfpfcnvrt@convarg
  1662   00109C  CFDE F010          	movff	postinc2,vfpfcnvrt@convarg+1
  1663   0010A0                     
  1664                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1665   0010A0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1666   0010A2  6ED9               	movwf	fsr2l,c
  1667   0010A4  6ADA               	clrf	fsr2h,c
  1668   0010A6  2813               	incf	vfpfcnvrt@cp^0,w,c
  1669   0010A8  6EDF               	movwf	indf2,c
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1672   0010AA  EFA5  F008         	goto	l1586
  1673   0010AE                     l1568:
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1676   0010AE  0E20               	movlw	32
  1677   0010B0  6E14               	movwf	vfpfcnvrt@c^0,c
  1678   0010B2                     l1570:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1681   0010B2  0614               	decf	vfpfcnvrt@c^0,f,c
  1682   0010B4  5014               	movf	vfpfcnvrt@c^0,w,c
  1683   0010B6  0F60               	addlw	low _dbuf
  1684   0010B8  6ED9               	movwf	fsr2l,c
  1685   0010BA  6ADA               	clrf	fsr2h,c
  1686   0010BC  C00F  F003         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  1687   0010C0  C010  F004         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  1688   0010C4  0E00               	movlw	0
  1689   0010C6  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1690   0010C8  0E0A               	movlw	10
  1691   0010CA  6E05               	movwf	___lwmod@divisor^0,c
  1692   0010CC  ECCA  F00B         	call	___lwmod	;wreg free
  1693   0010D0  5003               	movf	?___lwmod^0,w,c
  1694   0010D2  0F30               	addlw	48
  1695   0010D4  6EDF               	movwf	indf2,c
  1696   0010D6                     
  1697                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  1698   0010D6  C00F  F003         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  1699   0010DA  C010  F004         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  1700   0010DE  0E00               	movlw	0
  1701   0010E0  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1702   0010E2  0E0A               	movlw	10
  1703   0010E4  6E05               	movwf	___lwdiv@divisor^0,c
  1704   0010E6  EC90  F00B         	call	___lwdiv	;wreg free
  1705   0010EA  C003  F00F         	movff	?___lwdiv,vfpfcnvrt@convarg
  1706   0010EE  C004  F010         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  1707   0010F2                     
  1708                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  1709   0010F2  500F               	movf	vfpfcnvrt@convarg^0,w,c
  1710   0010F4  1010               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1711   0010F6  B4D8               	btfsc	status,2,c
  1712   0010F8  EF80  F008         	goto	u751
  1713   0010FC  EF82  F008         	goto	u750
  1714   001100                     u751:
  1715   001100  EF9A  F008         	goto	l1582
  1716   001104                     u750:
  1717   001104  5014               	movf	vfpfcnvrt@c^0,w,c
  1718   001106  A4D8               	btfss	status,2,c
  1719   001108  EF88  F008         	goto	u761
  1720   00110C  EF8A  F008         	goto	u760
  1721   001110                     u761:
  1722   001110  EF59  F008         	goto	l1570
  1723   001114                     u760:
  1724   001114  EF9A  F008         	goto	l1582
  1725   001118                     l1578:
  1726                           
  1727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  1728   001118  5014               	movf	vfpfcnvrt@c^0,w,c
  1729   00111A  0F60               	addlw	low _dbuf
  1730   00111C  6ED9               	movwf	fsr2l,c
  1731   00111E  6ADA               	clrf	fsr2h,c
  1732   001120  50DF               	movf	indf2,w,c
  1733   001122  6E0E               	movwf	??_vfpfcnvrt^0,c
  1734   001124  500E               	movf	??_vfpfcnvrt^0,w,c
  1735   001126  6E03               	movwf	fputc@c^0,c
  1736   001128  6A04               	clrf	(fputc@c+1)^0,c
  1737   00112A  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1738   00112E  EC43  F00A         	call	_fputc	;wreg free
  1739   001132  2A14               	incf	vfpfcnvrt@c^0,f,c
  1740   001134                     l1582:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  1743   001134  0E20               	movlw	32
  1744   001136  1814               	xorwf	vfpfcnvrt@c^0,w,c
  1745   001138  A4D8               	btfss	status,2,c
  1746   00113A  EFA1  F008         	goto	u771
  1747   00113E  EFA3  F008         	goto	u770
  1748   001142                     u771:
  1749   001142  EF8C  F008         	goto	l1578
  1750   001146                     u770:
  1751   001146  EFC8  F008         	goto	l960
  1752   00114A                     l1586:
  1753   00114A  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1754   00114E                     	if	1	;There is more than 1 active tblptr byte
  1755   00114E  0E10               	movlw	high __smallconst
  1756   001150  6EF7               	movwf	tblptrh,c
  1757   001152                     	endif
  1758   001152                     	if	0	;tblptru may be non-zero
  1759   001152                     	endif
  1760   001152                     	if	0	;tblptru may be non-zero
  1761   001152                     	endif
  1762   001152  0008               	tblrd		*
  1763   001154  50F5               	movf	tablat,w,c
  1764                           
  1765                           ; Switch size 1, requested type "simple"
  1766                           ; Number of cases is 1, Range of values is 117 to 117
  1767                           ; switch strategies available:
  1768                           ; Name         Instructions Cycles
  1769                           ; simple_byte            4     3 (average)
  1770                           ;	Chosen strategy is simple_byte
  1771   001156  0A75               	xorlw	117	; case 117
  1772   001158  B4D8               	btfsc	status,2,c
  1773   00115A  EF57  F008         	goto	l1568
  1774   00115E  EFB1  F008         	goto	l1588
  1775   001162                     l1588:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1778   001162  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1779   001164  6ED9               	movwf	fsr2l,c
  1780   001166  6ADA               	clrf	fsr2h,c
  1781   001168  2ADF               	incf	indf2,f,c
  1782   00116A  EFC8  F008         	goto	l960
  1783   00116E                     l1592:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1786   00116E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1787   001170  6ED9               	movwf	fsr2l,c
  1788   001172  6ADA               	clrf	fsr2h,c
  1789   001174  CFDF FFF6          	movff	indf2,tblptrl
  1790   001178                     	if	1	;There is more than 1 active tblptr byte
  1791   001178  0E10               	movlw	high __smallconst
  1792   00117A  6EF7               	movwf	tblptrh,c
  1793   00117C                     	endif
  1794   00117C                     	if	0	;tblptru may be non-zero
  1795   00117C                     	endif
  1796   00117C                     	if	0	;tblptru may be non-zero
  1797   00117C                     	endif
  1798   00117C  0008               	tblrd		*
  1799   00117E  50F5               	movf	tablat,w,c
  1800   001180  6E03               	movwf	fputc@c^0,c
  1801   001182  6A04               	clrf	(fputc@c+1)^0,c
  1802   001184  C00B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1803   001188  EC43  F00A         	call	_fputc	;wreg free
  1804   00118C  EFB1  F008         	goto	l1588
  1805   001190                     l960:
  1806   001190  0012               	return		;funcret
  1807   001192                     __end_of_vfpfcnvrt:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _fputc *****************
  1811 ;; Defined at:
  1812 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  c               2    2[COMRAM] int 
  1815 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  1816 ;;		 -> sprintf@f(11), 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  2    2[COMRAM] int 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        8 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 2
  1835 ;; This function calls:
  1836 ;;		_putch
  1837 ;; This function is called by:
  1838 ;;		_vfpfcnvrt
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text6
  1843   001486                     __ptext6:
  1844                           	callstack 0
  1845   001486                     _fputc:
  1846                           	callstack 24
  1847   001486  5005               	movf	fputc@fp^0,w,c
  1848   001488  B4D8               	btfsc	status,2,c
  1849   00148A  EF49  F00A         	goto	u691
  1850   00148E  EF4B  F00A         	goto	u690
  1851   001492                     u691:
  1852   001492  EF53  F00A         	goto	l1536
  1853   001496                     u690:
  1854   001496  5005               	movf	fputc@fp^0,w,c
  1855   001498  A4D8               	btfss	status,2,c
  1856   00149A  EF51  F00A         	goto	u701
  1857   00149E  EF53  F00A         	goto	u700
  1858   0014A2                     u701:
  1859   0014A2  EF58  F00A         	goto	l1538
  1860   0014A6                     u700:
  1861   0014A6                     l1536:
  1862   0014A6  5003               	movf	fputc@c^0,w,c
  1863   0014A8  EC0C  F00D         	call	_putch
  1864   0014AC  EF97  F00A         	goto	l979
  1865   0014B0                     l1538:
  1866   0014B0  5005               	movf	fputc@fp^0,w,c
  1867   0014B2  6ED9               	movwf	fsr2l,c
  1868   0014B4  6ADA               	clrf	fsr2h,c
  1869   0014B6  0E09               	movlw	9
  1870   0014B8  26D9               	addwf	fsr2l,f,c
  1871   0014BA  50DE               	movf	postinc2,w,c
  1872   0014BC  10DE               	iorwf	postinc2,w,c
  1873   0014BE  B4D8               	btfsc	status,2,c
  1874   0014C0  EF64  F00A         	goto	u711
  1875   0014C4  EF66  F00A         	goto	u710
  1876   0014C8                     u711:
  1877   0014C8  EF7F  F00A         	goto	l1542
  1878   0014CC                     u710:
  1879   0014CC  5005               	movf	fputc@fp^0,w,c
  1880   0014CE  6ED9               	movwf	fsr2l,c
  1881   0014D0  6ADA               	clrf	fsr2h,c
  1882   0014D2  0E09               	movlw	9
  1883   0014D4  26D9               	addwf	fsr2l,f,c
  1884   0014D6  5005               	movf	fputc@fp^0,w,c
  1885   0014D8  6EE1               	movwf	fsr1l,c
  1886   0014DA  6AE2               	clrf	fsr1h,c
  1887   0014DC  0E02               	movlw	2
  1888   0014DE  26E1               	addwf	fsr1l,f,c
  1889   0014E0  50DE               	movf	postinc2,w,c
  1890   0014E2  5CE6               	subwf	postinc1,w,c
  1891   0014E4  50E6               	movf	postinc1,w,c
  1892   0014E6  0A80               	xorlw	128
  1893   0014E8  6E0A               	movwf	(??_fputc+4)^0,c
  1894   0014EA  50DE               	movf	postinc2,w,c
  1895   0014EC  0A80               	xorlw	128
  1896   0014EE  580A               	subwfb	(??_fputc+4)^0,w,c
  1897   0014F0  B0D8               	btfsc	status,0,c
  1898   0014F2  EF7D  F00A         	goto	u721
  1899   0014F6  EF7F  F00A         	goto	u720
  1900   0014FA                     u721:
  1901   0014FA  EF97  F00A         	goto	l979
  1902   0014FE                     u720:
  1903   0014FE                     l1542:
  1904   0014FE  5005               	movf	fputc@fp^0,w,c
  1905   001500  6ED9               	movwf	fsr2l,c
  1906   001502  6ADA               	clrf	fsr2h,c
  1907   001504  0E02               	movlw	2
  1908   001506  26D9               	addwf	fsr2l,f,c
  1909   001508  50DF               	movf	indf2,w,c
  1910   00150A  6E06               	movwf	??_fputc^0,c
  1911   00150C  5005               	movf	fputc@fp^0,w,c
  1912   00150E  6ED9               	movwf	fsr2l,c
  1913   001510  6ADA               	clrf	fsr2h,c
  1914   001512  50DF               	movf	indf2,w,c
  1915   001514  2406               	addwf	??_fputc^0,w,c
  1916   001516  6ED9               	movwf	fsr2l,c
  1917   001518  6ADA               	clrf	fsr2h,c
  1918   00151A  C003  FFDF         	movff	fputc@c,indf2
  1919   00151E  5005               	movf	fputc@fp^0,w,c
  1920   001520  6ED9               	movwf	fsr2l,c
  1921   001522  6ADA               	clrf	fsr2h,c
  1922   001524  0E02               	movlw	2
  1923   001526  26D9               	addwf	fsr2l,f,c
  1924   001528  2ADE               	incf	postinc2,f,c
  1925   00152A  0E00               	movlw	0
  1926   00152C  22DD               	addwfc	postdec2,f,c
  1927   00152E                     l979:
  1928   00152E  0012               	return		;funcret
  1929   001530                     __end_of_fputc:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _putch *****************
  1933 ;; Defined at:
  1934 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  c               1    wreg     unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  c               1    0[COMRAM] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;Total ram usage:        0 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_fputc
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text7
  1963   001A18                     __ptext7:
  1964                           	callstack 0
  1965   001A18                     _putch:
  1966                           	callstack 24
  1967   001A18  0012               	return		;funcret
  1968   001A1A                     __end_of_putch:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function ___lwmod *****************
  1972 ;; Defined at:
  1973 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  dividend        2    2[COMRAM] unsigned int 
  1976 ;;  divisor         2    4[COMRAM] unsigned int 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  counter         1    6[COMRAM] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2    2[COMRAM] unsigned int 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;Total ram usage:        5 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_vfpfcnvrt
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text8
  2003   001794                     __ptext8:
  2004                           	callstack 0
  2005   001794                     ___lwmod:
  2006                           	callstack 25
  2007   001794  5005               	movf	___lwmod@divisor^0,w,c
  2008   001796  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  2009   001798  B4D8               	btfsc	status,2,c
  2010   00179A  EFD1  F00B         	goto	u661
  2011   00179E  EFD3  F00B         	goto	u660
  2012   0017A2                     u661:
  2013   0017A2  EFF7  F00B         	goto	l737
  2014   0017A6                     u660:
  2015   0017A6  0E01               	movlw	1
  2016   0017A8  6E07               	movwf	___lwmod@counter^0,c
  2017   0017AA  EFDB  F00B         	goto	l1522
  2018   0017AE                     l1520:
  2019   0017AE  90D8               	bcf	status,0,c
  2020   0017B0  3605               	rlcf	___lwmod@divisor^0,f,c
  2021   0017B2  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  2022   0017B4  2A07               	incf	___lwmod@counter^0,f,c
  2023   0017B6                     l1522:
  2024   0017B6  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  2025   0017B8  EFE0  F00B         	goto	u671
  2026   0017BC  EFE2  F00B         	goto	u670
  2027   0017C0                     u671:
  2028   0017C0  EFD7  F00B         	goto	l1520
  2029   0017C4                     u670:
  2030   0017C4                     l1524:
  2031   0017C4  5005               	movf	___lwmod@divisor^0,w,c
  2032   0017C6  5C03               	subwf	___lwmod@dividend^0,w,c
  2033   0017C8  5006               	movf	(___lwmod@divisor+1)^0,w,c
  2034   0017CA  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  2035   0017CC  A0D8               	btfss	status,0,c
  2036   0017CE  EFEB  F00B         	goto	u681
  2037   0017D2  EFED  F00B         	goto	u680
  2038   0017D6                     u681:
  2039   0017D6  EFF1  F00B         	goto	l1528
  2040   0017DA                     u680:
  2041   0017DA  5005               	movf	___lwmod@divisor^0,w,c
  2042   0017DC  5E03               	subwf	___lwmod@dividend^0,f,c
  2043   0017DE  5006               	movf	(___lwmod@divisor+1)^0,w,c
  2044   0017E0  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  2045   0017E2                     l1528:
  2046   0017E2  90D8               	bcf	status,0,c
  2047   0017E4  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  2048   0017E6  3205               	rrcf	___lwmod@divisor^0,f,c
  2049   0017E8  2E07               	decfsz	___lwmod@counter^0,f,c
  2050   0017EA  EFE2  F00B         	goto	l1524
  2051   0017EE                     l737:
  2052   0017EE  C003  F003         	movff	___lwmod@dividend,?___lwmod
  2053   0017F2  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  2054   0017F6  0012               	return		;funcret
  2055   0017F8                     __end_of___lwmod:
  2056                           	callstack 0
  2057                           
  2058 ;; *************** function ___lwdiv *****************
  2059 ;; Defined at:
  2060 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  dividend        2    2[COMRAM] unsigned int 
  2063 ;;  divisor         2    4[COMRAM] unsigned int 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  quotient        2    6[COMRAM] unsigned int 
  2066 ;;  counter         1    8[COMRAM] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  2    2[COMRAM] unsigned int 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;Total ram usage:        7 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 1
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_vfpfcnvrt
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text9
  2091   001720                     __ptext9:
  2092                           	callstack 0
  2093   001720                     ___lwdiv:
  2094                           	callstack 25
  2095   001720  0E00               	movlw	0
  2096   001722  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  2097   001724  0E00               	movlw	0
  2098   001726  6E07               	movwf	___lwdiv@quotient^0,c
  2099   001728  5005               	movf	___lwdiv@divisor^0,w,c
  2100   00172A  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2101   00172C  B4D8               	btfsc	status,2,c
  2102   00172E  EF9B  F00B         	goto	u631
  2103   001732  EF9D  F00B         	goto	u630
  2104   001736                     u631:
  2105   001736  EFC5  F00B         	goto	l727
  2106   00173A                     u630:
  2107   00173A  0E01               	movlw	1
  2108   00173C  6E09               	movwf	___lwdiv@counter^0,c
  2109   00173E  EFA5  F00B         	goto	l1502
  2110   001742                     l1500:
  2111   001742  90D8               	bcf	status,0,c
  2112   001744  3605               	rlcf	___lwdiv@divisor^0,f,c
  2113   001746  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2114   001748  2A09               	incf	___lwdiv@counter^0,f,c
  2115   00174A                     l1502:
  2116   00174A  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  2117   00174C  EFAA  F00B         	goto	u641
  2118   001750  EFAC  F00B         	goto	u640
  2119   001754                     u641:
  2120   001754  EFA1  F00B         	goto	l1500
  2121   001758                     u640:
  2122   001758                     l1504:
  2123   001758  90D8               	bcf	status,0,c
  2124   00175A  3607               	rlcf	___lwdiv@quotient^0,f,c
  2125   00175C  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2126   00175E  5005               	movf	___lwdiv@divisor^0,w,c
  2127   001760  5C03               	subwf	___lwdiv@dividend^0,w,c
  2128   001762  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  2129   001764  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2130   001766  A0D8               	btfss	status,0,c
  2131   001768  EFB8  F00B         	goto	u651
  2132   00176C  EFBA  F00B         	goto	u650
  2133   001770                     u651:
  2134   001770  EFBF  F00B         	goto	l1512
  2135   001774                     u650:
  2136   001774  5005               	movf	___lwdiv@divisor^0,w,c
  2137   001776  5E03               	subwf	___lwdiv@dividend^0,f,c
  2138   001778  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  2139   00177A  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2140   00177C  8007               	bsf	___lwdiv@quotient^0,0,c
  2141   00177E                     l1512:
  2142   00177E  90D8               	bcf	status,0,c
  2143   001780  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2144   001782  3205               	rrcf	___lwdiv@divisor^0,f,c
  2145   001784  2E09               	decfsz	___lwdiv@counter^0,f,c
  2146   001786  EFAC  F00B         	goto	l1504
  2147   00178A                     l727:
  2148   00178A  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  2149   00178E  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2150   001792  0012               	return		;funcret
  2151   001794                     __end_of___lwdiv:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _hex_char_to_value *****************
  2155 ;; Defined at:
  2156 ;;		line 125 in file "OBCII_PIC18F46K22.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  c               1    wreg     unsigned char 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  c               1    2[COMRAM] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      unsigned char 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;Total ram usage:        1 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 1
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_print_RPM
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text10
  2185   001530                     __ptext10:
  2186                           	callstack 0
  2187   001530                     _hex_char_to_value:
  2188                           	callstack 28
  2189                           
  2190                           ;incstack = 0
  2191                           ;hex_char_to_value@c stored from wreg
  2192   001530  6E03               	movwf	hex_char_to_value@c^0,c
  2193   001532                     
  2194                           ;OBCII_PIC18F46K22.c: 126:     if (c >= '0' && c <= '9') return c - '0';
  2195   001532  0E2F               	movlw	47
  2196   001534  6403               	cpfsgt	hex_char_to_value@c^0,c
  2197   001536  EF9F  F00A         	goto	u871
  2198   00153A  EFA1  F00A         	goto	u870
  2199   00153E                     u871:
  2200   00153E  EFAD  F00A         	goto	l1666
  2201   001542                     u870:
  2202   001542  0E3A               	movlw	58
  2203   001544  6003               	cpfslt	hex_char_to_value@c^0,c
  2204   001546  EFA7  F00A         	goto	u881
  2205   00154A  EFA9  F00A         	goto	u880
  2206   00154E                     u881:
  2207   00154E  EFAD  F00A         	goto	l1666
  2208   001552                     u880:
  2209   001552  5003               	movf	hex_char_to_value@c^0,w,c
  2210   001554  0FD0               	addlw	208
  2211   001556  EFD6  F00A         	goto	l98
  2212   00155A                     l1666:
  2213                           
  2214                           ;OBCII_PIC18F46K22.c: 127:     if (c >= 'A' && c <= 'F') return c - 'A' + 10;
  2215   00155A  0E40               	movlw	64
  2216   00155C  6403               	cpfsgt	hex_char_to_value@c^0,c
  2217   00155E  EFB3  F00A         	goto	u891
  2218   001562  EFB5  F00A         	goto	u890
  2219   001566                     u891:
  2220   001566  EFC1  F00A         	goto	l1674
  2221   00156A                     u890:
  2222   00156A  0E47               	movlw	71
  2223   00156C  6003               	cpfslt	hex_char_to_value@c^0,c
  2224   00156E  EFBB  F00A         	goto	u901
  2225   001572  EFBD  F00A         	goto	u900
  2226   001576                     u901:
  2227   001576  EFC1  F00A         	goto	l1674
  2228   00157A                     u900:
  2229   00157A  5003               	movf	hex_char_to_value@c^0,w,c
  2230   00157C  0FC9               	addlw	201
  2231   00157E  EFD6  F00A         	goto	l98
  2232   001582                     l1674:
  2233                           
  2234                           ;OBCII_PIC18F46K22.c: 128:     if (c >= 'a' && c <= 'f') return c - 'a' + 10;
  2235   001582  0E60               	movlw	96
  2236   001584  6403               	cpfsgt	hex_char_to_value@c^0,c
  2237   001586  EFC7  F00A         	goto	u911
  2238   00158A  EFC9  F00A         	goto	u910
  2239   00158E                     u911:
  2240   00158E  EFD5  F00A         	goto	l1682
  2241   001592                     u910:
  2242   001592  0E67               	movlw	103
  2243   001594  6003               	cpfslt	hex_char_to_value@c^0,c
  2244   001596  EFCF  F00A         	goto	u921
  2245   00159A  EFD1  F00A         	goto	u920
  2246   00159E                     u921:
  2247   00159E  EFD5  F00A         	goto	l1682
  2248   0015A2                     u920:
  2249   0015A2  5003               	movf	hex_char_to_value@c^0,w,c
  2250   0015A4  0FA9               	addlw	169
  2251   0015A6  EFD6  F00A         	goto	l98
  2252   0015AA                     l1682:
  2253                           
  2254                           ;OBCII_PIC18F46K22.c: 129:     return 0;
  2255   0015AA  0E00               	movlw	0
  2256   0015AC                     l98:
  2257   0015AC  0012               	return		;funcret
  2258   0015AE                     __end_of_hex_char_to_value:
  2259                           	callstack 0
  2260                           
  2261 ;; *************** function _UART1_SendString *****************
  2262 ;; Defined at:
  2263 ;;		line 110 in file "OBCII_PIC18F46K22.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  string          1    3[COMRAM] PTR unsigned char 
  2266 ;;		 -> STR_5(6), STR_2(6), STR_1(6), 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  i               2    5[COMRAM] unsigned int 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2278 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;Total ram usage:        4 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; Hardware stack levels required when called: 2
  2285 ;; This function calls:
  2286 ;;		_UART1_SendChar
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;;		_print_RPM
  2290 ;;		_print_Vbatt
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text11
  2295   0018B2                     __ptext11:
  2296                           	callstack 0
  2297   0018B2                     _UART1_SendString:
  2298                           	callstack 27
  2299   0018B2                     
  2300                           ;OBCII_PIC18F46K22.c: 111:     for (unsigned int i = 0; string[i] != '\0'; i++){
  2301   0018B2  0E00               	movlw	0
  2302   0018B4  6E07               	movwf	(UART1_SendString@i+1)^0,c
  2303   0018B6  0E00               	movlw	0
  2304   0018B8  6E06               	movwf	UART1_SendString@i^0,c
  2305   0018BA  EF6C  F00C         	goto	l1656
  2306   0018BE                     l1652:
  2307                           
  2308                           ;OBCII_PIC18F46K22.c: 112:         UART1_SendChar(string[i]);
  2309   0018BE  5004               	movf	UART1_SendString@string^0,w,c
  2310   0018C0  2406               	addwf	UART1_SendString@i^0,w,c
  2311   0018C2  6E05               	movwf	??_UART1_SendString^0,c
  2312   0018C4  C005  FFF6         	movff	??_UART1_SendString,tblptrl
  2313   0018C8                     	if	1	;There is more than 1 active tblptr byte
  2314   0018C8  0E10               	movlw	high __smallconst
  2315   0018CA  6EF7               	movwf	tblptrh,c
  2316   0018CC                     	endif
  2317   0018CC                     	if	0	;tblptru may be non-zero
  2318   0018CC                     	endif
  2319   0018CC                     	if	0	;tblptru may be non-zero
  2320   0018CC                     	endif
  2321   0018CC  0008               	tblrd		*
  2322   0018CE  50F5               	movf	tablat,w,c
  2323   0018D0  ECFA  F00C         	call	_UART1_SendChar
  2324   0018D4                     
  2325                           ;OBCII_PIC18F46K22.c: 113:     }
  2326   0018D4  4A06               	infsnz	UART1_SendString@i^0,f,c
  2327   0018D6  2A07               	incf	(UART1_SendString@i+1)^0,f,c
  2328   0018D8                     l1656:
  2329   0018D8  5004               	movf	UART1_SendString@string^0,w,c
  2330   0018DA  2406               	addwf	UART1_SendString@i^0,w,c
  2331   0018DC  6E05               	movwf	??_UART1_SendString^0,c
  2332   0018DE  C005  FFF6         	movff	??_UART1_SendString,tblptrl
  2333   0018E2                     	if	1	;There is more than 1 active tblptr byte
  2334   0018E2  0E10               	movlw	high __smallconst
  2335   0018E4  6EF7               	movwf	tblptrh,c
  2336   0018E6                     	endif
  2337   0018E6                     	if	0	;tblptru may be non-zero
  2338   0018E6                     	endif
  2339   0018E6                     	if	0	;tblptru may be non-zero
  2340   0018E6                     	endif
  2341   0018E6  0008               	tblrd		*
  2342   0018E8  50F5               	movf	tablat,w,c
  2343   0018EA  0900               	iorlw	0
  2344   0018EC  A4D8               	btfss	status,2,c
  2345   0018EE  EF7B  F00C         	goto	u861
  2346   0018F2  EF7D  F00C         	goto	u860
  2347   0018F6                     u861:
  2348   0018F6  EF5F  F00C         	goto	l1652
  2349   0018FA                     u860:
  2350   0018FA  0012               	return		;funcret
  2351   0018FC                     __end_of_UART1_SendString:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function _UART1_SendChar *****************
  2355 ;; Defined at:
  2356 ;;		line 116 in file "OBCII_PIC18F46K22.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  c               1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  c               1    2[COMRAM] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;Total ram usage:        1 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; Hardware stack levels required when called: 1
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_UART1_SendString
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text12
  2385   0019F4                     __ptext12:
  2386                           	callstack 0
  2387   0019F4                     _UART1_SendChar:
  2388                           	callstack 27
  2389                           
  2390                           ;incstack = 0
  2391                           ;UART1_SendChar@c stored from wreg
  2392   0019F4  6E03               	movwf	UART1_SendChar@c^0,c
  2393   0019F6                     l91:
  2394   0019F6  A2AC               	btfss	172,1,c	;volatile
  2395   0019F8  EF00  F00D         	goto	u781
  2396   0019FC  EF02  F00D         	goto	u780
  2397   001A00                     u781:
  2398   001A00  EFFB  F00C         	goto	l91
  2399   001A04                     u780:
  2400   001A04                     
  2401                           ;OBCII_PIC18F46K22.c: 118:         TXREG = c;
  2402   001A04  C003  FFAD         	movff	UART1_SendChar@c,4013	;volatile
  2403   001A08  0012               	return		;funcret
  2404   001A0A                     __end_of_UART1_SendChar:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _LCD_write_string *****************
  2408 ;; Defined at:
  2409 ;;		line 362 in file "LCD.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  string          2    5[COMRAM] PTR unsigned char 
  2412 ;;		 -> STR_7(6), STR_6(6), STR_4(4), print_RPM@rpm_string(16), 
  2413 ;;		 -> buffer(32), 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  i               1    9[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;Total ram usage:        5 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 3
  2432 ;; This function calls:
  2433 ;;		_LCD_write_data
  2434 ;; This function is called by:
  2435 ;;		_print_RPM
  2436 ;;		_print_Vbatt
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text13
  2441   0016A6                     __ptext13:
  2442                           	callstack 0
  2443   0016A6                     _LCD_write_string:
  2444                           	callstack 26
  2445   0016A6                     
  2446                           ;LCD.c: 365:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  2447   0016A6  6A0A               	clrf	LCD_write_string@i^0,c
  2448   0016A8  EF70  F00B         	goto	l1716
  2449   0016AC                     l1712:
  2450                           
  2451                           ;LCD.c: 366:         LCD_write_data(string[i]);
  2452   0016AC  500A               	movf	LCD_write_string@i^0,w,c
  2453   0016AE  2406               	addwf	LCD_write_string@string^0,w,c
  2454   0016B0  6E08               	movwf	??_LCD_write_string^0,c
  2455   0016B2  0E00               	movlw	0
  2456   0016B4  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  2457   0016B6  6E09               	movwf	(??_LCD_write_string+1)^0,c
  2458   0016B8  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  2459   0016BC  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  2460   0016C0  0E00               	movlw	low (__smallconst shr (0+16))
  2461   0016C2  6EF8               	movwf	tblptru,c
  2462   0016C4  0E0F               	movlw	(high __ramtop+-1)
  2463   0016C6  64F7               	cpfsgt	tblptrh,c
  2464   0016C8  D003               	bra	u977
  2465   0016CA  0008               	tblrd		*
  2466   0016CC  50F5               	movf	tablat,w,c
  2467   0016CE  D005               	bra	u970
  2468   0016D0                     u977:
  2469   0016D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2470   0016D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2471   0016D8  50EF               	movf	indf0,w,c
  2472   0016DA                     u970:
  2473   0016DA  EC47  F009         	call	_LCD_write_data
  2474   0016DE                     
  2475                           ;LCD.c: 367:     }
  2476   0016DE  2A0A               	incf	LCD_write_string@i^0,f,c
  2477   0016E0                     l1716:
  2478   0016E0  500A               	movf	LCD_write_string@i^0,w,c
  2479   0016E2  2406               	addwf	LCD_write_string@string^0,w,c
  2480   0016E4  6E08               	movwf	??_LCD_write_string^0,c
  2481   0016E6  0E00               	movlw	0
  2482   0016E8  2007               	addwfc	(LCD_write_string@string+1)^0,w,c
  2483   0016EA  6E09               	movwf	(??_LCD_write_string+1)^0,c
  2484   0016EC  C008  FFF6         	movff	??_LCD_write_string,tblptrl
  2485   0016F0  C009  FFF7         	movff	??_LCD_write_string+1,tblptrh
  2486   0016F4  0E00               	movlw	low (__smallconst shr (0+16))
  2487   0016F6  6EF8               	movwf	tblptru,c
  2488   0016F8  0E0F               	movlw	(high __ramtop+-1)
  2489   0016FA  64F7               	cpfsgt	tblptrh,c
  2490   0016FC  D003               	bra	u987
  2491   0016FE  0008               	tblrd		*
  2492   001700  50F5               	movf	tablat,w,c
  2493   001702  D005               	bra	u980
  2494   001704                     u987:
  2495   001704  CFF6 FFE9          	movff	tblptrl,fsr0l
  2496   001708  CFF7 FFEA          	movff	tblptrh,fsr0h
  2497   00170C  50EF               	movf	indf0,w,c
  2498   00170E                     u980:
  2499   00170E  0900               	iorlw	0
  2500   001710  A4D8               	btfss	status,2,c
  2501   001712  EF8D  F00B         	goto	u991
  2502   001716  EF8F  F00B         	goto	u990
  2503   00171A                     u991:
  2504   00171A  EF56  F00B         	goto	l1712
  2505   00171E                     u990:
  2506   00171E  0012               	return		;funcret
  2507   001720                     __end_of_LCD_write_string:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _LCD_write_data *****************
  2511 ;; Defined at:
  2512 ;;		line 74 in file "LCD.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  data            1    wreg     unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  data            1    4[COMRAM] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;Total ram usage:        3 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 2
  2533 ;; This function calls:
  2534 ;;		_LCD_pulse_clock
  2535 ;; This function is called by:
  2536 ;;		_LCD_write_string
  2537 ;;		_LCD_add_character
  2538 ;;		_LCD_write_char
  2539 ;;		_LCD_write_variable
  2540 ;;		_LCD_write_float
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text14
  2545   00128E                     __ptext14:
  2546                           	callstack 0
  2547   00128E                     _LCD_write_data:
  2548                           	callstack 26
  2549                           
  2550                           ;incstack = 0
  2551                           ;LCD_write_data@data stored from wreg
  2552   00128E  6E05               	movwf	LCD_write_data@data^0,c
  2553   001290                     
  2554                           ;LCD.c: 76:     LATDbits.LATD2 = 1;
  2555   001290  848C               	bsf	140,2,c	;volatile
  2556   001292                     
  2557                           ;LCD.c: 79:     LATDbits.LATD7 = (data & 0b10000000) >> 7;
  2558   001292  6A03               	clrf	??_LCD_write_data^0,c
  2559   001294  AE05               	btfss	LCD_write_data@data^0,7,c
  2560   001296  D001               	bra	u825
  2561   001298  2A03               	incf	??_LCD_write_data^0,f,c
  2562   00129A                     u825:
  2563   00129A  0E01               	movlw	1
  2564   00129C  1603               	andwf	??_LCD_write_data^0,f,c
  2565   00129E  3203               	rrcf	??_LCD_write_data^0,f,c
  2566   0012A0  3203               	rrcf	??_LCD_write_data^0,f,c
  2567   0012A2  508C               	movf	140,w,c	;volatile
  2568   0012A4  1803               	xorwf	??_LCD_write_data^0,w,c
  2569   0012A6  0B7F               	andlw	-129
  2570   0012A8  1803               	xorwf	??_LCD_write_data^0,w,c
  2571   0012AA  6E8C               	movwf	140,c	;volatile
  2572                           
  2573                           ;LCD.c: 80:     LATDbits.LATD6 = (data & 0b01000000) >> 6;
  2574   0012AC  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  2575   0012B0  0E06               	movlw	6
  2576   0012B2  6E04               	movwf	(??_LCD_write_data+1)^0,c
  2577   0012B4                     u835:
  2578   0012B4  90D8               	bcf	status,0,c
  2579   0012B6  3203               	rrcf	??_LCD_write_data^0,f,c
  2580   0012B8  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  2581   0012BA  EF5A  F009         	goto	u835
  2582   0012BE  0E01               	movlw	1
  2583   0012C0  1603               	andwf	??_LCD_write_data^0,f,c
  2584   0012C2  3A03               	swapf	??_LCD_write_data^0,f,c
  2585   0012C4  4603               	rlncf	??_LCD_write_data^0,f,c
  2586   0012C6  4603               	rlncf	??_LCD_write_data^0,f,c
  2587   0012C8  508C               	movf	140,w,c	;volatile
  2588   0012CA  1803               	xorwf	??_LCD_write_data^0,w,c
  2589   0012CC  0BBF               	andlw	-65
  2590   0012CE  1803               	xorwf	??_LCD_write_data^0,w,c
  2591   0012D0  6E8C               	movwf	140,c	;volatile
  2592                           
  2593                           ;LCD.c: 81:     LATDbits.LATD5 = (data & 0b00100000) >> 5;
  2594   0012D2  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  2595   0012D6  0E05               	movlw	5
  2596   0012D8  6E04               	movwf	(??_LCD_write_data+1)^0,c
  2597   0012DA                     u845:
  2598   0012DA  90D8               	bcf	status,0,c
  2599   0012DC  3203               	rrcf	??_LCD_write_data^0,f,c
  2600   0012DE  2E04               	decfsz	(??_LCD_write_data+1)^0,f,c
  2601   0012E0  EF6D  F009         	goto	u845
  2602   0012E4  0E01               	movlw	1
  2603   0012E6  1603               	andwf	??_LCD_write_data^0,f,c
  2604   0012E8  3A03               	swapf	??_LCD_write_data^0,f,c
  2605   0012EA  4603               	rlncf	??_LCD_write_data^0,f,c
  2606   0012EC  508C               	movf	140,w,c	;volatile
  2607   0012EE  1803               	xorwf	??_LCD_write_data^0,w,c
  2608   0012F0  0BDF               	andlw	-33
  2609   0012F2  1803               	xorwf	??_LCD_write_data^0,w,c
  2610   0012F4  6E8C               	movwf	140,c	;volatile
  2611                           
  2612                           ;LCD.c: 82:     LATDbits.LATD4 = (data & 0b00010000) >> 4;
  2613   0012F6  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  2614   0012FA  3A03               	swapf	??_LCD_write_data^0,f,c
  2615   0012FC  0E0F               	movlw	15
  2616   0012FE  1603               	andwf	??_LCD_write_data^0,f,c
  2617   001300  0E01               	movlw	1
  2618   001302  1603               	andwf	??_LCD_write_data^0,f,c
  2619   001304  3A03               	swapf	??_LCD_write_data^0,f,c
  2620   001306  508C               	movf	140,w,c	;volatile
  2621   001308  1803               	xorwf	??_LCD_write_data^0,w,c
  2622   00130A  0BEF               	andlw	-17
  2623   00130C  1803               	xorwf	??_LCD_write_data^0,w,c
  2624   00130E  6E8C               	movwf	140,c	;volatile
  2625   001310                     
  2626                           ;LCD.c: 85:     LCD_pulse_clock();
  2627   001310  EC05  F00D         	call	_LCD_pulse_clock	;wreg free
  2628   001314                     
  2629                           ;LCD.c: 88:     LATDbits.LATD7 = (data & 0b00001000) >> 3;
  2630   001314  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  2631   001318  90D8               	bcf	status,0,c
  2632   00131A  3203               	rrcf	??_LCD_write_data^0,f,c
  2633   00131C  90D8               	bcf	status,0,c
  2634   00131E  3203               	rrcf	??_LCD_write_data^0,f,c
  2635   001320  90D8               	bcf	status,0,c
  2636   001322  3203               	rrcf	??_LCD_write_data^0,f,c
  2637   001324  0E01               	movlw	1
  2638   001326  1603               	andwf	??_LCD_write_data^0,f,c
  2639   001328  3203               	rrcf	??_LCD_write_data^0,f,c
  2640   00132A  3203               	rrcf	??_LCD_write_data^0,f,c
  2641   00132C  508C               	movf	140,w,c	;volatile
  2642   00132E  1803               	xorwf	??_LCD_write_data^0,w,c
  2643   001330  0B7F               	andlw	-129
  2644   001332  1803               	xorwf	??_LCD_write_data^0,w,c
  2645   001334  6E8C               	movwf	140,c	;volatile
  2646   001336                     
  2647                           ;LCD.c: 89:     LATDbits.LATD6 = (data & 0b00000100) >> 2;
  2648   001336  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  2649   00133A  90D8               	bcf	status,0,c
  2650   00133C  3203               	rrcf	??_LCD_write_data^0,f,c
  2651   00133E  90D8               	bcf	status,0,c
  2652   001340  3203               	rrcf	??_LCD_write_data^0,f,c
  2653   001342  0E01               	movlw	1
  2654   001344  1603               	andwf	??_LCD_write_data^0,f,c
  2655   001346  3A03               	swapf	??_LCD_write_data^0,f,c
  2656   001348  4603               	rlncf	??_LCD_write_data^0,f,c
  2657   00134A  4603               	rlncf	??_LCD_write_data^0,f,c
  2658   00134C  508C               	movf	140,w,c	;volatile
  2659   00134E  1803               	xorwf	??_LCD_write_data^0,w,c
  2660   001350  0BBF               	andlw	-65
  2661   001352  1803               	xorwf	??_LCD_write_data^0,w,c
  2662   001354  6E8C               	movwf	140,c	;volatile
  2663   001356                     
  2664                           ;LCD.c: 90:     LATDbits.LATD5 = (data & 0b00000010) >> 1;
  2665   001356  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  2666   00135A  90D8               	bcf	status,0,c
  2667   00135C  3203               	rrcf	??_LCD_write_data^0,f,c
  2668   00135E  0E01               	movlw	1
  2669   001360  1603               	andwf	??_LCD_write_data^0,f,c
  2670   001362  3A03               	swapf	??_LCD_write_data^0,f,c
  2671   001364  4603               	rlncf	??_LCD_write_data^0,f,c
  2672   001366  508C               	movf	140,w,c	;volatile
  2673   001368  1803               	xorwf	??_LCD_write_data^0,w,c
  2674   00136A  0BDF               	andlw	-33
  2675   00136C  1803               	xorwf	??_LCD_write_data^0,w,c
  2676   00136E  6E8C               	movwf	140,c	;volatile
  2677   001370                     
  2678                           ;LCD.c: 91:     LATDbits.LATD4 = (data & 0b00000001) ;
  2679   001370  C005  F003         	movff	LCD_write_data@data,??_LCD_write_data
  2680   001374  0E01               	movlw	1
  2681   001376  1603               	andwf	??_LCD_write_data^0,f,c
  2682   001378  3A03               	swapf	??_LCD_write_data^0,f,c
  2683   00137A  508C               	movf	140,w,c	;volatile
  2684   00137C  1803               	xorwf	??_LCD_write_data^0,w,c
  2685   00137E  0BEF               	andlw	-17
  2686   001380  1803               	xorwf	??_LCD_write_data^0,w,c
  2687   001382  6E8C               	movwf	140,c	;volatile
  2688   001384                     
  2689                           ;LCD.c: 94:     LCD_pulse_clock();
  2690   001384  EC05  F00D         	call	_LCD_pulse_clock	;wreg free
  2691   001388  0012               	return		;funcret
  2692   00138A                     __end_of_LCD_write_data:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _LCD_cursor_set *****************
  2696 ;; Defined at:
  2697 ;;		line 159 in file "LCD.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  row             1    wreg     unsigned char 
  2700 ;;  column          1    5[COMRAM] unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  row             1    6[COMRAM] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;Total ram usage:        2 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 3
  2719 ;; This function calls:
  2720 ;;		_LCD_write_command
  2721 ;; This function is called by:
  2722 ;;		_print_RPM
  2723 ;;		_print_Vbatt
  2724 ;;		_LCD_add_character
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text15
  2729   0017F8                     __ptext15:
  2730                           	callstack 0
  2731   0017F8                     _LCD_cursor_set:
  2732                           	callstack 26
  2733                           
  2734                           ;incstack = 0
  2735                           ;LCD_cursor_set@row stored from wreg
  2736   0017F8  6E07               	movwf	LCD_cursor_set@row^0,c
  2737   0017FA                     
  2738                           ;LCD.c: 162:     if(row == 1) column += (0x80-1);
  2739   0017FA  0407               	decf	LCD_cursor_set@row^0,w,c
  2740   0017FC  A4D8               	btfss	status,2,c
  2741   0017FE  EF03  F00C         	goto	u931
  2742   001802  EF05  F00C         	goto	u930
  2743   001806                     u931:
  2744   001806  EF07  F00C         	goto	l144
  2745   00180A                     u930:
  2746   00180A  0E7F               	movlw	127
  2747   00180C  2606               	addwf	LCD_cursor_set@column^0,f,c
  2748   00180E                     l144:
  2749                           
  2750                           ;LCD.c: 163:     if(row == 2) column += (0xC0-1);
  2751   00180E  0E02               	movlw	2
  2752   001810  1807               	xorwf	LCD_cursor_set@row^0,w,c
  2753   001812  A4D8               	btfss	status,2,c
  2754   001814  EF0E  F00C         	goto	u941
  2755   001818  EF10  F00C         	goto	u940
  2756   00181C                     u941:
  2757   00181C  EF12  F00C         	goto	l145
  2758   001820                     u940:
  2759   001820  0EBF               	movlw	191
  2760   001822  2606               	addwf	LCD_cursor_set@column^0,f,c
  2761   001824                     l145:
  2762                           
  2763                           ;LCD.c: 164:     if(row == 3) column += (0x80+19);
  2764   001824  0E03               	movlw	3
  2765   001826  1807               	xorwf	LCD_cursor_set@row^0,w,c
  2766   001828  A4D8               	btfss	status,2,c
  2767   00182A  EF19  F00C         	goto	u951
  2768   00182E  EF1B  F00C         	goto	u950
  2769   001832                     u951:
  2770   001832  EF1D  F00C         	goto	l146
  2771   001836                     u950:
  2772   001836  0E93               	movlw	147
  2773   001838  2606               	addwf	LCD_cursor_set@column^0,f,c
  2774   00183A                     l146:
  2775                           
  2776                           ;LCD.c: 165:     if(row == 4) column += (0xC0+19);
  2777   00183A  0E04               	movlw	4
  2778   00183C  1807               	xorwf	LCD_cursor_set@row^0,w,c
  2779   00183E  A4D8               	btfss	status,2,c
  2780   001840  EF24  F00C         	goto	u961
  2781   001844  EF26  F00C         	goto	u960
  2782   001848                     u961:
  2783   001848  EF28  F00C         	goto	l1708
  2784   00184C                     u960:
  2785   00184C  0ED3               	movlw	211
  2786   00184E  2606               	addwf	LCD_cursor_set@column^0,f,c
  2787   001850                     l1708:
  2788                           
  2789                           ;LCD.c: 168:    LCD_write_command(column);
  2790   001850  5006               	movf	LCD_cursor_set@column^0,w,c
  2791   001852  ECC5  F009         	call	_LCD_write_command
  2792   001856  0012               	return		;funcret
  2793   001858                     __end_of_LCD_cursor_set:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _UART1_Init *****************
  2797 ;; Defined at:
  2798 ;;		line 51 in file "OBCII_PIC18F46K22.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;Total ram usage:        0 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text16
  2827   0019AC                     __ptext16:
  2828                           	callstack 0
  2829   0019AC                     _UART1_Init:
  2830                           	callstack 29
  2831   0019AC                     
  2832                           ;OBCII_PIC18F46K22.c: 52:     ANSELC = 0;
  2833   0019AC  010F               	movlb	15	; () banked
  2834   0019AE  6B3A               	clrf	58,b	;volatile
  2835                           
  2836                           ;OBCII_PIC18F46K22.c: 55:     TRISCbits.TRISC6 = 0;
  2837   0019B0  9C94               	bcf	148,6,c	;volatile
  2838                           
  2839                           ;OBCII_PIC18F46K22.c: 56:     TRISCbits.TRISC7 = 1;
  2840   0019B2  8E94               	bsf	148,7,c	;volatile
  2841                           
  2842                           ;OBCII_PIC18F46K22.c: 60:     TXSTA1bits.TXEN = 1;
  2843   0019B4  8AAC               	bsf	172,5,c	;volatile
  2844                           
  2845                           ;OBCII_PIC18F46K22.c: 61:     TXSTA1bits.TX9 = 0;
  2846   0019B6  9CAC               	bcf	172,6,c	;volatile
  2847                           
  2848                           ;OBCII_PIC18F46K22.c: 62:     TXSTA1bits.SYNC = 0;
  2849   0019B8  98AC               	bcf	172,4,c	;volatile
  2850                           
  2851                           ;OBCII_PIC18F46K22.c: 65:     TXSTA1bits.BRGH = 1;
  2852   0019BA  84AC               	bsf	172,2,c	;volatile
  2853                           
  2854                           ;OBCII_PIC18F46K22.c: 66:     BAUDCON1bits.BRG16 = 1;
  2855   0019BC  86B8               	bsf	184,3,c	;volatile
  2856   0019BE                     
  2857                           ; BSR set to: 15
  2858                           ;OBCII_PIC18F46K22.c: 69:     SPBRGH1 = 0b00000001;
  2859   0019BE  0E01               	movlw	1
  2860   0019C0  6EB0               	movwf	176,c	;volatile
  2861                           
  2862                           ;OBCII_PIC18F46K22.c: 70:     SPBRG1 = 0b10100000;
  2863   0019C2  0EA0               	movlw	160
  2864   0019C4  6EAF               	movwf	175,c	;volatile
  2865   0019C6                     
  2866                           ; BSR set to: 15
  2867                           ;OBCII_PIC18F46K22.c: 73:     BAUDCON1bits.CKTXP = 0;
  2868   0019C6  98B8               	bcf	184,4,c	;volatile
  2869   0019C8                     
  2870                           ; BSR set to: 15
  2871                           ;OBCII_PIC18F46K22.c: 74:     BAUDCON1bits.DTRXP = 0;
  2872   0019C8  9AB8               	bcf	184,5,c	;volatile
  2873   0019CA                     
  2874                           ; BSR set to: 15
  2875                           ;OBCII_PIC18F46K22.c: 77:     RCSTA1bits.SPEN = 1;
  2876   0019CA  8EAB               	bsf	171,7,c	;volatile
  2877   0019CC                     
  2878                           ; BSR set to: 15
  2879                           ;OBCII_PIC18F46K22.c: 78:     RCSTA1bits.CREN = 1;
  2880   0019CC  88AB               	bsf	171,4,c	;volatile
  2881   0019CE                     
  2882                           ; BSR set to: 15
  2883                           ;OBCII_PIC18F46K22.c: 79:     RCSTA1bits.RX9 = 0;
  2884   0019CE  9CAB               	bcf	171,6,c	;volatile
  2885   0019D0                     
  2886                           ; BSR set to: 15
  2887                           ;OBCII_PIC18F46K22.c: 82:     PIE1bits.RC1IE = 1;
  2888   0019D0  8A9D               	bsf	157,5,c	;volatile
  2889   0019D2                     
  2890                           ; BSR set to: 15
  2891                           ;OBCII_PIC18F46K22.c: 83:     INTCONbits.PEIE = 1;
  2892   0019D2  8CF2               	bsf	242,6,c	;volatile
  2893   0019D4                     
  2894                           ; BSR set to: 15
  2895                           ;OBCII_PIC18F46K22.c: 84:     INTCONbits.GIE = 1;
  2896   0019D4  8EF2               	bsf	242,7,c	;volatile
  2897   0019D6                     
  2898                           ; BSR set to: 15
  2899   0019D6  0012               	return		;funcret
  2900   0019D8                     __end_of_UART1_Init:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _LCD_init *****************
  2904 ;; Defined at:
  2905 ;;		line 106 in file "LCD.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        2 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 4
  2926 ;; This function calls:
  2927 ;;		_LCD_clear
  2928 ;;		_LCD_pulse_clock
  2929 ;;		_LCD_write_command
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text17
  2936   00162A                     __ptext17:
  2937                           	callstack 0
  2938   00162A                     _LCD_init:
  2939                           	callstack 26
  2940   00162A                     
  2941                           ;LCD.c: 109:     TRISDbits.TRISD2 = 0; LATDbits.LATD2 = 0;
  2942   00162A  9495               	bcf	149,2,c	;volatile
  2943   00162C  948C               	bcf	140,2,c	;volatile
  2944                           
  2945                           ;LCD.c: 110:     TRISDbits.TRISD3 = 0; LATDbits.LATD3 = 0;
  2946   00162E  9695               	bcf	149,3,c	;volatile
  2947   001630  968C               	bcf	140,3,c	;volatile
  2948                           
  2949                           ;LCD.c: 111:     TRISDbits.TRISD4 = 0; LATDbits.LATD4 = 0;
  2950   001632  9895               	bcf	149,4,c	;volatile
  2951   001634  988C               	bcf	140,4,c	;volatile
  2952                           
  2953                           ;LCD.c: 112:     TRISDbits.TRISD5 = 0; LATDbits.LATD5 = 0;
  2954   001636  9A95               	bcf	149,5,c	;volatile
  2955   001638  9A8C               	bcf	140,5,c	;volatile
  2956                           
  2957                           ;LCD.c: 113:     TRISDbits.TRISD6 = 0; LATDbits.LATD6 = 0;
  2958   00163A  9C95               	bcf	149,6,c	;volatile
  2959   00163C  9C8C               	bcf	140,6,c	;volatile
  2960                           
  2961                           ;LCD.c: 114:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
  2962   00163E  9E95               	bcf	149,7,c	;volatile
  2963   001640  9E8C               	bcf	140,7,c	;volatile
  2964   001642                     
  2965                           ;LCD.c: 121:     _delay((unsigned long)((60)*(16000000/4000.0)));
  2966   001642  0E02               	movlw	2
  2967   001644  6E08               	movwf	(??_LCD_init+1)^0,c
  2968   001646  0E38               	movlw	56
  2969   001648  6E07               	movwf	??_LCD_init^0,c
  2970   00164A  0EAD               	movlw	173
  2971   00164C                     u1297:
  2972   00164C  2EE8               	decfsz	wreg,f,c
  2973   00164E  D7FE               	bra	u1297
  2974   001650  2E07               	decfsz	??_LCD_init^0,f,c
  2975   001652  D7FC               	bra	u1297
  2976   001654  2E08               	decfsz	(??_LCD_init+1)^0,f,c
  2977   001656  D7FA               	bra	u1297
  2978   001658  0000               	nop	
  2979   00165A                     
  2980                           ;LCD.c: 124:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  2981   00165A  9E8C               	bcf	140,7,c	;volatile
  2982   00165C  9C8C               	bcf	140,6,c	;volatile
  2983   00165E  8A8C               	bsf	140,5,c	;volatile
  2984   001660  888C               	bsf	140,4,c	;volatile
  2985   001662                     
  2986                           ;LCD.c: 127:     LCD_pulse_clock();
  2987   001662  EC05  F00D         	call	_LCD_pulse_clock	;wreg free
  2988   001666                     
  2989                           ;LCD.c: 130:     _delay((unsigned long)((6)*(16000000/4000.0)));
  2990   001666  0E20               	movlw	32
  2991   001668  6E07               	movwf	??_LCD_init^0,c
  2992   00166A  0E2A               	movlw	42
  2993   00166C                     u1307:
  2994   00166C  2EE8               	decfsz	wreg,f,c
  2995   00166E  D7FE               	bra	u1307
  2996   001670  2E07               	decfsz	??_LCD_init^0,f,c
  2997   001672  D7FC               	bra	u1307
  2998                           
  2999                           ;LCD.c: 133:     LCD_pulse_clock();
  3000   001674  EC05  F00D         	call	_LCD_pulse_clock	;wreg free
  3001   001678                     
  3002                           ;LCD.c: 136:     _delay((unsigned long)((150)*(16000000/4000000.0)));
  3003   001678  0EC8               	movlw	200
  3004   00167A                     u1317:
  3005   00167A  2EE8               	decfsz	wreg,f,c
  3006   00167C  D7FE               	bra	u1317
  3007   00167E                     
  3008                           ;LCD.c: 139:     LCD_pulse_clock();
  3009   00167E  EC05  F00D         	call	_LCD_pulse_clock	;wreg free
  3010   001682                     
  3011                           ;LCD.c: 142:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  3012   001682  9E8C               	bcf	140,7,c	;volatile
  3013   001684  9C8C               	bcf	140,6,c	;volatile
  3014   001686  8A8C               	bsf	140,5,c	;volatile
  3015   001688  988C               	bcf	140,4,c	;volatile
  3016   00168A                     
  3017                           ;LCD.c: 145:     LCD_pulse_clock();
  3018   00168A  EC05  F00D         	call	_LCD_pulse_clock	;wreg free
  3019   00168E                     
  3020                           ;LCD.c: 148:     LCD_write_command(0x28);
  3021   00168E  0E28               	movlw	40
  3022   001690  ECC5  F009         	call	_LCD_write_command
  3023   001694                     
  3024                           ;LCD.c: 149:     LCD_write_command(LCD_display_control);
  3025   001694  5051               	movf	_LCD_display_control^0,w,c
  3026   001696  ECC5  F009         	call	_LCD_write_command
  3027   00169A                     
  3028                           ;LCD.c: 150:     LCD_write_command(LCD_entry_mode);
  3029   00169A  5050               	movf	_LCD_entry_mode^0,w,c
  3030   00169C  ECC5  F009         	call	_LCD_write_command
  3031   0016A0                     
  3032                           ;LCD.c: 151:     LCD_clear();
  3033   0016A0  ECEC  F00C         	call	_LCD_clear	;wreg free
  3034   0016A4  0012               	return		;funcret
  3035   0016A6                     __end_of_LCD_init:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _LCD_clear *****************
  3039 ;; Defined at:
  3040 ;;		line 248 in file "LCD.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;Total ram usage:        1 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 3
  3061 ;; This function calls:
  3062 ;;		_LCD_write_command
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;;		_LCD_init
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text18
  3070   0019D8                     __ptext18:
  3071                           	callstack 0
  3072   0019D8                     _LCD_clear:
  3073                           	callstack 26
  3074   0019D8                     
  3075                           ;LCD.c: 251:     LCD_write_command(0x01);
  3076   0019D8  0E01               	movlw	1
  3077   0019DA  ECC5  F009         	call	_LCD_write_command
  3078   0019DE                     
  3079                           ;LCD.c: 254:     _delay((unsigned long)(((2300-60))*(16000000/4000000.0)));
  3080   0019DE  0E0C               	movlw	12
  3081   0019E0  6E06               	movwf	??_LCD_clear^0,c
  3082   0019E2  0EA2               	movlw	162
  3083   0019E4                     u1327:
  3084   0019E4  2EE8               	decfsz	wreg,f,c
  3085   0019E6  D7FE               	bra	u1327
  3086   0019E8  2E06               	decfsz	??_LCD_clear^0,f,c
  3087   0019EA  D7FC               	bra	u1327
  3088   0019EC                     
  3089                           ;LCD.c: 257:     LCD_write_command(LCD_entry_mode);
  3090   0019EC  5050               	movf	_LCD_entry_mode^0,w,c
  3091   0019EE  ECC5  F009         	call	_LCD_write_command
  3092   0019F2  0012               	return		;funcret
  3093   0019F4                     __end_of_LCD_clear:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _LCD_write_command *****************
  3097 ;; Defined at:
  3098 ;;		line 46 in file "LCD.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  command         1    wreg     unsigned char 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  command         1    4[COMRAM] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;Total ram usage:        3 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 2
  3119 ;; This function calls:
  3120 ;;		_LCD_pulse_clock
  3121 ;; This function is called by:
  3122 ;;		_LCD_init
  3123 ;;		_LCD_cursor_set
  3124 ;;		_LCD_clear
  3125 ;;		_LCD_cursor_increment
  3126 ;;		_LCD_cursor_decrement
  3127 ;;		_LCD_configure_lcd_display
  3128 ;;		_LCD_configure_cursor_display
  3129 ;;		_LCD_configure_cursor_blink
  3130 ;;		_LCD_shift_reset
  3131 ;;		_LCD_shift_left
  3132 ;;		_LCD_shift_right
  3133 ;;		_LCD_configure_entry_id
  3134 ;;		_LCD_configure_entry_shift
  3135 ;;		_LCD_add_character
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text19
  3140   00138A                     __ptext19:
  3141                           	callstack 0
  3142   00138A                     _LCD_write_command:
  3143                           	callstack 26
  3144                           
  3145                           ;incstack = 0
  3146                           ;LCD_write_command@command stored from wreg
  3147   00138A  6E05               	movwf	LCD_write_command@command^0,c
  3148   00138C                     
  3149                           ;LCD.c: 48:     LATDbits.LATD2 = 0;
  3150   00138C  948C               	bcf	140,2,c	;volatile
  3151   00138E                     
  3152                           ;LCD.c: 51:     LATDbits.LATD7 = (command & 0b10000000) >> 7;
  3153   00138E  6A03               	clrf	??_LCD_write_command^0,c
  3154   001390  AE05               	btfss	LCD_write_command@command^0,7,c
  3155   001392  D001               	bra	u795
  3156   001394  2A03               	incf	??_LCD_write_command^0,f,c
  3157   001396                     u795:
  3158   001396  0E01               	movlw	1
  3159   001398  1603               	andwf	??_LCD_write_command^0,f,c
  3160   00139A  3203               	rrcf	??_LCD_write_command^0,f,c
  3161   00139C  3203               	rrcf	??_LCD_write_command^0,f,c
  3162   00139E  508C               	movf	140,w,c	;volatile
  3163   0013A0  1803               	xorwf	??_LCD_write_command^0,w,c
  3164   0013A2  0B7F               	andlw	-129
  3165   0013A4  1803               	xorwf	??_LCD_write_command^0,w,c
  3166   0013A6  6E8C               	movwf	140,c	;volatile
  3167                           
  3168                           ;LCD.c: 52:     LATDbits.LATD6 = (command & 0b01000000) >> 6;
  3169   0013A8  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  3170   0013AC  0E06               	movlw	6
  3171   0013AE  6E04               	movwf	(??_LCD_write_command+1)^0,c
  3172   0013B0                     u805:
  3173   0013B0  90D8               	bcf	status,0,c
  3174   0013B2  3203               	rrcf	??_LCD_write_command^0,f,c
  3175   0013B4  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
  3176   0013B6  EFD8  F009         	goto	u805
  3177   0013BA  0E01               	movlw	1
  3178   0013BC  1603               	andwf	??_LCD_write_command^0,f,c
  3179   0013BE  3A03               	swapf	??_LCD_write_command^0,f,c
  3180   0013C0  4603               	rlncf	??_LCD_write_command^0,f,c
  3181   0013C2  4603               	rlncf	??_LCD_write_command^0,f,c
  3182   0013C4  508C               	movf	140,w,c	;volatile
  3183   0013C6  1803               	xorwf	??_LCD_write_command^0,w,c
  3184   0013C8  0BBF               	andlw	-65
  3185   0013CA  1803               	xorwf	??_LCD_write_command^0,w,c
  3186   0013CC  6E8C               	movwf	140,c	;volatile
  3187                           
  3188                           ;LCD.c: 53:     LATDbits.LATD5 = (command & 0b00100000) >> 5;
  3189   0013CE  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  3190   0013D2  0E05               	movlw	5
  3191   0013D4  6E04               	movwf	(??_LCD_write_command+1)^0,c
  3192   0013D6                     u815:
  3193   0013D6  90D8               	bcf	status,0,c
  3194   0013D8  3203               	rrcf	??_LCD_write_command^0,f,c
  3195   0013DA  2E04               	decfsz	(??_LCD_write_command+1)^0,f,c
  3196   0013DC  EFEB  F009         	goto	u815
  3197   0013E0  0E01               	movlw	1
  3198   0013E2  1603               	andwf	??_LCD_write_command^0,f,c
  3199   0013E4  3A03               	swapf	??_LCD_write_command^0,f,c
  3200   0013E6  4603               	rlncf	??_LCD_write_command^0,f,c
  3201   0013E8  508C               	movf	140,w,c	;volatile
  3202   0013EA  1803               	xorwf	??_LCD_write_command^0,w,c
  3203   0013EC  0BDF               	andlw	-33
  3204   0013EE  1803               	xorwf	??_LCD_write_command^0,w,c
  3205   0013F0  6E8C               	movwf	140,c	;volatile
  3206                           
  3207                           ;LCD.c: 54:     LATDbits.LATD4 = (command & 0b00010000) >> 4;
  3208   0013F2  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  3209   0013F6  3A03               	swapf	??_LCD_write_command^0,f,c
  3210   0013F8  0E0F               	movlw	15
  3211   0013FA  1603               	andwf	??_LCD_write_command^0,f,c
  3212   0013FC  0E01               	movlw	1
  3213   0013FE  1603               	andwf	??_LCD_write_command^0,f,c
  3214   001400  3A03               	swapf	??_LCD_write_command^0,f,c
  3215   001402  508C               	movf	140,w,c	;volatile
  3216   001404  1803               	xorwf	??_LCD_write_command^0,w,c
  3217   001406  0BEF               	andlw	-17
  3218   001408  1803               	xorwf	??_LCD_write_command^0,w,c
  3219   00140A  6E8C               	movwf	140,c	;volatile
  3220   00140C                     
  3221                           ;LCD.c: 57:     LCD_pulse_clock();
  3222   00140C  EC05  F00D         	call	_LCD_pulse_clock	;wreg free
  3223   001410                     
  3224                           ;LCD.c: 60:     LATDbits.LATD7 = (command & 0b00001000) >> 3;
  3225   001410  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  3226   001414  90D8               	bcf	status,0,c
  3227   001416  3203               	rrcf	??_LCD_write_command^0,f,c
  3228   001418  90D8               	bcf	status,0,c
  3229   00141A  3203               	rrcf	??_LCD_write_command^0,f,c
  3230   00141C  90D8               	bcf	status,0,c
  3231   00141E  3203               	rrcf	??_LCD_write_command^0,f,c
  3232   001420  0E01               	movlw	1
  3233   001422  1603               	andwf	??_LCD_write_command^0,f,c
  3234   001424  3203               	rrcf	??_LCD_write_command^0,f,c
  3235   001426  3203               	rrcf	??_LCD_write_command^0,f,c
  3236   001428  508C               	movf	140,w,c	;volatile
  3237   00142A  1803               	xorwf	??_LCD_write_command^0,w,c
  3238   00142C  0B7F               	andlw	-129
  3239   00142E  1803               	xorwf	??_LCD_write_command^0,w,c
  3240   001430  6E8C               	movwf	140,c	;volatile
  3241   001432                     
  3242                           ;LCD.c: 61:     LATDbits.LATD6 = (command & 0b00000100) >> 2;
  3243   001432  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  3244   001436  90D8               	bcf	status,0,c
  3245   001438  3203               	rrcf	??_LCD_write_command^0,f,c
  3246   00143A  90D8               	bcf	status,0,c
  3247   00143C  3203               	rrcf	??_LCD_write_command^0,f,c
  3248   00143E  0E01               	movlw	1
  3249   001440  1603               	andwf	??_LCD_write_command^0,f,c
  3250   001442  3A03               	swapf	??_LCD_write_command^0,f,c
  3251   001444  4603               	rlncf	??_LCD_write_command^0,f,c
  3252   001446  4603               	rlncf	??_LCD_write_command^0,f,c
  3253   001448  508C               	movf	140,w,c	;volatile
  3254   00144A  1803               	xorwf	??_LCD_write_command^0,w,c
  3255   00144C  0BBF               	andlw	-65
  3256   00144E  1803               	xorwf	??_LCD_write_command^0,w,c
  3257   001450  6E8C               	movwf	140,c	;volatile
  3258   001452                     
  3259                           ;LCD.c: 62:     LATDbits.LATD5 = (command & 0b00000010) >> 1;
  3260   001452  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  3261   001456  90D8               	bcf	status,0,c
  3262   001458  3203               	rrcf	??_LCD_write_command^0,f,c
  3263   00145A  0E01               	movlw	1
  3264   00145C  1603               	andwf	??_LCD_write_command^0,f,c
  3265   00145E  3A03               	swapf	??_LCD_write_command^0,f,c
  3266   001460  4603               	rlncf	??_LCD_write_command^0,f,c
  3267   001462  508C               	movf	140,w,c	;volatile
  3268   001464  1803               	xorwf	??_LCD_write_command^0,w,c
  3269   001466  0BDF               	andlw	-33
  3270   001468  1803               	xorwf	??_LCD_write_command^0,w,c
  3271   00146A  6E8C               	movwf	140,c	;volatile
  3272   00146C                     
  3273                           ;LCD.c: 63:     LATDbits.LATD4 = (command & 0b00000001) ;
  3274   00146C  C005  F003         	movff	LCD_write_command@command,??_LCD_write_command
  3275   001470  0E01               	movlw	1
  3276   001472  1603               	andwf	??_LCD_write_command^0,f,c
  3277   001474  3A03               	swapf	??_LCD_write_command^0,f,c
  3278   001476  508C               	movf	140,w,c	;volatile
  3279   001478  1803               	xorwf	??_LCD_write_command^0,w,c
  3280   00147A  0BEF               	andlw	-17
  3281   00147C  1803               	xorwf	??_LCD_write_command^0,w,c
  3282   00147E  6E8C               	movwf	140,c	;volatile
  3283   001480                     
  3284                           ;LCD.c: 66:     LCD_pulse_clock();
  3285   001480  EC05  F00D         	call	_LCD_pulse_clock	;wreg free
  3286   001484  0012               	return		;funcret
  3287   001486                     __end_of_LCD_write_command:
  3288                           	callstack 0
  3289                           
  3290 ;; *************** function _LCD_pulse_clock *****************
  3291 ;; Defined at:
  3292 ;;		line 34 in file "LCD.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_LCD_write_command
  3317 ;;		_LCD_write_data
  3318 ;;		_LCD_init
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text20
  3323   001A0A                     __ptext20:
  3324                           	callstack 0
  3325   001A0A                     _LCD_pulse_clock:
  3326                           	callstack 26
  3327   001A0A                     
  3328                           ;LCD.c: 36:   LATDbits.LATD3 = 1;
  3329   001A0A  868C               	bsf	140,3,c	;volatile
  3330   001A0C                     
  3331                           ;LCD.c: 37:   _delay((unsigned long)((60)*(16000000/4000000.0)));
  3332   001A0C  0E50               	movlw	80
  3333   001A0E                     u1337:
  3334   001A0E  2EE8               	decfsz	wreg,f,c
  3335   001A10  D7FE               	bra	u1337
  3336   001A12                     
  3337                           ;LCD.c: 38:   LATDbits.LATD3 = 0;
  3338   001A12  968C               	bcf	140,3,c	;volatile
  3339   001A14  0012               	return		;funcret
  3340   001A16                     __end_of_LCD_pulse_clock:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function _UART_ISR *****************
  3344 ;; Defined at:
  3345 ;;		line 87 in file "OBCII_PIC18F46K22.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;Total ram usage:        2 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		Interrupt level 2
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	intcode
  3373   000008                     __pintcode:
  3374                           	callstack 0
  3375   000008                     _UART_ISR:
  3376                           	callstack 24
  3377                           
  3378                           ;incstack = 0
  3379   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3380   00000A  CFD9 F001          	movff	fsr2l,??_UART_ISR
  3381   00000E  CFDA F002          	movff	fsr2h,??_UART_ISR+1
  3382   000012                     
  3383                           ;OBCII_PIC18F46K22.c: 88:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
  3384   000012  AA9D               	btfss	157,5,c	;volatile
  3385   000014  EF0E  F000         	goto	i2u107_41
  3386   000018  EF10  F000         	goto	i2u107_40
  3387   00001C                     i2u107_41:
  3388   00001C  EF63  F000         	goto	i2l82
  3389   000020                     i2u107_40:
  3390   000020  AA9E               	btfss	158,5,c	;volatile
  3391   000022  EF15  F000         	goto	i2u108_41
  3392   000026  EF17  F000         	goto	i2u108_40
  3393   00002A                     i2u108_41:
  3394   00002A  EF63  F000         	goto	i2l82
  3395   00002E                     i2u108_40:
  3396   00002E                     
  3397                           ;OBCII_PIC18F46K22.c: 89:         RX_char = RCREG1;
  3398   00002E  CFAE F04E          	movff	4014,_RX_char	;volatile
  3399                           
  3400                           ;OBCII_PIC18F46K22.c: 92:         if (RCSTAbits.OERR) {
  3401   000032  A2AB               	btfss	171,1,c	;volatile
  3402   000034  EF1E  F000         	goto	i2u109_41
  3403   000038  EF20  F000         	goto	i2u109_40
  3404   00003C                     i2u109_41:
  3405   00003C  EF22  F000         	goto	i2l1870
  3406   000040                     i2u109_40:
  3407   000040                     
  3408                           ;OBCII_PIC18F46K22.c: 93:             RCSTAbits.CREN = 0;
  3409   000040  98AB               	bcf	171,4,c	;volatile
  3410                           
  3411                           ;OBCII_PIC18F46K22.c: 94:             RCSTAbits.CREN = 1;
  3412   000042  88AB               	bsf	171,4,c	;volatile
  3413   000044                     i2l1870:
  3414                           
  3415                           ;OBCII_PIC18F46K22.c: 98:         if ((RX_char >= 32 && RX_char <= 126) && RX_char != '>
      +                          ') {
  3416   000044  0E1F               	movlw	31
  3417   000046  644E               	cpfsgt	_RX_char^0,c
  3418   000048  EF28  F000         	goto	i2u110_41
  3419   00004C  EF2A  F000         	goto	i2u110_40
  3420   000050                     i2u110_41:
  3421   000050  EF42  F000         	goto	i2l1880
  3422   000054                     i2u110_40:
  3423   000054  0E7F               	movlw	127
  3424   000056  604E               	cpfslt	_RX_char^0,c
  3425   000058  EF30  F000         	goto	i2u111_41
  3426   00005C  EF32  F000         	goto	i2u111_40
  3427   000060                     i2u111_41:
  3428   000060  EF42  F000         	goto	i2l1880
  3429   000064                     i2u111_40:
  3430   000064  0E3E               	movlw	62
  3431   000066  184E               	xorwf	_RX_char^0,w,c
  3432   000068  B4D8               	btfsc	status,2,c
  3433   00006A  EF39  F000         	goto	i2u112_41
  3434   00006E  EF3B  F000         	goto	i2u112_40
  3435   000072                     i2u112_41:
  3436   000072  EF42  F000         	goto	i2l1880
  3437   000076                     i2u112_40:
  3438   000076                     
  3439                           ;OBCII_PIC18F46K22.c: 99:             buffer[buffer_count] = RX_char;
  3440   000076  504F               	movf	_buffer_count^0,w,c
  3441   000078  0F80               	addlw	low _buffer
  3442   00007A  6ED9               	movwf	fsr2l,c
  3443   00007C  6ADA               	clrf	fsr2h,c
  3444   00007E  C04E  FFDF         	movff	_RX_char,indf2
  3445   000082                     
  3446                           ;OBCII_PIC18F46K22.c: 100:             buffer_count++;
  3447   000082  2A4F               	incf	_buffer_count^0,f,c
  3448   000084                     i2l1880:
  3449                           
  3450                           ;OBCII_PIC18F46K22.c: 103:         if (RX_char == '>' || RX_char == '\n' || buffer_count
      +                           >= 32 -1) {
  3451   000084  0E3E               	movlw	62
  3452   000086  184E               	xorwf	_RX_char^0,w,c
  3453   000088  B4D8               	btfsc	status,2,c
  3454   00008A  EF49  F000         	goto	i2u113_41
  3455   00008E  EF4B  F000         	goto	i2u113_40
  3456   000092                     i2u113_41:
  3457   000092  EF5C  F000         	goto	i2l1886
  3458   000096                     i2u113_40:
  3459   000096  0E0A               	movlw	10
  3460   000098  184E               	xorwf	_RX_char^0,w,c
  3461   00009A  B4D8               	btfsc	status,2,c
  3462   00009C  EF52  F000         	goto	i2u114_41
  3463   0000A0  EF54  F000         	goto	i2u114_40
  3464   0000A4                     i2u114_41:
  3465   0000A4  EF5C  F000         	goto	i2l1886
  3466   0000A8                     i2u114_40:
  3467   0000A8  0E1E               	movlw	30
  3468   0000AA  644F               	cpfsgt	_buffer_count^0,c
  3469   0000AC  EF5A  F000         	goto	i2u115_41
  3470   0000B0  EF5C  F000         	goto	i2u115_40
  3471   0000B4                     i2u115_41:
  3472   0000B4  EF63  F000         	goto	i2l82
  3473   0000B8                     i2u115_40:
  3474   0000B8                     i2l1886:
  3475                           
  3476                           ;OBCII_PIC18F46K22.c: 104:             buffer[buffer_count] = '\0';
  3477   0000B8  504F               	movf	_buffer_count^0,w,c
  3478   0000BA  0F80               	addlw	low _buffer
  3479   0000BC  6ED9               	movwf	fsr2l,c
  3480   0000BE  6ADA               	clrf	fsr2h,c
  3481   0000C0  6ADF               	clrf	indf2,c
  3482   0000C2                     
  3483                           ;OBCII_PIC18F46K22.c: 105:             message_complete = 1;
  3484   0000C2  0E01               	movlw	1
  3485   0000C4  6E4D               	movwf	_message_complete^0,c	;volatile
  3486   0000C6                     i2l82:
  3487   0000C6  C002  FFDA         	movff	??_UART_ISR+1,fsr2h
  3488   0000CA  C001  FFD9         	movff	??_UART_ISR,fsr2l
  3489   0000CE  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3490   0000D0  0011               	retfie		f
  3491   0000D2                     __end_of_UART_ISR:
  3492                           	callstack 0
  3493                           
  3494                           	psect	rparam
  3495   000001                     ___rparam_used  equ	1
  3496   000000                     ___param_bank   equ	0
  3497   000000                     __Lparam        equ	__Lrparam
  3498   000000                     __Hparam        equ	__Hrparam
  3499                           
  3500                           	psect	temp
  3501   000052                     btemp:
  3502                           	callstack 0
  3503   000052                     	ds	1
  3504   000052                     int$flags       set	btemp
  3505   000053                     wtemp8          set	btemp+1
  3506   000053                     ttemp5          set	btemp+1
  3507   000056                     ttemp6          set	btemp+4
  3508   00005A                     ttemp7          set	btemp+8
  3509                           
  3510                           	psect	config
  3511                           
  3512                           ; Padding undefined space
  3513   300000                     	org	3145728
  3514   300000  FF                 	db	255
  3515                           
  3516                           ;Config register CONFIG1H @ 0x300001
  3517                           ;	Oscillator Selection bits
  3518                           ;	FOSC = INTIO67, Internal oscillator block
  3519                           ;	4X PLL Enable
  3520                           ;	PLLCFG = ON, Oscillator multiplied by 4
  3521                           ;	Primary clock enable bit
  3522                           ;	PRICLKEN = ON, Primary clock is always enabled
  3523                           ;	Fail-Safe Clock Monitor Enable bit
  3524                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3525                           ;	Internal/External Oscillator Switchover bit
  3526                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3527   300001                     	org	3145729
  3528   300001  38                 	db	56
  3529                           
  3530                           ;Config register CONFIG2L @ 0x300002
  3531                           ;	Power-up Timer Enable bit
  3532                           ;	PWRTEN = ON, Power up timer enabled
  3533                           ;	Brown-out Reset Enable bits
  3534                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3535                           ;	Brown Out Reset Voltage bits
  3536                           ;	BORV = 250, VBOR set to 2.50 V nominal
  3537   300002                     	org	3145730
  3538   300002  0E                 	db	14
  3539                           
  3540                           ;Config register CONFIG2H @ 0x300003
  3541                           ;	Watchdog Timer Enable bits
  3542                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3543                           ;	Watchdog Timer Postscale Select bits
  3544                           ;	WDTPS = 32768, 1:32768
  3545   300003                     	org	3145731
  3546   300003  3C                 	db	60
  3547                           
  3548                           ; Padding undefined space
  3549   300004                     	org	3145732
  3550   300004  FF                 	db	255
  3551                           
  3552                           ;Config register CONFIG3H @ 0x300005
  3553                           ;	CCP2 MUX bit
  3554                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3555                           ;	PORTB A/D Enable bit
  3556                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  3557                           ;	P3A/CCP3 Mux bit
  3558                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3559                           ;	HFINTOSC Fast Start-up
  3560                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3561                           ;	Timer3 Clock input mux bit
  3562                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3563                           ;	ECCP2 B output mux bit
  3564                           ;	P2BMX = PORTD2, P2B is on RD2
  3565                           ;	MCLR Pin Enable bit
  3566                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3567   300005                     	org	3145733
  3568   300005  BF                 	db	191
  3569                           
  3570                           ;Config register CONFIG4L @ 0x300006
  3571                           ;	Stack Full/Underflow Reset Enable bit
  3572                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3573                           ;	Single-Supply ICSP Enable bit
  3574                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  3575                           ;	Extended Instruction Set Enable bit
  3576                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3577                           ;	Background Debug
  3578                           ;	DEBUG = 0x1, unprogrammed default
  3579   300006                     	org	3145734
  3580   300006  85                 	db	133
  3581                           
  3582                           ; Padding undefined space
  3583   300007                     	org	3145735
  3584   300007  FF                 	db	255
  3585                           
  3586                           ;Config register CONFIG5L @ 0x300008
  3587                           ;	Code Protection Block 0
  3588                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3589                           ;	Code Protection Block 1
  3590                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3591                           ;	Code Protection Block 2
  3592                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3593                           ;	Code Protection Block 3
  3594                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3595   300008                     	org	3145736
  3596   300008  0F                 	db	15
  3597                           
  3598                           ;Config register CONFIG5H @ 0x300009
  3599                           ;	Boot Block Code Protection bit
  3600                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3601                           ;	Data EEPROM Code Protection bit
  3602                           ;	CPD = OFF, Data EEPROM not code-protected
  3603   300009                     	org	3145737
  3604   300009  C0                 	db	192
  3605                           
  3606                           ;Config register CONFIG6L @ 0x30000A
  3607                           ;	Write Protection Block 0
  3608                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3609                           ;	Write Protection Block 1
  3610                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3611                           ;	Write Protection Block 2
  3612                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3613                           ;	Write Protection Block 3
  3614                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3615   30000A                     	org	3145738
  3616   30000A  0F                 	db	15
  3617                           
  3618                           ;Config register CONFIG6H @ 0x30000B
  3619                           ;	Configuration Register Write Protection bit
  3620                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3621                           ;	Boot Block Write Protection bit
  3622                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3623                           ;	Data EEPROM Write Protection bit
  3624                           ;	WRTD = OFF, Data EEPROM not write-protected
  3625   30000B                     	org	3145739
  3626   30000B  E0                 	db	224
  3627                           
  3628                           ;Config register CONFIG7L @ 0x30000C
  3629                           ;	Table Read Protection Block 0
  3630                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3631                           ;	Table Read Protection Block 1
  3632                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3633                           ;	Table Read Protection Block 2
  3634                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3635                           ;	Table Read Protection Block 3
  3636                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3637   30000C                     	org	3145740
  3638   30000C  0F                 	db	15
  3639                           
  3640                           ;Config register CONFIG7H @ 0x30000D
  3641                           ;	Boot Block Table Read Protection bit
  3642                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3643   30000D                     	org	3145741
  3644   30000D  40                 	db	64
  3645                           tosu	equ	0xFFF
  3646                           tosh	equ	0xFFE
  3647                           tosl	equ	0xFFD
  3648                           stkptr	equ	0xFFC
  3649                           pclatu	equ	0xFFB
  3650                           pclath	equ	0xFFA
  3651                           pcl	equ	0xFF9
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           prodh	equ	0xFF4
  3657                           prodl	equ	0xFF3
  3658                           indf0	equ	0xFEF
  3659                           postinc0	equ	0xFEE
  3660                           postdec0	equ	0xFED
  3661                           preinc0	equ	0xFEC
  3662                           plusw0	equ	0xFEB
  3663                           fsr0h	equ	0xFEA
  3664                           fsr0l	equ	0xFE9
  3665                           wreg	equ	0xFE8
  3666                           indf1	equ	0xFE7
  3667                           postinc1	equ	0xFE6
  3668                           postdec1	equ	0xFE5
  3669                           preinc1	equ	0xFE4
  3670                           plusw1	equ	0xFE3
  3671                           fsr1h	equ	0xFE2
  3672                           fsr1l	equ	0xFE1
  3673                           bsr	equ	0xFE0
  3674                           indf2	equ	0xFDF
  3675                           postinc2	equ	0xFDE
  3676                           postdec2	equ	0xFDD
  3677                           preinc2	equ	0xFDC
  3678                           plusw2	equ	0xFDB
  3679                           fsr2h	equ	0xFDA
  3680                           fsr2l	equ	0xFD9
  3681                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        2
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      81
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_RPM@rpm_string(COMRAM[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_RPM@rpm_string(COMRAM[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 32
		 -> buffer(BANK0[32]), print_RPM@rpm_string(COMRAM[16]), STR_4(CODE[4]), STR_6(CODE[6]), 
		 -> STR_7(CODE[6]), 

    S1270$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> print_RPM@rpm_string(COMRAM[16]), 

    S1270$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> print_RPM@rpm_string(COMRAM[16]), 

    UART1_SendString@string	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), STR_2(CODE[6]), STR_5(CODE[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_print_RPM
    _print_Vbatt->_LCD_write_string
    _print_RPM->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _UART1_SendString->_UART1_SendChar
    _LCD_write_string->_LCD_write_data
    _LCD_cursor_set->_LCD_write_command
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4185
                                             65 COMRAM     2     2      0
                          _LCD_clear
                           _LCD_init
                         _UART1_Init
                   _UART1_SendString
                          _print_RPM
                        _print_Vbatt
 ---------------------------------------------------------------------------------
 (1) _print_Vbatt                                          2     2      0     829
                                             10 COMRAM     2     2      0
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
 ---------------------------------------------------------------------------------
 (1) _print_RPM                                           25    25      0    2538
                                             40 COMRAM    25    25      0
                     _LCD_cursor_set
                   _LCD_write_string
                   _UART1_SendString
                  _hex_char_to_value
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    14      4    1329
                                             24 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    1128
                                             20 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    1003
                                             10 COMRAM    10     7      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     230
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     161
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     164
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _hex_char_to_value                                    1     1      0     261
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART1_SendString                                     4     3      1     122
                                              3 COMRAM     4     3      1
                     _UART1_SendChar
 ---------------------------------------------------------------------------------
 (3) _UART1_SendChar                                       1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     5     3      2     327
                                              5 COMRAM     5     3      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (3) _LCD_write_data                                       3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_set                                       2     1      1     380
                                              5 COMRAM     2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     464
                                              6 COMRAM     2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     232
                                              5 COMRAM     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_write_command                                    3     3      0     232
                                              2 COMRAM     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse_clock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _UART_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _UART1_Init
   _UART1_SendString
     _UART1_SendChar
   _print_RPM
     _LCD_cursor_set
       _LCD_write_command
     _LCD_write_string
       _LCD_write_data
         _LCD_pulse_clock
     _UART1_SendString
     _hex_char_to_value
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___lwdiv
           ___lwmod
           _fputc
             _putch
   _print_Vbatt
     _LCD_cursor_set
     _LCD_write_string
     _UART1_SendString

 _UART_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3895      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      64     40.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     67      81     86.2%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        81      0       0      0.0%
BITBANK15           56      0       0      0.0%
BANK15              56      0       0      0.0%
BITBIGSFRlh         31      0       0      0.0%
BITBIGSFRlll         2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     145      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Apr 26 23:44:55 2025

                       l71 19D6                         l91 19F6                         l94 1A08  
                       l88 18FA                         l98 15AC               print_RPM@RPM 0040  
                      l112 1628                        l202 171E                        l106 128C  
                      l132 1A14                        l141 16A4                        l135 1484  
                      l144 180E                        l145 1824                        l146 183A  
                      l138 1388                        l172 19F2                        l148 1856  
                      l734 1792                        l727 178A                        l744 17F6  
                      l737 17EE                        l923 19AA                        l960 1190  
                      l990 1A18                        l967 1976                        l979 152E  
                      u700 14A6                        u701 14A2                        u630 173A  
                      u710 14CC                        u631 1736                        u711 14C8  
                      u640 1758                        u720 14FE                        u641 1754  
                      u721 14FA                        u650 1774                        u730 104A  
                      u651 1770                        u731 1046                        u900 157A  
                      u660 17A6                        u740 1088                        u805 13B0  
                      u901 1576                        u661 17A2                        u741 1084  
                      u910 1592                        u670 17C4                        u750 1104  
                      u815 13D6                        u911 158E                        u671 17C0  
                      u751 1100                        u920 15A2                        u680 17DA  
                      u760 1114                        u825 129A                        u921 159E  
                      u681 17D6                        u761 1110                        u930 180A  
                      u690 1496                        u770 1146                        u850 196E  
                      u931 1806                        u835 12B4                        u691 1492  
                      u771 1142                        u851 196A                        u940 1820  
                      u780 1A04                        u860 18FA                        u941 181C  
                      u845 12DA                        u781 1A00                        u861 18F6  
                      u950 1836                        u870 1542                        u951 1832  
                      u871 153E                        u960 184C                        u880 1552  
                      u961 1848                        u881 154E                        u970 16DA  
                      u890 156A                        u795 1396                        u891 1566  
                      u980 170E                        u990 171E                        u991 171A  
                      u977 16D0                        u987 1704                        wreg 0FE8  
               _TXSTA1bits 0FAC                       l1260 19C8                       l1500 1742  
                     l1270 19D2                       l1262 19CA                       l1254 19AC  
                     l1510 177C                       l1502 174A                       l1272 19D4  
                     l1264 19CC                       l1256 19BE                       l1600 1A04  
                     l1512 177E                       l1504 1758                       l1520 17AE  
                     l1610 1432                       l1602 138C                       l1266 19CE  
                     l1258 19C6                       l1514 1784                       l1506 175E  
                     l1530 17E8                       l1522 17B6                       l1612 1452  
                     l1604 138E                       l1268 19D0                       l1700 180A  
                     l1620 1292                       l1508 1774                       l1524 17C4  
                     l1516 1794                       l1540 14CC                       l1532 1486  
                     l1550 1A12                       l1614 146C                       l1606 140C  
                     l1702 1820                       l1630 1370                       l1622 1310  
                     l1710 16A6                       l1526 17DA                       l1518 17A6  
                     l1542 14FE                       l1534 1496                       l1616 1480  
                     l1608 1410                       l1720 1642                       l1704 1836  
                     l1632 1384                       l1624 1314                       l1712 16AC  
                     l1528 17E2                       l1536 14A6                       l1560 1062  
                     l1552 1028                       l1640 196E                       l1546 1A0A  
                     l1730 1662                       l1722 165A                       l1706 184C  
                     l1626 1336                       l1618 1290                       l1714 16DE  
                     l1650 18B2                       l1538 14B0                       l1570 10B2  
                     l1562 106C                       l1554 104A                       l1634 193A  
                     l1548 1A0C                       l1644 19D8                       l1740 1684  
                     l1732 1666                       l1724 165C                       l1708 1850  
                     l1628 1356                       l1716 16E0                       l1652 18BE  
                     l1660 1542                       l1580 1132                       l1572 10D6  
                     l1564 1088                       l1556 1052                       l1636 1942  
                     l1646 19DE                       l1750 1694                       l1742 1686  
                     l1734 1678                       l1726 165E                       l1718 162A  
                     l1654 18D4                       l1670 157A                       l1662 1552  
                     l1494 1720                       l1582 1134                       l1574 10F2  
                     l1566 10A0                       l1558 105E                       l1638 1952  
                     l1648 19EC                       l1752 169A                       l1744 1688  
                     l1736 167E                       l1728 1660                       l1656 18D8  
                     l1496 1728                       l1576 1104                       l1568 10AE  
                     l1592 116E                       l1760 11AA                       l1754 16A0  
                     l1746 168A                       l1738 1682                       l1682 15AA  
                     l1674 1582                       l1666 155A                       l1658 1532  
                     l1498 173A                       l1578 1118                       l1586 114A  
                     l1690 1988                       l1770 125E                       l1762 120E  
                     l1850 1868                       l1842 1858                       l1748 168E  
                     l1676 1592                       l1668 156A                       l1588 1162  
                     l1692 1990                       l1772 1268                       l1764 1230  
                     l1756 1192                       l1780 15AE                       l1860 18A6  
                     l1852 1880                       l1844 185C                       l1598 19F6  
                     l1678 15A2                       l1694 19A0                       l1686 1978  
                     l1774 1272                       l1766 1244                       l1758 119A  
                     l1790 15F4                       l1782 15B6                       l1854 1888  
                     l1846 1860                       l1688 1980                       l1776 1274  
                     l1768 124E                       l1792 15FE                       l1784 15C6  
                     l1856 189E                       l1848 1864                       l1698 17FA  
                     l1778 1276                       l1794 160E                       l1786 15D0  
                     l1858 18A2                       l1796 1610                       l1788 15E0  
                     l1798 1612                       STR_1 1001                       STR_2 1007  
                     STR_3 1023                       STR_4 101F                       STR_5 100D  
                     STR_6 1019                       STR_7 1013                       u1000 11AA  
                     u1001 11A6                       u1010 15C6                       u1011 15C2  
                     u1307 166C                       u1317 167A                       u1327 19E4  
                     u1337 1A0E                       u1257 1872                       u1267 1892  
                     u1277 161C                       u1287 1280                       u1297 164C  
                     i2l82 00C6             _UART1_SendChar 19F4                       _dbuf 0060  
                     _main 1858        print_RPM@rpm_string 002C                       _prec 004A  
                     fsr0h 0FEA                       fsr1h 0FE2                       indf0 0FEF  
                     fsr2h 0FDA                       fsr0l 0FE9                       indf2 0FDF  
                     fsr1l 0FE1                       fsr2l 0FD9                       btemp 0052  
                     start 00D2               ___param_bank 0000                ?_UART1_Init 0001  
             _BAUDCON1bits 0FB8           __end_of_LCD_init 16A6                      ?_main 0001  
          __end_of___lwdiv 1794            __end_of___lwmod 17F8               vfpfcnvrt@fmt 000C  
                    _TXREG 0FAD           __end_of_UART_ISR 00D2     __end_of_UART1_SendChar 1A0A  
                    _flags 004C                      _fputc 1486                      _width 0048  
                    _putch 1A18                      tablat 0FF5          UART1_SendString@i 0006  
                    ttemp5 0053                      ttemp6 0056                      ttemp7 005A  
                    status 0FD8                      wtemp8 0053            __end_of_sprintf 19AC  
          __initialization 18FC               __end_of_main 18B2          ?_LCD_write_string 0006  
                   ??_main 0042              __activetblptr 0002         ??_LCD_write_string 0008  
        __end_of_LCD_clear 19F4            ?_UART1_SendChar 0001                     ?_fputc 0003  
                   ?_putch 0001                     _ANSELC 0F3A                     i2l1870 0044  
                   i2l1862 0012                     i2l1872 0054                     i2l1880 0084  
                   i2l1864 0020                     i2l1882 0096                     i2l1874 0064  
                   i2l1866 002E                     i2l1884 00A8                     i2l1876 0076  
                   i2l1868 0040                     i2l1886 00B8                     i2l1878 0082  
                   i2l1888 00C2                     _RCREG1 0FAE     LCD_write_string@string 0006  
                   _OSCCON 0FD3                     _SPBRG1 0FAF           _UART1_SendString 18B2  
             vfprintf@cfmt 0018                  ??___lwdiv 0007                  ??___lwmod 0007  
                   _buffer 0080                     clear_0 191A                     clear_1 1926  
                   isa$std 0001                     fputc@c 0003               __pdataCOMRAM 0050  
             __mediumconst 1000                     tblptrh 0FF7                     tblptrl 0FF6  
                   tblptru 0FF8                     putch@c 0001           __end_of_vfprintf 1978  
                ??_sprintf 001D               ?_print_Vbatt 0001                 __accesstop 0060  
  __end_of__initialization 192C                  ?_LCD_init 0001              ___rparam_used 0001  
          UART1_SendChar@c 0003             __pcstackCOMRAM 0001                  ?_UART_ISR 0001  
           _LCD_entry_mode 0050          _LCD_write_command 138A              __end_of_fputc 1530  
            __end_of_putch 1A1A             _LCD_cursor_set 17F8         ?_LCD_write_command 0001  
        _hex_char_to_value 1530         ?_hex_char_to_value 0001        ??_LCD_write_command 0003  
                  ??_fputc 0006                    ??_putch 0003                 __pbssBANK0 0060  
      ??_hex_char_to_value 0003                 ??_LCD_init 0007  __end_of_LCD_write_command 1486  
             ??_UART1_Init 0003                 ??_UART_ISR 0001     __end_of_LCD_cursor_set 1858  
__end_of_hex_char_to_value 15AE                    _SPBRGH1 0FB0   LCD_write_command@command 0005  
       __end_of_UART1_Init 19D8                    _RX_char 004E                    __Hparam 0000  
                  __Lparam 0000           _message_complete 004D            ?_LCD_cursor_set 0006  
           _LCD_write_data 128E                    ___lwdiv 1720                    ___lwmod 1794  
                ?_vfprintf 0015               __psmallconst 1000                    __pcinit 18FC  
                  __ramtop 1000                    __ptext0 1858                    __ptext1 15AE  
                  __ptext2 1192                    __ptext3 1978                    __ptext4 193A  
                  __ptext5 1028                    __ptext6 1486                    __ptext7 1A18  
                  __ptext8 1794                    __ptext9 1720           ??_UART1_SendChar 0003  
 __end_of_UART1_SendString 18FC                    _sprintf 1978                  _LCD_clear 19D8  
     end_of_initialization 192C                    fputc@fp 0005              __Lmediumconst 0000  
     LCD_cursor_set@column 0006          __end_of_print_RPM 128E               _buffer_count 004F  
      _LCD_display_control 0051     __end_of_LCD_write_data 138A          __end_of_vfpfcnvrt 1192  
                _RCSTAbits 0FAB                    postdec2 0FDD                    postinc0 0FEE  
                  postinc1 0FE6                    postinc2 0FDE           vfpfcnvrt@convarg 000F  
               ??_vfprintf 0018          ??_LCD_pulse_clock 0003                  _TRISCbits 0F94  
                _TRISDbits 0F95                 ?_LCD_clear 0001                  _TXSTAbits 0FAC  
          ?_LCD_write_data 0001                vfpfcnvrt@ap 000D                vfpfcnvrt@cp 0013  
              vfpfcnvrt@fp 000B              __pidataCOMRAM 1A16        start_initialization 18FC  
              vfprintf@fmt 0016                __pbssCOMRAM 0044                ??_LCD_clear 0006  
         _LCD_write_string 16A6           ??_LCD_cursor_set 0007           ___lwdiv@dividend 0003  
                __pintcode 0008                   ?___lwdiv 0003                   ?___lwmod 0003  
   UART1_SendString@string 0004                __smallconst 1000          ?_UART1_SendString 0004  
         ___lwdiv@quotient 0007                   ?_sprintf 0019         LCD_write_data@data 0005  
       ??_UART1_SendString 0005                   _LATDbits 0F8C                   _LCD_init 162A  
                 _PIE1bits 0F9D                   i2u110_40 0054                   i2u110_41 0050  
                 i2u111_40 0064                   i2u111_41 0060                   i2u112_40 0076  
                 i2u112_41 0072                   i2u113_40 0096                   i2u113_41 0092  
                 i2u114_40 00A8                   i2u114_41 00A4                   i2u115_40 00B8  
                 i2u107_40 0020                   i2u115_41 00B4                   i2u107_41 001C  
                 i2u108_40 002E                   i2u108_41 002A                   i2u109_40 0040  
                 i2u109_41 003C                   _PIR1bits 0F9E            _LCD_pulse_clock 1A0A  
                 _UART_ISR 0008                  _print_RPM 1192                  _vfpfcnvrt 1028  
               print_RPM@A 003C                 print_RPM@B 003E                 vfpfcnvrt@c 0014  
            ??_print_Vbatt 000B           ??_LCD_write_data 0003                   __Hrparam 0000  
                modff@F522 0044                 vfprintf@ap 0017                   __Lrparam 0000  
               vfprintf@fp 0015         hex_char_to_value@c 0003          LCD_cursor_set@row 0007  
               ?_print_RPM 0001                 ?_vfpfcnvrt 000B                 sprintf@fmt 001A  
          ___lwdiv@divisor 0005            ___lwdiv@counter 0009                   __ptext10 1530  
                 __ptext11 18B2                   __ptext20 1A0A                   __ptext12 19F4  
                 __ptext13 16A6                   __ptext14 128E                   __ptext15 17F8  
                 __ptext16 19AC                   __ptext17 162A                   __ptext18 19D8  
                 __ptext19 138A    __end_of_LCD_pulse_clock 1A16        __end_of_print_Vbatt 162A  
                 isa$xinst 0000                   int$flags 0052                   _vfprintf 193A  
 __end_of_LCD_write_string 1720                 _INTCONbits 0FF2          LCD_write_string@i 000A  
                 intlevel2 0000                  sprintf@ap 001D           ___lwmod@dividend 0003  
               _RCSTA1bits 0FAB                 _UART1_Init 19AC                ??_print_RPM 0029  
              ??_vfpfcnvrt 000E                   sprintf@f 001E                   sprintf@s 0019  
          ___lwmod@divisor 0005            ___lwmod@counter 0007                _print_Vbatt 15AE  
         ?_LCD_pulse_clock 0001  
